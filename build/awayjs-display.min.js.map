{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CapsStyle.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/GradientType.ts",
    "awayjs-display/lib/base/GraphicsPathWinding.ts",
    "awayjs-display/lib/base/Graphics.ts",
    "awayjs-display/lib/base/InterpolationMethod.ts",
    "awayjs-display/lib/base/JointStyle.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineScaleMode.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/PixelSnapping.ts",
    "awayjs-display/lib/base/SpreadMethod.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleCulling.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/display/ContextMode.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SceneEvent.ts",
    "awayjs-display/lib/events/StageEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/CSSMaterialBase.ts",
    "awayjs-display/lib/materials/CurveMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/NullNode.ts",
    "awayjs-display/lib/partition/Partition.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/CSSBillboardRenderable.ts",
    "awayjs-display/lib/pool/CSSLineSegmentRenderable.ts",
    "awayjs-display/lib/pool/CSSRenderableBase.ts",
    "awayjs-display/lib/pool/CSSSkyboxRenderable.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/render/CSSDefaultRenderer.ts",
    "awayjs-display/lib/render/CSSRendererBase.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/animators/IAnimationSet",
    "module",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetType",
    "NamedAssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "ANIMATION_NODE",
    "awayjs-core/lib/library/AssetType",
    "undefined",
    "awayjs-core/lib/library/NamedAssetBase",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Vector3D",
    "SubGeometryBase",
    "CurveSubMesh",
    "SubGeometryEvent",
    "CurveSubGeometry",
    "concatenatedArrays",
    "_positionsDirty",
    "_curvesDirty",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_vertexNormalsDirty",
    "_vertexTangentsDirty",
    "_uvsDirty",
    "_secondaryUVsDirty",
    "_jointIndicesDirty",
    "_jointWeightsDirty",
    "_concatenateArrays",
    "_autoDeriveNormals",
    "_useFaceWeights",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "_pSubMeshClass",
    "_useCondensedIndices",
    "set",
    "value",
    "_pUpdateStrideOffset",
    "_pOffset",
    "VERTEX_DATA",
    "POSITION_DATA",
    "stride",
    "_curves",
    "CURVE_DATA",
    "_uvs",
    "UV_DATA",
    "_pStride",
    "len",
    "_pNumVertices",
    "_pVertices",
    "Array",
    "_pStrideOffsetDirty",
    "notifyUVsUpdate",
    "updatePositions",
    "_positions",
    "updateCurves",
    "updateUVs",
    "updateFaceNormals",
    "_faceNormals",
    "_condensedIndexLookUp",
    "getBoundingPositions",
    "values",
    "index",
    "positions",
    "getStride",
    "getOffset",
    "pInvalidateBounds",
    "notifyPositionsUpdate",
    "offset",
    "curves",
    "notifyCurvesUpdate",
    "uvs",
    "_pNotifyVerticesUpdate",
    "uvIdx",
    "lenV",
    "_faceWeights",
    "_faceTangents",
    "updateIndices",
    "indices",
    "clone",
    "_pIndices",
    "concat",
    "scaleUV",
    "scaleU",
    "scaleV",
    "ratioU",
    "ratioV",
    "scale",
    "applyTransformation",
    "transform",
    "i1",
    "i2",
    "vector",
    "invTranspose",
    "vi0",
    "vStride",
    "x",
    "y",
    "z",
    "transformVector",
    "j",
    "k",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "cx",
    "cy",
    "cz",
    "Math",
    "sqrt",
    "w",
    "_positionsUpdated",
    "VERTICES_UPDATED",
    "dispatchEvent",
    "_curvesUpdated",
    "_uvsUpdated",
    "POSITION_FORMAT",
    "CURVE_FORMAT",
    "UV_FORMAT",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/CurveSubMesh",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/events/SubGeometryEvent",
    "SubMeshBase",
    "subGeometry",
    "parentMesh",
    "material",
    "_pParentMesh",
    "_subGeometry",
    "CURVE_SUB_MESH",
    "_iCollectRenderable",
    "rendererPool",
    "applyCurveSubMesh",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "AbstractMethodError",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "SceneEvent",
    "DisplayObject",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pSceneTransformDirty",
    "_matrix3D",
    "_matrix3DDirty",
    "_inverseSceneTransform",
    "_inverseSceneTransformDirty",
    "_scenePosition",
    "_scenePositionDirty",
    "_explicitVisibility",
    "_pImplicitVisibility",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_positionDirty",
    "_rotationDirty",
    "_scaleDirty",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_pScaleX",
    "_pScaleY",
    "_pScaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_orientationMatrix",
    "_pivotZero",
    "_pivotDirty",
    "_pos",
    "_rot",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "_entityNodes",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "_pInvalidateBounds",
    "updateBounds",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "depth",
    "val",
    "scaleZ",
    "getBox",
    "invalidateScale",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "height",
    "scaleY",
    "_pParent",
    "getChildIndex",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_pIsEntity",
    "_loaderInfo",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "_mouseX",
    "_mouseY",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "rotationX",
    "rotationY",
    "rotationZ",
    "pivotScale",
    "copyColumnTo",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "width",
    "scaleX",
    "invalidatePosition",
    "addEventListener",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "_iMatrix3D",
    "name",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "globalToLocal3D",
    "position",
    "inverseSceneTransform",
    "hitTestObject",
    "obj",
    "hitTestPoint",
    "shapeFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal",
    "localToGlobal3D",
    "moveTo",
    "dx",
    "dy",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "removeEventListener",
    "hasEventListener",
    "translate",
    "distance",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_pUpdateMatrix3D",
    "elements",
    "_pPickingCollisionVO",
    "iSetParent",
    "isEntity",
    "invalidatePartition",
    "notifySceneTransformChange",
    "partition",
    "scene",
    "sceneChanged",
    "REMOVED_FROM_SCENE",
    "_iUnregisterPartition",
    "_pUnregisterEntity",
    "_iRegisterPartition",
    "_pRegisterEntity",
    "ADDED_TO_SCENE",
    "notifySceneChange",
    "appendTranslation",
    "_iIsRoot",
    "prepend",
    "_iAddRenderable",
    "renderable",
    "push",
    "_iRemoveRenderable",
    "indexOf",
    "splice",
    "_iTestCollision",
    "shortestCollisionDistance",
    "findClosest",
    "_iInternalUpdate",
    "_iController",
    "update",
    "_iIsMouseEnabled",
    "_iSetScene",
    "notifyPositionChanged",
    "_positionChanged",
    "notifyRotationChanged",
    "_rotationChanged",
    "notifyScaleChanged",
    "_scaleChanged",
    "_scenechanged",
    "_sceneTransformChanged",
    "invalidateMatrix3D",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/SceneEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "GEOMETRY",
    "getSubGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/base/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/base/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "matrix",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "colors",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "clear",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "radius",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "data",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "thickness",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IGraphicsData",
    "awayjs-display/lib/base/IMaterialOwner",
    "awayjs-display/lib/base/IRenderObjectOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/base/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/base/LightBase",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "LIGHT",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/base/LineSubGeometry",
    "LineSubMesh",
    "TriangleSubGeometry",
    "LineSubGeometry",
    "_boundingPositionDirty",
    "_thicknessDirty",
    "_colorsDirty",
    "START_POSITION_DATA",
    "END_POSITION_DATA",
    "THICKNESS_DATA",
    "COLOR_DATA",
    "_startPositions",
    "_endPositions",
    "updateThickness",
    "_thickness",
    "updateColors",
    "_startColors",
    "_endColors",
    "_numSegments",
    "_boundingPositions",
    "startPositions",
    "endPositions",
    "startValues",
    "endValues",
    "floor",
    "notifyThicknessUpdate",
    "notifyColorsUpdate",
    "_thicknessUpdated",
    "_colorUpdated",
    "COLOR_FORMAT",
    "THICKNESS_FORMAT",
    "awayjs-display/lib/base/LineSubMesh",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "LINE_SUB_MESH",
    "applyLineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "awayjs-display/lib/base/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/base/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "_pConcatenateArrays",
    "updateVertices",
    "_numTriangles",
    "dataType",
    "_numIndices",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "TriangleSubMesh",
    "_autoDeriveTangents",
    "notifyJointIndicesUpdate",
    "_vertexNormals",
    "NORMAL_DATA",
    "_vertexTangents",
    "TANGENT_DATA",
    "_secondaryUVs",
    "SECONDARY_UV_DATA",
    "_jointIndices",
    "JOINT_INDEX_DATA",
    "_jointsPerVertex",
    "_jointWeights",
    "JOINT_WEIGHT_DATA",
    "notifyNormalsUpdate",
    "notifyTangentsUpdate",
    "updateVertexNormals",
    "updateVertexTangents",
    "updateSecondaryUVs",
    "updateJointIndices",
    "updateJointWeights",
    "updateFaceTangents",
    "_condensedJointIndices",
    "_numCondensedJoints",
    "normals",
    "f1",
    "f2",
    "f3",
    "lenI",
    "weight",
    "vx",
    "vy",
    "vz",
    "tangents",
    "notifySecondaryUVsUpdate",
    "jointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "jointWeights",
    "notifyJointWeightsUpdate",
    "jointsPerVertex",
    "bakeNormals",
    "bakeTangents",
    "transpose",
    "ni0",
    "ti0",
    "nStride",
    "tStride",
    "deltaTransformVector",
    "index1",
    "index2",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "_normalsUpdated",
    "_tangentsUpdated",
    "_secondaryUVsUpdated",
    "_jointIndicesUpdated",
    "_jointWeightsUpdated",
    "NORMAL_FORMAT",
    "TANGENT_FORMAT",
    "SECONDARY_UV_FORMAT",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TRIANGLE_SUB_MESH",
    "applyTriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_width",
    "_height",
    "_depth",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "hx",
    "hy",
    "hz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "invalidate",
    "awayjs-display/lib/bounds/BoundsType",
    "BoundsType",
    "SPHERE",
    "AXIS_ALIGNED_BOX",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_children",
    "CONTAINER",
    "addChild",
    "child",
    "removeChildInternal",
    "addChildAt",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "disposeWithChildren",
    "numChildren",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "getObjectsUnderPoint",
    "removeChildAt",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "AssetLoader",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_this",
    "_loadingSessions",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "event",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_contentLoaderInfo",
    "close",
    "lib",
    "getInstance",
    "stopAllLoadingSessions",
    "removeListeners",
    "stop",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "token",
    "loader",
    "RESOURCE_COMPLETE",
    "ASSET_COMPLETE",
    "_iLoader",
    "_iAddErrorHandler",
    "onLoadError",
    "_iAddParseErrorHandler",
    "onParseError",
    "loadData",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "dispatcher",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/AssetLoader",
    "awayjs-display/lib/containers/Scene",
    "NodeBase",
    "Partition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "_partition",
    "_iSceneGraphRoot",
    "traversePartitions",
    "traverser",
    "traverse",
    "PARTITION_CHANGED",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/Partition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "renderer",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onScenePartitionChangedDelegate",
    "onScenePartitionChanged",
    "_onProjectionChangedDelegate",
    "onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pCamera",
    "_iRegisterCamera",
    "_pMouseX",
    "_pMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "left",
    "top",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "unproject",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "max",
    "min",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "pos",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/display/ContextMode",
    "ContextMode",
    "WEBGL",
    "FLASH",
    "NATIVE",
    "awayjs-display/lib/display/IContext",
    "awayjs-display/lib/entities/Billboard",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_animator",
    "BILLBOARD",
    "SIZE_CHANGED",
    "testBillboardCollision",
    "_iCollectRenderables",
    "applyBillboard",
    "_iRegisterEntity",
    "_iUnregisterEntity",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "CAMERA",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "_iUnregisterCamera",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "_iRegisterDirectionalLight",
    "_iUnregisterDirectionalLight",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "_iRegisterLightProbe",
    "_iUnregisterLightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "LINE_SEGMENT",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "applyLineSegment",
    "awayjs-display/lib/entities/Mesh",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "MESH",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "boundsType",
    "shareAnimationGeometry",
    "mouseEnabled",
    "extra",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "setEmpty",
    "box",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "subMeshClass",
    "testMeshCollision",
    "_iInvalidateRenderableGeometries",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "bottom",
    "front",
    "v2",
    "right",
    "back",
    "d1",
    "d2",
    "rawData",
    "_iRegisterPointLight",
    "_iUnregisterPointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renderObjects",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRenderObject",
    "invalidateRenderObject",
    "invalidatePasses",
    "_cubeMap",
    "format",
    "SKYBOX",
    "_iAddRenderObject",
    "renderObject",
    "_iRemoveRenderObject",
    "getRenderObject",
    "renderablePool",
    "getSkyboxRenderObject",
    "_iRegisterSkybox",
    "_iUnregisterSkybox",
    "awayjs-core/lib/base/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextField",
    "_text",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "_textHeight",
    "_textInteractionMode",
    "_textWidth",
    "appendText",
    "newText",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "id",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "_textFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "Event",
    "_camera",
    "awayjs-core/lib/events/Event",
    "object",
    "VISIBLITY_UPDATED",
    "awayjs-display/lib/events/MouseEvent",
    "MouseEvent",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "renderableOwner",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_UP",
    "MOUSE_DOWN",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderObjectOwner",
    "_renderObjectOwner",
    "RENDER_OBJECT_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "awayjs-display/lib/events/StageEvent",
    "StageEvent",
    "CONTEXT_CREATED",
    "CONTEXT_DISPOSED",
    "CONTEXT_RECREATED",
    "_dataType",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapData",
    "BitmapTexture",
    "BasicMaterial",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "assetType",
    "_defaultLineMaterial",
    "createDefaultLineMaterial",
    "_defaultTriangleMaterial",
    "createDefaultTriangleMaterial",
    "getDefaultTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapData",
    "createCheckeredBitmapData",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/base/BitmapData",
    "awayjs-core/lib/textures/BitmapTexture",
    "awayjs-display/lib/materials/BasicMaterial",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_queuedEvents",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "queueDispatch",
    "_mouseMoveEvent",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "bounds",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "Texture2DBase",
    "MaterialBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "Number",
    "getMaterialRenderObject",
    "awayjs-core/lib/textures/Texture2DBase",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/materials/CSSMaterialBase",
    "ImageTexture",
    "CSSMaterialBase",
    "_iMaterialId",
    "_imageElement",
    "_imageStyle",
    "_pTexture",
    "htmlImageElement",
    "node",
    "getElementsByTagName",
    "sheet",
    "styleSheets",
    "insertRule",
    "cssRules",
    "backgroundImage",
    "src",
    "backgroundSize",
    "transformOrigin",
    "_pHeight",
    "_pWidth",
    "_pNotifySizeChanged",
    "awayjs-core/lib/textures/ImageTexture",
    "awayjs-display/lib/materials/CurveMaterial",
    "CurveMaterial",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "ColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "MATERIAL",
    "_colorTransform",
    "alphaMultiplier",
    "CHANGE",
    "_pInvalidatePasses",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "LIGHT_PICKER",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "Rectangle",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "init",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "PartialImplementationError",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "awayjs-core/lib/errors/PartialImplementationError",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "RenderTexture",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "size",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-core/lib/textures/RenderTexture",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_pool",
    "_entity",
    "_iNumEntities",
    "removeFromParent",
    "_iParent",
    "iRemoveNode",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "pickingCollisionVO",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_pNumChildNodes",
    "_pChildNodes",
    "_explicitDebugVisible",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "_debugChildrenVisible",
    "findPartitionForEntity",
    "_pNumEntities",
    "applyDebugEntity",
    "iAddNode",
    "numEntities",
    "pop",
    "awayjs-display/lib/partition/NullNode",
    "NullNode",
    "PointLightNode",
    "SkyboxNode",
    "EntityNodePool",
    "rootNode",
    "_updatesMade",
    "_rootNode",
    "_cameraNodePool",
    "_directionalLightNodePool",
    "_entityNodePool",
    "_lightProbeNodePool",
    "_pointLightNodePool",
    "_skyboxNodePool",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "targetNode",
    "getItem",
    "pointLight",
    "skybox",
    "disposeItem",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/pool/EntityNodePool",
    "_pointLight",
    "applyPointLight",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "RaycastCollector",
    "findClosestCollision",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_findClosestCollision",
    "_entities",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "pickingCollider",
    "updateLocalPosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/CSSBillboardRenderable",
    "CSSRenderableBase",
    "CSSBillboardRenderable",
    "billboard",
    "div",
    "onmousedown",
    "img",
    "className",
    "awayjs-display/lib/pool/CSSRenderableBase",
    "awayjs-display/lib/pool/CSSLineSegmentRenderable",
    "CSSLineSegmentRenderable",
    "lineSegment",
    "invalidateIndexData",
    "invalidateVertexData",
    "awayjs-display/lib/pool/CSSSkyboxRenderable",
    "CSSSkyboxRenderable",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "entityNodeClass",
    "_entityNodeClass",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderObject",
    "awayjs-display/lib/pool/IRenderablePool",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRendererPool",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_numVertices",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "numIndices",
    "triangleGeometry",
    "numVertices",
    "vertexNormals",
    "vertexTangents",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tl",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "PRIMITIVE_PREFAB",
    "invalidateGeometryType",
    "updateGeometryType",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "autoDeriveUVs",
    "updateGeometry",
    "mesh",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "nx",
    "ny",
    "nz",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/render/CSSDefaultRenderer",
    "CoordinateSystem",
    "CSSRendererBase",
    "CSSEntityCollector",
    "CSSDefaultRenderer",
    "_contextMatrix",
    "_skyboxProjection",
    "_container",
    "overflow",
    "_context",
    "_contextStyle",
    "transformStyle",
    "_pBackBufferInvalid",
    "pUpdateBackBuffer",
    "pDraw",
    "coordinateSystem",
    "RIGHT_HANDED",
    "drawRenderables",
    "_renderableHead",
    "_activeMaterial",
    "clip",
    "toString",
    "drawSkybox",
    "renderSceneTransform",
    "awayjs-core/lib/projections/CoordinateSystem",
    "awayjs-display/lib/render/CSSRendererBase",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "renderToTexture",
    "forceSoftware",
    "profile",
    "_backgroundR",
    "_backgroundG",
    "_backgroundB",
    "_depthTextureInvalid",
    "_viewPort",
    "_scissorRect",
    "_localPos",
    "_globalPos",
    "window",
    "innerWidth",
    "innerHeight",
    "updateGlobalPos",
    "notifyViewportUpdate",
    "notifyScissorUpdate",
    "surfaceSelector",
    "pExecuteRender",
    "scissorRects",
    "cameras",
    "pCollectRenderables",
    "lineSubMesh",
    "triangleSubMesh",
    "_applyRenderable",
    "materialId",
    "cascaded",
    "_iEntryPoint",
    "zIndex",
    "zOffset",
    "dotProduct",
    "_pCameraForward",
    "_scissorUpdated",
    "_viewPortUpdated",
    "awayjs-display/lib/render/IRenderer",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderObjectId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "awayjs-display/lib/text/TextFieldType",
    "TextFieldType",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "align",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "CollectorBase",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "str",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "bitmapData",
    "HTMLImageElement",
    "imageElement",
    "draw",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends NamedAssetBase implements IAsset\n{\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.ANIMATION_NODE;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubMesh\t\t    \t= require(\"awayjs-display/lib/base/CurveSubMesh\");\nimport SubGeometryEvent\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\n\n/**\n * @class away.base.CurveSubGeometry\n */\nclass CurveSubGeometry extends SubGeometryBase\n{\n\tpublic static POSITION_DATA:string = \"positions\";\n    public static CURVE_DATA:string = \"curves\";\n\tpublic static UV_DATA:string = \"uvs\";\n\n\t//TODO - move these to StageGL\n\tpublic static POSITION_FORMAT:string = \"float3\";\n\tpublic static CURVE_FORMAT:string = \"float2\";\n\tpublic static UV_FORMAT:string = \"float2\";\n\n\tprivate _positionsDirty:boolean = true;\n\tprivate _curvesDirty:boolean = true;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\tprivate _vertexNormalsDirty:boolean = true;\n\tprivate _vertexTangentsDirty:boolean = true;\n\tprivate _uvsDirty:boolean = true;\n\tprivate _secondaryUVsDirty:boolean = true;\n\tprivate _jointIndicesDirty:boolean = true;\n\tprivate _jointWeightsDirty:boolean = true;\n\n\tprivate _positions:Array<number>;\n\tprivate _curves:Array<number>;\n\tprivate _uvs:Array<number>;\n\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedJointIndices:Array<number>;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\n\tprivate _concatenateArrays:boolean = true;\n\tprivate _autoDeriveNormals:boolean = false;\n\tprivate _useFaceWeights:boolean = false;\n    private _autoDeriveUVs:boolean = false;\n\n\tprivate _faceNormals:Array<number>;\n\tprivate _faceTangents:Array<number>;\n\tprivate _faceWeights:Array<number>;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\tprivate _positionsUpdated:SubGeometryEvent;\n\tprivate _curvesUpdated:SubGeometryEvent;\n\tprivate _tangentsUpdated:SubGeometryEvent;\n\tprivate _uvsUpdated:SubGeometryEvent;\n\tprivate _secondaryUVsUpdated:SubGeometryEvent;\n\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\tpublic _pUpdateStrideOffset()\n\t{\n\t\tif (this._concatenateArrays) {\n\t\t\tthis._pOffset[CurveSubGeometry.VERTEX_DATA] = 0;\n\n\t\t\t//always have positions\n\t\t\tthis._pOffset[CurveSubGeometry.POSITION_DATA] = 0;\n\t\t\tvar stride:number = 3;\n\n\t\t\tif (this._curves != null) {\n\t\t\t\tthis._pOffset[CurveSubGeometry.CURVE_DATA] = stride;\n\t\t\t\tstride += 2;\n\t\t\t}\n\n\t\t\tif (this._uvs != null) {\n\t\t\t\tthis._pOffset[CurveSubGeometry.UV_DATA] = stride;\n\t\t\t\tstride += 2;\n\t\t\t}\n\n\n\n\t\t\tthis._pStride[CurveSubGeometry.VERTEX_DATA] = stride;\n\t\t\tthis._pStride[CurveSubGeometry.POSITION_DATA] = stride;\n\t\t\tthis._pStride[CurveSubGeometry.CURVE_DATA] = stride;\n\t\t\tthis._pStride[CurveSubGeometry.UV_DATA] = stride;\n\n\t\t\tvar len:number = this._pNumVertices*stride;\n\n\t\t\tif (this._pVertices == null)\n\t\t\t\tthis._pVertices = new Array<number>(len);\n\t\t\telse if (this._pVertices.length != len)\n\t\t\t\tthis._pVertices.length = len;\n\n\t\t} else {\n\t\t\tthis._pOffset[CurveSubGeometry.POSITION_DATA] = 0;\n\t\t\tthis._pOffset[CurveSubGeometry.CURVE_DATA] = 0;\n\t\t\tthis._pOffset[CurveSubGeometry.UV_DATA] = 0;\n\n\n\t\t\tthis._pStride[CurveSubGeometry.POSITION_DATA] = 3;\n\t\t\tthis._pStride[CurveSubGeometry.CURVE_DATA] = 2;\n\t\t\tthis._pStride[CurveSubGeometry.UV_DATA] = 2;\n\t\t}\n\n\t\tthis._pStrideOffsetDirty = false;\n\t}\n\n\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn false;//this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\t//if (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\t//this._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis.notifyUVsUpdate();\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n    //remove\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\n\t}\n\n\n\n\t/**\n\t *\n\t */\n\tpublic get vertices():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._positions);\n\n        if (this._curvesDirty)\n            this.updateCurves(this._curves);\n\n\t\tif (this._uvsDirty)\n\t\t\tthis.updateUVs(this._uvs);\n\n\t\treturn this._pVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._positions);\n\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get curves():Array<number>\n\t{\n\t\tif (this._curvesDirty)\n\t\t\tthis.updateCurves(this._curves);\n\n\t\treturn this._curves;\n\t}\n\n\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Array<number>\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Array<number>\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.updateUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\n\n\n\t/**\n\t * Indicates whether or not to take the size of faces into account when auto-deriving vertex normals and tangents.\n\t */\n\tpublic get useFaceWeights():boolean\n\t{\n\t\treturn this._useFaceWeights;\n\t}\n\n\tpublic set useFaceWeights(value:boolean)\n\t{\n\t\tif (this._useFaceWeights == value)\n\t\t\treturn;\n\n\t\tthis._useFaceWeights = value;\n\n\n\t\tthis._faceNormalsDirty = true;\n\t}\n\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\n\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedArrays:boolean)\n\t{\n\t\tsuper(concatenatedArrays);\n\n\t\tthis._pSubMeshClass = CurveSubMesh;\n\t}\n\n\tpublic getBoundingPositions():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._positions);\n\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updatePositions(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar stride:number;\n\t\tvar positions:Array<number>;\n\n\t\tthis._positions = values;\n\n\t\tif (this._positions == null)\n\t\t\tthis._positions = new Array<number>();\n\n\t\tthis._pNumVertices = this._positions.length/3;\n\n\t\tif (this._concatenateArrays) {\n\t\t\tvar len:number = this._pNumVertices*this.getStride(CurveSubGeometry.VERTEX_DATA);\n\n\t\t\tif (this._pVertices == null)\n\t\t\t\tthis._pVertices = new Array<number>(len);\n\t\t\telse if (this._pVertices.length != len)\n\t\t\t\tthis._pVertices.length = len;\n\n\t\t\ti = 0;\n\t\t\tindex = this.getOffset(CurveSubGeometry.POSITION_DATA);\n\t\t\tstride = this.getStride(CurveSubGeometry.POSITION_DATA);\n\t\t\tpositions = this._pVertices;\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tpositions[index] = values[i++];\n\t\t\t\tpositions[index + 1] = values[i++];\n\t\t\t\tpositions[index + 2] = values[i++];\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyPositionsUpdate();\n\n\t\tthis._positionsDirty = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic updateCurves(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar curves:Array<number>;\n\n\t\tif (true) {\n\t\t\tif ((this._curves == null || values == null) && (this._curves != null || values != null)) {\n\t\t\t\tif (this._concatenateArrays)\n                    true; //\"do nothing\";\n\t\t\t\t\t//this._pNotifyCurvesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\tthis._curves = values;\n\n\t\t\tif (values != null && this._concatenateArrays) {\n\t\t\t\ti = 0;\n\t\t\t\tindex = this.getOffset(CurveSubGeometry.CURVE_DATA);\n\t\t\t\tstride = this.getStride(CurveSubGeometry.CURVE_DATA);\n                curves = this._pVertices;\n\n\t\t\t\twhile (i < values.length) {\n                    curves[index] = values[i++];\n                    curves[index + 1] = values[i++];\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.notifyCurvesUpdate();\n\n\t\tthis._curvesDirty = false;\n\t}\n\n\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic updateUVs(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar uvs:Array<number>;\n\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif ((this._uvs == null || values == null) && (this._uvs != null || values != null)) {\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\tthis._uvs = values;\n\n\t\t\tif (values != null && this._concatenateArrays) {\n\t\t\t\ti = 0;\n\t\t\t\tindex = this.getOffset(CurveSubGeometry.UV_DATA);\n\t\t\t\tstride = this.getStride(CurveSubGeometry.UV_DATA);\n\t\t\t\tuvs = this._pVertices;\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tuvs[index] = values[i++];\n\t\t\t\t\tuvs[index + 1] = values[i++];\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (this._uvs == null) {\n\t\t\t\tthis._uvs = new Array<number>(this._positions.length*2/3);\n\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\toffset = this.getOffset(CurveSubGeometry.UV_DATA);\n\t\t\tstride = this.getStride(CurveSubGeometry.UV_DATA);\n\n\t\t\t//autoderived uvs\n\t\t\tuvs = this._concatenateArrays? this._pVertices : this._uvs;\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\t\t\tvar uvIdx:number = 0;\n\n\t\t\t//clear uv values\n\t\t\tvar lenV:number = uvs.length;\n\t\t\twhile (index < lenV) {\n\t\t\t\tif (this._concatenateArrays) {\n\t\t\t\t\tthis._uvs[i++] = uvs[index] = uvIdx*.5;\n\t\t\t\t\tthis._uvs[i++] = uvs[index + 1] = 1.0 - (uvIdx & 1);\n\t\t\t\t} else {\n\t\t\t\t\tuvs[index] = uvIdx*.5;\n\t\t\t\t\tuvs[index + 1] = 1.0 - (uvIdx & 1);\n\t\t\t\t}\n\n\t\t\t\tif (++uvIdx == 3)\n\t\t\t\t\tuvIdx = 0;\n\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyUVsUpdate();\n\n\t\tthis._uvsDirty = false;\n\t}\n\n\n\n\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions = null;\n\t\tthis._curves = null;\n\t\tthis._uvs = null;\n\n\t\tthis._faceNormals = null;\n\t\tthis._faceWeights = null;\n\t\tthis._faceTangents = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the CurveSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic updateIndices(indices:Array<number>)\n\t{\n\t\tsuper.updateIndices(indices);\n\n\t\tthis._faceNormalsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis._vertexNormalsDirty = true;\n\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CurveSubGeometry\n\t{\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenateArrays);\n\t\tclone.updateIndices(this._pIndices.concat());\n\t\tclone.updatePositions(this._positions.concat());\n\n\t\tif (this._curves)\n\t\t\tclone.updateCurves(this._curves.concat());\n\t\telse\n\t\t\tclone.updateCurves(null);\n\n\t\tif (this._uvs && !this._autoDeriveUVs)\n\t\t\tclone.updateUVs(this._uvs.concat());\n\t\telse\n\t\t\tclone.updateUVs(null);\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar uvs:Array<number>;\n\n\t\tuvs = this._uvs;\n\n\t\tvar ratioU:number = scaleU/this._scaleU;\n\t\tvar ratioV:number = scaleV/this._scaleV;\n\n\t\tthis._scaleU = scaleU;\n\t\tthis._scaleV = scaleV;\n\n\t\tvar len:number = uvs.length;\n\n\t\toffset = 0;\n\t\tstride = 2;\n\n\t\tindex = offset;\n\n\t\twhile (index < len) {\n\t\t\tuvs[index] *= ratioU;\n\t\t\tuvs[index + 1] *= ratioV;\n\t\t\tindex += stride;\n\t\t}\n\n\t\tthis.notifyUVsUpdate();\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar positions:Array<number>;\n\n\t\tpositions = this._positions;\n\n\t\tvar len:number = positions.length;\n\n\t\toffset = 0;\n\t\tstride = 3;\n\n\t\ti = 0;\n\t\tindex = offset;\n\t\twhile (i < len) {\n\t\t\tpositions[index] *= scale;\n\t\t\tpositions[index + 1] *= scale;\n\t\t\tpositions[index + 2] *= scale;\n\n\t\t\ti += 3;\n\t\t\tindex += stride;\n\t\t}\n\n\t\tthis.notifyPositionsUpdate();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar positions:Array<number>;\n\n\t\tif (this._concatenateArrays) {\n\t\t\tpositions = this._pVertices;\n\t\t} else {\n\t\t\tpositions = this._positions;\n\t\t}\n\n\t\tvar len:number = this._positions.length/3;\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\n\t\tvar invTranspose:Matrix3D;\n\n\n\n\t\tvar vi0:number = this.getOffset(CurveSubGeometry.POSITION_DATA);\n\t\tvar vStride:number = this.getStride(CurveSubGeometry.POSITION_DATA);\n\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\n\t\t\t// bake position\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += vStride;\n\n\t\t}\n\n\t\tthis.notifyPositionsUpdate();\n\t}\n\n\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\tvar positions:Array<number> = this._positions;\n\n\t\tvar len:number = this._pIndices.length;\n\n\t\tif (this._faceNormals == null)\n\t\t\tthis._faceNormals = new Array<number>(len);\n\n\t\tif (this._useFaceWeights && this._faceWeights == null)\n\t\t\tthis._faceWeights = new Array<number>(len/3);\n\n\t\twhile (i < len) {\n\t\t\tindex = this._pIndices[i++]*3;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = this._pIndices[i++]*3;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = this._pIndices[i++]*3;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tif (this._useFaceWeights) {\n\t\t\t\tvar w:number = d*10000;\n\n\t\t\t\tif (w < 1)\n\t\t\t\t\tw = 1;\n\n\t\t\t\tthis._faceWeights[k++] = w;\n\t\t\t}\n\n\t\t\td = 1/d;\n\n\t\t\tthis._faceNormals[j++] = cx*d;\n\t\t\tthis._faceNormals[j++] = cy*d;\n\t\t\tthis._faceNormals[j++] = cz*d;\n\t\t}\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _pNotifyVerticesUpdate()\n\t{\n\t\tthis._pStrideOffsetDirty = true;\n\n\t\tthis.notifyPositionsUpdate();\n\t\tthis.notifyCurvesUpdate();\n\t\tthis.notifyUVsUpdate();\n\t}\n\n\tprivate notifyPositionsUpdate()\n\t{\n\t\tif (this._positionsDirty)\n\t\t\treturn;\n\n\t\tthis._positionsDirty = true;\n\n\t\tif (!this._positionsUpdated)\n\t\t\tthis._positionsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, CurveSubGeometry.POSITION_DATA);\n\n\t\tthis.dispatchEvent(this._positionsUpdated);\n\t}\n\n\tprivate notifyCurvesUpdate()\n\t{\n\t\tif (this._curvesDirty)\n\t\t\treturn;\n\n\t\tthis._curvesDirty = true;\n\n\t\tif (!this._curvesUpdated)\n\t\t\tthis._curvesUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, CurveSubGeometry.CURVE_DATA);\n\n\t\tthis.dispatchEvent(this._curvesUpdated);\n\t}\n\n\n\n\tprivate notifyUVsUpdate() {\n        if (this._uvsDirty)\n            return;\n\n        this._uvsDirty = true;\n\n        if (!this._uvsUpdated)\n            this._uvsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, CurveSubGeometry.UV_DATA);\n\n        this.dispatchEvent(this._uvsUpdated);\n    }\n}\n\nexport = CurveSubGeometry;",
    "import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport CurveSubGeometry\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nimport IRendererPool\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.CurveSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.CurveSubMesh\n */\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\n{\n\tprivate _subGeometry:CurveSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.CURVE_SUB_MESH;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t */\n\tpublic get subGeometry():CurveSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new CurveSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\n\t * @param material An optional material used to render this CurveSubMesh.\n\t */\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\n\t{\n\t\trendererPool.applyCurveSubMesh(this);\n\t}\n}\n\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/base/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends NamedAssetBase implements IBitmapDrawable\n{\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pSceneTransformDirty:boolean = true;\n\tpublic _pIsEntity:boolean;\n\n\tprivate _explicitPartition:Partition;\n\tpublic _pImplicitPartition:Partition;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _scenechanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean = true;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean = true;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean = true;\n\tprivate _explicitVisibility:boolean = true;\n\tpublic _pImplicitVisibility:boolean = true;\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _positionDirty:boolean = true;\n\tprivate _rotationDirty:boolean = true;\n\tprivate _scaleDirty:boolean = true;\n\n\tprivate _positionChanged:DisplayObjectEvent;\n\tprivate _rotationChanged:DisplayObjectEvent;\n\tprivate _scaleChanged:DisplayObjectEvent;\n\n\tprivate _rotationX:number = 0;\n\tprivate _rotationY:number = 0;\n\tprivate _rotationZ:number = 0;\n\tprivate _eulers:Vector3D = new Vector3D();\n\tprivate _flipY:Matrix3D = new Matrix3D();\n\n\tprivate _listenToPositionChanged:boolean;\n\tprivate _listenToRotationChanged:boolean;\n\tprivate _listenToScaleChanged:boolean;\n\tprivate _zOffset:number = 0;\n\n\tpublic _pScaleX:number = 1;\n\tpublic _pScaleY:number = 1;\n\tpublic _pScaleZ:number = 1;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _pivot:Vector3D = new Vector3D();\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pivotZero:boolean = true;\n\tprivate _pivotDirty:boolean = true;\n\tprivate _pos:Vector3D = new Vector3D();\n\tprivate _rot:Vector3D = new Vector3D();\n\tprivate _sca:Vector3D = new Vector3D();\n\tprivate _transformComponents:Array<Vector3D>;\n\n\tpublic _pIgnoreTransform:boolean = false;\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _boundsType:string;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic alpha:number;\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].updateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\tif (this._boxBoundsInvalid)\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\treturn this._pBoxBounds.depth*this._pScaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tvar scaleZ:number = val/this.getBox().depth;\n\n\t\tif (this._pScaleZ == scaleZ)\n\t\t\treturn;\n\n\t\tthis._pScaleZ = scaleZ;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tthis._eulers.x = this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis._eulers.y = this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis._eulers.z = this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis._rotationX = value.x*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationY = value.y*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationZ = value.z*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\tif (this._boxBoundsInvalid)\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\treturn this._pBoxBounds.height*this._pScaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tvar scaleY:number = val/this.getBox().height;\n\n\t\tif (this._pScaleY == scaleY)\n\t\t\treturn;\n\n\t\tthis._pScaleY = scaleY;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get ignoreTransform():boolean\n\t{\n\t\treturn this._pIgnoreTransform;\n\t}\n\n\tpublic set ignoreTransform(value:boolean)\n\t{\n\t\tif (this._pIgnoreTransform == value)\n\t\t\treturn;\n\n\t\tthis._pIgnoreTransform = value;\n\n\t\tif (value) {\n\t\t\tthis._pSceneTransform.identity();\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\n\t\t}\n\n\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic name:string;\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():Partition\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tthis._pivot = pivot.clone();\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\treturn this._pScaleX;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\tif (this._pScaleX == val)\n\t\t\treturn;\n\n\t\tthis._pScaleX = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\treturn this._pScaleY;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\tif (this._pScaleY == val)\n\t\t\treturn;\n\n\t\tthis._pScaleY = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\treturn this._pScaleZ;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\tif (this._pScaleZ == val)\n\t\t\treturn;\n\n\t\tthis._pScaleZ = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tvar pivotScale:Vector3D = new Vector3D(this._pivot.x/this._pScaleX, this._pivot.y/this._pScaleY, this._pivot.z/this._pScaleZ)\n\t\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._pScaleX, this._pivot.y*this._pScaleY, this._pivot.z*this._pScaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\tif (this._boxBoundsInvalid)\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\treturn this._pBoxBounds.width*this._pScaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tvar scaleX:number = val/this.getBox().width;\n\n\t\tif (this._pScaleX == scaleX)\n\t\t\treturn;\n\n\t\tthis._pScaleX = scaleX;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._x == val)\n\t\t\treturn;\n\n\t\tthis._x = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._y == val)\n\t\t\treturn;\n\n\t\tthis._y = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._z == val)\n\t\t\treturn;\n\n\t\tthis._z = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get zOffset():number\n\t{\n\t\treturn this._zOffset;\n\t}\n\n\tpublic set zOffset(value:number)\n\t{\n\t\tthis._zOffset = value;\n\t}\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n\t\tthis._transformComponents = new Array<Vector3D>(3);\n\n\t\tthis._transformComponents[0] = this._pos;\n\t\tthis._transformComponents[1] = this._rot;\n\t\tthis._transformComponents[2] = this._sca;\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform(this);\n\n\t\tthis._matrix3D.identity();\n\n\t\tthis._flipY.appendScale(1, -1, 1);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:DisplayObject = new DisplayObject();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = name;\n\n\t\t// todo: implement for all subtypes\n\t\treturn clone;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this.parent)\n\t\t\tthis.parent.removeChild(this);\n\n\t\twhile (this._pRenderables.length)\n\t\t\tthis._pRenderables[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeAsset()\n\t{\n\t\tthis.dispose();\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid)\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\treturn this._pBoxBounds;\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid)\n\t\t\tthis._pUpdateSphereBounds();\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point):Point\n\t{\n\t\treturn point; //TODO\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false):boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Array<number>;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis._rotationX = vec.x;\n\t\tthis._rotationY = vec.y;\n\t\tthis._rotationZ = vec.z;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point):Point\n\t{\n\t\treturn new Point(); //TODO\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\n\t\t\treturn;\n\n\t\tthis._x = dx;\n\t\tthis._y = dy;\n\t\tthis._z = dz;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._pivot == null)\n\t\t\tthis._pivot = new Vector3D();\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[2];\n\t\t\tcomps[0] = this.scenePosition;\n\t\t\tscale.x = this._pScaleX;\n\t\t\tscale.y = this._pScaleY;\n\t\t\tscale.z = this._pScaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this._pScaleX, -this._pivot.y/this._pScaleY, -this._pivot.z/this._pScaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.prependRotation(angle, axis);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis._rotationX += vec.x;\n\t\tthis._rotationY += vec.y;\n\t\tthis._rotationZ += vec.z;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tthis._rotationX = ax*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationY = ay*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationZ = az*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type, listener))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = false;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._x += x*len;\n\t\tthis._y += y*len;\n\t\tthis._z += z*len;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\n\n\t\tthis._x = this._pos.x;\n\t\tthis._y = this._pos.y;\n\t\tthis._z = this._pos.z;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():Partition\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @internal\n\t */\n\tpublic get _iMatrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._pUpdateMatrix3D();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set _iMatrix3D(val:Matrix3D)\n\t{\n\n\t\t// TODO: From AS3 - Do we still need this in JS ?\n\t\t//ridiculous matrix error\n\t\t/*\n\t\tif (!val.rawData[0]) {\n\n\t\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\t\tval.copyRawDataTo(raw);\n\t\t\traw[0] = this._smallestNumber;\n\t\t\tval.copyRawDataFrom(raw);\n\t\t}\n\t\t//*/\n\t\tvar elements:Array<Vector3D> = val.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[0];\n\n\t\tif (this._x != vec.x || this._y != vec.y || this._z != vec.z) {\n\t\t\tthis._x = vec.x;\n\t\t\tthis._y = vec.y;\n\t\t\tthis._z = vec.z;\n\n\t\t\tthis.invalidatePosition();\n\t\t}\n\n\t\tvec = elements[1];\n\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\n\t\t\tthis._rotationX = vec.x;\n\t\t\tthis._rotationY = vec.y;\n\t\t\tthis._rotationZ = vec.z;\n\n\t\t\tthis.invalidateRotation();\n\t\t}\n\n\t\tvec = elements[2];\n\n\t\tif (this._pScaleX != vec.x || this._pScaleY != vec.y || this._pScaleZ != vec.z) {\n\t\t\tthis._pScaleX = vec.x;\n\t\t\tthis._pScaleY = vec.y;\n\t\t\tthis._pScaleZ = vec.z;\n\n\t\t\tthis.invalidateScale();\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tthis._pParent = value;\n\n\t\tif (value) {\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren);\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\n\t\t} else {\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\n\t\t\tthis._pUpdateImplicitVisibility(true);\n\t\t\tthis._pUpdateImplicitPartition(null, null);\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._listenToSceneTransformChanged)\n\t\t\tthis.notifySceneTransformChange();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tthis._pImplicitMouseEnabled = this._explicitMouseEnabled && value;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (sceneChanged && this._pScene)\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tif (this._pIsEntity)\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tif (this._pIsEntity)\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\n\t\t}\n\n\t\tif (sceneChanged && this._pScene)\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\n\n\t\tif (sceneChanged) {\n\t\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\n\t\t\t\tthis.pInvalidateSceneTransform();\n\n\t\t\tif (this._listenToSceneChanged)\n\t\t\t\tthis.notifySceneChange();\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateMatrix3D()\n\t{\n\n\t\tthis._pos.x = this._x;\n\t\tthis._pos.y = this._y;\n\t\tthis._pos.z = this._z;\n\n\t\tthis._rot.x = this._rotationX;\n\t\tthis._rot.y = this._rotationY;\n\t\tthis._rot.z = this._rotationZ;\n\n\t\tthis._sca.x = this._pScaleX;\n\t\tthis._sca.y = this._pScaleY;\n\t\tthis._sca.z = this._pScaleZ;\n\n\t\tthis._matrix3D.recompose(this._transformComponents);\n\n\t\tif (!this._pivotZero) {\n\t\t\tthis._matrix3D.prependTranslation(-this._pivot.x/this._pScaleX, -this._pivot.y/this._pScaleY, -this._pivot.z/this._pScaleZ);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\t\tthis._matrix3DDirty = false;\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._scaleDirty = false;\n\t\tthis._pivotDirty = false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\n\t\t} else {\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\n\t\t}\n\n\t\tthis._pSceneTransformDirty = false;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._pRenderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\n\n\t\tthis._pRenderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\treturn this._pImplicitMouseEnabled;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyPositionChanged()\n\t{\n\t\tif (!this._positionChanged)\n\t\t\tthis._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._positionChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRotationChanged()\n\t{\n\t\tif (!this._rotationChanged)\n\t\t\tthis._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._rotationChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScaleChanged()\n\t{\n\t\tif (!this._scaleChanged)\n\t\t\tthis._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._scaleChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifySceneChange()\n\t{\n\t\tif (!this._scenechanged)\n\t\t\tthis._scenechanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._scenechanged);\n}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifySceneTransformChange()\n\t{\n\t\tif (!this._sceneTransformChanged)\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._sceneTransformChanged);\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate invalidateMatrix3D():void\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidatePartition()\n\t{\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].invalidatePartition();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePivot()\n\t{\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\n\n\t\tif (this._pivotDirty)\n\t\t\treturn;\n\n\t\tthis._pivotDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePosition()\n\t{\n\t\tif (this._positionDirty)\n\t\t\treturn;\n\n\t\tthis._positionDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToPositionChanged)\n\t\t\tthis.notifyPositionChanged();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateRotation()\n\t{\n\t\tif (this._rotationDirty)\n\t\t\treturn;\n\n\t\tthis._rotationDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToRotationChanged)\n\t\t\tthis.notifyRotationChanged();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateScale()\n\t{\n\t\tif (this._scaleDirty)\n\t\t\treturn;\n\n\t\tthis._scaleDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToScaleChanged)\n\t\t\tthis.notifyScaleChanged();\n\t}\n\n\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\n\n\t\tthis._entityNodes.splice(index, 1);\n\n\t\treturn entityNode;\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\t}\n\t\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\t\t\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n}\n\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\n\n/**\n *\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleSubMesh objects.\n *\n *\n *\n * @see away.core.base.SubGeometry\n * @see away.entities.Mesh\n *\n * @class Geometry\n */\nclass Geometry extends NamedAssetBase implements IAsset\n{\n\tprivate _subGeometries:Array<SubGeometryBase>;\n\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.GEOMETRY;\n\t}\n\n\t/**\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\n\t */\n\tpublic get subGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\tpublic getSubGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\t/**\n\t * Creates a new Geometry object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\n\t}\n\n\t/**\n\t * Adds a new TriangleSubGeometry object to the list.\n\t * @param subGeometry The TriangleSubGeometry object to be added.\n\t */\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.push(subGeometry);\n\n\t\tsubGeometry.parentGeometry = this;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Removes a new TriangleSubGeometry object from the list.\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\n\t */\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\n\n\t\tsubGeometry.parentGeometry = null;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Clones the geometry.\n\t * @return An exact duplicate of the current Geometry object.\n\t */\n\tpublic clone():Geometry\n\t{\n\t\tvar clone:Geometry = new Geometry();\n\t\tvar len:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scale(scale);\n\t}\n\n\t/**\n\t * Clears all resources used by the Geometry object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\n\t\t\tthis.removeSubGeometry(subGeom);\n\t\t\tsubGeom.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\n\t{\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\n\t}\n}\n\nexport = Geometry;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/base/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/base/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/base/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/base/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/base/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/base/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/base/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/base/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/base/SpreadMethod\");\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapData, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapData, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.LIGHT;\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "import DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport LineSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport SubGeometryEvent\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\n\n/**\n * @class LineSubGeometry\n */\nclass LineSubGeometry extends SubGeometryBase\n{\n\tpublic static VERTEX_DATA:string = \"vertices\";\n\tpublic static START_POSITION_DATA:string = \"startPositions\";\n\tpublic static END_POSITION_DATA:string = \"endPositions\";\n\tpublic static THICKNESS_DATA:string = \"thickness\";\n\tpublic static COLOR_DATA:string = \"colors\";\n\n\t//TODO - move these to StageGL\n\tpublic static POSITION_FORMAT:string = \"float3\";\n\tpublic static COLOR_FORMAT:string = \"float4\";\n\tpublic static THICKNESS_FORMAT:string = \"float1\";\n\n\tprivate _positionsDirty:boolean = true;\n\tprivate _boundingPositionDirty = true;\n\tprivate _thicknessDirty:boolean = true;\n\tprivate _colorsDirty:boolean = true;\n\n\tprivate _startPositions:Array<number>;\n\tprivate _endPositions:Array<number>;\n\tprivate _boundingPositions:Array<number>\n\tprivate _thickness:Array<number>;\n\tprivate _startColors:Array<number>;\n\tprivate _endColors:Array<number>;\n\n\tprivate _numSegments:number;\n\n\tprivate _positionsUpdated:SubGeometryEvent;\n\tprivate _thicknessUpdated:SubGeometryEvent;\n\tprivate _colorUpdated:SubGeometryEvent;\n\n\tpublic _pUpdateStrideOffset()\n\t{\n\t\tthis._pOffset[LineSubGeometry.VERTEX_DATA] = 0;\n\n\t\tvar stride:number = 0;\n\t\tthis._pOffset[LineSubGeometry.START_POSITION_DATA] = stride;\n\t\tstride += 3;\n\n\t\tthis._pOffset[LineSubGeometry.END_POSITION_DATA] = stride;\n\t\tstride += 3;\n\n\t\tthis._pOffset[LineSubGeometry.THICKNESS_DATA] = stride;\n\t\tstride += 1;\n\n\t\tthis._pOffset[LineSubGeometry.COLOR_DATA] = stride;\n\t\tstride += 4;\n\n\t\tthis._pStride[LineSubGeometry.VERTEX_DATA] = stride;\n\t\tthis._pStride[LineSubGeometry.START_POSITION_DATA] = stride;\n\t\tthis._pStride[LineSubGeometry.END_POSITION_DATA] = stride;\n\t\tthis._pStride[LineSubGeometry.THICKNESS_DATA] = stride;\n\t\tthis._pStride[LineSubGeometry.COLOR_DATA] = stride;\n\n\t\tvar len:number = this._pNumVertices*stride;\n\n\t\tif (this._pVertices == null)\n\t\t\tthis._pVertices = new Array<number>(len);\n\t\telse if (this._pVertices.length != len)\n\t\t\tthis._pVertices.length = len;\n\n\t\tthis._pStrideOffsetDirty = false;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get vertices():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._startPositions, this._endPositions);\n\n\t\tif (this._thicknessDirty)\n\t\t\tthis.updateThickness(this._thickness);\n\n\t\tif (this._colorsDirty)\n\t\t\tthis.updateColors(this._startColors, this._endColors);\n\n\t\treturn this._pVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPositions():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._startPositions, this._endPositions);\n\n\t\treturn this._startPositions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPositions():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._startPositions, this._endPositions);\n\n\t\treturn this._endPositions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Array<number>\n\t{\n\t\tif (this._thicknessDirty)\n\t\t\tthis.updateThickness(this._thickness);\n\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startColors():Array<number>\n\t{\n\t\tif (this._colorsDirty)\n\t\t\tthis.updateColors(this._startColors, this._endColors);\n\n\t\treturn this._startColors;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endColors():Array<number>\n\t{\n\t\tif (this._colorsDirty)\n\t\t\tthis.updateColors(this._startColors, this._endColors);\n\n\t\treturn this._endColors;\n\t}\n\n\t/**\n\t * The total amount of segments in the TriangleSubGeometry.\n\t */\n\tpublic get numSegments():number\n\t{\n\t\treturn this._numSegments;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper(true);\n\n\t\tthis._pSubMeshClass = LineSubMesh;\n\t}\n\n\tpublic getBoundingPositions():Array<number>\n\t{\n\t\tif (this._boundingPositionDirty)\n\t\t\tthis._boundingPositions = this.startPositions.concat(this.endPositions);\n\n\t\treturn this._boundingPositions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updatePositions(startValues:Array<number>, endValues:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar values:Array<number>\n\t\tvar index:number;\n\t\tvar stride:number;\n\t\tvar positions:Array<number>;\n\t\tvar indices:Array<number>;\n\n\t\tthis._startPositions = startValues;\n\n\t\tif (this._startPositions == null)\n\t\t\tthis._startPositions = new Array<number>();\n\n\t\tthis._endPositions = endValues;\n\n\t\tif (this._endPositions == null)\n\t\t\tthis._endPositions = new Array<number>();\n\n\t\tthis._boundingPositionDirty = true;\n\n\t\tthis._numSegments = this._startPositions.length/3;\n\n\t\tthis._pNumVertices = this._numSegments*4;\n\n\t\tvar lenV:number = this._pNumVertices*this.getStride(LineSubGeometry.VERTEX_DATA);\n\n\t\tif (this._pVertices == null)\n\t\t\tthis._pVertices = new Array<number>(lenV);\n\t\telse if (this._pVertices.length != lenV)\n\t\t\tthis._pVertices.length = lenV;\n\n\t\ti = 0;\n\t\tj = 0;\n\t\tindex = this.getOffset(LineSubGeometry.START_POSITION_DATA);\n\t\tstride = this.getStride(LineSubGeometry.START_POSITION_DATA);\n\t\tpositions = this._pVertices;\n\t\tindices = new Array();\n\n\t\twhile (i < startValues.length) {\n\t\t\tvalues = (index/stride & 1)? endValues : startValues;\n\t\t\tpositions[index] = values[i];\n\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\tpositions[index + 2] = values[i + 2];\n\n\t\t\tvalues = (index/stride & 1)? startValues : endValues;\n\t\t\tpositions[index + 3] = values[i];\n\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\tpositions[index + 5] = values[i + 2];\n\n\t\t\tif (++j == 4) {\n\t\t\t\tvar o:number = index/stride - 3;\n\t\t\t\tindices.push(o, o + 1, o + 2, o + 3, o + 2, o + 1);\n\t\t\t\tj = 0;\n\t\t\t\ti += 3;\n\t\t\t}\n\n\t\t\tindex += stride;\n\t\t}\n\n\t\tthis.updateIndices(indices);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyPositionsUpdate();\n\n\t\tthis._positionsDirty = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic updateThickness(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar thickness:Array<number>;\n\n\t\tthis._thickness = values;\n\n\t\tif (values != null) {\n\t\t\ti = 0;\n\t\t\tj = 0;\n\t\t\toffset = this.getOffset(LineSubGeometry.THICKNESS_DATA);\n\t\t\tstride = this.getStride(LineSubGeometry.THICKNESS_DATA);\n\t\t\tthickness = this._pVertices;\n\n\t\t\tindex = offset\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*(index - offset)/stride + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyThicknessUpdate();\n\n\t\tthis._thicknessDirty = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updateColors(startValues:Array<number>, endValues:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar values:Array<number>\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar colors:Array<number>;\n\n\t\tthis._startColors = startValues;\n\n\t\tthis._endColors = endValues;\n\n\t\t//default to white\n\t\tif (this._startColors == null) {\n\t\t\tthis._startColors = new Array(this._numSegments*4);\n\n\t\t\ti = 0;\n\t\t\twhile (i < this._startColors.length)\n\t\t\t\tthis._startColors[i++] = 1;\n\t\t}\n\n\t\tif (this._endColors == null) {\n\t\t\tthis._endColors = new Array(this._numSegments*4);\n\n\t\t\ti = 0;\n\t\t\twhile (i < this._endColors.length)\n\t\t\t\tthis._endColors[i++] = 1;\n\t\t}\n\n\t\ti = 0;\n\t\tj = 0;\n\t\toffset = this.getOffset(LineSubGeometry.COLOR_DATA);\n\t\tstride = this.getStride(LineSubGeometry.COLOR_DATA);\n\t\tcolors = this._pVertices;\n\n\t\tindex = offset;\n\n\t\twhile (i < this._startColors.length) {\n\t\t\tvalues = ((index - offset)/stride & 1)? this._endColors : this._startColors;\n\t\t\tcolors[index] = values[i];\n\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\tcolors[index + 3] = values[i + 3];\n\n\t\t\tif (++j == 4) {\n\t\t\t\tj = 0;\n\t\t\t\ti += 4;\n\t\t\t}\n\n\t\t\tindex += stride;\n\t\t}\n\n\t\tthis.notifyColorsUpdate();\n\n\t\tthis._colorsDirty = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._startPositions = null;\n\t\tthis._endPositions = null;\n\t\tthis._thickness = null;\n\t\tthis._startColors = null;\n\t\tthis._endColors = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineSubGeometry\n\t{\n\t\tvar clone:LineSubGeometry = new LineSubGeometry();\n\t\tclone.updateIndices(this._pIndices.concat());\n\t\tclone.updatePositions(this._startPositions.concat(), this._endPositions.concat());\n\t\tclone.updateThickness(this._thickness.concat());\n\t\tclone.updatePositions(this._startPositions.concat(), this._endPositions.concat());\n\n\t\treturn clone;\n\t}\n\n\tpublic _pNotifyVerticesUpdate()\n\t{\n\t\tthis._pStrideOffsetDirty = true;\n\n\t\tthis.notifyPositionsUpdate();\n\t\tthis.notifyThicknessUpdate();\n\t\tthis.notifyColorsUpdate();\n\t}\n\n\tprivate notifyPositionsUpdate()\n\t{\n\t\tif (this._positionsDirty)\n\t\t\treturn;\n\n\t\tthis._positionsDirty = true;\n\n\t\tif (!this._positionsUpdated)\n\t\t\tthis._positionsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.POSITION_DATA);\n\n\t\tthis.dispatchEvent(this._positionsUpdated);\n\t}\n\n\tprivate notifyThicknessUpdate()\n\t{\n\t\tif (this._thicknessDirty)\n\t\t\treturn;\n\n\t\tthis._thicknessDirty = true;\n\n\t\tif (!this._thicknessUpdated)\n\t\t\tthis._thicknessUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, LineSubGeometry.THICKNESS_DATA);\n\n\t\tthis.dispatchEvent(this._thicknessUpdated);\n\t}\n\n\tprivate notifyColorsUpdate()\n\t{\n\t\tif (this._colorsDirty)\n\t\t\treturn;\n\n\t\tthis._colorsDirty = true;\n\n\t\tif (!this._colorUpdated)\n\t\t\tthis._colorUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, LineSubGeometry.COLOR_DATA);\n\n\t\tthis.dispatchEvent(this._colorUpdated);\n\t}\n}\n\nexport = LineSubGeometry;",
    "import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\n\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport IRendererPool\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.LineSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.LineSubMesh\n */\nclass LineSubMesh extends SubMeshBase implements ISubMesh\n{\n\tprivate _subGeometry:LineSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.LINE_SUB_MESH;\n\t}\n\n\t/**\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t */\n\tpublic get subGeometry():LineSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new LineSubMesh object\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\n\t * @param material An optional material used to render this LineSubMesh.\n\t */\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tsuper.dispose();\n\t}\n\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\n\t{\n\t\trendererPool.applyLineSubMesh(this);\n\t}\n}\n\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nclass LoaderInfo extends EventDispatcher\n{\n\tprivate _bytes:ByteArray;\n\tprivate _bytesLoaded:number;\n\tprivate _bytesTotal:number;\n\tprivate _content:DisplayObject;\n\tprivate _contentType:string;\n\tprivate _loader:Loader;\n\tprivate _url:string;\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get bytes():ByteArray\n\t{\n\t\treturn this._bytes;\n\t}\n\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic get bytesLoaded():number /*int*/\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic get bytesTotal():number /*int*/\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic get contentType():string\n\t{\n\t\treturn this._contentType;\n\t}\n\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get loader():Loader\n\t{\n\t\treturn this._loader;\n\t}\n\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n}\n\nexport = LoaderInfo;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "import NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport ISubMeshClass\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport SubGeometryEvent\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass SubGeometryBase extends NamedAssetBase\n{\n\tpublic static VERTEX_DATA:string = \"vertices\";\n\n\tpublic _pStrideOffsetDirty:boolean = true;\n\n\tpublic _pIndices:Array<number> /*uint*/;\n\tpublic _pVertices:Array<number>;\n\n\tprivate _numIndices:number;\n\tprivate _numTriangles:number;\n\tpublic _pNumVertices:number;\n\n\tpublic _pConcatenateArrays:boolean = true;\n\n\tprivate _indicesUpdated:SubGeometryEvent;\n\n\tpublic _pStride:Object = new Object();\n\tpublic _pOffset:Object = new Object();\n\n\tpublic _pUpdateStrideOffset()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSubMeshClass:ISubMeshClass;\n\n\tpublic get subMeshClass():ISubMeshClass\n\t{\n\t\treturn this._pSubMeshClass;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get concatenateArrays():boolean\n\t{\n\t\treturn this._pConcatenateArrays;\n\t}\n\n\tpublic set concatenateArrays(value:boolean)\n\t{\n\t\tif (this._pConcatenateArrays == value)\n\t\t\treturn;\n\n\t\tthis._pConcatenateArrays = value;\n\n\t\tthis._pStrideOffsetDirty = true;\n\n\t\tif (value)\n\t\t\tthis._pNotifyVerticesUpdate();\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Array<number>\n\t{\n\t\treturn this._pIndices;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get vertices():Array<number>\n\t{\n\t\tthis.updateVertices();\n\n\t\treturn this._pVertices;\n\t}\n\n\t/**\n\t * The total amount of triangles in the TriangleSubGeometry.\n\t */\n\tpublic get numTriangles():number\n\t{\n\t\treturn this._numTriangles;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._pNumVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedArrays:boolean)\n\t{\n\t\tsuper();\n\n\t\tthis._pConcatenateArrays = concatenatedArrays;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getStride(dataType:string)\n\t{\n\t\tif (this._pStrideOffsetDirty)\n\t\t\tthis._pUpdateStrideOffset();\n\n\t\treturn this._pStride[dataType];\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getOffset(dataType:string)\n\t{\n\t\tif (this._pStrideOffsetDirty)\n\t\t\tthis._pUpdateStrideOffset();\n\n\t\treturn this._pOffset[dataType];\n\t}\n\n\tpublic updateVertices()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pIndices = null;\n\t\tthis._pVertices = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic updateIndices(indices:Array<number>)\n\t{\n\t\tthis._pIndices = indices;\n\t\tthis._numIndices = indices.length;\n\n\t\tthis._numTriangles = this._numIndices/3;\n\n\t\tthis.notifyIndicesUpdate();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoundingPositions():Array<number>\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate notifyIndicesUpdate()\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED);\n\n\t\tthis.dispatchEvent(this._indicesUpdated);\n\t}\n\n\tpublic _pNotifyVerticesUpdate()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass SubMeshBase extends NamedAssetBase\n{\n\tpublic _pParentMesh:Mesh;\n\tpublic _uvTransform:UVTransform;\n\n\tpublic _iIndex:number = 0;\n\n\tpublic _material:MaterialBase;\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._pParentMesh.animator;\n\t}\n\n\t/**\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this._pParentMesh.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The scene transform object that transforms from model to world space.\n\t */\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\treturn this._pParentMesh.sceneTransform;\n\t}\n\n\t/**\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\n\t */\n\tpublic get parentMesh():Mesh\n\t{\n\t\treturn this._pParentMesh;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Creates a new SubMeshBase object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\t/**\n\t *\n\t * @param camera\n\t * @returns {away.geom.Matrix3D}\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _iInvalidateRenderableGeometry()\n\t{\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n}\n\nexport = SubMeshBase;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform\n{\n\tprivate _displayObject:DisplayObject;\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tpublic _position:Vector3D = new Vector3D();\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic colorTransform:ColorTransform;\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Stage.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\treturn this._displayObject._iMatrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tthis._displayObject._iMatrix3D = val;\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._displayObject._iMatrix3D.position\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._displayObject.x = value.x;\n\t\tthis._displayObject.y = value.y;\n\t\tthis._displayObject.z = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\n\t}\n\n\tpublic set rotation(value:Vector3D)\n\t{\n\t\tthis._displayObject.rotationX = value.x;\n\t\tthis._displayObject.rotationY = value.y;\n\t\tthis._displayObject.rotationZ = value.z;\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\n\t}\n\n\tpublic set scale(value:Vector3D)\n\t{\n\t\tthis._displayObject.scaleX = value.x;\n\t\tthis._displayObject.scaleY = value.y;\n\t\tthis._displayObject.scaleZ = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t}\n\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis._displayObject = displayObject;\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n}\n\nexport = Transform;\n",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubMesh\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport SubGeometryEvent\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass TriangleSubGeometry extends SubGeometryBase\n{\n\tpublic static POSITION_DATA:string = \"positions\";\n\tpublic static NORMAL_DATA:string = \"vertexNormals\";\n\tpublic static TANGENT_DATA:string = \"vertexTangents\";\n\tpublic static UV_DATA:string = \"uvs\";\n\tpublic static SECONDARY_UV_DATA:string = \"secondaryUVs\";\n\tpublic static JOINT_INDEX_DATA:string = \"jointIndices\";\n\tpublic static JOINT_WEIGHT_DATA:string = \"jointWeights\";\n\n\t//TODO - move these to StageGL\n\tpublic static POSITION_FORMAT:string = \"float3\";\n\tpublic static NORMAL_FORMAT:string = \"float3\";\n\tpublic static TANGENT_FORMAT:string = \"float3\";\n\tpublic static UV_FORMAT:string = \"float2\";\n\tpublic static SECONDARY_UV_FORMAT:string = \"float2\";\n\n\tprivate _positionsDirty:boolean = true;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\tprivate _vertexNormalsDirty:boolean = true;\n\tprivate _vertexTangentsDirty:boolean = true;\n\tprivate _uvsDirty:boolean = true;\n\tprivate _secondaryUVsDirty:boolean = true;\n\tprivate _jointIndicesDirty:boolean = true;\n\tprivate _jointWeightsDirty:boolean = true;\n\n\tprivate _positions:Array<number>;\n\tprivate _vertexNormals:Array<number>;\n\tprivate _vertexTangents:Array<number>;\n\tprivate _uvs:Array<number>;\n\tprivate _secondaryUVs:Array<number>;\n\tprivate _jointIndices:Array<number>;\n\tprivate _jointWeights:Array<number>;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedJointIndices:Array<number>;\n\tprivate _condensedIndexLookUp:Array<number>;\n\tprivate _numCondensedJoints:number;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _concatenateArrays:boolean = true;\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\tprivate _autoDeriveUVs:boolean = false;\n\tprivate _useFaceWeights:boolean = false;\n\n\tprivate _faceNormals:Array<number>;\n\tprivate _faceTangents:Array<number>;\n\tprivate _faceWeights:Array<number>;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\tprivate _positionsUpdated:SubGeometryEvent;\n\tprivate _normalsUpdated:SubGeometryEvent;\n\tprivate _tangentsUpdated:SubGeometryEvent;\n\tprivate _uvsUpdated:SubGeometryEvent;\n\tprivate _secondaryUVsUpdated:SubGeometryEvent;\n\tprivate _jointIndicesUpdated:SubGeometryEvent;\n\tprivate _jointWeightsUpdated:SubGeometryEvent;\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\n\t\tthis.notifyJointIndicesUpdate();\n\t}\n\n\tpublic _pUpdateStrideOffset()\n\t{\n\t\tif (this._concatenateArrays) {\n\t\t\tthis._pOffset[TriangleSubGeometry.VERTEX_DATA] = 0;\n\n\t\t\t//always have positions\n\t\t\tthis._pOffset[TriangleSubGeometry.POSITION_DATA] = 0;\n\t\t\tvar stride:number = 3;\n\n\t\t\tif (this._vertexNormals != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.NORMAL_DATA] = stride;\n\t\t\t\tstride += 3;\n\t\t\t}\n\n\t\t\tif (this._vertexTangents != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.TANGENT_DATA] = stride;\n\t\t\t\tstride += 3;\n\t\t\t}\n\n\t\t\tif (this._uvs != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.UV_DATA] = stride;\n\t\t\t\tstride += 2;\n\t\t\t}\n\n\t\t\tif (this._secondaryUVs != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.SECONDARY_UV_DATA] = stride;\n\t\t\t\tstride += 2;\n\t\t\t}\n\n\t\t\tif (this._jointIndices != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_INDEX_DATA] = stride;\n\t\t\t\tstride += this._jointsPerVertex;\n\t\t\t}\n\n\t\t\tif (this._jointWeights != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_WEIGHT_DATA] = stride;\n\t\t\t\tstride += this._jointsPerVertex;\n\t\t\t}\n\n\t\t\tthis._pStride[TriangleSubGeometry.VERTEX_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.POSITION_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.NORMAL_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.TANGENT_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.UV_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.SECONDARY_UV_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_INDEX_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_WEIGHT_DATA] = stride;\n\n\t\t\tvar len:number = this._pNumVertices*stride;\n\n\t\t\tif (this._pVertices == null)\n\t\t\t\tthis._pVertices = new Array<number>(len);\n\t\t\telse if (this._pVertices.length != len)\n\t\t\t\tthis._pVertices.length = len;\n\n\t\t} else {\n\t\t\tthis._pOffset[TriangleSubGeometry.POSITION_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.NORMAL_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.TANGENT_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.UV_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.SECONDARY_UV_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_INDEX_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_WEIGHT_DATA] = 0;\n\n\t\t\tthis._pStride[TriangleSubGeometry.POSITION_DATA] = 3;\n\t\t\tthis._pStride[TriangleSubGeometry.NORMAL_DATA] = 3;\n\t\t\tthis._pStride[TriangleSubGeometry.TANGENT_DATA] = 3;\n\t\t\tthis._pStride[TriangleSubGeometry.UV_DATA] = 2;\n\t\t\tthis._pStride[TriangleSubGeometry.SECONDARY_UV_DATA] = 2;\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_INDEX_DATA] = this._jointsPerVertex;\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_WEIGHT_DATA] = this._jointsPerVertex;\n\t\t}\n\n\t\tthis._pStrideOffsetDirty = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tthis._pStrideOffsetDirty = true;\n\n\t\tif (this._pConcatenateArrays)\n\t\t\tthis._pNotifyVerticesUpdate();\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis.notifyUVsUpdate();\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\n\t\tif (value)\n\t\t\tthis.notifyNormalsUpdate();\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\n\t\tif (value)\n\t\t\tthis.notifyTangentsUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get vertices():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._positions);\n\n\t\tif (this._vertexNormalsDirty)\n\t\t\tthis.updateVertexNormals(this._vertexNormals);\n\n\t\tif (this._vertexTangentsDirty)\n\t\t\tthis.updateVertexTangents(this._vertexTangents);\n\n\t\tif (this._uvsDirty)\n\t\t\tthis.updateUVs(this._uvs);\n\n\t\tif (this._secondaryUVsDirty)\n\t\t\tthis.updateSecondaryUVs(this._secondaryUVs);\n\n\t\tif (this._jointIndicesDirty)\n\t\t\tthis.updateJointIndices(this._jointIndices);\n\n\t\tif (this._jointWeightsDirty)\n\t\t\tthis.updateJointWeights(this._jointWeights);\n\n\t\treturn this._pVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._positions);\n\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get vertexNormals():Array<number>\n\t{\n\t\tif (this._vertexNormalsDirty)\n\t\t\tthis.updateVertexNormals(this._vertexNormals);\n\n\t\treturn this._vertexNormals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get vertexTangents():Array<number>\n\t{\n\t\tif (this._vertexTangentsDirty)\n\t\t\tthis.updateVertexTangents(this._vertexTangents);\n\n\t\treturn this._vertexTangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Array<number>\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Array<number>\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Array<number>\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.updateUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get secondaryUVs():Array<number>\n\t{\n\t\tif (this._secondaryUVsDirty)\n\t\t\tthis.updateSecondaryUVs(this._secondaryUVs);\n\n\t\treturn this._secondaryUVs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():Array<number>\n\t{\n\t\tif (this._jointIndicesDirty)\n\t\t\tthis.updateJointIndices(this._jointIndices);\n\n\t\tif (this._useCondensedIndices)\n\t\t\treturn this._condensedJointIndices;\n\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():Array<number>\n\t{\n\t\tif (this._jointWeightsDirty)\n\t\t\tthis.updateJointWeights(this._jointWeights);\n\n\t\treturn this._jointWeights;\n\t}\n\n\t/**\n\t * Indicates whether or not to take the size of faces into account when auto-deriving vertex normals and tangents.\n\t */\n\tpublic get useFaceWeights():boolean\n\t{\n\t\treturn this._useFaceWeights;\n\t}\n\n\tpublic set useFaceWeights(value:boolean)\n\t{\n\t\tif (this._useFaceWeights == value)\n\t\t\treturn;\n\n\t\tthis._useFaceWeights = value;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyNormalsUpdate();\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyTangentsUpdate();\n\n\t\tthis._faceNormalsDirty = true;\n\t}\n\n\tpublic get numCondensedJoints():number\n\t{\n\t\tif (this._jointIndicesDirty)\n\t\t\tthis.updateJointIndices(this._jointIndices);\n\n\t\treturn this._numCondensedJoints;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\tif (this._jointIndicesDirty)\n\t\t\tthis.updateJointIndices(this._jointIndices);\n\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedArrays:boolean)\n\t{\n\t\tsuper(concatenatedArrays);\n\n\t\tthis._pSubMeshClass = TriangleSubMesh;\n\t}\n\n\tpublic getBoundingPositions():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._positions);\n\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updatePositions(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar stride:number;\n\t\tvar positions:Array<number>;\n\n\t\tthis._positions = values;\n\n\t\tif (this._positions == null)\n\t\t\tthis._positions = new Array<number>();\n\n\t\tthis._pNumVertices = this._positions.length/3;\n\n\t\tif (this._concatenateArrays) {\n\t\t\tvar len:number = this._pNumVertices*this.getStride(TriangleSubGeometry.VERTEX_DATA);\n\n\t\t\tif (this._pVertices == null)\n\t\t\t\tthis._pVertices = new Array<number>(len);\n\t\t\telse if (this._pVertices.length != len)\n\t\t\t\tthis._pVertices.length = len;\n\n\t\t\ti = 0;\n\t\t\tindex = this.getOffset(TriangleSubGeometry.POSITION_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.POSITION_DATA);\n\t\t\tpositions = this._pVertices;\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tpositions[index] = values[i++];\n\t\t\t\tpositions[index + 1] = values[i++];\n\t\t\t\tpositions[index + 2] = values[i++];\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyNormalsUpdate();\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyTangentsUpdate();\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyUVsUpdate()\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyPositionsUpdate();\n\n\t\tthis._positionsDirty = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic updateVertexNormals(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar normals:Array<number>;\n\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif ((this._vertexNormals == null || values == null) && (this._vertexNormals != null || values != null)) {\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\tthis._vertexNormals = values;\n\n\t\t\tif (values != null && this._concatenateArrays) {\n\t\t\t\ti = 0;\n\t\t\t\tindex = this.getOffset(TriangleSubGeometry.NORMAL_DATA);\n\t\t\t\tstride = this.getStride(TriangleSubGeometry.NORMAL_DATA);\n\t\t\t\tnormals = this._pVertices;\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tnormals[index] = values[i++];\n\t\t\t\t\tnormals[index + 1] = values[i++];\n\t\t\t\t\tnormals[index + 2] = values[i++];\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._vertexNormals == null) {\n\t\t\t\tthis._vertexNormals = new Array<number>(this._positions.length);\n\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\toffset = this.getOffset(TriangleSubGeometry.NORMAL_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.NORMAL_DATA);\n\n\t\t\t//autoderived normals\n\t\t\tnormals = this._concatenateArrays? this._pVertices : this._vertexNormals;\n\n\t\t\tvar f1:number = 0;\n\t\t\tvar f2:number = 1;\n\t\t\tvar f3:number = 2;\n\n\t\t\tindex = offset;\n\n\t\t\t//clear normal values\n\t\t\tvar lenV:number = normals.length;\n\t\t\twhile (index < lenV) {\n\t\t\t\tnormals[index] = 0;\n\t\t\t\tnormals[index + 1] = 0;\n\t\t\t\tnormals[index + 2] = 0;\n\t\t\t\tindex += stride;\n\t\t\t}\n\n\t\t\tvar k:number = 0;\n\t\t\tvar lenI:number = this._pIndices.length;\n\t\t\tvar weight:number;\n\n\t\t\ti = 0;\n\n\t\t\t//collect face normals\n\t\t\twhile (i < lenI) {\n\t\t\t\tweight = this._useFaceWeights? this._faceWeights[k++] : 1;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\tnormals[index] += this._faceNormals[f1]*weight;\n\t\t\t\tnormals[index + 1] += this._faceNormals[f2]*weight;\n\t\t\t\tnormals[index + 2] += this._faceNormals[f3]*weight;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\tnormals[index] += this._faceNormals[f1]*weight;\n\t\t\t\tnormals[index + 1] += this._faceNormals[f2]*weight;\n\t\t\t\tnormals[index + 2] += this._faceNormals[f3]*weight;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\tnormals[index] += this._faceNormals[f1]*weight;\n\t\t\t\tnormals[index + 1] += this._faceNormals[f2]*weight;\n\t\t\t\tnormals[index + 2] += this._faceNormals[f3]*weight;\n\t\t\t\tf1 += 3;\n\t\t\t\tf2 += 3;\n\t\t\t\tf3 += 3;\n\t\t\t}\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\n\t\t\t//average normals collections\n\t\t\twhile (index < lenV) {\n\t\t\t\tvar vx:number = normals[index];\n\t\t\t\tvar vy:number = normals[index + 1];\n\t\t\t\tvar vz:number = normals[index + 2];\n\t\t\t\tvar d:number = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\t\tif (this._concatenateArrays) {\n\t\t\t\t\tthis._vertexNormals[i++] = normals[index] = vx*d;\n\t\t\t\t\tthis._vertexNormals[i++] = normals[index + 1] = vy*d;\n\t\t\t\t\tthis._vertexNormals[i++] = normals[index + 2] = vz*d;\n\t\t\t\t} else {\n\t\t\t\t\tnormals[index] = vx*d;\n\t\t\t\t\tnormals[index + 1] = vy*d;\n\t\t\t\t\tnormals[index + 2] = vz*d;\n\t\t\t\t}\n\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyNormalsUpdate();\n\n\t\tthis._vertexNormalsDirty = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic updateVertexTangents(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar tangents:Array<number>;\n\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif ((this._vertexTangents == null || values == null) && (this._vertexTangents != null || values != null)) {\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\n\t\t\tthis._vertexTangents = values;\n\n\t\t\tif (values != null && this._concatenateArrays) {\n\t\t\t\ti = 0;\n\t\t\t\tindex = this.getOffset(TriangleSubGeometry.TANGENT_DATA);\n\t\t\t\tstride = this.getStride(TriangleSubGeometry.TANGENT_DATA);\n\t\t\t\ttangents = this._pVertices;\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\ttangents[index] = values[i++];\n\t\t\t\t\ttangents[index + 1] = values[i++];\n\t\t\t\t\ttangents[index + 2] = values[i++];\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._vertexTangents == null) {\n\t\t\t\tthis._vertexTangents = new Array<number>(this._positions.length);\n\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\tif (this._faceTangentsDirty)\n\t\t\t\tthis.updateFaceTangents();\n\n\t\t\toffset = this.getOffset(TriangleSubGeometry.TANGENT_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.TANGENT_DATA);\n\n\t\t\t//autoderived tangents\n\t\t\ttangents = this._concatenateArrays? this._pVertices : this._vertexTangents;\n\n\t\t\tindex = offset;\n\n\t\t\t//clear tangent values\n\t\t\tvar lenV:number = tangents.length;\n\t\t\twhile (index < lenV) {\n\t\t\t\ttangents[index] = 0;\n\t\t\t\ttangents[index + 1] = 0;\n\t\t\t\ttangents[index + 2] = 0;\n\n\t\t\t\tindex += stride;\n\t\t\t}\n\n\t\t\tvar k:number = 0;\n\t\t\tvar weight:number;\n\t\t\tvar f1:number = 0;\n\t\t\tvar f2:number = 1;\n\t\t\tvar f3:number = 2;\n\n\t\t\ti = 0;\n\n\t\t\t//collect face tangents\n\t\t\tvar lenI:number = this._pIndices.length;\n\t\t\twhile (i < lenI) {\n\t\t\t\tweight = this._useFaceWeights? this._faceWeights[k++] : 1;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\ttangents[index++] += this._faceTangents[f1]*weight;\n\t\t\t\ttangents[index++] += this._faceTangents[f2]*weight;\n\t\t\t\ttangents[index] += this._faceTangents[f3]*weight;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\ttangents[index++] += this._faceTangents[f1]*weight;\n\t\t\t\ttangents[index++] += this._faceTangents[f2]*weight;\n\t\t\t\ttangents[index] += this._faceTangents[f3]*weight;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\ttangents[index++] += this._faceTangents[f1]*weight;\n\t\t\t\ttangents[index++] += this._faceTangents[f2]*weight;\n\t\t\t\ttangents[index] += this._faceTangents[f3]*weight;\n\t\t\t\tf1 += 3;\n\t\t\t\tf2 += 3;\n\t\t\t\tf3 += 3;\n\t\t\t}\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\n\t\t\t//average tangents collections\n\t\t\twhile (index < lenV) {\n\t\t\t\tvar vx:number = tangents[index];\n\t\t\t\tvar vy:number = tangents[index + 1];\n\t\t\t\tvar vz:number = tangents[index + 2];\n\t\t\t\tvar d:number = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\t\tif (this._concatenateArrays) {\n\t\t\t\t\tthis._vertexTangents[i++] = tangents[index] = vx*d;\n\t\t\t\t\tthis._vertexTangents[i++] = tangents[index + 1] = vy*d;\n\t\t\t\t\tthis._vertexTangents[i++] = tangents[index + 2] = vz*d;\n\t\t\t\t} else {\n\t\t\t\t\ttangents[index] = vx*d;\n\t\t\t\t\ttangents[index + 1] = vy*d;\n\t\t\t\t\ttangents[index + 2] = vz*d;\n\t\t\t\t}\n\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyTangentsUpdate();\n\n\t\tthis._vertexTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic updateUVs(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar uvs:Array<number>;\n\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif ((this._uvs == null || values == null) && (this._uvs != null || values != null)) {\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\tthis._uvs = values;\n\n\t\t\tif (values != null && this._concatenateArrays) {\n\t\t\t\ti = 0;\n\t\t\t\tindex = this.getOffset(TriangleSubGeometry.UV_DATA);\n\t\t\t\tstride = this.getStride(TriangleSubGeometry.UV_DATA);\n\t\t\t\tuvs = this._pVertices;\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tuvs[index] = values[i++];\n\t\t\t\t\tuvs[index + 1] = values[i++];\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (this._uvs == null) {\n\t\t\t\tthis._uvs = new Array<number>(this._positions.length*2/3);\n\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\toffset = this.getOffset(TriangleSubGeometry.UV_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.UV_DATA);\n\n\t\t\t//autoderived uvs\n\t\t\tuvs = this._concatenateArrays? this._pVertices : this._uvs;\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\t\t\tvar uvIdx:number = 0;\n\n\t\t\t//clear uv values\n\t\t\tvar lenV:number = uvs.length;\n\t\t\twhile (index < lenV) {\n\t\t\t\tif (this._concatenateArrays) {\n\t\t\t\t\tthis._uvs[i++] = uvs[index] = uvIdx*.5;\n\t\t\t\t\tthis._uvs[i++] = uvs[index + 1] = 1.0 - (uvIdx & 1);\n\t\t\t\t} else {\n\t\t\t\t\tuvs[index] = uvIdx*.5;\n\t\t\t\t\tuvs[index + 1] = 1.0 - (uvIdx & 1);\n\t\t\t\t}\n\n\t\t\t\tif (++uvIdx == 3)\n\t\t\t\t\tuvIdx = 0;\n\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyTangentsUpdate();\n\n\t\tthis.notifyUVsUpdate();\n\n\t\tthis._uvsDirty = false;\n\t}\n\n\t/**\n\t * Updates the secondary uvs based on the geometry.\n\t */\n\tpublic updateSecondaryUVs(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar uvs:Array<number>;\n\n\t\tif (this._concatenateArrays && (this._secondaryUVs == null || values == null) && (this._secondaryUVs != null || values != null))\n\t\t\tthis._pNotifyVerticesUpdate();\n\n\t\tthis._secondaryUVs = values;\n\n\t\tif (values != null && this._concatenateArrays) {\n\t\t\toffset = this.getOffset(TriangleSubGeometry.SECONDARY_UV_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.SECONDARY_UV_DATA);\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\t\t\tuvs = this._pVertices;\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tuvs[index] = values[i++];\n\t\t\t\tuvs[index + 1] = values[i++];\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifySecondaryUVsUpdate();\n\n\t\tthis._secondaryUVsDirty = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic updateJointIndices(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar jointIndices:Array<number>;\n\n\t\tif (this._concatenateArrays && (this._jointIndices == null || values == null) && (this._jointIndices != null || values != null))\n\t\t\tthis._pNotifyVerticesUpdate();\n\n\t\tthis._jointIndices = values;\n\n\t\tif (values != null) {\n\t\t\toffset = this.getOffset(TriangleSubGeometry.JOINT_INDEX_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.JOINT_INDEX_DATA);\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\ti = 0;\n\t\t\t\tj = 0;\n\t\t\t\tindex = offset;\n\t\t\t\tjointIndices = this._concatenateArrays? this._pVertices : this._condensedJointIndices;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tif (!this._concatenateArrays)\n\t\t\t\t\tthis._condensedJointIndices = new Array<number>(values.length);\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tfor (j = 0; j < this._jointsPerVertex; j++) {\n\t\t\t\t\t\toldIndex = values[i++];\n\n\t\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\t\tdic[oldIndex] = newIndex*3; //3 required for the three vectors that store the matrix\n\t\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tjointIndices[index + j] = dic[oldIndex];\n\t\t\t\t\t}\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t\tthis._numCondensedJoints = newIndex;\n\t\t\t} else if (this._concatenateArrays) {\n\n\t\t\t\ti = 0;\n\t\t\t\tindex = offset;\n\t\t\t\tjointIndices = this._pVertices;\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile (j < this._jointsPerVertex)\n\t\t\t\t\t\tjointIndices[index + j++] = values[i++];\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyJointIndicesUpdate();\n\n\t\tthis._jointIndicesDirty = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic updateJointWeights(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar jointWeights:Array<number>;\n\n\t\tif (this._concatenateArrays && (this._jointWeights == null || values == null) && (this._jointWeights != null || values != null))\n\t\t\tthis._pNotifyVerticesUpdate();\n\n\t\tthis._jointWeights = values;\n\n\t\tif (values != null && this._concatenateArrays) {\n\t\t\toffset = this.getOffset(TriangleSubGeometry.JOINT_WEIGHT_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.JOINT_WEIGHT_DATA);\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\t\t\tjointWeights = this._pVertices;\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tj = 0;\n\t\t\t\twhile (j < this._jointsPerVertex)\n\t\t\t\t\tjointWeights[index + j++] = values[i++];\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyJointWeightsUpdate();\n\n\t\tthis._jointWeightsDirty = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions = null;\n\t\tthis._vertexNormals = null;\n\t\tthis._vertexTangents = null;\n\t\tthis._uvs = null;\n\t\tthis._secondaryUVs = null;\n\t\tthis._jointIndices = null;\n\t\tthis._jointWeights = null;\n\n\t\tthis._faceNormals = null;\n\t\tthis._faceWeights = null;\n\t\tthis._faceTangents = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic updateIndices(indices:Array<number>)\n\t{\n\t\tsuper.updateIndices(indices);\n\n\t\tthis._faceNormalsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis._vertexNormalsDirty = true;\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis._vertexTangentsDirty = true;\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis._uvsDirty = true;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleSubGeometry\n\t{\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenateArrays);\n\t\tclone.updateIndices(this._pIndices.concat());\n\t\tclone.updatePositions(this._positions.concat());\n\n\t\tif (this._vertexNormals && !this._autoDeriveNormals)\n\t\t\tclone.updateVertexNormals(this._vertexNormals.concat());\n\t\telse\n\t\t\tclone.updateVertexNormals(null);\n\n\t\tif (this._uvs && !this._autoDeriveUVs)\n\t\t\tclone.updateUVs(this._uvs.concat());\n\t\telse\n\t\t\tclone.updateUVs(null);\n\n\t\tif (this._vertexTangents && !this._autoDeriveTangents)\n\t\t\tclone.updateVertexTangents(this._vertexTangents.concat());\n\t\telse\n\t\t\tclone.updateVertexTangents(null);\n\n\t\tif (this._secondaryUVs)\n\t\t\tclone.updateSecondaryUVs(this._secondaryUVs.concat());\n\n\t\tif (this._jointIndices) {\n\t\t\tclone.jointsPerVertex = this._jointsPerVertex;\n\t\t\tclone.updateJointIndices(this._jointIndices.concat());\n\t\t}\n\n\t\tif (this._jointWeights)\n\t\t\tclone.updateJointWeights(this._jointWeights.concat());\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar uvs:Array<number>;\n\n\t\tuvs = this._uvs;\n\n\t\tvar ratioU:number = scaleU/this._scaleU;\n\t\tvar ratioV:number = scaleV/this._scaleV;\n\n\t\tthis._scaleU = scaleU;\n\t\tthis._scaleV = scaleV;\n\n\t\tvar len:number = uvs.length;\n\n\t\toffset = 0;\n\t\tstride = 2;\n\n\t\tindex = offset;\n\n\t\twhile (index < len) {\n\t\t\tuvs[index] *= ratioU;\n\t\t\tuvs[index + 1] *= ratioV;\n\t\t\tindex += stride;\n\t\t}\n\n\t\tthis.notifyUVsUpdate();\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar positions:Array<number>;\n\n\t\tpositions = this._positions;\n\n\t\tvar len:number = positions.length;\n\n\t\toffset = 0;\n\t\tstride = 3;\n\n\t\ti = 0;\n\t\tindex = offset;\n\t\twhile (i < len) {\n\t\t\tpositions[index] *= scale;\n\t\t\tpositions[index + 1] *= scale;\n\t\t\tpositions[index + 2] *= scale;\n\n\t\t\ti += 3;\n\t\t\tindex += stride;\n\t\t}\n\n\t\tthis.notifyPositionsUpdate();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tif (this._concatenateArrays) {\n\t\t\tpositions = this._pVertices;\n\t\t\tnormals = this._pVertices;\n\t\t\ttangents = this._pVertices;\n\t\t} else {\n\t\t\tpositions = this._positions;\n\t\t\tnormals = this._vertexNormals;\n\t\t\ttangents = this._vertexTangents;\n\t\t}\n\n\t\tvar len:number = this._positions.length/3;\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\n\t\tvar bakeNormals:boolean = this._vertexNormals != null;\n\t\tvar bakeTangents:boolean = this._vertexTangents != null;\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (bakeNormals || bakeTangents) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = this.getOffset(TriangleSubGeometry.POSITION_DATA);\n\t\tvar ni0:number = this.getOffset(TriangleSubGeometry.NORMAL_DATA);\n\t\tvar ti0:number = this.getOffset(TriangleSubGeometry.TANGENT_DATA);\n\n\t\tvar vStride:number = this.getStride(TriangleSubGeometry.POSITION_DATA);\n\t\tvar nStride:number = this.getStride(TriangleSubGeometry.NORMAL_DATA);\n\t\tvar tStride:number = this.getStride(TriangleSubGeometry.TANGENT_DATA);\n\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\n\t\t\t// bake position\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += vStride;\n\n\t\t\t// bake normal\n\t\t\tif (bakeNormals) {\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += nStride;\n\t\t\t}\n\n\t\t\t// bake tangent\n\t\t\tif (bakeTangents) {\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tStride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyPositionsUpdate();\n\t\tthis.notifyNormalsUpdate();\n\t\tthis.notifyTangentsUpdate();\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar vi:number;\n\t\tvar v0:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\tvar positions:Array<number> = this._positions\n\t\tvar uvs:Array<number> = this._uvs;\n\n\t\tvar len:number = this._pIndices.length;\n\n\t\tif (this._faceTangents == null)\n\t\t\tthis._faceTangents = new Array<number>(len);\n\n\t\twhile (i < len) {\n\t\t\tindex1 = this._pIndices[i];\n\t\t\tindex2 = this._pIndices[i + 1];\n\t\t\tindex3 = this._pIndices[i + 2];\n\n\t\t\tv0 = uvs[index1*2 + 1];\n\t\t\tdv1 = uvs[index2*2 + 1] - v0;\n\t\t\tdv2 = uvs[index3*2 + 1] - v0;\n\n\t\t\tvi = index1*3;\n\t\t\tx0 = positions[vi];\n\t\t\ty0 = positions[vi + 1];\n\t\t\tz0 = positions[vi + 2];\n\t\t\tvi = index2*3;\n\t\t\tdx1 = positions[vi] - x0;\n\t\t\tdy1 = positions[vi + 1] - y0;\n\t\t\tdz1 = positions[vi + 2] - z0;\n\t\t\tvi = index3*3;\n\t\t\tdx2 = positions[vi] - x0;\n\t\t\tdy2 = positions[vi + 1] - y0;\n\t\t\tdz2 = positions[vi + 2] - z0;\n\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tthis._faceTangents[i++] = denom*cx;\n\t\t\tthis._faceTangents[i++] = denom*cy;\n\t\t\tthis._faceTangents[i++] = denom*cz;\n\t\t}\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\tvar positions:Array<number> = this._positions;\n\n\t\tvar len:number = this._pIndices.length;\n\n\t\tif (this._faceNormals == null)\n\t\t\tthis._faceNormals = new Array<number>(len);\n\n\t\tif (this._useFaceWeights && this._faceWeights == null)\n\t\t\tthis._faceWeights = new Array<number>(len/3);\n\n\t\twhile (i < len) {\n\t\t\tindex = this._pIndices[i++]*3;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = this._pIndices[i++]*3;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = this._pIndices[i++]*3;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tif (this._useFaceWeights) {\n\t\t\t\tvar w:number = d*10000;\n\n\t\t\t\tif (w < 1)\n\t\t\t\t\tw = 1;\n\n\t\t\t\tthis._faceWeights[k++] = w;\n\t\t\t}\n\n\t\t\td = 1/d;\n\n\t\t\tthis._faceNormals[j++] = cx*d;\n\t\t\tthis._faceNormals[j++] = cy*d;\n\t\t\tthis._faceNormals[j++] = cz*d;\n\t\t}\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _pNotifyVerticesUpdate()\n\t{\n\t\tthis._pStrideOffsetDirty = true;\n\n\t\tthis.notifyPositionsUpdate();\n\t\tthis.notifyNormalsUpdate();\n\t\tthis.notifyTangentsUpdate();\n\t\tthis.notifyUVsUpdate();\n\t\tthis.notifySecondaryUVsUpdate();\n\t\tthis.notifyJointIndicesUpdate();\n\t\tthis.notifyJointWeightsUpdate();\n\t}\n\n\tprivate notifyPositionsUpdate()\n\t{\n\t\tif (this._positionsDirty)\n\t\t\treturn;\n\n\t\tthis._positionsDirty = true;\n\n\t\tif (!this._positionsUpdated)\n\t\t\tthis._positionsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.POSITION_DATA);\n\n\t\tthis.dispatchEvent(this._positionsUpdated);\n\t}\n\n\tprivate notifyNormalsUpdate()\n\t{\n\t\tif (this._vertexNormalsDirty)\n\t\t\treturn;\n\n\t\tthis._vertexNormalsDirty = true;\n\n\t\tif (!this._normalsUpdated)\n\t\t\tthis._normalsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.NORMAL_DATA);\n\n\t\tthis.dispatchEvent(this._normalsUpdated);\n\t}\n\n\tprivate notifyTangentsUpdate()\n\t{\n\t\tif (this._vertexTangentsDirty)\n\t\t\treturn;\n\n\t\tthis._vertexTangentsDirty = true;\n\n\t\tif (!this._tangentsUpdated)\n\t\t\tthis._tangentsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.TANGENT_DATA);\n\n\t\tthis.dispatchEvent(this._tangentsUpdated);\n\t}\n\n\tprivate notifyUVsUpdate()\n\t{\n\t\tif (this._uvsDirty)\n\t\t\treturn;\n\n\t\tthis._uvsDirty = true;\n\n\t\tif (!this._uvsUpdated)\n\t\t\tthis._uvsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.UV_DATA);\n\n\t\tthis.dispatchEvent(this._uvsUpdated);\n\t}\n\n\tprivate notifySecondaryUVsUpdate()\n\t{\n\t\tif (this._secondaryUVsDirty)\n\t\t\treturn;\n\n\t\tthis._secondaryUVsDirty = true;\n\n\t\tif (!this._secondaryUVsUpdated)\n\t\t\tthis._secondaryUVsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.SECONDARY_UV_DATA);\n\n\t\tthis.dispatchEvent(this._secondaryUVsUpdated);\n\t}\n\n\tprivate notifyJointIndicesUpdate()\n\t{\n\t\tif (this._jointIndicesDirty)\n\t\t\treturn;\n\n\t\tthis._jointIndicesDirty = true;\n\n\t\tif (!this._jointIndicesUpdated)\n\t\t\tthis._jointIndicesUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.JOINT_INDEX_DATA);\n\n\t\tthis.dispatchEvent(this._jointIndicesUpdated);\n\t}\n\n\tprivate notifyJointWeightsUpdate()\n\t{\n\t\tif (this._jointWeightsDirty)\n\t\t\treturn;\n\n\t\tthis._jointWeightsDirty = true;\n\n\t\tif (!this._jointWeightsUpdated)\n\t\t\tthis._jointWeightsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.JOINT_WEIGHT_DATA);\n\n\t\tthis.dispatchEvent(this._jointWeightsUpdated);\n\t}\n}\n\nexport = TriangleSubGeometry;",
    "import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\n\nimport IRendererPool\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.TriangleSubMesh\n */\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\n{\n\tprivate _subGeometry:TriangleSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.TRIANGLE_SUB_MESH;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t */\n\tpublic get subGeometry():TriangleSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new TriangleSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\n\t * @param material An optional material used to render this TriangleSubMesh.\n\t */\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\n\t{\n\t\trendererPool.applyTriangleSubMesh(this);\n\t}\n}\n\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tprivate _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Array<number> = new Array<number>(16);\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Mesh;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pUpdate();\n\t\t}\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject implements IAsset\n{\n\tprivate _mouseChildren:boolean = true;\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\n\tpublic _iIsRoot:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.CONTAINER;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\n\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildInternal(child);\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._children.push(child);\n\n\t\treturn child;\n\t}\n\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number /*int*/):DisplayObject\n\t{\n\t\treturn child;\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:DisplayObjectContainer = new DisplayObjectContainer();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.partition = this.partition;\n\t\tclone.name = name;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addChild(this._children[i].clone());\n\n\t\t// todo: implement for all subtypes\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeWithChildren()\n\t{\n\t\tthis.dispose();\n\n\t\twhile (this.numChildren > 0)\n\t\t\tthis.getChildAt(0).dispose();\n\t}\n\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildInternal(child);\n\n\t\tchild.iSetParent(null);\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChild(this._children[index]);\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number /*int*/, index2:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitVisibility(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\n\t{\n\t\tsuper._pUpdateImplicitPartition(value, scene);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tprivate removeChildInternal(child:DisplayObject):DisplayObject\n\t{\n\t\tthis._children.splice(this.getChildIndex(child), 1);\n\n\t\treturn child;\n\t}\n}\n\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport AssetLoader\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\nimport AssetLoaderContext\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\nimport AssetLoaderToken\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\n\n/**\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the Loader object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The Loader class overrides the following methods that it inherits,\n * because a Loader object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the Loader object's root SWF file), you may want to define a\n * mask for the Loader object, to prevent the loaded content(which is a child\n * of the Loader object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass Loader extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loadingSessions:Array<AssetLoader>;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onResourceCompleteDelegate:Function;\n\tprivate _onAssetCompleteDelegate:Function;\n\n\tprivate _content:DisplayObject;\n\tprivate _contentLoaderInfo:LoaderInfo;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\n\t * LoaderInfo objects are shared between the Loader object and the loaded\n\t * content object. The LoaderInfo object supplies loading progress\n\t * information and statistics about the loaded file.\n\t *\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\n\t * LoaderInfo object, even before the content is loaded, so that you can add\n\t * event listeners to the object prior to the load.</p>\n\t *\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n\t */\n\tpublic get contentLoaderInfo():LoaderInfo\n\t{\n\t\treturn this._contentLoaderInfo;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\n\t\tthis._loadingSessions = new Array<AssetLoader>();\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.stopAllLoadingSessions();\n\t\t\tthis._loadingSessions = null;\n\t\t\treturn\n\t\t}\n\t\tvar i:number /*int*/;\n\t\tvar length:number /*int*/ = this._loadingSessions.length;\n\t\tfor (i = 0; i < length; i++) {\n\t\t\tthis.removeListeners(this._loadingSessions[i]);\n\t\t\tthis._loadingSessions[i].stop();\n\t\t\tthis._loadingSessions[i] = null;\n\t\t}\n\t\tthis._loadingSessions = null;\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, AssetLoader will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tvar token:AssetLoaderToken;\n\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\ttoken = lib.load(request, context, ns, parser);\n\t\t} else {\n\t\t\tvar loader:AssetLoader = new AssetLoader();\n\t\t\tthis._loadingSessions.push(loader);\n\t\t\ttoken = loader.load(request, context, ns, parser);\n\t\t}\n\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\ttoken._iLoader._iAddErrorHandler(this.onLoadError);\n\t\ttoken._iLoader._iAddParseErrorHandler(this.onParseError);\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tvar token:AssetLoaderToken;\n\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\ttoken = lib.loadData(data, context, ns, parser);\n\t\t} else {\n\t\t\tvar loader:AssetLoader = new AssetLoader();\n\t\t\tthis._loadingSessions.push(loader);\n\t\t\ttoken = loader.loadData(data, '', context, ns, parser);\n\t\t}\n\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\ttoken._iLoader._iAddErrorHandler(this.onLoadError);\n\t\ttoken._iLoader._iAddParseErrorHandler(this.onParseError);\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tAssetLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tAssetLoader.enableParsers(parserClasses);\n\t}\n\n\n\tprivate removeListeners(dispatcher:EventDispatcher)\n\t{\n\t\tdispatcher.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tdispatcher.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:LoaderEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\t}\n}\n\nexport = Loader;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\nclass Scene extends EventDispatcher\n{\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\n\tprivate _partition:Partition;\n\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\n\tpublic _iCollectionMark = 0;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._partition = new Partition(new NodeBase());\n\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\n\n\t\tthis._iSceneGraphRoot._iSetScene(this);\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\n\t\tthis._iSceneGraphRoot.partition = this._partition;\n\t}\n\n\tpublic traversePartitions(traverser:CollectorBase)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\tthis._iCollectionMark++;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\tpublic get partition():Partition\n\t{\n\t\treturn this._iSceneGraphRoot.partition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tthis._iSceneGraphRoot.partition = value;\n\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\n\t}\n\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._iSceneGraphRoot.contains(child);\n\t}\n\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.addChild(child);\n\t}\n\n\tpublic removeChild(child:DisplayObject)\n\t{\n\t\tthis._iSceneGraphRoot.removeChild(child);\n\t}\n\n\tpublic removeChildAt(index:number)\n\t{\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\n\t}\n\n\n\tpublic getChildAt(index:number):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\n\t}\n\n\tpublic get numChildren():number\n\t{\n\t\treturn this._iSceneGraphRoot.numChildren;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport CSSRendererBase\t\t\t\t= require(\"awayjs-display/lib/render/CSSRendererBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:CollectorBase;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tdocument.body.style.margin = \"0px\";\n\n\t\tthis._htmlElement = document.createElement(\"div\");\n\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\tdocument.body.appendChild(this._htmlElement);\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate onScenePartitionChanged(event:SceneEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tthis._htmlElement.style.width = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tthis._htmlElement.style.height = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tthis._htmlElement.style.left = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tthis._htmlElement.style.top = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():CollectorBase\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass ControllerBase\n{\n\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject.invalidatePartition();\n\t\t}\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject._iController = this;\n\t\t}\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pTargetObject) {\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\t} else {\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis.pNotifyUpdate();\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tinterpolate = interpolate; // unused: prevents warning\n\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis.pNotifyUpdate();\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "class ContextMode\n{\n\tstatic AUTO:string = \"auto\";\n\tstatic WEBGL:string = \"webgl\";\n\tstatic FLASH:string = \"flash\";\n\tstatic NATIVE:string = \"native\";\n}\n\nexport = ContextMode;",
    "import BitmapData\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a BitmapData object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its BitmapData reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same BitmapData object,\n * multiple display objects can use the same complex BitmapData object without\n * incurring the memory overhead of a BitmapData object for each display\n * object instance.</p>\n *\n * <p>A BitmapData object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.BILLBOARD;\n\t}\n\n\t/**\n\t * The BitmapData object being referenced.\n\t */\n\tpublic bitmapData:BitmapData; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\t}\n\n\t/**\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\tpublic pixelSnapping:string; //TODO\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\tpublic smoothing:boolean; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\n\n\t\tthis.material = material;\n\n\t\tthis._billboardWidth = material.width;\n\t\tthis._billboardHeight = material.height;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardWidth;\n\t\tthis._pBoxBounds.height = this._billboardHeight;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onSizeChanged(event:MaterialEvent)\n\t{\n\t\tthis._billboardWidth = this._material.width;\n\t\tthis._billboardHeight = this._material.height;\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tthis._iCollectRenderable(rendererPool);\n\t}\n\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\n\t{\n\t\trendererPool.applyBillboard(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.CAMERA;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:number[] = new Array<number>(16);\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\n\t\tvar invLen:number;\n\t\tthis.viewProjection.copyRawDataTo(raw);\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tthis._iCollectRenderable(rendererPool);\n\t}\n\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterCamera(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterCamera(this);\n\t}\n}\n\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterDirectionalLight(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterDirectionalLight(this);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeTextureBase\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tprivate _diffuseMap:CubeTextureBase;\n\tprivate _specularMap:CubeTextureBase;\n\n\tconstructor(diffuseMap:CubeTextureBase, specularMap:CubeTextureBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._diffuseMap = diffuseMap;\n\t\tthis._specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get diffuseMap():CubeTextureBase\n\t{\n\t\treturn this._diffuseMap;\n\t}\n\n\tpublic set diffuseMap(value:CubeTextureBase)\n\t{\n\t\tthis._diffuseMap = value;\n\t}\n\n\tpublic get specularMap():CubeTextureBase\n\t{\n\t\treturn this._specularMap;\n\t}\n\n\tpublic set specularMap(value:CubeTextureBase)\n\t{\n\t\tthis._specularMap = value;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterLightProbe(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterLightProbe(this);\n\t}\n}\n\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.LINE_SEGMENT;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._startPosition = null;\n\t\tthis._endPosition = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRenderableUpdate()\n\t{\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tthis._iCollectRenderable(rendererPool);\n\t}\n\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\n\t{\n\t\trendererPool.applyLineSegment(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\n * of the geometry to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _subMeshes:Array<ISubMesh>;\n\tprivate _geometry:Geometry;\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGeometry:boolean = true;\n\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._animator)\n\t\t\tthis._animator.removeOwner(this);\n\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (subMesh.material) {\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\n\t\t\t}\n\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tthis._animator.addOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.MESH;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\n\n\t\tthis._material = value;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iAddOwner(subMesh);\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation geometry.\n\t */\n\tpublic get shareAnimationGeometry():boolean\n\t{\n\t\treturn this._shareAnimationGeometry;\n\t}\n\n\tpublic set shareAnimationGeometry(value:boolean)\n\t{\n\t\tthis._shareAnimationGeometry = value;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._subMeshes = new Array<ISubMesh>();\n\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\n\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\n\t\tthis.geometry = geometry || new Geometry();\n\n\t\tthis.material = material;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\n\t\tthis._iMatrix3D.identity();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.material = null;\n\t\tthis.geometry = null;\n\t}\n\n\t/**\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\n\t * @return\n\t */\n\tpublic disposeWithAnimatorAndChildren()\n\t{\n\t\tthis.disposeWithChildren();\n\n\t\t if (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * geometry, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\n\t * </code>\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Mesh = new Mesh(this._geometry, this._material);\n\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.pivot = this.pivot;\n\t\tclone.partition = this.partition;\n\t\tclone.boundsType = this.boundsType;\n\n\n\t\tclone.name = this.name;\n\t\tclone.castsShadows = this.castsShadows;\n\t\tclone.shareAnimationGeometry = this.shareAnimationGeometry;\n\t\tclone.mouseEnabled = this.mouseEnabled;\n\t\tclone.mouseChildren = this.mouseChildren;\n\t\t//this is of course no proper cloning\n\t\t//maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\n\t\tclone.extra = this.extra;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n\n\t\tlen = this.numChildren;\n\t\tvar obj:any;\n\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tobj = this.getChildAt(i).clone();\n\t\t\tclone.addChild(<DisplayObjectContainer> obj);\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tclone.animator = this._animator.clone();\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @returns {SubMeshBase}\n\t */\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\n\t{\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Array<number>;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\tminX = maxX = boundingPositions[i];\n\t\t\tminY = maxY = boundingPositions[i + 1];\n\t\t\tminZ = maxZ = boundingPositions[i + 2];\n\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\n\t\t\t\tfor (i = 0; i < len; i+=3) {\n\t\t\t\t\tp = boundingPositions[i];\n\t\t\t\t\tif (p < minX)\n\t\t\t\t\t\tminX = p;\n\t\t\t\t\telse if (p > maxX)\n\t\t\t\t\t\tmaxX = p;\n\n\t\t\t\t\tp = boundingPositions[i + 1];\n\n\t\t\t\t\tif (p < minY)\n\t\t\t\t\t\tminY = p;\n\t\t\t\t\telse if (p > maxY)\n\t\t\t\t\t\tmaxY = p;\n\n\t\t\t\t\tp = boundingPositions[i + 2];\n\n\t\t\t\t\tif (p < minZ)\n\t\t\t\t\t\tminZ = p;\n\t\t\t\t\telse if (p > maxZ)\n\t\t\t\t\t\tmaxZ = p;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\t\tvar centerX:number = box.x + box.width/2;\n\t\tvar centerY:number = box.y + box.height/2;\n\t\tvar centerZ:number = box.z + box.depth/2;\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Array<number>;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\n\t\t\t\tfor (i = 0; i < len; i += 3) {\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._pSphereBounds.x = centerX;\n\t\tthis._pSphereBounds.y = centerY;\n\t\tthis._pSphereBounds.z = centerZ;\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * Called when a SubGeometry was added to the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryAdded(event:GeometryEvent)\n\t{\n\t\tthis.addSubMesh(event.subGeometry);\n\t}\n\n\t/**\n\t * Called when a SubGeometry was removed from the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\n\t{\n\t\tvar subMesh:ISubMesh;\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar i:number;\n\n\t\t// Important! This has to be done here, and not delayed until the\n\t\t// next render loop, since this may be caused by the geometry being\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry == subGeom) {\n\t\t\t\tsubMesh.dispose();\n\n\t\t\t\tthis._subMeshes.splice(i, 1);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t--len;\n\t\tfor (; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iIndex = i;\n\t}\n\n\t/**\n\t * Adds a SubMeshBase wrapping a SubGeometry.\n\t *\n\t * @param subGeometry\n\t */\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\n\t{\n\t\tvar SubMeshClass:ISubMeshClass = subGeometry.subMeshClass;\n\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\n\t\tvar len:number = this._subMeshes.length;\n\n\t\tsubMesh._iIndex = len;\n\n\t\tthis._subMeshes[len] = subMesh;\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testMeshCollision(this, this._pPickingCollisionVO, shortestCollisionDistance, findClosest);\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\tthis._subMeshes[i]._iCollectRenderable(rendererPool);\n\t}\n\n\tpublic _iInvalidateRenderableGeometries()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = Mesh;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:number[] = new Array<number>(16);\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterPointLight(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterPointLight(this);\n\t}\n}\n\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/base/BlendMode\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport CubeTextureBase\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderObjectOwner\n{\n\tprivate _cubeMap:CubeTextureBase;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _renderObjects:Array<IRenderObject> = new Array<IRenderObject>();\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _uvTransform:UVTransform;\n\tprivate _owners:Array<IRenderableOwner>;\n\tprivate _mipmap:boolean = false;\n\tprivate _smooth:boolean = true;\n\t\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\tpublic _pInvalidateRenderObject()\n\t{\n\t\tvar len:number = this._renderObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderObjects[i].invalidateRenderObject();\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pIinvalidatePasses()\n\t{\n\t\tvar len:number = this._renderObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderObjects[i].invalidatePasses();\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get cubeMap():CubeTextureBase\n\t{\n\t\treturn this._cubeMap;\n\t}\n\n\tpublic set cubeMap(value:CubeTextureBase)\n\t{\n\t\tif (value && this._cubeMap && (value.format != this._cubeMap.format))\n\t\t\tthis._pInvalidateRenderObject();\n\n\t\tthis._cubeMap = value;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(cubeMap:CubeTextureBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\t\tthis._owners = new Array<IRenderableOwner>(this);\n\n\t\tthis.cubeMap = cubeMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.SKYBOX;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renderObjects.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renderObjects[i].dispose();\n\n\t\tthis._renderObjects = new Array<IRenderObject>();\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\n\t{\n\t\t//skybox do not get collected in the standard entity list\n\t}\n\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\n\t{\n\n\t}\n\n\tpublic _iAddRenderObject(renderObject:IRenderObject):IRenderObject\n\t{\n\t\tthis._renderObjects.push(renderObject);\n\n\t\treturn renderObject;\n\t}\n\n\tpublic _iRemoveRenderObject(renderObject:IRenderObject):IRenderObject\n\t{\n\t\tthis._renderObjects.splice(this._renderObjects.indexOf(renderObject), 1);\n\n\t\treturn renderObject;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic getRenderObject(renderablePool:IRenderablePool)\n\t{\n\t\treturn renderablePool.getSkyboxRenderObject(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterSkybox(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterSkybox(this);\n\t}\n}\n\nexport = Skybox;",
    "import Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends DisplayObject\n{\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic textColor:number /*int*/;\n\n\t/**\n\t * The height of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t * \n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass CastError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends Event\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n}\n\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass DisplayObjectEvent extends Event\n{\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\n\n\tpublic object:DisplayObject;\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis.object = object;\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GeometryEvent\n* @see away3d.core.base.Geometry\n*/\nclass GeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_ADDED:string = \"SubGeometryAdded\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"SubGeometryRemoved\";\n\n\tpublic static BOUNDS_INVALID:string = \"BoundsInvalid\";\n\n\tprivate _subGeometry:SubGeometryBase;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\n\t */\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\n\t */\n\tpublic get subGeometry():SubGeometryBase\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\n\t}\n}\n\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LightEvent extends Event\n{\n\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():Event\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass MaterialEvent extends Event\n{\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableOwnerEvent\n * @see away.core.base.Geometry\n */\nclass RenderableOwnerEvent extends Event\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static RENDER_OBJECT_OWNER_UPDATED:string = \"renderObjectOwnerUpdated\";\n\n\tprivate _renderObjectOwner:IRenderObjectOwner;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderObjectOwner:IRenderObjectOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderObjectOwner = renderObjectOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderObjectOwner():IRenderObjectOwner\n\t{\n\t\treturn this._renderObjectOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new RenderableOwnerEvent(this.type, this._renderObjectOwner);\n\t}\n}\n\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass RendererEvent extends Event\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ResizeEvent extends Event\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n}\n\nexport = ResizeEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass SceneEvent extends Event\n{\n\t/**\n\t *\n\t */\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic displayObject:DisplayObject;\n\n\tconstructor(type:string, displayObject:DisplayObject)\n\t{\n\t\tsuper(type);\n\n\t\tthis.displayObject = displayObject;\n\t}\n}\n\nexport = SceneEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass StageEvent extends Event\n{\n\tpublic static CONTEXT_CREATED:string = \"contextCreated\";\n\tpublic static CONTEXT_DISPOSED:string = \"contextDisposed\";\n\tpublic static CONTEXT_RECREATED:string = \"contextRecreated\";\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = StageEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.SubGeometryEvent\n * @see away.core.base.Geometry\n */\nclass SubGeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry's index data has been updated.\n\t */\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry's vertex data has been updated.\n\t */\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\n\n\tprivate _dataType:string;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, dataType:string = \"\")\n\t{\n\t\tsuper(type);\n\n\t\tthis._dataType = dataType;\n\t}\n\n\t/**\n\t * The data type of the vertex data.\n\t */\n\tpublic get dataType():string\n\t{\n\t\treturn this._dataType;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new SubGeometryEvent(this.type, this._dataType);\n\t}\n}\n\nexport = SubGeometryEvent;",
    "import BitmapData\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport BitmapTexture\t\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultBitmapData:BitmapData;\n\tprivate static _defaultTriangleMaterial:BasicMaterial;\n\tprivate static _defaultLineMaterial:BasicMaterial;\n\tprivate static _defaultTexture:BitmapTexture;\n\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.assetType == AssetType.LINE_SUB_MESH) {\n\t\t\tif (!DefaultMaterialManager._defaultLineMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultLineMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultLineMaterial;\n\t\t} else {\n\t\t\tif (!DefaultMaterialManager._defaultTriangleMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultTriangleMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultTriangleMaterial;\n\t\t}\n\t}\n\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):BitmapTexture\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tDefaultMaterialManager._defaultBitmapData = DefaultMaterialManager.createCheckeredBitmapData();\n\t\tDefaultMaterialManager._defaultTexture = new BitmapTexture(DefaultMaterialManager._defaultBitmapData);\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tpublic static createCheckeredBitmapData():BitmapData\n\t{\n\t\tvar b:BitmapData = new BitmapData(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\tfor (j = 0; j < 8; j++) {\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn b;\n\t}\n\n\tprivate static createDefaultTriangleMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTriangleMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\n\t\tDefaultMaterialManager._defaultTriangleMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultTriangleMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultTriangleMaterial.name = \"defaultTriangleMaterial\";\n\t}\n\n\tprivate static createDefaultLineMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultLineMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultLineMaterial.name = \"defaultLineMaterial\";\n\t}\n}\n\nexport = DefaultMaterialManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\tif (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t // Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a mouseChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.push(view);\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = sourceEvent.clientX;\n\t\t\tevent.screenY = sourceEvent.clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event:MouseEvent)\n\t{\n\t\tif (this._iUpdateDirty)\n\t\t\treturn;\n\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = event.clientX;\n\t\tvar mouseY:number = event.clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase implements IRenderObjectOwner\n{\n    private _preserveAlpha:boolean = false;\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Texture2DBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tif (textureColor instanceof Texture2DBase) {\n\t\t\tthis.texture = <Texture2DBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n        this._preserveAlpha = value;\n        this._pInvalidateRenderObject();\n    }\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic getRenderObject(renderablePool:IRenderablePool):IRenderObject\n\t{\n\t\treturn renderablePool.getMaterialRenderObject(this);\n\t}\n}\n\nexport = BasicMaterial;",
    "import MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ImageTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and MultiPassMaterialBase, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass CSSMaterialBase extends MaterialBase\n{\n\tprivate _imageElement:HTMLImageElement;\n\tprivate _imageStyle:MSStyleCSSProperties;\n\n\n\tpublic get imageElement():HTMLImageElement\n\t{\n\t\treturn this._imageElement;\n\t}\n\n\tpublic get imageStyle():MSStyleCSSProperties\n\t{\n\t\treturn this._imageStyle;\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tif (value instanceof ImageTexture) {\n\t\t\tthis._imageElement = (<ImageTexture> value).htmlImageElement;\n\n\t\t\tvar node:HTMLStyleElement = document.createElement(\"style\");\n\t\t\tnode.type = \"text/css\";\n\t\t\tdocument.getElementsByTagName(\"head\")[0].appendChild(node);\n\n\t\t\tvar sheet:CSSStyleSheet = <CSSStyleSheet> document.styleSheets[document.styleSheets.length - 1];\n\t\t\tsheet.insertRule(\".material\" + this.id + \"{ }\", 0);\n\t\t\tvar style:MSStyleCSSProperties = (<CSSStyleRule> sheet.cssRules[0]).style;\n\n\t\t\tstyle.backgroundImage = \"url(\" + this._imageElement.src + \")\";\n\t\t\tstyle.backgroundSize = \"100% 100%\";\n\t\t\tstyle.position = \"absolute\";\n\t\t\tstyle.width = this._imageElement.width + \"px\";\n\t\t\tstyle.height = this._imageElement.height + \"px\";\n\t\t\tstyle.transformOrigin\n\t\t\t\t= style[\"-webkit-transform-origin\"]\n\t\t\t\t= style[\"-moz-transform-origin\"]\n\t\t\t\t= style[\"-o-transform-origin\"]\n\t\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\t\tthis._pHeight = this._imageElement.height;\n\t\t\tthis._pWidth = this._imageElement.width;\n\n\t\t\tthis._pNotifySizeChanged();\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor(texture:Texture2DBase = null, smooth:boolean = true, repeat:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis.texture = texture;\n\n\t\tthis.smooth = smooth;\n\t\tthis.repeat = repeat;\n\t}\n}\n\nexport = CSSMaterialBase;",
    "import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass CurveMaterial extends MaterialBase implements IRenderObjectOwner\n{\n    private _preserveAlpha:boolean = false;\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Texture2DBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tif (textureColor instanceof Texture2DBase) {\n\t\t\tthis.texture = <Texture2DBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n        this._preserveAlpha = value;\n        this._pInvalidateRenderObject();\n    }\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic getRenderObject(renderablePool:IRenderablePool):IRenderObject\n\t{\n\t\treturn renderablePool.getMaterialRenderObject(this);\n\t}\n}\n\nexport = CurveMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/base/BlendMode\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\n\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends NamedAssetBase implements IRenderObjectOwner\n{\n\tprivate _colorTransform:ColorTransform;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\t\n\tprivate _sizeChanged:MaterialEvent;\n\tprivate _renderObjects:Array<IRenderObject> = new Array<IRenderObject>();\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\n\t/**\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\n\t *\n\t * @private\n\t */\n\tpublic _iMaterialId:number = 0;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderableOwner>;\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _mipmap:boolean = true;\n\tprivate _smooth:boolean = true;\n\tprivate _repeat:boolean = false;\n\tprivate _color:number = 0xFFFFFF;\n\tpublic _pTexture:Texture2DBase;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tpublic _pHeight:number = 1;\n\tpublic _pWidth:number = 1;\n\n\tprivate _onLightChangeDelegate:(event:Event) => void;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.MATERIAL;;\n\t}\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis._owners = new Array<IRenderableOwner>();\n\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tthis._pInvalidatePasses();\n\n\t\tthis._pHeight = this._pTexture.height;\n\t\tthis._pWidth = this._pTexture.width;\n\n\t\tthis._pNotifySizeChanged();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renderObjects.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renderObjects[i].dispose();\n\n\t\tthis._renderObjects = new Array<IRenderObject>();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderableOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderableOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OBJECT_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * Removes an IRenderableOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OBJECT_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pInvalidatePasses()\n\t{\n\t\tvar len:number = this._renderObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderObjects[i].invalidatePasses();\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tvar len:number = this._renderObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderObjects[i].invalidateAnimation();\n\t}\n\t\n\tpublic _pInvalidateRenderObject()\n\t{\n\t\tvar len:number = this._renderObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderObjects[i].invalidateRenderObject();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\tpublic _pNotifySizeChanged()\n\t{\n\t\tif (!this._sizeChanged)\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\n\n\t\tthis.dispatchEvent(this._sizeChanged);\n\t}\n\n\tpublic _iAddRenderObject(renderObject:IRenderObject):IRenderObject\n\t{\n\t\tthis._renderObjects.push(renderObject);\n\n\t\treturn renderObject;\n\t}\n\n\tpublic _iRemoveRenderObject(renderObject:IRenderObject):IRenderObject\n\t{\n\t\tthis._renderObjects.splice(this._renderObjects.indexOf(renderObject), 1);\n\n\t\treturn renderObject;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic getRenderObject(renderablePool:IRenderablePool):IRenderObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends NamedAssetBase implements IAsset\n{\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.LIGHT_PICKER;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(renderable:IRenderable)\n\t{\n\t\tthis.updateProbeWeights(renderable);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(renderable:IRenderable)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:Function;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _changeDispatcher:EventDispatcher;\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis._changeDispatcher = new EventDispatcher(this);\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic pDrawDepthMap(target:RenderTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform = this._pOverallDepthCamera.transform;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.addEventListener(type, listener);\n\t}\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\n\t}\n\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\treturn this._changeDispatcher.dispatchEvent(event);\n\t}\n\n\tpublic hasEventListener(type:string):boolean\n\t{\n\t\treturn this._changeDispatcher.hasEventListener(type);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():TextureProxyBase\n\t{\n\t\tthrow new PartialImplementationError();\n\t\t/*\n\t\t return new RenderCubeTexture( this._depthMapSize );\n\t\t */\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:RenderTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:TextureProxyBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nclass ShadowMapperBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tprivate _depthMap:TextureProxyBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tprivate _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureProxyBase)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = this._depthMap.size;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureProxyBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureProxyBase\n\t{\n\t\treturn new RenderTexture(this._pDepthMapSize, this._pDepthMapSize);\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureProxyBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\tpublic static id:string = \"cameraNode\";\n\n\tconstructor(pool:EntityNodePool, camera:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, camera, partition);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\tpublic static id:string = \"directionalLightNode\";\n\n\tprivate _directionalLight:IEntity;\n\n\t/**\n\t *\n\t * @param directionalLight\n\t */\n\tconstructor(pool:EntityNodePool, directionalLight:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, directionalLight, partition);\n\n\t\tthis._directionalLight = directionalLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends NodeBase\n{\n\tpublic static id:string = \"entityNode\";\n\n\tprivate _pool:EntityNodePool;\n\tprivate _entity:IEntity;\n\tprivate _partition:Partition;\n\tprivate _bounds:BoundingVolumeBase;\n\tpublic _iUpdateQueueNext:EntityNode;\n\n\tconstructor(pool:EntityNodePool, entity:IEntity, partition:Partition)\n\t{\n\t\tsuper();\n\t\tthis._pool = pool;\n\t\tthis._entity = entity;\n\t\tthis._partition = partition;\n\t\tthis._iNumEntities = 1;\n\n\t\tthis.updateBounds();\n\n\t\tthis.debugVisible = this._entity.debugVisible;\n\t}\n\n\tpublic get entity():IEntity\n\t{\n\t\treturn this._entity;\n\t}\n\n\tpublic removeFromParent():void\n\t{\n\t\tif (this._iParent)\n\t\t\tthis._iParent.iRemoveNode(this);\n\n\t\tthis._iParent = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this.entity.castsShadows;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this)) {\n\t\t\ttraverser.applyEntity(this._entity);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\treturn this._bounds.boundsPrimitive;\n\t}\n\n\tpublic invalidatePartition()\n\t{\n\t\tthis._bounds.invalidate();\n\n\t\tthis._partition.iMarkForUpdate(this);\n\t}\n\n\tpublic updateBounds()\n\t{\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis.updateDebugEntity();\n\t}\n}\n\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\tpublic static id:string = \"lightProbeNode\";\n\n\tprivate _lightProbe:IEntity;\n\n\t/**\n\t *\n\t * @param lightProbe\n\t */\n\tconstructor(pool:EntityNodePool, lightProbe:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, lightProbe, partition);\n\n\t\tthis._lightProbe = lightProbe;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase\n{\n\tprivate _debugChildrenVisible:boolean;\n\tprivate _explicitDebugVisible:boolean;\n\tpublic _pImplicitDebugVisible:boolean;\n\tpublic _iParent:NodeBase;\n\tpublic _pChildNodes:Array<NodeBase>;\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iNumEntities:number = 0;\n\tpublic _iCollectionMark:number;// = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._explicitDebugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (this._explicitDebugVisible == value)\n\t\t\treturn;\n\n\t\tthis._explicitDebugVisible = value;\n\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\n\n\t}\n\n\tpublic get debugChildrenVisible():boolean\n\t{\n\t\treturn this._debugChildrenVisible;\n\t}\n\n\tpublic set debugChildrenVisible(value:boolean)\n\t{\n\t\tif (this._debugChildrenVisible == value)\n\t\t\treturn;\n\n\t\tthis._debugChildrenVisible = value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get parent():NodeBase\n\t{\n\t\treturn this._iParent;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic get _pNumEntities():number\n\t{\n\t\treturn this._iNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pChildNodes = new Array<NodeBase>();\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\n\t{\n\t\treturn this;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tvar i:number = 0;\n\n\t\t\twhile (i < this._pNumChildNodes)\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic applyDebugEntity(traverser:CollectorBase)\n\t{\n\t\tif (this._pDebugEntity == null)\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\n\t\ttraverser.applyEntity(this._pDebugEntity);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:NodeBase)\n\t{\n\t\tnode._iParent = this;\n\t\tthis._iNumEntities += node._pNumEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._iNumEntities += numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:NodeBase)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tnode._iUpdateImplicitDebugVisible(false);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._pNumEntities -= numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\n\t{\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\n\t\t\treturn;\n\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t} else {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = null;\n\t\t}\n\t\t\n\t}\n\n\tpublic updateDebugEntity()\n\t{\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t}\n\t}\n\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = NodeBase;",
    "/**\n * @class away.partition.NullNode\n */\nclass NullNode\n{\n\tconstructor()\n\t{\n\t}\n}\n\nexport = NullNode;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.partition.Partition\n */\nclass Partition\n{\n\tprivate _cameraNodePool:EntityNodePool;\n\tprivate _directionalLightNodePool:EntityNodePool;\n\tprivate _entityNodePool:EntityNodePool;\n\tprivate _lightProbeNodePool:EntityNodePool;\n\tprivate _pointLightNodePool:EntityNodePool;\n\tprivate _skyboxNodePool:EntityNodePool;\n\n\tpublic _rootNode:NodeBase;\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:EntityNode;\n\n\tconstructor(rootNode:NodeBase)\n\t{\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\n\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\n\t}\n\n\tpublic get rootNode():NodeBase\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:EntityNode)\n\t{\n\t\tvar t:EntityNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:EntityNode)\n\t{\n\t\tvar t:EntityNode;\n\n\t\tnode.removeFromParent();\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:EntityNode = this._updateQueue;\n\t\tvar targetNode:NodeBase;\n\t\tvar t:EntityNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node)\n\t\t\t\t\tnode.removeFromParent();\n\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t\t//required for controllers with autoUpdate set to true\n\t\t\tnode.entity._iInternalUpdate();\n\n\t\t} while ((node = t) != null);\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterCamera(camera:Camera)\n\t{\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\n\t{\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(entity:IEntity)\n\t{\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\n\t{\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPointLight(pointLight:PointLight)\n\t{\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterSkybox(skybox:Skybox)\n\t{\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterCamera(camera:Camera)\n\t{\n\t\tthis.iRemoveEntity(this._cameraNodePool.disposeItem(camera));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\n\t{\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.disposeItem(directionalLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(entity:IEntity)\n\t{\n\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(entity));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\n\t{\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.disposeItem(lightProbe));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\n\t{\n\t\tthis.iRemoveEntity(this._pointLightNodePool.disposeItem(pointLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterSkybox(skybox:Skybox)\n\t{\n\t\tthis.iRemoveEntity(this._skyboxNodePool.disposeItem(skybox));\n\t}\n}\n\nexport = Partition;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\tpublic static id:string = \"pointLightNode\";\n\n\tprivate _pointLight:IEntity;\n\n\t/**\n\t *\n\t * @param pointLight\n\t */\n\tconstructor(pool:EntityNodePool, pointLight:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, pointLight, partition);\n\n\t\tthis._pointLight = pointLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._pointLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\tpublic static id:string = \"skyboxNode\";\n\n\tprivate _skyBox:IEntity;\n\n\t/**\n\t * Creates a new SkyboxNode object.\n\t * @param skyBox The Skybox to be contained in the node.\n\t */\n\tconstructor(pool:EntityNodePool, skyBox:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, skyBox, partition);\n\n\t\tthis._skyBox = skyBox;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applySkybox(this._skyBox);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._skyBox._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n//\t\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n}\n\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredEntities = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _entities:Array<IEntity>;\n\tprivate _numEntities:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._entities = new Array<IEntity>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numEntities = 0;\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\n\t\tvar entity:IEntity;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(entity = node.entity))\n\t\t\t\tthis._entities[this._numEntities++] = entity;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numEntities)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numEntities = 0;\n//\n//\t\t\tvar entity:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\tentity = entities[c];\n//\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredEntities.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._entities.length = this._numEntities;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar entity:IEntity;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numEntities; ++i) {\n\t\t\tentity = this._entities[i];\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\n\t\t\tif (entity.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;",
    "import CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass CSSBillboardRenderable extends CSSRenderableBase\n{\n\tpublic static id:string = \"billboard\";\n\n\tconstructor(pool:IRenderablePool, billboard:Billboard)\n\t{\n\t\tsuper(pool, billboard, billboard);\n\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\n\n\t\tthis.htmlElement = div;\n\n\t\tvar style:MSStyleCSSProperties = div.style;\n\n\t\tstyle.position = \"absolute\";\n\t\tstyle.transformOrigin\n\t\t\t= style[\"-webkit-transform-origin\"]\n\t\t\t= style[\"-moz-transform-origin\"]\n\t\t\t= style[\"-o-transform-origin\"]\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\tvar img:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\n\t\tdiv.appendChild(img);\n\n\t\timg.className = \"material\" + billboard.material.id;\n\t}\n}\n\nexport = CSSBillboardRenderable;",
    "import CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass CSSLineSegmentRenderable extends CSSRenderableBase\n{\n\tpublic static id:string = \"lineSegment\";\n\n\tconstructor(pool:IRenderablePool, lineSegment:LineSegment)\n\t{\n\t\tsuper(pool, lineSegment, lineSegment);\n\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\n\n\t\tthis.htmlElement = div;\n\n\t\tvar style:MSStyleCSSProperties = div.style;\n\n\t\tstyle.position = \"absolute\";\n\t\tstyle.transformOrigin\n\t\t\t= style[\"-webkit-transform-origin\"]\n\t\t\t= style[\"-moz-transform-origin\"]\n\t\t\t= style[\"-o-transform-origin\"]\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\tvar img:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\n\t\tdiv.appendChild(img);\n\n\t\timg.className = \"material\" + lineSegment.material.id;\n\t}\n}\n\nexport = CSSLineSegmentRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass CSSRenderableBase implements IRenderable\n{\n\t/**\n\t *\n\t */\n\tprivate _pool:IRenderablePool;\n\n\t/**\n\t *\n\t */\n\tpublic next:CSSRenderableBase;\n\n\t/**\n\t *\n\t */\n\tpublic materialId:number;\n\n\t/**\n\t *\n\t */\n\tpublic renderOrderId:number;\n\n\t/**\n\t *\n\t */\n\tpublic zIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic cascaded:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic renderSceneTransform:Matrix3D;\n\n\t/**\n\t *\n\t */\n\tpublic sourceEntity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic renderObjectId:number;\n\n\t/**\n\t *\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t *\n\t */\n\tpublic htmlElement:HTMLElement;\n\n\t/**\n\t *\n\t * @param sourceEntity\n\t * @param material\n\t * @param animator\n\t */\n\tconstructor(pool:IRenderablePool, sourceEntity:IEntity, renderableOwner:IRenderableOwner)\n\t{\n\t\t//store a reference to the pool for later disposal\n\t\tthis._pool = pool;\n\n\t\tthis.sourceEntity = sourceEntity;\n\n\t\tthis.renderableOwner = renderableOwner;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pool.disposeItem(this.renderableOwner);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateGeometry()\n\t{\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateIndexData()\n\t{\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateVertexData(dataType:string)\n\t{\n\n\t}\n}\n\nexport = CSSRenderableBase;",
    "import CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n\n/**\n * @class away.pool.CSSSkyboxRenderable\n */\nclass CSSSkyboxRenderable extends CSSRenderableBase\n{\n\tpublic static id:string = \"skybox\";\n\n\tconstructor(pool:IRenderablePool, skyBox:Skybox)\n\t{\n\t\tsuper(pool, skyBox, skyBox);\n\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\n\n\t\tthis.htmlElement = div;\n\n\t\tvar style:MSStyleCSSProperties = div.style;\n\t\tvar img:HTMLDivElement;\n\n\t\t//create the six images that make up the skybox\n\t\tstyle.position = \"absolute\";\n\t\tstyle.transformOrigin\n\t\t\t= style[\"-webkit-transform-origin\"]\n\t\t\t= style[\"-moz-transform-origin\"]\n\t\t\t= style[\"-o-transform-origin\"]\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\timg = <HTMLDivElement> document.createElement(\"div\");\n\n\t\tdiv.appendChild(img);\n\n\t\timg.className = \"material\" + skyBox.id;\n\t}\n}\n\nexport = CSSSkyboxRenderable;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\n\n/**\n * @class away.pool.EntityListItemPool\n */\nclass EntityListItemPool\n{\n\tprivate _pool:Array<EntityListItem>;\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pool = new Array<EntityListItem>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getItem():EntityListItem\n\t{\n\t\tvar item:EntityListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new EntityListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.EntityListItem\n */\nclass EntityListItem\n{\n\t/**\n\t *\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic next:EntityListItem;\n}\n\nexport = EntityListItem;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\n\n/**\n * @class away.pool.EntityNodePool\n */\nclass EntityNodePool\n{\n\tprivate _entityNodePool:Object = new Object();\n\tprivate _entityNodeClass:IEntityNodeClass;\n\tprivate _partition:Partition;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\n\t{\n\t\tthis._entityNodeClass = entityNodeClass;\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(entity:IEntity):EntityNode\n\t{\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(entity:IEntity):EntityNode\n\t{\n\t\tvar entityNode:EntityNode = this._entityNodePool[entity.id];\n\n\t\tif (entityNode) {\n\t\t\tentity._iRemoveEntityNode(entityNode);\n\n\t\t\tthis._entityNodePool[entity.id] = null;\n\t\t}\n\n\t\treturn entityNode;\n\t}\n}\n\nexport = EntityNodePool;",
    "import NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends NamedAssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices)\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:Array<number>;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\t\tvar numIndices:number;\n\t\tvar numVertices:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices);\n\t\t\t\tpositions = new Array<number>(numVertices*3);\n\t\t\t\tnormals = new Array<number>(numVertices*3);\n\t\t\t\ttangents = new Array<number>(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar startPositions:Array<number>;\n\t\t\tvar endPositions:Array<number>;\n\t\t\tvar thickness:Array<number>;\n\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\n\t\t\t\tstartPositions = lineGeometry.startPositions;\n\t\t\t\tendPositions = lineGeometry.endPositions;\n\t\t\t\tthickness = lineGeometry.thickness;\n\t\t\t} else {\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\n\t\t\t\tthickness = new Array<number>(numSegments);\n\t\t\t}\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = i*this._height/this._segmentsH - hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = i*this._height/this._segmentsH - hh\n\t\t\t\tendPositions[vidx + 2] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\n\t\t\t\tstartPositions[vidx + 2] = hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tstartPositions[vidx] = i*this._width/this._segmentsW - hw;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = i*this._width/this._segmentsW - hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = hw - i*this._width/this._segmentsW;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = hd;\n\n\t\t\t\tendPositions[vidx] = hw - i*this._width/this._segmentsW;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = i*this._height/this._segmentsH - hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = -hw;\n\t\t\t\tendPositions[vidx + 1] = i*this._height/this._segmentsH - hh\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = hw;\n\t\t\t\tstartPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tstartPositions[vidx] = hw\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tendPositions[vidx] = -hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = -hh;\n\t\t\t\tendPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = hh;\n\t\t\t\tstartPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tstartPositions[vidx] = hw - i*this._width/this._segmentsW;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = hw - i*this._width/this._segmentsW;\n\t\t\t\tendPositions[vidx + 1] = -hh;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = i*this._width/this._segmentsW - hw;\n\t\t\t\tstartPositions[vidx + 1] = hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = i*this._width/this._segmentsW - hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\n\t\t\tlineGeometry.updateThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:Array<number>;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGeometry() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices)\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._pSegmentsH + 1)*(this._pSegmentsW) + this._pSegmentsW;\n\t\t\tvar startPositions:Array<number>;\n\t\t\tvar endPositions:Array<number>;\n\t\t\tvar thickness:Array<number>;\n\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\n\t\t\t\tstartPositions = lineGeometry.startPositions;\n\t\t\t\tendPositions = lineGeometry.endPositions;\n\t\t\t\tthickness = lineGeometry.thickness;\n\t\t\t} else {\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\n\t\t\t\tthickness = new Array<number>(numSegments);\n\t\t\t}\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//horizonal lines\n\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = this._height*(j/this._pSegmentsH - 0.5);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tendPositions[vidx] = x;\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tstartPositions[vidx] = endPositions[vidx - this._pSegmentsW*6];\n\t\t\t\t\t\tstartPositions[vidx + 1] = endPositions[vidx + 1 - this._pSegmentsW*6];\n\t\t\t\t\t\tstartPositions[vidx + 2] = endPositions[vidx + 2 - this._pSegmentsW*6];\n\n\t\t\t\t\t\tendPositions[vidx] = x;\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\tvidx += 3;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tstartPositions[vidx] = x;\n\t\t\t\t\t\tstartPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tstartPositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\n\t\t\tlineGeometry.updateThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:Array<number>;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*triangleGeometry.scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*triangleGeometry.scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*triangleGeometry.scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*triangleGeometry.scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\t\tvar numVertices:number;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:Array<number>;\n\t\t\tvar normals:Array<number>;\n\t\t\tvar tangents:Array<number>;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tpositions = new Array<number>(numVertices*3);\n\t\t\t\tnormals = new Array<number>(numVertices*3);\n\t\t\t\ttangents = new Array<number>(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar startPositions:Array<number>;\n\t\t\tvar endPositions:Array<number>;\n\t\t\tvar thickness:Array<number>;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\n\t\t\t\tstartPositions = lineGeometry.startPositions;\n\t\t\t\tendPositions = lineGeometry.endPositions;\n\t\t\t\tthickness = lineGeometry.thickness;\n\t\t\t} else {\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\n\t\t\t\tthickness = new Array<number>(numSegments);\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = 0;\n\t\t\t\tstartPositions[vidx + 2] = yi*this._height - hh;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = 0;\n\t\t\t\tendPositions[vidx + 2] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tstartPositions[vidx] = xi*this._width - hw;\n\t\t\t\tstartPositions[vidx + 1] = 0;\n\t\t\t\tstartPositions[vidx + 2] = -hh;\n\n\t\t\t\tendPositions[vidx] = xi*this._width - hw;\n\t\t\t\tendPositions[vidx + 1] = 0;\n\t\t\t\tendPositions[vidx + 2] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\n\t\t\tlineGeometry.updateThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar uvs:Array<number>;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(numVertices*2);\n\t\t\t\tthis._pInvalidateGeometry()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*triangleGeometry.scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*triangleGeometry.scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*triangleGeometry.scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic _geomDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\n\tprivate _material:MaterialBase;\n\tprivate _geometry:Geometry;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryType:string;\n\tprivate _geometryTypeDirty:boolean = true;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.PRIMITIVE_PREFAB;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get geometryType():string\n\t{\n\t\treturn this._geometryType;\n\t}\n\t\n\tpublic set geometryType(value:string)\n\t{\n\t\tif (this._geometryType == value)\n\t\t\treturn;\n\n\t\tthis._geometryType = value;\n\t\t\n\t\tthis.invalidateGeometryType();\n\t}\n\n\tpublic get geometry():Geometry\n\t{\n\t\tthis._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\n\t{\n\t\tsuper();\n\n\t\tthis._geometry = new Geometry();\n\t\tthis._material = material;\n\t\tthis._geometryType = geometryType;\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\n\t */\n\tpublic invalidateGeometryType()\n\t{\n\t\tthis._geometryTypeDirty = true;\n\t\tthis._geomDirty = true;\n\t\tthis._uvDirty = true;\n\t}\n\t\n\t/**\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidateGeometry()\n\t{\n\t\tthis._geomDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t/**\n\t * Updates the subgeometry when invalid.\n\t */\n\tprivate updateGeometryType()\n\t{\n\t\t//remove any existing sub geometry\n\t\tif (this._subGeometry)\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\n\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(true);\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\n\t\t\tthis._subGeometry = triangleGeometry;\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry());\n\t\t}\n\n\t\tthis._geometryTypeDirty = false;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGeometry()\n\t{\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\n\n\t\tthis._geomDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._geometryTypeDirty)\n\t\t\tthis.updateGeometryType();\n\t\t\n\t\tif (this._geomDirty)\n\t\t\tthis.updateGeometry();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Array<number>(numVertices*3);\n\t\t\t\tnormals = new Array<number>(numVertices*3);\n\t\t\t\ttangents = new Array<number>(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH - 1)*this._segmentsW*2;\n\t\t\tvar startPositions:Array<number>;\n\t\t\tvar endPositions:Array<number>;\n\t\t\tvar thickness:Array<number>;\n\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\n\t\t\t\tstartPositions = lineGeometry.startPositions;\n\t\t\t\tendPositions = lineGeometry.endPositions;\n\t\t\t\tthickness = lineGeometry.thickness;\n\t\t\t} else {\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\n\t\t\t\tthickness = new Array<number>(numSegments);\n\t\t\t}\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tif (j < this._segmentsH) {\n\t\t\t\t\t\t\tendPositions[vidx] = x;\n\t\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t\tvidx += 3;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tstartPositions[vidx] = endPositions[vidx - this._segmentsW*6];\n\t\t\t\t\t\tstartPositions[vidx + 1] = endPositions[vidx + 1 - this._segmentsW*6];\n\t\t\t\t\t\tstartPositions[vidx + 2] = endPositions[vidx + 2 - this._segmentsW*6];\n\n\t\t\t\t\t\tendPositions[vidx] = x;\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\tvidx += 3;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i < this._segmentsW && j > 0 && j < this._segmentsH) {\n\t\t\t\t\t\tstartPositions[vidx] = x;\n\t\t\t\t\t\tstartPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tstartPositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\n\t\t\tlineGeometry.updateThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:Array<number>;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices)\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:Array<number>;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport CoordinateSystem\t\t\t\t= require(\"awayjs-core/lib/projections/CoordinateSystem\");\n\nimport CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\nimport CSSRendererBase\t\t\t\t= require(\"awayjs-display/lib/render/CSSRendererBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport CSSEntityCollector\t\t\t= require(\"awayjs-display/lib/traverse/CSSEntityCollector\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport CSSMaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/CSSMaterialBase\");\n\n\n/**\n * The DefaultRenderer class provides the default rendering method. It renders the scene graph objects using the\n * materials assigned to them.\n *\n * @class away.render.DefaultRenderer\n */\nclass CSSDefaultRenderer extends CSSRendererBase implements IRenderer\n{\n\tprivate _container:HTMLDivElement;\n\tprivate _context:HTMLDivElement;\n\tprivate _contextStyle:MSStyleCSSProperties;\n\tprivate _contextMatrix:Matrix3D = new Matrix3D();\n\t\n\tprivate _activeMaterial:CSSMaterialBase;\n\tprivate _skyboxProjection:Matrix3D = new Matrix3D();\n\tprivate _transform:Matrix3D = new Matrix3D();\n\n\t/**\n\t * Creates a new CSSDefaultRenderer object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t//create container for the renderer\n\t\tthis._container = document.createElement(\"div\");\n\t\tthis._container.style.overflow = \"hidden\";\n\t\tthis._container.style.position = \"absolute\";\n\t\t\n\t\t//add container to body\n\t\tdocument.body.appendChild(this._container);\n\n\t\t//create conxtext for the renderer\n\t\tthis._context = document.createElement(\"div\");\n\t\tthis._contextStyle = this._context.style;\n\t\tthis._contextStyle.position = \"absolute\";\n\t\tthis._contextStyle.transformStyle\n\t\t\t= this._contextStyle[\"-webkit-transform-style\"]\n\t\t\t= this._contextStyle[\"-moz-transform-style\"]\n\t\t\t= this._contextStyle[\"-o-transform-style\"]\n\t\t\t= this._contextStyle[\"-ms-transform-style\"] = \"preserve-3d\";\n\t\tthis._contextStyle.transformOrigin\n\t\t\t= this._contextStyle[\"-webkit-transform-origin\"]\n\t\t\t= this._contextStyle[\"-moz-transform-origin\"]\n\t\t\t= this._contextStyle[\"-o-transform-origin\"]\n\t\t\t= this._contextStyle[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\t//add context to container\n\t\tthis._container.appendChild(this._context);\n\t}\n\n\t/**\n\t *\n\t * @param entityCollector\n\t */\n\tpublic render(entityCollector:CollectorBase)\n\t{\n\t\tsuper.render(entityCollector);\n\n\t\tif (this._pBackBufferInvalid)// reset or update render settings\n\t\t\tthis.pUpdateBackBuffer();\n\n\t\tthis._iRender(<EntityCollector> entityCollector);\n\n\t\tthis._pBackBufferInvalid = false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pDraw(entityCollector:EntityCollector)\n\t{\n//\t\t\tif (entityCollector.skyBox) {\n//\t\t\t\tif (this._activeMaterial)\n//\t\t\t\t\tthis._activeMaterial.iDeactivate(this._pStageGL);\n//\n//\t\t\t\tthis._activeMaterial = null;\n//\n//\t\t\t\tthis._pContext.setDepthTest(false, away.gl.ContextGLCompareMode.ALWAYS);\n//\t\t\t\tthis.drawSkybox(entityCollector);\n//\n//\t\t\t}\n//\n//\t\t\tvar which:number = target? DefaultRenderer.SCREEN_PASSES : DefaultRenderer.ALL_PASSES;\n\n\t\tvar sheet:CSSStyleSheet = <CSSStyleSheet> document.styleSheets[document.styleSheets.length - 1];\n\n\t\tfor (var i:number = 0; i < sheet.cssRules.length; i++) {\n\t\t\tvar style:MSStyleCSSProperties = (<CSSStyleRule> sheet.cssRules[i]).style;\n\t\t\tstyle.transform\n\t\t\t\t= style[\"-webkit-transform\"]\n\t\t\t\t= style[\"-moz-transform\"]\n\t\t\t\t= style[\"-o-transform\"]\n\t\t\t\t= style[\"-ms-transform\"] = (entityCollector.camera.projection.coordinateSystem == CoordinateSystem.RIGHT_HANDED)? \"\" : \"scale3d(1, -1, 1) translateY(-\" + style.height + \")\";\n\t\t}\n\n\t\tthis.drawRenderables(this._renderableHead, entityCollector);\n\n//\t\t\tif (this._activeMaterial)\n//\t\t\t\tthis._activeMaterial.iDeactivate(this._pStageGL);\n\n\t\tthis._activeMaterial = null;\n\t}\n\n\t/**\n\t * Updates the backbuffer properties.\n\t */\n\tpublic pUpdateBackBuffer()\n\t{\n\t\tthis._container.style.width = this._width + \"px\";\n\t\tthis._container.style.height = this._height + \"px\";\n\t\tthis._container.style.clip = \"rect(0px, \" + this._width + \"px, \" + this._height + \"px, 0px)\";\n\n\t\t//update context matrix\n\t\tthis._contextMatrix.rawData[0] = this._width/2;\n\t\tthis._contextMatrix.rawData[5] = -this._height/2;\n\t\tthis._contextMatrix.rawData[10] = -1; //fix for innaccurate z-sort\n\t\tthis._contextMatrix.rawData[12] = this._width/2;\n\t\tthis._contextMatrix.rawData[13] = this._height/2;\n\n\t\t//update context tranform\n\t\tthis._contextStyle.transform\n\t\t\t= this._contextStyle[\"-webkit-transform\"]\n\t\t\t= this._contextStyle[\"-moz-transform\"]\n\t\t\t= this._contextStyle[\"-o-transform\"]\n\t\t\t= this._contextStyle[\"-ms-transform\"] = this._contextMatrix.toString();\n\n\t\tthis._pBackBufferInvalid = false;\n\t}\n\n\t/**\n\t * Draw the skybox if present.\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tprivate drawSkybox(entityCollector:CSSEntityCollector)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Draw a list of renderables.\n\t * @param renderables The renderables to draw.\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tprivate drawRenderables(item:CSSRenderableBase, entityCollector:EntityCollector)\n\t{\n\t\tvar viewProjection:Matrix3D = entityCollector.camera.viewProjection.clone();\n\n\t\twhile (item) {\n\t\t\t//this._activeMaterial = <CSSMaterialBase> item.materialOwner.material;\n\n\t\t\t//serialise transform and apply to html element\n\t\t\tthis._transform.copyRawDataFrom(item.renderSceneTransform.rawData);\n\t\t\tthis._transform.append(viewProjection);\n\n\t\t\tvar style:MSStyleCSSProperties = item.htmlElement.style;\n\n\t\t\tstyle.transform\n\t\t\t\t= style[\"-webkit-transform\"]\n\t\t\t\t= style[\"-moz-transform\"]\n\t\t\t\t= style[\"-o-transform\"]\n\t\t\t\t= style[\"-ms-transform\"] = this._transform.toString();\n\n\t\t\tstyle.transformStyle\n\t\t\t\t= style[\"-webkit-transform-style\"]\n\t\t\t\t= style[\"-moz-transform-style\"]\n\t\t\t\t= style[\"-o-transform-style\"]\n\t\t\t\t= style[\"-ms-transform-style\"] = \"preserve-3d\";\n\n\t\t\t//check if child requires adding to the view\n\t\t\tif (!this._context.contains(item.htmlElement))\n\t\t\t\tthis._context.appendChild(item.htmlElement);\n\n\t\t\titem = item.next;\n\t\t}\n\n//\t\t\tvar numPasses:number;\n//\t\t\tvar j:number;\n//\t\t\tvar camera:away.entities.Camera = entityCollector.camera;\n//\t\t\tvar item2:away.render.CSSRenderableBase;\n//\n//\t\t\twhile (item) {\n//\t\t\t\tthis._activeMaterial = item.material;\n//\n//\t\t\t\tthis._activeMaterial.iUpdateMaterial(this._pContext);\n//\n//\t\t\t\tnumPasses = this._activeMaterial._iNumPasses;\n//\n//\t\t\t\tj = 0;\n//\n//\t\t\t\tdo {\n//\t\t\t\t\titem2 = item;\n//\n//\t\t\t\t\tvar rttMask:number = this._activeMaterial.iPassRendersToTexture(j)? 1 : 2;\n//\n//\t\t\t\t\tif ((rttMask & which) != 0) {\n//\t\t\t\t\t\tthis._activeMaterial.iActivatePass(j, this._pStageGL, camera);\n//\n//\t\t\t\t\t\tdo {\n//\t\t\t\t\t\t\tthis._activeMaterial.iRenderPass(j, item2, this._pStageGL, entityCollector);\n//\n//\t\t\t\t\t\t\titem2 = item2.next;\n//\n//\t\t\t\t\t\t} while (item2 && item2.material == this._activeMaterial);\n//\n//\t\t\t\t\t\tthis._activeMaterial.iDeactivatePass(j, this._pStageGL);\n//\n//\t\t\t\t\t} else {\n//\t\t\t\t\t\tdo {\n//\t\t\t\t\t\t\titem2 = item2.next;\n//\n//\t\t\t\t\t\t} while (item2 && item2.renderable.material == this._activeMaterial);\n//\t\t\t\t\t}\n//\t\t\t\t} while (++j < numPasses);\n//\n//\t\t\t\titem = item2;\n//\t\t\t}\n\t}\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\t//TODO\n\t}\n\n\n\tpublic _iCreateEntityCollector():CollectorBase\n\t{\n\t\treturn new CSSEntityCollector();\n\t}\n}\n\nexport = CSSDefaultRenderer;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CSSBillboardRenderable\t\t= require(\"awayjs-display/lib/pool/CSSBillboardRenderable\");\nimport CSSLineSegmentRenderable\t\t= require(\"awayjs-display/lib/pool/CSSLineSegmentRenderable\");\nimport CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\nimport CSSEntityCollector\t\t\t= require(\"awayjs-display/lib/traverse/CSSEntityCollector\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport CSSMaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/CSSMaterialBase\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\n/**\n * RendererBase forms an abstract base class for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.RendererBase\n */\nclass CSSRendererBase extends EventDispatcher\n{\n\tprivate _billboardRenderablePool:IRenderablePool;\n\tprivate _lineSegmentRenderablePool:IRenderablePool;\n\n\tpublic _pCamera:Camera;\n\tpublic _iEntryPoint:Vector3D;\n\tpublic _pCameraForward:Vector3D;\n\n\tprivate _backgroundR:number = 0;\n\tprivate _backgroundG:number = 0;\n\tprivate _backgroundB:number = 0;\n\tprivate _backgroundAlpha:number = 1;\n\tprivate _shareContext:boolean = false;\n\n\tpublic _pBackBufferInvalid:boolean = true;\n\tpublic _depthTextureInvalid:boolean = true;\n\n\tpublic _renderableHead:CSSRenderableBase;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\n\tprivate _viewPort:Rectangle = new Rectangle();\n\tprivate _viewportDirty:boolean;\n\tprivate _scissorRect:Rectangle = new Rectangle();\n\tprivate _scissorDirty:boolean;\n\n\tprivate _localPos:Point = new Point();\n\tprivate _globalPos:Point = new Point();\n\n\tprivate _scissorUpdated:RendererEvent;\n\tprivate _viewPortUpdated:RendererEvent;\n\n\t/**\n\t * A viewPort rectangle equivalent of the StageGL size and position.\n\t */\n\tpublic get viewPort():Rectangle\n\t{\n\t\treturn this._viewPort;\n\t}\n\n\t/**\n\t * A scissor rectangle equivalent of the view size and position.\n\t */\n\tpublic get scissorRect():Rectangle\n\t{\n\t\treturn this._scissorRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._localPos.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this.x == value)\n\t\t\treturn;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._localPos.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this.y == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.y = this._localPos.y = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._scissorRect.width = value;\n\t\tthis._viewPort.width = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._depthTextureInvalid = true;\n\n\t\tthis.notifyViewportUpdate();\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._scissorRect.height = value;\n\t\tthis._viewPort.height = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._depthTextureInvalid = true;\n\n\t\tthis.notifyViewportUpdate();\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic renderableSorter:IEntitySorter;\n\n\t/**\n\t * Creates a new RendererBase object.\n\t */\n\tconstructor(renderToTexture:boolean = false, forceSoftware:boolean = false, profile:string = \"baseline\")\n\t{\n\t\tsuper();\n\n\t\t//this._billboardRenderablePool = RenderablePool.getPool(CSSBillboardRenderable);\n\t\t//this._lineSegmentRenderablePool = RenderablePool.getPool(CSSLineSegmentRenderable);\n\n\t\tthis._viewPort = new Rectangle();\n\n\t\tif (this._width == 0)\n\t\t\tthis.width = window.innerWidth;\n\n\t\tif (this._height == 0)\n\t\t\tthis.height = window.innerHeight;\n\t}\n\n\t/**\n\t * The background color's red component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundR():number\n\t{\n\t\treturn this._backgroundR;\n\t}\n\n\tpublic set _iBackgroundR(value:number)\n\t{\n\t\tif (this._backgroundR == value)\n\t\t\treturn;\n\n\t\tthis._backgroundR = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's green component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundG():number\n\t{\n\t\treturn this._backgroundG;\n\t}\n\n\tpublic set _iBackgroundG(value:number)\n\t{\n\t\tif (this._backgroundG == value)\n\t\t\treturn;\n\n\t\tthis._backgroundG = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's blue component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundB():number\n\t{\n\t\treturn this._backgroundB;\n\t}\n\n\tpublic set _iBackgroundB(value:number)\n\t{\n\t\tif (this._backgroundB == value)\n\t\t\treturn;\n\n\t\tthis._backgroundB = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t * Disposes the resources used by the RendererBase.\n\t */\n\tpublic dispose()\n\t{\n\t\t/*\n\t\t if (_backgroundImageRenderer) {\n\t\t _backgroundImageRenderer.dispose();\n\t\t _backgroundImageRenderer = null;\n\t\t }\n\t\t */\n\t}\n\n\tpublic render(entityCollector:CollectorBase)\n\t{\n\t\tthis._viewportDirty = false;\n\t\tthis._scissorDirty = false;\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture.\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t * @param scissorRect\n\t */\n\tpublic _iRender(entityCollector:EntityCollector, target:TextureProxyBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tif (!entityCollector.entityHead)\n\t\t\treturn;\n\n\t\tthis.pExecuteRender(entityCollector, scissorRect);\n\t}\n\n\tpublic _iRenderCascades(entityCollector:CollectorBase, target:TextureProxyBase, numCascades:number, scissorRects:Array<Rectangle>, cameras:Array<Camera>)\n\t{\n\n\t}\n\tpublic pCollectRenderables(entityCollector:CollectorBase)\n\t{\n\t\t////reset head values\n\t\t//this._renderableHead = null;\n\t\t//\n\t\t////grab entity head\n\t\t//var item:EntityListItem = entityCollector.entityHead;\n\t\t//\n\t\t////set temp values for entry point and camera forward vector\n\t\t//this._pCamera = entityCollector.camera;\n\t\t//this._iEntryPoint = this._pCamera.scenePosition;\n\t\t//this._pCameraForward = this._pCamera.transform.forwardVector;\n\t\t//\n\t\t////iterate through all entities\n\t\t//while (item) {\n\t\t//\t//item.entity._iCollectRenderables(this);\n\t\t//\titem = item.next;\n\t\t//}\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture. Only executed if everything is set up.\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t * @param scissorRect\n\t */\n\tpublic pExecuteRender(entityCollector:CSSEntityCollector, scissorRect:Rectangle = null)\n\t{\n\t\tthis.pCollectRenderables(entityCollector);\n\n\t\tthis.pDraw(entityCollector);\n\t}\n\n\t/**\n\t * Performs the actual drawing of dom objects to the target.\n\t *\n\t * @param entityCollector The EntityCollector object containing the potentially visible dom objects.\n\t */\n\tpublic pDraw(entityCollector:CSSEntityCollector)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get _iBackgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\tpublic set _iBackgroundAlpha(value:number)\n\t{\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._backgroundAlpha = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t *\n\t * @param billboard\n\t */\n\tpublic applyBillboard(billboard:Billboard)\n\t{\n\t\t//this._applyRenderable(<CSSRenderableBase> this._billboardRenderablePool.getItem(billboard));\n\t}\n\n\t/**\n\t *\n\t * @param lineSubMesh\n\t */\n\tpublic applyLineSubMesh(lineSubMesh:LineSubMesh)\n\t{\n\t\t//this._applyRenderable(<CSSRenderableBase> this._billboardRenderablePool.getItem(lineSegment));\n\t}\n\n\t/**\n\t *\n\t * @param skybox\n\t */\n\tpublic applySkybox(skybox:Skybox)\n\t{\n\n\t}\n\n\t/**\n\t *\n\t * @param triangleSubMesh\n\t */\n\tpublic applyTriangleSubMesh(triangleSubMesh:TriangleSubMesh)\n\t{\n\n\t}\n\n\t/**\n\t *\n\t * @param renderable\n\t * @private\n\t */\n\tprivate _applyRenderable(renderable:CSSRenderableBase)\n\t{\n\t\tvar material:CSSMaterialBase;// = <CSSMaterialBase> renderable.renderableOwner.material;\n\t\tvar entity:IEntity = renderable.sourceEntity;\n\t\tvar position:Vector3D = entity.scenePosition;\n\n\t\tif (material) {\n\t\t\t//set ids for faster referencing\n\t\t\trenderable.materialId = material._iMaterialId;\n//\t\t\t\trenderable.renderOrderId = material._iRenderOrderId;\n\t\t\trenderable.cascaded = false;\n\n\t\t\t// project onto camera's z-axis\n\t\t\tposition = this._iEntryPoint.subtract(position);\n\t\t\trenderable.zIndex = entity.zOffset - position.dotProduct(this._pCameraForward);\n\n\t\t\t//store reference to scene transform\n\t\t\trenderable.renderSceneTransform = renderable.sourceEntity.getRenderSceneTransform(this._pCamera);\n\n\t\t\t//store reference to next item in list\n\t\t\trenderable.next = this._renderableHead;\n\t\t\tthis._renderableHead = renderable;\n\t\t}\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScissorUpdate()\n\t{\n\t\tif (this._scissorDirty)\n\t\t\treturn;\n\n\t\tthis._scissorDirty = true;\n\n\t\tif (!this._scissorUpdated)\n\t\t\tthis._scissorUpdated = new RendererEvent(RendererEvent.SCISSOR_UPDATED);\n\n\t\tthis.dispatchEvent(this._scissorUpdated);\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyViewportUpdate()\n\t{\n\t\tif (this._viewportDirty)\n\t\t\treturn;\n\n\t\tthis._viewportDirty = true;\n\n\t\tif (!this._viewPortUpdated)\n\t\t\tthis._viewPortUpdated = new RendererEvent(RendererEvent.VIEWPORT_UPDATED);\n\n\t\tthis.dispatchEvent(this._viewPortUpdated);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updateGlobalPos()\n\t{\n\t\tthis._viewPort.x = this._globalPos.x;\n\t\tthis._viewPort.y = this._globalPos.y;\n\n\t\tthis.notifyViewportUpdate();\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\n\tpublic _iCreateEntityCollector():CollectorBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = CSSRendererBase;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable;\n\t\tvar slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable, slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.renderObjectId;\n\t\t\t\tvar mb:number = headB.renderObjectId;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n}\n\nexport = RenderableNullSort;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat\n{\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\tpublic align:string;\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\tpublic color:boolean;\n\n\t/**\n\t * The name of the font for text in this text format, as a string. The\n\t * default value is <code>null</code>, which means that Flash Player uses\n\t * Times New Roman font for the text.\n\t */\n\tpublic font:string;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\tpublic target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tthis.font = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.target = target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.CSSEntityCollector\n */\nclass CSSEntityCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase\n{\n\tpublic scene:Scene;\n\n\tpublic _pEntityHead:EntityListItem;\n\tpublic _pEntityListItemPool:EntityListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tpublic _pNumEntities:number = 0;\n\tpublic _pNumInteractiveEntities:number = 0;\n\n\tpublic isEntityCollector:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get entityHead():EntityListItem\n\t{\n\t\treturn this._pEntityHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numEntities():number\n\t{\n\t\treturn this._pNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numInteractiveEntities():number\n\t{\n\t\treturn this._pNumInteractiveEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pEntityHead = null;\n\t\tthis._pEntityListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._pNumEntities++;\n\n\t\tif (entity._iIsMouseEnabled())\n\t\t\tthis._pNumInteractiveEntities++;\n\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\n\t\titem.entity = entity;\n\n\t\titem.next = this._pEntityHead;\n\t\tthis._pEntityHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\n\t\tthis.isEntityCollector = true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport BitmapTexture\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\nimport ImageTexture\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static bitmapData(data:any):BitmapData\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof BitmapData)\n\t\t\treturn data;\n\n\t\tif (data instanceof ImageTexture)\n\t\t\tdata = (<ImageTexture> data).htmlImageElement;\n\n\t\tif (data instanceof HTMLImageElement) {\n\t\t\tvar imageElement:HTMLImageElement = <HTMLImageElement> data;\n\t\t\tvar bitmapData:BitmapData = new BitmapData(imageElement.width, imageElement.height, true, 0x0);\n\t\t\tbitmapData.draw(imageElement)\n\t\t\treturn bitmapData;\n\t\t}\n\n\t\t//            if (data is DisplayObject) {\n\t\t//                var ds:DisplayObject = data as DisplayObject;\n\t\t//                var bmd:BitmapData = new BitmapData(ds.width, ds.height, true, 0x00FFFFFF);\n\t\t//                var mat:Matrix = ds.transform.matrix.clone();\n\t\t//                mat.tx = 0;\n\t\t//                mat.ty = 0;\n\t\t//                bmd.draw(ds, mat, ds.transform.colorTransform, ds.blendMode, bmd.rect, true);\n\t\t//                return bmd;\n\t\t//            }\n\n\t\tthrow new CastError(\"Can't cast to BitmapData: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):BitmapTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof BitmapTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:BitmapData = Cast.bitmapData(data);\n\t\t\treturn new BitmapTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to BitmapTexture: \" + data);\n\t}\n}\n\nexport = Cast;"
  ],
  "sourceRoot": ""
}
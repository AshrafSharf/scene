{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Timeline.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/MovieClip.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SceneEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/FrameScriptManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/NullNode.ts",
    "awayjs-display/lib/partition/Partition.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SceneGraphNode.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SceneGraphNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "devisions",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "getCell",
    "x",
    "y",
    "index_x",
    "Math",
    "floor",
    "minx",
    "conversionX",
    "index_y",
    "miny",
    "conversionY",
    "buildGrid",
    "positions",
    "posDim",
    "dimensions",
    "Number",
    "MAX_VALUE",
    "maxx",
    "maxy",
    "k",
    "width",
    "height",
    "maxDevisions",
    "ceil",
    "sqrt",
    "numVertices",
    "min",
    "numCells",
    "cellWidth",
    "cellHeight",
    "id0",
    "id1",
    "id2",
    "ax",
    "ay",
    "bx",
    "by",
    "cx",
    "cy",
    "cells",
    "Array",
    "left",
    "right",
    "max",
    "top",
    "bottom",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "j",
    "index",
    "nodes",
    "push",
    "hitTestPoint",
    "z",
    "curveDim",
    "curves",
    "cell",
    "dx",
    "dy",
    "nx",
    "ny",
    "dot",
    "curvex",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "v",
    "w",
    "uu",
    "vv",
    "az",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "AbstractMethodError",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "SceneEvent",
    "DisplayObject",
    "_this",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_iMaskID",
    "_iMasks",
    "_sessionID",
    "_matrix3D",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_pImplicitVisibility",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_skewX",
    "_skewY",
    "_skewZ",
    "_scaleX",
    "_scaleY",
    "_scaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pos",
    "_rot",
    "_ske",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "_entityNodes",
    "_globalColorTransform",
    "_inheritColorTransform",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_onGlobalColorTransformChangedDelegate",
    "event",
    "onGlobalColorTransformChanged",
    "_onColorTransformChangedDelegate",
    "onColorTransformChanged",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_adapter",
    "_invalidateGlobalColorTransform",
    "_globalColorTransformDirty",
    "_updateGlobalColorTransform",
    "_pColorTransform",
    "alphaMultiplier",
    "removeEventListener",
    "_pSetColorTransform",
    "addEventListener",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_pIsEntity",
    "_loaderInfo",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "_elementsDirty",
    "updateElements",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "_width",
    "_setScaleX",
    "skewX",
    "invalidateSkew",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_pSceneTransformDirty",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "scaleX",
    "rawData",
    "invalidatePosition",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SKEW_CHANGED",
    "_listenToSkewChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "newInstance",
    "_iMatrix3D",
    "name",
    "concat",
    "adapter",
    "colorTransform",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "shapeFlag",
    "maskFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "reset_to_init_state",
    "visible",
    "clear",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "hasEventListener",
    "translate",
    "distance",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_matrix3DDirty",
    "_pUpdateMatrix3D",
    "_pivotDirty",
    "_pUpdatePivot",
    "_pPickingCollisionVO",
    "iSetParent",
    "GLOBAL_COLOR_TRANSFORM_CHANGED",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "isEntity",
    "invalidatePartition",
    "_sceneTransformChanged",
    "queueDispatch",
    "partition",
    "scene",
    "sceneChanged",
    "dispatchEvent",
    "REMOVED_FROM_SCENE",
    "_iUnregisterPartition",
    "_pUnregisterEntity",
    "_iRegisterPartition",
    "_pRegisterEntity",
    "ADDED_TO_SCENE",
    "_sceneChanged",
    "appendTranslation",
    "_iController",
    "updateController",
    "_iIsRoot",
    "prepend",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iAddRenderable",
    "renderable",
    "_iRemoveRenderable",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "update",
    "_iIsMouseEnabled",
    "_iSetScene",
    "_applyRenderer",
    "renderer",
    "invalidateMatrix3D",
    "_positionChanged",
    "matrixDirty",
    "_rotationChanged",
    "_skewChanged",
    "invalidateScale",
    "_scaleChanged",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "globalColorTransform",
    "_globalColorTransformChanged",
    "elements",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/SceneEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "thickness",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_colorTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "awayjs-display/lib/base/Timeline",
    "FrameScriptManager",
    "Timeline",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "scriptPass1",
    "evalScript",
    "add_script_to_queue",
    "add_script_to_queue_pass2",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChilds",
    "getPotentialChildInstance",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "frameIndex",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "firstframe",
    "set_currentFrameIndex",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "target_childs_dic",
    "numChildren",
    "child",
    "getChildAt",
    "freeFromScript",
    "unregisterScriptObject",
    "getChildDepth",
    "update_indices",
    "update_cnt",
    "frame_command_idx",
    "start_index",
    "command_index_stream",
    "command_length_stream",
    "remove_child_stream",
    "add_child_stream",
    "target_child_sessionIDS",
    "key",
    "removeChildAt",
    "addChildAtDepth",
    "parseInt",
    "update_childs",
    "queueScript",
    "constructed_keyFrameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "removeChildAtDepth",
    "props_cnt",
    "props_start_idx",
    "value_start_index",
    "props_type",
    "doit",
    "childID",
    "update_child_stream",
    "isBlockedByScript",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "properties_stream_f32_mtx_all",
    "new_ct",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "mask_length",
    "properties_stream_int",
    "firstMaskID",
    "mask",
    "masks",
    "mouseEnabled",
    "isAsset",
    "properties_stream_strings",
    "registerScriptObject",
    "addButtonListeners",
    "isVisibilityByScript",
    "Boolean",
    "properties_stream_f32_mtx_scale_rot",
    "properties_stream_f32_mtx_pos",
    "awayjs-display/lib/managers/FrameScriptManager",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_depths",
    "_nextHighestDepth",
    "_children",
    "addChild",
    "addChildAt",
    "replace",
    "removeChildAtInternal",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "disposeWithChildren",
    "getChildAtDepth",
    "getDepthIndexInternal",
    "getChildByName",
    "childIndex",
    "getNextHighestDepth",
    "getObjectsUnderPoint",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "masksFlag",
    "childHit",
    "all_masks",
    "mi_cnt",
    "mask_child",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "NodeBase",
    "Partition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "_partition",
    "_iSceneGraphRoot",
    "traversePartitions",
    "traverser",
    "traverse",
    "PARTITION_CHANGED",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/Partition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onScenePartitionChangedDelegate",
    "onScenePartitionChanged",
    "_onProjectionChangedDelegate",
    "onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pCamera",
    "_iRegisterCamera",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "_applyColorTransform",
    "_parentColorTransform",
    "testBillboardCollision",
    "_iApplyRenderableOwner",
    "_iRegisterEntity",
    "_iUnregisterEntity",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "_iUnregisterCamera",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "_iRegisterDirectionalLight",
    "_iUnregisterDirectionalLight",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "_iRegisterLightProbe",
    "_iUnregisterLightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "_iCopyToMesh",
    "boundsType",
    "shareAnimationGeometry",
    "extra",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "tmp_maxZ",
    "tmp_minZ",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "all_hir_masks",
    "hit",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/MovieClip",
    "Event",
    "MouseEvent",
    "MovieClip",
    "timeline",
    "_loop",
    "_potentialInstances",
    "_currentFrameIndex",
    "_constructedKeyFrameIndex",
    "_isInit",
    "_isPlaying",
    "_isButton",
    "_fps",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "numFrames",
    "_skipAdvance",
    "exit_frame",
    "reset",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "newFps",
    "play",
    "timeDelta",
    "frameMarker",
    "advanceFrame",
    "execute_queue",
    "activateChild",
    "deactivateChild",
    "skipChildren",
    "oldFrameIndex",
    "advance",
    "advanceChildren",
    "logHierarchy",
    "printHierarchyName",
    "console",
    "log",
    "executePostConstructCommands",
    "awayjs-core/lib/events/Event",
    "awayjs-display/lib/events/MouseEvent",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "_iRegisterPointLight",
    "_iUnregisterPointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "_iRegisterSkybox",
    "_iUnregisterSkybox",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextFieldType",
    "TextField",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "reConstruct",
    "_textFormat",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "y_offset",
    "prev_char",
    "textlines",
    "text",
    "toString",
    "split",
    "tl",
    "line_width",
    "font_chars",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "get_whitespace_width",
    "x_offset",
    "align",
    "positions2",
    "curveData2",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "_iCopyToTextField",
    "textWidth",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "_camera",
    "object",
    "VISIBLITY_UPDATED",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "mc",
    "script",
    "_queued_mcs_pass2",
    "_queued_mcs",
    "_queued_scripts",
    "_queued_scripts_pass2",
    "caller",
    "err",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "preventDefault",
    "bounds",
    "mouseX",
    "changedTouches",
    "mouseY",
    "getBoundingClientRect",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touch",
    "touchPointID",
    "TouchPoint",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_sceneGraphDepths",
    "_pool",
    "_entity",
    "_iNumEntities",
    "removeFromParent",
    "_iParent",
    "iRemoveNode",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_pNumChildNodes",
    "_pChildNodes",
    "_explicitDebugVisible",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "_debugChildrenVisible",
    "findPartitionForEntity",
    "_pNumEntities",
    "applyDebugEntity",
    "iAddNode",
    "node",
    "numEntities",
    "pop",
    "awayjs-display/lib/partition/NullNode",
    "NullNode",
    "PointLightNode",
    "SkyboxNode",
    "EntityNodePool",
    "rootNode",
    "_updatesMade",
    "_rootNode",
    "_cameraNodePool",
    "_directionalLightNodePool",
    "_entityNodePool",
    "_lightProbeNodePool",
    "_pointLightNodePool",
    "_skyboxNodePool",
    "_updateQueue",
    "_iUpdateQueueNext",
    "updateEntities",
    "iRemoveEntity",
    "targetNode",
    "getItem",
    "pointLight",
    "skybox",
    "disposeItem",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/pool/EntityNodePool",
    "_pointLight",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphNode",
    "SceneGraphNode",
    "container",
    "_container",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "bestCollisionVO",
    "updateLocalPosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "entityNodeClass",
    "_entityNodeClass",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ISceneGraphNodeClass",
    "awayjs-display/lib/pool/ITextureVO",
    "awayjs-display/lib/pool/SceneGraphNodePool",
    "SceneGraphNodePool",
    "sceneGraphNodeClass",
    "_sceneGraphNodePool",
    "_sceneGraphNodeClass",
    "displayObjectContainer",
    "sceneGraphNode",
    "registerClass",
    "subMeshClass",
    "classPool",
    "addDefaults",
    "main",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.CurveSubGeometry\n */\nclass CurveSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _uvsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _curves:Float2Attributes;\n\tprivate _uvs:Float2Attributes;\n\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubGeometry.assetType;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis._uvsDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get curves():Float2Attributes\n\t{\n\t\treturn this._curves;\n\t}\n\n\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\t//grid stuff - to tidy\n\tprivate cells:Array<Array<number>>;\n\t//TODO - generate this dyanamically based on num tris\n\tprivate devisions:number = 32;\n\tprivate conversionX:number;\n\tprivate conversionY:number;\n\tprivate minx:number;\n\tprivate maxx:number;\n\tprivate miny:number;\n\tprivate maxy:number;\n\n\tprivate getCell(x:number, y:number):number\n\t{\n\t\tvar index_x:number = Math.floor((x - this.minx) * this.conversionX);\n\t\tvar index_y:number = Math.floor((y - this.miny) * this.conversionY);\n\n\t\t//out of bounds\n\t\tif(index_x < 0 || index_x > this.devisions || index_y < 0 || index_y > this.devisions) return -1;\n\n\t\treturn  index_x + index_y * this.devisions;\n\t}\n\tprivate buildGrid():void\n\t{\n\t\t//calculate bounds, ideally via bounding box already computed\n\t\t//if not just loop through and generate min/max\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\n\t\tvar posDim:number = this.positions.dimensions;\n\t\tthis.minx = Number.MAX_VALUE;\n\t\tthis.maxx = -Number.MAX_VALUE;\n\t\tthis.miny = Number.MAX_VALUE;\n\t\tthis.maxy = -Number.MAX_VALUE;\n\t\tfor(var k:number = 0; k < positions.length; k+=3)\n\t\t{\n\t\t\tvar x:number = positions[k];\n\t\t\tvar y:number = positions[k + 1];\n\n\t\t\tif(x < this.minx) this.minx = x;\n\t\t\tif(x > this.maxx) this.maxx = x;\n\t\t\tif(y < this.miny) this.miny = y;\n\t\t\tif(y > this.maxy) this.maxy = y;\n\t\t}\n\n\t\tvar width:number = this.maxx - this.minx;\n\t\tvar height:number = this.maxy - this.miny;\n\n\n\t\t//now we have bounds start creating grid cells and filling\n\t\tvar maxDevisions:number = 32;\n\t\tthis.devisions = Math.ceil(Math.sqrt(this.numVertices));\n\t\tthis.devisions = Math.min(this.devisions, maxDevisions);\n\t\tvar numCells:number = this.devisions * this.devisions;\n\t\tvar cellWidth:number = width/this.devisions;\n\t\tvar cellHeight:number = height/this.devisions;\n\n\t\tthis.conversionX = 1/cellWidth;\n\t\tthis.conversionY = 1/cellHeight;\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\tthis.cells = new Array<Array<number>>(numCells);\n\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3) {\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//subtractions to push into positive space\n\t\t\tvar left:number = Math.min(ax, bx, cx)-this.minx;\n\t\t\tvar right:number = Math.max(ax, bx, cx)-this.minx;\n\t\t\tvar top:number = Math.min(ay, by, cy)-this.miny;\n\t\t\tvar bottom:number = Math.max(ay, by, cy)-this.miny;\n\n\t\t\tvar min_index_x:number = Math.floor(left * this.conversionX);\n\t\t\tvar min_index_y:number = Math.floor(top * this.conversionY);\n\n\t\t\tvar max_index_x:number = Math.floor(right * this.conversionX);\n\t\t\tvar max_index_y:number = Math.floor(bottom * this.conversionY);\n\n\n\t\t\tfor (var i : number = min_index_x; i <= max_index_x; i++)\n\t\t\t{\n\t\t\t\tfor (var j : number = min_index_y; j <= max_index_y; j++)\n\t\t\t\t{\n\t\t\t\t\tvar index:number = i + j * this.devisions;\n\t\t\t\t\tvar nodes:Array<number> = this.cells[index];\n\t\t\t\t\tif(nodes == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnodes = new Array<number>();\n\t\t\t\t\t\tthis.cells[index] = nodes;\n\t\t\t\t\t}\n\t\t\t\t\t//push in the triangle ids\n\t\t\t\t\tnodes.push(id0, id1, id2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean {\n\t\tvar posDim:number = this.positions.dimensions;\n\t\tvar curveDim:number = this.curves.dimensions;\n\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\n\t\tvar curves:Float32Array = this.curves.get(this._numVertices);\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\t//hard coded min vertex count to bother using a grid for\n\t\tif(this.numVertices > 150){\n\n\n\t\t\tif (this.cells == null) {\n\t\t\t\tthis.buildGrid();\n\t\t\t}\n\t\t\tvar cell:number = this.getCell(x, y);\n\t\t\tif (cell == -1) return false;\n\n\t\t\tvar nodes:Array<number> = this.cells[cell];\n\t\t\tif (nodes == null) return false;\n\n\n\t\t\tfor (var k:number = 0; k < nodes.length; k += 3) {\n\t\t\t\tid0 = nodes[k];\n\t\t\t\tid1 = nodes[k + 1];\n\t\t\t\tid2 = nodes[k + 2];\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t\t//console.log(\"dot a\",dot);\n\t\t\t\tif (dot > 0) continue;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t\t//console.log(\"dot b\",dot);\n\t\t\t\tif (dot > 0) continue;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t\t//console.log(\"dot c\",dot);\n\t\t\t\tif (dot > 0) continue;\n\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\t//brute force\n\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3)\n\t\t{\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - x;\n\t\t\tvar dy:number = ay - y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tdx = bx - x;\n\t\t\tdy = by - y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tdx = cx - x;\n\t\t\tdy = cy - y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t//here be dragons\n\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\tvar vv:number = w;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setCurves(array:Array<number>, offset?:number);\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setCurves(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._curves)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._curves.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._curves);\n\n\t\tthis._verticesDirty[this._curves.id] = false;\n\t}\n\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._curves.dispose();\n\t\tthis._curves = null;\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CurveSubGeometry\n\t{\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.CurveSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.CurveSubMesh\n */\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\n\n\tprivate _subGeometry:CurveSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t */\n\tpublic get subGeometry():CurveSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new CurveSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\n\t * @param material An optional material used to render this CurveSubMesh.\n\t */\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IDisplayObjectAdapter\t\t= require(\"awayjs-display/lib/adapters/IDisplayObjectAdapter\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\n{\n\tpublic _adapter:IDisplayObjectAdapter;\n\tprivate _queuedEvents:Array<Event> = new Array<Event>();\n\tprivate _elementsDirty:boolean;\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\tpublic _pName:string;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pSceneTransformDirty:boolean;\n\tpublic _pIsEntity:boolean;\n    public _iMaskID:number = -1;\n    public _iMasks:DisplayObject[] = null;\n\tpublic _sessionID:number = -1;\n\n\tprivate _explicitPartition:Partition;\n\tpublic _pImplicitPartition:Partition;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _sceneChanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean;\n    public _pColorTransform:ColorTransform;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean;\n\tprivate _explicitVisibility:boolean = true;\n\tpublic _pImplicitVisibility:boolean = true;\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _positionDirty:boolean;\n\tprivate _rotationDirty:boolean;\n\tprivate _skewDirty:boolean;\n\tprivate _scaleDirty:boolean;\n\n\tprivate _positionChanged:DisplayObjectEvent;\n\tprivate _rotationChanged:DisplayObjectEvent;\n\tprivate _skewChanged:DisplayObjectEvent;\n\tprivate _scaleChanged:DisplayObjectEvent;\n\n\tprivate _rotationX:number = 0;\n\tprivate _rotationY:number = 0;\n\tprivate _rotationZ:number = 0;\n\tprivate _eulers:Vector3D = new Vector3D();\n\tprivate _flipY:Matrix3D = new Matrix3D();\n\n\tprivate _listenToPositionChanged:boolean;\n\tprivate _listenToRotationChanged:boolean;\n\tprivate _listenToSkewChanged:boolean;\n\tprivate _listenToScaleChanged:boolean;\n\tprivate _zOffset:number = 0;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tprivate _skewX:number = 0;\n\tprivate _skewY:number = 0;\n\tprivate _skewZ:number = 0;\n\tprivate _scaleX:number = 1;\n\tprivate _scaleY:number = 1;\n\tprivate _scaleZ:number = 1;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _pivot:Vector3D = new Vector3D();\n\tprivate _pivotScale:Vector3D = new Vector3D();\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pivotZero:boolean = true;\n\tprivate _pivotDirty:boolean;\n\tprivate _pos:Vector3D = new Vector3D();\n\tprivate _rot:Vector3D = new Vector3D();\n\tprivate _ske:Vector3D = new Vector3D();\n\tprivate _sca:Vector3D = new Vector3D();\n\tprivate _transformComponents:Array<Vector3D>;\n\n\tpublic _pIgnoreTransform:boolean = false;\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _boundsType:string;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n    private _globalColorTransformChanged:DisplayObjectEvent;\n    private _globalColorTransformDirty:boolean;\n    private _globalColorTransform:ColorTransform = new ColorTransform();\n    private _onGlobalColorTransformChangedDelegate:(event:DisplayObjectEvent) => void;\n    private _onColorTransformChangedDelegate:(event:Event) => void;\n    private _inheritColorTransform:boolean = false;\n\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IDisplayObjectAdapter\n\t{\n\t\treturn this._adapter;\n\t}\n\n\tpublic set adapter(value:IDisplayObjectAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    public get inheritColorTransform():boolean\n    {\n        return this._inheritColorTransform;\n    }\n\n    public set inheritColorTransform(value:boolean)\n    {\n        this._inheritColorTransform = value;\n        this._invalidateGlobalColorTransform();\n    }\n\n\n    public get globalColorTransform():ColorTransform\n    {\n        if (this._globalColorTransformDirty)\n            this._updateGlobalColorTransform();\n\n        return this._globalColorTransform;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic get alpha():number\n    {\n        return this._pColorTransform.alphaMultiplier;\n    }\n\n    public set alpha(value:number)\n    {\n        this._pColorTransform.alphaMultiplier = value;\n    }\n\n    public get colorTransform()\n    {\n        return this._pColorTransform;\n    }\n\n    public set colorTransform(value:ColorTransform)\n    {\n        // TS compiler freaking out over Event.CHANGE, using literal strings for now\n        if (this._pColorTransform)\n            this._pColorTransform.removeEventListener(\"change\", this._onColorTransformChangedDelegate);\n\n\n        this._pSetColorTransform(value);\n\n        if (value)\n            value.addEventListener(\"change\", this._onColorTransformChangedDelegate);\n    }\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].updateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this.scaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._setScaleZ(val/this.getBox().depth);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tthis._eulers.x = this.rotationX;\n\t\tthis._eulers.y = this.rotationY;\n\t\tthis._eulers.z = this.rotationZ;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis.rotationX = value.x;\n\t\tthis.rotationY = value.y;\n\t\tthis.rotationZ = value.z;\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this.scaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._setScaleY(val/this.getBox().height);\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get ignoreTransform():boolean\n\t{\n\t\treturn this._pIgnoreTransform;\n\t}\n\n\tpublic set ignoreTransform(value:boolean)\n\t{\n\t\tif (this._pIgnoreTransform == value)\n\t\t\treturn;\n\n\t\tthis._pIgnoreTransform = value;\n\n\t\tif (value) {\n\t\t\tthis._pSceneTransform.identity();\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\n\t\t}\n\n\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic get name() :string\n    {\n        return this._pName;\n    }\n\n    public set name(value : string)\n    {\n        this._pName = value;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():Partition\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tif (this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\n\t\t\treturn;\n\n\t\tthis._pivot.x = pivot.x;\n\t\tthis._pivot.y = pivot.y;\n\t\tthis._pivot.z = pivot.z;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleX;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tthis._setScaleX(val);\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleY;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tthis._setScaleY(val);\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleZ;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tthis._setScaleZ(val);\n\t}\n\n\t/**\n\t * Indicates the horizontal skew(angle) of the object as applied from\n\t * the registration point. The default registration point is(0,0).\n\t */\n\tpublic get skewX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewX;\n\t}\n\n\tpublic set skewX(val:number)\n\t{\n\t\tif (this.skewX == val)\n\t\t\treturn;\n\n\t\tthis._skewX = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the vertical skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewY;\n\t}\n\n\tpublic set skewY(val:number)\n\t{\n\t\tif (this.skewY == val)\n\t\t\treturn;\n\n\t\tthis._skewY = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the depth skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewZ;\n\t}\n\n\tpublic set skewZ(val:number)\n\t{\n\t\tif (this.skewZ == val)\n\t\t\treturn;\n\n\t\tthis._skewZ = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this.scaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._setScaleX(val/this.getBox().width);\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._x == val)\n\t\t\treturn;\n\n\t\tthis._x = this._matrix3D.rawData[12] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._y == val)\n\t\t\treturn;\n\n\t\tthis._y = this._matrix3D.rawData[13] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._z == val)\n\t\t\treturn;\n\n\t\tthis._z = this._matrix3D.rawData[14] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get zOffset():number\n\t{\n\t\treturn this._zOffset;\n\t}\n\n\tpublic set zOffset(value:number)\n\t{\n\t\tthis._zOffset = value;\n\t}\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n        this._onGlobalColorTransformChangedDelegate = (event:DisplayObjectEvent) => this.onGlobalColorTransformChanged(event);\n        this._onColorTransformChangedDelegate = (event:Event) => this.onColorTransformChanged(event);\n\t\tthis._transformComponents = new Array<Vector3D>(4);\n\n\t\tthis._transformComponents[0] = this._pos;\n\t\tthis._transformComponents[1] = this._rot;\n\t\tthis._transformComponents[2] = this._ske;\n\t\tthis._transformComponents[3] = this._sca;\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform(this);\n\n\t\tthis._matrix3D.identity();\n\n\t\tthis._flipY.appendScale(1, -1, 1);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone(newInstance:DisplayObject = null):DisplayObject\n\t{\n\t\tif (!newInstance)\n\t\t\tnewInstance = new DisplayObject();\n\n\t\tnewInstance.pivot = this.pivot;\n\t\tnewInstance._iMatrix3D = this._iMatrix3D;\n\t\tnewInstance.name = this.name;\n\n\t\tnewInstance._iMaskID = this._iMaskID;\n\t\tnewInstance._iMasks = this._iMasks? this._iMasks.concat() : null;\n\n\t\tif (this._adapter)\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\n\n\t\tif (this._transform.colorTransform)\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\n\n\t\treturn newInstance;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this.parent)\n\t\t\tthis.parent.removeChild(this);\n\n\t\twhile (this._pRenderables.length)\n\t\t\tthis._pRenderables[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeAsset()\n\t{\n\t\tthis.dispose();\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\t//scale updates if absolute dimensions are detected\n\t\t\tif (this._width != null)\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\n\n\t\t\tif (this._height != null)\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\n\n\t\t\tif (this._depth != null)\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\n\t\t}\n\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\n\t\t\treturn this._pBoxBounds;\n\n\t\tif (targetCoordinateSpace == this._pParent)\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\n\t\telse\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid)\n\t\t\tthis._pUpdateSphereBounds();\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point):Point\n\t{\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\n\t\treturn new Point(pos.x, pos.y);\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\tvar objBox:Box = obj.getBox();\n\t\tif(!objBox) return false;\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\n\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n\n\t\tvar box:Box = this.getBox();\n\t\tif(!box) return false;\n\n\t\t//first check all points against targer box\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\n\n\t\t//now test against obj box\n\t\tvar n0x:number = topRight.y - topLeft.y;\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\n\n\t\tvar n1x:number = bottomRight.y - topRight.y;\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\n\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\n\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\n\n\t\tvar p0x:number = box.left - topLeft.x;\n\t\tvar p0y:number = box.top - topLeft.y;\n\t\tvar p1x:number = box.left - topRight.x;\n\t\tvar p1y:number = box.top - topRight.y;\n\t\tvar p2x:number = box.left - bottomRight.x;\n\t\tvar p2y:number = box.top - bottomRight.y;\n\t\tvar p3x:number = box.left - bottomLeft.x;\n\t\tvar p3y:number = box.top - bottomLeft.y;\n\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.top - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.top - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.top - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.top - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.left - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.left - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.left - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.left - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @param maskFlag Whether to check against the object when it is used as mask\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Array<number>;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point):Point\n\t{\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\n\t\treturn new Point(pos.x, pos.y);\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\n\t\t\treturn;\n\n\t\tthis.x = dx;\n\t\tthis.y = dy;\n\t\tthis.z = dz;\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (dx == 0 && dy == 0 && dz == 0)\n\t\t\treturn;\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\tpublic reset_to_init_state():void\n\t{\n\t\tthis.visible=true;\n\t\tif(this._iMatrix3D)\n\t\t\tthis._iMatrix3D.identity();\n\t\tif(this.colorTransform)\n\t\t\tthis.colorTransform.clear();\n\n\t\tthis.pInvalidateSceneTransform();\n\t}\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[3];\n\t\t\tcomps[0] = this.scenePosition;\n\t\t\tscale.x = this.scaleX;\n\t\t\tscale.y = this.scaleY;\n\t\t\tscale.z = this.scaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.prependRotation(angle, axis);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX += vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY += vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ += vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tthis.rotationX = ax;\n\t\tthis.rotationY = ay;\n\t\tthis.rotationZ = az;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type, listener))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = false;\n\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = false;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.x += x*len;\n\t\tthis.y += y*len;\n\t\tthis.z += z*len;\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\n\n\t\tthis.x = this._pos.x;\n\t\tthis.y = this._pos.y;\n\t\tthis.z = this._pos.z;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():Partition\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @internal\n\t */\n\tpublic get _iMatrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._pUpdateMatrix3D();\n\n\t\tif (this._pivotDirty)\n\t\t\tthis._pUpdatePivot();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set _iMatrix3D(val:Matrix3D)\n\t{\n\t\tfor (var i:number = 0; i < 12; i++)\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\n\n\t\tthis.x = val.rawData[12];\n\t\tthis.y = val.rawData[13];\n\t\tthis.z = val.rawData[14];\n\n\t\tthis._elementsDirty = true;\n\n\t\tif (!this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n        if (this._pParent) {\n            this._pParent.removeEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\n        }\n\n\t\tthis._pParent = value;\n\n        if (value) {\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren && value._pImplicitMouseEnabled);\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\n            value.addEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\n\t\t} else {\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\n\t\t\tthis._pUpdateImplicitVisibility(true);\n\t\t\tthis._pUpdateImplicitPartition(null, null);\n\t\t}\n\n        this._invalidateGlobalColorTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\treturn;\n\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\n\t\tif (!this._sceneTransformChanged)\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\n\n\t\tthis.queueDispatch(this._sceneTransformChanged);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tthis._pImplicitMouseEnabled = value;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (sceneChanged && this._pScene)\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tif (this._pIsEntity)\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tif (this._pIsEntity)\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\n\t\t}\n\n\t\tif (sceneChanged && this._pScene)\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\n\n\t\tif (sceneChanged) {\n\t\t\tif (!this._pIgnoreTransform)\n\t\t\t\tthis.pInvalidateSceneTransform();\n\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateMatrix3D()\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\tthis._pos.x = this._x;\n\t\tthis._pos.y = this._y;\n\t\tthis._pos.z = this._z;\n\n\t\tthis._rot.x = this._rotationX;\n\t\tthis._rot.y = this._rotationY;\n\t\tthis._rot.z = this._rotationZ;\n\n\t\tthis._ske.x = this._skewX;\n\t\tthis._ske.y = this._skewY;\n\t\tthis._ske.z = this._skewZ;\n\n\t\tthis._sca.x = this._scaleX;\n\t\tthis._sca.y = this._scaleY;\n\t\tthis._sca.z = this._scaleZ;\n\n\t\tthis._matrix3D.recompose(this._transformComponents);\n\n\t\tthis._matrix3DDirty = false;\n\t}\n\n\tpublic _pUpdatePivot()\n\t{\n\t\tif (!this._pivotZero) {\n\t\t\tthis._pivotScale.x = this._pivot.x/this._scaleX;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._scaleY;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._scaleZ;\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\t\tthis._pivotDirty = false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.updateController();\n\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\n\t\t} else {\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\n\t\t}\n\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._skewDirty = false;\n\t\tthis._scaleDirty = false;\n\t\tthis._pSceneTransformDirty = false;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._pRenderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\n\n\t\tthis._pRenderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\n\n\t\tthis._queuedEvents.length = 0;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate invalidateMatrix3D():void\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tif (!this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidatePartition()\n\t{\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].invalidatePartition();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePivot()\n\t{\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\n\n\t\tif (this._pivotDirty)\n\t\t\treturn;\n\n\t\tthis._pivotDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePosition()\n\t{\n\t\tif (this._positionDirty)\n\t\t\treturn;\n\n\t\tthis._positionDirty = true;\n\n\t\tif (!this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\n\t\tif (!this._pivotZero)\n\t\t\tthis.invalidatePivot();\n\n\t\tthis.queueDispatch(this._positionChanged || (this._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateRotation(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._rotationDirty)\n\t\t\treturn;\n\n\t\tthis._rotationDirty = true;\n\n\t\tthis.queueDispatch(this._rotationChanged || (this._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateSkew(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._skewDirty)\n\t\t\treturn;\n\n\t\tthis._skewDirty = true;\n\n\t\tthis.queueDispatch(this._skewChanged || (this._skewChanged = new DisplayObjectEvent(DisplayObjectEvent.SKEW_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateScale(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._scaleDirty)\n\t\t\treturn;\n\n\t\tthis._scaleDirty = true;\n\n\t\tthis.queueDispatch(this._scaleChanged || (this._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this)));\n\t}\n\n\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\n\n\t\tthis._entityNodes.splice(index, 1);\n\n\t\treturn entityNode;\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n\n    _updateGlobalColorTransform()\n    {\n        if (this._inheritColorTransform && this._pParent) {\n            this._globalColorTransform.copyFrom(this._pParent.globalColorTransform);\n            if (this._pColorTransform)\n                this._globalColorTransform.prepend(this._pColorTransform);\n        } else {\n            if (this._pColorTransform)\n                this._globalColorTransform.copyFrom(this._pColorTransform);\n            else\n                this._globalColorTransform.clear();\n        }\n\n        this._globalColorTransformDirty = false;\n    }\n\n    // this method is to bypass that TypeScript can't call super setters.\n    _pSetColorTransform(value:ColorTransform)\n    {\n        this._pColorTransform = value;\n        this._invalidateGlobalColorTransform();\n    }\n\n    _invalidateGlobalColorTransform()\n    {\n        this._globalColorTransformDirty = true;\n\n        if (!this._globalColorTransformChanged)\n            this._globalColorTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this);\n\n        this.dispatchEvent(this._globalColorTransformChanged);\n    }\n\n    private onGlobalColorTransformChanged(event:DisplayObjectEvent)\n    {\n        this._invalidateGlobalColorTransform();\n    }\n\n    private onColorTransformChanged(event:Event)\n    {\n        this._invalidateGlobalColorTransform();\n    }\n\n\tprivate queueDispatch(event:Event)\n\t{\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\tprivate updateElements()\n\t{\n\t\tthis._elementsDirty = false;\n\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[1];\n\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\n\t\t\tthis._rotationX = vec.x;\n\t\t\tthis._rotationY = vec.y;\n\t\t\tthis._rotationZ = vec.z;\n\n\t\t\tthis.invalidateRotation(false);\n\t\t}\n\n\t\tvec = elements[2];\n\n\t\tif (this._skewX != vec.x || this._skewY != vec.y || this._skewZ != vec.z) {\n\t\t\tthis._skewX = vec.x;\n\t\t\tthis._skewY = vec.y;\n\t\t\tthis._skewZ = vec.z;\n\n\t\t\tthis.invalidateSkew(false);\n\t\t}\n\n\t\tvec = elements[3];\n\n\t\tthis._width = null;\n\t\tthis._height = null;\n\t\tthis._depth = null;\n\n\t\tif (this._scaleX != vec.x || this._scaleY != vec.y || this._scaleZ != vec.z) {\n\t\t\tthis._scaleX = vec.x;\n\t\t\tthis._scaleY = vec.y;\n\t\t\tthis._scaleZ = vec.z;\n\n\t\t\tthis.invalidateScale(false);\n\t\t}\n\t}\n\n\tprivate _setScaleX(val:number)\n\t{\n\t\tif (this.scaleX == val)\n\t\t\treturn;\n\n\t\tthis._scaleX = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleY(val:number)\n\t{\n\t\tif (this.scaleY == val)\n\t\t\treturn;\n\n\t\tthis._scaleY = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleZ(val:number)\n\t{\n\t\tif (this.scaleZ == val)\n\t\t\treturn;\n\n\t\tthis._scaleZ = val;\n\n\t\tthis.invalidateScale();\n\t}\n}\n\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\n\n/**\n *\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleSubMesh objects.\n *\n *\n *\n * @see away.core.base.SubGeometry\n * @see away.entities.Mesh\n *\n * @class Geometry\n */\nclass Geometry extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Geometry]\";\n\n\tprivate _subGeometries:Array<SubGeometryBase>;\n\n\tpublic get assetType():string\n\t{\n\t\treturn Geometry.assetType;\n\t}\n\n\t/**\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\n\t */\n\tpublic get subGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\t/**\n\t * Creates a new Geometry object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\n\t}\n\n\t/**\n\t * Adds a new TriangleSubGeometry object to the list.\n\t * @param subGeometry The TriangleSubGeometry object to be added.\n\t */\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.push(subGeometry);\n\n\t\tsubGeometry.parentGeometry = this;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Removes a new TriangleSubGeometry object from the list.\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\n\t */\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\n\n\t\tsubGeometry.parentGeometry = null;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Clones the geometry.\n\t * @return An exact duplicate of the current Geometry object.\n\t */\n\tpublic clone():Geometry\n\t{\n\t\tvar clone:Geometry = new Geometry();\n\t\tvar len:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scale(scale);\n\t}\n\n\t/**\n\t * Clears all resources used by the Geometry object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\n\t\t\tthis.removeSubGeometry(subGeom);\n\t\t\tsubGeom.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\n\t{\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\n\t}\n}\n\nexport = Geometry;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tpublic static assetType:string = \"[asset Light]\";\n\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn LightBase.assetType;\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class LineSubGeometry\n */\nclass LineSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\n\tprivate _positions:AttributesView;\n\tprivate _thickness:Float1Attributes;\n\tprivate _colors:Byte4Attributes;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubGeometry.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Float1Attributes\n\t{\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colors():Byte4Attributes\n\t{\n\t\tif (!this._colors)\n\t\t\tthis.setColors(this._colors);\n\n\t\treturn this._colors;\n\t}\n\n\t/**\n\t * The total amount of vertices in the LineSubGeometry.\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\t\t\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tif (index/6 & 1) {\n\t\t\t\t\tpositions[index] = values[i + 3];\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\n\t\t\t\t\tpositions[index + 3] = values[i];\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[index] = values[i];\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\n\t\t\t\t}\n\n\t\t\t\tindex += 6;\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tvar o:number = index/6 - 4;\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._positions.set(positions, offset*4);\n\n\t\t\tthis.setIndices(indices, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic setThickness(array:Array<number>, offset?:number);\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\n\tpublic setThickness(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Float1Attributes) {\n\t\t\tthis._thickness = <Float1Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._thickness)\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\n\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis._thickness.set(thickness, offset*4);\n\t\t} else if (this._thickness) {\n\t\t\tthis._thickness.dispose();\n\t\t\tthis._thickness = null;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._thickness);\n\n\t\tthis._verticesDirty[this._thickness.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setColors(array:Array<number>, offset?:number);\n\tpublic setColors(float32Array:Float32Array, offset?:number);\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\n\tpublic setColors(values:any, offset:number = 0)\n\t{\n\t\tif (values) {\n\t\t\tif (values == this._colors)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Byte4Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\n\t\t\t\tthis._colors = <Byte4Attributes> values;\n\t\t\t} else {\n\t\t\t\tif (!this._colors)\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\n\n\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\tvar index:number = 0;\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tif (index/4 & 1) {\n\t\t\t\t\t\tcolors[index] = values[i + 4];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors[index] = values[i];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (++j == 4) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\ti += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\n\t\t\t\tthis._colors.set(values, offset*4);\n\t\t\t}\n\t\t} else {\n\t\t\t//auto-derive colors\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._colors);\n\n\t\tthis._verticesDirty[this._colors.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions = null;\n\t\tthis._thickness = null;\n\t\tthis._colors = null;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineSubGeometry\n\t{\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\t\tclone.setThickness(this._thickness.clone());\n\t\tclone.setColors(this._colors.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.LineSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.LineSubMesh\n */\nclass LineSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\n\n\tprivate _subGeometry:LineSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubMesh.assetType;\n\t}\n\n\t/**\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t */\n\tpublic get subGeometry():LineSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new LineSubMesh object\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\n\t * @param material An optional material used to render this LineSubMesh.\n\t */\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nclass LoaderInfo extends EventDispatcher\n{\n\tprivate _bytes:ByteArray;\n\tprivate _bytesLoaded:number;\n\tprivate _bytesTotal:number;\n\tprivate _content:DisplayObject;\n\tprivate _contentType:string;\n\tprivate _loader:Loader;\n\tprivate _url:string;\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get bytes():ByteArray\n\t{\n\t\treturn this._bytes;\n\t}\n\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic get bytesLoaded():number /*int*/\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic get bytesTotal():number /*int*/\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic get contentType():string\n\t{\n\t\treturn this._contentType;\n\t}\n\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get loader():Loader\n\t{\n\t\treturn this._loader;\n\t}\n\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n}\n\nexport = LoaderInfo;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass SubGeometryBase extends AssetBase\n{\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\n\t\n\tpublic _pIndices:Short3Attributes;\n\n\tprivate _numElements:number = 0;\n\n\tpublic _concatenatedBuffer:AttributesBuffer;\n\n\tprivate _indicesUpdated:SubGeometryEvent;\n\n\tpublic _verticesDirty:Object = new Object();\n\tpublic _verticesUpdated:Object = new Object();\n\n\tpublic get concatenatedBuffer():AttributesBuffer\n\t{\n\t\treturn this._concatenatedBuffer;\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Short3Attributes\n\t{\n\t\treturn this._pIndices;\n\t}\n\n\t/**\n\t * The total amount of triangles in the TriangleSubGeometry.\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._numElements;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper();\n\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic invalidate():void\n\t{\n\t\tvar len:number = this._subGeometryVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._subGeometryVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._subGeometryVO.length)\n\t\t\tthis._subGeometryVO[0].dispose();\n\n\t\tthis._pIndices.dispose();\n\t\tthis._pIndices = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Short3Attributes) {\n\t\t\tif (this._pIndices)\n\t\t\t\tthis.notifyIndicesDispose();\n\n\t\t\tthis._pIndices = <Short3Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._pIndices)\n\t\t\t\tthis._pIndices = new Short3Attributes();\n\n\t\t\tthis._pIndices.set(values, offset);\n\t\t} else if (this._pIndices) {\n\t\t\tthis._pIndices.dispose();\n\t\t\tthis._pIndices = null;\n\n\t\t\tthis.notifyIndicesDispose();\n\t\t}\n\n\t\tif (this._pIndices) {\n\t\t\tthis._numElements = this._pIndices.count;\n\n\t\t\tthis.notifyIndicesUpdate();\n\t\t} else {\n\t\t\tthis._numElements = 0;\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate notifyIndicesUpdate()\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\n\n\t\tthis.dispatchEvent(this._indicesUpdated);\n\t}\n\n\tprivate notifyIndicesDispose()\n\t{\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\n\t}\n\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\n\t\t\treturn;\n\n\t\tthis._verticesDirty[attributesView.id] = true;\n\n\t\tif (!this._verticesUpdated[attributesView.id])\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\n\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\n\t}\n\n\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tattributesView.dispose();\n\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\n\n\t\tthis._verticesDirty[attributesView.id] = null;\n\t\tthis._verticesUpdated[attributesView.id] = null;\n\t}\n\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.push(subGeometryVO);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass SubMeshBase extends AssetBase\n{\n\tpublic _pParentMesh:Mesh;\n\tpublic _uvTransform:UVTransform;\n\tpublic _colorTransform:ColorTransform;\n\n\tpublic _iIndex:number = 0;\n\n\tpublic _material:MaterialBase;\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._pParentMesh.animator;\n\t}\n\n\t/**\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this._pParentMesh.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The scene transform object that transforms from model to world space.\n\t */\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\treturn this._pParentMesh.sceneTransform;\n\t}\n\n\t/**\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\n\t */\n\tpublic get parentMesh():Mesh\n\t{\n\t\treturn this._pParentMesh;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform || this._pParentMesh.globalColorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t * Creates a new SubMeshBase object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\t/**\n\t *\n\t * @param camera\n\t * @returns {away.geom.Matrix3D}\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _iInvalidateRenderableGeometry()\n\t{\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n}\n\nexport = SubMeshBase;",
    "import DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport MovieClip\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport DisplayObject                    = require(\"awayjs-display/lib/base/DisplayObject\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n\nclass Timeline\n{\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\n\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\n\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\n\n\t// synched:\n\tpublic frame_command_indices:ArrayBufferView;\n\tpublic frame_recipe:ArrayBufferView;\n\n\t// synched:\n\tpublic command_index_stream:ArrayBufferView;\n\tpublic command_length_stream:ArrayBufferView;\n\n\tpublic add_child_stream:ArrayBufferView;\n\tpublic remove_child_stream:ArrayBufferView;\n\tpublic update_child_stream:ArrayBufferView;\n\n\tpublic update_child_props_length_stream:ArrayBufferView;\n\tpublic update_child_props_indices_stream:ArrayBufferView;\n\n\tpublic property_index_stream:ArrayBufferView;\n\tpublic property_type_stream:ArrayBufferView;\n\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\n\n\t// propertiy_values_stream:\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_strings:Array<string>;\n\n\tprivate _potentialPrototypes:Array<DisplayObject>;\n\n\tpublic numKeyFrames:number=0;\n\n\tconstructor()\n\t{\n\t\tthis.keyframe_indices=[];\n\n\t\tthis._potentialPrototypes=[];\n\t\tthis._labels={};\n\t\tthis._framescripts={};\n\t\tthis._framescripts_translated={};\n\t}\n\n\tpublic init():void\n\t{\n\t\tif((this.frame_command_indices==null)||(this.frame_recipe==null)||(this.keyframe_durations==null))\n\t\t\treturn;\n\t\tthis.keyframe_firstframes=[];\n\t\tthis.keyframe_constructframes=[];\n\t\tvar frame_cnt=0;\n\t\tvar ic=0;\n\t\tvar ic2=0;\n\t\tvar keyframe_cnt=0;\n\t\tvar last_construct_frame=0;\n\t\tfor(ic=0; ic<this.numKeyFrames; ic++){\n\t\t\tvar duration=this.keyframe_durations[(ic)];\n\n\t\t\tif((this.frame_recipe[ic] & 1) == 1)\n\t\t\t\tlast_construct_frame=keyframe_cnt;\n\n\t\t\tthis.keyframe_firstframes[keyframe_cnt]=frame_cnt;\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++]=last_construct_frame;\n\n\t\t\tfor(ic2=0; ic2<duration; ic2++){\n\t\t\t\tthis.keyframe_indices[frame_cnt++]=ic;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get_framescript(keyframe_index:number):string\n\t{\n\t\tif(this._framescripts[keyframe_index]==null)\n\t\t\treturn \"\";\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\n\t\t\treturn this._framescripts[keyframe_index];\n\t\telse{\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\n\t\t}\n\t\treturn \"\";\n\t}\n\tpublic add_framescript(value:string, keyframe_index:number)\n\t{\n\t\tthis._framescripts[keyframe_index] = value;\n\t}\n\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\n\t}\n\n\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number, scriptPass1:Boolean=false) : void\n\t{\n\t\tif(this._framescripts[keyframe_idx]!=null){\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\n\t\t\t}\n\t\t\tif(scriptPass1)\n\t\t\t\tFrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\n\t\t\telse\n\t\t\t\tFrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\n\n\t\t}\n\t}\n\n\tpublic get numFrames():number\n\t{\n\t\treturn this.keyframe_indices.length;\n\t}\n\n\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\n\t{\n\t\treturn this._potentialPrototypes[id];\n\n\t}\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\n\t{\n\t\treturn this.keyframe_indices[frame_index];\n\t}\n\n\tpublic getPotentialChilds() : Array<DisplayObject>\n\t{\n\t\treturn this._potentialPrototypes;\n\t}\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\n\t{\n\t\treturn this._potentialPrototypes[id].clone();\n\t}\n\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\n\t{\n\t\tvar id = this._potentialPrototypes.length;\n\t\tthis._potentialPrototypes[id] = prototype;\n\t}\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\n\t{\n\t\tvar key_frame_index:number = this._labels[label];\n\t\tif(key_frame_index>=0)\n\t\t\ttarget_mc.currentFrameIndex=this.keyframe_firstframes[key_frame_index];\n\n\t}\n\n\n\tpublic gotoFrame(target_mc:MovieClip, value : number)\n\t{\n\t\t//console.log(\"gotoframe\");\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\n\n\t\tvar firstframe=this.keyframe_firstframes[target_keyframe_idx];\n\t\tif(frameIndex==value){\n\t\t\t//we are already on exactly this frame.\n\t\t\treturn;\n\t\t}\n\t\tif(current_keyframe_idx+1==target_keyframe_idx){\n\t\t\t// target_keyframe_idx is the next keyframe. we can just use constructnext for this\n\t\t\ttarget_mc.set_currentFrameIndex(value);\n\t\t\tthis.constructNextFrame(target_mc, true, true);\n\t\t\treturn;\n\t\t}\n\n\t\tif(firstframe==value){\n\t\t\t//frame changed. and firstframe of keyframe. execute framescript if available\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\n\t\t}\n\n\t\tif(current_keyframe_idx==target_keyframe_idx) {\n\t\t\t// already constructed - exit\n\t\t\treturn;\n\t\t}\n\n\t\tvar break_frame_idx:number=this.keyframe_constructframes[target_keyframe_idx];\n\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\n\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\n\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\n\t\tvar start_construct_idx:number=break_frame_idx;\n\t\t// in case we jump forward, but not jump a gap, we start at current_keyframe_idx +1\n\t\tif((jump_forward)&&(!jump_gap)){\n\t\t\tstart_construct_idx=current_keyframe_idx+1;\n\t\t}\n\t\tvar target_childs_dic:Object=[];\n\t\tvar i:number = target_mc.numChildren;\n\t\tvar child:DisplayObject;\n\n\t\tif((jump_forward) && (start_construct_idx==target_keyframe_idx)){\n\t\t\t// if we jump back, we dont want this shortcut, because we need to compare targetframe vs currentframe\n\n\t\t\t// shortcut: if the targetframe is the breakframe itself, we can just call constructNextFrame\n\t\t\t// before we do that, we need to clear the childlist\n/*\n\t\t\twhile(i--){\n\t\t\t\tchild = target_mc.getChildAt(i);\n\t\t\t\tif(child.adapter)child.adapter.freeFromScript();\n\t\t\t\ttarget_mc.adapter.unregisterScriptObject(child);\n\t\t\t\ttarget_mc.removeChild(child);\n\t\t\t}\n\t\t\ttarget_mc.set_currentFrameIndex(value);\n\t\t\tthis.constructNextFrame(target_mc, false);\n\t\t\treturn;\n\t\t\t*/\n\t\t}\n\n\t\t//console.log(\"gotoframe frame mc name = \"+target_mc.name +\"   \"+value);\n\t\twhile(i--){\n\t\t\tchild = target_mc.getChildAt(i);\n\t\t\tif(jump_gap){\n\t\t\t\t// if we jump a gap forward, we just can remove all childs from mc. all script blockage will be gone\n\t\t\t\tif(child.adapter)child.adapter.freeFromScript();\n\t\t\t\ttarget_mc.adapter.unregisterScriptObject(child);\n\t\t\t\ttarget_mc.removeChild(child);\n\t\t\t}\n\t\t\telse{\n\t\t\t\t// in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\n\t\t\t\ttarget_childs_dic[target_mc.getChildDepth(child)]=child;\n\t\t\t}\n\t\t}\n\n\t\t//console.log(\"gotoframe keyframe = \"+target_keyframe_idx+\" name = \"+target_mc.name);\n\t\t//  step1: only apply add/remove commands into current_childs_dic.\n\t\tvar update_indices:Array<number>=[];// store a list of updatecommand_indices, so we dont have to read frame_recipe again\n\t\tvar update_cnt=0;\n\t\tvar k;\n\t\tfor(k=start_construct_idx;k<=target_keyframe_idx; k++){\n\t\t\tvar frame_command_idx:number=this.frame_command_indices[k];\n\t\t\tvar frame_recipe:number=this.frame_recipe[k];\n\n\t\t\tif ((frame_recipe & 2) == 2){\n\t\t\t\t// remove childs\n\t\t\t\tvar start_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tvar len = this.command_length_stream[frame_command_idx++];\n\t\t\t\tfor(var i:number = 0; i < len; i++){\n\t\t\t\t\tdelete target_childs_dic[(this.remove_child_stream[start_index+i] - 16383)];\n\t\t\t\t}\n\t\t\t\t//console.log(\"remove childs = \"+len);\n\t\t\t}\n\n\t\t\tif((frame_recipe & 4)==4){\n\t\t\t\tvar start_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tvar len = this.command_length_stream[frame_command_idx++];\n\t\t\t\tvar i:number=len;\n\t\t\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t\t\t// this could be changed in exporter\n\t\t\t\twhile(i--){\n\t\t\t\t\tvar target:DisplayObject = target_mc.getPotentialChildInstance(this.add_child_stream[start_index*2 + i*2]);\n\t\t\t\t\ttarget._sessionID = start_index + i;\n\t\t\t\t\ttarget_childs_dic[(this.add_child_stream[start_index*2 + i*2 + 1] - 16383)] = target;\n\t\t\t\t}\n\t\t\t\t//console.log(\"add childs = \"+len);\n\t\t\t}\n\n\t\t\tif((frame_recipe & 8)==8)\n\t\t\t\tupdate_indices[update_cnt++]=frame_command_idx;// execute update command later\n\t\t}\n\t\t//  step2: construct the final frame\n\n\t\tvar target_child_sessionIDS:Object={};\n\t\tfor (var key in target_childs_dic) {\n\t\t\tif (target_childs_dic[key] != null) {\n\t\t\t\ttarget_child_sessionIDS[(<DisplayObject>target_childs_dic[key])._sessionID] = key;\n\t\t\t}\n\t\t}\n\n\t\t// check what childs are alive on both frames.\n\t\t// childs that are not alive anymore get removed and unregistered\n\t\t// childs that are alive on both frames get removed from the target_child_sessionIDS + target_childs_dic\n\t\ti = target_mc.numChildren;\n\t\twhile(i--){\n\t\t\tchild=target_mc.getChildAt(i);\n\t\t\tif(target_child_sessionIDS[child._sessionID]==null){\n\t\t\t\tif(child.adapter)child.adapter.freeFromScript();\n\t\t\t\ttarget_mc.adapter.unregisterScriptObject(child);\n\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tdelete target_childs_dic[target_child_sessionIDS[child._sessionID]];\n\t\t\t\tdelete target_child_sessionIDS[child._sessionID];\n\t\t\t}\n\t\t}\n\t\tfor (var key in target_childs_dic) {\n\t\t\tchild=target_childs_dic[key];\n\t\t\tif(child){\n\t\t\t\ttarget_mc.addChildAtDepth(child, parseInt(key));\n\t\t\t}\n\t\t}\n\n\t\t//  pass2: apply update commands for objects on stage (only if they are not blocked by script)\n\t\tvar frame_command_idx:number=0;\n\t\tfor(k=0;k<update_indices.length; k++){\n\t\t\tframe_command_idx=update_indices[k];\n\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx] );\n\t\t}\n\t\ttarget_mc.constructedKeyFrameIndex=target_keyframe_idx;\n\t}\n\n\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean=true, scriptPass1:Boolean=false)\n\t{\n\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\t\tvar constructed_keyFrameIndex:number = target_mc.constructedKeyFrameIndex;\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\n\n\t\tif((queueScript)&&(this.keyframe_firstframes[new_keyFrameIndex]==frameIndex)){\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\n\t\t}\n\t\t//console.log(\"next frame mc name = \"+target_mc.name+ \"    \"+frameIndex);\n\t\tif(constructed_keyFrameIndex!=new_keyFrameIndex){\n\t\t\ttarget_mc.constructedKeyFrameIndex=new_keyFrameIndex;\n\n\t\t\tvar frame_command_idx=this.frame_command_indices[new_keyFrameIndex];\n\t\t\tvar frame_recipe=this.frame_recipe[new_keyFrameIndex];\n\n\t\t\tif((frame_recipe & 1)==1) {\n\t\t\t\tvar i:number = target_mc.numChildren;\n\t\t\t\twhile (i--) {\n\t\t\t\t\tvar target:DisplayObject=target_mc.getChildAt(i);\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t\t\ttarget_mc.adapter.unregisterScriptObject(target);\n\n\t\t\t\t\tif (target.adapter)\n\t\t\t\t\t\ttarget.adapter.freeFromScript();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ((frame_recipe & 2)==2) {\n\t\t\t\tthis.remove_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\n\t\t\t}\n\n\t\t\tif((frame_recipe & 4)==4)\n\t\t\t\tthis.add_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\n\n\t\t\tif((frame_recipe & 8)==8)\n\t\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\n\n\t\t}\n\n\t}\n\n\n\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\tfor(var i:number = 0; i < len; i++) {\n\t\t\tvar target:DisplayObject = sourceMovieClip.removeChildAtDepth(this.remove_child_stream[start_index + i] - 16383);\n\t\t\tsourceMovieClip.adapter.unregisterScriptObject(target);\n\t\t\tif( target.adapter) target.adapter.freeFromScript();\n\t\t}\n\t}\n\n\n\t// used to add childs when jumping between frames\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t// this could be changed in exporter \n\t\tvar i:number=len;\n\t\twhile(i--){\n\t\t\tvar target:DisplayObject = sourceMovieClip.getPotentialChildInstance(this.add_child_stream[start_index*2 + i*2]);\n\t\t\ttarget._sessionID = start_index + i;\n\t\t\tsourceMovieClip.addChildAtDepth(target, this.add_child_stream[start_index*2 + i*2 + 1] - 16383);\n\n\t\t}\n\t}\n\n\tpublic update_childs(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\tvar props_cnt:number;\n\t\tvar props_start_idx:number;\n\t\tvar value_start_index:number;\n\t\tvar props_type:number;\n\t\tvar doit:boolean;\n\t\tfor(var i:number = 0; i < len; i++) {\n\t\t\tvar childID:number=this.update_child_stream[start_index + i];\n\t\t\tvar target:DisplayObject = sourceMovieClip.getPotentialChildInstance(childID);\n\t\t\tif (target.parent == sourceMovieClip) {\n\t\t\t\tdoit = true;\n\t\t\t\t// check if the child is active + not blocked by script\n\t\t\t\tif (target.adapter && target.adapter.isBlockedByScript())\n\t\t\t\t\tdoit = false;\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[start_index + i];\n\t\t\t\tprops_cnt = this.update_child_props_length_stream[start_index + i];\n\n\t\t\t\tfor(var p:number = 0; p < props_cnt; p++) {\n\t\t\t\t\tprops_type = this.property_type_stream[props_start_idx + p];\n\t\t\t\t\tvalue_start_index = this.property_index_stream[props_start_idx + p];\n\t\t\t\t\tswitch(props_type){\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 1:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 6;\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D || new Matrix3D();\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[value_start_index];\n\t\t\t\t\t\t\t\ttarget._iMatrix3D = new_matrix;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 2:// colormatrix\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 8;\n\t\t\t\t\t\t\t\tvar new_ct:ColorTransform = target.colorTransform || new ColorTransform();\n\t\t\t\t\t\t\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.redOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[value_start_index];\n\t\t\t\t\t\t\t\ttarget.colorTransform = new_ct;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 3:// masks\n\t\t\t\t\t\t\tvar mask_length:number=this.properties_stream_int[value_start_index++];\n\t\t\t\t\t\t\tvar firstMaskID:number=this.properties_stream_int[value_start_index] - 1;\n\t\t\t\t\t\t\tif (mask_length == 1 && firstMaskID == -1) {\n\t\t\t\t\t\t\t\ttarget._iMaskID = childID;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar mask:DisplayObject;\n\t\t\t\t\t\t\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\n\t\t\t\t\t\t\t\tfor(var m:number = 0; m < mask_length; m++){\n\t\t\t\t\t\t\t\t\tmask = masks[m] = sourceMovieClip.getPotentialChildInstance(this.properties_stream_int[value_start_index++] - 1);\n\t\t\t\t\t\t\t\t\tmask.mouseEnabled = false;\n\t\t\t\t\t\t\t\t\tif(mask.isAsset(DisplayObjectContainer))\n\t\t\t\t\t\t\t\t\t\t(<DisplayObjectContainer> mask).mouseChildren = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttarget._iMasks = masks;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 4:// instance name movieclip instance\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\t\t\t\t\t\t\t//console.log(\"register name = \"+target.name);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 5:// instance name button instance\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\t\t\t\t\t\t\t(<MovieClip>target).addButtonListeners();\n\t\t\t\t\t\t\t//console.log(\"register button = \"+target.name);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 6://visible\n\n\t\t\t\t\t\t\tif (target.adapter && target.adapter.isVisibilityByScript()){}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\ttarget.visible = Boolean(value_start_index);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 11:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 4;\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D || new Matrix3D();\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[value_start_index];\n\t\t\t\t\t\t\t\ttarget._iMatrix3D = new_matrix;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 12:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 2;\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D || new Matrix3D();\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_pos[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_pos[value_start_index];\n\t\t\t\t\t\t\t\ttarget._iMatrix3D = new_matrix;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = Timeline;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform\n{\n\tprivate _displayObject:DisplayObject;\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tpublic _position:Vector3D = new Vector3D();\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic colorTransform:ColorTransform;\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Stage.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\treturn this._displayObject._iMatrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tthis._displayObject._iMatrix3D = val;\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._displayObject._iMatrix3D.position\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._displayObject.x = value.x;\n\t\tthis._displayObject.y = value.y;\n\t\tthis._displayObject.z = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\n\t}\n\n\tpublic set rotation(value:Vector3D)\n\t{\n\t\tthis._displayObject.rotationX = value.x;\n\t\tthis._displayObject.rotationY = value.y;\n\t\tthis._displayObject.rotationZ = value.z;\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\n\t}\n\n\tpublic set scale(value:Vector3D)\n\t{\n\t\tthis._displayObject.scaleX = value.x;\n\t\tthis._displayObject.scaleY = value.y;\n\t\tthis._displayObject.scaleZ = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t}\n\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis._displayObject = displayObject;\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n}\n\nexport = Transform;\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass TriangleSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _normals:Float3Attributes;\n\tprivate _tangents:Float3Attributes;\n\tprivate _uvs:Float2Attributes;\n\tprivate _secondaryUVs:Float2Attributes;\n\tprivate _jointIndices:AttributesView;\n\tprivate _jointWeights:AttributesView;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _faceNormals:Float4Attributes;\n\tprivate _faceTangents:Float3Attributes;\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubGeometry.assetType;\n\t}\n\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tif (this._jointIndices)\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\n\n\t\tif (this._jointWeights)\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get normals():Float3Attributes\n\t{\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\n\t\t\tthis.setNormals(this._normals);\n\n\t\treturn this._normals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get tangents():Float3Attributes\n\t{\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\n\t\t\tthis.setTangents(this._tangents);\n\n\t\treturn this._tangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Float4Attributes\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Float3Attributes\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get secondaryUVs():Float2Attributes\n\t{\n\t\treturn this._secondaryUVs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():AttributesView\n\t{\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():AttributesView\n\t{\n\t\treturn this._jointWeights;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setNormals(array:Array<number>, offset?:number);\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setNormals(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif (values == this._normals)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._normals)\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._normals.set(values, offset);\n\t\t\t} else if (this._normals) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tthis._verticesDirty[this._normals.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic setTangents(array:Array<number>, offset?:number);\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setTangents(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif (values == this._tangents)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._tangents)\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._tangents.set(values, offset);\n\t\t\t} else if (this._tangents) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceTangentsDirty)\n\t\t\t\tthis.updateFaceTangents();\n\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis._verticesDirty[this._tangents.id] = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\t/**\n\t * Updates the secondary uvs based on the geometry.\n\t */\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._secondaryUVs)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._secondaryUVs)\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._secondaryUVs.set(values, offset);\n\t\t} else if (this._secondaryUVs) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\n\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic setJointIndices(array:Array<number>, offset?:number);\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\n\tpublic setJointIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointIndices)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointIndices)\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\toldIndex = values[i];\n\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value to dictionary lookup\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._jointIndices.set(values, offset);\n\n\t\t} else if (this._jointIndices) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\n\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic setJointWeights(array:Array<number>, offset?:number);\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\n\tpublic setJointWeights(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointWeights)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointWeights)\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tthis._jointWeights.set(values, offset);\n\n\t\t} else if (this._jointWeights) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\n\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tif (this._normals) {\n\t\t\tthis._normals.dispose();\n\t\t\tthis._normals = null;\n\t\t}\n\n\t\tif (this._tangents) {\n\t\t\tthis._tangents.dispose();\n\t\t\tthis._tangents = null;\n\t\t}\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t\tif (this._secondaryUVs) {\n\t\t\tthis._secondaryUVs.dispose();\n\t\t\tthis._secondaryUVs = null;\n\t\t}\n\n\t\tif (this._jointIndices) {\n\t\t\tthis._jointIndices.dispose();\n\t\t\tthis._jointIndices = null;\n\t\t}\n\n\t\tif (this._jointWeights) {\n\t\t\tthis._jointWeights.dispose();\n\t\t\tthis._jointWeights = null;\n\t\t}\n\n\t\tif (this._faceNormals) {\n\t\t\tthis._faceNormals.dispose();\n\t\t\tthis._faceNormals = null;\n\t\t}\n\n\t\tif (this._faceTangents) {\n\t\t\tthis._faceTangents.dispose();\n\t\t\tthis._faceTangents = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tsuper.setIndices(values, offset);\n\n\t\tthis._faceNormalsDirty = true;\n\t\tthis._faceTangentsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleSubGeometry\n\t{\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveNormals = false;\n\t\tclone.autoDeriveTangents = false;\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.normals)\n\t\t\tclone.setNormals(this.normals.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\tif (this.tangents)\n\t\t\tclone.setTangents(this.tangents.clone());\n\n\t\tif (this.secondaryUVs)\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\n\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\n\n\t\tif (this.jointIndices)\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\n\n\t\tif (this.jointWeights)\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.TriangleSubMesh\n */\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\n\n\tprivate _subGeometry:TriangleSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t */\n\tpublic get subGeometry():TriangleSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new TriangleSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\n\t * @param material An optional material used to render this TriangleSubMesh.\n\t */\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tpublic _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Array<number> = new Array<number>(16);\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Mesh;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pUpdate();\n\t\t}\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject implements IAsset\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _mouseChildren:boolean = true;\n\tprivate _depths:Array<number> = new Array<number>();\n\tprivate _nextHighestDepth:number = 0;\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\n\tpublic _iIsRoot:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent._pImplicitMouseEnabled : true);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this.addChildAt(child, this._children.length);\n\t}\n\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\n\t\t\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\n\n\t\tvar len:number = this._depths.length;\n\t\tvar index:number = len;\n\t\t\n\t\twhile (index--)\n\t\t\tif (this._depths[index] < depth)\n\t\t\t\tbreak;\n\n\t\tindex++;\n\n\t\tif (index < len) {\n\t\t\t//if replace flag & depths match current depth, remove the existing child\n\t\t\tif (this._depths[index] == depth) {\n\t\t\t\tif (replace) {\n\t\t\t\t\tthis.removeChildAt(index);\n\t\t\t\t} else {\n\t\t\t\t\t//move depth of existing child up by 1\n\t\t\t\t\tthis.addChildAtDepth(this._children[index], this._depths[index] + 1, false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._children.splice(index, 0, child);\n\t\t\tthis._depths.splice(index, 0, depth);\n\t\t} else {\n\t\t\tthis._children.push(child);\n\t\t\tthis._depths.push(depth);\n\n\t\t\tthis._nextHighestDepth = depth + 1;\n\t\t}\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\t\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\n\t{\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._depths[index] : this._nextHighestDepth, false);\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone(newInstance:DisplayObjectContainer = null):DisplayObject\n\t{\n\t\tnewInstance = <DisplayObjectContainer> super.clone(newInstance || new DisplayObjectContainer());\n\n\t\tnewInstance.partition = this.partition;\n\t\tnewInstance.mouseEnabled = this.mouseEnabled;\n\t\tnewInstance.mouseChildren = this.mouseChildren;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance.addChild(this._children[i].clone());\n\n\t\treturn newInstance;\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeWithChildren()\n\t{\n\t\tthis.dispose();\n\n\t\twhile (this.numChildren > 0)\n\t\t\tthis.getChildAt(0).dispose();\n\t}\n\t\n\tpublic getChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this.getChildAt(this.getDepthIndexInternal(depth));\n\t}\n\t\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\tpublic getChildDepth(child:DisplayObject):number /*int*/\n\t{\n\t\treturn this._depths[this.getChildIndex(child)];\n\t}\n\n\tpublic getNextHighestDepth()\n\t{\n\t\treturn this._nextHighestDepth;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildAt(this.getChildIndex(child));\n\n\t\treturn child;\n\t}\n\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\n\t}\t\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\n\n\t\tchild.iSetParent(null);\n\n\t\tthis._pInvalidateBounds();\n\t\t\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number, index2:number)\n\t{\n\t\tvar depth:number = this._depths[index2];\n\t\tvar child:DisplayObject = this._children[index1];\n\n\t\tthis.addChildAtDepth(this._children[index2], this._depths[index1]);\n\t\tthis.addChildAtDepth(child, depth);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar min:number;\n\t\tvar max:number;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\tvar box:Box;\n\t\tvar numChildren:number = this._children.length;\n\n\t\tif (numChildren > 0) {\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\n\t\t\t\tbox = this._children[i].getBox(this);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\n\t\t\t\t} else {\n\t\t\t\t\tmax = box.width + (min = box.x);\n\t\t\t\t\tif (min < minX)\n\t\t\t\t\t\tminX = min;\n\t\t\t\t\tif (max > maxX)\n\t\t\t\t\t\tmaxX = max;\n\n\t\t\t\t\tmax = box.height + (min = box.y);\n\t\t\t\t\tif (min < minY)\n\t\t\t\t\t\tminY = min;\n\t\t\t\t\tif (max > maxY)\n\t\t\t\t\t\tmaxY = max;\n\n\t\t\t\t\tmax = box.depth + (min = box.z);\n\t\t\t\t\tif (min < minZ)\n\t\t\t\t\t\tminZ = min;\n\t\t\t\t\tif (max > maxZ)\n\t\t\t\t\t\tmaxZ = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren && this._pImplicitMouseEnabled);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitVisibility(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\n\t{\n\t\tsuper._pUpdateImplicitPartition(value, scene);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tprivate removeChildAtInternal(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\n\t\tthis._depths.splice(index, 1);\n\n\t\t//if child is the last in array, update next highest depth\n\t\tif (index == this._children.length)\n\t\t\tthis._nextHighestDepth = this._depths[index - 1] + 1;\n\n\t\treturn child;\n\t}\n\t\n\tprivate getDepthIndexInternal(depth:number /*int*/):number\n\t{\n\t\tvar index:number = this._depths.indexOf(depth);\n\n\t\tif (index == -1)\n\t\t\tthrow new ArgumentError(\"No child at specified depth\");\n\n\t\treturn index;\n\t}\n\t\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\tif(this._iMaskID!==-1 && !masksFlag)return;\n\t\tif(this.visible==false)return;\n\t\tfor(var i:number = 0; i < this.numChildren; i++)\n\t\t{\n\t\t\tvar child:DisplayObject = this.getChildAt(i);\n\t\t\tvar childHit:boolean = child.hitTestPoint(x,y, shapeFlag, masksFlag);\n\t\t\tif(childHit) {\n\t\t\t\tvar all_masks:Array<DisplayObject> = this._iMasks;\n\t\t\t\tif(all_masks){\n\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++){\n\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\n\t\t\t\t\t\tif(mask_child.parent){\n\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x,y, shapeFlag, true);\n\t\t\t\t\t\t\tif(childHit) return true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n}\n\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\n\n/**\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the Loader object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The Loader class overrides the following methods that it inherits,\n * because a Loader object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the Loader object's root SWF file), you may want to define a\n * mask for the Loader object, to prevent the loaded content(which is a child\n * of the Loader object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass Loader extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loaderSession:LoaderSession;\n\tprivate _loaderSessionGarbage:LoaderSession;\n\tprivate _gcTimeoutIID:number;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onResourceCompleteDelegate:Function;\n\tprivate _onAssetCompleteDelegate:Function;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\tprivate _content:DisplayObject;\n\tprivate _contentLoaderInfo:LoaderInfo;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\n\t * LoaderInfo objects are shared between the Loader object and the loaded\n\t * content object. The LoaderInfo object supplies loading progress\n\t * information and statistics about the loaded file.\n\t *\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\n\t * LoaderInfo object, even before the content is loaded, so that you can add\n\t * event listeners to the object prior to the load.</p>\n\t *\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n\t */\n\tpublic get contentLoaderInfo():LoaderInfo\n\t{\n\t\treturn this._contentLoaderInfo;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (!this._loaderSession)\n\t\t\treturn;\n\t\t\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\n\t\t}\n\t\t\n\t\tthis._disposeLoaderSession();\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, LoaderSession will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\n\t}\n\n\tprivate _getLoaderSession()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tthis._loaderSession = lib.getLoaderSession();\n\t\t} else {\n\t\t\tthis._loaderSession = new LoaderSession();\n\t\t}\n\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn this._loaderSession;\n\t}\n\n\tprivate _disposeLoaderSession()\n\t{\n\t\t// Add loader to garbage - for a collection sweep and kill\n\t\tthis._loaderSessionGarbage = this._loaderSession;\n\t\tdelete this._loaderSession;\n\t\tthis._loaderSession = null;\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\n\t}\n\t\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tLoaderSession.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoaderSession.enableParsers(parserClasses);\n\t}\n\t\n\tprivate loaderSessionGC():void\n\t{\n\t\t//remove listeners\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\tif (!this._useAssetLib)\n\t\t\tthis._loaderSessionGarbage.stop();\n\n\t\tdelete this._loaderSessionGarbage;\n\t\tthis._loaderSessionGarbage = null;\n\n\t\tclearTimeout(this._gcTimeoutIID);\n\t\tthis._gcTimeoutIID = null;\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:IOErrorEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis._disposeLoaderSession();\n\t}\n}\n\nexport = Loader;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\nclass Scene extends EventDispatcher\n{\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\n\tprivate _partition:Partition;\n\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\n\tpublic _iCollectionMark = 0;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._partition = new Partition(new NodeBase());\n\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\n\n\t\tthis._iSceneGraphRoot._iSetScene(this);\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\n\t\tthis._iSceneGraphRoot.partition = this._partition;\n\t}\n\n\tpublic traversePartitions(traverser:CollectorBase)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\tthis._iCollectionMark++;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\tpublic get partition():Partition\n\t{\n\t\treturn this._iSceneGraphRoot.partition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tthis._iSceneGraphRoot.partition = value;\n\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\n\t}\n\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._iSceneGraphRoot.contains(child);\n\t}\n\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.addChild(child);\n\t}\n\n\tpublic removeChild(child:DisplayObject)\n\t{\n\t\tthis._iSceneGraphRoot.removeChild(child);\n\t}\n\n\tpublic removeChildAt(index:number)\n\t{\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\n\t}\n\n\n\tpublic getChildAt(index:number):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\n\t}\n\n\tpublic get numChildren():number\n\t{\n\t\treturn this._iSceneGraphRoot.numChildren;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:CollectorBase;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tdocument.body.style.margin = \"0px\";\n\n\t\tthis._htmlElement = document.createElement(\"div\");\n\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\tdocument.body.appendChild(this._htmlElement);\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate onScenePartitionChanged(event:SceneEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\n\t}\n\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tthis._htmlElement.style.width = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tthis._htmlElement.style.height = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tthis._htmlElement.style.left = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tthis._htmlElement.style.top = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():CollectorBase\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass ControllerBase\n{\n\tpublic _pControllerDirty:boolean;\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject)\n\t\t\tthis._pTargetObject.invalidatePartition();\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val)\n\t\t\treturn;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = null;\n\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = this;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val)\n\t\t\treturn;\n\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pAutoUpdate)\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\telse\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic updateController()\n\t{\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\n\t\t\tthis._pControllerDirty = false;\n\t\t\tthis.pNotifyUpdate();\n\t\t}\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\tthis._pControllerDirty = true;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _billboardRect:Rectangle;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _parentColorTransform:ColorTransform;\n\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\n\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t * The Image2D object being referenced.\n\t */\n\tpublic image2D:Image2D; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get billboardRect():Rectangle\n\t{\n\t\treturn this._billboardRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\t}\n\n\t/**\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\tpublic pixelSnapping:string; //TODO\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\tpublic smoothing:boolean; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\t// outputs the concaneted color-transform\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\t// set this on the inheritet colorTransform\n\t\tthis.transform.colorTransform = value;\n\t\t// new calculate the concaneted transform\n\t\tthis._applyColorTransform();\n\n\t}\n\n\tpublic get parentColorTransform():ColorTransform\n\t{\n\t\treturn this._parentColorTransform;\n\t}\n\n\tpublic set parentColorTransform(value:ColorTransform)\n\t{\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\n\t\tthis._parentColorTransform = value;\n\t\tthis._applyColorTransform();\n\t}\n\n\tprivate _applyColorTransform()\n\t{\n\t\tthis._colorTransform=new ColorTransform();\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\n\t\t}\n\t\telse if (this.transform.colorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\n\t\t}\n\t\telse if (this._parentColorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\n\t\t}\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\n\n\t\tthis.material = material;\n\n\t\tthis._billboardWidth = material.width;\n\t\tthis._billboardHeight = material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\n\t\tthis._billboardWidth = material.width;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Billboard = new Billboard(this.material);\n\t\treturn clone;\n\t}\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onSizeChanged(event:MaterialEvent)\n\t{\n\t\tthis._billboardWidth = this._material.width;\n\t\tthis._billboardHeight = this._material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:number[] = new Array<number>(16);\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\n\t\tvar invLen:number;\n\t\tthis.viewProjection.copyRawDataTo(raw);\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterCamera(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterCamera(this);\n\t}\n}\n\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterDirectionalLight(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterDirectionalLight(this);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tprivate _diffuseMap:ImageCube;\n\tprivate _specularMap:ImageCube;\n\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._diffuseMap = diffuseMap;\n\t\tthis._specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get diffuseMap():ImageCube\n\t{\n\t\treturn this._diffuseMap;\n\t}\n\n\tpublic set diffuseMap(value:ImageCube)\n\t{\n\t\tthis._diffuseMap = value;\n\t}\n\n\tpublic get specularMap():ImageCube\n\t{\n\t\treturn this._specularMap;\n\t}\n\n\tpublic set specularMap(value:ImageCube)\n\t{\n\t\tthis._specularMap = value;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterLightProbe(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterLightProbe(this);\n\t}\n}\n\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._startPosition = null;\n\t\tthis._endPosition = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRenderableUpdate()\n\t{\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\n * of the geometry to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Mesh]\";\n\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _subMeshes:Array<ISubMesh>;\n\tprivate _geometry:Geometry;\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGeometry:boolean = true;\n\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._animator)\n\t\t\tthis._animator.removeOwner(this);\n\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (subMesh.material) {\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\n\t\t\t}\n\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tthis._animator.addOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Mesh.assetType;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\n\n\t\tthis._material = value;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iAddOwner(subMesh);\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation geometry.\n\t */\n\tpublic get shareAnimationGeometry():boolean\n\t{\n\t\treturn this._shareAnimationGeometry;\n\t}\n\n\tpublic set shareAnimationGeometry(value:boolean)\n\t{\n\t\tthis._shareAnimationGeometry = value;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._pColorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tsuper._pSetColorTransform(value);\n\t}\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._subMeshes = new Array<ISubMesh>();\n\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\n\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\n\t\tthis.geometry = geometry || new Geometry();\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\n\t\tthis._iMatrix3D.identity();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.material = null;\n\t\tthis.geometry = null;\n\t}\n\n\t/**\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\n\t * @return\n\t */\n\tpublic disposeWithAnimatorAndChildren()\n\t{\n\t\tthis.disposeWithChildren();\n\n\t\t if (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * geometry, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\n\t * </code>\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Mesh = new Mesh(null, null);\n\n        this._iCopyToMesh(clone);\n\n\t\treturn clone;\n\t}\n\n    public _iCopyToMesh(clone:Mesh):void\n    {\n        clone.geometry = this._geometry;\n        clone.material = this._material;\n        clone._iMatrix3D = this._iMatrix3D;\n        clone.pivot = this.pivot;\n        clone.partition = this.partition;\n        clone.boundsType = this.boundsType;\n\n\n        clone.name = this.name;\n        clone.castsShadows = this.castsShadows;\n        clone.shareAnimationGeometry = this.shareAnimationGeometry;\n        clone.mouseEnabled = this.mouseEnabled;\n        clone.mouseChildren = this.mouseChildren;\n        //this is of course no proper cloning\n        //maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\n        clone.extra = this.extra;\n\t\tclone._iMaskID = this._iMaskID;\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\n        var len:number = this._subMeshes.length;\n        for (var i:number = 0; i < len; ++i)\n            clone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n\n        len = this.numChildren;\n        for (i = 0; i < len; ++i)\n            clone.addChild(this.getChildAt(i).clone());\n\n        if (this._animator)\n            clone.animator = this._animator.clone();\n    }\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @returns {SubMeshBase}\n\t */\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\n\t{\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Float32Array;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\t\tvar tmp_maxZ:number, tmp_minZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\n\t\t\tif (this.numChildren) {\n\t\t\t\tmaxX = this._pBoxBounds.width + (minX = this._pBoxBounds.x);\n\t\t\t\tmaxY = this._pBoxBounds.height + (minY = this._pBoxBounds.y);\n\t\t\t\tmaxZ = this._pBoxBounds.depth + (minZ = this._pBoxBounds.z);\n\t\t\t\ttmp_maxZ = this._pBoxBounds.depth + (tmp_minZ = this._pBoxBounds.z);\n\t\t\t} else {\n\t\t\t\tminX = maxX = boundingPositions[i];\n\t\t\t\tminY = maxY = boundingPositions[i + 1];\n\t\t\t\tif(subGeom.isAsset(CurveSubGeometry)){\n\t\t\t\t\tminZ = maxZ = 0;\n\t\t\t\t\ttmp_minZ = tmp_maxZ = 0;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\ttmp_minZ = tmp_maxZ = boundingPositions[i + 2];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\t\t\t\tfor (i = 0; i < len; i+=3) {\n\t\t\t\t\tp = boundingPositions[i];\n\t\t\t\t\tif (p < minX)\n\t\t\t\t\t\tminX = p;\n\t\t\t\t\telse if (p > maxX)\n\t\t\t\t\t\tmaxX = p;\n\n\t\t\t\t\tp = boundingPositions[i + 1];\n\n\t\t\t\t\tif (p < minY)\n\t\t\t\t\t\tminY = p;\n\t\t\t\t\telse if (p > maxY)\n\t\t\t\t\t\tmaxY = p;\n\n\t\t\t\t\tp = boundingPositions[i + 2];\n\n\t\t\t\t\tif (p < tmp_minZ)\n\t\t\t\t\t\ttmp_minZ = p;\n\t\t\t\t\telse if (p > tmp_maxZ)\n\t\t\t\t\t\ttmp_maxZ = p;\n\t\t\t\t}\n\t\t\t\tif(!(subGeom.isAsset(CurveSubGeometry))){\n\t\t\t\t\tminZ = tmp_minZ;\n\t\t\t\t\tmaxZ = tmp_maxZ;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t}\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\t\tvar centerX:number = box.x + box.width/2;\n\t\tvar centerY:number = box.y + box.height/2;\n\t\tvar centerZ:number = box.z + box.depth/2;\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Float32Array;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\n\t\t\t\tfor (i = 0; i < len; i += 3) {\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._pSphereBounds.x = centerX;\n\t\tthis._pSphereBounds.y = centerY;\n\t\tthis._pSphereBounds.z = centerZ;\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * Called when a SubGeometry was added to the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryAdded(event:GeometryEvent)\n\t{\n\t\tthis.addSubMesh(event.subGeometry);\n\t}\n\n\t/**\n\t * Called when a SubGeometry was removed from the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\n\t{\n\t\tvar subMesh:ISubMesh;\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar i:number;\n\n\t\t// Important! This has to be done here, and not delayed until the\n\t\t// next render loop, since this may be caused by the geometry being\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry == subGeom) {\n\t\t\t\tsubMesh.dispose();\n\n\t\t\t\tthis._subMeshes.splice(i, 1);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t--len;\n\t\tfor (; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iIndex = i;\n\t}\n\n\t/**\n\t * Adds a SubMeshBase wrapping a SubGeometry.\n\t *\n\t * @param subGeometry\n\t */\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\n\t{\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\n\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\n\t\tvar len:number = this._subMeshes.length;\n\n\t\tsubMesh._iIndex = len;\n\n\t\tthis._subMeshes[len] = subMesh;\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\n\n\t\tvar subMesh:ISubMesh;\n\n\t\tvar len:number = this.subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this.subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\n\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\n\n\t\t\t\tif (!findClosest)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\n\t}\n\n\tpublic _iInvalidateRenderableGeometries()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\t// if this is a mask, directly return false\n\t\tif(this._iMaskID!==-1 && !masksFlag)return false;\n\n\t\t// if this is invisible, all children should be invisible too.\n\t\t// todo: is the above statement correct for awayjs visible-property ?\n\t\tif(this.visible==false)return false;\n\n\t\t// from this point out, we can not return false, without checking collision of childs.\n\t\t\n\t\tvar local:Point = this.globalToLocal(new Point(x,y));\n\n\t\tif(this.geometry) {\n\t\t\tif(this.getBox().contains(local.x, local.y, 0)){\n\t\t\t\tif (!shapeFlag)\n\t\t\t\t\treturn true;\n\n\t\t\t\tfor(var j:number = 0; j < this.geometry.subGeometries.length; j++) {\n\t\t\t\t\tif (this.geometry.subGeometries[j].hitTestPoint(local.x, local.y, 0)) {\n\n\t\t\t\t\t\t// if the mesh is masked, we need to check if 1 mask will collide\n\t\t\t\t\t\tvar all_masks:Array<DisplayObject> = this._iMasks;\n\t\t\t\t\t\tif (all_masks) {\n\t\t\t\t\t\t\tvar all_hir_masks:Array<DisplayObject> = this[\"hierarchicalMasks\"];\n\t\t\t\t\t\t\t//todo: check if there will be cases when no hirarchical masks have been collected and assigned yet.\n\t\t\t\t\t\t\tif (all_hir_masks){\n\t\t\t\t\t\t\t\tall_masks = all_hir_masks;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++) {\n\t\t\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\n\t\t\t\t\t\t\t\tif (mask_child.parent) {\n\t\t\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x, y, shapeFlag, true);\n\t\t\t\t\t\t\t\t\tif (childHit)return true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar hit:boolean = false;\n\t\thit = super.hitTestPoint(x, y, shapeFlag, masksFlag);\n\t\tif(hit)\treturn true;\n\n\t\treturn false;\n\t}\n}\n\nexport = Mesh;",
    "import Event = require(\"awayjs-core/lib/events/Event\");\nimport AssetEvent = require(\"awayjs-core/lib/events/AssetEvent\");\nimport ColorTransform = require(\"awayjs-core/lib/geom/ColorTransform\");\nimport IAsset = require(\"awayjs-core/lib/library/IAsset\");\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\nimport Mesh = require(\"awayjs-display/lib/entities/Mesh\");\nimport Billboard = require(\"awayjs-display/lib/entities/Billboard\");\n\nimport MouseEvent = require(\"awayjs-display/lib/events/MouseEvent\");\nimport SceneEvent = require(\"awayjs-display/lib/events/SceneEvent\");\n\nimport IMovieClipAdapter\t\t= require(\"awayjs-display/lib/adapters/IMovieClipAdapter\");\nimport Timeline = require(\"awayjs-display/lib/base/Timeline\");\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\nclass MovieClip extends DisplayObjectContainer\n{\n    public static assetType:string = \"[asset MovieClip]\";\n\n    private _timeline:Timeline;\n\n    private _isButton:boolean;\n    private _onMouseOver:(event:MouseEvent) => void;\n    private _onMouseOut:(event:MouseEvent) => void;\n    private _onMouseDown:(event:MouseEvent) => void;\n    private _onMouseUp:(event:MouseEvent) => void;\n\n    private _time:number;// the current time inside the animation\n    private _currentFrameIndex:number;// the current frame\n    private _constructedKeyFrameIndex:number;// the current index of the current active frame\n\n    private _fps:number;// we use ms internally, but have fps, so user can set time by frame\n    private _isPlaying:boolean;// false if paused or stopped\n    private _loop:boolean = true;\n\n    // not sure if needed\n    private _enterFrame:Event;\n    private _skipAdvance : boolean;\n    private _isInit : boolean;\n\n    private _potentialInstances:Array<DisplayObject>;\n   // private _framescripts_to_execute:Array<Function>;\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IMovieClipAdapter\n\t{\n\t\treturn <IMovieClipAdapter> this._adapter;\n\t}\n\n\tpublic set adapter(value:IMovieClipAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    constructor(timeline:Timeline = null)\n    {\n        super();\n        this._potentialInstances = [];\n        this._currentFrameIndex = -1;\n        this._constructedKeyFrameIndex = -1;\n        this._isInit=true;\n        this._isPlaying = true; // auto-play\n        this._isButton=false;\n\n        this._fps = 30;\n        this._time = 0;\n        this._enterFrame = new Event(Event.ENTER_FRAME);\n        this.inheritColorTransform = true;\n\n        this._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\n        this._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\n        this._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\n        this._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\n\n        this._timeline = timeline || new Timeline();\n    }\n\n    public get isInit():boolean\n    {\n        return this._isInit;\n    }\n    public set isInit(value:boolean)\n    {\n        this._isInit = value;\n    }\n\n\n    public get timeline():Timeline\n    {\n        return this._timeline;\n    }\n    public set timeline(value:Timeline)\n    {\n        this._timeline = value;\n    }\n    public get loop()\n    {\n        return this._loop;\n    }\n\n    public set loop(value:boolean)\n    {\n        this._loop = value;\n    }\n\n    public get numFrames() : number\n    {\n        return this._timeline.numFrames;\n    }\n\n    public jumpToLabel(label:string) : void\n    {\n        // the timeline.jumpTolabel will set currentFrameIndex\n        this._timeline.jumpToLabel(this, label);\n    }\n\n    public get currentFrameIndex() : number\n    {\n        return this._currentFrameIndex;\n    }\n    public get constructedKeyFrameIndex() : number\n    {\n        return this._constructedKeyFrameIndex;\n    }\n\n    public set constructedKeyFrameIndex(value : number)\n    {\n        this._constructedKeyFrameIndex = value;\n    }\n\n    public exit_frame():void\n    {\n\n        this._skipAdvance = false;\n        var i:number=this.numChildren;\n        while (i--){\n            var child:DisplayObject=this.getChildAt(i);\n            if(child.isAsset(MovieClip)){\n                (<MovieClip>child).exit_frame();\n            }\n        }\n    }\n    public reset():void\n    {\n        // time only is relevant for the root mc, as it is the only one that executes the update function\n        this._time = 0;\n\n        if(this.adapter)this.adapter.freeFromScript();\n\n        this._isPlaying = true;\n\n        this._currentFrameIndex = -1;\n        this._constructedKeyFrameIndex = -1;\n        var i:number=this.numChildren;\n        while (i--){\n            var child:DisplayObject=this.getChildAt(i);\n            if(child.adapter)child.adapter.freeFromScript();\n            this.adapter.unregisterScriptObject(child);\n            this.removeChildAt(i);\n        }\n\n        this._skipAdvance = true;\n        if (this._timeline.numFrames) {\n            this._currentFrameIndex = 0;\n            this._timeline.constructNextFrame(this, true, true);\n        }\n\n    }\n\n    /*\n     * Setting the currentFrameIndex without moving the playhead for this movieclip to the new position\n     */\n    public set_currentFrameIndex(value : number) {\n        this._skipAdvance = true;\n        this._currentFrameIndex = value;\n    }\n    /*\n    * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\n     */\n    public set currentFrameIndex(value : number)\n    {\n        if(this._timeline.numFrames) {\n            value = Math.floor(value);\n            if (value < 0)\n                value = 0;\n            else if (value >= this._timeline.numFrames)\n                value = this._timeline.numFrames - 1;\n\n            // on changing currentframe we do not need to set skipadvance. the advanceframe should already be happened...\n            this._skipAdvance = true;\n            //this._time = 0;\n\n            this._timeline.gotoFrame(this, value);\n\n            this._currentFrameIndex = value;\n        }\n    }\n\n    public addButtonListeners()\n    {\n        this._isButton = true;\n\n        this.stop();\n\n        this.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n    }\n\n    public removeButtonListeners()\n    {\n        this.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n\n    }\n\n    public addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n    {\n        //this should be implemented for all display objects\n        child.inheritColorTransform = true;\n        child.reset_to_init_state();\n\t\tsuper.addChildAtDepth(child, depth, replace);\n        if(child.isAsset(MovieClip))\n            (<MovieClip>child).reset();\n        return child;\n    }\n\n    public get fps():number\n    {\n        return this._fps;\n    }\n\n    public set fps(newFps:number)\n    {\n        this._fps = newFps;\n    }\n\n    public get assetType():string\n    {\n        return MovieClip.assetType;\n    }\n\n    /**\n     * Starts playback of animation from current position\n     */\n    public play()\n    {\n        this._isPlaying = true;\n    }\n\n    /**\n     * should be called right before the call to away3d-render.\n     */\n    public update(timeDelta:number)\n    {\n        //this.logHierarchy();\n        // TODO: Implement proper elastic racetrack logic\n        var frameMarker:number = Math.floor(1000/this._fps);\n\n        // right now, just advance frame once time marker has been reached (only allow for one frame advance per-update)\n        this._time += Math.min(timeDelta, frameMarker);\n\n        if (this._time >= frameMarker) {\n            this._time = 0;\n            this.advanceFrame();\n            // after we advanced the scenegraph, we might have some script that needs executing\n            FrameScriptManager.execute_queue();\n\n            // now we want to execute the onEnter\n            this.dispatchEvent(this._enterFrame);\n            // after we executed the onEnter, we might have some script that needs executing\n            FrameScriptManager.execute_queue();\n            //console.log(\"update \"+this._currentFrameIndex);\n            //console.log(\"update key \"+this._constructedKeyFrameIndex);\n            this.exit_frame();\n        }\n    }\n\n    public getPotentialChildInstance(id:number) : DisplayObject\n    {\n        if (!this._potentialInstances[id]) {\n            this._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\n        }\n\n        return this._potentialInstances[id];\n    }\n\n    public activateChild(id:number)\n    {\n        this.addChild(this.getPotentialChildInstance(id));\n    }\n\n    public deactivateChild(id:number)\n    {\n        this.removeChild(this._potentialInstances[id]);\n    }\n\n    /**\n     * Stop playback of animation and hold current position\n     */\n    public stop()\n    {\n        this._isPlaying = false;\n    }\n\n    public clone(newInstance:MovieClip = null) : DisplayObject\n    {\n        newInstance = <MovieClip> super.clone(newInstance || new MovieClip(this._timeline));\n\n        newInstance._fps = this._fps;\n        newInstance._loop = this._loop;\n\n        return newInstance;\n    }\n\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tsuper.iSetParent(value);\n\t}\n\n    public advanceFrame(skipChildren:boolean = false)\n    {\n        if(this._timeline.numFrames) {\n            var i;\n            var oldFrameIndex = this._currentFrameIndex;\n            var advance = (this._isPlaying && !this._skipAdvance) || oldFrameIndex == -1;\n            if (advance && oldFrameIndex == this._timeline.numFrames - 1 && !this._loop) {\n                advance = false;\n            }\n            if (advance && oldFrameIndex == 0 && this._timeline.numFrames == 1) {\n                //console.log(\"one frame clip\");\n                this._currentFrameIndex = 0;\n                advance = false;\n            }\n            if (advance) {\n                //console.log(\"advance\");\n                ++this._currentFrameIndex;\n                if (this._currentFrameIndex == this._timeline.numFrames) {\n                    // looping - jump to first frame.\n                    this.currentFrameIndex=0;\n                }\n                else if (oldFrameIndex != this._currentFrameIndex){\n                    // not looping - construct next frame\n                    this._timeline.constructNextFrame(this);\n                }\n            }\n            if (!skipChildren)\n                this.advanceChildren();\n\n        }\n        this._skipAdvance = false;\n    }\n\n    private advanceChildren()\n    {\n        var len = this.numChildren;\n        for (var i = 0; i <  len; ++i) {\n            var child = this.getChildAt(i);\n            if (child instanceof MovieClip)\n                (<MovieClip>child).advanceFrame();\n        }\n    }\n\n\n\n\n// DEBUG CODE:\n    logHierarchy(depth: number = 0):void\n    {\n        this.printHierarchyName(depth, this);\n\n        var len = this.numChildren;\n        for (var i = 0; i < len; i++) {\n            var child = this.getChildAt(i);\n\n            if (child instanceof MovieClip)\n                (<MovieClip>child).logHierarchy(depth + 1);\n            else\n                this.printHierarchyName(depth + 1, child);\n        }\n    }\n\n    printHierarchyName(depth:number, target:DisplayObject)\n    {\n        var str = \"\";\n        for (var i = 0; i < depth; ++i)\n            str += \"--\";\n\n        str += \" \" + target.name + \" = \" + target._iMaskID;\n        console.log(str);\n    }\n\n    executePostConstructCommands():boolean\n    {\n        return true;\n    }\n}\nexport = MovieClip;\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:number[] = new Array<number>(16);\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterPointLight(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterPointLight(this);\n\t}\n}\n\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Shape = new Shape();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = name;\n\t\tclone._iMaskID = this._iMaskID;\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\t\tclone._graphics = this._graphics;\n\t\treturn clone;\n\t}\n}\n\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\n{\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _cubeMap:SingleCubeTexture;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _owners:Array<IRenderableOwner>;\n\tprivate _mipmap:boolean = false;\n\tprivate _smooth:boolean = true;\n\n\tprivate _animator:IAnimator;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pIinvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get cubeMap():SingleCubeTexture\n\t{\n\t\treturn this._cubeMap;\n\t}\n\n\tpublic set cubeMap(value:SingleCubeTexture)\n\t{\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\n\t\tif (value && this._cubeMap)\n\t\t\tthis._pInvalidateRender();\n\n\t\tthis._cubeMap = value;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(cubeMap:SingleCubeTexture = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\t\tthis._owners = new Array<IRenderableOwner>(this);\n\n\t\tthis.cubeMap = cubeMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//skybox do not get collected in the standard entity list\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterSkybox(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterSkybox(this);\n\t}\n}\n\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Mesh\n{\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\t\tthis.reConstruct();\n\t}\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\t\tthis._textFormat = value;\n\t\tthis.reConstruct();\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic textColor:number /*int*/;\n\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\tpublic set textWidth(value:number)\n\t{\n\t\tthis._textWidth = value;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\tpublic set textHeight(value:number)\n\t{\n\t\tthis._textHeight = value;\n\t}\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(new Geometry());\n\t\tthis.type = TextFieldType.STATIC;\n\t}\n\n\t/**\n\t * Reconstructs the Geometry for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\n\t\tif(this._textFormat==null)\n\t\t\treturn;\n\n\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\n\n\t\tif(this._text==\"\")\n\t\t\treturn;\n\n\t\tvar vertices:Array<number> = new Array<number>();\n\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar y_offset:number=0;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\r\");\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\n\t\t\tvar line_width:number=0;\n\t\t\tvar font_chars:Array<TesselatedFontChar> = [];\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\n\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(textlines[tl].charCodeAt(i).toString());\n\t\t\t\tif (this_char != null) {\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tline_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\tline_width+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\tline_width+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t}\n\t\t\t\tfont_chars.push(this_char);\n\t\t\t}\n\t\t\tvar x_offset:number=0;\n\t\t\tif(this._textFormat.align==\"center\"){\n\t\t\t\tx_offset=(this._textWidth-line_width)/2;\n\t\t\t}\n\t\t\telse if(this._textFormat.align==\"right\"){\n\t\t\t\tx_offset=(this._textWidth-line_width);\n\t\t\t}\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\n\t\t\t//console.log(\"this._width=\"+this._width);\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\n\t\t\t\tvar this_char:TesselatedFontChar = font_chars[i];\n\t\t\t\tif (this_char != null) {\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\n\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\n\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\n\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t}\n\t\t\t}\n\t\t\ty_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t}\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(vertices);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\n\t\tthis.subMeshes[0].material=this._textFormat.material;\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n\n    public clone() : DisplayObject\n    {\n        var clone = new TextField();\n        this._iCopyToTextField(clone);\n        return clone;\n    }\n\n    public _iCopyToTextField(clone:TextField):void\n    {\n\t\tclone.geometry = new Geometry();\n\t\t//clone.material = this._material;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.pivot = this.pivot;\n\t\tclone.partition = this.partition;\n\t\tclone.boundsType = this.boundsType;\n\n\n\t\tclone.name = this.name;\n\t\tclone.castsShadows = this.castsShadows;\n\t\tclone.shareAnimationGeometry = this.shareAnimationGeometry;\n\t\tclone.mouseEnabled = this.mouseEnabled;\n\t\tclone.mouseChildren = this.mouseChildren;\n\t\t//this is of course no proper cloning\n\t\t//maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\n\t\tclone.extra = this.extra;\n\t\tclone._iMaskID = this._iMaskID;\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\n\t\t//var len:number = this._subMeshes.length;\n\t\t//for (var i:number = 0; i < len; ++i)\n\t\t//\tclone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n\n\t\tvar len = this.numChildren;\n\t\tvar i;\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tclone.addChild(this.getChildAt(i).clone());\n\n\t\t//if (this._animator)\n\t\t//\tclone.animator = this._animator.clone();\n\t\tclone.textWidth=this.textWidth;\n\t\tclone.textHeight=this.textHeight;\n       \tclone.textFormat = this._textFormat;\n        //clone.textColor = clone.textColor;\n       \tclone.text = this._text;\n    }\n}\n\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass CastError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends Event\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n}\n\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass DisplayObjectEvent extends Event\n{\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\n\tpublic static SKEW_CHANGED:string = \"skewChanged\";\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\n    public static GLOBAL_COLOR_TRANSFORM_CHANGED:string = \"globalColorTransformChanged\";\n\n\tpublic object:DisplayObject;\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis.object = object;\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GeometryEvent\n* @see away3d.core.base.Geometry\n*/\nclass GeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\n\n\t/**\n\t *\n\t */\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\n\n\tprivate _subGeometry:SubGeometryBase;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\n\t */\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\n\t */\n\tpublic get subGeometry():SubGeometryBase\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\n\t}\n}\n\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LightEvent extends Event\n{\n\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():Event\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass MaterialEvent extends Event\n{\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableOwnerEvent\n * @see away.core.base.Geometry\n */\nclass RenderableOwnerEvent extends Event\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\n\n\tprivate _renderOwner:IRenderOwner;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderOwner:IRenderOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderOwner = renderOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderOwner():IRenderOwner\n\t{\n\t\treturn this._renderOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\n\t}\n}\n\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass RendererEvent extends Event\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ResizeEvent extends Event\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n}\n\nexport = ResizeEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass SceneEvent extends Event\n{\n\t/**\n\t *\n\t */\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic displayObject:DisplayObject;\n\n\tconstructor(type:string, displayObject:DisplayObject)\n\t{\n\t\tsuper(type);\n\n\t\tthis.displayObject = displayObject;\n\t}\n}\n\nexport = SceneEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.SubGeometryEvent\n * @see away.core.base.Geometry\n */\nclass SubGeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a SubGeometry's index data has been updated.\n\t */\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's index data has been disposed.\n\t */\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\n\t\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been updated.\n\t */\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\n\t */\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\n\n\t\n\tprivate _attributesView:AttributesView;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param attributesView An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, attributesView:AttributesView)\n\t{\n\t\tsuper(type);\n\n\t\tthis._attributesView = attributesView;\n\t}\n\n\t/**\n\t * The attributes view of the vertex data.\n\t */\n\tpublic get attributesView():AttributesView\n\t{\n\t\treturn this._attributesView;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\n\t}\n}\n\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nclass TouchEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:TouchEvent;\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\t\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\t\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\t\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\t\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\t\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\t\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\t\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\t\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\t\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\t\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\n\tpublic touchPointID:number;\n\t\n\t/**\n\t * Create a new TouchEvent object.\n\t * @param type The type of the TouchEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\t\t\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\t\n\t/**\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\t\t\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\t\t\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\t\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\t\t\n\t\tresult._iParentEvent = this;\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\t\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\n\tprivate static _defaultTextureMaterial:BasicMaterial;\n\tprivate static _defaultColorMaterial:BasicMaterial;\n\tprivate static _defaultTexture:Single2DTexture;\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\n\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\n\t\t}\n\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\n\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\n\t}\n\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tprivate static createDefaultCubeTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\n\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t}\n\n\tprivate static createCheckeredBitmapImageCube()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\n\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\n\t}\n\n\tprivate static createCheckeredBitmapImage2D()\n\t{\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\tfor (j = 0; j < 8; j++) {\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\n\t}\n\n\tprivate static createDefaultTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\n\t}\n\n\tprivate static createDefaultCubeTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\n\t}\n\n\tprivate static createDefaultColorMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\n\t}\n}\n\nexport = DefaultMaterialManager;",
    "import MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\n\nclass FrameScriptManager\n{\n\tprivate static _queued_mcs:Array<MovieClip> = [];\n\tprivate static _queued_scripts:Array<Function> = [];\n\n\tprivate static _queued_mcs_pass2:Array<MovieClip> = [];\n\tprivate static _queued_scripts_pass2:Array<Function> = [];\n\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\n\t{\n\t\t// whenever we queue scripts of new objects, we first inject the lists of pass2\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2=[];\n\t\tthis._queued_scripts_pass2=[];\n\t\tthis._queued_mcs.push(mc);\n\t\tthis._queued_scripts.push(script);\n\t}\n\n\tpublic static add_script_to_queue_pass2(mc:MovieClip, script:Function):void\n\t{\n\t\tthis._queued_mcs_pass2.push(mc);\n\t\tthis._queued_scripts_pass2.push(script);\n\t}\n\n\tpublic static execute_queue():void\n\t{\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2=[];\n\t\tthis._queued_scripts_pass2=[];\n\n\t\tvar mc:MovieClip;\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\n\t\t\t// during the loop we might add more scripts to the queue\n\t\t\tmc=this._queued_mcs[i];\n\t\t\tif((mc.parent!=null)||(mc.name==\"Scene 1\")) {\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\n\t\t\t\ttry {\n\t\t\t\t\tthis._queued_scripts[i].call(caller);\n\t\t\t\t}\n\t\t\t\tcatch (err) {\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\n\t\t\t\t\tconsole.log(err.message);\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// all scripts executed. clear all\n\t\tthis._queued_mcs=[];\n\t\tthis._queued_scripts=[];\n\t}\n}\nexport = FrameScriptManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\tif (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\n\t\t\twhile (dispatcher) {\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\n\t\t\t\t\tdispatcher.dispatchEvent(event);\n\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t}\n\t\t}\n\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.push(view);\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = sourceEvent.clientX;\n\t\t\tevent.screenY = sourceEvent.clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event)\n\t{\n\t\tif (this._iUpdateDirty)\n\t\t\treturn;\n\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\n\nclass TouchManager\n{\n\tprivate static _instance:TouchManager;\n\n\tprivate _updateDirty:boolean = true;\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _numTouchPoints:number;\n\tprivate _touchPoint:TouchPoint;\n\tprivate _iCollidingObject:PickingCollisionVO;\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tpublic static _iCollidingObjectFromTouchId:Object;\n\tpublic static _previousCollidingObjectFromTouchId:Object;\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\n\t\n\tprivate _touchPoints:Array<TouchPoint>;\n\tprivate _touchPointFromId:Object;\n\t\n\tprivate _touchMoveEvent:TouchEvent;\n\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\n\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\n\t\n\tconstructor()\n\t{\n\t\tthis._touchPoints = new Array<TouchPoint>();\n\t\tthis._touchPointFromId = new Object();\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\n\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\n\t}\n\n\tpublic static getInstance():TouchManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new TouchManager());\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Interface.\n\t// ---------------------------------------------------------------------\n\t\n\tpublic updateCollider(forceTouchMove:boolean)\n\t{\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\n\t\t//\t}\n\t\t//}\n\t}\n\t\n\tpublic fireTouchEvents(forceTouchMove:boolean)\n\t{\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[i];\n\t\t\t// If colliding object has changed, queue over/out events.\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\t\tif (this._previousCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n\t\t\t\tif (this._iCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t\t}\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\n\t\t\tif (forceTouchMove && this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t}\n\n\t\tvar event:AwayTouchEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\t\t\t\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._updateDirty = false;\n\t\t\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t}\n\t}\n\t\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\n\t{\n\t\t// 2D properties.\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\tevent.altKey = sourceEvent.altKey;\n\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\tevent.screenX = touch.x;\n\t\tevent.screenY = touch.y;\n\t\tevent.touchPointID = touch.id;\n\t\t\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t\t// SubGeometryIndex.\n\t\t\tevent.subGeometryIndex = collider.index;\n\t\t\t\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\t\t\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Event handlers.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate onTouchBegin(event:TouchEvent)\n\t{\n\t\t\n\t\tvar touch:TouchPoint = new TouchPoint();\n\t\t//touch.id = event.touchPointID;\n\t\t//touch.x = event.stageX;\n\t\t//touch.y = event.stageY;\n\t\tthis._numTouchPoints++;\n\t\tthis._touchPoints.push(touch);\n\t\tthis._touchPointFromId[ touch.id ] = touch;\n\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\n\n\t\tthis._updateDirty = true;\n\t}\n\t\n\tprivate onTouchMove(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t////touch.x = event.stageX;\n\t\t////touch.y = event.stageY;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n\t\n\tprivate onTouchEnd(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._touchPointFromId[ touch.id ] = null;\n\t\t//this._numTouchPoints--;\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n}\n\n\nexport = TouchManager;\n\nclass TouchPoint\n{\n\tpublic id:number;\n\tpublic x:number;\n\tpublic y:number;\n}\n\n\n/**\n * Classes for Touch Interfaces\n */\ninterface TouchEvent extends UIEvent {\n\ttouches: TouchList;\n\ttargetTouches: TouchList;\n\tchangedTouches: TouchList;\n\taltKey: boolean;\n\tmetaKey: boolean;\n\tctrlKey: boolean;\n\tshiftKey: boolean;\n\trotation: number;\n\tscale: number;\n\n\t// for iOS\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\n\n\t// for Android\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\n}\n\ndeclare var TouchEvent: {\n\tprototype: TouchEvent;\n\tnew (): TouchEvent;\n}\n\ninterface TouchList {\n\tlength: number;\n\t[index: number]: Touch;\n\titem: (index: number) => Touch;\n}\n\ninterface Touch {\n\tidentifier: number;\n\ttarget: EventTarget;\n\tscreenX: number;\n\tscreenY: number;\n\tclientX: number;\n\tclientY: number;\n\tpageX: number;\n\tpageY: number;\n}\n\ninterface Window {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface Document {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface HTMLElement {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ndeclare var ontouchstart: (ev: TouchEvent) => any;\ndeclare var ontouchmove: (ev: TouchEvent) => any;\ndeclare var ontouchend: (ev: TouchEvent) => any;\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\n\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\n\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase\n{\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\n\n    private _preserveAlpha:boolean = false;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BasicMaterial.assetType;\n\t}\n\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tif (textureColor instanceof Image2D)\n\t\t\ttextureColor = new Single2DTexture(textureColor);\n\n\t\tif (textureColor instanceof TextureBase) {\n\t\t\tthis.texture = <TextureBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n        this._preserveAlpha = value;\n        this._pInvalidateRender();\n    }\n}\n\nexport = BasicMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends AssetBase implements IRenderOwner\n{\n\tprivate _colorTransform:ColorTransform;\n\tprivate _pUseColorTransform:boolean = false;\n\tprivate _frameRect:Rectangle;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\t\n\tprivate _sizeChanged:MaterialEvent;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\n\t/**\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\n\t *\n\t * @private\n\t */\n\tpublic _iMaterialId:number = 0;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderableOwner>;\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _mipmap:boolean = true;\n\tprivate _smooth:boolean = true;\n\tprivate _repeat:boolean = false;\n\tprivate _color:number = 0xFFFFFF;\n\tpublic _pTexture:TextureBase;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tpublic _pHeight:number = 1;\n\tpublic _pWidth:number = 1;\n\n\tprivate _onLightChangeDelegate:(event:Event) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis._owners = new Array<IRenderableOwner>();\n\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic get frameRect():Rectangle\n\t{\n\t\treturn this._frameRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():TextureBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:TextureBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tthis._pInvalidatePasses();\n\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\n\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\n\t\t} else {\n\t\t\tthis._frameRect = null;\n\t\t\tthis._pHeight = 1;\n\t\t\tthis._pWidth = 1;\n\t\t}\n\n\n\t\tthis._pNotifySizeChanged();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get useColorTransform():boolean\n\t{\n\t\treturn this._pUseColorTransform;\n\t}\n\n\tpublic set useColorTransform(value:boolean)\n\t{\n\t\tif (this._pUseColorTransform == value)\n\t\t\treturn;\n\t\tthis._pUseColorTransform = value;\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderableOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderableOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * Removes an IRenderableOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pInvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateAnimation();\n\t}\n\t\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pNotifySizeChanged()\n\t{\n\t\tif (!this._sizeChanged)\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\n\n\t\tthis.dispatchEvent(this._sizeChanged);\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(renderable:IRenderable)\n\t{\n\t\tthis.updateProbeWeights(renderable);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(renderable:IRenderable)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:Function;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _changeDispatcher:EventDispatcher;\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis._changeDispatcher = new EventDispatcher(this);\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.addEventListener(type, listener);\n\t}\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\n\t}\n\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\treturn this._changeDispatcher.dispatchEvent(event);\n\t}\n\n\tpublic hasEventListener(type:string):boolean\n\t{\n\t\treturn this._changeDispatcher.hasEventListener(type);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():SingleCubeTexture\n\t{\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tsuper.iSetDepthMap(depthMap);\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = depthMap.width;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic pCreateDepthTexture():Single2DTexture\n\t{\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass ShadowMapperBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tpublic _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tpublic _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase)\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\tpublic static id:string = \"cameraNode\";\n\n\tconstructor(pool:EntityNodePool, camera:Camera, partition:Partition)\n\t{\n\t\tsuper(pool, camera, partition);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\tpublic static id:string = \"directionalLightNode\";\n\n\tprivate _directionalLight:DirectionalLight;\n\n\t/**\n\t *\n\t * @param directionalLight\n\t */\n\tconstructor(pool:EntityNodePool, directionalLight:DirectionalLight, partition:Partition)\n\t{\n\t\tsuper(pool, directionalLight, partition);\n\n\t\tthis._directionalLight = directionalLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends NodeBase\n{\n\tpublic static id:string = \"entityNode\";\n\n\tpublic _sceneGraphDepths:Array<number> = new Array<number>();\n\tprivate _pool:EntityNodePool;\n\tpublic _entity:DisplayObject;\n\tprivate _partition:Partition;\n\tpublic _bounds:BoundingVolumeBase;\n\tpublic _iUpdateQueueNext:EntityNode;\n\n\tconstructor(pool:EntityNodePool, entity:DisplayObject, partition:Partition)\n\t{\n\t\tsuper();\n\t\tthis._pool = pool;\n\t\tthis._entity = entity;\n\t\tthis._partition = partition;\n\t\tthis._iNumEntities = 1;\n\n\t\tthis.updateBounds();\n\n\t\tthis.debugVisible = this._entity.debugVisible;\n\t}\n\n\tpublic get entity():DisplayObject\n\t{\n\t\treturn this._entity;\n\t}\n\n\tpublic removeFromParent():void\n\t{\n\t\tif (this._iParent)\n\t\t\tthis._iParent.iRemoveNode(this);\n\n\t\tthis._iParent = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this.entity.castsShadows;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this)) {\n\t\t\ttraverser.applyEntity(<IEntity> this._entity);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\treturn this._bounds.boundsPrimitive;\n\t}\n\n\tpublic invalidatePartition()\n\t{\n\t\tthis._bounds.invalidate();\n\n\t\tthis._partition.iMarkForUpdate(this);\n\t}\n\n\tpublic updateBounds()\n\t{\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis.updateDebugEntity();\n\t}\n}\n\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\tpublic static id:string = \"lightProbeNode\";\n\n\tprivate _lightProbe:LightProbe;\n\n\t/**\n\t *\n\t * @param lightProbe\n\t */\n\tconstructor(pool:EntityNodePool, lightProbe:LightProbe, partition:Partition)\n\t{\n\t\tsuper(pool, lightProbe, partition);\n\n\t\tthis._lightProbe = lightProbe;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase\n{\n\tprivate _debugChildrenVisible:boolean;\n\tprivate _explicitDebugVisible:boolean;\n\tpublic _pImplicitDebugVisible:boolean;\n\tpublic _iParent:NodeBase;\n\tpublic _pChildNodes:Array<NodeBase>;\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iNumEntities:number = 0;\n\tpublic _iCollectionMark:number;// = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._explicitDebugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (this._explicitDebugVisible == value)\n\t\t\treturn;\n\n\t\tthis._explicitDebugVisible = value;\n\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\n\n\t}\n\n\tpublic get debugChildrenVisible():boolean\n\t{\n\t\treturn this._debugChildrenVisible;\n\t}\n\n\tpublic set debugChildrenVisible(value:boolean)\n\t{\n\t\tif (this._debugChildrenVisible == value)\n\t\t\treturn;\n\n\t\tthis._debugChildrenVisible = value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get parent():NodeBase\n\t{\n\t\treturn this._iParent;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic get _pNumEntities():number\n\t{\n\t\treturn this._iNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pChildNodes = new Array<NodeBase>();\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\n\t{\n\t\treturn this;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tvar i:number = 0;\n\n\t\t\twhile (i < this._pNumChildNodes)\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic applyDebugEntity(traverser:CollectorBase)\n\t{\n\t\tif (this._pDebugEntity == null)\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\n\t\ttraverser.applyEntity(this._pDebugEntity);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:NodeBase)\n\t{\n\t\tnode._iParent = this;\n\t\tthis._iNumEntities += node._pNumEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._iNumEntities += numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:NodeBase)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tnode._iUpdateImplicitDebugVisible(false);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._pNumEntities -= numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\n\t{\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\n\t\t\treturn;\n\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t} else {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = null;\n\t\t}\n\t\t\n\t}\n\n\tpublic updateDebugEntity()\n\t{\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t}\n\t}\n\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = NodeBase;",
    "/**\n * @class away.partition.NullNode\n */\nclass NullNode\n{\n\tconstructor()\n\t{\n\t}\n}\n\nexport = NullNode;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.partition.Partition\n */\nclass Partition\n{\n\tprivate _cameraNodePool:EntityNodePool;\n\tprivate _directionalLightNodePool:EntityNodePool;\n\tprivate _entityNodePool:EntityNodePool;\n\tprivate _lightProbeNodePool:EntityNodePool;\n\tprivate _pointLightNodePool:EntityNodePool;\n\tprivate _skyboxNodePool:EntityNodePool;\n\n\tpublic _rootNode:NodeBase;\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:EntityNode;\n\n\tconstructor(rootNode:NodeBase)\n\t{\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\n\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\n\t}\n\n\tpublic get rootNode():NodeBase\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tif (this._updatesMade) {\n\t\t\tvar t:EntityNode = this._updateQueue;\n\t\t\twhile (t) {\n\t\t\t\t//required for controllers with autoUpdate set to true and queued events\n\t\t\t\tt.entity._iInternalUpdate();\n\t\t\t\tt = t._iUpdateQueueNext;\n\t\t\t}\n\t\t\tthis.updateEntities();\n\t\t}\n\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:EntityNode)\n\t{\n\t\tvar t:EntityNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:EntityNode)\n\t{\n\t\tvar t:EntityNode;\n\n\t\tnode.removeFromParent();\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:EntityNode = this._updateQueue;\n\t\tvar targetNode:NodeBase;\n\t\tvar t:EntityNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tnode.removeFromParent();\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t} while ((node = t) != null);\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterCamera(camera:Camera)\n\t{\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\n\t{\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(entity:IEntity)\n\t{\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\n\t{\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPointLight(pointLight:PointLight)\n\t{\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterSkybox(skybox:Skybox)\n\t{\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterCamera(camera:Camera)\n\t{\n\t\tthis.iRemoveEntity(this._cameraNodePool.disposeItem(camera));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\n\t{\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.disposeItem(directionalLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(entity:IEntity)\n\t{\n\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(entity));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\n\t{\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.disposeItem(lightProbe));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\n\t{\n\t\tthis.iRemoveEntity(this._pointLightNodePool.disposeItem(pointLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterSkybox(skybox:Skybox)\n\t{\n\t\tthis.iRemoveEntity(this._skyboxNodePool.disposeItem(skybox));\n\t}\n}\n\nexport = Partition;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\tpublic static id:string = \"pointLightNode\";\n\n\tprivate _pointLight:PointLight;\n\n\t/**\n\t *\n\t * @param pointLight\n\t */\n\tconstructor(pool:EntityNodePool, pointLight:PointLight, partition:Partition)\n\t{\n\t\tsuper(pool, pointLight, partition);\n\n\t\tthis._pointLight = pointLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._pointLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import CollectorBase = require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\nimport IEntity = require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport NodeBase = require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode = require(\"awayjs-display/lib/partition/EntityNode\");\nimport SceneGraphNodePool = require(\"awayjs-display/lib/pool/SceneGraphNodePool\");\n\n\n/**\n * Maintains scenegraph heirarchy when collecting nodes\n */\nclass SceneGraphNode extends NodeBase\n{\n    private _container : DisplayObjectContainer;\n    private _pool : SceneGraphNodePool;\n    private _partition:Partition;\n\n    constructor(pool:SceneGraphNodePool, container:DisplayObjectContainer, partition:Partition)\n    {\n        super();\n        this._pool = pool;\n        this._container = container;\n        this._partition = partition;\n    }\n\n\t//\n    ///**\n    // *\n    // * @param entity\n    // * @returns {away.partition.NodeBase}\n    // */\n    //public findPartitionForEntity(entity:IEntity):NodeBase\n    //{\n    //    var sceneGraphNode:SceneGraphNode = this._pool.getItem(entity.parent);\n    //    if (sceneGraphNode != this)\n    //        this.findNodeForContainer();\n    //\n    //\n    //        return sceneGraphNode;\n    //    }\n    //    return this;\n    //}\n\t//\n    //public iAddNode(node:NodeBase)\n    //{\n    //    super.iAddNode(node);\n\t//\n    //    //recalc depth array\n    //    var entityNode = <EntityNode>(node);\n    //    entityNode._sceneGraphDepths.length = 0;\n\t//\n    //    var parent:DisplayObjectContainer;\n    //    var child:DisplayObject = entityNode.entity;\n    //    while ((parent = child.parent)) {\n    //        entityNode._sceneGraphDepths.push(parent.getChildDepth(child));\n    //        child = parent;\n    //    }\n    //}\n}\nexport = SceneGraphNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\tpublic static id:string = \"skyboxNode\";\n\n\tprivate _skyBox:Skybox;\n\n\t/**\n\t * Creates a new SkyboxNode object.\n\t * @param skyBox The Skybox to be contained in the node.\n\t */\n\tconstructor(pool:EntityNodePool, skyBox:Skybox, partition:Partition)\n\t{\n\t\tsuper(pool, skyBox, partition);\n\n\t\tthis._skyBox = skyBox;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applySkybox(this._skyBox);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._skyBox._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\n\t{\n\t\tpickingCollisionVO.renderableOwner = null;\n\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t//\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\n\t\t//\n\t\t//\treturn true;\n\t\t//}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\ti0 = indices[index]*posDim;\n\t\t\ti1 = indices[index + 1]*posDim;\n\t\t\ti2 = indices[index + 2]*posDim;\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positions[i0];\n\t\t\tp0y = positions[i0 + 1];\n\t\t\tp0z = positions[i0 + 2];\n\t\t\tp1x = positions[i1];\n\t\t\tp1y = positions[i1 + 1];\n\t\t\tp1z = positions[i1 + 2];\n\t\t\tp2x = positions[i2];\n\t\t\tp2y = positions[i2 + 1];\n\t\t\tp2z = positions[i2 + 2];\n\n\t\t\t// evaluate sides and triangle normal\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts0y = p1y - p0y;\n\t\t\ts0z = p1z - p0z;\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\t\t\ts1y = p2y - p0y;\n\t\t\ts1z = p2z - p0z;\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\tnx *= nl;\n\t\t\tny *= nl;\n\t\t\tnz *= nl;\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\n\t\t\t\t\tshortestCollisionDistance = t;\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\t\tpickingCollisionVO.index = index;\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n\t\t//this will only work while all points lie on the x/y plane\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n\n\t\tvar result:Vector3D = new Vector3D();\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n\t\trayDirection.scaleBy(t);\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\n\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\n\t\tvar collisionCurveIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\n\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\n\t\t{\n\t\t\tvar id0:number = indices[index];\n\t\t\tvar id1:number = indices[index + 1] * posDim;\n\t\t\tvar id2:number = indices[index + 2] * posDim;\n\n\t\t\tvar ax:number = positions[id0 * posDim];\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\n\t\t\tvar bx:number = positions[id1];\n\t\t\tvar by:number = positions[id1 + 1];\n\t\t\tvar cx:number = positions[id2];\n\t\t\tvar cy:number = positions[id2 + 1];\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - p.x;\n\t\t\tvar dy:number = ay - p.y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - p.x;\n\t\t\tdy = by - p.y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - p.x;\n\t\t\tdy = cy - p.y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = p.x - ax;\n\t\t\t\tvar v2y:number = p.y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\tvar u:number = 1 - v - w;\n\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\n\t\t\tif (distance < shortestCollisionDistance) {\n\t\t\t\tshortestCollisionDistance = distance;\n\t\t\t\tcollisionCurveIndex = index/3;\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\n\t\t\t\tpickingCollisionVO.localPosition = p;\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\tpickingCollisionVO.index = index;\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (collisionCurveIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn false;\n\t}\n\n\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\n\t{\n\t\tvar uv:Point = new Point();\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\n\t\treturn uv;\n\t}\n}\n\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n//\t\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n}\n\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredEntities = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _entities:Array<IEntity>;\n\tprivate _numEntities:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._entities = new Array<IEntity>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numEntities = 0;\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\n\t\tvar entity:IEntity;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(entity = node.entity))\n\t\t\t\tthis._entities[this._numEntities++] = entity;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numEntities)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numEntities = 0;\n//\n//\t\t\tvar entity:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\tentity = entities[c];\n//\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredEntities.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._entities.length = this._numEntities;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar entity:IEntity;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numEntities; ++i) {\n\t\t\tentity = this._entities[i];\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\n\t\t\tif (entity.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\n\n/**\n * @class away.pool.EntityListItemPool\n */\nclass EntityListItemPool\n{\n\tprivate _pool:Array<EntityListItem>;\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pool = new Array<EntityListItem>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getItem():EntityListItem\n\t{\n\t\tvar item:EntityListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new EntityListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.EntityListItem\n */\nclass EntityListItem\n{\n\t/**\n\t *\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic next:EntityListItem;\n}\n\nexport = EntityListItem;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\n\n/**\n * @class away.pool.EntityNodePool\n */\nclass EntityNodePool\n{\n\tprivate _entityNodePool:Object = new Object();\n\tprivate _entityNodeClass:IEntityNodeClass;\n\tprivate _partition:Partition;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\n\t{\n\t\tthis._entityNodeClass = entityNodeClass;\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(entity:IEntity):EntityNode\n\t{\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(entity:IEntity):EntityNode\n\t{\n\t\tvar entityNode:EntityNode = this._entityNodePool[entity.id];\n\n\t\tif (entityNode) {\n\t\t\tentity._iRemoveEntityNode(entityNode);\n\n\t\t\tthis._entityNodePool[entity.id] = null;\n\t\t}\n\n\t\treturn entityNode;\n\t}\n}\n\nexport = EntityNodePool;",
    "import DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SceneGraphNode\t\t\t\t= require(\"awayjs-display/lib/partition/SceneGraphNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport ISceneGraphNodeClass\t\t\t= require(\"awayjs-display/lib/pool/ISceneGraphNodeClass\");\n\n\n/**\n * @class away.pool.SceneGraphNodePool\n */\nclass SceneGraphNodePool\n{\n\tprivate _sceneGraphNodePool:Object = new Object();\n\tprivate _sceneGraphNodeClass:ISceneGraphNodeClass;\n\tprivate _partition:Partition;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param sceneGraphNodeClass\n\t */\n\tconstructor(sceneGraphNodeClass:ISceneGraphNodeClass, partition:Partition)\n\t{\n\t\tthis._sceneGraphNodeClass = sceneGraphNodeClass;\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param displayObjectContainer\n\t * @returns SceneGraphNode\n\t */\n\tpublic getItem(displayObjectContainer:DisplayObjectContainer):SceneGraphNode\n\t{\n\t\treturn (this._sceneGraphNodePool[displayObjectContainer.id] || (this._sceneGraphNodePool[displayObjectContainer.id] = new this._sceneGraphNodeClass(this, displayObjectContainer, this._partition)));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param displayObjectContainer\n\t */\n\tpublic disposeItem(displayObjectContainer:DisplayObjectContainer):SceneGraphNode\n\t{\n\t\tvar sceneGraphNode:SceneGraphNode = this._sceneGraphNodePool[displayObjectContainer.id];\n\n\t\tif (sceneGraphNode)\n\t\t\tthis._sceneGraphNodePool[displayObjectContainer.id] = null;\n\n\t\treturn sceneGraphNode;\n\t}\n}\n\nexport = SceneGraphNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\n\n/**\n * @class away.pool.SubMeshPool\n */\nclass SubMeshPool\n{\n\tprivate static classPool:Object = new Object();\n\n\t/**\n\t *\n\t * @param subMeshClass\n\t */\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\n\t{\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\n\t{\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\n\t}\n\n\tprivate static main = SubMeshPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tSubMeshPool.registerClass(LineSubMesh);\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\n\t\tSubMeshPool.registerClass(CurveSubMesh);\n\t}\n}\n\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\t\t\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\t\tvar numIndices:number;\n\t\tvar numVertices:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\t\t\t\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = hw\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:Float32Array;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGeometry() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\t\t\tvar _radius = 50;\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:Float32Array;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar normals:Float32Array;\n\t\t\tvar tangents:Float32Array;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = -hh;\n\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar uvs:Float32Array;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t\tthis._pInvalidateGeometry()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _geomDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\tpublic _scaleU:number = 1;\n\tpublic _scaleV:number = 1;\n\n\tprivate _material:MaterialBase;\n\tprivate _geometry:Geometry;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryType:string;\n\tprivate _geometryTypeDirty:boolean = true;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get geometryType():string\n\t{\n\t\treturn this._geometryType;\n\t}\n\t\n\tpublic set geometryType(value:string)\n\t{\n\t\tif (this._geometryType == value)\n\t\t\treturn;\n\n\t\tthis._geometryType = value;\n\t\t\n\t\tthis.invalidateGeometryType();\n\t}\n\n\tpublic get geometry():Geometry\n\t{\n\t\tthis._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (this._scaleU = value)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (this._scaleV = value)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\n\t{\n\t\tsuper();\n\n\t\tthis._geometry = new Geometry();\n\t\tthis._material = material;\n\t\tthis._geometryType = geometryType;\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\n\t */\n\tpublic invalidateGeometryType()\n\t{\n\t\tthis._geometryTypeDirty = true;\n\t\tthis._geomDirty = true;\n\t\tthis._uvDirty = true;\n\t}\n\t\n\t/**\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidateGeometry()\n\t{\n\t\tthis._geomDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t/**\n\t * Updates the subgeometry when invalid.\n\t */\n\tprivate updateGeometryType()\n\t{\n\t\t//remove any existing sub geometry\n\t\tif (this._subGeometry)\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\n\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\n\t\t\tthis._subGeometry = triangleGeometry;\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\n\t\t}\n\n\t\tthis._geometryTypeDirty = false;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGeometry()\n\t{\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\n\n\t\tthis._geomDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._geometryTypeDirty)\n\t\t\tthis.updateGeometryType();\n\t\t\n\t\tif (this._geomDirty)\n\t\t\tthis.updateGeometry();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable;\n\t\tvar slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable, slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.renderId;\n\t\t\t\tvar mb:number = headB.renderId;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n}\n\nexport = RenderableNullSort;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass Font extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport = Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * SubGeometry for this char\n\t */\n\tpublic subgeom:CurveSubGeometry;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(subgeom:CurveSubGeometry)\n\t{\n\t\tthis.char_width=0;\n\t\tthis.subgeom = subgeom;\n\t\tif (this.subgeom != null) {\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\n\t\t\t\tif(positions2[v*3]>this.char_width)\n\t\t\t\t\tthis.char_width=positions2[v*3];\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport = TesselatedFontChar;",
    "\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tprivate _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _whitespace_width:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_whitespace_width(value:number):void\n\t{\n\t\tthis._whitespace_width=value;\n\t}\n\tpublic get_whitespace_width():number\n\t{\n\t\treturn this._whitespace_width\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[char];\n\t}\n\t/**\n\t *\n\t */\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\n\t\tsubgeo.name=char;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\n\t}\n\n}\n\nexport = TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n\n\t/**\n\t * Used to specify an <code>static</code> TextField.\n\t */\n\tpublic static STATIC:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass Single2DTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\n\n\tprivate _sampler2D:Sampler2D;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Single2DTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get sampler2D():Sampler2D\n\t{\n\t\treturn this._sampler2D;\n\t}\n\n\tpublic set sampler2D(value:Sampler2D)\n\t{\n\t\tif (this._sampler2D == value)\n\t\t\treturn;\n\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis._sampler2D = value;\n\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:Sampler2D);\n\tconstructor(source:Image2D);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof Image2D)\n\t\t\tthis.sampler2D = new Sampler2D(source);\n\t\telse\n\t\t\tthis.sampler2D = source;\n\n\t}\n}\n\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n\nclass SingleCubeTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\n\n\tprivate _samplerCube:SamplerCube;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SingleCubeTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {BitmapData}\n\t */\n\tpublic get samplerCube():SamplerCube\n\t{\n\t\treturn this._samplerCube;\n\t}\n\n\tpublic set samplerCube(value:SamplerCube)\n\t{\n\t\tif (this._samplerCube == value)\n\t\t\treturn;\n\n\t\tthis._samplerCube = value;\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:SamplerCube);\n\tconstructor(source:ImageCube);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof ImageCube)\n\t\t\tthis.samplerCube = new SamplerCube(source);\n\t\telse\n\t\t\tthis.samplerCube = source;\n\t}\n}\n\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\n\n/**\n *\n */\nclass TextureBase extends AssetBase implements IAsset\n{\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\n\n\tpublic _width:number = 1;\n\tpublic _height:number = 1;\n\n\tget width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tget height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tvar len:number = this._textureVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._textureVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateSize():void\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.push(textureVO);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t}\n\n}\n\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.CSSEntityCollector\n */\nclass CSSEntityCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase\n{\n\tpublic scene:Scene;\n\n\tpublic _pEntityHead:EntityListItem;\n\tpublic _pEntityListItemPool:EntityListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tpublic _pNumEntities:number = 0;\n\tpublic _pNumInteractiveEntities:number = 0;\n\n\tpublic isEntityCollector:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get entityHead():EntityListItem\n\t{\n\t\treturn this._pEntityHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numEntities():number\n\t{\n\t\treturn this._pNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numInteractiveEntities():number\n\t{\n\t\treturn this._pNumInteractiveEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pEntityHead = null;\n\t\tthis._pEntityListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._pNumEntities++;\n\n\t\tif (entity._iIsMouseEnabled())\n\t\t\tthis._pNumInteractiveEntities++;\n\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\n\t\titem.entity = entity;\n\n\t\titem.next = this._pEntityHead;\n\t\tthis._pEntityHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\n\t\tthis.isEntityCollector = true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static image2D(data:any):Image2D\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Image2D)\n\t\t\treturn data;\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\n\n\t\tif (data instanceof Sampler2D)\n\t\t\treturn (<Sampler2D> data).image2D;\n\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):Single2DTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\n\t\t\treturn new Single2DTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\n\t}\n}\n\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass SubGeometryUtils\n{\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\t\n\tprivate static _indexSwap:Array<number> = new Array<number>();\n\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float4Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\twhile (i < count) {\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tfaceNormals[j++] = cx;\n\t\t\tfaceNormals[j++] = cy;\n\t\t\tfaceNormals[j++] = cz;\n\t\t\tfaceNormals[j++] = d;\n\t\t}\n\n\t\toutput.set(faceNormals, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar normals:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear normal values\n\t\twhile (i < len) {\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\n\t\t//collect face normals\n\t\twhile (i < len) {\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise normals collections\n\t\twhile (i < len) {\n\t\t\tvx = normals[i];\n\t\t\tvy = normals[i + 1];\n\t\t\tvz = normals[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\tnormals[i++] = vx*d;\n\t\t\tnormals[i++] = vy*d;\n\t\t\tnormals[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(normals);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\t\tvar uvDim:number = uvAttributes.dimensions;\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar vi:number;\n\t\tvar v0:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\twhile (i < count) {\n\t\t\tindex1 = indices[i];\n\t\t\tindex2 = indices[i + 1];\n\t\t\tindex3 = indices[i + 2];\n\n\t\t\tv0 = uvs[index1*uvDim + 1];\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\n\n\t\t\tvi = index1*positionDim;\n\t\t\tx0 = positions[vi];\n\t\t\ty0 = positions[vi + 1];\n\t\t\tz0 = positions[vi + 2];\n\t\t\tvi = index2*positionDim;\n\t\t\tdx1 = positions[vi] - x0;\n\t\t\tdy1 = positions[vi + 1] - y0;\n\t\t\tdz1 = positions[vi + 2] - z0;\n\t\t\tvi = index3*positionDim;\n\t\t\tdx2 = positions[vi] - x0;\n\t\t\tdy2 = positions[vi + 1] - y0;\n\t\t\tdz2 = positions[vi + 2] - z0;\n\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tfaceTangents[i++] = denom*cx;\n\t\t\tfaceTangents[i++] = denom*cy;\n\t\t\tfaceTangents[i++] = denom*cz;\n\t\t}\n\n\t\toutput.set(faceTangents, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar tangents:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear tangent values\n\t\twhile (i < len) {\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t}\n\n\t\tvar weight:number;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\t\tvar f4:number = 3;\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\n\t\t//collect face tangents\n\t\twhile (i < len) {\n\t\t\tweight = faceNormals[f4];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tf1 += 3;\n\t\t\tf2 += 3;\n\t\t\tf3 += 3;\n\t\t\tf4 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise tangents collections\n\t\twhile (i < len) {\n\t\t\tvx = tangents[i];\n\t\t\tvy = tangents[i + 1];\n\t\t\tvz = tangents[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\ttangents[i++] = vx*d;\n\t\t\ttangents[i++] = vy*d;\n\t\t\ttangents[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(tangents);\n\n\t\treturn output;\n\t}\n\n\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] = j*.5;\n\t\t\tuvs[i++] = 1.0 - (j & 1);\n\n\t\t\tif (++j == 3)\n\t\t\t\tj = 0;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\n\n\t\tvar index:number = 0;\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\n\n\t\twhile (index < count*4) {\n\t\t\tif (index/4 & 1) {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t} else {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t}\n\n\t\t\tindex += 4;\n\t\t}\n\n\t\toutput.set(colors, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] *= scaleU;\n\t\t\tuvs[i++] *= scaleV;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\t}\n\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar positions:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t}\n\n\t\toutput.set(positions, offset);\n\t}\n\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar normals:Float32Array;\n\t\tvar normalDim:number;\n\n\t\tif (normalAttributes) {\n\t\t\tnormals = normalAttributes.get(count, offset);\n\t\t\tnormalDim = normalAttributes.dimensions;\n\t\t}\n\n\t\tvar tangents:Float32Array;\n\t\tvar tangentDim:number;\n\n\t\tif (tangentAttributes) {\n\t\t\ttangents = tangentAttributes.get(count, offset);\n\t\t\ttangentDim = tangentAttributes.dimensions;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (normalAttributes || tangentAttributes) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = 0;\n\t\tvar ni0:number = 0;\n\t\tvar ti0:number = 0;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\t// bake position\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += positionDim;\n\n\t\t\tif\t(normals) {\n\t\t\t\t// bake normal\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += normalDim;\n\t\t\t}\n\n\t\t\tif (tangents) {\n\t\t\t\t// bake tangent\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tangentDim;\n\t\t\t}\n\t\t}\n\n\t\tpositionAttributes.set(positions, offset);\n\n\t\tif (normalAttributes)\n\t\t\tnormalAttributes.set(normals, offset);\n\n\t\tif (tangentAttributes)\n\t\t\ttangentAttributes.set(tangents, offset);\n\t}\n\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\n\t{\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\n\t\tvar numIndices:number = indexAttributes.length;\n\t\t\n\t\t//reset mappings\n\t\tindexMappings.length = 0;\n\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\n\t\t\treturn buffer;\n\n\t\tvar i:number;\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\n\t\tvar splitIndices:Array<number> = new Array<number>();\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\n\t\t\n\n\t\tindexSwap.length = numIndices;\n\t\tfor (i = 0; i < numIndices; i++)\n\t\t\tindexSwap[i] = -1;\n\n\t\tvar originalIndex:number;\n\t\tvar splitIndex:number;\n\t\tvar index:number = 0;\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\n\t\t\n\t\t// Loop over all triangles\n\t\t\n\t\ti = 0;\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\n\t\t\toriginalIndex = indices[i];\n\n\t\t\tif (indexSwap[originalIndex] >= 0) {\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\n\t\t\t} else {\n\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t// needs to be copied from the long list.\n\t\t\t\tsplitIndex = index++;\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\n\t\t\t}\n\n\t\t\t// Store new index, which may have come from the swap look-up,\n\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\tsplitIndices[i++] = splitIndex;\n\t\t}\n\t\t\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\n\t\t\n\t\tindexAttributes = indexAttributes.clone(buffer);\n\t\tindexAttributes.set(splitIndices);\n\t\t\n\t\treturn buffer;\n\t}\n\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\n\t{\n\t\tif (!indexMappings.length)\n\t\t\treturn vertexBuffer;\n\n\t\tvar stride:number = vertexBuffer.stride;\n\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\n\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\n\t\tvar splitIndex:number;\n\t\tvar originalIndex:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = indexMappings.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tsplitIndex = i*stride;\n\t\t\toriginalIndex = indexMappings[i]*stride;\n\n\t\t\tfor (j = 0; j < stride; j++)\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\t\t}\n\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\n\t\tvertexBuffer.bufferView = splitVerts;\n\n\t\treturn vertexBuffer;\n\t}\n}\n\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
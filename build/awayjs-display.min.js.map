{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display/display.ts",
    "awayjs-display.js",
    "awayjs-display/lib/View.ts",
    "awayjs-display/lib/animators/data/ParticleData.ts",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/HierarchicalProperties.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/Style.ts",
    "awayjs-display/lib/base/Timeline.ts",
    "awayjs-display/lib/base/TouchPoint.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/display/Billboard.ts",
    "awayjs-display/lib/display/Camera.ts",
    "awayjs-display/lib/display/DirectionalLight.ts",
    "awayjs-display/lib/display/DisplayObjectContainer.ts",
    "awayjs-display/lib/display/DisplayObject.ts",
    "awayjs-display/lib/display/LightBase.ts",
    "awayjs-display/lib/display/LightProbe.ts",
    "awayjs-display/lib/display/LineSegment.ts",
    "awayjs-display/lib/display/LoaderContainer.ts",
    "awayjs-display/lib/display/MovieClip.ts",
    "awayjs-display/lib/display/PointLight.ts",
    "awayjs-display/lib/display/Scene.ts",
    "awayjs-display/lib/display/Shape.ts",
    "awayjs-display/lib/display/Skybox.ts",
    "awayjs-display/lib/display/Sprite.ts",
    "awayjs-display/lib/display/TextField.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathCommand.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/GraphicsPath.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/ElementsEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/StyleEvent.ts",
    "awayjs-display/lib/events/SurfaceEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/events/TransformEvent.ts",
    "awayjs-display/lib/graphics/ElementsBase.ts",
    "awayjs-display/lib/graphics/ElementsType.ts",
    "awayjs-display/lib/graphics/Graphics.ts",
    "awayjs-display/lib/graphics/Graphic.ts",
    "awayjs-display/lib/graphics/LineElements.ts",
    "awayjs-display/lib/graphics/TriangleElements.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/FrameScriptManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/BasicPartition.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/DisplayObjectNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/PartitionBase.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SceneGraphNode.ts",
    "awayjs-display/lib/partition/SceneGraphPartition.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollision.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/MappingMode.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/ElementsUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "./display.ts",
    "module",
    "Camera",
    "DirectionalLight",
    "Sprite",
    "Billboard",
    "LineSegment",
    "TextField",
    "PointLight",
    "LightProbe",
    "Skybox",
    "Shape",
    "MovieClip",
    "CameraNode",
    "DirectionalLightNode",
    "EntityNode",
    "LightProbeNode",
    "PartitionBase",
    "PointLightNode",
    "SkyboxNode",
    "registerAbstraction",
    "display",
    "awayjs-display/lib/display/Billboard",
    "awayjs-display/lib/display/Camera",
    "awayjs-display/lib/display/DirectionalLight",
    "awayjs-display/lib/display/LightProbe",
    "awayjs-display/lib/display/LineSegment",
    "awayjs-display/lib/display/MovieClip",
    "awayjs-display/lib/display/PointLight",
    "awayjs-display/lib/display/Shape",
    "awayjs-display/lib/display/Skybox",
    "awayjs-display/lib/display/Sprite",
    "awayjs-display/lib/display/TextField",
    "awayjs-display/lib/partition/CameraNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/LightProbeNode",
    "awayjs-display/lib/partition/PartitionBase",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/IRenderer",
    "awayjs-display/lib/ITraverser",
    "awayjs-display/lib/View",
    "getTimer",
    "TouchPoint",
    "Scene",
    "RaycastPicker",
    "CameraEvent",
    "DisplayObjectEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "renderer",
    "scene",
    "camera",
    "_this",
    "this",
    "_width",
    "_height",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_pTouchPoints",
    "Array",
    "_onPartitionChangedDelegate",
    "event",
    "_onPartitionChanged",
    "_onProjectionChangedDelegate",
    "_onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "_onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "_onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "position",
    "appendChild",
    "_mouseManager",
    "getInstance",
    "registerView",
    "Object",
    "defineProperty",
    "prototype",
    "get",
    "_pMouseX",
    "enumerable",
    "configurable",
    "_pMouseY",
    "getLocalMouseX",
    "displayObject",
    "inverseSceneTransform",
    "transformVector",
    "unproject",
    "x",
    "getLocalMouseY",
    "y",
    "getLocalTouchPoints",
    "localPosition",
    "localTouchPoints",
    "len",
    "push",
    "id",
    "_pRenderer",
    "set",
    "value",
    "dispose",
    "removeEventListener",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "addEventListener",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "width",
    "height",
    "shareContext",
    "_shareContext",
    "_pCamera",
    "PROJECTION_CHANGED",
    "_pScene",
    "partition",
    "_iRegisterEntity",
    "PARTITION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "left",
    "top",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollision",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "undefined",
    "awayjs-display/lib/base/TouchPoint",
    "awayjs-display/lib/display/Scene",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/data/ParticleData",
    "ParticleData",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "_pStateClass",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/HierarchicalProperties",
    "HierarchicalProperties",
    "MOUSE_ENABLED",
    "VISIBLE",
    "MASK_ID",
    "MASKS",
    "COLOR_TRANSFORM",
    "SCENE_TRANSFORM",
    "ALL",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderable",
    "awayjs-display/lib/base/ISurface",
    "awayjs-display/lib/base/OrientationMode",
    "OrientationMode",
    "DEFAULT",
    "CAMERA_PLANE",
    "CAMERA_POSITION",
    "awayjs-display/lib/base/Style",
    "EventDispatcher",
    "StyleEvent",
    "Style",
    "_samplers",
    "_images",
    "_color",
    "_sampler",
    "_invalidateProperties",
    "_image",
    "_uvMatrix",
    "getImageAt",
    "texture",
    "index",
    "getSamplerAt",
    "addImageAt",
    "image",
    "addSamplerAt",
    "sampler",
    "removeImageAt",
    "removeSamplerAt",
    "dispatchEvent",
    "INVALIDATE_PROPERTIES",
    "awayjs-core/lib/events/EventDispatcher",
    "awayjs-display/lib/events/StyleEvent",
    "awayjs-display/lib/base/Timeline",
    "ColorTransform",
    "FrameScriptManager",
    "Timeline",
    "_functions",
    "_update_indices",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "update_mtx_all",
    "update_colortransform",
    "update_masks",
    "update_name",
    "update_button_name",
    "update_visibility",
    "update_mtx_scale_rot",
    "update_mtx_pos",
    "enable_maskmode",
    "remove_masks",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "frameScriptDebug",
    "functionname",
    "split",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "indexOf",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "scriptPass1",
    "adapter",
    "evalScript",
    "add_script_to_queue",
    "add_script_to_queue_pass2",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChildInstance",
    "this_clone",
    "clone",
    "name",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "skip_script",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "k",
    "numChildren",
    "_children",
    "_depthID",
    "removeChildAt",
    "resetSessionIDs",
    "depth_sessionIDs",
    "getSessionIDDepths",
    "pass1",
    "child",
    "_sessionID",
    "isBlockedByScript",
    "transform",
    "clearMatrix3D",
    "clearColorTransform",
    "masks",
    "maskMode",
    "isVisibilityByScript",
    "visible",
    "key",
    "add_child_stream",
    "_addTimelineChildAt",
    "Number",
    "pass2",
    "update_cnt",
    "start_index",
    "end_index",
    "frame_command_idx",
    "command_index_stream",
    "command_length_stream",
    "remove_child_stream",
    "update_childs",
    "queueScript",
    "frameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "getDepthIndexInternal",
    "idx",
    "props_start_idx",
    "props_end_index",
    "getChildAtSessionID",
    "update_child_stream",
    "_blocked",
    "Boolean",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "matrix3D",
    "rawData",
    "properties_stream_f32_mtx_all",
    "invalidateComponents",
    "new_ct",
    "colorTransform",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "alphaMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "invalidateColorTransform",
    "mask",
    "numMasks",
    "properties_stream_int",
    "m",
    "properties_stream_strings",
    "registerScriptObject",
    "target",
    "addButtonListeners",
    "properties_stream_f32_mtx_scale_rot",
    "pInvalidateHierarchicalProperties",
    "properties_stream_f32_mtx_pos",
    "invalidatePosition",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-display/lib/managers/FrameScriptManager",
    "awayjs-display/lib/base/Transform",
    "Matrix3D",
    "Matrix3DUtils",
    "Vector3D",
    "TransformEvent",
    "Transform",
    "_matrix3D",
    "_rotation",
    "_skew",
    "_scale",
    "_components",
    "director",
    "getForward",
    "negate",
    "_colorTransform",
    "val",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_matrix3DDirty",
    "_updateMatrix3D",
    "_pixelBounds",
    "_componentsDirty",
    "_updateComponents",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "z",
    "invalidateMatrix3D",
    "scaleTo",
    "sx",
    "sy",
    "sz",
    "skewTo",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "distance",
    "translateLocal",
    "Z_AXIS",
    "moveBackward",
    "moveLeft",
    "X_AXIS",
    "moveRight",
    "moveUp",
    "Y_AXIS",
    "moveDown",
    "moveTo",
    "dx",
    "dy",
    "dz",
    "pitch",
    "angle",
    "rotate",
    "roll",
    "yaw",
    "axis",
    "prependRotation",
    "translate",
    "Math",
    "sqrt",
    "appendTranslation",
    "prependTranslation",
    "identity",
    "clear",
    "INVALIDATE_MATRIX3D",
    "INVALIDATE_COLOR_TRANSFORM",
    "recompose",
    "elements",
    "decompose",
    "vec",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/events/TransformEvent",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "ElementsType",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "entity",
    "_x",
    "_y",
    "_z",
    "_depth",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "getBox",
    "matrix",
    "sceneTransform",
    "hx",
    "hy",
    "hz",
    "depth",
    "cx",
    "cy",
    "cz",
    "raw",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "_pCreateBoundsPrimitive",
    "LINE",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/graphics/ElementsType",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "getSphere",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "AbstractMethodError",
    "invalidate",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-display/lib/bounds/BoundsType",
    "BoundsType",
    "SPHERE",
    "AXIS_ALIGNED_BOX",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "invalidatePartitionBounds",
    "_iController",
    "update",
    "interpolate",
    "updateController",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "MathConsts",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "max",
    "min",
    "rotationX",
    "rotationY",
    "sin",
    "DEGREES_TO_RADIANS",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "pos",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "lookAt",
    "scenePosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "SCENETRANSFORM_CHANGED",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "copyFrom",
    "incrementBy",
    "Rectangle",
    "DisplayObject",
    "RenderableEvent",
    "SurfaceEvent",
    "DefaultMaterialManager",
    "material",
    "pixelSnapping",
    "smoothing",
    "_pIsEntity",
    "onInvalidateTextureDelegate",
    "onInvalidateTexture",
    "_onInvalidatePropertiesDelegate",
    "_onInvalidateProperties",
    "_updateDimensions",
    "_boundsType",
    "_animator",
    "_billboardRect",
    "_billboardHeight",
    "_billboardWidth",
    "_material",
    "iRemoveOwner",
    "INVALIDATE_TEXTURE",
    "iAddOwner",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "_style",
    "_iTestCollision",
    "pickingCollision",
    "pickingCollider",
    "testBillboardCollision",
    "_acceptTraverser",
    "traverser",
    "applyRenderable",
    "getTextureAt",
    "getDefaultSampler",
    "imageRect",
    "rect",
    "frameRect",
    "_pInvalidateBounds",
    "INVALIDATE_ELEMENTS",
    "invalidateSurface",
    "INVALIDATE_RENDER_OWNER",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/display/DisplayObject",
    "awayjs-display/lib/events/RenderableEvent",
    "awayjs-display/lib/events/SurfaceEvent",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "DisplayObjectContainer",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "viewProjection",
    "invLen",
    "bitFlag",
    "_hierarchicalPropsDirty",
    "append",
    "nX",
    "nY",
    "_applyRenderer",
    "_iSourcePrefab",
    "_iValidate",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/display/DisplayObjectContainer",
    "LightBase",
    "DirectionalShadowMapper",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "pUpdateSceneTransform",
    "_direction",
    "_tmpLookAt",
    "copyColumnTo",
    "normalize",
    "pCreateShadowMapper",
    "iGetObjectProjectionMatrix",
    "cameraTransform",
    "RAW_DATA_CONTAINER",
    "getRenderSceneTransform",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "copyRawDataFrom",
    "prepend",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "awayjs-display/lib/display/LightBase",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_depth_childs",
    "_nextHighestDepth",
    "_updateMouseEnabled",
    "addChild",
    "addChildAt",
    "addChildAtDepth",
    "replace",
    "_pParent",
    "removeChildAtInternal",
    "getChildIndex",
    "iSetParent",
    "_invalidateChildren",
    "getNextHighestDepth",
    "addChildren",
    "childarray",
    "_i",
    "arguments",
    "newInstance",
    "copyTo",
    "mouseChildren",
    "contains",
    "disposeValues",
    "removeChild",
    "getChildAtDepth",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "_nextHighestDepthDirty",
    "_updateNextHighestDepth",
    "getObjectsUnderPoint",
    "point",
    "removeChildAtDepth",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "box",
    "setEmpty",
    "_iSetScene",
    "splice",
    "_hitTestPointInternal",
    "shapeFlag",
    "masksFlag",
    "hitTestPoint",
    "_updateMaskMode",
    "_pIsContainer",
    "_pImplicitPartition",
    "_iUnregisterEntity",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/RangeError",
    "Box",
    "Sphere",
    "Point",
    "PickingCollision",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_explicitMaskId",
    "_pImplicitVisibility",
    "_pImplicitMaskId",
    "_pImplicitMaskIds",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_orientationMatrix",
    "_inheritColorTransform",
    "_maskMode",
    "_tempVector3D",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "zOffset",
    "_transform",
    "_onInvalidateMatrix3D",
    "_onInvalidateColorTransform",
    "_adapter",
    "scaleZ",
    "_setScaleZ",
    "_eulers",
    "rotationZ",
    "scaleY",
    "_setScaleY",
    "_inverseSceneTransformDirty",
    "invert",
    "_loaderInfo",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_iAssignedPartition",
    "_pivot",
    "pivot",
    "_pivotScale",
    "_root",
    "rotation",
    "RADIANS_TO_DEGREES",
    "scale",
    "_setScaleX",
    "skew",
    "skewX",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "_shaderPickingDetails",
    "_debugVisible",
    "_explicitMasks",
    "scaleX",
    "type",
    "listener",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "_listenToSceneTransformChanged",
    "boundsType",
    "mouseEnabled",
    "extra",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "transformBox",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "setTo",
    "globalToLocal3D",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "maskHit",
    "isMask",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "subtract",
    "crossProduct",
    "localToGlobal3D",
    "movePivot",
    "reset",
    "comps",
    "hasEventListener",
    "_pickingCollision",
    "propDirty",
    "newPropDirty",
    "isEntity",
    "queueDispatch",
    "_sceneTransformChanged",
    "sceneChanged",
    "_iUnregisterPartition",
    "_iRegisterPartition",
    "_sceneChanged",
    "_iIsRoot",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iInternalUpdate",
    "_iIsVisible",
    "_updateVisible",
    "_iAssignedMaskId",
    "_updateMaskId",
    "_iAssignedMasks",
    "_updateMasks",
    "_pImplicitMasks",
    "_iMasksConfig",
    "_iAssignedColorTransform",
    "_updateColorTransform",
    "_pImplicitColorTransform",
    "_iIsMouseEnabled",
    "collector",
    "concat",
    "numLayers",
    "implicitChildren",
    "implicitChildIds",
    "j",
    "INVALIDATE_PARTITION_BOUNDS",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-display/lib/pick/PickingCollision",
    "awayjs-display/lib/display/IEntity",
    "LightEvent",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_shadowsEnabled",
    "_shadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "awayjs-display/lib/events/LightEvent",
    "SamplerCube",
    "ErrorBase",
    "diffuseMap",
    "specularMap",
    "diffuseSampler",
    "specularSampler",
    "awayjs-core/lib/errors/ErrorBase",
    "awayjs-core/lib/image/SamplerCube",
    "startPosition",
    "endPosition",
    "thickness",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "invalidateGraphics",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/display/LoaderContainer",
    "AssetLibraryBundle",
    "Loader",
    "AssetEvent",
    "URLLoaderEvent",
    "LoaderEvent",
    "ParserEvent",
    "LoaderContainer",
    "useAssetLibrary",
    "assetLibraryId",
    "_useAssetLib",
    "_assetLibId",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadCompleteDelegate",
    "onLoadComplete",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_content",
    "close",
    "_loader",
    "lib",
    "disposeLoader",
    "_disposeLoader",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoader",
    "loadData",
    "data",
    "getLoader",
    "LOAD_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "stop",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "LOAD_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/events/URLLoaderEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/Loader",
    "MouseEvent",
    "timeline",
    "_isButton",
    "_currentFrameIndex",
    "_isPlaying",
    "_isInit",
    "_potentialInstances",
    "_depth_sessionIDs",
    "_sessionID_childs",
    "loop",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "_movieClips",
    "reset_textclones",
    "isAsset",
    "text",
    "numFrames",
    "freeFromScript",
    "_skipAdvance",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "sessionID",
    "unregisterScriptObject",
    "play",
    "advanceFrame",
    "execute_queue",
    "execute_intervals",
    "execute_dispose",
    "pop",
    "logHierarchy",
    "printHierarchyName",
    "console",
    "log",
    "instance",
    "add_child_to_dispose",
    "awayjs-display/lib/events/MouseEvent",
    "CubeMapShadowMapper",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "BasicPartition",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "traversePartitions",
    "traverse",
    "awayjs-display/lib/partition/BasicPartition",
    "Graphics",
    "_tempPoint",
    "_onGraphicsInvalidateDelegate",
    "_onGraphicsInvalidate",
    "_graphics",
    "INVALIDATE",
    "animator",
    "removeOwner",
    "addOwner",
    "bakeTransformations",
    "applyTransformation",
    "_shapes",
    "shape",
    "graphics",
    "union",
    "getBoxBounds",
    "_center",
    "getSphereBounds",
    "count",
    "acceptTraverser",
    "local",
    "awayjs-display/lib/graphics/Graphics",
    "BlendMode",
    "SingleCubeTexture",
    "_textures",
    "_pAlphaThreshold",
    "_pBlendMode",
    "NORMAL",
    "_curves",
    "_imageRect",
    "_onTextureInvalidateDelegate",
    "onTextureInvalidate",
    "_owners",
    "invalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_texture",
    "removeTexture",
    "addTexture",
    "getNumTextures",
    "INVALIDATE_PASSES",
    "awayjs-core/lib/image/BlendMode",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "_sprites",
    "sprite",
    "AttributesView",
    "Float2Attributes",
    "Byte4Attributes",
    "Matrix",
    "Sampler2D",
    "TextFieldType",
    "TriangleElements",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "toString",
    "_textGraphicsDirty",
    "_textFormat",
    "reConstruct",
    "_textColor",
    "color",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "_textElements",
    "_textFields",
    "_textGraphic",
    "numVertices",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "y_offset",
    "prev_char",
    "whitespace_width",
    "get_whitespace_width",
    "letterSpacing",
    "textlines",
    "final_lines_chars",
    "final_lines_char_scale",
    "final_lines_width",
    "final_lines_justify_bool",
    "final_lines_justify",
    "maxlineWidth",
    "textWidth",
    "leftMargin",
    "rightMargin",
    "indent",
    "tl",
    "words",
    "word_width",
    "word_chars",
    "word_chars_scale",
    "c_cnt",
    "w",
    "this_char",
    "getChar",
    "charCodeAt",
    "fallback_font_table",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "fw",
    "ascent",
    "vertices",
    "Float32Array",
    "x_offset",
    "justify_addion",
    "align",
    "buffer",
    "concatenatedBuffer",
    "descent",
    "leading",
    "attributesView",
    "vertexBuffer",
    "setPositions",
    "setCustomAttributes",
    "addGraphic",
    "uvMatrix",
    "uv_values",
    "animateUVs",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "textHeight",
    "textFormat",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/geom/Matrix",
    "awayjs-core/lib/image/Sampler2D",
    "awayjs-display/lib/graphics/TriangleElements",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathCommand",
    "GraphicsPathCommand",
    "NO_OP",
    "MOVE_TO",
    "LINE_TO",
    "CURVE_TO",
    "CURVE_TO_2",
    "WIDE_LINE_TO",
    "WIDE_MOVE_TO",
    "CUBIC_CURVE",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/GraphicsPath",
    "GraphicsPath",
    "commands",
    "winding",
    "_data",
    "_commands",
    "_draw_directions",
    "_contours_closed",
    "_startPoint",
    "_cur_point",
    "_tmp_point",
    "isFill",
    "_winding",
    "_isFill",
    "curveTo",
    "controlX",
    "controlY",
    "anchorX",
    "anchorY",
    "testpoint",
    "degree_anchor",
    "acos",
    "PI",
    "degree_control",
    "atan2",
    "lineTo",
    "finalizeContour",
    "wideLineTo",
    "wideMoveTo",
    "awayjs-display/lib/draw/Graphics",
    "Float3Attributes",
    "PartialImplementationError",
    "_current_position",
    "_target",
    "_queued_fill_pathes",
    "_queued_stroke_pathes",
    "_active_fill_path",
    "_active_stroke_path",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "draw_fill",
    "beginFill",
    "alpha",
    "beginGradientFill",
    "colors",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "drawCircle",
    "radius2",
    "degree",
    "degree2",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "indices",
    "uvtData",
    "culling",
    "endFill",
    "draw_strokes",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "contour_commands",
    "contour_data",
    "contour_closed",
    "contours_closed",
    "vert_cnt",
    "data_cnt",
    "draw_started",
    "final_vert_list",
    "final_vert_cnt",
    "lastPoint",
    "start_point",
    "end_point",
    "start_left",
    "start_right",
    "ctr_left",
    "ctr_right",
    "ctr_left2",
    "ctr_right2",
    "end_left",
    "end_right",
    "tmp_point",
    "tmp_point2",
    "first_point",
    "first_point_set",
    "closed",
    "tessVerts",
    "_tess_obj",
    "newTess",
    "contour_points",
    "contour_types",
    "curve_direction",
    "control_x",
    "control_y",
    "end_x",
    "end_y",
    "con_length",
    "next_start_right",
    "next_start_left",
    "next_end_right",
    "next_end_left",
    "prevLeft",
    "prevRight",
    "nextIdx",
    "cur_vertical",
    "next_vertical",
    "cur_horizontal",
    "next_horizontal",
    "factor1",
    "offsetY1",
    "factor2",
    "offsetY2",
    "factor3",
    "offsetY3",
    "factor4",
    "offsetY4",
    "finished_curves",
    "finished_curves_types",
    "test_concave_curves",
    "test_convex_curves",
    "curve_sign",
    "getSign",
    "curve_sign2",
    "curve_sign3",
    "subdivided",
    "subdivided2",
    "subdivideCurve",
    "sc",
    "verticesF32",
    "addContour",
    "tesselate",
    "verts",
    "all_verts",
    "vertIndicess",
    "elems",
    "getVertices",
    "getElements",
    "numVerts",
    "numElems",
    "p1",
    "p2",
    "p3",
    "attributesBuffer",
    "setUVs",
    "getDefaultMaterial",
    "bothSides",
    "useColorTransform",
    "curves",
    "isClockWiseXY",
    "point1x",
    "point1y",
    "point2x",
    "point2y",
    "point3x",
    "point3y",
    "bx",
    "by",
    "pointInTri",
    "xx",
    "xy",
    "b1",
    "b2",
    "b3",
    "startx",
    "starty",
    "endx",
    "endy",
    "startx2",
    "starty2",
    "cx2",
    "cy2",
    "endx2",
    "endy2",
    "array_out",
    "array2_out",
    "c1x",
    "c1y",
    "c2x",
    "c2y",
    "c1x2",
    "c1y2",
    "c2x2",
    "c2y2",
    "ax2",
    "ay2",
    "contour_draw_directions",
    "draw_directions",
    "draw_direction",
    "contours_vertices",
    "curve_attr_1",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-core/lib/errors/PartialImplementationError",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "EventBase",
    "_camera",
    "awayjs-core/lib/events/EventBase",
    "object",
    "_object",
    "VISIBLITY_UPDATED",
    "awayjs-display/lib/events/ElementsEvent",
    "ElementsEvent",
    "_attributesView",
    "INVALIDATE_INDICES",
    "CLEAR_INDICES",
    "INVALIDATE_VERTICES",
    "CLEAR_VERTICES",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "renderable",
    "uv",
    "normal",
    "elementIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "_renderable",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "surface",
    "_surface",
    "INVALIDATE_ANIMATION",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/graphics/ElementsBase",
    "Short3Attributes",
    "ElementsBase",
    "_customAttributesNames",
    "_customAttributes",
    "_numElements",
    "_verticesDirty",
    "_invalidateVertices",
    "_concatenatedBuffer",
    "_indices",
    "getCustomAtributesNames",
    "getCustomAtributes",
    "setIndices",
    "values",
    "offset",
    "clearIndices",
    "invalidateIndicies",
    "clearVertices",
    "invalidateVertices",
    "scaleUV",
    "scaleU",
    "scaleV",
    "center",
    "_invalidateIndices",
    "awayjs-core/lib/attributes/Short3Attributes",
    "TRIANGLE",
    "Graphic",
    "ElementsUtils",
    "_onInvalidateVerticesDelegate",
    "_onInvalidateVertices",
    "graphic",
    "invalidateElements",
    "_iInvalidateSurfaces",
    "_iGetExplicitMaterial",
    "_available",
    "_iIndex",
    "parent",
    "removeGraphic",
    "getGraphicAt",
    "particles",
    "numParticles",
    "_iGetExplicitStyle",
    "_boxBounds",
    "setBoundIdentity",
    "hitTestTriangleElements",
    "positions",
    "awayjs-display/lib/graphics/Graphic",
    "awayjs-display/lib/utils/ElementsUtils",
    "awayjs-display/lib/graphics/LineElements",
    "Float1Attributes",
    "LineElements",
    "_numVertices",
    "_positions",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "floor",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/Float1Attributes",
    "apply",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "cells",
    "lastCollisionIndex",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "dimensions",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_uvs",
    "_condensedIndexLookUp",
    "getTriangleGraphicsBoxBounds",
    "getTriangleGraphicsSphereBounds",
    "generateNormals",
    "faceNormals",
    "generateTangents",
    "faceTangents",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "uvs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "scaleUVs",
    "generateFaceTangents",
    "numElements",
    "generateFaceNormals",
    "testTriangleCollision",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "getDefaultImage2D",
    "_defaultBitmapImage2D",
    "createDefaultImage2D",
    "getDefaultImageCube",
    "_defaultBitmapImageCube",
    "createDefaultImageCube",
    "_defaultSampler2D",
    "createDefaultSampler2D",
    "draw",
    "setPixel",
    "awayjs-core/lib/image/BitmapImage2D",
    "awayjs-core/lib/image/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "setInterval",
    "func",
    "_intervalID",
    "_active_intervals",
    "clearInterval",
    "_queued_dispose",
    "mc",
    "script",
    "_queued_mcs_pass2",
    "_queued_mcs",
    "_queued_scripts",
    "_queued_scripts_pass2",
    "caller",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collision",
    "altKey",
    "clientX",
    "changedTouches",
    "clientY",
    "preventDefault",
    "updateColliders",
    "bounds",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "touches",
    "touch",
    "identifier",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollisionFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "collider",
    "touchPointID",
    "Image2D",
    "MaterialBase",
    "imageColor",
    "_preserveAlpha",
    "invalidateTexture",
    "awayjs-core/lib/image/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ImageBase",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "invalidateSurfaces",
    "addTextureAt",
    "awayjs-core/lib/image/ImageBase",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "shadowsEnabled",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "cullPlanes",
    "_pCullPlanes",
    "_iRenderCascades",
    "_pOverallDepthCamera",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "appendScale",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "imageCube",
    "awayjs-core/lib/image/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "_autoUpdateShadows",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "NodeBase",
    "_rootNode",
    "awayjs-display/lib/partition/NodeBase",
    "enterNode",
    "applyDirectionalLight",
    "_displayObject",
    "isCastingShadow",
    "awayjs-display/lib/partition/DisplayObjectNode",
    "AbstractionBase",
    "DisplayObjectNode",
    "pool",
    "numEntities",
    "isSceneGraphNode",
    "_boundsDirty",
    "_onInvalidatePartitionBoundsDelegate",
    "_onInvalidatePartitionBounds",
    "debugVisible",
    "_updateBounds",
    "onClear",
    "onInvalidate",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "awayjs-core/lib/library/AbstractionBase",
    "_maskPosition",
    "_partition",
    "globalRayPosition",
    "globalRayDirection",
    "isIntersectingMasks",
    "_iPickingCollision",
    "rayOriginIsInsideBounds",
    "applyEntity",
    "iMarkForUpdate",
    "children",
    "layerHit",
    "awayjs-display/lib/partition/IContainerNode",
    "awayjs-display/lib/partition/IDisplayObjectNode",
    "awayjs-display/lib/partition/IEntityNodeClass",
    "awayjs-display/lib/partition/INode",
    "applyLightProbe",
    "_pChildNodes",
    "_pNumChildNodes",
    "iAddNode",
    "node",
    "iRemoveNode",
    "_abstractionPool",
    "_updatesMade",
    "getAbstraction",
    "_abstractionClassPool",
    "clearAbstraction",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "findParentForNode",
    "targetNode",
    "entityNodeClass",
    "assetClass",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphNode",
    "SceneGraphNode",
    "_childDepths",
    "_childMasks",
    "awayjs-display/lib/partition/SceneGraphPartition",
    "SceneGraphPartition",
    "_sceneGraphNodePool",
    "SceneGraphNodePool",
    "isContainer",
    "displayObjectContainer",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleElements",
    "i0",
    "i1",
    "i2",
    "nx",
    "ny",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "collisionTriangleIndex",
    "posDim",
    "uvDim",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "lineElements",
    "_entities",
    "onlyMouseEnabled",
    "_rayPosition",
    "_rayDirection",
    "_view",
    "getSceneCollision",
    "getPickingCollision",
    "setIgnoreList",
    "entities",
    "_ignoredEntities",
    "isIgnored",
    "sortOnNearT",
    "entity1",
    "entity2",
    "sort",
    "_bestCollision",
    "_testCollision",
    "_testCollider",
    "MAX_VALUE",
    "updatePosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "elementsType",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidatePrimitive",
    "_pInvalidateUVs",
    "_pBuildGraphics",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "numIndices",
    "triangleGraphics",
    "horangle",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "_scaleU",
    "_scaleV",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGraphics",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_primitiveDirty",
    "_uvDirty",
    "_elementsType",
    "_elements",
    "updateGraphics",
    "updateUVs",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "_ascent",
    "_descent",
    "_offset_x",
    "_offset_y",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "setChar",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "awayjs-display/lib/textures/MappingMode",
    "MappingMode",
    "LINEAR_GRADIENT",
    "RADIAL_GRADIENT",
    "ImageUtils",
    "TextureBase",
    "setNumImages",
    "_mappingMode",
    "setSamplerAt",
    "isImage2DValid",
    "setImageAt",
    "awayjs-core/lib/utils/ImageUtils",
    "awayjs-display/lib/textures/TextureBase",
    "_numImages",
    "getNumImages",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "index3",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "stride",
    "bufferView",
    "splitVerts",
    "boundingBox",
    "curveAttributes",
    "curveDim",
    "id0",
    "id1",
    "id2",
    "precheck",
    "dot",
    "curvey0",
    "curvey1",
    "curvey2",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "uu",
    "vv",
    "divisions",
    "conversionX",
    "conversionY",
    "minx",
    "miny",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "nodes",
    "index_x",
    "index_y",
    "nodeCount",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "tempFloat32x4",
    "awayjs-core/lib/attributes/Float4Attributes"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/display/DirectionalLight\");\nimport Sprite\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/display/Billboard\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/display/LineSegment\");\nimport TextField\t\t\t\t\t= require(\"awayjs-display/lib/display/TextField\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/display/PointLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/display/LightProbe\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Skybox\");\nimport Shape\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Shape\");\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/display/MovieClip\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\n\nPartitionBase.registerAbstraction(CameraNode, Camera);\nPartitionBase.registerAbstraction(DirectionalLightNode, DirectionalLight);\nPartitionBase.registerAbstraction(EntityNode, Sprite);\nPartitionBase.registerAbstraction(EntityNode, Shape);\nPartitionBase.registerAbstraction(EntityNode, MovieClip);\nPartitionBase.registerAbstraction(EntityNode, Billboard);\nPartitionBase.registerAbstraction(EntityNode, LineSegment);\nPartitionBase.registerAbstraction(EntityNode, TextField);\nPartitionBase.registerAbstraction(LightProbeNode, LightProbe);\nPartitionBase.registerAbstraction(PointLightNode, PointLight);\nPartitionBase.registerAbstraction(SkyboxNode, Skybox);\n\n\n\n/**\n *\n * static shim\n */\nclass display\n{\n\n}\n\nexport = display;",
    null,
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollision\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollision\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t ******************clear********************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onPartitionChangedDelegate:(event:DisplayObjectEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\tpublic _pTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onPartitionChangedDelegate = (event:DisplayObjectEvent) => this._onPartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this._onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this._onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this._onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tif(document) {\n\t\t\tdocument.body.style.margin = \"0px\";\n\n\t\t\tthis._htmlElement = document.createElement(\"div\");\n\t\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\t\tdocument.body.appendChild(this._htmlElement);\n\t\t}\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\tget touchPoints():Array<TouchPoint>\n\t{\n\t\treturn this._pTouchPoints;\n\t}\n\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\n\t}\n\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\n\t}\n\n\tpublic getLocalTouchPoints(displayObject:DisplayObject):Array<TouchPoint>\n\t{\n\t\tvar localPosition:Vector3D;\n\t\tvar localTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t\tvar len:number = this._pTouchPoints.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tlocalPosition = displayObject.inverseSceneTransform.transformVector(this.unproject(this._pTouchPoints[i].x, this._pTouchPoints[i].y, 1000));\n\t\t\tlocalTouchPoints.push(new TouchPoint(localPosition.x, localPosition.y, this._pTouchPoints[i].id));\n\t\t}\n\n\t\treturn localTouchPoints;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.width = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.height = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.left = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.top = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement && this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t}\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollision = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//render the contents of the scene\n\t\tthis._pRenderer.render(this._pCamera, this._pScene);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t}\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate _onPartitionChanged(event:DisplayObjectEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollision = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollision = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollision == null || collidingObject.rayEntryDistance < this._mouseManager._iCollision.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollision = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\n\nclass ParticleData\n{\n\tpublic particleIndex:number /*uint*/;\n\tpublic numVertices:number /*uint*/;\n\tpublic startVertexIndex:number /*uint*/;\n\tpublic elements:TriangleElements;\n}\n\nexport = ParticleData",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends AssetBase\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "/**\n *\n */\nclass HierarchicalProperties\n{\n\t/**\n\t *\n\t */\n\tpublic static MOUSE_ENABLED:number = 1;\n\n\t/**\n\t *\n\t */\n\tpublic static VISIBLE:number = 2;\n\n\t/**\n\t *\n\t */\n\tpublic static MASK_ID:number = 4;\n\n\t/**\n\t *\n\t */\n\tpublic static MASKS:number = 8;\n\n\t/**\n\t *\n\t */\n\tpublic static COLOR_TRANSFORM:number = 16;\n\n\t/**\n\t *\n\t */\n\tpublic static SCENE_TRANSFORM:number = 32;\n\n\t/**\n\t *\n\t */\n\tpublic static ALL:number = 63;\n}\n\nexport = HierarchicalProperties;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n *\n */\nclass Style extends EventDispatcher\n{\n\tprivate _sampler:SamplerBase;\n\tprivate _samplers:Object = new Object();\n\tprivate _image:ImageBase;\n\tprivate _images:Object = new Object();\n\tprivate _uvMatrix:Matrix;\n\tprivate _color:number = 0xFFFFFF;\n\n\tpublic get sampler():SamplerBase\n\t{\n\t\treturn this._sampler;\n\t}\n\n\tpublic set sampler(value:SamplerBase)\n\t{\n\t\tif (this._sampler == value)\n\t\t\treturn;\n\n\t\tthis._sampler = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tpublic get image():ImageBase\n\t{\n\t\treturn this._image;\n\t}\n\n\tpublic set image(value:ImageBase)\n\t{\n\t\tif (this._image == value)\n\t\t\treturn;\n\n\t\tthis._image = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tpublic get uvMatrix():Matrix\n\t{\n\t\treturn this._uvMatrix;\n\t}\n\n\tpublic set uvMatrix(value:Matrix)\n\t{\n\t\tif (this._uvMatrix == value)\n\t\t\treturn;\n\n\t\tthis._uvMatrix = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\t\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic getImageAt(texture:TextureBase, index:number = 0):ImageBase\n\t{\n\t\treturn (this._images[texture.id]? this._images[texture.id][index] : null) || this._image;\n\t}\n\n\tpublic getSamplerAt(texture:TextureBase, index:number = 0):SamplerBase\n\t{\n\t\treturn (this._samplers[texture.id]? this._samplers[texture.id][index] : null) || this._sampler;\n\t}\n\n\tpublic addImageAt(image:ImageBase, texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._images[texture.id])\n\t\t\tthis._images[texture.id] = new Array<ImageBase>();\n\n\t\tthis._images[texture.id][index] = image;\n\t}\n\n\tpublic addSamplerAt(sampler:SamplerBase, texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._samplers[texture.id])\n\t\t\tthis._samplers[texture.id] = new Array<SamplerBase>();\n\n\t\tthis._samplers[texture.id][index] = sampler;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\n\tpublic removeImageAt(texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._images[texture.id])\n\t\t\treturn;\n\n\t\tthis._images[texture.id][index] = null;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tpublic removeSamplerAt(texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._samplers[texture.id])\n\t\t\treturn;\n\n\t\tthis._samplers[texture.id][index] = null;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tprivate _invalidateProperties()\n\t{\n\t\tthis.dispatchEvent(new StyleEvent(StyleEvent.INVALIDATE_PROPERTIES, this));\n\t}\n}\n\nexport = Style;\n",
    "import HierarchicalProperties\t\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport MovieClip\t\t\t\t\t\t= require(\"awayjs-display/lib/display/MovieClip\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport DisplayObject                    = require(\"awayjs-display/lib/display/DisplayObject\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FrameScriptManager\t\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n\nclass Timeline\n{\n\tprivate _functions:Array<(child:DisplayObject, target_mc:MovieClip, i:number) => void> = [];\n\tprivate _blocked:boolean;\n\tpublic _update_indices:Array<number> = [];\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\n\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\n\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\n\n\t// synched:\n\tpublic frame_command_indices:ArrayBufferView;\n\tpublic frame_recipe:ArrayBufferView;\n\n\t// synched:\n\tpublic command_index_stream:ArrayBufferView;\n\tpublic command_length_stream:ArrayBufferView;\n\n\tpublic add_child_stream:ArrayBufferView;\n\tpublic remove_child_stream:ArrayBufferView;\n\tpublic update_child_stream:ArrayBufferView;\n\n\tpublic update_child_props_length_stream:ArrayBufferView;\n\tpublic update_child_props_indices_stream:ArrayBufferView;\n\n\tpublic property_index_stream:ArrayBufferView;\n\tpublic property_type_stream:ArrayBufferView;\n\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\n\n\t// propertiy_values_stream:\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_strings:Array<string>;\n\n\tprivate _potentialPrototypes:Array<DisplayObject>;\n\n\tpublic numKeyFrames:number=0;\n\n\tconstructor()\n\t{\n\t\tthis.keyframe_indices = [];\n\n\t\tthis._potentialPrototypes = [];\n\t\tthis._labels = {};\n\t\tthis._framescripts = {};\n\t\tthis._framescripts_translated = {};\n\n\t\t//cache functions\n\t\tthis._functions[1] = this.update_mtx_all;\n\t\tthis._functions[2] = this.update_colortransform;\n\t\tthis._functions[3] = this.update_masks;\n\t\tthis._functions[4] = this.update_name;\n\t\tthis._functions[5] = this.update_button_name;\n\t\tthis._functions[6] = this.update_visibility;\n\t\tthis._functions[11] = this.update_mtx_scale_rot;\n\t\tthis._functions[12] = this.update_mtx_pos;\n\t\tthis._functions[200] = this.enable_maskmode;\n\t\tthis._functions[201] = this.remove_masks;\n\n\t}\n\n\tpublic init():void\n\t{\n\t\tif((this.frame_command_indices == null)||(this.frame_recipe == null)||(this.keyframe_durations == null))\n\t\t\treturn;\n\n\t\tthis.keyframe_firstframes = [];\n\t\tthis.keyframe_constructframes = [];\n\t\tvar frame_cnt = 0;\n\t\tvar ic = 0;\n\t\tvar ic2 = 0;\n\t\tvar keyframe_cnt = 0;\n\t\tvar last_construct_frame = 0;\n\t\tfor(ic = 0; ic < this.numKeyFrames; ic++){\n\t\t\tvar duration=this.keyframe_durations[(ic)];\n\n\t\t\tif(this.frame_recipe[ic] & 1)\n\t\t\t\tlast_construct_frame = keyframe_cnt;\n\n\t\t\tthis.keyframe_firstframes[keyframe_cnt] = frame_cnt;\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++] = last_construct_frame;\n\n\t\t\tfor(ic2 = 0; ic2 < duration; ic2++)\n\t\t\t\tthis.keyframe_indices[frame_cnt++] = ic;\n\t\t}\n\t}\n\n\tpublic get_framescript(keyframe_index:number):string\n\t{\n\t\tif(this._framescripts[keyframe_index]==null)\n\t\t\treturn \"\";\n\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\n\t\t\treturn this._framescripts[keyframe_index];\n\t\telse{\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\n\t\t}\n\n\t\treturn \"\";\n\t}\n\tpublic add_framescript(value:string, keyframe_index:number)\n\t{\n\t\tif(FrameScriptManager.frameScriptDebug){\n\t\t\t// if we are in debug mode, we try to extract the function name from the first line of framescript code,\n\t\t\t// and check if this function is available on the object that is set as frameScriptDebug\n\t\t\t// try to get the functions name (it should be the first line as comment)\n\t\t\tvar functionname = value.split(/[\\r\\n]+/g)[0].split(\"//\")[1];\n\t\t\tif(FrameScriptManager.frameScriptDebug[functionname]){\n\t\t\t\tthis._framescripts[keyframe_index] = FrameScriptManager.frameScriptDebug[functionname];\n\t\t\t\tthis._framescripts_translated[keyframe_index]=true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthrow new Error(\"Framescript could not be found on FrameScriptManager.frameScriptDebug.\\n the Object set as FrameScriptmanager.frameScriptDebug should contain a function with the name '\"+functionname+\"' !!!\");\n\t\t\t}\n\t\t}\n\t\tthis._framescripts[keyframe_index] = value;\n\t}\n\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\n\t}\n\n\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number, scriptPass1:Boolean=false) : void\n\t{\n\t\tif(this._framescripts[keyframe_idx]!=null){\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\n\t\t\t}\n\t\t\tif(scriptPass1)\n\t\t\t\tFrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\n\t\t\telse\n\t\t\t\tFrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\n\n\t\t}\n\t}\n\n\tpublic get numFrames():number\n\t{\n\t\treturn this.keyframe_indices.length;\n\t}\n\n\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\n\t{\n\t\treturn this._potentialPrototypes[id];\n\n\t}\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\n\t{\n\t\treturn this.keyframe_indices[frame_index];\n\t}\n\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\n\t{\n\t\tvar this_clone:DisplayObject = this._potentialPrototypes[id].clone();\n\t\tthis_clone.name = \"\";\n\t\treturn this_clone;\n\t}\n\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\n\t{\n\t\tvar id = this._potentialPrototypes.length;\n\t\tthis._potentialPrototypes[id] = prototype;\n\t}\n\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\n\t{\n\t\tvar key_frame_index:number = this._labels[label];\n\t\tif(key_frame_index >= 0)\n\t\t\ttarget_mc.currentFrameIndex = this.keyframe_firstframes[key_frame_index];\n\t}\n\n\tpublic gotoFrame(target_mc:MovieClip, value:number, skip_script:boolean = false)\n\t{\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\n\n\t\tif (current_keyframe_idx == target_keyframe_idx) // already constructed - exit\n\t\t\treturn;\n\n\t\tif (current_keyframe_idx + 1 == target_keyframe_idx) { // target_keyframe_idx is the next keyframe. we can just use constructnext for this\n\t\t\tthis.constructNextFrame(target_mc, !skip_script, true);\n\t\t\treturn;\n\t\t}\n\n\t\tvar break_frame_idx:number = this.keyframe_constructframes[target_keyframe_idx];\n\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\n\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\n\n\t\t// in case we jump forward, but not jump a gap, we start at current_keyframe_idx + 1\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\n\t\tvar start_construct_idx:number = (jump_forward && !jump_gap)? current_keyframe_idx + 1 : break_frame_idx;\n\n\t\tvar i:number;\n\t\tvar k:number;\n\n\t\tif (jump_gap) // if we jump a gap forward, we just can remove all childs from mc. all script blockage will be gone\n\t\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\tif (target_mc._children[i]._depthID < 0)\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\n\t\t//if we jump back, we want to reset all objects (but not the timelines of the mcs)\n\t\tif (!jump_forward)\n\t\t\ttarget_mc.resetSessionIDs();\n\n\t\t// in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\n\t\tvar depth_sessionIDs:Object = target_mc.getSessionIDDepths();\n\n\t\t//pass1: only apply add/remove commands into depth_sessionIDs.\n\t\tthis.pass1(start_construct_idx, target_keyframe_idx, depth_sessionIDs);\n\n\t\t// check what childs are alive on both frames.\n\t\t// childs that are not alive anymore get removed and unregistered\n\t\t// childs that are alive on both frames have their properties reset if we are jumping back\n\t\tvar child:DisplayObject;\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\n\t\t\tchild = target_mc._children[i];\n\t\t\tif (child._depthID < 0) {\n\t\t\t\tif (depth_sessionIDs[child._depthID] != child._sessionID) {\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t\t} else if (!jump_forward) {\n\t\t\t\t\tif(child.adapter) {\n\t\t\t\t\t\tif (!child.adapter.isBlockedByScript()) {\n\t\t\t\t\t\t\tchild.transform.clearMatrix3D();\n\t\t\t\t\t\t\tchild.transform.clearColorTransform();\n\t\t\t\t\t\t\t//this.name=\"\";\n\t\t\t\t\t\t\tchild.masks = null;\n\t\t\t\t\t\t\tchild.maskMode = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!child.adapter.isVisibilityByScript()) {\n\t\t\t\t\t\t\tchild.visible = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// now we need to addchild the objects that were added before targetframe first\n\t\t// than we can add the script of the targetframe\n\t\t// than we can addchild objects added on targetframe\n\t\tfor (var key in depth_sessionIDs) {\n\t\t\tchild = target_mc.getPotentialChildInstance(this.add_child_stream[depth_sessionIDs[key]*2]);\n\t\t\tif (child._sessionID == -1)\n\t\t\t\ttarget_mc._addTimelineChildAt(child, Number(key), depth_sessionIDs[key]);\n\t\t}\n\n\t\tif (!skip_script && this.keyframe_firstframes[target_keyframe_idx] == value) //frame changed. and firstframe of keyframe. execute framescript if available\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\n\n\n\t\t//pass2: apply update commands for objects on stage (only if they are not blocked by script)\n\t\tthis.pass2(target_mc);\n\n\t\ttarget_mc.constructedKeyFrameIndex = target_keyframe_idx;\n\t}\n\n\tpublic pass1(start_construct_idx:number, target_keyframe_idx:number, depth_sessionIDs:Object)\n\t{\n\t\tvar i:number;\n\t\tvar k:number;\n\n\t\tthis._update_indices.length = 0;// store a list of updatecommand_indices, so we dont have to read frame_recipe again\n\t\tvar update_cnt = 0;\n\t\tvar start_index:number;\n\t\tvar end_index:number;\n\t\tfor (k = start_construct_idx; k <= target_keyframe_idx; k++) {\n\t\t\tvar frame_command_idx:number = this.frame_command_indices[k];\n\t\t\tvar frame_recipe:number = this.frame_recipe[k];\n\n\t\t\tif (frame_recipe & 2) {\n\t\t\t\t// remove childs\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\tfor (i = start_index; i < end_index; i++)\n\t\t\t\t\tdelete depth_sessionIDs[this.remove_child_stream[i] - 16383];\n\t\t\t}\n\n\t\t\tif (frame_recipe & 4) {\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t\t\t// this could be changed in exporter\n\t\t\t\tfor (i = end_index - 1; i >= start_index; i--)\n\t\t\t\t\tdepth_sessionIDs[this.add_child_stream[i*2 + 1] - 16383] = i;\n\t\t\t}\n\n\t\t\tif (frame_recipe & 8)\n\t\t\t\tthis._update_indices[update_cnt++] = frame_command_idx;// execute update command later\n\t\t}\n\t}\n\n\tpublic pass2(target_mc:MovieClip)\n\t{\n\t\tvar k:number;\n\t\tvar len:number = this._update_indices.length;\n\t\tfor (k = 0; k < len; k++)\n\t\t\tthis.update_childs(target_mc, this._update_indices[k]);\n\t}\n\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean = true, scriptPass1:Boolean = false)\n\t{\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\n\n\t\tif(queueScript && this.keyframe_firstframes[new_keyFrameIndex] == frameIndex)\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\n\n\t\tif(target_mc.constructedKeyFrameIndex != new_keyFrameIndex) {\n\t\t\ttarget_mc.constructedKeyFrameIndex = new_keyFrameIndex;\n\n\t\t\tvar frame_command_idx = this.frame_command_indices[new_keyFrameIndex];\n\t\t\tvar frame_recipe = this.frame_recipe[new_keyFrameIndex];\n\n\t\t\tif(frame_recipe & 1) {\n\t\t\t\tfor (var i:number = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\t\tif (target_mc._children[i]._depthID < 0)\n\t\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t} else if (frame_recipe & 2) {\n\t\t\t\tthis.remove_childs_continous(target_mc, frame_command_idx++);\n\t\t\t}\n\n\t\t\tif(frame_recipe & 4)\n\t\t\t\tthis.add_childs_continous(target_mc, frame_command_idx++);\n\n\t\t\tif(frame_recipe & 8)\n\t\t\t\tthis.update_childs(target_mc, frame_command_idx++);\n\t\t}\n\t}\n\n\n\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, frame_command_idx:number)\n\t{\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tfor(var i:number = start_index; i < end_index; i++)\n\t\t\tsourceMovieClip.removeChildAt(sourceMovieClip.getDepthIndexInternal(this.remove_child_stream[i] - 16383));\n\t}\n\n\n\t// used to add childs when jumping between frames\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, frame_command_idx:number)\n\t{\n\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t// this could be changed in exporter\n\t\tvar idx:number;\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tfor (var i:number = end_index - 1; i >= start_index; i--) {\n\t\t\tidx = i*2;\n\t\t\tsourceMovieClip._addTimelineChildAt(sourceMovieClip.getPotentialChildInstance(this.add_child_stream[idx]), this.add_child_stream[idx + 1] - 16383, i);\n\t\t}\n\t}\n\n\tpublic update_childs(target_mc:MovieClip, frame_command_idx:number)\n\t{\n\t\tvar p:number;\n\t\tvar props_start_idx:number;\n\t\tvar props_end_index:number;\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tvar child:DisplayObject;\n\t\tfor(var i:number = start_index; i < end_index; i++) {\n\t\t\tchild = target_mc.getChildAtSessionID(this.update_child_stream[i]);\n\t\t\tif (child) {\n\t\t\t\t// check if the child is active + not blocked by script\n\t\t\t\tthis._blocked = Boolean(child.adapter && child.adapter.isBlockedByScript());\n\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[i];\n\t\t\t\tprops_end_index = props_start_idx + this.update_child_props_length_stream[i];\n\t\t\t\tfor(p = props_start_idx; p < props_end_index; p++)\n\t\t\t\t\tthis._functions[this.property_type_stream[p]].call(this, child, target_mc, this.property_index_stream[p]);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic update_mtx_all(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 6;\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\n\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[i];\n\n\t\tchild.transform.invalidateComponents();\n\t}\n\n\tpublic update_colortransform(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 8;\n\t\tvar new_ct:ColorTransform = child.transform.colorTransform || (child.transform.colorTransform = new ColorTransform());\n\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.redOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[i];\n\n\t\tchild.transform.invalidateColorTransform();\n\t}\n\n\tpublic update_masks(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\t// an object could have multiple groups of masks, in case a graphic clip was merged into the timeline\n\t\t// this is not implmeented in the runtime yet\n\t\t// for now, a second mask-groupd would overwrite the first one\n\t\tvar mask:DisplayObject;\n\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\n\t\tvar numMasks:number = this.properties_stream_int[i++];\n\n\t\t//mask may not exist if a goto command moves the playhead to a point in the timeline after\n\t\t//one of the masks in a mask array has already been removed. Therefore a check is needed.\n\t\tfor(var m:number = 0; m < numMasks; m++)\n\t\t\tif((mask = target_mc.getChildAtSessionID(this.properties_stream_int[i++])))\n\t\t\t\tmasks.push(mask);\n\n\n\t\tchild.masks = masks;\n\t}\n\n\tpublic update_name(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.name = this.properties_stream_strings[i];\n\t\ttarget_mc.adapter.registerScriptObject(child);\n\t}\n\n\tpublic update_button_name(target:DisplayObject, sourceMovieClip:MovieClip, i:number)\n\t{\n\t\ttarget.name = this.properties_stream_strings[i];\n\t\t// todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\n\t\t(<MovieClip> target).addButtonListeners();\n\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\t}\n\n\tpublic update_visibility(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (!child.adapter || !child.adapter.isVisibilityByScript())\n\t\t\tchild.visible = Boolean(i);\n\t}\n\n\tpublic update_mtx_scale_rot(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 4;\n\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\n\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[i];\n\n\t\tchild.transform.invalidateComponents();\n\n\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\tpublic update_mtx_pos(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 2;\n\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\n\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_pos[i++];\n\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_pos[i];\n\n\t\tchild.transform.invalidatePosition();\n\t}\n\n\tpublic enable_maskmode(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.maskMode = true;\n\t}\n\n\tpublic remove_masks(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.masks = null;\n\t}\n}\n\nexport = Timeline;",
    "/**\n *\n */\nclass TouchPoint\n{\n\tx:number;\n\n\ty:number;\n\n\tid:number;\n\n\tconstructor(x:number, y:number, id:number)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.id = id;\n\t}\n}\n\nexport = TouchPoint;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport TransformEvent\t\t\t\t= require(\"awayjs-display/lib/events/TransformEvent\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform extends EventDispatcher\n{\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean;\n\tprivate _rotation:Vector3D = new Vector3D();\n\tprivate _skew:Vector3D = new Vector3D();\n\tprivate _scale:Vector3D = new Vector3D(1, 1, 1);\n\tprivate _components:Array<Vector3D>;\n\tprivate _componentsDirty:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._matrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(val:ColorTransform)\n\t{\n\t\tif (this._colorTransform == val)\n\t\t\treturn;\n\n\t\tthis._colorTransform = val;\n\n\t\tthis.invalidateColorTransform();\n\t}\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Scene.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._matrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._matrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._matrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._updateMatrix3D();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tfor (var i:number = 0; i < 15; i++)\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\n\t\t\n\t\tthis.invalidateComponents();\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._matrix3D.position;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this.matrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\treturn this._rotation;\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\tthis._rotation.x = ax;\n\t\tthis._rotation.y = ay;\n\t\tthis._rotation.z = az;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\treturn this._scale;\n\t}\n\n\tpublic scaleTo(sx:number, sy:number, sz:number)\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\tthis._scale.x = sx;\n\t\tthis._scale.y = sy;\n\t\tthis._scale.z = sz;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get skew():Vector3D\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\treturn this._skew;\n\t}\n\n\tpublic skewTo(sx:number, sy:number, sz:number)\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\tthis._skew.x = sx;\n\t\tthis._skew.y = sy;\n\t\tthis._skew.z = sz;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this.matrix3D);\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n\t\tthis._components = new Array<Vector3D>(4);\n\n\t\tthis._components[1] = this._rotation;\n\t\tthis._components[2] = this._skew;\n\t\tthis._components[3] = this._scale;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tthis._matrix3D.rawData[12] = dx;\n\t\tthis._matrix3D.rawData[13] = dy;\n\t\tthis._matrix3D.rawData[14] = dz;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tthis.matrix3D.prependRotation(angle, axis);\n\n\t\tthis.invalidateComponents();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.matrix3D.appendTranslation(x*len, y*len, z*len);\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.matrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis.invalidatePosition();\n\t}\n\n\tpublic clearMatrix3D()\n\t{\n\t\tthis._matrix3D.identity();\n\t\tthis.invalidateComponents();\n\t}\n\n\tpublic clearColorTransform()\n\t{\n\t\tif (!this._colorTransform)\n\t\t\treturn;\n\t\t\n\t\tthis._colorTransform.clear();\n\t\tthis.invalidateColorTransform();\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tpublic invalidateMatrix3D():void\n\t{\n\t\tthis._matrix3DDirty = true;\n\t\t\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_MATRIX3D, this));\n\t}\n\n\tpublic invalidateComponents()\n\t{\n\t\tthis.invalidatePosition();\n\t\t\n\t\tthis._componentsDirty = true;\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic invalidatePosition()\n\t{\n\t\tthis._matrix3D.invalidatePosition();\n\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_MATRIX3D, this));\n\t}\n\n\tpublic invalidateColorTransform()\n\t{\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_COLOR_TRANSFORM, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _updateMatrix3D()\n\t{\n\t\tthis._matrix3D.recompose(this._components);\n\n\t\tthis._matrix3DDirty = false;\n\t}\n\n\n\tprivate _updateComponents()\n\t{\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[1];\n\n\t\tthis._rotation.x = vec.x;\n\t\tthis._rotation.y = vec.y;\n\t\tthis._rotation.z = vec.z;\n\n\t\tvec = elements[2];\n\n\t\tthis._skew.x = vec.x;\n\t\tthis._skew.y = vec.y;\n\t\tthis._skew.z = vec.z;\n\n\t\tvec = elements[3];\n\n\t\tthis._scale.x = vec.x;\n\t\tthis._scale.y = vec.y;\n\t\tthis._scale.z = vec.z;\n\n\t\tthis._componentsDirty = false;\n\t}\n}\n\nexport = Transform;\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ElementsType\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport Sprite\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most sprites.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tpublic _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Sprite\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab(null, ElementsType.LINE);\n\n\t\treturn <Sprite> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ElementsType\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport Sprite\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Sprite\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab(null, ElementsType.LINE);\n\n\t\treturn <Sprite> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport Sprite\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Sprite;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pEntity = null;\n\t\tthis._pBoundsPrimitive = null;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pInvalidated = true;\n\t\t}\n\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Sprite\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\n\nclass ControllerBase\n{\n\tpublic _pControllerDirty:boolean;\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject)\n\t\t\tthis._pTargetObject.invalidatePartitionBounds();\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val)\n\t\t\treturn;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = null;\n\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = this;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val)\n\t\t\treturn;\n\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pAutoUpdate)\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\telse\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic updateController()\n\t{\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\n\t\t\tthis._pControllerDirty = false;\n\t\t\tthis.pNotifyUpdate();\n\t\t}\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\tthis._pControllerDirty = true;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport ITraverser\t\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport RenderableEvent\t\t\t\t= require(\"awayjs-display/lib/events/RenderableEvent\");\nimport SurfaceEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SurfaceEvent\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollision\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollision\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderable\n{\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _billboardRect:Rectangle;\n\tprivate _material:MaterialBase;\n\n\tprivate _style:Style;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate onInvalidateTextureDelegate:(event:SurfaceEvent) => void;\n\n\n\t/**\n\t * Defines the animator of the sprite. Act on the sprite's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardRect():Rectangle\n\t{\n\t\treturn this._billboardRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(SurfaceEvent.INVALIDATE_TEXTURE, this.onInvalidateTextureDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(SurfaceEvent.INVALIDATE_TEXTURE, this.onInvalidateTextureDelegate);\n\t\t}\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onInvalidateTextureDelegate = (event:SurfaceEvent) => this.onInvalidateTexture(event);\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\n\t\tthis.material = material;\n\n\t\tthis._updateDimensions();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Billboard = new Billboard(this.material);\n\t\treturn clone;\n\t}\n\n\t/**\n\t * The style used to render the current Billboard. If set to null, the default style of the material will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._onInvalidateProperties();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(pickingCollision:PickingCollision, pickingCollider:IPickingCollider):boolean\n\t{\n\t\treturn pickingCollider.testBillboardCollision(this, this.material, pickingCollision);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onInvalidateTexture(event:SurfaceEvent)\n\t{\n\t\tthis._updateDimensions();\n\t}\n\n\tpublic _acceptTraverser(traverser:ITraverser)\n\t{\n\t\ttraverser.applyRenderable(this);\n\t}\n\n\tprivate _updateDimensions()\n\t{\n\t\tvar texture:TextureBase = this.material.getTextureAt(0);\n\n\t\tvar image:Image2D = texture? <Image2D> ((this._style? this._style.getImageAt(texture) : null) || (this.material.style? this.material.style.getImageAt(texture) : null) || texture.getImageAt(0)) : null;\n\n\t\tif (image) {\n\t\t\tvar sampler:Sampler2D = <Sampler2D> ((this._style? this._style.getSamplerAt(texture) : null) || (this.material.style? this.material.style.getSamplerAt(texture) : null) || texture.getSamplerAt(0) || DefaultMaterialManager.getDefaultSampler());\n\t\t\tif (sampler.imageRect) {\n\t\t\t\tthis._billboardWidth = sampler.imageRect.width*image.width;\n\t\t\t\tthis._billboardHeight = sampler.imageRect.height*image.height;\n\t\t\t} else {\n\t\t\t\tthis._billboardWidth = image.rect.width;\n\t\t\t\tthis._billboardHeight = image.rect.height;\n\t\t\t}\n\n\t\t\tthis._billboardRect = sampler.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\t\t} else {\n\t\t\tthis._billboardWidth = 1;\n\t\t\tthis._billboardHeight = 1;\n\t\t\tthis._billboardRect = new Rectangle(0, 0, 1, 1);\n\t\t}\n\n\t\tthis._pInvalidateBounds();\n\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_ELEMENTS, this));\n\t}\n\n\n\tpublic invalidateSurface()\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_RENDER_OWNER, this));\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent = null)\n\t{\n\t\tthis.invalidateSurface();\n\n\t\tthis._updateDimensions();\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:Float32Array = this.viewProjection.rawData;\n\t\tvar invLen:number;\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number):boolean\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._viewProjectionDirty = true;\n\t\t\tthis._frustumPlanesDirty = true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-sprites, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//nothing to do here\n\t}\n}\n\nexport = Camera;",
    "import Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/display/LightBase\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light DirectionalLight]\";\n\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn DirectionalLight.assetType;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, cameraTransform:Matrix3D, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(cameraTransform));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\nimport Extensions\t\t\t\t\t= require(\"awayjs-core/lib/utils/Extensions\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _mouseChildren:boolean = true;\n\tprivate _depth_childs:Object = {};\n\tprivate _nextHighestDepth:number = 0;\n\tprivate _nextHighestDepthDirty:boolean;\n\tpublic _children:Array<DisplayObject> = new Array<DisplayObject>();\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MOUSE_ENABLED);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this.addChildAt(child, this._children.length);\n\t}\n\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new ArgumentError(\"Parameter child cannot be null.\");\n\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\n\n\n\t\tvar index = this.getDepthIndexInternal(depth);\n\n\t\tif (index != -1) {\n\t\t\tif (replace) {\n\t\t\t\tthis.removeChildAt(index);\n\t\t\t} else {\n\t\t\t\t//move depth of existing child up by 1\n\t\t\t\tthis.addChildAtDepth(this._children[index], depth + 1, false);\n\t\t\t}\n\t\t}\n\n\t\tif (this._nextHighestDepth < depth + 1)\n\t\t\tthis._nextHighestDepth = depth + 1;\n\n\t\tthis._depth_childs[depth] = child;\n\t\tthis._children.push(child);\n\n\t\tchild._depthID = depth;\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._invalidateChildren();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\n\t{\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._children[index]._depthID : this.getNextHighestDepth(), false);\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObjectContainer\n\t{\n\t\tvar newInstance:DisplayObjectContainer = new DisplayObjectContainer();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObjectContainer)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.mouseChildren = this._mouseChildren;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance.addChild(this._children[i].clone());\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeValues()\n\t{\n\t\tfor (var i:number = this._children.length - 1; i >= 0; i--)\n\t\t\tthis.removeChild(this._children[i]);\n\n\t\tsuper.disposeValues();\n\t}\n\n\tpublic getChildAtDepth(depth:number):DisplayObject\n\t{\n\t\treturn this._depth_childs[depth];\n\t}\n\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\tpublic getNextHighestDepth()\n\t{\n\t\tif (this._nextHighestDepthDirty)\n\t\t\tthis._updateNextHighestDepth();\n\n\t\treturn this._nextHighestDepth;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new ArgumentError(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildAt(this.getChildIndex(child));\n\n\t\treturn child;\n\t}\n\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\n\t}\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\n\n\t\tchild.iSetParent(null);\n\n\t\tthis._invalidateChildren();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number, index2:number)\n\t{\n\t\tvar depth:number = this._children[index2]._depthID;\n\t\tvar child:DisplayObject = this._children[index1];\n\n\t\tthis.addChildAtDepth(this._children[index2], this._children[index1]._depthID);\n\t\tthis.addChildAtDepth(child, depth);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar box:Box;\n\t\tvar numChildren:number = this._children.length;\n\n\t\tif (numChildren > 0) {\n\t\t\tvar min:number;\n\t\t\tvar max:number;\n\t\t\tvar minX:number, minY:number, minZ:number;\n\t\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\n\t\t\t\tbox = this._children[i].getBox(this);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\n\t\t\t\t} else {\n\t\t\t\t\tmax = box.width + (min = box.x);\n\t\t\t\t\tif (min < minX)\n\t\t\t\t\t\tminX = min;\n\t\t\t\t\tif (max > maxX)\n\t\t\t\t\t\tmaxX = max;\n\n\t\t\t\t\tmax = box.height + (min = box.y);\n\t\t\t\t\tif (min < minY)\n\t\t\t\t\t\tminY = min;\n\t\t\t\t\tif (max > maxY)\n\t\t\t\t\t\tmaxY = max;\n\n\t\t\t\t\tmax = box.depth + (min = box.z);\n\t\t\t\t\tif (min < minZ)\n\t\t\t\t\t\tminZ = min;\n\t\t\t\t\tif (max > maxZ)\n\t\t\t\t\t\tmaxZ = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number)\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateHierarchicalProperties(bitFlag);\n\n\t\treturn false;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene, partition:PartitionBase)\n\t{\n\t\tsuper._iSetScene(value, partition);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._iSetScene(value, partition);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tpublic removeChildAtInternal(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\n\n\t\t//update next highest depth\n\t\tif (this._nextHighestDepth == child._depthID + 1)\n\t\t\tthis._nextHighestDepthDirty = true;\n\n\t\tdelete this._depth_childs[child._depthID];\n\n\t\tchild._depthID = -16384;\n\n\t\treturn child;\n\t}\n\n\tpublic getDepthIndexInternal(depth:number /*int*/):number\n\t{\n\t\tif (!this._depth_childs[depth])\n\t\t\treturn -1;\n\n\t\treturn this._children.indexOf(this._depth_childs[depth]);\n\t}\n\n\tprivate _updateNextHighestDepth()\n\t{\n\t\tthis._nextHighestDepthDirty = false;\n\n\t\tthis._nextHighestDepth = 0;\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._nextHighestDepth < this._children[i]._depthID)\n\t\t\t\tthis._nextHighestDepth = this._children[i]._depthID;\n\n\t\tthis._nextHighestDepth += 1;\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tvar numChildren:number = this._children.length;\n\t\tfor(var i:number = 0; i < numChildren; i++)\n\t\t\tif(this._children[i].hitTestPoint(x,y, shapeFlag, masksFlag))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tpublic _updateMaskMode()\n\t{\n\t\tif (this.maskMode)\n\t\t\tthis.mouseChildren = false;\n\n\t\tsuper._updateMaskMode();\n\t}\n\n\tprivate _invalidateChildren()\n\t{\n\t\tif (this._pIsContainer != Boolean(this._children.length)) {\n\t\t\tif (this._pImplicitPartition)\n\t\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\n\t\t\tthis._pIsContainer = Boolean(this._children.length);\n\n\t\t\tif (this._pImplicitPartition)\n\t\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tthis._pInvalidateBounds();\n\t}\n}\n\nexport = DisplayObjectContainer;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-core/lib/library/LoaderInfo\");\nimport EventBase\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IDisplayObjectAdapter\t\t= require(\"awayjs-display/lib/adapters/IDisplayObjectAdapter\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollision\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollision\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport TransformEvent\t\t\t\t= require(\"awayjs-display/lib/events/TransformEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\nimport ITraverser\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\n{\n\tpublic _iIsRoot:boolean;\n\tpublic _adapter:IDisplayObjectAdapter;\n\tprivate _queuedEvents:Array<EventBase> = new Array<EventBase>();\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\tpublic _pName:string;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pIsEntity:boolean = false;\n\tpublic _pIsContainer:boolean = false;\n\tpublic _sessionID:number = -1;\n\tpublic _depthID:number = -16384;\n\n\tprivate _explicitPartition:PartitionBase;\n\tpublic _pImplicitPartition:PartitionBase;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _sceneChanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean;\n\tprivate _explicitVisibility:boolean = true;\n\tprivate _explicitMaskId:number = -1;\n\tpublic _explicitMasks:Array<DisplayObject>;\n\tpublic _pImplicitVisibility:boolean = true;\n\tpublic _pImplicitMaskId:number = -1;\n\tpublic _pImplicitMasks:Array<Array<DisplayObject>>;\n\tpublic _pImplicitMaskIds:Array<Array<number>> = new Array<Array<number>>();\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tpublic _pImplicitColorTransform:ColorTransform;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _matrix3DDirty:boolean;\n\tprivate _positionDirty:boolean;\n\tprivate _rotationDirty:boolean;\n\tprivate _skewDirty:boolean;\n\tprivate _scaleDirty:boolean;\n\n\tprivate _eulers:Vector3D;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tprivate _pivot:Vector3D;\n\tprivate _pivotScale:Vector3D;\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pickingCollider:IPickingCollider;\n\tprivate _pickingCollision:PickingCollision;\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _boundsType:string;\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n    private _inheritColorTransform:boolean = false;\n\tprivate _maskMode:boolean = false;\n\n\tpublic _hierarchicalPropsDirty:number;\n\n\t//temp vector used in global to local\n\tprivate _tempVector3D:Vector3D = new Vector3D();\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IDisplayObjectAdapter\n\t{\n\t\treturn this._adapter;\n\t}\n\n\tpublic set adapter(value:IDisplayObjectAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    public get inheritColorTransform():boolean\n    {\n        return this._inheritColorTransform;\n    }\n\n    public set inheritColorTransform(value:boolean)\n    {\n\t\tif (this._inheritColorTransform == value)\n\t\t\treturn;\n\n        this._inheritColorTransform = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n    }\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic get alpha():number\n    {\n        return this._transform.colorTransform? this._transform.colorTransform.alphaMultiplier : 1;\n    }\n\n    public set alpha(value:number)\n    {\n\t\tif (!this._transform.colorTransform)\n\t\t\tthis._transform.colorTransform = new ColorTransform();\n\n        this._transform.colorTransform.alphaMultiplier = value;\n    }\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis.invalidate();\n\t\t\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this.scaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._setScaleZ(val/this.getBox().depth);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tif (!this._eulers)\n\t\t\tthis._eulers = new Vector3D();\n\n\t\tthis._eulers.x = this.rotationX;\n\t\tthis._eulers.y = this.rotationY;\n\t\tthis._eulers.z = this.rotationZ;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis.rotationX = value.x;\n\t\tthis.rotationY = value.y;\n\t\tthis.rotationZ = value.z;\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this.scaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._setScaleY(val/this.getBox().height);\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isContainer()\n\t{\n\t\treturn this._pIsContainer;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\tpublic get maskMode():boolean\n\t{\n\t\treturn this._maskMode;\n\t}\n\n\tpublic set maskMode(value:boolean)\n\t{\n\t\tif (this._maskMode == value)\n\t\t\treturn;\n\n\t\tthis._maskMode = value;\n\n\t\tthis._explicitMaskId = value? this.id : -1;\n\n\t\tthis._updateMaskMode();\n\t}\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic get name() :string\n    {\n        return this._pName;\n    }\n\n    public set name(value : string)\n    {\n        this._pName = value;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():PartitionBase\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:PartitionBase)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._iSetScene(this._pScene, this._pParent? this._pParent._iAssignedPartition : null);\n\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.PARTITION_CHANGED, this));\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pickingCollider:IPickingCollider;\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tif (this._pivot && this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\n\t\t\treturn;\n\n\t\tif (!pivot) {\n\t\t\tthis._pivot = null;\n\t\t\tthis._pivotScale = null;\n\t\t} else {\n\t\t\tif (!this._pivot)\n\t\t\t\tthis._pivot = new Vector3D();\n\n\t\t\tthis._pivot.x = pivot.x;\n\t\t\tthis._pivot.y = pivot.y;\n\t\t\tthis._pivot.z = pivot.z;\n\t\t}\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\treturn this._transform.rotation.x*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._transform.rotation.x = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\treturn this._transform.rotation.y*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._transform.rotation.y = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\treturn this._transform.rotation.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._transform.rotation.z = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\treturn this._transform.scale.x;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tthis._setScaleX(val);\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\treturn this._transform.scale.y;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tthis._setScaleY(val);\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\treturn this._transform.scale.z;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tthis._setScaleZ(val);\n\t}\n\n\t/**\n\t * Indicates the horizontal skew(angle) of the object as applied from\n\t * the registration point. The default registration point is(0,0).\n\t */\n\tpublic get skewX():number\n\t{\n\t\treturn this._transform.skew.x;\n\t}\n\n\tpublic set skewX(val:number)\n\t{\n\t\tif (this.skewX == val)\n\t\t\treturn;\n\n\t\tthis._transform.skew.x = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the vertical skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewY():number\n\t{\n\t\treturn this._transform.skew.y;\n\t}\n\n\tpublic set skewY(val:number)\n\t{\n\t\tif (this.skewY == val)\n\t\t\treturn;\n\n\t\tthis._transform.skew.y = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the depth skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewZ():number\n\t{\n\t\treturn this._transform.skew.z;\n\t}\n\n\tpublic set skewZ(val:number)\n\t{\n\t\tif (this.skewZ == val)\n\t\t\treturn;\n\n\t\tthis._transform.skew.z = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (this._pivot && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.VISIBLE);\n\t}\n\n\tpublic get masks():Array<DisplayObject>\n\t{\n\t\treturn this._explicitMasks;\n\t}\n\n\tpublic set masks(value:Array<DisplayObject>)\n\t{\n\t\tif (this._explicitMasks == value)\n\t\t\treturn;\n\n\t\tthis._explicitMasks = value;\n\n\t\t//make sure maskMode is set to true for all masks\n\t\tif (value != null && value.length) {\n\t\t\tvar len:number = value.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tvalue[i].maskMode = true;\n\t\t}\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASKS);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this.scaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._setScaleX(val/this.getBox().width);\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._transform.position.x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._transform.position.x == val)\n\t\t\treturn;\n\n\t\tthis._transform.matrix3D.rawData[12] = val;\n\n\t\tthis._transform.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._transform.position.y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._transform.position.y == val)\n\t\t\treturn;\n\n\t\tthis._transform.matrix3D.rawData[13] = val;\n\n\t\tthis._transform.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._transform.position.z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._transform.position.z == val)\n\t\t\treturn;\n\n\t\tthis._transform.matrix3D.rawData[14] = val;\n\n\t\tthis._transform.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic zOffset:number = 0;\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform();\n\n\t\t//setup transform listeners\n\t\tthis._transform.addEventListener(TransformEvent.INVALIDATE_MATRIX3D, (event:TransformEvent) => this._onInvalidateMatrix3D(event));\n\t\tthis._transform.addEventListener(TransformEvent.INVALIDATE_COLOR_TRANSFORM, (event:TransformEvent) => this._onInvalidateColorTransform(event));\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:(event:EventBase) => void)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar newInstance:DisplayObject = new DisplayObject();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObject)\n\t{\n\t\tnewInstance.partition = this._explicitPartition;\n\t\tnewInstance.boundsType = this._boundsType;\n\t\tnewInstance.pivot = this._pivot;\n\t\tnewInstance.name = this._pName;\n\t\tnewInstance.mouseEnabled = this._explicitMouseEnabled;\n\t\tnewInstance.extra = this.extra;\n\t\tnewInstance.maskMode = this._maskMode;\n\t\tnewInstance.castsShadows = this.castsShadows;\n\n\t\tif (this._explicitMasks)\n\t\t\tnewInstance.masks = this._explicitMasks;\n\n\t\tif (this._adapter)\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\n\n\t\tnewInstance._transform.matrix3D = this._transform.matrix3D;\n\n\t\tif (this._transform.colorTransform)\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\t}\n\n\tpublic disposeValues()\n\t{\n\t\tif (this._pParent)\n\t\t\tthis._pParent.removeChild(this);\n\n\t\t//if (this._adapter) {\n\t\t//\tthis._adapter.dispose();\n\t\t//\tthis._adapter = null;\n\t\t//}\n\n\t\t//this._pos = null;\n\t\t//this._rot = null;\n\t\t//this._sca = null;\n\t\t//this._ske = null;\n\t\t//this._transformComponents = null;\n\t\t//this._transform.dispose();\n\t\t//this._transform = null;\n\t\t//\n\t\t//this._matrix3D = null;\n\t\t//this._pSceneTransform = null;\n\t\t//this._inverseSceneTransform = null;\n\n\t\tthis._explicitMasks = null;\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\t//scale updates if absolute dimensions are detected\n\t\t\tif (this._width != null)\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\n\n\t\t\tif (this._height != null)\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\n\n\t\t\tif (this._depth != null)\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\n\t\t}\n\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\n\t\t\treturn this._pBoxBounds;\n\n\t\tif (targetCoordinateSpace == this._pParent)\n\t\t\treturn this._transform.matrix3D.transformBox(this._pBoxBounds);\n\t\telse\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid)\n\t\t\tthis._pUpdateSphereBounds();\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\tvar objBox:Box = obj.getBox();\n\t\tif(!objBox) return false;\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\n\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n\n\t\tvar box:Box = this.getBox();\n\t\tif(!box) return false;\n\n\t\t//first check all points against targer box\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\n\n\t\t//now test against obj box\n\t\tvar n0x:number = topRight.y - topLeft.y;\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\n\n\t\tvar n1x:number = bottomRight.y - topRight.y;\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\n\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\n\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\n\n\t\tvar p0x:number = box.left - topLeft.x;\n\t\tvar p0y:number = box.top - topLeft.y;\n\t\tvar p1x:number = box.left - topRight.x;\n\t\tvar p1y:number = box.top - topRight.y;\n\t\tvar p2x:number = box.left - bottomRight.x;\n\t\tvar p2y:number = box.top - bottomRight.y;\n\t\tvar p3x:number = box.left - bottomLeft.x;\n\t\tvar p3y:number = box.top - bottomLeft.y;\n\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.top - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.top - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.top - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.top - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.left - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.left - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.left - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.left - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @param maskFlag Whether to check against the object when it is used as mask\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag = false):boolean\n\t{\n\t\tif(!this._pImplicitVisibility)\n\t\t\treturn;\n\n\t\tif(this._pImplicitMaskId != -1 && !masksFlag)\n\t\t\treturn;\n\n\t\tif (this._explicitMasks) {\n\t\t\tvar numMasks:number = this._explicitMasks.length;\n\t\t\tvar maskHit:boolean = false;\n\t\t\tfor (var i:number = 0; i < numMasks; i++) {\n\t\t\t\tif (this._explicitMasks[i].hitTestPoint(x, y, shapeFlag, true)) {\n\t\t\t\t\tmaskHit = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!maskHit)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn this._hitTestPointInternal(x, y, shapeFlag, masksFlag);\n\t}\n\n\tpublic isMask():boolean\n\t{\n\t\treturn this._explicitMaskId == -1;\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Float32Array;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._transform.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (dx == 0 && dy == 0 && dz == 0)\n\t\t\treturn;\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\tpublic reset():void\n\t{\n\t\tthis.visible = true;\n\n\t\tif(this._transform.matrix3D)\n\t\t\tthis._transform.clearMatrix3D();\n\n\t\tif(this._transform.colorTransform)\n\t\t\tthis._transform.clearColorTransform();\n\n\t\t//this.name=\"\";\n\t\tthis.masks = null;\n\n\t\tthis.maskMode = false;\n\t}\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(cameraTransform:Matrix3D):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = cameraTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[3];\n\t\t\tcomps[0].copyFrom(this.scenePosition);\n\t\t\tscale.x = this.scaleX;\n\t\t\tscale.y = this.scaleY;\n\t\t\tscale.z = this.scaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (this._pivot && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:(event:EventBase) => void)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():PartitionBase\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollision():PickingCollision\n\t{\n\t\tif (!this._pickingCollision)\n\t\t\tthis._pickingCollision = new PickingCollision(this);\n\n\t\treturn this._pickingCollision;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tthis._pParent = value;\n\n        if (value)\n\t\t\tthis._iSetScene(value._pScene, value._iAssignedPartition);\n\t\telse\n\t\t\tthis._iSetScene(null, null);\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.ALL);\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(propDirty:number):boolean\n\t{\n\t\tvar newPropDirty:number = (this._hierarchicalPropsDirty ^ propDirty) & propDirty;\n\t\tif (!newPropDirty)\n\t\t\treturn true;\n\n\t\tthis._hierarchicalPropsDirty |= propDirty;\n\n\t\tif (newPropDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._inverseSceneTransformDirty = true;\n\t\t\tthis._scenePositionDirty = true;\n\n\t\t\tif (this.isEntity)\n\t\t\t\tthis.invalidatePartitionBounds();\n\n\t\t\tif (this._pParent)\n\t\t\t\tthis._pParent._pInvalidateBounds();\n\n\t\t\tif (this._listenToSceneTransformChanged)\n\t\t\t\tthis.queueDispatch(this._sceneTransformChanged || (this._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this)));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _iSetScene(scene:Scene, partition:PartitionBase)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\n\t\t\t//gc abstraction objects\n\t\t\tthis.clear();\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tif (sceneChanged && this._listenToSceneChanged)\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.updateController();\n\n\t\tthis._pSceneTransform.copyFrom(this._transform.matrix3D);\n\n\t\tif (this._pivot) {\n\t\t\tif (!this._pivotScale)\n\t\t\t\tthis._pivotScale = new Vector3D();\n\n\t\t\tthis._pivotScale.x = this._pivot.x/this._transform.scale.x;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._transform.scale.y;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._transform.scale.z;\n\t\t\tthis._pSceneTransform.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._pSceneTransform.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\n\t\tif (this._pParent && !this._pParent._iIsRoot)\n\t\t\tthis._pSceneTransform.append(this._pParent.sceneTransform);\n\n\t\tthis._matrix3DDirty = false;\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._skewDirty = false;\n\t\tthis._scaleDirty = false;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.SCENE_TRANSFORM;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\n\n\t\tthis._queuedEvents.length = 0;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.VISIBLE)\n\t\t\tthis._updateVisible();\n\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMaskId():number\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASK_ID)\n\t\t\tthis._updateMaskId();\n\n\t\treturn this._pImplicitMaskId;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMasks():Array<Array<DisplayObject>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMasks;\n\t}\n\n\tpublic _iMasksConfig():Array<Array<number>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMaskIds;\n\t}\n\n\tpublic _iAssignedColorTransform():ColorTransform\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.COLOR_TRANSFORM)\n\t\t\tthis._updateColorTransform();\n\n\t\treturn this._pImplicitColorTransform;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n\t}\n\n\tpublic _acceptTraverser(collector:ITraverser)\n\t{\n\t\t//nothing to do here\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate _onInvalidateMatrix3D(event:TransformEvent)\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate _onInvalidateColorTransform(event:TransformEvent)\n\t{\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartitionBounds();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n\n\tprivate queueDispatch(event:EventBase)\n\t{\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\tprivate _setScaleX(val:number)\n\t{\n\t\tif (this.scaleX == val)\n\t\t\treturn;\n\n\t\tthis._transform.scale.x = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\tprivate _setScaleY(val:number)\n\t{\n\t\tif (this.scaleY == val)\n\t\t\treturn;\n\n\t\tthis._transform.scale.y = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\tprivate _setScaleZ(val:number)\n\t{\n\t\tif (this.scaleZ == val)\n\t\t\treturn;\n\n\t\tthis._transform.scale.z = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\tpublic _updateMouseEnabled()\n\t{\n\t\tthis._pImplicitMouseEnabled = (this._pParent)? this._pParent.mouseChildren && this._pParent._pImplicitMouseEnabled : true;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this.pickingCollider)\n\t\t\tthis.pickingCollider =  this._pParent.pickingCollider;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MOUSE_ENABLED;\n\t}\n\n\tprivate _updateVisible()\n\t{\n\t\tthis._pImplicitVisibility = (this._pParent)? this._explicitVisibility && this._pParent._iIsVisible() : this._explicitVisibility;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.VISIBLE;\n\t}\n\n\tprivate _updateMaskId()\n\t{\n\t\tthis._pImplicitMaskId = (this._pParent && this._pParent._iAssignedMaskId() != -1)? this._pParent._iAssignedMaskId() : this._explicitMaskId;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASK_ID;\n\t}\n\n\tprivate _updateMasks()\n\t{\n\t\tthis._pImplicitMasks = (this._pParent && this._pParent._iAssignedMasks())? (this._explicitMasks != null)? this._pParent._iAssignedMasks().concat([this._explicitMasks]) : this._pParent._iAssignedMasks().concat() : (this._explicitMasks != null)? [this._explicitMasks] : null;\n\n\t\tthis._pImplicitMaskIds.length = 0;\n\n\t\tif (this._pImplicitMasks && this._pImplicitMasks.length) {\n\t\t\tvar numLayers:number = this._pImplicitMasks.length;\n\t\t\tvar numChildren:number;\n\t\t\tvar implicitChildren:Array<DisplayObject>;\n\t\t\tvar implicitChildIds:Array<number>;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\timplicitChildren = this._pImplicitMasks[i];\n\t\t\t\tnumChildren = implicitChildren.length;\n\t\t\t\timplicitChildIds = new Array<number>();\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++)\n\t\t\t\t\timplicitChildIds.push(implicitChildren[j].id);\n\n\t\t\t\tthis._pImplicitMaskIds.push(implicitChildIds);\n\t\t\t}\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASKS;\n\t}\n\n\tprivate _updateColorTransform()\n\t{\n\t\tif (!this._pImplicitColorTransform)\n\t\t\tthis._pImplicitColorTransform = new ColorTransform();\n\n\t\tif (this._inheritColorTransform && this._pParent && this._pParent._iAssignedColorTransform()) {\n\t\t\tthis._pImplicitColorTransform.copyFrom(this._pParent._iAssignedColorTransform());\n\n\t\t\tif (this._transform.colorTransform)\n\t\t\t\tthis._pImplicitColorTransform.prepend(this._transform.colorTransform);\n\t\t} else {\n\t\t\tif (this._transform.colorTransform)\n\t\t\t\tthis._pImplicitColorTransform.copyFrom(this._transform.colorTransform);\n\t\t\telse\n\t\t\t\tthis._pImplicitColorTransform.clear();\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.COLOR_TRANSFORM;\n\t}\n\n\tpublic _updateMaskMode()\n\t{\n\t\tif (this.maskMode)\n\t\t\tthis.mouseEnabled = false;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASK_ID);\n\t}\n\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tvar i:number;\n\n\t\tthis._pImplicitColorTransform = null;\n\t\tthis._pImplicitMasks = null;\n\t}\n\n\tpublic invalidatePartitionBounds()\n\t{\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this));\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _shadowsEnabled:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get shadowsEnabled():boolean\n\t{\n\t\treturn this._shadowsEnabled;\n\t}\n\n\tpublic set shadowsEnabled(value:boolean)\n\t{\n\t\tif (this._shadowsEnabled == value)\n\t\t\treturn;\n\n\t\tthis._shadowsEnabled = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, cameraTransform:Matrix3D, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageCube\");\nimport SamplerCube\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerCube\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ErrorBase\t\t\t\t\t= require(\"awayjs-core/lib/errors/ErrorBase\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/display/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light LightProbe]\";\n\n\tpublic diffuseMap:ImageCube;\n\n\tpublic diffuseSampler:SamplerCube = new SamplerCube();\n\n\tpublic specularMap:ImageCube;\n\n\tpublic specularSampler:SamplerCube = new SamplerCube();\n\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.diffuseMap = diffuseMap;\n\t\tthis.specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn LightProbe.assetType;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, cameraTransform:Matrix3D, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new ErrorBase(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n}\n\nexport = LightProbe;",
    "﻿import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ITraverser\t\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport RenderableEvent\t\t\t\t= require(\"awayjs-display/lib/events/RenderableEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollision\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollision\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderable\n{\n\tprivate _style:Style;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.invalidateGraphics();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.invalidateGraphics();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.invalidateGraphics();\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t * The style used to render the current LineSegment. If set to null, the default style of the material will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis.invalidateSurface();\n\t}\n\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateGraphics()\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_ELEMENTS, this));//TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic invalidateSurface()\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_RENDER_OWNER, this));\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidateSurface();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(pickingCollision:PickingCollision, pickingCollider:IPickingCollider):boolean\n\t{\n\t\treturn false; //TODO: detect line collisions\n\t}\n\n\tpublic _acceptTraverser(traverser:ITraverser)\n\t{\n\t\ttraverser.applyRenderable(this);\n\t}\n}\n\nexport = LineSegment;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport Loader\t\t\t\t\t\t= require(\"awayjs-core/lib/library/Loader\");\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport URLLoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/URLLoaderEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\n\n/**\n * The LoaderContainer class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the LoaderContainer object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The LoaderContainer class overrides the following methods that it inherits,\n * because a LoaderContainer object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>LoaderContainer</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The LoaderContainer and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the LoaderContainer class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the LoaderContainer object's root SWF file), you may want to define a\n * mask for the LoaderContainer object, to prevent the loaded content(which is a child\n * of the LoaderContainer object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass LoaderContainer extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (sprites, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loader:Loader;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onLoadCompleteDelegate:(event:LoaderEvent) => void;\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:URLLoaderEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\tprivate _content:DisplayObject;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onLoadCompleteDelegate = (event:LoaderEvent) => this.onLoadComplete(event);\n\t\tthis._onLoadErrorDelegate = (event:URLLoaderEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (!this._loader)\n\t\t\treturn;\n\t\t\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.disposeLoader(this._loader);\n\t\t}\n\t\t\n\t\tthis._disposeLoader();\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, Loader will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoader().load(request, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoader().loadData(data, '', context, ns, parser);\n\t}\n\n\tprivate _getLoader()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tthis._loader = lib.getLoader();\n\t\t} else {\n\t\t\tthis._loader = new Loader();\n\t\t}\n\n\t\tthis._loader.addEventListener(LoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n\t\tthis._loader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tthis._loader._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tthis._loader._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn this._loader;\n\t}\n\n\tprivate _disposeLoader()\n\t{\n\t\tthis._loader.removeEventListener(LoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n\t\tthis._loader.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loader.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\tif (!this._useAssetLib)\n\t\t\tthis._loader.stop();\n\n\t\tthis._loader = null;\n\t}\n\t\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoader.enableParsers(parserClasses);\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:URLLoaderEvent):boolean\n\t{\n\t\tif (this.hasEventListener(URLLoaderEvent.LOAD_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onLoadComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis._disposeLoader();\n\t}\n}\n\nexport = LoaderContainer;",
    "import AssetEvent                   = require(\"awayjs-core/lib/events/AssetEvent\");\nimport ColorTransform               = require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport DisplayObject                = require(\"awayjs-display/lib/display/DisplayObject\");\nimport Sprite                       = require(\"awayjs-display/lib/display/Sprite\");\nimport Billboard                    = require(\"awayjs-display/lib/display/Billboard\");\nimport TextField                    = require(\"awayjs-display/lib/display/TextField\");\nimport MouseEvent                   = require(\"awayjs-display/lib/events/MouseEvent\");\nimport IMovieClipAdapter\t    \t= require(\"awayjs-display/lib/adapters/IMovieClipAdapter\");\nimport Timeline                     = require(\"awayjs-display/lib/base/Timeline\");\nimport FrameScriptManager           = require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\nclass MovieClip extends Sprite\n{\n\tprivate static _skipAdvance:boolean;\n\n\tprivate static _movieClips:Array<MovieClip> = new Array<MovieClip>();\n\n\tpublic static assetType:string = \"[asset MovieClip]\";\n\n\tprivate _timeline:Timeline;\n\n\tprivate _isButton:boolean = false;\n\tprivate _onMouseOver:(event:MouseEvent) => void;\n\tprivate _onMouseOut:(event:MouseEvent) => void;\n\tprivate _onMouseDown:(event:MouseEvent) => void;\n\tprivate _onMouseUp:(event:MouseEvent) => void;\n\n\tprivate _time:number = 0;// the current time inside the animation\n\tprivate _currentFrameIndex:number = -1;// the current frame\n\n\tprivate _isPlaying:boolean = true;// false if paused or stopped\n\n\t// not sure if needed\n\tprivate _enterFrame:AssetEvent;\n\tprivate _skipAdvance : boolean;\n\tprivate _isInit:boolean = true;\n\n\tprivate _potentialInstances:Object = {};\n\tprivate _depth_sessionIDs:Object = {};\n\tprivate _sessionID_childs:Object = {};\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IMovieClipAdapter\n\t{\n\t\treturn <IMovieClipAdapter> this._adapter;\n\t}\n\n\tpublic set adapter(value:IMovieClipAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n\tconstructor(timeline:Timeline = null)\n\t{\n\t\tsuper();\n\n\t\tthis._enterFrame = new AssetEvent(AssetEvent.ENTER_FRAME, this);\n\n\t\tthis.inheritColorTransform = true;\n\n\t\tthis._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\n\t\tthis._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\n\t\tthis._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\n\t\tthis._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\n\n\t\tthis._timeline = timeline || new Timeline();\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\n\t\tMovieClip._movieClips.push(this);\n\t}\n\n\tpublic disposeValues()\n\t{\n\t\tsuper.disposeValues();\n\n\t\tthis._potentialInstances = {};\n\t\tthis._depth_sessionIDs = {};\n\t\tthis._sessionID_childs = {};\n\t}\n\n\tpublic reset_textclones()\n\t{\n\t\tif(this.timeline) {\n\t\t\tfor (var key in this._potentialInstances) {\n\t\t\t\tif (this._potentialInstances[key] != null) {\n\t\t\t\t\tif (this._potentialInstances[key].isAsset(TextField)) {\n\t\t\t\t\t\t(<TextField>this._potentialInstances[key]).text = (<TextField>this.timeline.getPotentialChildPrototype(key)).text;\n\t\t\t\t\t}\n\t\t\t\t\telse if (this._potentialInstances[key].isAsset(MovieClip)) {\n\t\t\t\t\t\t(<MovieClip>this._potentialInstances[key]).reset_textclones();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get isInit():boolean\n\t{\n\t\treturn this._isInit;\n\t}\n\tpublic set isInit(value:boolean)\n\t{\n\t\tthis._isInit = value;\n\t}\n\n\tpublic get timeline():Timeline\n\t{\n\t\treturn this._timeline;\n\t}\n\n\tpublic set timeline(value:Timeline)\n\t{\n\t\tthis._timeline = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic loop:boolean = true;\n\n\tpublic get numFrames() : number\n\t{\n\t\treturn this._timeline.numFrames;\n\t}\n\n\tpublic jumpToLabel(label:string)\n\t{\n\t\t// the timeline.jumpTolabel will set currentFrameIndex\n\t\tthis._timeline.jumpToLabel(this, label);\n\t}\n\n\t/**\n\t * the current index of the current active frame\n\t */\n\tpublic constructedKeyFrameIndex:number = -1;\n\n\tpublic reset():void\n\t{\n\t\tsuper.reset();\n\n\t\t// time only is relevant for the root mc, as it is the only one that executes the update function\n\t\tthis._time = 0;\n\n\t\tif(this.adapter)\n\t\t\tthis.adapter.freeFromScript();\n\n\t\tthis.constructedKeyFrameIndex = -1;\n\t\tfor (var i:number = this.numChildren - 1; i >= 0; i--)\n\t\t\tthis.removeChildAt(i);\n\n\t\tthis._skipAdvance = MovieClip._skipAdvance;\n\n\t\tvar numFrames:number = this._timeline.keyframe_indices.length;\n\t\tthis._isPlaying = Boolean(numFrames > 1);\n\t\tif (numFrames) {\n\t\t\tthis._currentFrameIndex = 0;\n\t\t\tthis._timeline.constructNextFrame(this, true, true);\n\t\t} else {\n\t\t\tthis._currentFrameIndex = -1;\n\t\t}\n\t}\n\n\n\tpublic resetSessionIDs()\n\t{\n\t\tthis._depth_sessionIDs = {};\n\t}\n\n\t/*\n\t* Setting the currentFrameIndex will move the playhead for this movieclip to the new position\n\t */\n\tpublic get currentFrameIndex():number\n\t{\n\t\treturn this._currentFrameIndex;\n\t}\n\n\tpublic set currentFrameIndex(value:number)\n\t{\n\t\t//if currentFrame is set greater than the available number of\n\t\t//frames, the playhead is moved to the last frame in the timeline.\n\t\t//But because the frame specified was not a keyframe, no scripts are\n\t\t//executed, even if they exist on the last frame.\n\t\tvar skip_script:boolean = false;\n\n\t\tvar numFrames:number = this._timeline.keyframe_indices.length;\n\n\t\tif (!numFrames)\n\t\t\treturn;\n\n\t\tif (value < 0) {\n\t\t\tvalue = 0;\n\t\t} else if (value >= numFrames) {\n\t\t\tvalue = numFrames - 1;\n\t\t\tskip_script = true;\n\t\t}\n\n\t\tif (this._currentFrameIndex == value)\n\t\t\treturn;\n\n\t\tthis._currentFrameIndex = value;\n\n\t\t//changing current frame will ignore advance command for that\n\t\t//update's advanceFrame function, unless advanceFrame has\n\t\t//already been executed\n\t\tthis._skipAdvance = MovieClip._skipAdvance;\n\n\t\tthis._timeline.gotoFrame(this, value, skip_script);\n\t}\n\n\tpublic addButtonListeners()\n\t{\n\t\tthis._isButton = true;\n\n\t\tthis.stop();\n\n\t\tthis.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n\t\tthis.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n\t\tthis.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n\t\tthis.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n\t}\n\n\tpublic removeButtonListeners()\n\t{\n\t\tthis.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n\t\tthis.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n\t\tthis.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n\t\tthis.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n\n\t}\n\n\tpublic getChildAtSessionID(sessionID:number):DisplayObject\n\t{\n\t\treturn this._sessionID_childs[sessionID];\n\t}\n\n\tpublic getSessionIDDepths():Object\n\t{\n\t\treturn this._depth_sessionIDs;\n\t}\n\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n\t{\n\t\t//this should be implemented for all display objects\n\t\tchild.inheritColorTransform = true;\n\n\t\tchild.reset();// this takes care of transform and visibility\n\n\t\treturn super.addChildAtDepth(child, depth, replace);\n\t}\n\n\tpublic _addTimelineChildAt(child:DisplayObject, depth:number, sessionID:number):DisplayObject\n\t{\n\t\tthis._depth_sessionIDs[depth] = child._sessionID = sessionID;\n\n\t\tthis._sessionID_childs[sessionID] = child;\n\n\t\treturn this.addChildAtDepth(child, depth);\n\t}\n\n\tpublic removeChildAtInternal(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif(child.adapter)\n\t\t\tchild.adapter.freeFromScript();\n\n\t\tthis.adapter.unregisterScriptObject(child);\n\n\t\t//check to make sure _depth_sessionIDs wasn't modified with a new child\n\t\tif (this._depth_sessionIDs[child._depthID] == child._sessionID)\n\t\t\tdelete this._depth_sessionIDs[child._depthID];\n\n\t\tdelete this._sessionID_childs[child._sessionID];\n\n\t\tchild._sessionID = -1;\n\n\t\treturn super.removeChildAtInternal(index);\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn MovieClip.assetType;\n\t}\n\n\t/**\n\t * Starts playback of animation from current position\n\t */\n\tpublic play()\n\t{\n\t\tif (this._timeline.keyframe_indices.length > 1)\n\t\t\tthis._isPlaying = true;\n\t}\n\n\t/**\n\t * should be called right before the call to away3d-render.\n\t */\n\tpublic update()\n\t{\n\t\tMovieClip._skipAdvance = true;\n\n\t\tthis.advanceFrame();\n\n\t\tMovieClip._skipAdvance = false;\n\n\t\t// after we advanced the scenegraph, we might have some script that needs executing\n\t\tFrameScriptManager.execute_queue();\n\n\t\t// now we want to execute the onEnter\n\t\tthis.dispatchEvent(this._enterFrame);\n\n\t\t// after we executed the onEnter, we might have some script that needs executing\n\t\tFrameScriptManager.execute_queue();\n\n\t\t// now we execute any intervals queued\n\t\tFrameScriptManager.execute_intervals();\n\n\t\t// finally, we execute any scripts that were added from intervals\n\t\tFrameScriptManager.execute_queue();\n\n\t\t//execute any disposes as a result of framescripts\n\t\tFrameScriptManager.execute_dispose();\n\t}\n\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\n\t{\n\t\tif (!this._potentialInstances[id])\n\t\t\tthis._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\n\n\t\treturn this._potentialInstances[id];\n\t}\n\n\n\t/**\n\t * Stop playback of animation and hold current position\n\t */\n\tpublic stop()\n\t{\n\t\tthis._isPlaying = false;\n\t}\n\n\tpublic clone():MovieClip\n\t{\n\t\tvar newInstance:MovieClip = (MovieClip._movieClips.length)? MovieClip._movieClips.pop() : new MovieClip(this._timeline);\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:MovieClip)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.timeline = this._timeline;\n\t\tnewInstance.loop = this.loop;\n\t}\n\n\tpublic advanceFrame()\n\t{\n\t\tif (this._isPlaying && !this._skipAdvance) {\n\t\t\tif (this._currentFrameIndex == this._timeline.keyframe_indices.length - 1) {\n\t\t\t\tif (this.loop) // end of loop - jump to first frame.\n\t\t\t\t\tthis.currentFrameIndex = 0;\n\t\t\t\telse //end of timeline, stop playing\n\t\t\t\t\tthis._isPlaying = false;\n\t\t\t} else { // not end - construct next frame\n\t\t\t\tthis._currentFrameIndex++;\n\t\t\t\tthis._timeline.constructNextFrame(this);\n\t\t\t}\n\t\t}\n\n\t\tvar len:number = this._children.length;\n\t\tvar child:DisplayObject;\n\t\tfor (var i:number = 0; i <  len; ++i) {\n\t\t\tchild = this._children[i];\n\n\t\t\tif (child.isAsset(MovieClip))\n\t\t\t\t(<MovieClip> child).advanceFrame();\n\t\t}\n\n\t\tthis._skipAdvance = false;\n\t}\n\n// DEBUG CODE:\n\tlogHierarchy(depth: number = 0):void\n\t{\n\t\tthis.printHierarchyName(depth, this);\n\n\t\tvar len = this._children.length;\n\t\tvar child:DisplayObject;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tchild = this._children[i];\n\n\t\t\tif (child.isAsset(MovieClip))\n\t\t\t\t(<MovieClip> child).logHierarchy(depth + 1);\n\t\t\telse\n\t\t\t\tthis.printHierarchyName(depth + 1, child);\n\t\t}\n\t}\n\n\tprintHierarchyName(depth:number, target:DisplayObject)\n\t{\n\t\tvar str = \"\";\n\t\tfor (var i = 0; i < depth; ++i)\n\t\t\tstr += \"--\";\n\n\t\tstr += \" \" + target.name + \" = \" + target.id;\n\t\tconsole.log(str);\n\t}\n\n\tpublic clear()\n\t{\n\t\t//clear out potential instances\n\t\tfor (var key in this._potentialInstances) {\n\t\t\tvar instance:DisplayObject = this._potentialInstances[key];\n\n\t\t\t//only dispose instances that are not used in script ie. do not have an instance name\n\t\t\tif (instance.name == \"\") {\n\t\t\t\tFrameScriptManager.add_child_to_dispose(instance);\n\t\t\t\tdelete this._potentialInstances[key];\n\t\t\t}\n\t\t}\n\n\t\tsuper.clear();\n\t}\n}\nexport = MovieClip;\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/display/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light PointLight]\";\n\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\n\tpublic get assetType():string\n\t{\n\t\treturn PointLight.assetType;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, cameraTransform:Matrix3D, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(cameraTransform));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(cameraTransform));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n}\n\nexport = PointLight;",
    "import ITraverser\t\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport BasicPartition\t\t\t\t= require(\"awayjs-display/lib/partition/BasicPartition\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\nclass Scene extends DisplayObjectContainer\n{\n\tprivate _expandedPartitions:Array<PartitionBase> = new Array<PartitionBase>();\n\tprivate _partitions:Array<PartitionBase> = new Array<PartitionBase>();\n\n\tpublic _iCollectionMark = 0;\n\n\tconstructor(partition:PartitionBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis.partition = partition || new BasicPartition();\n\n\t\tthis._iIsRoot = true;\n\t\tthis._pScene = this;\n\t}\n\n\tpublic traversePartitions(traverser:ITraverser)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ITraverser\t\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport ElementsUtils\t\t\t\t= require(\"awayjs-display/lib/utils/ElementsUtils\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Shape class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Shape object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Shape objects that contain the same graphics.\n * However, a Shape object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate static _shapes:Array<Shape> = new Array<Shape>();\n\n\tpublic static assetType:string = \"[asset Shape]\";\n\n\tprivate _center:Vector3D;\n\tprivate _graphics:Graphics;\n\tprivate _onGraphicsInvalidateDelegate:(event:AssetEvent) => void;\n\n\t//temp point used in hit testing\n\tprivate _tempPoint:Point = new Point();\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Shape.assetType;\n\t}\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where\n\t * drawing commands can occur.\n\t */\n\tpublic get graphics():Graphics\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Defines the animator of the graphics object.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._graphics.animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._graphics.animator)\n\t\t\tthis._graphics.animator.removeOwner(this);\n\n\t\tthis._graphics.animator = value;\n\n\t\tif (this._graphics.animator)\n\t\t\tthis._graphics.animator.addOwner(this);\n\t}\n\n\t/**\n\t * The material with which to render the Shape.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._graphics.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tthis._graphics.material = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._graphics.style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tthis._graphics.style = value;\n\t}\n\n\t/**\n\t * Create a new Shape object.\n\t *\n\t * @param material    [optional]        The material with which to render the Shape.\n\t */\n\tconstructor(material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onGraphicsInvalidateDelegate = (event:AssetEvent) => this._onGraphicsInvalidate(event);\n\n\t\tthis._graphics = new Graphics(); //unique graphics object for each Sprite\n\t\tthis._graphics.addEventListener(AssetEvent.INVALIDATE, this._onGraphicsInvalidateDelegate);\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis._graphics.applyTransformation(this.transform.matrix3D);\n\t\tthis.transform.clearMatrix3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\n\t\tShape._shapes.push(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeValues()\n\t{\n\t\tsuper.disposeValues();\n\n\t\tthis._graphics.dispose();\n\t}\n\n\t/**\n\t * Clones this Shape instance along with all it's children, while re-using the same\n\t * material, graphics and animation set. The returned result will be a copy of this shape,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * graphics, and material. Properties that are cloned or created anew for the copy\n\t * include subShapees, children of the shape, and the animator.\n\t *\n\t * If you want to copy just the shape, reusing it's graphics and material while not\n\t * cloning it's children, the simplest way is to create a new shape manually:\n\t *\n\t * <code>\n\t * var clone : Shape = new Shape(original.graphics, original.material);\n\t * </code>\n\t */\n\tpublic clone():Shape\n\t{\n\t\tvar newInstance:Shape = (Shape._shapes.length)? Shape._shapes.pop() : new Shape();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(shape:Shape)\n\t{\n\t\tsuper.copyTo(shape);\n\n\t\tthis._graphics.copyTo(shape.graphics);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.union(this._graphics.getBoxBounds(), this._pBoxBounds);\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\n\t\tif (!this._center)\n\t\t\tthis._center = new Vector3D();\n\n\t\tthis._center.x = box.x + box.width/2;\n\t\tthis._center.y = box.y + box.height/2;\n\t\tthis._center.z = box.z + box.depth/2;\n\n\t\tthis._pSphereBounds = this._graphics.getSphereBounds(this._center, this._pSphereBounds);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate _onGraphicsInvalidate(event:AssetEvent)\n\t{\n\t\tif (this._pIsEntity != Boolean(this._graphics.count)) {\n\t\t\tif (this._pImplicitPartition)\n\t\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\n\t\t\tthis._pIsEntity = Boolean(this._graphics.count);\n\n\t\t\tif (this._pImplicitPartition)\n\t\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _acceptTraverser(traverser:ITraverser)\n\t{\n\t\tthis.graphics.acceptTraverser(traverser);\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tif(this._graphics.count) {\n\t\t\tthis._tempPoint.setTo(x,y);\n\t\t\tvar local:Point = this.globalToLocal(this._tempPoint, this._tempPoint);\n\t\t\tvar box:Box;\n\n\t\t\t//early out for box test\n\t\t\tif(!(box = this.getBox()).contains(local.x, local.y, 0))\n\t\t\t\treturn false;\n\n\t\t\t//early out for non-shape tests\n\t\t\tif (!shapeFlag)\n\t\t\t\treturn true;\n\n\t\t\t//ok do the graphics thing\n\t\t\tif (this._graphics._hitTestPointInternal(local.x, local.y))\n\t\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._graphics.clear();\n\t}\n}\n\nexport = Shape;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageCube\");\nimport ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport RenderableEvent\t\t\t\t= require(\"awayjs-display/lib/events/RenderableEvent\");\nimport SurfaceEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SurfaceEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollision\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollision\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderable, ISurface\n{\n\tprivate _textures:Array<TextureBase> = new Array<TextureBase>();\n\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _texture:SingleCubeTexture;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _owners:Array<IRenderable>;\n\tprivate _curves:boolean = false;\n\tprivate _imageRect:boolean = false;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate _style:Style = new Style();\n\n\tprivate _animator:IAnimator;\n\n\tprivate _onTextureInvalidateDelegate:(event:AssetEvent) => void;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether skybox should use curves. Defaults to false.\n\t */\n\tpublic get curves():boolean\n\t{\n\t\treturn this._curves;\n\t}\n\n\tpublic set curves(value:boolean)\n\t{\n\t\tif (this._curves == value)\n\t\t\treturn;\n\n\t\tthis._curves = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use imageRects. Defaults to false.\n\t */\n\tpublic get imageRect():boolean\n\t{\n\t\treturn this._imageRect;\n\t}\n\n\tpublic set imageRect(value:boolean)\n\t{\n\t\tif (this._imageRect == value)\n\t\t\treturn;\n\n\t\tthis._imageRect = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis.invalidate();\n\t}\n\n\n\t/**\n\t * A list of the IRenderables that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderable>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get texture():SingleCubeTexture\n\t{\n\t\treturn this._texture;\n\t}\n\n\tpublic set texture(value:SingleCubeTexture)\n\t{\n\t\tif (this._texture == value)\n\t\t\treturn;\n\n\t\tif (this._texture)\n\t\t\tthis.removeTexture(this._texture);\n\n\t\tthis._texture = value;\n\n\t\tif (this._texture)\n\t\t\tthis.addTexture(this._texture);\n\n\t\tthis.invalidatePasses();\n\t}\n\n\tpublic getNumTextures():number\n\t{\n\t\treturn this._textures.length;\n\t}\n\n\tpublic getTextureAt(index:number):TextureBase\n\t{\n\t\treturn this._textures[index];\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(image:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onTextureInvalidateDelegate = (event:AssetEvent) => this.onTextureInvalidate(event);\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._owners = new Array<IRenderable>(this);\n\n\t\tthis._style.image = image;\n\t\tthis.texture =  new SingleCubeTexture();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic invalidatePasses()\n\t{\n\t\tthis.dispatchEvent(new SurfaceEvent(SurfaceEvent.INVALIDATE_PASSES, this));\n\t}\n\n\tpublic invalidateSurface()\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_RENDER_OWNER, this));\n\t}\n\n\tpublic addTexture(texture:TextureBase)\n\t{\n\t\tthis._textures.push(texture);\n\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\n\tpublic removeTexture(texture:TextureBase)\n\t{\n\t\tthis._textures.splice(this._textures.indexOf(texture), 1);\n\n\t\ttexture.removeEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\n\tprivate onTextureInvalidate(event:AssetEvent = null)\n\t{\n\t\tthis.invalidate();\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidatePasses();\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(pickingCollision:PickingCollision, pickingCollider:IPickingCollider):boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = Skybox;",
    "﻿import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ITraverser\t\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport ElementsUtils\t\t\t\t= require(\"awayjs-display/lib/utils/ElementsUtils\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\n\n/**\n * Sprite is an instance of a Graphics, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of Graphices, which in turn correspond to SubGeometries. Graphices allow different parts\n * of the graphics to be assigned different materials.\n */\nclass Sprite extends DisplayObjectContainer\n{\n\tprivate static _sprites:Array<Sprite> = new Array<Sprite>();\n\n\tpublic static assetType:string = \"[asset Sprite]\";\n\n\tprivate _center:Vector3D;\n\tpublic _graphics:Graphics; //TODO\n\tprivate _onGraphicsInvalidateDelegate:(event:AssetEvent) => void;\n\n\t//temp point used in hit testing\n\tprivate _tempPoint:Point = new Point();\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Sprite.assetType;\n\t}\n\n\t/**\n\t * Specifies the Graphics object belonging to this Sprite object, where\n\t * drawing commands can occur.\n\t */\n\tpublic get graphics():Graphics\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Defines the animator of the graphics object.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._graphics.animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._graphics.animator)\n\t\t\tthis._graphics.animator.removeOwner(this);\n\n\t\tthis._graphics.animator = value;\n\n\t\tif (this._graphics.animator)\n\t\t\tthis._graphics.animator.addOwner(this);\n\t}\n\n\t/**\n\t * The material with which to render the Sprite.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._graphics.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tthis._graphics.material = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._graphics.style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tthis._graphics.style = value;\n\t}\n\n\t/**\n\t * Create a new Sprite object.\n\t *\n\t * @param material    [optional]        The material with which to render the Sprite.\n\t */\n\tconstructor(material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onGraphicsInvalidateDelegate = (event:AssetEvent) => this._onGraphicsInvalidate(event);\n\n\t\tthis._graphics = new Graphics(); //unique graphics object for each Sprite\n\t\tthis._graphics.addEventListener(AssetEvent.INVALIDATE, this._onGraphicsInvalidateDelegate);\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis._graphics.applyTransformation(this.transform.matrix3D);\n\t\tthis.transform.clearMatrix3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\n\t\tSprite._sprites.push(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeValues()\n\t{\n\t\tsuper.disposeValues();\n\n\t\tthis._graphics.dispose();\n\t}\n\n\t/**\n\t * Clones this Sprite instance along with all it's children, while re-using the same\n\t * material, graphics and animation set. The returned result will be a copy of this sprite,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * graphics, and material. Properties that are cloned or created anew for the copy\n\t * include subSpritees, children of the sprite, and the animator.\n\t *\n\t * If you want to copy just the sprite, reusing it's graphics and material while not\n\t * cloning it's children, the simplest way is to create a new sprite manually:\n\t *\n\t * <code>\n\t * var clone : Sprite = new Sprite(original.graphics, original.material);\n\t * </code>\n\t */\n\tpublic clone():Sprite\n\t{\n\t\tvar newInstance:Sprite = (Sprite._sprites.length)? Sprite._sprites.pop() : new Sprite();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(sprite:Sprite)\n\t{\n\t\tsuper.copyTo(sprite);\n\n\t\tthis._graphics.copyTo(sprite.graphics);\n    }\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.union(this._graphics.getBoxBounds(), this._pBoxBounds);\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\n\t\tif (!this._center)\n\t\t\tthis._center = new Vector3D();\n\n\t\tthis._center.x = box.x + box.width/2;\n\t\tthis._center.y = box.y + box.height/2;\n\t\tthis._center.z = box.z + box.depth/2;\n\n\t\tthis._pSphereBounds = this._graphics.getSphereBounds(this._center, this._pSphereBounds);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate _onGraphicsInvalidate(event:AssetEvent)\n\t{\n\t\tif (this._pIsEntity != Boolean(this._graphics.count)) {\n\t\t\tif (this._pImplicitPartition)\n\t\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\n\t\t\tthis._pIsEntity = Boolean(this._graphics.count);\n\n\t\t\tif (this._pImplicitPartition)\n\t\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _acceptTraverser(traverser:ITraverser)\n\t{\n\t\tthis.graphics.acceptTraverser(traverser);\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tif(this._graphics.count) {\n\t\t\tthis._tempPoint.setTo(x,y);\n\t\t\tvar local:Point = this.globalToLocal(this._tempPoint, this._tempPoint);\n\t\t\tvar box:Box;\n\n\t\t\t//early out for box test\n\t\t\tif(!(box = this.getBox()).contains(local.x, local.y, 0))\n\t\t\t\treturn false;\n\n\t\t\t//early out for non-shape tests\n\t\t\tif (!shapeFlag)\n\t\t\t\treturn true;\n\n\t\t\t//ok do the graphics thing\n\t\t\tif (this._graphics._hitTestPointInternal(local.x, local.y))\n\t\t\t\treturn true;\n\t\t}\n\n\t\treturn super._hitTestPointInternal(x, y, shapeFlag, masksFlag);\n\t}\n\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._graphics.clear();\n\t}\n}\n\nexport = Sprite;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\n\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport Style \t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\nimport Sprite\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\nimport Graphic\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphic\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Sprite\n{\n\tprivate static _textFields:Array<TextField> = new Array<TextField>();\n\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _textGraphicsDirty:boolean;\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\tprivate _textElements:TriangleElements;\n\tprivate _textGraphic:Graphic;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean;\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tvalue = value.toString();\n\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\n\t\tthis._textGraphicsDirty = true;\n\t}\n\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\n\t\tthis._textFormat = value;\n\n\t\tthis._textGraphicsDirty = true;\n\t}\n\n\n\t/**\n\t * The graphics used by the sprite that provides it with its shape.\n\t */\n\tpublic get graphics():Graphics\n\t{\n\t\tif (this._textGraphicsDirty)\n\t\t\tthis.reConstruct();\n\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic _textColor:number /*int*/;\n\n\tpublic get textColor()\n\t{\n\t\treturn this._textColor;\n\t}\n\n\tpublic set textColor(value:number)\n\t{\n\t\tthis._textColor = value;\n\t\tif(!this.transform.colorTransform)\n\t\t\tthis.transform.colorTransform = new ColorTransform();\n\n\t\tthis.transform.colorTransform.color = value;\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\n\tpublic set textWidth(value:number)\n\t{\n\t\tthis._textWidth = value;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\n\tpublic set textHeight(value:number)\n\t{\n\t\tthis._textHeight = value;\n\t}\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn true; //TODO do this better\n\t}\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis.type = TextFieldType.STATIC;\n\t}\n\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tif (this._textElements)\n\t\t\tthis._textElements.clear();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\n\t\tTextField._textFields.push(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeValues()\n\t{\n\t\tsuper.disposeValues();\n\n\t\tthis._textFormat = null;\n\t\tthis._textGraphic = null;\n\n\t\tif (this._textElements) {\n\t\t\tthis._textElements.dispose();\n\t\t\tthis._textElements = null;\n\t\t}\n\t}\n\n\t/**\n\t * Reconstructs the Graphics for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\t\tthis._textGraphicsDirty = false;\n\n\t\tif(this._textFormat == null)\n\t\t\treturn;\n\n\n\t\tif (this._textGraphic) {\n\t\t\tthis._textGraphic.dispose();\n\t\t\tthis._textGraphic = null;\n\n\t\t\tthis._textElements.clear();\n\t\t\tthis._textElements.dispose();\n\t\t\tthis._textElements = null;\n\t\t}\n\n\n\t\tif(this._text == \"\")\n\t\t\treturn;\n\n\t\tvar numVertices:number = 0;\n\t\tvar elements:TriangleElements;\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar y_offset:number=0;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar whitespace_width=(this._textFormat.font_table.get_whitespace_width() * char_scale)+this._textFormat.letterSpacing;\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\\\n\");\n\t\tvar final_lines_chars:Array<Array<TesselatedFontChar>> = [];\n\t\tvar final_lines_char_scale:Array<Array<number>> = [];\n\t\tvar final_lines_width:Array<number> = [];\n\t\tvar final_lines_justify_bool:Array<Boolean> = [];\n\t\tvar final_lines_justify:Array<number> = [];\n\t\tvar maxlineWidth:number=this.textWidth - (4 + this._textFormat.leftMargin + this._textFormat.rightMargin + this._textFormat.indent);\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\n\n\t\t\tfinal_lines_chars.push([]);\n\t\t\tfinal_lines_char_scale.push([]);\n\t\t\tfinal_lines_width.push(0);\n\t\t\tfinal_lines_justify.push(0);\n\t\t\tfinal_lines_justify_bool.push(false);\n\n\n\t\t\tvar words:Array<string> = textlines[tl].split(\" \");\n\t\t\tfor (var i = 0; i < words.length; i++) {\n\t\t\t\tvar word_width:number = 0;\n\t\t\t\tvar word_chars:Array<TesselatedFontChar> = [];\n\t\t\t\tvar word_chars_scale:Array<number> = [];\n\t\t\t\tvar c_cnt:number = 0;\n\t\t\t\tfor (var w = 0; w < words[i].length; w++) {\n\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.font_table.get_font_em_size();\n\t\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.getChar(words[i].charCodeAt(w).toString());\n\t\t\t\t\tif (this_char == null) {\n\t\t\t\t\t\tif (this._textFormat.fallback_font_table) {\n\t\t\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.fallback_font_table.get_font_em_size();\n\t\t\t\t\t\t\tthis_char = this._textFormat.fallback_font_table.getChar(words[i].charCodeAt(w).toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (this_char != null) {\n\t\t\t\t\t\telements = this_char.elements;\n\t\t\t\t\t\tif (elements != null) {\n\t\t\t\t\t\t\tnumVertices += elements.numVertices;\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == words[i].charCodeAt(w)) {\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tword_width += ((2 + this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// if no char-elements was found, we insert a \"space\"\n\t\t\t\t\t\t\tword_width += whitespace_width;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-elements was found, we insert a \"space\"\n\t\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\t\tword_width += whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t\tword_chars_scale[c_cnt] = char_scale;\n\t\t\t\t\tword_chars[c_cnt++] = this_char;\n\t\t\t\t}\n\n\t\t\t\tif (((final_lines_width[final_lines_width.length - 1] + word_width) <= maxlineWidth)||(final_lines_chars[final_lines_chars.length - 1].length==0)) {\n\t\t\t\t\t// if line can hold this word without breaking the bounds, we can just add all chars\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += word_width;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// word does not fit\n\t\t\t\t\t// todo respect autowrapping properties.\n\t\t\t\t\t// right now we just pretend everything has autowrapping and multiline\n\t\t\t\t\tif(final_lines_chars[final_lines_chars.length - 1][final_lines_chars[final_lines_chars.length - 1].length-1]==null){\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].pop();\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].pop();\n\t\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] -= whitespace_width;\n\t\t\t\t\t\tfinal_lines_justify[final_lines_justify.length - 1]-=1;\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_justify_bool[final_lines_justify_bool.length - 1]=true;\n\t\t\t\t\tfinal_lines_chars.push([]);\n\t\t\t\t\tfinal_lines_char_scale.push([]);\n\t\t\t\t\tfinal_lines_width.push(0);\n\t\t\t\t\tfinal_lines_justify.push(0);\n\t\t\t\t\tfinal_lines_justify_bool.push(false);\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] = word_width;\n\t\t\t\t}\n\t\t\t\tif (i < (words.length - 1)) {\n\t\t\t\t\tif ((final_lines_width[final_lines_width.length - 1]) <= maxlineWidth) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(null);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(char_scale);\n\t\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += whitespace_width;\n\t\t\t\t\t\tfinal_lines_justify[final_lines_justify.length - 1]+=1;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ty_offset=2+(this._textFormat.font_table.ascent-this._textFormat.font_table.get_font_em_size())*char_scale;\n\n\t\tvar vertices:Float32Array = new Float32Array(numVertices*3);\n\n\t\tfor (var i = 0; i < final_lines_chars.length; i++) {\n\n\t\t\tvar x_offset:number= 2 + this._textFormat.leftMargin + this._textFormat.indent;\n\t\t\tvar justify_addion:number=0;\n\t\t\tif(this._textFormat.align==\"center\"){\n\t\t\t\tx_offset=2 + this._textFormat.leftMargin + this._textFormat.indent+(maxlineWidth-final_lines_width[i])/2;\n\t\t\t}\n\t\t\telse if(this._textFormat.align==\"justify\"){\n\t\t\t\tif(final_lines_justify_bool[i]){\n\t\t\t\t\tjustify_addion=((maxlineWidth)-final_lines_width[i])/final_lines_justify[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(this._textFormat.align==\"right\"){\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])-(2 + this._textFormat.rightMargin);\n\t\t\t}\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\n\t\t\t//console.log(\"this._width=\"+this._width);\n\t\t\tfor (var t = 0; t < final_lines_chars[i].length; t++) {\n\t\t\t\tvar this_char:TesselatedFontChar = final_lines_chars[i][t];\n\t\t\t\tchar_scale = final_lines_char_scale[i][t];\n\t\t\t\tif (this_char != null) {\n\t\t\t\t\telements = this_char.elements;\n\t\t\t\t\tif (elements != null) {\n\t\t\t\t\t\tvar buffer:Float32Array = new Float32Array(elements.concatenatedBuffer.buffer);\n\t\t\t\t\t\tfor (var v:number = 0; v < elements.numVertices; v++) {\n\t\t\t\t\t\t\tvertices[j++] = buffer[v*3]*char_scale + x_offset;\n\t\t\t\t\t\t\tvertices[j++] = buffer[v*3 + 1]*char_scale + y_offset;\n\t\t\t\t\t\t\tvertices[j++] = buffer[v*3 + 2];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-elements was found, we insert a \"space\"\n\t\t\t\t\t\tx_offset+=whitespace_width+justify_addion;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tx_offset+=whitespace_width+justify_addion;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// hack for multiline textfield in icycle.\n\n\t\t\ty_offset+=(this._textFormat.font_table.ascent + this._textFormat.font_table.descent)*char_scale;\n\t\t\t//y_offset+=(this._textFormat.font_table.get_font_em_size()-this._textFormat.font_table.descent)*char_scale;\n\t\t\ty_offset+= this._textFormat.leading;\n\n\n\t\t}\n\n\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 3);\n\t\tattributesView.set(vertices);\n\t\tvar vertexBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\n\t\tthis._textElements = new TriangleElements(vertexBuffer);\n\t\tthis._textElements.setPositions(new Float2Attributes(vertexBuffer));\n\t\tthis._textElements.setCustomAttributes(\"curves\", new Byte4Attributes(vertexBuffer, false));\n\n\t\tthis._textGraphic = this._graphics.addGraphic(this._textElements);\n\n\t\tthis.material = this._textFormat.material;\n\t\tvar sampler:Sampler2D = new Sampler2D();\n\t\tthis.style = new Style();\n\t\tthis.style.addSamplerAt(sampler, this.material.getTextureAt(0));\n\t\tthis.style.uvMatrix = new Matrix(0,0,0,0, this._textFormat.uv_values[0], this._textFormat.uv_values[1]);\n\t\tthis.material.animateUVs = true;\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n\n    public clone():TextField\n    {\n\t\tvar newInstance:TextField = (TextField._textFields.length)? TextField._textFields.pop() : new TextField();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n    }\n\n\n\tpublic copyTo(newInstance:TextField)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.textWidth = this._textWidth;\n\t\tnewInstance.textHeight = this._textHeight;\n\t\tnewInstance.textFormat = this._textFormat;\n\t\t//newInstance.textColor = this._textColor;\n\t\tnewInstance.text = this._text;\n\t}\n}\n\nexport = TextField;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n* Defines the values to use for specifying path-drawing commands.\n* The values in this class are used by the Graphics.drawPath() method,\n *or stored in the commands vector of a GraphicsPath object.\n */\nclass GraphicsPathCommand\n{\n\t/**\n\t * Represents the default \"do nothing\" command.\n\t */\n\tpublic static NO_OP:number = 0;\n\t/**\n\t * Specifies a drawing command that moves the current drawing position\n\t * to the x- and y-coordinates specified in the data vector.\n\t */\n\tpublic static MOVE_TO:number = 1;\n\n\t/**\n\t * Specifies a drawing command that draws a line from the current drawing position\n\t * to the x- and y-coordinates specified in the data vector.\n\t */\n\tpublic static LINE_TO:number = 2;\n\n\t/**\n\t *  Specifies a drawing command that draws a curve from the current drawing position\n\t *  to the x- and y-coordinates specified in the data vector, using a control point.\n\t */\n\tpublic static CURVE_TO:number = 3;\n\t/**\n\t *  Specifies a drawing command that draws a curve from the current drawing position\n\t *  to the x- and y-coordinates specified in the data vector, using a control point.\n\t */\n\tpublic static CURVE_TO_2:number = 13;\n\n\t/**\n\t * Specifies a \"line to\" drawing command,\n\t * but uses two sets of coordinates (four values) instead of one set.\n\t */\n\tpublic static WIDE_LINE_TO:number = 4;\n\n\t/**\n\t *   Specifies a \"move to\" drawing command,\n\t *   but uses two sets of coordinates (four values) instead of one set.\n\t */\n\tpublic static WIDE_MOVE_TO:number = 5;\n\n\t/**\n\t * Specifies a drawing command that draws a curve from the current drawing position\n\t * to the x- and y-coordinates specified in the data vector, using 2 control points.\n\t */\n\tpublic static CUBIC_CURVE:number = 6;\n}\n\nexport = GraphicsPathCommand;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport GraphicsPathCommand\t\t= require(\"awayjs-display/lib/draw/GraphicsPathCommand\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n/**\n\n * Defines the values to use for specifying path-drawing commands.\n * The values in this class are used by the Graphics.drawPath() method,\n *or stored in the commands vector of a GraphicsPath object.\n */\nclass GraphicsPath\n{\n    /**\n     * The Vector of drawing commands as integers representing the path.\n     */\n    private _commands:Array<Array<number>>;\n    /**\n     * The Vector of Numbers containing the parameters used with the drawing commands.\n     */\n    private _data:Array<Array<number>>;\n\n    private _draw_directions:Array<number>;\n    private _contours_closed:Array<boolean>;\n\n    /**\n     * Specifies the winding rule using a value defined in the GraphicsPathWinding class.\n     */\n    private _winding:string;\n\n    private _startPoint:Point;\n    private _tmp_point:Point;\n    private _cur_point:Point;\n    private _direction:Point;\n    private _isFill:boolean;\n\n    constructor(commands:Array<number> = null, data:Array<number> = null, winding:string = GraphicsPathWinding.EVEN_ODD)\n    {\n        this._data=[];\n        this._commands=[];\n        this._draw_directions=[0];\n        this._contours_closed=[false];\n\n        if(commands!=null && data!=null){\n            this._data[0]=data;\n            this._commands[0]=commands;\n        }\n        else{\n            this._data[0]=[];\n            this._commands[0]=[];\n\n        }\n\n        this._direction=new Point(0, -1);\n        this._startPoint=new Point();\n        this._cur_point=new Point();\n        this._tmp_point=new Point();\n        this.isFill=false;\n        this._winding=winding;\n    }\n\n    public get draw_directions():Array<number>\n    {\n        return this._draw_directions;\n    }\n    public get contours_closed():Array<boolean>\n    {\n        return this._contours_closed;\n    }\n\n    public get isFill():boolean\n    {\n        return this._isFill;\n    }\n    public set isFill(value:boolean)\n    {\n        this._isFill=value;\n    }\n    public get commands():Array<Array<number>>\n    {\n        return this._commands;\n    }\n\n    public get data():Array<Array<number>>\n    {\n        return this._data;\n    }\n\n    public curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n    {\n        if(this._commands[this._commands.length-1].length==0){\n            // every contour must start with a moveTo command, so we make sure we have correct startpoint\n            this._commands[this._commands.length-1].push(GraphicsPathCommand.MOVE_TO);\n            this._data[this._data.length-1].push(this._cur_point.x);\n            this._data[this._data.length-1].push(this._cur_point.y);\n        }\n        this._commands[this._commands.length-1].push(GraphicsPathCommand.CURVE_TO);\n\n        if(this.isFill){\n            this._tmp_point.x=anchorX-this._cur_point.x;\n            this._tmp_point.y=anchorY-this._cur_point.y;\n            this._tmp_point.normalize();\n\n            var testpoint:Point=new Point(this._tmp_point.x, this._tmp_point.y);\n            testpoint.normalize();\n            var degree_anchor:number=Math.acos(this._tmp_point.x * this._direction.x + this._tmp_point.y * this._direction.y) * 180 / Math.PI;\n            if(degree_anchor>180)degree_anchor-=360;\n            //var degree_anchor:number=Math.atan2(this._tmp_point.x, this._tmp_point.y) * 180 / Math.PI;\n            this._draw_directions[this._draw_directions.length-1]+=degree_anchor;\n            this._tmp_point.x=controlX-this._cur_point.x;\n            this._tmp_point.y=controlY-this._cur_point.y;\n            this._tmp_point.normalize();\n            //angle = atan2( a.x*b.y - a.y*b.x, a.x*b.x + a.y*b.y );\n            var degree_control:number=(Math.atan2(this._tmp_point.x* testpoint.y - this._tmp_point.y* testpoint.x, this._tmp_point.x* testpoint.x + this._tmp_point.y* testpoint.y));\n            if(degree_control>180)degree_control-=360;\n            //var degree_control:number=(Math.atan2(this._tmp_point.x, this._tmp_point.y) * 180 / Math.PI);\n            console.log(\"degree_control \"+degree_control);\n            console.log(\"degree_anchor \"+degree_anchor);\n            console.log(\"this._draw_directions[this._draw_directions.length-1] \"+this._draw_directions[this._draw_directions.length-1]);\n            this._direction.x=testpoint.x;\n            this._direction.y=testpoint.y;\n            if((degree_control)<0)\n                this._data[this._data.length-1].push(1);\n            else\n                this._data[this._data.length-1].push(2);\n\n        }\n        else{\n            this._data[this._data.length-1].push(1);\n        }\n        this._cur_point.x=anchorX;\n        this._cur_point.y=anchorY;\n        this._data[this._data.length-1].push(controlX);\n        this._data[this._data.length-1].push(controlY);\n        this._data[this._data.length-1].push(anchorX);\n        this._data[this._data.length-1].push(anchorY);\n\n    }\n\n    public lineTo(x:number, y:number)\n    {\n        if(this._commands[this._commands.length-1].length==0){\n            // every contour must start with a moveTo command, so we make sure we have correct startpoint\n            this._commands[this._commands.length-1].push(GraphicsPathCommand.MOVE_TO);\n            this._data[this._data.length-1].push(this._cur_point.x);\n            this._data[this._data.length-1].push(this._cur_point.y);\n        }\n        this._commands[this._commands.length-1].push(GraphicsPathCommand.LINE_TO);\n        this._data[this._data.length-1].push(x);\n        this._data[this._data.length-1].push(y);\n        if(this.isFill) {\n            this._tmp_point.x = x - this._cur_point.x;\n            this._tmp_point.y = y - this._cur_point.y;\n            this._tmp_point.normalize();\n            this._direction.x=this._tmp_point.x;\n            this._direction.y=this._tmp_point.y;\n            var degree_anchor:number = Math.atan2(this._tmp_point.x, this._tmp_point.y) * 180 / Math.PI;\n            this._draw_directions[this._draw_directions.length-1]+=degree_anchor;\n        }\n        this._cur_point.x=x;\n        this._cur_point.y=y;\n    }\n\n    public moveTo(x:number, y:number)\n    {\n        if(this._commands[this._commands.length-1].length>0){\n            this.finalizeContour();\n            this._draw_directions.push(0);\n            this._contours_closed.push(false);\n            this._commands.push([]);\n            this._data.push([]);\n        }\n        this._startPoint.x = x;\n        this._startPoint.y = y;\n        this._cur_point.x = x;\n        this._cur_point.y = y;\n    }\n\n    public finalizeContour()\n    {\n        if((this._startPoint.x != this._cur_point.x) || (this._startPoint.y != this._cur_point.y)){\n            if(this.isFill) {\n                this.lineTo(this._startPoint.x, this._startPoint.y);\n            }\n        }\n        else{\n            this._contours_closed[this._contours_closed.length-1]=true;\n        }\n\n    }\n    public wideLineTo(x:number, y:number)\n    {\n        // not used\n        /*\n         this._commands.push(GraphicsPathCommand.WIDE_LINE_TO);\n         this._data.push(0);\n         this._data.push(0);\n         this._data.push(x);\n         this._data.push(y);\n         */\n    }\n\n    public wideMoveTo(x:number, y:number)\n    {\n        // not used\n        /*\n         this._commands.push(GraphicsPathCommand.WIDE_MOVE_TO);\n         this._data.push(0);\n         this._data.push(0);\n         this._data.push(x);\n         this._data.push(y);\n         */\n    }\n\n}\n\nexport = GraphicsPath;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\n\nimport GraphicsPath\t\t\t\t= require(\"awayjs-display/lib/draw/GraphicsPath\");\nimport GraphicsPathCommand\t\t= require(\"awayjs-display/lib/draw/GraphicsPathCommand\");\nimport DefaultMaterialManager\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport MovieClip\t\t\t\t= require(\"awayjs-display/lib/display/MovieClip\");\n\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\")\nimport AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Sprite\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\n\n\nimport PartialImplementationError\t\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport TriangleElements = require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport MaterialBase = require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\tprivate _queued_fill_pathes:Array<GraphicsPath>;\n\tprivate _queued_stroke_pathes:Array<GraphicsPath>;\n\n\tpublic static _tess_obj:any;\n\n\tpublic _target:Sprite;\n\n\tprivate _active_fill_path:GraphicsPath;\n\tprivate _active_stroke_path:GraphicsPath;\n\n\tprivate _current_position:Point=new Point();\n\n\tconstructor(target:Sprite){\n\t\tthis._target=target;\n\t\tthis._queued_fill_pathes=[];\n\t\tthis._queued_stroke_pathes=[];\n\t\tthis._active_fill_path=null;\n\t\tthis._active_stroke_path=null;\n\t\tthis._current_position=new Point();\n\t}\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\t\tthis.draw_fill();\n\t\t// start a new fill path\n\t\tthis._active_fill_path=new GraphicsPath();\n\t\tthis._active_fill_path.isFill=true;\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_fill_pathes.push(this._active_fill_path);\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\t\tthis.draw_fill();\n\t\t// start a new fill path\n\t\tthis._active_fill_path=new GraphicsPath();\n\t\tthis._active_fill_path.isFill=true;\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_fill_pathes.push(this._active_fill_path);\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\t\tthis.draw_fill();\n\t\t// start a new fill path\n\t\tthis._active_fill_path=new GraphicsPath();\n\t\tthis._active_fill_path.isFill=true;\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_fill_pathes.push(this._active_fill_path);\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\t// todo: do this the correct way\n\t\tthis._target.graphics.dispose();\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\t\tsourceGraphics._target.graphics.copyTo(this._target.graphics);\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t\tthrow new PartialImplementationError(\"cubicCurveTo\");\n\t\t/*\n\t\t t = 0.5; // given example value\n\t\t x = (1 - t) * (1 - t) * p[0].x + 2 * (1 - t) * t * p[1].x + t * t * p[2].x;\n\t\t y = (1 - t) * (1 - t) * p[0].y + 2 * (1 - t) * t * p[1].y + t * t * p[2].y;\n\n\t\t this.queued_command_types.push(Graphics.CMD_BEZIER);\n\t\t this.queued_command_data.push(controlX1);\n\t\t this.queued_command_data.push(controlY1);\n\t\t this.queued_command_data.push(controlX2);\n\t\t this.queued_command_data.push(controlY2);\n\t\t this.queued_command_data.push(anchorX);\n\t\t this.queued_command_data.push(anchorY);\n\n\t\t // todo: somehow convert cubic bezier curve into 2 quadric curves...\n\n\t\t this.draw_direction+=0;\n\t\t */\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.curveTo(controlX, controlY, anchorX, anchorY);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.curveTo(controlX, controlY, anchorX, anchorY);\n\t\t}\n\t\tthis._current_position.x=anchorX;\n\t\tthis._current_position.y=anchorY;\n\t\t/*\n\t\tthis.queued_command_types.push(Graphics.CMD_CURVE);\n\t\tthis.queued_command_data.push(controlX);\n\t\tthis.queued_command_data.push(controlY);\n\t\tthis.queued_command_data.push(anchorX);\n\t\tthis.queued_command_data.push(anchorY);\n\t\t*/\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\t\tvar radius2=radius*1.065;\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.moveTo(x-radius, y);\n\t\t\tfor(var i=8; i>=0;i--){\n\n\t\t\t\tvar degree = (i) *(360/8)*Math.PI/180;\n\t\t\t\tvar degree2 = degree + ((360/16)*Math.PI/180);\n\t\t\t\tthis._active_fill_path.curveTo(x-(Math.cos(degree2)*radius2), y+(Math.sin(degree2)*radius2),x-(Math.cos(degree)*radius), y+(Math.sin(degree)*radius));\n\t\t\t}\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x, y+radius);\n\t\t\tvar radius2=radius*0.93;\n\t\t\tthis._active_stroke_path.curveTo(x-(radius2), y+(radius2), x-radius, y);\n\t\t\tthis._active_stroke_path.curveTo(x-(radius2), y-(radius2), x, y-radius);\n\t\t\tthis._active_stroke_path.curveTo(x+(radius2), y-(radius2), x+radius, y);\n\t\t\tthis._active_stroke_path.curveTo(x+(radius2), y+(radius2), x, y+radius);\n\t\t}\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\t\twidth/=2;\n\t\theight/=2;\n\t\tif(this._active_fill_path!=null){\n\n\t\t\tthis._active_fill_path.moveTo(x, y+height);\n\t\t\tthis._active_fill_path.curveTo(x-(width), y+(height), x-width, y);\n\t\t\tthis._active_fill_path.curveTo(x-(width), y-(height), x, y-height);\n\t\t\tthis._active_fill_path.curveTo(x+(width), y-(height), x+width, y);\n\t\t\tthis._active_fill_path.curveTo(x+(width), y+(height), x, y+height);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x, y+height);\n\t\t\tthis._active_stroke_path.curveTo(x-(width), y+(height), x-width, y);\n\t\t\tthis._active_stroke_path.curveTo(x-(width), y-(height), x, y-height);\n\t\t\tthis._active_stroke_path.curveTo(x+(width), y-(height), x+width, y);\n\t\t\tthis._active_stroke_path.curveTo(x+(width), y+(height), x, y+height);\n\t\t}\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\t\t//this.draw_fill();\n\t\t/*\n\t\t for (var i:number=0; i<graphicsData.length; i++){\n\t\t //todo\n\t\t if(graphicsData[i].dataType==\"beginFill\"){\n\n\t\t }\n\t\t else if(graphicsData[i].dataType==\"endFill\"){\n\n\t\t }\n\t\t else if(graphicsData[i].dataType==\"endFill\"){\n\n\t\t }\n\t\t else if(graphicsData[i].dataType==\"Path\"){\n\n\t\t }\n\n\t\t }\n\t\t */\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\t\t//todo\n\t\t/*\n\t\t if(this._active_fill_path!=null){\n\t\t this._active_fill_path.curveTo(controlX, controlY, anchorX, anchorY);\n\t\t }\n\t\t if(this._active_stroke_path!=null){\n\t\t this._active_stroke_path.curveTo(controlX, controlY, anchorX, anchorY);\n\t\t }\n\t\t this._current_position.x=anchorX;\n\t\t this._current_position.y=anchorY;\n\t\t */\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.moveTo(x, y);\n\t\t\tthis._active_fill_path.lineTo(x+width, y);\n\t\t\tthis._active_fill_path.lineTo(x+width, y+height);\n\t\t\tthis._active_fill_path.lineTo(x, y+height);\n\t\t\tthis._active_fill_path.lineTo(x, y);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x, y);\n\t\t\tthis._active_stroke_path.lineTo(x+width, y);\n\t\t\tthis._active_stroke_path.lineTo(x+width, y+height);\n\t\t\tthis._active_stroke_path.lineTo(x, y+height);\n\t\t\tthis._active_stroke_path.lineTo(x, y);\n\t\t}\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t\tif(!ellipseHeight){\n\t\t\tellipseHeight=ellipseWidth;\n\t\t}\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.moveTo(x+ellipseWidth, y);\n\t\t\tthis._active_fill_path.lineTo(x+width-ellipseWidth, y);\n\t\t\tthis._active_fill_path.curveTo(x+width, y, x+width, y+ellipseHeight);\n\t\t\tthis._active_fill_path.lineTo(x+width, y+height-ellipseHeight);\n\t\t\tthis._active_fill_path.curveTo(x+width, y+height, x+width-ellipseWidth, y+height);\n\t\t\tthis._active_fill_path.lineTo(x+ellipseWidth, y+height);\n\t\t\tthis._active_fill_path.curveTo(x, y+height, x, y+height-ellipseHeight);\n\t\t\tthis._active_fill_path.lineTo(x, y+ellipseHeight);\n\t\t\tthis._active_fill_path.curveTo(x, y, x+ellipseWidth, y);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x+ellipseWidth, y);\n\t\t\tthis._active_stroke_path.lineTo(x+width-ellipseWidth, y);\n\t\t\tthis._active_stroke_path.curveTo(x+width, y, x+width, y+ellipseHeight);\n\t\t\tthis._active_stroke_path.lineTo(x+width, y+height-ellipseHeight);\n\t\t\tthis._active_stroke_path.curveTo(x+width, y+height, x+width-ellipseWidth, y+height);\n\t\t\tthis._active_stroke_path.lineTo(x+ellipseWidth, y+height);\n\t\t\tthis._active_stroke_path.curveTo(x, y+height, x, y+height-ellipseHeight);\n\t\t\tthis._active_stroke_path.lineTo(x, y+ellipseHeight);\n\t\t\tthis._active_stroke_path.curveTo(x, y, x+ellipseWidth, y);\n\t\t}\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\t\tif(this._active_fill_path!=null){\n\t\t\t//todo\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\t//todo\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\t\tthis.draw_strokes();\n\t\tthis.draw_fill();\n\t\tthis._active_fill_path=null;\n\t\tthis._active_stroke_path=null;\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\t\t// start a new stroke path\n\t\tthis._active_stroke_path=new GraphicsPath();\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_stroke_pathes.push(this._active_stroke_path);\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\t\t// start a new stroke path\n\t\tthis._active_stroke_path=new GraphicsPath();\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_stroke_pathes.push(this._active_stroke_path);\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t\t// start a new stroke path\n\t\tthis._active_stroke_path=new GraphicsPath();\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_stroke_pathes.push(this._active_stroke_path);\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.lineTo(x, y);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.lineTo(x, y);\n\t\t}\n\t\tthis._current_position.x=x;\n\t\tthis._current_position.y=y;\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.moveTo(x, y);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x, y);\n\t\t}\n\t\tthis._current_position.x=x;\n\t\tthis._current_position.y=y;\n\t}\n\n\tpublic draw_strokes(){\n\t\tif(this._active_stroke_path==null)return;\n\t\tthis._active_stroke_path.finalizeContour();\n\t\tvar contour_commands:Array<Array<number> >=this._active_stroke_path.commands;\n\t\tvar contour_data:Array<Array<number> >=this._active_stroke_path.data;\n\t\tvar contour_closed:Array<boolean >=this._active_stroke_path.contours_closed;\n\n\t\tvar commands:Array<number>;\n\t\tvar data:Array<number>;\n\t\tvar i:number=0;\n\t\tvar k:number=0;\n\t\tvar vert_cnt:number=0;\n\t\tvar data_cnt:number=0;\n\t\tvar draw_started:boolean=false;\n\t\tvar final_vert_list:Array<number> = [];\n\t\tvar final_vert_cnt:number=0;\n\t\tvar lastPoint:Point=new Point();\n\t\tvar start_point:Point=new Point();\n\t\tvar end_point:Point=new Point();\n\t\tvar start_left:Point=new Point();\n\t\tvar start_right:Point=new Point();\n\t\tvar ctr_left:Point=new Point();\n\t\tvar ctr_right:Point=new Point();\n\t\tvar ctr_left2:Point=new Point();\n\t\tvar ctr_right2:Point=new Point();\n\t\tvar end_left:Point=new Point();\n\t\tvar end_right:Point=new Point();\n\t\tvar tmp_point:Point=new Point();\n\t\tvar tmp_point2:Point=new Point();\n\t\tvar first_point:Point=new Point();\n\t\tvar first_point_set:boolean=false;\n\t\tvar closed:boolean=false;\n\t\tvar thickness:number=3;\n\t\tvar tessVerts:Array<number>=[];\n\n\t\tGraphics._tess_obj.newTess(1024 * 512);\n\t\tfor(k=0; k<contour_commands.length; k++) {\n\t\t\tvar contour_points:Array<Point>=[];\n\t\t\tvar contour_types:Array<number>=[];\n\t\t\tcommands = contour_commands[k];\n\t\t\tdata = contour_data[k];\n\t\t\tclosed=contour_closed[k];\n\t\t\tvert_cnt = 0;\n\t\t\tdata_cnt = 0;\n\t\t\tdraw_started=false;\n\t\t\tfirst_point_set=false;\n\t\t\tfor (i = 0; i < commands.length; i++) {\n\t\t\t\tswitch (commands[i]) {\n\t\t\t\t\tcase GraphicsPathCommand.MOVE_TO:\n\t\t\t\t\t\tlastPoint.x = data[data_cnt++];\n\t\t\t\t\t\tlastPoint.y = data[data_cnt++];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase GraphicsPathCommand.LINE_TO:\n\t\t\t\t\t\tcontour_types.push(GraphicsPathCommand.LINE_TO);\n\t\t\t\t\t\tend_point.x = data[data_cnt++];\n\t\t\t\t\t\tend_point.y = data[data_cnt++];\n\n\t\t\t\t\t\ttmp_point.x = -1*(end_point.y-lastPoint.y);\n\t\t\t\t\t\ttmp_point.y = end_point.x-lastPoint.x;\n\t\t\t\t\t\ttmp_point.normalize();\n\n\t\t\t\t\t\t// rotate point\n\t\t\t\t\t\tstart_left.x  = lastPoint.x + (tmp_point.x * thickness);\n\t\t\t\t\t\tstart_left.y  = lastPoint.y + (tmp_point.y * thickness);\n\t\t\t\t\t\tstart_right.x = lastPoint.x - (tmp_point.x * thickness);\n\t\t\t\t\t\tstart_right.y = lastPoint.y - (tmp_point.y * thickness);\n\t\t\t\t\t\t// rotate point\n\t\t\t\t\t\tend_left.x  = end_point.x + (tmp_point.x * thickness);\n\t\t\t\t\t\tend_left.y  = end_point.y + (tmp_point.y * thickness);\n\t\t\t\t\t\tend_right.x = end_point.x - (tmp_point.x * thickness);\n\t\t\t\t\t\tend_right.y = end_point.y - (tmp_point.y * thickness);\n\n\t\t\t\t\t\tlastPoint.x=end_point.x;\n\t\t\t\t\t\tlastPoint.y=end_point.y;\n\n\t\t\t\t\t\tcontour_points.push(new Point(start_right.x, start_right.y));\n\t\t\t\t\t\tcontour_points.push(new Point(start_left.x, start_left.y));\n\t\t\t\t\t\tcontour_points.push(new Point(end_right.x, end_right.y));\n\t\t\t\t\t\tcontour_points.push(new Point(end_left.x, end_left.y));\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase GraphicsPathCommand.CURVE_TO:\n\t\t\t\t\t\tcontour_types.push(GraphicsPathCommand.CURVE_TO);\n\t\t\t\t\t\tcontour_types.push(GraphicsPathCommand.CURVE_TO_2);\n\t\t\t\t\t\tvar curve_direction:number = data[data_cnt++];\n\t\t\t\t\t\tvar control_x:number = data[data_cnt++];\n\t\t\t\t\t\tvar control_y:number = data[data_cnt++];\n\t\t\t\t\t\tvar end_x:number = data[data_cnt++];\n\t\t\t\t\t\tvar end_y:number = data[data_cnt++];\n\n\n\t\t\t\t\t\ttmp_point.x = -1*(control_y-lastPoint.y);\n\t\t\t\t\t\ttmp_point.y = control_x-lastPoint.x;\n\t\t\t\t\t\ttmp_point.normalize();\n\n\t\t\t\t\t\t// rotate point\n\t\t\t\t\t\tstart_left.x  = lastPoint.x + (tmp_point.x * thickness);\n\t\t\t\t\t\tstart_left.y  = lastPoint.y + (tmp_point.y * thickness);\n\t\t\t\t\t\tstart_right.x = lastPoint.x - (tmp_point.x * thickness);\n\t\t\t\t\t\tstart_right.y = lastPoint.y - (tmp_point.y * thickness);\n\t\t\t\t\t\t// rotate point\n\t\t\t\t\t\tctr_left.x  = control_x + (tmp_point.x * thickness);\n\t\t\t\t\t\tctr_left.y  = control_y + (tmp_point.y * thickness);\n\t\t\t\t\t\tctr_right.x = control_x - (tmp_point.x * thickness);\n\t\t\t\t\t\tctr_right.y = control_y - (tmp_point.y * thickness);\n\n\t\t\t\t\t\tcontour_points.push(new Point(start_right.x, start_right.y));\n\t\t\t\t\t\tcontour_points.push(new Point(start_left.x, start_left.y));\n\t\t\t\t\t\tcontour_points.push(new Point(ctr_right.x, ctr_right.y));\n\t\t\t\t\t\tcontour_points.push(new Point(ctr_left.x, ctr_left.y));\n\n\t\t\t\t\t\ttmp_point.x = -1*(end_y-control_y);\n\t\t\t\t\t\ttmp_point.y = end_x-control_x;\n\t\t\t\t\t\ttmp_point.normalize();\n\n\t\t\t\t\t\tctr_left2.x  = control_x + (tmp_point.x * thickness);\n\t\t\t\t\t\tctr_left2.y  = control_y + (tmp_point.y * thickness);\n\t\t\t\t\t\tctr_right2.x = control_x - (tmp_point.x * thickness);\n\t\t\t\t\t\tctr_right2.y = control_y - (tmp_point.y * thickness);\n\n\t\t\t\t\t\tend_left.x  = end_x + (tmp_point.x * thickness);\n\t\t\t\t\t\tend_left.y  = end_y + (tmp_point.y * thickness);\n\t\t\t\t\t\tend_right.x = end_x - (tmp_point.x * thickness);\n\t\t\t\t\t\tend_right.y = end_y - (tmp_point.y * thickness);\n\n\t\t\t\t\t\tcontour_points.push(new Point(ctr_right2.x, ctr_right2.y));\n\t\t\t\t\t\tcontour_points.push(new Point(ctr_left2.x, ctr_left2.y));\n\t\t\t\t\t\tcontour_points.push(new Point(end_right.x, end_right.y));\n\t\t\t\t\t\tcontour_points.push(new Point(end_left.x, end_left.y));\n\n\t\t\t\t\t\tlastPoint.x=end_x;\n\t\t\t\t\t\tlastPoint.y=end_y;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar con_length:number=contour_points.length/4;\n\t\t\tvar next_start_right:Point=new Point();\n\t\t\tvar next_start_left:Point=new Point();\n\t\t\tvar next_end_right:Point=new Point();\n\t\t\tvar next_end_left:Point=new Point();\n\t\t\tvar prevLeft:Point;\n\t\t\tvar prevRight:Point;\n\t\t\tfor (i = 0; i < con_length; i++) {\n\t\t\t\tstart_right = contour_points[i * 4];\n\t\t\t\tstart_left = contour_points[i * 4 + 1];\n\t\t\t\tend_right = contour_points[i * 4 + 2];\n\t\t\t\tend_left = contour_points[i * 4 + 3];\n\t\t\t\tvar nextIdx:number = i + 1;\n\t\t\t\tif (i >= con_length - 1) {\n\t\t\t\t\t// last segment\n\t\t\t\t\tif (closed) {\n\t\t\t\t\t\tnextIdx = 0;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnextIdx = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (nextIdx >= 0) {\n\t\t\t\t\tnext_start_right = contour_points[nextIdx * 4];\n\t\t\t\t\tnext_start_left = contour_points[nextIdx * 4 + 1];\n\t\t\t\t\tnext_end_right = contour_points[nextIdx * 4 + 2];\n\t\t\t\t\tnext_end_left = contour_points[nextIdx * 4 + 3];\n\n\t\t\t\t\tvar cur_vertical:boolean = false;\n\t\t\t\t\tvar next_vertical:boolean = false;\n\t\t\t\t\tvar cur_horizontal:boolean = false;\n\t\t\t\t\tvar next_horizontal:boolean = false;\n\n\t\t\t\t\ttmp_point.x = end_right.x - start_right.x;\n\t\t\t\t\ttmp_point.y = end_right.y - start_right.y;\n\t\t\t\t\tvar factor1:number=0;\n\t\t\t\t\tvar offsetY1:number=0;\n\t\t\t\t\tif (tmp_point.x == 0)cur_vertical = true;\n\t\t\t\t\telse if (tmp_point.y == 0)cur_horizontal = true;\n\t\t\t\t\telse {\n\t\t\t\t\t\tfactor1 = tmp_point.y / tmp_point.x;\n\t\t\t\t\t\toffsetY1 = -(factor1 * start_right.x - start_right.y);\n\t\t\t\t\t}\n\n\t\t\t\t\ttmp_point.x = next_end_right.x - next_start_right.x;\n\t\t\t\t\ttmp_point.y = next_end_right.y - next_start_right.y;\n\t\t\t\t\tvar factor2:number=0;\n\t\t\t\t\tvar offsetY2:number=0;\n\t\t\t\t\tif (tmp_point.x == 0)next_vertical = true;\n\t\t\t\t\telse if (tmp_point.y == 0)next_horizontal = true;\n\t\t\t\t\telse {\n\t\t\t\t\t\tfactor2 = tmp_point.y / tmp_point.x;\n\t\t\t\t\t\toffsetY2 = -(factor2 * next_start_right.x - next_start_right.y);\n\t\t\t\t\t}\n\n\n\t\t\t\t\ttmp_point.x = end_left.x - start_left.x;\n\t\t\t\t\ttmp_point.y = end_left.y - start_left.y;\n\t\t\t\t\tvar factor3:number=0;\n\t\t\t\t\tvar offsetY3:number=0;\n\t\t\t\t\tif (tmp_point.x == 0)cur_vertical = true;\n\t\t\t\t\telse if (tmp_point.y == 0)cur_horizontal = true;\n\t\t\t\t\telse {\n\t\t\t\t\t\tfactor3 = tmp_point.y / tmp_point.x;\n\t\t\t\t\t\toffsetY3 = -(factor3 * start_left.x - start_left.y);\n\t\t\t\t\t}\n\n\t\t\t\t\ttmp_point.x = next_end_left.x - next_start_left.x;\n\t\t\t\t\ttmp_point.y = next_end_left.y - next_start_left.y;\n\t\t\t\t\tvar factor4:number=0;\n\t\t\t\t\tvar offsetY4:number=0;\n\t\t\t\t\tif (tmp_point.x == 0)next_vertical = true;\n\t\t\t\t\telse if (tmp_point.y == 0)next_horizontal = true;\n\t\t\t\t\telse {\n\t\t\t\t\t\tfactor4 = tmp_point.y / tmp_point.x;\n\t\t\t\t\t\toffsetY4 = -(factor4 * next_start_left.x - next_start_left.y);\n\t\t\t\t\t}\n\t\t\t\t\tif ((cur_vertical && cur_horizontal)||(next_horizontal && next_vertical)) console.log(\"ERROR\");\n\t\t\t\t\tif((factor1==factor2)||(factor3==factor4)) {\n\t\t\t\t\t\tconsole.log(\"STRAIGHT LINE factor same\");\n\t\t\t\t\t\tconsole.log(\"factor = \"+ factor1);\n\t\t\t\t\t\tconsole.log(\"factor = \"+ factor2);\n\t\t\t\t\t\tconsole.log(\"factor = \"+ factor3);\n\t\t\t\t\t\tconsole.log(\"factor = \"+ factor4);\n\t\t\t\t\t}\n\t\t\t\t\t//else\n\t\t\t\t\tif ((cur_horizontal && next_horizontal)||(cur_vertical && next_vertical)) console.log(\"STRAIGHT LINE\");\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ((cur_vertical)&&(next_horizontal)) {\n\t\t\t\t\t\t\tconsole.log(\"(cur_vertical)&&(next_horizontal)\");\n\t\t\t\t\t\t\tnext_start_right.x = end_right.x;\n\t\t\t\t\t\t\tend_right.y = next_start_right.y;\n\t\t\t\t\t\t\tnext_start_left.x = end_left.x;\n\t\t\t\t\t\t\tend_left.y = next_start_left.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ((cur_vertical)&&(!next_horizontal)) {\n\t\t\t\t\t\t\tconsole.log(\"(cur_vertical)&&(!next_horizontal)\");\n\t\t\t\t\t\t\tnext_start_right.x = end_right.x = start_right.x;\n\t\t\t\t\t\t\tnext_start_right.y = end_right.y = factor2 * start_right.x + offsetY2;\n\t\t\t\t\t\t\tnext_start_left.x = end_left.x = start_left.x;\n\t\t\t\t\t\t\tnext_start_left.y = end_left.y = factor4 * start_left.x + offsetY4;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ((!cur_vertical)&&(next_horizontal)) {\n\t\t\t\t\t\t\tconsole.log(\"(!cur_vertical)&&(next_horizontal)\");\n\t\t\t\t\t\t\tnext_start_right.y = end_right.y = next_start_right.y;\n\t\t\t\t\t\t\tnext_start_right.x = end_right.x = (next_start_right.y - offsetY1)/factor1;\n\t\t\t\t\t\t\tnext_start_left.y = end_left.y = next_start_left.y;\n\t\t\t\t\t\t\tnext_start_left.x = end_left.x = (next_start_left.y - offsetY3)/factor3;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ((next_vertical)&&(cur_horizontal)) {\n\t\t\t\t\t\t\tconsole.log(\"(next_vertical)&&(cur_horizontal)\");\n\t\t\t\t\t\t\tend_right.x = next_start_right.x;\n\t\t\t\t\t\t\tnext_start_right.y = end_right.y;\n\t\t\t\t\t\t\tend_left.x = next_start_left.x;\n\t\t\t\t\t\t\tnext_start_left.y = end_left.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ((next_vertical)&&(!cur_horizontal)) {\n\t\t\t\t\t\t\tconsole.log(\"(next_vertical)&&(!cur_horizontal)\");\n\t\t\t\t\t\t\tnext_start_right.x = end_right.x = next_start_right.x;\n\t\t\t\t\t\t\tnext_start_right.y = end_right.y = factor1 * next_start_right.x + offsetY1;\n\t\t\t\t\t\t\tnext_start_left.x = end_left.x = next_start_left.x;\n\t\t\t\t\t\t\tnext_start_left.y = end_left.y = factor3 * next_start_left.x + offsetY3;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ((!next_vertical)&&(cur_horizontal)) {\n\t\t\t\t\t\t\tconsole.log(\"(!next_vertical)&&(!cur_horizontal)\");\n\t\t\t\t\t\t\tnext_start_right.y = end_right.y;\n\t\t\t\t\t\t\tnext_start_right.x = end_right.x = (end_right.y - offsetY2)/factor2;\n\t\t\t\t\t\t\tnext_start_left.y = end_left.y;\n\t\t\t\t\t\t\tnext_start_left.x = end_left.x = (end_left.y - offsetY4)/factor4;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconsole.log(\"else\");\n\t\t\t\t\t\t\tconsole.log(\"factor1 - factor2 \"+(factor1 - factor2));\n\t\t\t\t\t\t\tconsole.log(\"offsetY1 - offsetY2 \"+(offsetY1 - offsetY2));\n\t\t\t\t\t\t\tconsole.log(\"factor3 - factor4 \"+(factor3 - factor4));\n\t\t\t\t\t\t\tconsole.log(\"offsetY3 - offsetY4 \"+(offsetY3 - offsetY4));\n\n\t\t\t\t\t\t\tnext_start_right.x = end_right.x = -((offsetY1 - offsetY2) / (factor1 - factor2));\n\t\t\t\t\t\t\tnext_start_right.y = end_right.y = factor1 * end_right.x + offsetY1;\n\t\t\t\t\t\t\tnext_start_left.x = end_left.x = -((offsetY3 - offsetY4) / (factor3 - factor4));\n\t\t\t\t\t\t\tnext_start_left.y = end_left.y = factor3 * end_left.x + offsetY3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tnext_start_right.x = end_right.x;\n\t\t\t\t\tnext_start_right.y = end_right.y;\n\t\t\t\t\tnext_start_left.x = end_left.x;\n\t\t\t\t\tnext_start_left.y = end_left.y;\n\n\n\t\t\t\t\t// calculate the correct end points\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < con_length; i++) {\n\t\t\t\tif(contour_types[i]==GraphicsPathCommand.CURVE_TO_2)\n\t\t\t\t\tcontinue;\n\t\t\t\tstart_right = contour_points[i * 4];\n\t\t\t\tstart_left = contour_points[i * 4 + 1];\n\t\t\t\tif(contour_types[i]==GraphicsPathCommand.CURVE_TO) {\n\t\t\t\t\ti++;\n\t\t\t\t\tctr_right = contour_points[i * 4];\n\t\t\t\t\tctr_left = contour_points[i * 4 + 1];\n\t\t\t\t\tend_right = contour_points[i * 4 + 2];\n\t\t\t\t\tend_left = contour_points[i * 4 + 3];\n\n\t\t\t\t\tvar finished_curves:Array<Point>=[];\n\t\t\t\t\tvar finished_curves_types:Array<number>=[];\n\t\t\t\t\tvar test_concave_curves:Array<Point>=[];\n\t\t\t\t\tvar test_convex_curves:Array<Point>=[];\n\t\t\t\t\tvar curve_sign:boolean=this.getSign(start_right.x, start_right.y,  ctr_right.x, ctr_right.y, end_right.x, end_right.y )>0;\n\t\t\t\t\tvar curve_sign2:number=-1;\n\t\t\t\t\tvar curve_sign3:number=1;\n\t\t\t\t\ttessVerts.length=0;\n\t\t\t\t\tif(curve_sign){\n\t\t\t\t\t\tvar subdivided:Array<number> = [];\n\t\t\t\t\t\tvar subdivided2:Array<number> = [];\n\t\t\t\t\t\tthis.subdivideCurve(start_right.x, start_right.y, ctr_right.x, ctr_right.y, end_right.x, end_right.y, start_left.x, start_left.y, ctr_left.x, ctr_left.y, end_left.x, end_left.y, subdivided, subdivided2);\n\t\t\t\t\t\tfor(var sc:number=0; sc<subdivided.length/6; sc++) {\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided[sc * 6], subdivided[sc * 6 + 1]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided[sc * 6 + 2], subdivided[sc * 6 + 3]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided[sc * 6 + 4], subdivided[sc * 6 + 5]));\n\t\t\t\t\t\t\tfinished_curves_types.push(-1);\n\t\t\t\t\t\t\ttessVerts.push(subdivided[sc * 6], subdivided[sc * 6 + 1]);\n\t\t\t\t\t\t\ttessVerts.push(subdivided[sc * 6 + 4], subdivided[sc * 6 + 5]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor(var sc:number=(subdivided2.length/6)-1; sc>=0; sc--) {\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided2[sc * 6], subdivided2[sc * 6 + 1]));\n\t\t\t\t\t\t\tfinished_curves_types.push(1);\n\t\t\t\t\t\t\ttessVerts.push(subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5]);\n\t\t\t\t\t\t\ttessVerts.push(subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3]);\n\t\t\t\t\t\t\ttessVerts.push(subdivided2[sc * 6], subdivided2[sc * 6 + 1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tvar subdivided:Array<number> = [];\n\t\t\t\t\t\tvar subdivided2:Array<number> = [];\n\t\t\t\t\t\tthis.subdivideCurve(start_left.x, start_left.y, ctr_left.x, ctr_left.y, end_left.x, end_left.y, start_right.x, start_right.y, ctr_right.x, ctr_right.y, end_right.x, end_right.y,subdivided, subdivided2);\n\t\t\t\t\t\tfor(var sc:number=0; sc<subdivided.length/6; sc++) {\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided[sc * 6], subdivided[sc * 6 + 1]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided[sc * 6 + 2], subdivided[sc * 6 + 3]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided[sc * 6 + 4], subdivided[sc * 6 + 5]));\n\t\t\t\t\t\t\tfinished_curves_types.push(-1);\n\t\t\t\t\t\t\ttessVerts.push(subdivided[sc * 6], subdivided[sc * 6 + 1]);\n\t\t\t\t\t\t\ttessVerts.push(subdivided[sc * 6 + 4], subdivided[sc * 6 + 5]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor(var sc:number=(subdivided2.length/6)-1; sc>=0; sc--) {\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided2[sc * 6], subdivided2[sc * 6 + 1]));\n\t\t\t\t\t\t\tfinished_curves_types.push(1);\n\t\t\t\t\t\t\ttessVerts.push(subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5]);\n\t\t\t\t\t\t\ttessVerts.push(subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3]);\n\t\t\t\t\t\t\ttessVerts.push(subdivided2[sc * 6], subdivided2[sc * 6 + 1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(tessVerts.length>0){\n\n\t\t\t\t\t\tvar verticesF32 = new Float32Array(tessVerts);\n\t\t\t\t\t\tif (Graphics._tess_obj == null) {\n\t\t\t\t\t\t\tconsole.log(\"No libtess2 tesselator available.\\nMake it available using Graphics._tess_obj=new TESS();\");\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tGraphics._tess_obj.addContour(verticesF32, 2, 8, tessVerts.length / 2);\n\t\t\t\t\t}\n\t\t\t\t\tvar t:number=0;\n\t\t\t\t\tfor(t=0; t<finished_curves_types.length;t++){\n\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves[t*3].x;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves[t*3].y;;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves_types[t];\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves[t*3+1].x;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves[t*3+1].y;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves_types[t];\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 0.5;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves[t*3+2].x;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves[t*3+2].y;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves_types[t];\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tend_right = contour_points[i * 4 + 2];\n\t\t\t\t\tend_left = contour_points[i * 4 + 3];\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = start_right.x;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = start_right.y;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = start_left.x;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = start_left.y;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_left.x;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_left.y;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = start_right.x;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = start_right.y;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_left.x;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_left.y;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_right.x;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_right.y;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t/*\n\t\t for (i = 0; i < final_vert_list.length/7; ++i)\n\t\t console.log(\"final verts stroke \"+i+\" = \"+final_vert_list[i*7]+\" / \"+final_vert_list[i*7+1]);\n\t\t */\n\t\tGraphics._tess_obj.tesselate(4/*TESS.WINDING_ODD*/, 0/*TESS.ELEMENT_POLYGONS*/, 3, 2, null);\n\n\t\tvar verts:Array<number>=[];\n\t\tvar all_verts:Array<Point>=[];\n\t\tvar vertIndicess:Array<number>=[];\n\t\tvar elems:Array<number>=[];\n\t\tverts = Graphics._tess_obj.getVertices();\n\t\telems = Graphics._tess_obj.getElements();\n\n\n\t\tvar numVerts:number = verts.length / 2;\n\t\tvar numElems:number = elems.length / 3;\n\t\tfor (i = 0; i < numVerts; ++i)\n\t\t\tall_verts.push(new Point(verts[i * 2], verts[i * 2 + 1]));\n\n\t\tfor (i = 0; i < numElems; ++i) {\n\t\t\tvar p1 = elems[i * 3];\n\t\t\tvar p2 = elems[i * 3 + 1];\n\t\t\tvar p3 = elems[i * 3 + 2];\n\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p3].x;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p3].y;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p2].x;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p2].y;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p1].x;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p1].y;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\n\t\t}\n\n\t\t// todo: handle material / subsprite settings, and check if a material / subsprite already exists for this settings\n\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(final_vert_list);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar elements:TriangleElements = new TriangleElements(attributesBuffer);\n\t\telements.setPositions(new Float2Attributes(attributesBuffer));\n\t\telements.setCustomAttributes(\"curves\", new Float3Attributes(attributesBuffer));\n\t\telements.setUVs(new Float2Attributes(attributesBuffer));\n\t\tvar material:MaterialBase = DefaultMaterialManager.getDefaultMaterial();\n\t\tmaterial.bothSides = true;\n\t\tmaterial.useColorTransform = true;\n\t\tmaterial.curves = true;\n\t\tthis._target.graphics.addGraphic(elements, material);\n\t\tthis._active_stroke_path=null;\n\t}\n\n\tpublic isClockWiseXY(point1x:number, point1y:number, point2x:number, point2y:number, point3x:number, point3y:number):boolean\n\t{\n\t\treturn ((point1x - point2x) * (point3y - point2y) - (point1y - point2y) * (point3x - point2x) < 0);\n\t}\n\n\tpublic getSign(ax:number, ay:number, cx:number, cy:number, bx:number, by:number):number\n\t{\n\t\t/*if(this.isClockWiseXY(ax, ay, bx, by, cx, cy)) {\n\t\t return (bx - ax) * (cy - ay) - (by - ay) * (cx - ax);\n\t\t }*/\n\t\treturn (ax - bx) * (cy - by) - (ay - by) * (cx - bx);\n\n\t}\n\n\tpublic pointInTri(ax:number, ay:number, bx:number, by:number ,cx:number, cy:number, xx:number, xy:number):boolean\n\t{\n\t\tvar b1:boolean = this.getSign(ax, ay, xx, xy, bx, by) > 0;\n\t\tvar b2:boolean = this.getSign(bx, by, xx, xy, cx, cy) > 0;\n\t\tvar b3:boolean = this.getSign(cx, cy, xx, xy, ax, ay) > 0;\n\t\treturn ((b1 == b2) && (b2 == b3));\n\t}\n\tpublic subdivideCurve(startx:number, starty:number, cx:number, cy:number, endx:number, endy:number, startx2:number, starty2:number, cx2:number, cy2:number, endx2:number, endy2:number, array_out:Array<number>, array2_out:Array<number>):void\n\t{\n\t\t/*\n\t\t if(!this.pointInTri(startx2, starty2, cx2, cy2, endx2, endy2, cx, cy)){\n\t\t }\n\t\t */\n\t\tarray_out.push(startx, starty, cx, cy,  endx, endy);\n\t\tarray2_out.push(startx2, starty2, cx2, cy2, endx2, endy2);\n\t\treturn;\n\t\tvar c1x = startx + (cx - startx) * 0.5;\n\t\tvar c1y = starty + (cy - starty) * 0.5;\n\t\tvar c2x = cx + (endx - cx) * 0.5;\n\t\tvar c2y = cy + (endy - cy) * 0.5;\n\t\tvar ax = c1x + (c2x - c1x) * 0.5;\n\t\tvar ay = c1y + (c2y - c1y) * 0.5;\n\n\t\tvar c1x2 = startx2 + (cx2 - startx2) * 0.5;\n\t\tvar c1y2 = starty2 + (cy2 - starty2) * 0.5;\n\t\tvar c2x2 = cx2 + (endx2 - cx2) * 0.5;\n\t\tvar c2y2 = cy2 + (endy2 - cy2) * 0.5;\n\t\tvar ax2 = c1x2 + (c2x2 - c1x2) * 0.5;\n\t\tvar ay2 = c1y2 + (c2y2 - c1y2) * 0.5;\n\t\tif(this.pointInTri(startx2, starty2, c1x2, c1y2, ax2, ay2, c1x, c1y)){\n\t\t\tthis.subdivideCurve(startx, starty, c1x, c1y, ax, ay, startx2, starty2, c1x2, c1y2, ax2, ay2, array_out, array2_out);\n\t\t}\n\t\telse{\n\t\t\tarray_out.push(startx, starty, c1x, c1y, ax, ay);\n\t\t\tarray2_out.push(startx2, starty2, c1x2, c1y2, ax2, ay2);\n\t\t}\n\n\t\tif(this.pointInTri(ax2, ay2, c2x2, c2y2,  endx2, endy2, c2x, c2y)){\n\t\t\tthis.subdivideCurve(ax, ay, c2x, c2y, endx, endy, ax2, ay2, c2x2, c2y2, endx2, endy2, array_out, array2_out);\n\t\t}\n\t\telse{\n\t\t\tarray_out.push(ax, ay, c2x, c2y, endx, endy);\n\t\t\tarray2_out.push(ax2, ay2, c2x2, c2y2, endx2, endy2);\n\t\t}\n\t}\n\tpublic draw_fill(){\n\t\tif(this._active_fill_path==null)return;\n\t\tthis._active_fill_path.finalizeContour();\n\n\t\tvar contour_commands:Array<Array<number> >=this._active_fill_path.commands;\n\t\tvar contour_data:Array<Array<number> >=this._active_fill_path.data;\n\t\tvar contour_draw_directions:Array<number>=this._active_fill_path.draw_directions;\n\t\tvar commands:Array<number>;\n\t\tvar data:Array<number>;\n\t\tvar i:number=0;\n\t\tvar k:number=0;\n\t\tvar vert_cnt:number=0;\n\t\tvar data_cnt:number=0;\n\t\tvar draw_direction:number=0;\n\t\tvar contours_vertices:Array<Array<number>> = [[]];\n\t\tvar final_vert_list:Array<number> = [];\n\t\tvar final_vert_cnt:number=0;\n\t\tvar lastPoint:Point=new Point();\n\t\tfor(k=0; k<contour_commands.length; k++) {\n\t\t\tcontours_vertices.push([]);\n\t\t\tvert_cnt = 0;\n\t\t\tdata_cnt = 0;\n\t\t\tcommands=contour_commands[k];\n\t\t\tdata=contour_data[k];\n\t\t\tdraw_direction=contour_draw_directions[k];\n\t\t\tfor (i = 0; i < commands.length; i++) {\n\t\t\t\tswitch (commands[i]) {\n\t\t\t\t\tcase GraphicsPathCommand.MOVE_TO:\n\t\t\t\t\t\tlastPoint.x = data[data_cnt++];\n\t\t\t\t\t\tlastPoint.y = data[data_cnt++];\n\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.x;\n\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.y;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase GraphicsPathCommand.LINE_TO:\n\t\t\t\t\t\tlastPoint.x = data[data_cnt++];\n\t\t\t\t\t\tlastPoint.y = data[data_cnt++];\n\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.x;\n\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.y;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase GraphicsPathCommand.CURVE_TO:\n\t\t\t\t\t\tvar curve_direction:number = data[data_cnt++];\n\t\t\t\t\t\tvar control_x:number = data[data_cnt++];\n\t\t\t\t\t\tvar control_y:number = data[data_cnt++];\n\t\t\t\t\t\tvar end_x:number = data[data_cnt++];\n\t\t\t\t\t\tvar end_y:number = data[data_cnt++];\n\t\t\t\t\t\tvar curve_attr_1 = -1;\n\t\t\t\t\t\tif (draw_direction > 0) {\n\t\t\t\t\t\t\tif (curve_direction == 1) {\n\t\t\t\t\t\t\t\t//convex\n\t\t\t\t\t\t\t\t//console.log(\"convex\");\n\t\t\t\t\t\t\t\tcurve_attr_1 = 1;\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = control_x;\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = control_y;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = end_x;\n\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = end_y;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif (curve_direction == 2) {\n\t\t\t\t\t\t\t\t//convex\n\t\t\t\t\t\t\t\t//console.log(\"convex\");\n\t\t\t\t\t\t\t\tcurve_attr_1 = 1;\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = control_x;\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = control_y;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = end_x;\n\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = end_y;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(!this.isClockWiseXY(end_x, end_y, control_x, control_y, lastPoint.x, lastPoint.y)){\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_x;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_y;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = control_x;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = control_y;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.5;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = lastPoint.x;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = lastPoint.y;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = lastPoint.x;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = lastPoint.y;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = control_x;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = control_y;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.5;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_x;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_y;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastPoint.x = end_x;\n\t\t\t\t\t\tlastPoint.y = end_y;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase GraphicsPathCommand.CUBIC_CURVE:\n\t\t\t\t\t\t//todo\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar verts:Array<number>=[];\n\t\tvar all_verts:Array<Point>=[];\n\t\tvar vertIndicess:Array<number>=[];\n\t\tvar elems:Array<number>=[];\n\t\tGraphics._tess_obj.newTess(1024 * 512);\n\t\tfor(k=0; k<contours_vertices.length; k++) {\n\t\t\tvar vertices=contours_vertices[k];\n\t\t\t/*\n\t\t\t for (i = 0; i < vertices.length / 2; ++i)\n\t\t\t console.log(\"vert collected\" + i + \" = \" + vertices[i * 2] + \" / \" + vertices[i * 2 + 1]);\n\t\t\t */\n\t\t\tvar verticesF32 = new Float32Array(vertices);\n\t\t\t//var verticesF32 = new Float32Array([0,0, 100,0, 100,100, 0,100]);\n\t\t\t//console.log(\"in vertices\", vertices);\n\t\t\t//var tess = new TESS();\n\t\t\tif (Graphics._tess_obj == null) {\n\t\t\t\tconsole.log(\"No libtess2 tesselator available.\\nMake it available using Graphics._tess_obj=new TESS();\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tGraphics._tess_obj.addContour(verticesF32, 2, 8, vertices.length / 2);\n\n\t\t}\n\t\tGraphics._tess_obj.tesselate(0/*TESS.WINDING_ODD*/, 0/*TESS.ELEMENT_POLYGONS*/, 3, 2, null);\n\n\t\t//console.log(\"out vertices\", Graphics._tess_obj.getVertices());\n\t\tverts = Graphics._tess_obj.getVertices();\n\t\telems = Graphics._tess_obj.getElements();\n\t\t//console.log(\"out elements\", Graphics._tess_obj.getElements());\n\n\n\t\tvar numVerts:number = verts.length / 2;\n\t\tvar numElems:number = elems.length / 3;\n\t\tfor (i = 0; i < numVerts; ++i)\n\t\t\tall_verts.push(new Point(verts[i * 2], verts[i * 2 + 1]));\n\n\t\tfor (i = 0; i < numElems; ++i) {\n\t\t\tvar p1 = elems[i * 3];\n\t\t\tvar p2 = elems[i * 3 + 1];\n\t\t\tvar p3 = elems[i * 3 + 2];\n\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p3].x;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p3].y;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p2].x;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p2].y;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p1].x;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p1].y;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\n\t\t}\n\t\t//for (i = 0; i < final_vert_list.length/7; ++i)\n\t\t//\tconsole.log(\"final verts \"+i+\" = \"+final_vert_list[i*7]+\" / \"+final_vert_list[i*7+1]);\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(final_vert_list);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar elements:TriangleElements = new TriangleElements(attributesBuffer);\n\t\telements.setPositions(new Float2Attributes(attributesBuffer));\n\t\telements.setCustomAttributes(\"curves\", new Float3Attributes(attributesBuffer));\n\t\telements.setUVs(new Float2Attributes(attributesBuffer));\n\t\tvar material:MaterialBase = DefaultMaterialManager.getDefaultMaterial();\n\t\tmaterial.bothSides = true;\n\t\tmaterial.useColorTransform = true;\n\t\tmaterial.curves = true;\n\t\tthis._target.graphics.addGraphic(elements, material);\n\t\tthis._active_fill_path=null;\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import ErrorBase\t\t\t\t= require(\"awayjs-core/lib/errors/ErrorBase\");\n\nclass CastError extends ErrorBase\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends EventBase\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CameraEvent\n\t{\n\t\treturn new CameraEvent(this.type, this._camera);\n\t}\n}\n\nexport = CameraEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\n\nclass DisplayObjectEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\n\t/**\n\t *\n\t */\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_PARTITION_BOUNDS:string = \"invalidatePartitionBounds\";\n\n\tprivate _object:DisplayObject;\n\n\tpublic get object():DisplayObject\n\t{\n\t\treturn this._object;\n\t}\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis._object = object;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():DisplayObjectEvent\n\t{\n\t\treturn new DisplayObjectEvent(this.type, this._object);\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.ElementsEvent\n * @see away.core.base.Graphics\n */\nclass ElementsEvent extends EventBase\n{\n\t/**\n\t * Dispatched when a Elements's index data has been updated.\n\t */\n\tpublic static INVALIDATE_INDICES:string = \"invalidateIndices\";\n\n\t/**\n\t * Dispatched when a Elements's index data has been disposed.\n\t */\n\tpublic static CLEAR_INDICES:string = \"clearIndices\";\n\t\n\t/**\n\t * Dispatched when a Elements's vertex data has been updated.\n\t */\n\tpublic static INVALIDATE_VERTICES:string = \"invalidateVertices\";\n\n\t/**\n\t * Dispatched when a Elements's vertex data has been disposed.\n\t */\n\tpublic static CLEAR_VERTICES:string = \"clearVertices\";\n\n\t\n\tprivate _attributesView:AttributesView;\n\n\t/**\n\t * Create a new GraphicsEvent\n\t * @param type The event type.\n\t * @param attributesView An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, attributesView:AttributesView)\n\t{\n\t\tsuper(type);\n\n\t\tthis._attributesView = attributesView;\n\t}\n\n\t/**\n\t * The attributes view of the vertex data.\n\t */\n\tpublic get attributesView():AttributesView\n\t{\n\t\treturn this._attributesView;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():ElementsEvent\n\t{\n\t\treturn new ElementsEvent(this.type, this._attributesView);\n\t}\n}\n\nexport = ElementsEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nclass LightEvent extends EventBase\n{\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():LightEvent\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport IRenderable\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends EventBase\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The entity inside which the event took place.\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderable:IRenderable;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the elements where the event took place.\n\t */\n\tpublic elementIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic position:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic normal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():MouseEvent\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.entity = this.entity;\n\t\tresult.renderable = this.renderable;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.position = this.position;\n\t\tresult.normal = this.normal;\n\t\tresult.elementIndex = this.elementIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.entity.sceneTransform.transformVector(this.position);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.entity.sceneTransform.deltaTransformVector(this.normal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import EventBase\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport IRenderable\t\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableEvent\n * @see away.core.base.Graphics\n */\nclass RenderableEvent extends EventBase\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static INVALIDATE_RENDER_OWNER:string = \"invalidateRenderable\";\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_ELEMENTS:string = \"invalidateElements\";\n\n\tprivate _renderable:IRenderable;\n\n\t/**\n\t * Create a new GraphicsEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderable:IRenderable)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderable = renderable;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderable():IRenderable\n\t{\n\t\treturn this._renderable;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():RenderableEvent\n\t{\n\t\treturn new RenderableEvent(this.type, this._renderable);\n\t}\n}\n\nexport = RenderableEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nclass RendererEvent extends EventBase\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nclass ResizeEvent extends EventBase\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():ResizeEvent\n\t{\n\t\treturn new ResizeEvent(this.type, this._oldHeight, this._oldWidth);\n\t}\n}\n\nexport = ResizeEvent;",
    "import EventBase\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\n\nclass StyleEvent extends EventBase\n{\n\tprivate _style:Style;\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_PROPERTIES:string = \"invalidateProperties\";\n\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tconstructor(type:string, style:Style)\n\t{\n\t\tsuper(type);\n\n\t\tthis._style = style;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():StyleEvent\n\t{\n\t\treturn new StyleEvent(this.type, this._style);\n\t}\n}\n\nexport = StyleEvent;",
    "import EventBase\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\n\nclass SurfaceEvent extends EventBase\n{\n\tpublic static INVALIDATE_TEXTURE:string = \"invalidateTexture\";\n\n\tpublic static INVALIDATE_ANIMATION:string = \"invalidateAnimation\";\n\n\tpublic static INVALIDATE_PASSES:string = \"invalidatePasses\";\n\n\tprivate _surface:ISurface;\n\n\n\t/**\n\t * Create a new GraphicsEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, surface:ISurface)\n\t{\n\t\tsuper(type);\n\n\t\tthis._surface = surface;\n\t}\n\n\t/**\n\t * The surface of the renderable.\n\t */\n\tpublic get surface():ISurface\n\t{\n\t\treturn this._surface;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SurfaceEvent\n\t{\n\t\treturn new SurfaceEvent(this.type, this._surface);\n\t}\n}\n\nexport = SurfaceEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport IRenderable\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nclass TouchEvent extends EventBase\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:TouchEvent;\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\t\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\t\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic entity:IEntity;\n\t\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderable:IRenderable;\n\t\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\t\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\t\n\t/**\n\t * The index of the elements where the event took place.\n\t */\n\tpublic elementIndex:number;\n\t\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic position:Vector3D;\n\t\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic normal:Vector3D;\n\t\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\n\tpublic touchPointID:number;\n\t\n\t/**\n\t * Create a new TouchEvent object.\n\t * @param type The type of the TouchEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\t\t\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\t\n\t/**\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():TouchEvent\n\t{\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\t\t\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\t\t\n\t\tresult.view = this.view;\n\t\tresult.entity = this.entity;\n\t\tresult.renderable = this.renderable;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.position = this.position;\n\t\tresult.normal = this.normal;\n\t\tresult.elementIndex = this.elementIndex;\n\t\t\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\t\t\n\t\tresult._iParentEvent = this;\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.entity.sceneTransform.transformVector(this.position);\n\t}\n\t\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.entity.sceneTransform.deltaTransformVector(this.normal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = TouchEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport Transform\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\n\nclass TransformEvent extends EventBase\n{\n\tprivate _transform:Transform;\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_MATRIX3D:string = \"invalidateMatrix3D\";\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_COLOR_TRANSFORM:string = \"invalidateColorTransform\";\n\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\tconstructor(type:string, transform:Transform)\n\t{\n\t\tsuper(type);\n\n\t\tthis._transform = transform;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TransformEvent\n\t{\n\t\treturn new TransformEvent(this.type, this._transform);\n\t}\n}\n\nexport = TransformEvent;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ElementsEvent\t\t\t\t= require(\"awayjs-display/lib/events/ElementsEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollision\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollision\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * @class away.base.TriangleElements\n */\nclass ElementsBase extends AssetBase\n{\n\tprivate _indices:Short3Attributes;\n\tprivate _customAttributesNames:Array<string> = new Array<string>();\n\tprivate _customAttributes:Object = new Object();\n\t\n\tprivate _numElements:number = 0;\n\n\tpublic _concatenatedBuffer:AttributesBuffer;\n\n\tprivate _invalidateIndices:ElementsEvent;\n\n\tpublic _verticesDirty:Object = new Object();\n\tpublic _invalidateVertices:Object = new Object();\n\n\t\n\tpublic get concatenatedBuffer():AttributesBuffer\n\t{\n\t\treturn this._concatenatedBuffer;\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Short3Attributes\n\t{\n\t\treturn this._indices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getCustomAtributesNames():Array<string>\n\t{\n\t\treturn this._customAttributesNames;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getCustomAtributes(name:string):AttributesView\n\t{\n\t\treturn this._customAttributes[name];\n\t}\n\t\n\t/**\n\t * The total amount of triangles in the TriangleElements.\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._numElements;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper();\n\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\n\t}\n\n\n\tpublic copyTo(elements:ElementsBase)\n\t{\n\t\tif (this.indices)\n\t\t\telements.setIndices(this.indices.clone());\n\t\t\n\t\tfor (var name in this._customAttributes)\n\t\t\telements.setCustomAttributes(name, this.getCustomAtributes(name).clone());\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tif (this._indices) {\n\t\t\tthis._indices.dispose();\n\t\t\tthis._indices = null;\n\t\t}\n\t\t\n\t\tfor (var name in this._customAttributes) {\n\t\t\tthis._customAttributes[name].dispose();\n\t\t\tdelete this._customAttributes;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleElements.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Short3Attributes) {\n\t\t\tif (this._indices)\n\t\t\t\tthis.clearIndices();\n\n\t\t\tthis._indices = <Short3Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._indices)\n\t\t\t\tthis._indices = new Short3Attributes();\n\n\t\t\tthis._indices.set(values, offset);\n\t\t} else if (this._indices) {\n\t\t\tthis._indices.dispose();\n\t\t\tthis._indices = null;\n\n\t\t\tthis.clearIndices();\n\t\t}\n\n\t\tif (this._indices) {\n\t\t\tthis._numElements = this._indices.count;\n\n\t\t\tthis.invalidateIndicies();\n\t\t} else {\n\t\t\tthis._numElements = 0;\n\t\t}\n\t}\n\t\n\t/**\n\t * Updates custom attributes.\n\t */\n\tpublic setCustomAttributes(name:string, array:Array<number>, offset?:number);\n\tpublic setCustomAttributes(name:string, arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic setCustomAttributes(name:string, attributesView:AttributesView, offset?:number);\n\tpublic setCustomAttributes(name:string, values:any, offset:number = 0)\n\t{\n\t\tif (values == this._customAttributes[name])\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._customAttributes[name]);\n\t\t\tthis._customAttributes[name] = values;\n\t\t} else if (values) {\n\t\t\tif (!this._customAttributes[name])\n\t\t\t\tthis._customAttributes[name] = new Float3Attributes(this._concatenatedBuffer); //default custom atrributes is Float3\n\n\t\t\tthis._customAttributes[name].set(values, offset);\n\t\t} else if (this._customAttributes[name]) {\n\t\t\tthis.clearVertices(this._customAttributes[name]);\n\t\t\tthis._customAttributesNames.splice(this._customAttributesNames.indexOf(name), 1);\n\t\t\tdelete this._customAttributes[name];\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._customAttributes[name]);\n\n\t\tthis._verticesDirty[this._customAttributes[name].id] = false;\n\n\t\tif (this._customAttributesNames.indexOf(name) == -1)\n\t\t\tthis._customAttributesNames.push(name);\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():ElementsBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number, box:Box):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate invalidateIndicies()\n\t{\n\t\tif (!this._invalidateIndices)\n\t\t\tthis._invalidateIndices = new ElementsEvent(ElementsEvent.INVALIDATE_INDICES, this._indices);\n\n\t\tthis.dispatchEvent(this._invalidateIndices);\n\t}\n\n\tprivate clearIndices()\n\t{\n\t\tthis.dispatchEvent(new ElementsEvent(ElementsEvent.CLEAR_INDICES, this._indices));\n\t}\n\n\tpublic invalidateVertices(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\n\t\t\treturn;\n\n\t\tthis._verticesDirty[attributesView.id] = true;\n\n\t\tif (!this._invalidateVertices[attributesView.id])\n\t\t\tthis._invalidateVertices[attributesView.id] = new ElementsEvent(ElementsEvent.INVALIDATE_VERTICES, attributesView);\n\n\t\tthis.dispatchEvent(this._invalidateVertices[attributesView.id]);\n\t}\n\n\n\tpublic clearVertices(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tattributesView.dispose();\n\n\t\tthis.dispatchEvent(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, attributesView));\n\n\t\tthis._verticesDirty[attributesView.id] = null;\n\t\tthis._invalidateVertices[attributesView.id] = null;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollision:PickingCollision):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = ElementsBase;",
    "class ElementsType\n{\n\t/**\n\t *\n\t */\n\tpublic static TRIANGLE:string = \"triangle\";\n\n\t/**\n\t *\n\t */\n\tpublic static LINE:string = \"line\";\n}\n\nexport = ElementsType;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport Graphic\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphic\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IAnimator \t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport ElementsEvent\t\t\t\t= require(\"awayjs-display/lib/events/ElementsEvent\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollision\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollision\");\nimport ITraverser\t\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\nimport ElementsUtils\t\t\t\t= require(\"awayjs-display/lib/utils/ElementsUtils\");\nimport ParticleData\t\t\t\t\t= require(\"awayjs-display/lib/animators/data/ParticleData\");\n\n/**\n *\n * Graphics is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Graphics object is assigned to a Sprite, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleGraphic objects.\n *\n *\n *\n * @see away.core.base.SubGraphics\n * @see away.entities.Sprite\n *\n * @class Graphics\n */\nclass Graphics extends AssetBase\n{\n\tpublic static assetType:string = \"[asset Graphics]\";\n\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate _onInvalidateVerticesDelegate:(event:ElementsEvent) => void;\n\n\tprivate _boxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tprivate _sphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid = true;\n\n\tprivate _material:MaterialBase;\n\tprivate _graphics:Array<Graphic> = new Array<Graphic>();\n\tprivate _animator:IAnimator;\n\tprivate _style:Style;\n\n\tpublic get assetType():string\n\t{\n\t\treturn Graphics.assetType;\n\t}\n\n\tpublic particles:Array<ParticleData>;\n\n\tpublic numParticles:number /*uint*/;\n\n\tpublic get count():number\n\t{\n\t\treturn this._graphics.length;\n\t}\n\n\t/**\n\t * Defines the animator of the graphics object.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._graphics.length;\n\t\tvar graphic:Graphic;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tgraphic = this._graphics[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (graphic.material) {\n\t\t\t\tgraphic.material.iRemoveOwner(graphic);\n\t\t\t\tgraphic.material.iAddOwner(graphic);\n\t\t\t}\n\n\t\t\t//invalidate any existing graphic objects in case they need to pull new elements\n\t\t\tgraphic.invalidateElements();\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._iInvalidateSurfaces();\n\t}\n\n\t/**\n\t * The material with which to render the Graphics.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._graphics.length;\n\t\tvar graphic:Graphic;\n\n\t\tif (this._material)\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!(graphic = this._graphics[i])._iGetExplicitMaterial())\n\t\t\t\t\tthis._material.iRemoveOwner(graphic);\n\n\t\tthis._material = value;\n\n\t\tif (this._material)\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!(graphic = this._graphics[i])._iGetExplicitMaterial())\n\t\t\t\t\tthis._material.iAddOwner(graphic);\n\t}\n\n\t/**\n\t * Creates a new Graphics object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\t\tthis._onInvalidateVerticesDelegate = (event:ElementsEvent) => this._onInvalidateVertices(event);\n\t}\n\n\t/**\n\t * Adds a GraphicBase wrapping a Elements.\n\t *\n\t * @param elements\n\t */\n\tpublic addGraphic(elements:ElementsBase, material:MaterialBase = null, style:Style = null):Graphic\n\t{\n\t\tvar graphic:Graphic;\n\n\t\tif (Graphic._available.length) {\n\t\t\tgraphic = Graphic._available.pop();\n\t\t\tgraphic._iIndex = this._graphics.length;\n\t\t\tgraphic.parent = this;\n\t\t\tgraphic.elements = elements;\n\t\t\tgraphic.material = material;\n\t\t\tgraphic.style = style;\n\t\t} else {\n\t\t\tgraphic = new Graphic(this._graphics.length, this, elements, material, style);\n\t\t}\n\n\t\tthis._graphics.push(graphic);\n\n\t\telements.addEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n\n\t\tthis.invalidate();\n\n\t\treturn graphic;\n\t}\n\n\tpublic removeGraphic(graphic:Graphic)\n\t{\n\t\tthis._graphics.splice(this._graphics.indexOf(graphic), 1);\n\n\t\tgraphic.elements.removeEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n\n\t\tgraphic.elements = null;\n\t\tgraphic.material = null;\n\t\tgraphic.style = null;\n\t\tgraphic.clear();\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic getGraphicAt(index:number):Graphic\n\t{\n\t\treturn this._graphics[index];\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].elements.applyTransformation(transform);\n\t}\n\n\tpublic copyTo(graphics:Graphics)\n\t{\n\t\tgraphics.material = this._material;\n\t\tgraphics.style = this.style;\n\t\tgraphics.particles = this.particles;\n\t\tgraphics.numParticles = this.numParticles;\n\t\tvar graphic:Graphic;\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tgraphic = this._graphics[i];\n\t\t\tgraphics.addGraphic(graphic.elements, graphic._iGetExplicitMaterial(), graphic._iGetExplicitStyle());\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tgraphics.animator = this._animator.clone();\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].elements.scale(scale);\n\t}\n\n\tpublic clear()\n\t{\n\t\tfor (var i:number = this._graphics.length - 1; i>=0; i--)\n\t\t\tthis._graphics[i].clear();\n\t}\n\n\t/**\n\t * Clears all resources used by the Graphics object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\t\tfor (var i:number = this._graphics.length - 1; i>=0; i--)\n\t\t\tthis._graphics[i].dispose();\n\n\t\tif (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar len:number = this._graphics.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].elements.scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic getBoxBounds():Box\n\t{\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._boxBoundsInvalid = false;\n\n\t\t\tif (!this._boxBounds)\n\t\t\t\tthis._boxBounds = new Box();\n\n\t\t\tif (this._graphics.length) {\n\t\t\t\tthis._boxBounds.setBoundIdentity();\n\t\t\t\tvar len:number = this._graphics.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\t\tthis._boxBounds = this._graphics[i].elements.getBoxBounds(this._boxBounds);\n\t\t\t} else {\n\t\t\t\tthis._boxBounds.setEmpty();\n\t\t\t}\n\t\t}\n\n\t\treturn this._boxBounds;\n\t}\n\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\ttarget = this._graphics[i].elements.getSphereBounds(center, target);\n\n\t\treturn target;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tsuper.invalidate();\n\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\t}\n\n\tpublic _iInvalidateSurfaces()\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].invalidateSurface();\n\t}\n\n\n\tpublic invalidateElements()\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].invalidateElements();\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number):boolean\n\t{\n\t\t//TODO: handle lines as well\n\t\tvar len:number = this._graphics.length;\n\t\tfor(var i:number = 0; i < len; i++)\n\t\t\tif (ElementsUtils.hitTestTriangleElements(x, y, 0, this.getBoxBounds(), <TriangleElements> this._graphics[i].elements))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\ttraverser.applyRenderable(this._graphics[i]);\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis._iInvalidateSurfaces();\n\t}\n\n\tprivate _onInvalidateVertices(event:ElementsEvent)\n\t{\n\t\tif (event.attributesView != (<TriangleElements> event.target).positions)\n\t\t\treturn;\n\n\t\tthis.invalidate();\n\t}\n}\n\nexport = Graphics;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport Sprite\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\nimport RenderableEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\nimport IRenderable \t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport IPickingCollider = require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollision = require(\"awayjs-display/lib/pick/PickingCollision\");\nimport DisplayObject = require(\"awayjs-display/lib/display/DisplayObject\");\n\n/**\n * Graphic wraps a Elements as a scene graph instantiation. A Graphic is owned by a Sprite object.\n *\n *\n * @see away.base.ElementsBase\n * @see away.entities.Sprite\n *\n * @class away.base.Graphic\n */\nclass Graphic extends AssetBase implements IRenderable\n{\n\tpublic static _available:Array<Graphic> = new Array<Graphic>();\n\n\tpublic static assetType:string = \"[asset Graphic]\";\n\n\tpublic _iIndex:number = 0;\n\n\tprivate _style:Style;\n\tprivate _material:MaterialBase;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\n\tpublic parent:Graphics;\n\n\t/**\n\t * The Elements object which provides the geometry data for this Graphic.\n\t */\n\tpublic elements:ElementsBase;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Graphic.assetType;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this.parent.animator;\n\t}\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The material used to render the current TriangleGraphic. If set to null, its parent Sprite's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this.parent.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The style used to render the current TriangleGraphic. If set to null, its parent Sprite's style will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style || this.parent.style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis.invalidateSurface();\n\t}\n\n\n\t/**\n\t * Creates a new Graphic object\n\t */\n\tconstructor(index:number, parent:Graphics, elements:ElementsBase, material:MaterialBase = null, style:Style = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\n\t\tthis._iIndex = index;\n\t\tthis.parent = parent;\n\t\tthis.elements = elements;\n\t\tthis.material = material;\n\t\tthis.style = style;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.parent.removeGraphic(this);\n\t\tthis.parent = null;\n\n\t\tGraphic._available.push(this);\n\t}\n\n\tpublic invalidateElements()\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_ELEMENTS, this));\n\t}\n\n\tpublic invalidateSurface()\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_RENDER_OWNER, this));\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic _iGetExplicitStyle():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidateSurface();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(pickingCollision:PickingCollision, pickingCollider:IPickingCollider):boolean\n\t{\n\t\treturn this.elements._iTestCollision(pickingCollider, this.material, pickingCollision)\n\t}\n\n}\n\nexport = Graphic;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ElementsUtils\t\t\t\t= require(\"awayjs-display/lib/utils/ElementsUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollision\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollision\");\n\n/**\n * @class LineElements\n */\nclass LineElements extends ElementsBase\n{\n\tpublic static assetType:string = \"[asset LineElements]\";\n\n\tprivate _numVertices:number = 0;\n\n\tprivate _positions:AttributesView;\n\tprivate _thickness:Float1Attributes;\n\tprivate _colors:Byte4Attributes;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineElements.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Float1Attributes\n\t{\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colors():Byte4Attributes\n\t{\n\t\tif (!this._colors)\n\t\t\tthis.setColors(this._colors);\n\n\t\treturn this._colors;\n\t}\n\n\t/**\n\t * The total amount of vertices in the LineElements.\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\t\t\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\t//TODO bounding calculations for lines\n\t\treturn target;\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\t//TODO bounding calculations for lines\n\t\treturn target;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tif (index/6 & 1) {\n\t\t\t\t\tpositions[index] = values[i + 3];\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\n\t\t\t\t\tpositions[index + 3] = values[i];\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[index] = values[i];\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\n\t\t\t\t}\n\n\t\t\t\tindex += 6;\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tvar o:number = index/6 - 4;\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._positions.set(positions, offset*4);\n\n\t\t\tthis.setIndices(indices, offset);\n\t\t} else {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.invalidateVertices(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic setThickness(array:Array<number>, offset?:number);\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\n\tpublic setThickness(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Float1Attributes) {\n\t\t\tthis._thickness = <Float1Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._thickness)\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\n\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis._thickness.set(thickness, offset*4);\n\t\t} else if (this._thickness) {\n\t\t\tthis._thickness.dispose();\n\t\t\tthis._thickness = null;\n\t\t}\n\n\t\tthis.invalidateVertices(this._thickness);\n\n\t\tthis._verticesDirty[this._thickness.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setColors(array:Array<number>, offset?:number);\n\tpublic setColors(float32Array:Float32Array, offset?:number);\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\n\tpublic setColors(values:any, offset:number = 0)\n\t{\n\t\tif (values) {\n\t\t\tif (values == this._colors)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Byte4Attributes) {\n\t\t\t\tthis.clearVertices(this._colors);\n\t\t\t\tthis._colors = <Byte4Attributes> values;\n\t\t\t} else {\n\t\t\t\tif (!this._colors)\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\n\n\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\tvar index:number = 0;\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tif (index/4 & 1) {\n\t\t\t\t\t\tcolors[index] = values[i + 4];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors[index] = values[i];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (++j == 4) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\ti += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\n\t\t\t\tthis._colors.set(colors, offset*4);\n\t\t\t}\n\t\t} else {\n\t\t\t//auto-derive colors\n\t\t\tthis._colors = ElementsUtils.generateColors(this.indices, this._colors, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.invalidateVertices(this._colors);\n\n\t\tthis._verticesDirty[this._colors.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._thickness.dispose();\n\t\tthis._thickness = null;\n\n\t\tthis._colors.dispose();\n\t\tthis._colors = null;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineElements\n\t{\n\t\tvar clone:LineElements = new LineElements(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this.indices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\t\tclone.setThickness(this._thickness.clone());\n\t\tclone.setColors(this._colors.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollision:PickingCollision):boolean\n\t{\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollision);\n\t}\n}\n\nexport = LineElements;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ElementsUtils\t\t\t\t= require(\"awayjs-display/lib/utils/ElementsUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollision\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollision\");\n\n/**\n * @class away.base.TriangleElements\n */\nclass TriangleElements extends ElementsBase\n{\n\tpublic static assetType:string = \"[asset TriangleElements]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\n\tprivate _positions:AttributesView;\n\tprivate _normals:Float3Attributes;\n\tprivate _tangents:Float3Attributes;\n\tprivate _uvs:AttributesView;\n\tprivate _jointIndices:AttributesView;\n\tprivate _jointWeights:AttributesView;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\n\tprivate _faceNormals:Float4Attributes;\n\tprivate _faceTangents:Float3Attributes;\n\n\t//used for hittesting geometry\n\tpublic cells:Array<Array<number>> = new Array<Array<number>>();\n\tpublic lastCollisionIndex:number = - 1;\n\tpublic divisions:number;\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleElements.assetType;\n\t}\n\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per sprite. Only applicable to\n\t * skeleton animations that utilise more than one sprite object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tif (this._jointIndices)\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\n\n\t\tif (this._jointWeights)\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\tif (!this._positions)\n\t\t\tthis.setPositions(new Float3Attributes(this._concatenatedBuffer));\n\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get normals():Float3Attributes\n\t{\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\n\t\t\tthis.setNormals(this._normals);\n\n\t\treturn this._normals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get tangents():Float3Attributes\n\t{\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\n\t\t\tthis.setTangents(this._tangents);\n\n\t\treturn this._tangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Float4Attributes\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Float3Attributes\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():AttributesView\n\t{\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():AttributesView\n\t{\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():AttributesView\n\t{\n\t\treturn this._jointWeights;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\treturn ElementsUtils.getTriangleGraphicsBoxBounds(this.positions, target, this._numVertices);\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\treturn ElementsUtils.getTriangleGraphicsSphereBounds(this.positions, center, target, this._numVertices);\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._positions)\n\t\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer); //positions cannot be null\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.invalidateVertices(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.invalidateVertices(this._tangents);\n\n\t\tthis.invalidateVertices(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setNormals(array:Array<number>, offset?:number);\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setNormals(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif (values == this._normals)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.clearVertices(this._normals);\n\t\t\t\tthis._normals = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._normals)\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._normals.set(values, offset);\n\t\t\t} else if (this._normals) {\n\t\t\t\tthis.clearVertices(this._normals);\n\t\t\t\tthis._normals = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._normals = ElementsUtils.generateNormals(this.indices, this.faceNormals, this._normals, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.invalidateVertices(this._normals);\n\n\t\tthis._verticesDirty[this._normals.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic setTangents(array:Array<number>, offset?:number);\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setTangents(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif (values == this._tangents)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.clearVertices(this._tangents);\n\t\t\t\tthis._tangents = values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._tangents)\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._tangents.set(values, offset);\n\t\t\t} else if (this._tangents) {\n\t\t\t\tthis.clearVertices(this._tangents);\n\t\t\t\tthis._tangents = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._tangents = ElementsUtils.generateTangents(this.indices, this.faceTangents, this.faceNormals, this._tangents, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.invalidateVertices(this._tangents);\n\n\t\tthis._verticesDirty[this._tangents.id] = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic setUVs(attributesView:AttributesView, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._uvs)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._uvs);\n\t\t\tthis._uvs = values;\n\t\t} else if (values) {\n\t\t\tif (!this._uvs)\n\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._uvs.set(values, offset);\n\t\t} else if (this._uvs) {\n\t\t\tthis.clearVertices(this._uvs);\n\t\t\tthis._uvs = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic setJointIndices(array:Array<number>, offset?:number);\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\n\tpublic setJointIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointIndices)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._jointIndices);\n\t\t\tthis._jointIndices = values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointIndices)\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\toldIndex = values[i];\n\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value to dictionary lookup\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._jointIndices.set(values, offset);\n\n\t\t} else if (this._jointIndices) {\n\t\t\tthis.clearVertices(this._jointIndices);\n\t\t\tthis._jointIndices = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._jointIndices);\n\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic setJointWeights(array:Array<number>, offset?:number);\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\n\tpublic setJointWeights(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointWeights)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._jointWeights);\n\t\t\tthis._jointWeights = values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointWeights)\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tthis._jointWeights.set(values, offset);\n\n\t\t} else if (this._jointWeights) {\n\t\t\tthis.clearVertices(this._jointWeights);\n\t\t\tthis._jointWeights = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._jointWeights);\n\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tif (this._positions) {\n\t\t\tthis._positions.dispose();\n\t\t\tthis._positions = null;\n\t\t}\n\n\t\tif (this._normals) {\n\t\t\tthis._normals.dispose();\n\t\t\tthis._normals = null;\n\t\t}\n\n\t\tif (this._tangents) {\n\t\t\tthis._tangents.dispose();\n\t\t\tthis._tangents = null;\n\t\t}\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t\tif (this._jointIndices) {\n\t\t\tthis._jointIndices.dispose();\n\t\t\tthis._jointIndices = null;\n\t\t}\n\n\t\tif (this._jointWeights) {\n\t\t\tthis._jointWeights.dispose();\n\t\t\tthis._jointWeights = null;\n\t\t}\n\n\t\tif (this._faceNormals) {\n\t\t\tthis._faceNormals.dispose();\n\t\t\tthis._faceNormals = null;\n\t\t}\n\n\t\tif (this._faceTangents) {\n\t\t\tthis._faceTangents.dispose();\n\t\t\tthis._faceTangents = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleElements.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tsuper.setIndices(values, offset);\n\n\t\tthis._faceNormalsDirty = true;\n\t\tthis._faceTangentsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.invalidateVertices(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.invalidateVertices(this._tangents);\n\t}\n\n\tpublic copyTo(elements:TriangleElements)\n\t{\n\t\tsuper.copyTo(elements);\n\n\t\t//temp disable auto derives\n\t\telements.autoDeriveNormals = false;\n\t\telements.autoDeriveTangents = false;\n\n\t\telements.setPositions(this.positions.clone());\n\n\t\tif (this.normals)\n\t\t\telements.setNormals(this.normals.clone());\n\n\t\tif (this.tangents)\n\t\t\telements.setTangents(this.tangents.clone());\n\n\t\tif (this.uvs)\n\t\t\telements.setUVs(this.uvs.clone());\n\n\t\telements.jointsPerVertex = this._jointsPerVertex;\n\n\t\tif (this.jointIndices)\n\t\t\telements.setJointIndices(this.jointIndices.clone());\n\n\t\tif (this.jointWeights)\n\t\t\telements.setJointWeights(this.jointWeights.clone());\n\n\t\t//return auto derives to cloned values\n\t\telements.autoDeriveNormals = this._autoDeriveNormals;\n\t\telements.autoDeriveTangents = this._autoDeriveTangents;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleElements\n\t{\n\t\tvar clone:TriangleElements = new TriangleElements(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tthis.copyTo(clone);\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tif (this.uvs) // only scale if uvs exist\n\t\t\tElementsUtils.scaleUVs(scaleU, scaleV, this.uvs, this._numVertices);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tElementsUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tElementsUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tthis._faceTangents = ElementsUtils.generateFaceTangents(this.indices, this.positions, this.uvs || this.positions, this._faceTangents, this.numElements);\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tthis._faceNormals = ElementsUtils.generateFaceNormals(this.indices, this.positions, this._faceNormals, this.numElements);\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollision:PickingCollision):boolean\n\t{\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollision);\n\t}\n}\n\nexport = TriangleElements;",
    "import Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/image/BitmapImageCube\");\n\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport LineElements\t\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Skybox\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Graphic\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphic\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultSampler2D:Sampler2D;\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\n\tprivate static _defaultTextureMaterial:BasicMaterial;\n\tprivate static _defaultColorMaterial:BasicMaterial;\n\tprivate static _defaultTexture:Single2DTexture;\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\n\n\tpublic static getDefaultMaterial(renderable:IRenderable = null):MaterialBase\n\t{\n\t\tif (renderable != null && renderable.isAsset(Graphic) && (<Graphic> renderable).elements.isAsset(LineElements)) {\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\n\t\t}\n\n\t\tif (renderable != null && renderable.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\n\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\n\t}\n\n\tpublic static getDefaultTexture(renderable:IRenderable = null):TextureBase\n\t{\n\t\tif (renderable != null && renderable.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tpublic static getDefaultImage2D():BitmapImage2D\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createDefaultImage2D();\n\n\t\treturn DefaultMaterialManager._defaultBitmapImage2D;\n\t}\n\n\tpublic static getDefaultImageCube():BitmapImageCube\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\n\t\t\tDefaultMaterialManager.createDefaultImageCube();\n\n\t\treturn DefaultMaterialManager._defaultBitmapImageCube;\n\t}\n\n\tpublic static getDefaultSampler():Sampler2D\n\t{\n\t\tif (!DefaultMaterialManager._defaultSampler2D)\n\t\t\tDefaultMaterialManager.createDefaultSampler2D();\n\n\t\treturn DefaultMaterialManager._defaultSampler2D;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture();\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tprivate static createDefaultCubeTexture()\n\t{\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture();\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t}\n\n\tprivate static createDefaultImageCube()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createDefaultImage2D();\n\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\n\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\n\t}\n\n\tprivate static createDefaultImage2D()\n\t{\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++)\n\t\t\tfor (j = 0; j < 8; j++)\n\t\t\t\tif ((j & 1) ^ (i & 1))\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\n\t}\n\n\tprivate static createDefaultTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultTextureMaterial.texture = DefaultMaterialManager._defaultTexture;\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\n\t}\n\n\tprivate static createDefaultCubeTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.texture = DefaultMaterialManager._defaultCubeTexture;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\n\t}\n\n\tprivate static createDefaultColorMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial(0xFFFFFF);\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\n\t}\n\n\tprivate static createDefaultSampler2D()\n\t{\n\t\tDefaultMaterialManager._defaultSampler2D = new Sampler2D();\n\t}\n\n}\n\nexport = DefaultMaterialManager;",
    "import DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/display/MovieClip\");\n\nclass FrameScriptManager\n{\n\t// FrameScript debugging:\n\t// the first line of a FrameScript should be a comment that represents the functions unique name\n\t// the exporter creates a js file, containing a object that has the framescripts functions set as properties according to the unique names\n\t// this object can be set as \"frameScriptDebug\" in order to enable debug mode\n\n\n\tpublic static frameScriptDebug:Object = undefined;\n\n\t//queue of objects for disposal\n\tprivate static _queued_dispose:Array<DisplayObject> = new Array<DisplayObject>();\n\n\t// queues pass1 of scripts.\n\tprivate static _queued_mcs:Array<MovieClip> = [];\n\tprivate static _queued_scripts:Array<Function> = [];\n\n\t// queues pass2 of scripts. this will be inserted in reversed order into pass1 queue right before something should be added to pass1\n\tprivate static _queued_mcs_pass2:Array<MovieClip> = [];\n\tprivate static _queued_scripts_pass2:Array<Function> = [];\n\n\tprivate static _active_intervals:Object = new Object(); // maps id to function\n\n\tprivate static _intervalID:number=0;\n\tpublic static setInterval(func:any):number\n\t{\n\t\tthis._intervalID++;\n\t\tthis._active_intervals[this._intervalID]=func;\n\t\treturn this._intervalID\n\t}\n\n\tpublic static clearInterval(id:number):void\n\t{\n\t\tdelete this._active_intervals[id];\n\t}\n\n\tpublic static execute_intervals():void\n\t{\n\t\tfor(var key in this._active_intervals){\n\t\t\tthis._active_intervals[key].call();\n\t\t}\n\t}\n\n\tpublic static add_child_to_dispose(child:DisplayObject)\n\t{\n\t\tthis._queued_dispose.push(child);\n\t}\n\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\n\t{\n\t\t// whenever we queue scripts of new objects, we first inject the lists of pass2\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2.length = 0;\n\t\tthis._queued_scripts_pass2.length = 0;\n\t\tthis._queued_mcs.push(mc);\n\t\tthis._queued_scripts.push(script);\n\t}\n\n\tpublic static add_script_to_queue_pass2(mc:MovieClip, script:Function):void\n\t{\n\t\tthis._queued_mcs_pass2.push(mc);\n\t\tthis._queued_scripts_pass2.push(script);\n\t}\n\n\tpublic static execute_queue():void\n\t{\n\t\tif(this._queued_mcs.length==0 && this._queued_mcs_pass2.length==0)\n\t\t\treturn;\n\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2.length = 0;\n\t\tthis._queued_scripts_pass2.length = 0;\n\n\t\tvar mc:MovieClip;\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\n\t\t\t// during the loop we might add more scripts to the queue\n\t\t\tmc=this._queued_mcs[i];\n\t\t\tif(mc.scene!=null) {\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\n\t\t\t//\ttry {\n\t\t\t\tthis._queued_scripts[i].call(caller);\n\t\t\t//\t}\n\t\t\t/*\tcatch (err) {\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\n\t\t\t\t\tconsole.log(err.message);\n\t\t\t\t\tthrow err;\n\t\t\t\t}*/\n\t\t\t}\n\t\t}\n\t\t// all scripts executed. clear all\n\t\tthis._queued_mcs.length = 0;\n\t\tthis._queued_scripts.length = 0;\n\t}\n\n\tpublic static execute_dispose()\n\t{\n\t\tvar len:number = this._queued_dispose.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._queued_dispose[i].dispose();\n\n\t\tthis._queued_dispose.length = 0;\n\t}\n}\nexport = FrameScriptManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/View\");\nimport PickingCollision\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollision\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\nimport FrameScriptManager\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollision:PickingCollision;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollision;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollision != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollision)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\t if (forceMouseMove && this._iCollision)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = <DisplayObject> event.entity;\n\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\n\t\t\twhile (dispatcher) {\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\n\t\t\t\t\tdispatcher.dispatchEvent(event);\n\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t}\n\t\t\t// not totally sure, but i think just calling it is easier and cheaper than any options for that\n\t\t\t// if nothing is queued, the function will return directly anyway\n\t\t\tFrameScriptManager.execute_queue();\n\n\t\t}\n\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollision;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tif(view && view.htmlElement) {\n\t\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\t\t\tthis._viewLookup.push(view);\n\t\t}\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tif(view && view.htmlElement) {\n\t\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t\t}\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent, collision:PickingCollision = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = (sourceEvent.clientX != null)? sourceEvent.clientX : sourceEvent.changedTouches[0].clientX;\n\t\t\tevent.screenY = (sourceEvent.clientY != null)? sourceEvent.clientY : sourceEvent.changedTouches[0].clientY;\n\t\t}\n\n\t\tif (collision == null)\n\t\t\tcollision = this._iCollision;\n\n\t\t// 3D properties.\n\t\tif (collision) {\n\t\t\t// Object.\n\t\t\tevent.entity = collision.entity;\n\t\t\tevent.renderable = collision.renderable;\n\t\t\t// UV.\n\t\t\tevent.uv = collision.uv;\n\t\t\t// Position.\n\t\t\tevent.position = collision.position? collision.position.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.normal = collision.normal? collision.normal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.elementIndex = collision.elementIndex;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.entity = null;\n\t\t\tevent.position = this._nullVector;\n\t\t\tevent.normal = this._nullVector;\n\t\t\tevent.elementIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event)\n\t{\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tview._pTouchPoints.length = 0;\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\n\t\t\tif (event.touches) {\n\t\t\t\tvar touch;\n\t\t\t\tvar len:number = event.touches.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\t\ttouch = event.touches[i];\n\t\t\t\t\tview._pTouchPoints.push(new TouchPoint(touch.clientX + bounds.left, touch.clientY + bounds.top, touch.identifier));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._iUpdateDirty)\n\t\t\t\tcontinue;\n\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollision)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/View\");\nimport PickingCollision\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollision\");\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\n\nclass TouchManager\n{\n\tprivate static _instance:TouchManager;\n\n\tprivate _updateDirty:boolean = true;\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _numTouchPoints:number;\n\tprivate _touchPoint:TouchPoint;\n\tprivate _iCollision:PickingCollision;\n\tprivate _previousCollidingObject:PickingCollision;\n\tpublic static _iCollisionFromTouchId:Object;\n\tpublic static _previousCollidingObjectFromTouchId:Object;\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\n\t\n\tprivate _touchPoints:Array<TouchPoint>;\n\tprivate _touchPointFromId:Object;\n\t\n\tprivate _touchMoveEvent:TouchEvent;\n\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\n\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\n\t\n\tconstructor()\n\t{\n\t\tthis._touchPoints = new Array<TouchPoint>();\n\t\tthis._touchPointFromId = new Object();\n\t\tTouchManager._iCollisionFromTouchId = new Object();\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\n\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\n\t}\n\n\tpublic static getInstance():TouchManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new TouchManager());\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Interface.\n\t// ---------------------------------------------------------------------\n\t\n\tpublic updateCollider(forceTouchMove:boolean)\n\t{\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t//\t\tthis._iCollision = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n\t\t//\t\tTouchManager._iCollisionFromTouchId[ this._touchPoint.id ] = this._iCollision;\n\t\t//\t}\n\t\t//}\n\t}\n\t\n\tpublic fireTouchEvents(forceTouchMove:boolean)\n\t{\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[i];\n\t\t\t// If colliding object has changed, queue over/out events.\n\t\t\tthis._iCollision = TouchManager._iCollisionFromTouchId[ this._touchPoint.id ];\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tif (this._iCollision != this._previousCollidingObject) {\n\t\t\t\tif (this._previousCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n\t\t\t\tif (this._iCollision)\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollision, this._touchPoint);\n\t\t\t}\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\n\t\t\tif (forceTouchMove && this._iCollision)\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollision, this._touchPoint);\n\t\t}\n\n\t\tvar event:AwayTouchEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = <DisplayObject> event.entity;\n\t\t\t\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._updateDirty = false;\n\t\t\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollisionFromTouchId[ this._touchPoint.id ];\n\t\t}\n\t}\n\t\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollision, touch:TouchPoint)\n\t{\n\t\t// 2D properties.\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\tevent.altKey = sourceEvent.altKey;\n\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\tevent.screenX = touch.x;\n\t\tevent.screenY = touch.y;\n\t\tevent.touchPointID = touch.id;\n\t\t\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.entity = collider.entity;\n\t\t\tevent.renderable = collider.renderable;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.position = collider.position? collider.position.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.normal = collider.normal? collider.normal.clone() : null;\n\t\t\t// ElementsIndex.\n\t\t\tevent.elementIndex = collider.elementIndex;\n\t\t\t\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.entity = null;\n\t\t\tevent.position = this._nullVector;\n\t\t\tevent.normal = this._nullVector;\n\t\t\tevent.elementIndex = 0;\n\t\t}\n\t\t\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Event handlers.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate onTouchBegin(event:TouchEvent)\n\t{\n\t\t\n\t\tvar touch:TouchPoint = new TouchPoint();\n\t\t//touch.id = event.touchPointID;\n\t\t//touch.x = event.stageX;\n\t\t//touch.y = event.stageY;\n\t\tthis._numTouchPoints++;\n\t\tthis._touchPoints.push(touch);\n\t\tthis._touchPointFromId[ touch.id ] = touch;\n\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n\n\t\tthis._iCollision = TouchManager._iCollisionFromTouchId[ touch.id ];\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollision, touch);\n\n\t\tthis._updateDirty = true;\n\t}\n\t\n\tprivate onTouchMove(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t////touch.x = event.stageX;\n\t\t////touch.y = event.stageY;\n\t\t//\n\t\t//this._iCollision = TouchManager._iCollisionFromTouchId[ touch.id ];\n\t\t//\n\t\t//if (this._iCollision)\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollision, touch);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n\t\n\tprivate onTouchEnd(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t//this._iCollision = TouchManager._iCollisionFromTouchId[ touch.id ];\n\t\t//if (this._iCollision)\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollision, touch);\n\t\t//\n\t\t//this._touchPointFromId[ touch.id ] = null;\n\t\t//this._numTouchPoints--;\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n}\n\n\nexport = TouchManager;\n\nclass TouchPoint\n{\n\tpublic id:number;\n\tpublic x:number;\n\tpublic y:number;\n}\n\n\n/**\n * Classes for Touch Interfaces\n */\ninterface TouchEvent extends UIEvent {\n\ttouches: TouchList;\n\ttargetTouches: TouchList;\n\tchangedTouches: TouchList;\n\taltKey: boolean;\n\tmetaKey: boolean;\n\tctrlKey: boolean;\n\tshiftKey: boolean;\n\trotation: number;\n\tscale: number;\n\n\t// for iOS\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\n\n\t// for Android\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\n}\n\ndeclare var TouchEvent: {\n\tprototype: TouchEvent;\n\tnew (): TouchEvent;\n}\n\ninterface TouchList {\n\tlength: number;\n\t[index: number]: Touch;\n\titem: (index: number) => Touch;\n}\n\ninterface Touch {\n\tidentifier: number;\n\ttarget: EventTarget;\n\tscreenX: number;\n\tscreenY: number;\n\tclientX: number;\n\tclientY: number;\n\tpageX: number;\n\tpageY: number;\n}\n\ninterface Window {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface Document {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface HTMLElement {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ndeclare var ontouchstart: (ev: TouchEvent) => any;\ndeclare var ontouchmove: (ev: TouchEvent) => any;\ndeclare var ontouchend: (ev: TouchEvent) => any;\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\n\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase\n{\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\n\n    private _preserveAlpha:boolean = false;\n    private _texture:TextureBase;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BasicMaterial.assetType;\n\t}\n\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(image?:Image2D, alpha?:number);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(imageColor:any = null, alpha:number = 1)\n\t{\n\t\tsuper(imageColor, alpha);\n\n        //set a texture if an image is present\n        if (imageColor instanceof Image2D)\n            this.texture = new Single2DTexture();\n\t}\n\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n\n        this._preserveAlpha = value;\n\n        this.invalidate();\n    }\n\n\n    /**\n     * The texture object to use for the albedo colour.\n     */\n    public get texture():TextureBase\n    {\n        return this._texture;\n    }\n\n    public set texture(value:TextureBase)\n    {\n        if (this._texture == value)\n            return;\n\n        if (this._texture)\n            this.removeTexture(this._texture);\n\n        this._texture = value;\n\n        if (this._texture)\n            this.addTexture(this._texture);\n\n        this.invalidateTexture();\n    }\n}\n\nexport = BasicMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport SurfaceEvent\t\t\t\t= require(\"awayjs-display/lib/events/SurfaceEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends AssetBase implements ISurface\n{\n\tprivate _textures:Array<TextureBase> = new Array<TextureBase>();\n\tprivate _colorTransform:ColorTransform;\n\tprivate _pUseColorTransform:boolean = false;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate _style:Style = new Style();\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderable> = new Array<IRenderable>();\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _imageRect:boolean = false;\n\tprivate _curves:boolean = false;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tprivate _onLightChangeDelegate:(event:AssetEvent) => void;\n\tprivate _onTextureInvalidateDelegate:(event:AssetEvent) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor(image?:ImageBase, alpha?:number);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(imageColor:any = null, alpha:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tif (imageColor instanceof ImageBase)\n\t\t\tthis._style.image = <ImageBase> imageColor;\n\t\telse if (imageColor)\n\t\t\tthis._style.color = Number(imageColor);\n\n\t\tthis.alpha = alpha;\n\n\t\tthis._onLightChangeDelegate = (event:AssetEvent) => this.onLightsChange(event);\n\t\tthis._onTextureInvalidateDelegate = (event:AssetEvent) => this.onTextureInvalidate(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(AssetEvent.INVALIDATE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(AssetEvent.INVALIDATE, this._onLightChangeDelegate);\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether material should use curves. Defaults to false.\n\t */\n\tpublic get curves():boolean\n\t{\n\t\treturn this._curves;\n\t}\n\n\tpublic set curves(value:boolean)\n\t{\n\t\tif (this._curves == value)\n\t\t\treturn;\n\n\t\tthis._curves = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use an atlas. Defaults to false.\n\t */\n\tpublic get imageRect():boolean\n\t{\n\t\treturn this._imageRect;\n\t}\n\n\tpublic set imageRect(value:boolean)\n\t{\n\t\tif (this._imageRect == value)\n\t\t\treturn;\n\n\t\tthis._imageRect = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\n\t/**\n\t * The style used to render the current TriangleGraphic. If set to null, its parent Sprite's style will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get useColorTransform():boolean\n\t{\n\t\treturn this._pUseColorTransform;\n\t}\n\n\tpublic set useColorTransform(value:boolean)\n\t{\n\t\tif (this._pUseColorTransform == value)\n\t\t\treturn;\n\n\t\tthis._pUseColorTransform = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderable as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderable that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderable)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.invalidateSurface();\n\t}\n\n\t/**\n\t * Removes an IRenderable as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderable)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.invalidateSurface();\n\t}\n\n\t/**\n\t * A list of the IRenderables that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderable>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic getNumTextures():number\n\t{\n\t\treturn this._textures.length;\n\t}\n\n\tpublic getTextureAt(index:number):TextureBase\n\t{\n\t\treturn this._textures[index];\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic invalidatePasses()\n\t{\n\t\tthis.dispatchEvent(new SurfaceEvent(SurfaceEvent.INVALIDATE_PASSES, this));\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tthis.dispatchEvent(new SurfaceEvent(SurfaceEvent.INVALIDATE_ANIMATION, this));\n\t}\n\n\tpublic invalidateSurfaces()\n\t{\n\t\tvar len:number = this._owners.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._owners[i].invalidateSurface();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:AssetEvent)\n\t{\n\t\tthis.invalidate();\n\t}\n\n\tpublic invalidateTexture()\n\t{\n\t\tthis.dispatchEvent(new SurfaceEvent(SurfaceEvent.INVALIDATE_TEXTURE, this));\n\t}\n\n\tpublic addTextureAt(texture:TextureBase, index:number)\n\t{\n\t\tvar i:number = this._textures.indexOf(texture);\n\n\t\tif (i == index)\n\t\t\treturn;\n\t\telse if (i != -1)\n\t\t\tthis._textures.splice(i, 1);\n\n\t\tthis._textures.splice(index, 0, texture);\n\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\n\tpublic addTexture(texture:TextureBase)\n\t{\n\t\tif (this._textures.indexOf(texture) != -1)\n\t\t\treturn;\n\n\t\tthis._textures.push(texture);\n\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\t\n\tpublic removeTexture(texture:TextureBase)\n\t{\n\t\tthis._textures.splice(this._textures.indexOf(texture), 1);\n\n\t\ttexture.removeEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\t\n\tprivate onTextureInvalidate(event:AssetEvent = null)\n\t{\n\t\tthis.invalidatePasses();\n\n\t\t//invalidate renderables for number of images getter (in case it has changed)\n\t\tthis.invalidateSurfaces();\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidatePasses();\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/display/LightBase\");\nimport ITraverser\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/display/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/display/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/display/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends AssetBase\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(entity:IEntity)\n\t{\n\t\tthis.updateProbeWeights(entity);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(entity:IEntity)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleGraphic. See if this can be improved.\n\t\tvar objectPos:Vector3D = entity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/display/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/display/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/display/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/display/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:(event:LightEvent) => void;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.shadowsEnabled)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.shadowsEnabled)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.shadowsEnabled) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.shadowsEnabled) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\t}\n\n\tpublic pDrawDepthMap(scene:Scene, target:Single2DTexture, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\trenderer.cullPlanes = this._pCullPlanes;\n\t\trenderer._iRenderCascades(this._pOverallDepthCamera, scene, target.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(camera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = camera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(camera, camera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(camera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageCube\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/display/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():SingleCubeTexture\n\t{\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(camera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(scene:Scene, target:SingleCubeTexture, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tif (this._needsRender[i])\n\t\t\t\trenderer._iRender(this._depthCameras[i], scene, target.imageCube, null, i)\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/display/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tsuper.iSetDepthMap(depthMap);\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = depthMap.image2D.rect.width;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic pCreateDepthTexture():Single2DTexture\n\t{\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(scene:Scene, target:Single2DTexture, renderer:IRenderer)\n\t{\n\t\trenderer.cullPlanes = this._pCullPlanes;\n\t\trenderer._iRender(this._pOverallDepthCamera, scene, target.image2D);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(camera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = camera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(camera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(camera, camera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(camera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(camera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((camera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((camera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((camera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(camera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(camera:Camera)\n\t{\n\t\tvar corners:Array<number> = camera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(camera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/display/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass ShadowMapperBase extends AssetBase\n{\n\tpublic _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tpublic _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase)\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic iRenderDepthMap(camera:Camera, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(scene, this._depthMap, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(camera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(scene:Scene, target:TextureBase, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import DisplayObject = require(\"awayjs-display/lib/display/DisplayObject\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\n\n/**\n * @class away.partition.Partition\n */\nclass BasicPartition extends PartitionBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._rootNode = new NodeBase();\n\t}\n}\n\nexport = BasicPartition;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport ITraverser\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\t// todo: dead end for now, if it has a debug sprite, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport ITraverser\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\nimport AbstractionBase\t\t\t\t= require(\"awayjs-core/lib/library/AbstractionBase\");\n\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport SceneGraphNode\t\t\t\t= require(\"awayjs-display/lib/partition/SceneGraphNode\");\nimport ITraverser\t\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass DisplayObjectNode extends AbstractionBase implements INode\n{\n\tpublic numEntities:number = 0;\n\n\tpublic isSceneGraphNode:boolean = false;\n\n\tpublic _iUpdateQueueNext:DisplayObjectNode;\n\n\tprivate _onInvalidatePartitionBoundsDelegate:(event:DisplayObjectEvent) => void;\n\t\n\tpublic _displayObject:DisplayObject;\n\tprivate _boundsDirty:boolean = true;\n\tprivate _bounds:BoundingVolumeBase;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic parent:SceneGraphNode;\n\n\tprivate _boundsType:string;\n\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._displayObject.debugVisible;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get bounds():BoundingVolumeBase\n\t{\n\t\tif (this._boundsDirty)\n\t\t\tthis._updateBounds();\n\n\t\treturn this._bounds;\n\t}\n\n\tconstructor(displayObject:DisplayObject, pool:IAbstractionPool)\n\t{\n\t\tsuper(displayObject, pool);\n\n\t\tthis._onInvalidatePartitionBoundsDelegate = (event:DisplayObjectEvent) => this._onInvalidatePartitionBounds(event);\n\n\t\tthis._displayObject = displayObject;\n\t\tthis._displayObject.addEventListener(DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this._onInvalidatePartitionBoundsDelegate);\n\n\t\tthis._boundsType = this._displayObject.boundsType;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this._displayObject.castsShadows;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._displayObject.removeEventListener(DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this._onInvalidatePartitionBoundsDelegate);\n\t\tthis._displayObject = null;\n\n\t\tif (this._bounds)\n\t\t\tthis._bounds.dispose();\n\n\t\tthis._bounds = null;\n\t}\n\n\tpublic onInvalidate(event:AssetEvent)\n\t{\n\t\tsuper.onInvalidate(event);\n\n\t\tif (this._boundsType != this._displayObject.boundsType) {\n\t\t\tthis._boundsType = this._displayObject.boundsType;\n\t\t\tthis._boundsDirty = true;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\t// do nothing here\n\t}\n\n\tpublic _onInvalidatePartitionBounds(event:DisplayObjectEvent)\n\t{\n\t\t// do nothing here\n\t}\n\n\tprivate _updateBounds()\n\t{\n\t\tif (this._bounds)\n\t\t\tthis._bounds.dispose();\n\n\t\tif (this._boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._displayObject);\n\t\telse if (this._boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._displayObject);\n\t\telse if (this._boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis._boundsDirty = false;\n\t}\n}\n\nexport = DisplayObjectNode;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport IContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/IContainerNode\");\nimport ITraverser\t\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport PickingCollision\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollision\");\nimport DisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/DisplayObjectNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport Sprite\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends DisplayObjectNode\n{\n\tpublic numEntities:number = 1;\n\n\tprivate _partition:PartitionBase;\n\tprivate _maskPosition:Vector3D = new Vector3D();\n\n\n\tconstructor(displayObject:DisplayObject, partition:PartitionBase)\n\t{\n\t\tsuper(displayObject, partition);\n\n\t\tthis._partition = partition;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._partition = null;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._displayObject._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(globalRayPosition:Vector3D, globalRayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._displayObject._iIsVisible() || !this.isIntersectingMasks(globalRayPosition, globalRayDirection, this._displayObject._iAssignedMasks()))\n\t\t\treturn false;\n\n\t\tvar pickingCollision:PickingCollision = this._displayObject._iPickingCollision;\n\t\tpickingCollision.rayPosition = this._displayObject.inverseSceneTransform.transformVector(globalRayPosition);\n\t\tpickingCollision.rayDirection = this._displayObject.inverseSceneTransform.deltaTransformVector(globalRayDirection);\n\n\t\tif (!pickingCollision.normal)\n\t\t\tpickingCollision.normal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this.bounds.rayIntersection(pickingCollision.rayPosition, pickingCollision.rayDirection, pickingCollision.normal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollision.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollision.globalRayPosition = globalRayPosition;\n\t\tpickingCollision.globalRayDirection = globalRayDirection;\n\t\tpickingCollision.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyEntity(this._displayObject);\n\t}\n\n\tpublic _onInvalidatePartitionBounds(event:DisplayObjectEvent)\n\t{\n\t\tthis.bounds.invalidate();\n\n\t\tthis._partition.iMarkForUpdate(this);\n\t}\n\n\tprivate isIntersectingMasks(globalRayPosition:Vector3D, globalRayDirection:Vector3D, masks:Array<Array<DisplayObject>>)\n\t{\n\t\t//horrible hack for 2d masks\n\t\tif (masks != null) {\n\t\t\tthis._maskPosition.x = globalRayPosition.x + globalRayDirection.x*1000;\n\t\t\tthis._maskPosition.y = globalRayPosition.y + globalRayDirection.y*1000;\n\t\t\tvar numLayers:number = masks.length;\n\t\t\tvar children:Array<DisplayObject>;\n\t\t\tvar numChildren:number;\n\t\t\tvar layerHit:boolean;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\tchildren = masks[i];\n\t\t\t\tnumChildren = children.length;\n\t\t\t\tlayerHit = false;\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++) {\n\t\t\t\t\tif (children[j].hitTestPoint(this._maskPosition.x, this._maskPosition.y, true, true)) {\n\t\t\t\t\t\tlayerHit = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!layerHit)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n}\n\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport ITraverser\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport ITraverser\t\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport IContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/IContainerNode\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport NullBounds = require(\"awayjs-display/lib/bounds/NullBounds\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase implements IContainerNode\n{\n\tprivate _bounds:BoundingVolumeBase = new NullBounds();\n\tpublic _pChildNodes:Array<INode> = new Array<INode>();\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic numEntities:number = 0;\n\n\tpublic parent:IContainerNode;\n\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get bounds():BoundingVolumeBase\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.parent = null;\n\t\tthis._pChildNodes = null;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\tif (this.numEntities == 0)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tfor (var i:number = 0; i < this._pNumChildNodes; i++)\n\t\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:INode)\n\t{\n\t\tnode.parent = this;\n\t\tthis.numEntities += node.numEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities += numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:INode)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities -= numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n}\n\nexport = NodeBase;",
    "import IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport ITraverser\t\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/partition/IEntityNodeClass\");\nimport DisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/DisplayObjectNode\");\nimport IContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/IContainerNode\");\n\n/**\n * @class away.partition.Partition\n */\nclass PartitionBase implements IAbstractionPool\n{\n\tprivate static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\n\tpublic _rootNode:IContainerNode;\n\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:DisplayObjectNode;\n\n\tconstructor()\n\t{\n\t}\n\n\tpublic getAbstraction(displayObject:DisplayObject):EntityNode\n\t{\n\t\treturn (this._abstractionPool[displayObject.id] || (this._abstractionPool[displayObject.id] = new (<IEntityNodeClass> PartitionBase._abstractionClassPool[displayObject.assetType])(displayObject, this)));\n\t}\n\n\t/**\n\t *\n\t * @param image\n\t */\n\tpublic clearAbstraction(displayObject:DisplayObject)\n\t{\n\t\tthis._abstractionPool[displayObject.id] = null;\n\t}\n\n\tpublic traverse(traverser:ITraverser)\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:DisplayObjectNode)\n\t{\n\t\tvar t:DisplayObjectNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:DisplayObjectNode)\n\t{\n\t\tvar t:DisplayObjectNode;\n\n\t\tif (node.parent) {\n\t\t\tnode.parent.iRemoveNode(node);\n\t\t\tnode.parent = null;\n\t\t}\n\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:DisplayObjectNode):IContainerNode\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:DisplayObjectNode = this._updateQueue;\n\t\twhile (node) {\n\t\t\t//required for controllers with autoUpdate set to true and queued events\n\t\t\tnode._displayObject._iInternalUpdate();\n\t\t\tnode = node._iUpdateQueueNext;\n\t\t}\n\n\t\t//reset head\n\t\tnode = this._updateQueue;\n\t\tvar targetNode:IContainerNode;\n\t\tvar t:DisplayObjectNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this.findParentForNode(node);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node.parent)\n\t\t\t\t\tnode.parent.iRemoveNode(node);\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t} while ((node = t) != null);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iMarkForUpdate(this.getAbstraction(displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iRemoveEntity(this.getAbstraction(displayObject));\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(entityNodeClass:IEntityNodeClass, assetClass:IAssetClass)\n\t{\n\t\tPartitionBase._abstractionClassPool[assetClass.assetType] = entityNodeClass;\n\t}\n}\n\nexport = PartitionBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport ITraverser\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import ITraverser\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\nimport DisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/DisplayObjectNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/IContainerNode\");\n\n/**\n * Maintains scenegraph heirarchy when collecting nodes\n */\nclass SceneGraphNode extends DisplayObjectNode implements IContainerNode\n{\n\tpublic isSceneGraphNode:boolean = true;\n\n\tprivate _pChildNodes:Array<DisplayObjectNode> = new Array<DisplayObjectNode>();\n\tprivate _childDepths:Array<number> = new Array<number>();\n\tprivate _childMasks:Array<DisplayObjectNode> = new Array<DisplayObjectNode>();\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\t//containers nodes are for ordering only, no need to check enterNode or debugVisible\n\t\tif (this.numEntities == 0)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tfor (i = this._pChildNodes.length - 1; i >= 0; i--)\n\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\n\n\t\tfor (i = this._childMasks.length - 1; i >= 0; i--)\n\t\t\tthis._childMasks[i].acceptTraverser(traverser);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:DisplayObjectNode)\n\t{\n\t\tnode.parent = this;\n\n\t\tif (node._displayObject.maskMode) {\n\t\t\tthis._childMasks.push(node);\n\t\t} else {\n\t\t\tvar depth:number = node._displayObject._depthID;\n\t\t\tvar len:number = this._childDepths.length;\n\t\t\tvar index:number = len;\n\n\t\t\twhile (index--)\n\t\t\t\tif (this._childDepths[index] < depth)\n\t\t\t\t\tbreak;\n\n\t\t\tindex++;\n\n\t\t\tif (index < len) {\n\t\t\t\tthis._pChildNodes.splice(index, 0, node);\n\t\t\t\tthis._childDepths.splice(index, 0, depth);\n\t\t\t} else {\n\t\t\t\tthis._pChildNodes.push(node);\n\t\t\t\tthis._childDepths.push(depth);\n\t\t\t}\n\t\t}\n\n\t\tvar numEntities:number = node.isSceneGraphNode? (<SceneGraphNode> node).numEntities : 1;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities += numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:DisplayObjectNode)\n\t{\n\t\tif (node._displayObject.maskMode) {\n\t\t\tthis._childMasks.splice(this._childMasks.indexOf(node), 1);\n\t\t} else {\n\t\t\tvar index:number = this._pChildNodes.indexOf(node);\n\n\t\t\tthis._pChildNodes.splice(index, 1);\n\t\t\tthis._childDepths.splice(index, 1);\n\t\t}\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities -= numEntities;\n\t\t} while ((node = <DisplayObjectNode> node.parent) != null);\n\t}\n}\nexport = SceneGraphNode;",
    "import IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport ITraverser\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\nimport SceneGraphNode\t\t\t\t= require(\"awayjs-display/lib/partition/SceneGraphNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/IContainerNode\");\nimport DisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/DisplayObjectNode\");\n\n/**\n * @class away.partition.Partition\n */\nclass SceneGraphPartition extends PartitionBase\n{\n\tprivate _sceneGraphNodePool:SceneGraphNodePool;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._sceneGraphNodePool = new SceneGraphNodePool();\n\t}\n\n\tpublic traverse(traverser:ITraverser)\n\t{\n\t\tsuper.traverse(traverser);\n\t}\n\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:DisplayObjectNode):IContainerNode\n\t{\n\t\tif (node.isSceneGraphNode && (node._displayObject.partition == this || node._displayObject._iIsRoot)) {\n\t\t\tthis._rootNode = <SceneGraphNode> node;\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!node.isSceneGraphNode && node._displayObject.isContainer)\n\t\t\treturn this._sceneGraphNodePool.getAbstraction(<DisplayObjectContainer> node._displayObject);\n\n\t\treturn this._sceneGraphNodePool.getAbstraction(node._displayObject.parent);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iRegisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iMarkForUpdate(this._sceneGraphNodePool.getAbstraction(<DisplayObjectContainer> displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iUnregisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iRemoveEntity(this._sceneGraphNodePool.getAbstraction(<DisplayObjectContainer> displayObject));\n\t}\n}\n\nexport = SceneGraphPartition;\n\n\n/**\n * @class away.pool.SceneGraphNodePool\n */\nclass SceneGraphNodePool implements IAbstractionPool\n{\n\tprivate _abstractionPool:Object = new Object();\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getAbstraction(displayObjectContainer:DisplayObjectContainer):SceneGraphNode\n\t{\n\t\treturn (this._abstractionPool[displayObjectContainer.id] || (this._abstractionPool[displayObjectContainer.id] = new SceneGraphNode(displayObjectContainer, this)));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic clearAbstraction(displayObjectContainer:DisplayObjectContainer)\n\t{\n\t\tdelete this._abstractionPool[displayObjectContainer.id];\n\t}\n}",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport ITraverser\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applySkybox(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._displayObject._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport LineElements\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport TriangleElements\t\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Billboard\");\nimport PickingCollision\t\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollision\");\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport AttributesView = require(\"awayjs-core/lib/attributes/AttributesView\");\n\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollision The collision object used to store the collision results\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollision:PickingCollision)\n\t{\n\t\tpickingCollision.renderable = null;\n\n\t\t//if (this._testGraphicCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollision, shortestCollisionDistance)) {\n\t\t//\tshortestCollisionDistance = pickingCollision.rayEntryDistance;\n\t\t//\n\t\t//\tpickingCollision.renderable = billboard;\n\t\t//\n\t\t//\treturn true;\n\t\t//}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>TriangleElements</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleElements\n\t * @param material\n\t * @param pickingCollision\n\t * @returns {boolean}\n\t */\n\tpublic testTriangleCollision(triangleElements:TriangleElements, material:MaterialBase, pickingCollision:PickingCollision):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollision.rayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollision.rayDirection;\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\t\tvar positions:ArrayBufferView = triangleElements.positions.get(triangleElements.numVertices);\n\t\tvar posDim:number = triangleElements.positions.dimensions;\n\n\t\tvar indices:Uint16Array;\n\t\tvar count:number;\n\t\tif (triangleElements.indices) {\n\t\t\tindices = triangleElements.indices.get(triangleElements.numElements);\n\t\t\tcount = indices.length;\n\t\t} else {\n\t\t\tcount = triangleElements.numVertices;\n\t\t}\n\n\t\tfor (var index:number = 0; index < count; index+=3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\tif (indices) {\n\t\t\t\ti0 = indices[index]*posDim;\n\t\t\t\ti1 = indices[index + 1]*posDim;\n\t\t\t\ti2 = indices[index + 2]*posDim;\n\t\t\t} else {\n\t\t\t\ti0 = index*posDim;\n\t\t\t\ti1 = (index + 1)*posDim;\n\t\t\t\ti2 = (index + 2)*posDim;\n\t\t\t}\n\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positions[i0];\n\t\t\tp1x = positions[i1];\n\t\t\tp2x = positions[i2];\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\n\t\t\tp0y = positions[i0 + 1];\n\t\t\tp1y = positions[i1 + 1];\n\t\t\tp2y = positions[i2 + 1];\n\t\t\ts0y = p1y - p0y;\n\t\t\ts1y = p2y - p0y;\n\n\t\t\tif (posDim == 3) {\n\t\t\t\tp0z = positions[i0 + 2];\n\t\t\t\tp1z = positions[i1 + 2];\n\t\t\t\tp2z = positions[i2 + 2];\n\t\t\t\ts0z = p1z - p0z;\n\t\t\t\ts1z = p2z - p0z;\n\n\t\t\t\t// evaluate sides and triangle normal\n\t\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\t\tnx *= nl;\n\t\t\t\tny *= nl;\n\t\t\t\tnz *= nl;\n\t\t\t} else { //2d hittest\n\t\t\t\tnx = 0;\n\t\t\t\tny = 0;\n\t\t\t\tnz = 1;\n\t\t\t}\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < pickingCollision.rayEntryDistance) { // all tests passed\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollision.rayEntryDistance = t;\n\t\t\t\t\tpickingCollision.position = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollision.normal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tif (triangleElements.uvs) { //uv calculations\n\t\t\t\t\t\tvar uvs:ArrayBufferView = triangleElements.uvs.get(triangleElements.numVertices);\n\t\t\t\t\t\tvar uvDim:number = triangleElements.uvs.dimensions;\n\n\t\t\t\t\t\tvar uIndex:number = indices[index]*uvDim;\n\t\t\t\t\t\tvar uv0:Vector3D = new Vector3D(uvs[uIndex], uvs[uIndex + 1]);\n\t\t\t\t\t\tuIndex = indices[index + 1]*uvDim;\n\t\t\t\t\t\tvar uv1:Vector3D = new Vector3D(uvs[uIndex], uvs[uIndex + 1]);\n\t\t\t\t\t\tuIndex = indices[index + 2]*uvDim;\n\t\t\t\t\t\tvar uv2:Vector3D = new Vector3D(uvs[uIndex], uvs[uIndex + 1]);\n\t\t\t\t\t\tpickingCollision.uv = new Point(u*uv0.x + v*uv1.x + w*uv2.x, u*uv0.y + v*uv1.y + w*uv2.y);\n\t\t\t\t\t}\n\t\t\t\t\tpickingCollision.elementIndex = collisionTriangleIndex;\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\t//\n\t///**\n\t// * Tests a <code>CurveElements</code> object for a collision with the picking ray.\n\t// *\n\t// * @param triangleElements\n\t// * @param material\n\t// * @param pickingCollision\n\t// * @returns {boolean}\n\t// */\n\t//public testCurveCollision(curveElements:CurveElements, material:MaterialBase, pickingCollision:PickingCollision, shortestCollisionDistance:number):boolean\n\t//{\n\t//\tvar rayPosition:Vector3D = pickingCollision.localRayPosition;\n\t//\tvar rayDirection:Vector3D = pickingCollision.localRayDirection;\n\t//\n\t//\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n\t//\t//this will only work while all points lie on the x/y plane\n\t//\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n\t//\n\t//\tvar result:Vector3D = new Vector3D();\n\t//\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n\t//\tresult.x = rayPosition.x - ( plane.x*distance);\n\t//\tresult.y = rayPosition.y - ( plane.y*distance);\n\t//\tresult.z = rayPosition.z - ( plane.z*distance);\n\t//\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n\t//\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n\t//\trayDirection.scaleBy(t);\n\t//\tvar p:Vector3D = rayPosition.add(rayDirection);\n\t//\n\t//\tvar indices:Uint16Array = curveElements.indices.get(curveElements.numElements);\n\t//\tvar collisionCurveIndex:number = -1;\n\t//\tvar bothSides:boolean = material.bothSides;\n\t//\n\t//\n\t//\tvar positions:Float32Array = curveElements.positions.get(curveElements.numVertices);\n\t//\tvar posDim:number = curveElements.positions.dimensions;\n\t//\tvar curves:Float32Array = curveElements.curves.get(curveElements.numVertices);\n\t//\tvar curveDim:number = curveElements.curves.dimensions;\n\t//\tvar uvs:ArrayBufferView = curveElements.uvs.get(curveElements.numVertices);\n\t//\tvar uvDim:number = curveElements.uvs.dimensions;\n\t//\tvar numIndices:number = indices.length;\n\t//\n\t//\n\t//\tfor(var index:number = 0; index < numIndices; index+=3)\n\t//\t{\n\t//\t\tvar id0:number = indices[index];\n\t//\t\tvar id1:number = indices[index + 1] * posDim;\n\t//\t\tvar id2:number = indices[index + 2] * posDim;\n\t//\n\t//\t\tvar ax:number = positions[id0 * posDim];\n\t//\t\tvar ay:number = positions[id0 * posDim + 1];\n\t//\t\tvar bx:number = positions[id1];\n\t//\t\tvar by:number = positions[id1 + 1];\n\t//\t\tvar cx:number = positions[id2];\n\t//\t\tvar cy:number = positions[id2 + 1];\n\t//\n\t//\t\tvar curvex:number = curves[id0 * curveDim];\n\t//\t\tvar az:number = positions[id0 * posDim + 2];\n\t//\n\t//\t\t//console.log(ax, ay, bx, by, cx, cy);\n\t//\n\t//\t\t//from a to p\n\t//\t\tvar dx:number = ax - p.x;\n\t//\t\tvar dy:number = ay - p.y;\n\t//\n\t//\t\t//edge normal (a-b)\n\t//\t\tvar nx:number = by - ay;\n\t//\t\tvar ny:number = -(bx - ax);\n\t//\n\t//\t\t//console.log(ax,ay,bx,by,cx,cy);\n\t//\n\t//\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t//\t\t//console.log(\"dot a\",dot);\n\t//\t\tif (dot > 0)\n\t//\t\t\tcontinue;\n\t//\n\t//\t\tdx = bx - p.x;\n\t//\t\tdy = by - p.y;\n\t//\t\tnx = cy - by;\n\t//\t\tny = -(cx - bx);\n\t//\n\t//\t\tdot = (dx * nx) + (dy * ny);\n\t//\t\t//console.log(\"dot b\",dot);\n\t//\t\tif (dot > 0)\n\t//\t\t\tcontinue;\n\t//\n\t//\t\tdx = cx - p.x;\n\t//\t\tdy = cy - p.y;\n\t//\t\tnx = ay - cy;\n\t//\t\tny = -(ax - cx);\n\t//\n\t//\t\tdot = (dx * nx) + (dy * ny);\n\t//\t\t//console.log(\"dot c\",dot);\n\t//\t\tif (dot > 0)\n\t//\t\t\tcontinue;\n\t//\n\t//\t\t//check if not solid\n\t//\t\tif (curvex != 2) {\n\t//\n\t//\t\t\tvar v0x:number = bx - ax;\n\t//\t\t\tvar v0y:number = by - ay;\n\t//\t\t\tvar v1x:number = cx - ax;\n\t//\t\t\tvar v1y:number = cy - ay;\n\t//\t\t\tvar v2x:number = p.x - ax;\n\t//\t\t\tvar v2y:number = p.y - ay;\n\t//\n\t//\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t//\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t//\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t//\t\t\tvar u:number = 1 - v - w;\n\t//\n\t//\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n\t//\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n\t//\n\t//\t\t\tvar d:number = uu * uu - vv;\n\t//\n\t//\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n\t//\t\t\t\tcontinue;\n\t//\t\t}\n\t//\t\t//TODO optimize away this pointless check as the distance is always the same\n\t//\t\t//also this stuff should only be calculated right before the return and not for each hit\n\t//\t\tif (distance < shortestCollisionDistance) {\n\t//\t\t\tshortestCollisionDistance = distance;\n\t//\t\t\tcollisionCurveIndex = index/3;\n\t//\t\t\tpickingCollision.rayEntryDistance = distance;\n\t//\t\t\tpickingCollision.localPosition = p;\n\t//\t\t\tpickingCollision.localNormal = new Vector3D(0, 0, 1);\n\t//\t\t\tpickingCollision.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t//\t\t\tpickingCollision.index = index;\n\t//\t\t\t//\t\t\t\t\t\tpickingCollision.elementIndex = this.pGetSpriteGraphicIndex(renderable);\n\t//\n\t//\t\t\t// if not looking for best hit, first found will do...\n\t//\t\t\tif (!this._findClosestCollision)\n\t//\t\t\t\treturn true;\n\t//\t\t}\n\t//\t}\n\t//\n\t//\tif (collisionCurveIndex >= 0)\n\t//\t\treturn true;\n\t//\n\t//\treturn false;\n\t//}\n\n\t/**\n\t * Tests a <code>LineElements</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleElements\n\t * @param material\n\t * @param pickingCollision\n\t * @returns {boolean}\n\t */\n\tpublic testLineCollision(lineElements:LineElements, material:MaterialBase, pickingCollision:PickingCollision):boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollision\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollision\n */\nclass PickingCollision\n{\n\t/**\n\t * The entity to which this collision object belongs.\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t * The renderable associated with a collision.\n\t */\n\tpublic renderable:IRenderable;\n\n\t/**\n\t * The local position of the collision on the renderable's surface.\n\t */\n\tpublic position:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic normal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the element where the collision took place.\n\t */\n\tpublic elementIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic globalRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic globalRayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * Creates a new <code>PickingCollision</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tthis.entity = entity;\n\t}\n}\n\nexport = PickingCollision;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n\nimport ITraverser\t\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollision\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollision\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual renderable objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker, ITraverser\n{\n\tprivate _rayPosition:Vector3D;\n\tprivate _rayDirection:Vector3D;\n\tprivate _x:number;\n\tprivate _y:number;\n\tprivate _view:View;\n\tprivate _findClosestCollision:boolean;\n\tprivate _bestCollision:PickingCollision;\n\tprivate _testCollision:PickingCollision;\n\tprivate _testCollider:IPickingCollider;\n\tprivate _ignoredEntities:Array<IEntity>;\n\n\tprivate _entities:Array<IEntity> = new Array<IEntity>();\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic onlyMouseEnabled:boolean = true;\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollision\n\t{\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._view = view;\n\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollision\n\t{\n\t\tthis._rayPosition = rayPosition;\n\t\tthis._rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this);\n\n\t\t//early out if no collisions detected\n\t\tif (!this._entities.length)\n\t\t\treturn null;\n\n\t\tvar collision:PickingCollision = this.getPickingCollision();\n\n\t\t//discard entities\n\t\tthis._entities.length = 0;\n\n\t\treturn collision;\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollision\n//\t\t{\n//\t\t\tthis._numRenderables = 0;\n//\n//\t\t\tvar renderable:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\trenderable = entities[c];\n//\n//\t\t\t\tif (renderable.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._renderables[this._numRenderables++] = renderable;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollision(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities:Array<IEntity>)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\t\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this.onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tif (this._ignoredEntities) {\n\t\t\tvar len:number = this._ignoredEntities.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\t\treturn true;\n\t\t}\n\t\t\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollision.rayEntryDistance > entity2._iPickingCollision.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollision():PickingCollision\n\t{\n\t\t// Sort entities from closest to furthest to reduce tests.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tthis._bestCollision = null;\n\t\t\n\t\tvar entity:IEntity;\n\t\tvar len:number = this._entities.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tentity = this._entities[i];\n\t\t\tthis._testCollision = entity._iPickingCollision;\n\t\t\tif (this._bestCollision == null || this._testCollision.rayEntryDistance < this._bestCollision.rayEntryDistance) {\n\t\t\t\tthis._testCollider = entity.pickingCollider;\n\t\t\t\tif (this._testCollider) {\n\t\t\t\t\tthis._testCollision.rayEntryDistance = Number.MAX_VALUE;\n\t\t\t\t\tentity._acceptTraverser(this);\n\t\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\t\tif (this._bestCollision && !this._findClosestCollision)\n\t\t\t\t\t\tbreak;\n\t\t\t\t} else if (!this._testCollision.rayOriginIsInsideBounds) {\n\t\t\t\t\t// A bounds collision with no picking collider stops all checks.\n\t\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\t\tthis._bestCollision = this._testCollision;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._bestCollision)\n\t\t\tthis.updatePosition(this._bestCollision);\n\n\t\treturn this._bestCollision;\n\t}\n\n\tprivate updatePosition(pickingCollision:PickingCollision)\n\t{\n\t\tvar collisionPos:Vector3D = pickingCollision.position || (pickingCollision.position = new Vector3D());\n\n\t\tvar rayDir:Vector3D = pickingCollision.rayDirection;\n\t\tvar rayPos:Vector3D = pickingCollision.rayPosition;\n\t\tvar t:number = pickingCollision.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tif (!this.isIgnored(entity))\n\t\t\tthis._entities.push(entity);\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyRenderable(renderable:IRenderable)\n\t{\n\t\tif (renderable._iTestCollision(this._testCollision, this._testCollider))\n\t\t\tthis._bestCollision = this._testCollision;\n\t}\n\t\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = RaycastPicker;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport ElementsType\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport LineElements\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive sprite.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:ArrayBufferView;\n\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive sprite.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType, 0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport ElementsType\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport LineElements\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tvar numVertices:number = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar numIndices:number = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGraphics.numVertices && triangleGraphics.indices != null) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\tvar lineGraphics:LineElements = <LineElements> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar thickness:Float32Array;\n\t\t\t\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = hw\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGraphics.setPositions(positions);\n\t\t\tlineGraphics.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:ArrayBufferView;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tif (numVertices == triangleGraphics.numVertices && triangleGraphics.uvs != null) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGraphics() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport ElementsType\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport LineElements\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive sprite.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\tvar lineGraphics:LineElements = <LineElements> target;\n\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\t\t\tvar _radius = 50;\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGraphics.setPositions(positions);\n\t\t\tlineGraphics.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:ArrayBufferView;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport ElementsType\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport LineElements\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive sprite.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper(material, elementsType);\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:ArrayBufferView;\n\t\t\tvar normals:Float32Array;\n\t\t\tvar tangents:Float32Array;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGraphics.indices != null && numIndices == triangleGraphics.indices.length) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGraphics.numVertices) {\n\t\t\t\tpositions = triangleGraphics.positions.get(numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\tvar lineGraphics:LineElements = <LineElements> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar positions:ArrayBufferView;\n\t\t\tvar thickness:Float32Array;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = -hh;\n\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGraphics.setPositions(positions);\n\t\t\tlineGraphics.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar uvs:ArrayBufferView;\n\t\tvar numVertices:number;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tif (triangleGraphics.uvs && numVertices == triangleGraphics.numVertices) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t\tthis._pInvalidatePrimitive()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive sprite.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType, radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport ElementsType\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport LineElements\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport Sprite\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _primitiveDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\tpublic _scaleU:number = 1;\n\tpublic _scaleV:number = 1;\n\n\tprivate _material:MaterialBase;\n\tprivate _elements:ElementsBase;\n\tprivate _elementsType:string;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get elementsType():string\n\t{\n\t\treturn this._elementsType;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Sprite> this._pObjects[i]).material = this._material;\n\t}\n\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (this._scaleU = value)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (this._scaleV = value)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\")\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._material = material;\n\t\tthis._elementsType = elementsType;\n\n\t\tif (this._elementsType == ElementsType.TRIANGLE) {\n\t\t\tvar triangleElements:TriangleElements = new TriangleElements(new AttributesBuffer());\n\t\t\ttriangleElements.autoDeriveNormals = false;\n\t\t\ttriangleElements.autoDeriveTangents = false;\n\t\t\tthis._elements = triangleElements;\n\t\t} else if (this._elementsType == ElementsType.LINE) {\n\t\t\tthis._elements = new LineElements(new AttributesBuffer());\n\t\t}\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGraphics method (and in turn by updateGraphics).\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\t\n\t/**\n\t * Invalidates the primitive, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidatePrimitive()\n\t{\n\t\tthis._primitiveDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGraphics()\n\t{\n\t\tthis._pBuildGraphics(this._elements, this._elementsType);\n\n\t\tthis._primitiveDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._elements, this._elementsType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._primitiveDirty)\n\t\t\tthis.updateGraphics();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar sprite:Sprite = new Sprite(this._material);\n\t\tsprite.graphics.addGraphic(this._elements);\n\t\tsprite._iSourcePrefab = this;\n\n\t\treturn sprite;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport ElementsType\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport LineElements\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive sprite.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGraphics.numVertices && triangleGraphics.indices != null) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\n\t\t\tvar lineGraphics:LineElements = <LineElements> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\n\t\t\tvar positions:ArrayBufferView = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGraphics.setPositions(positions);\n\t\t\tlineGraphics.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:ArrayBufferView;\n\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tif (numVertices == triangleGraphics.numVertices && triangleGraphics.uvs != null) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport ElementsType\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive sprite.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:ArrayBufferView;\n\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\n\n/**\n * GraphicBase wraps a TriangleElements as a scene graph instantiation. A GraphicBase is owned by a Sprite object.\n *\n *\n * @see away.base.TriangleElements\n * @see away.entities.Sprite\n *\n * @class away.base.GraphicBase\n */\nclass Font extends AssetBase\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get font_styles():Array<FontTable>\n\t{\n\t\treturn this._font_styles;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport = Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "import TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\n\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * Elements for this char\n\t */\n\tpublic elements:TriangleElements;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(elements:TriangleElements)\n\t{\n\t\tthis.elements = elements;\n\t}\n\n}\n\nexport = TesselatedFontChar;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * GraphicBase wraps a TriangleElements as a scene graph instantiation. A GraphicBase is owned by a Sprite object.\n *\n *\n * @see away.base.TriangleElements\n * @see away.entities.Sprite\n *\n * @class away.base.GraphicBase\n */\nclass TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tpublic _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _whitespace_width:number;\n\tprivate _offset_x:number;\n\tprivate _offset_y:number;\n\tprivate _ascent:number;\n\tprivate _descent:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t\tthis._ascent=0;\n\t\tthis._descent=0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tget ascent():number {\n\t\treturn this._ascent;\n\t}\n\n\tset ascent(value:number){\n\t\tthis._ascent=value;\n\t}\n\tget descent():number {\n\t\treturn this._descent;\n\t}\n\n\tset descent(value:number){\n\t\tthis._descent=value;\n\t}\n\n\tget offset_x():number {\n\t\treturn this._offset_x;\n\t}\n\n\tset offset_x(value:number){\n\t\tthis._offset_x=value;\n\t}\n\tget offset_y():number {\n\t\treturn this._offset_y;\n\t}\n\n\tset offset_y(value:number){\n\t\tthis._offset_y=value;\n\t}\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_whitespace_width(value:number):void\n\t{\n\t\tthis._whitespace_width=value;\n\t}\n\tpublic get_whitespace_width():number\n\t{\n\t\treturn this._whitespace_width\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic getChar(name:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[name];\n\t}\n\t/**\n\t *\n\t */\n\tpublic setChar(name:string, elements:ElementsBase, char_width:number):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<TriangleElements> elements);\n\t\ttesselated_font_char.char_width=char_width;\n\t\telements.name = name;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[name]=tesselated_font_char;\n\t}\n\n}\n\nexport = TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n\n\t/**\n\t * Used to specify an <code>static</code> TextField.\n\t */\n\tpublic static STATIC:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends AssetBase\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic fallback_font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "/**\n\n\n */\nclass MappingMode\n{\n\t/**\n\t *\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t *\n\t */\n\tpublic static LINEAR_GRADIENT:string = \"linearGradient\";\n\n\t/**\n\t *\n\t */\n\tpublic static RADIAL_GRADIENT:string = \"radialGradient\";\n}\n\nexport = MappingMode;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport ErrorBase\t\t\t\t= require(\"awayjs-core/lib/errors/ErrorBase\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport MappingMode\t\t\t\t= require(\"awayjs-display/lib/textures/MappingMode\");\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass Single2DTexture extends TextureBase\n{\n\tprivate _mappingMode:string;\n\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Single2DTexture.assetType;\n\t}\n\n\tpublic get mappingMode():string\n\t{\n\t\treturn this._mappingMode;\n\t}\n\n\tpublic set mappingMode(value:string)\n\t{\n\t\tif (this._mappingMode == value)\n\t\t\treturn;\n\n\t\tthis._mappingMode = value;\n\n\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get sampler2D():Sampler2D\n\t{\n\t\treturn <Sampler2D> this._samplers[0];\n\t}\n\n\tpublic set sampler2D(value:Sampler2D)\n\t{\n\t\tif (this._samplers[0] == value)\n\t\t\treturn;\n\n\t\tthis.setSamplerAt(value, 0);\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get image2D():Image2D\n\t{\n\t\treturn <Image2D> this._images[0];\n\t}\n\n\tpublic set image2D(value:Image2D)\n\t{\n\t\tif (this._images[0] == value)\n\t\t\treturn;\n\n\t\tif (!ImageUtils.isImage2DValid(value))\n\t\t\tthrow new ErrorBase(\"Invalid image2DData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis.setImageAt(value, 0);\n\t}\n\n\tconstructor(image2D:Image2D = null)\n\t{\n\t\tsuper();\n\n\t\tthis.setNumImages(1);\n\n\t\tthis.image2D = image2D;\n\n\t\tthis._mappingMode = MappingMode.NORMAL;\n\t}\n}\n\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/image/SamplerCube\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/image/ImageCube\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n\nclass SingleCubeTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SingleCubeTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get samplerCube():SamplerCube\n\t{\n\t\treturn <SamplerCube> this._samplers[0];\n\t}\n\n\tpublic set samplerCube(value:SamplerCube)\n\t{\n\t\tif (this._samplers[0] == value)\n\t\t\treturn;\n\n\t\tthis.setSamplerAt(value, 0);\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageCube}\n\t */\n\tpublic get imageCube():ImageCube\n\t{\n\t\treturn <ImageCube> this._images[0];\n\t}\n\n\tpublic set imageCube(value:ImageCube)\n\t{\n\t\tif (this._images[0] == value)\n\t\t\treturn;\n\n\t\tthis.setImageAt(value, 0);\n\t}\n\n\t\n\tconstructor(imageCube:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis.setNumImages(1);\n\n\t\tthis.imageCube = imageCube;\n\t}\n}\n\nexport = SingleCubeTexture;",
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\n/**\n *\n */\nclass TextureBase extends AssetBase\n{\n\tpublic _numImages:number = 0;\n\tpublic _images:Array<ImageBase> = new Array<ImageBase>();\n\tpublic _samplers:Array<SamplerBase> = new Array<SamplerBase>();\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic getNumImages():number\n\t{\n\t\treturn this._numImages;\n\t}\n\n\tpublic setNumImages(value:number)\n\t{\n\t\tif (this._numImages == value)\n\t\t\treturn;\n\n\t\tthis._numImages = value;\n\n\t\tthis._images.length = value;\n\t\tthis._samplers.length = value;\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic getImageAt(index:number):ImageBase\n\t{\n\t\treturn this._images[index];\n\t}\n\n\tpublic setImageAt(image:ImageBase, index:number)\n\t{\n\t\tthis._images[index] = image;\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic getSamplerAt(index:number):SamplerBase\n\t{\n\t\treturn this._samplers[index];\n\t}\n\n\tpublic setSamplerAt(sampler:SamplerBase, index:number)\n\t{\n\t\tthis._samplers[index] = sampler;\n\n\t\tthis.invalidate();\n\t}\n}\n\nexport = TextureBase;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static image2D(data:any):Image2D\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Image2D)\n\t\t\treturn data;\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\tdata = (<Single2DTexture> data).image2D;\n\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):Single2DTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\n\t\t\treturn new Single2DTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\n\t}\n}\n\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Extensions\t\t\t\t= require(\"awayjs-core/lib/utils/Extensions\");\n\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\n\nclass ElementsUtils\n{\n\tprivate static tempFloat32x4:Float32Array = new Float32Array(4);\n\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\t\n\tprivate static _indexSwap:Array<number> = new Array<number>();\n\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:AttributesView, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:ArrayBufferView = positionAttributes.get(positionAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float4Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\tif (positionDim == 3) {\n\t\t\twhile (i < count) {\n\t\t\t\tindex = indices[i++]*3;\n\t\t\t\tx1 = positions[index];\n\t\t\t\ty1 = positions[index + 1];\n\t\t\t\tz1 = positions[index + 2];\n\t\t\t\tindex = indices[i++]*3;\n\t\t\t\tx2 = positions[index];\n\t\t\t\ty2 = positions[index + 1];\n\t\t\t\tz2 = positions[index + 2];\n\t\t\t\tindex = indices[i++]*3;\n\t\t\t\tx3 = positions[index];\n\t\t\t\ty3 = positions[index + 1];\n\t\t\t\tz3 = positions[index + 2];\n\t\t\t\tdx1 = x3 - x1;\n\t\t\t\tdy1 = y3 - y1;\n\t\t\t\tdz1 = z3 - z1;\n\t\t\t\tdx2 = x2 - x1;\n\t\t\t\tdy2 = y2 - y1;\n\t\t\t\tdz2 = z2 - z1;\n\t\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t\t// length of cross product = 2*triangle area\n\n\t\t\t\tfaceNormals[j++] = cx;\n\t\t\t\tfaceNormals[j++] = cy;\n\t\t\t\tfaceNormals[j++] = cz;\n\t\t\t\tfaceNormals[j++] = d;\n\t\t\t}\n\t\t} else if (positionDim == 2) {\n\t\t\twhile (i < count) {\n\t\t\t\tfaceNormals[j++] = 0;\n\t\t\t\tfaceNormals[j++] = 0;\n\t\t\t\tfaceNormals[j++] = 1;\n\t\t\t\tfaceNormals[j++] = 1;\n\t\t\t\ti += 3;\n\t\t\t}\n\t\t}\n\n\t\toutput.set(faceNormals, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar normals:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear normal values\n\t\twhile (i < len) {\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\n\t\t//collect face normals\n\t\twhile (i < len) {\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise normals collections\n\t\twhile (i < len) {\n\t\t\tvx = normals[i];\n\t\t\tvy = normals[i + 1];\n\t\t\tvz = normals[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\tnormals[i++] = vx*d;\n\t\t\tnormals[i++] = vy*d;\n\t\t\tnormals[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(normals);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:AttributesView, uvAttributes:AttributesView, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:ArrayBufferView = positionAttributes.get(positionAttributes.count);\n\t\tvar uvs:Float32Array = <Float32Array> uvAttributes.get(uvAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\t\tvar uvDim:number = uvAttributes.dimensions;\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar v0:number;\n\t\tvar v1:number;\n\t\tvar v2:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\twhile (i < count) {\n\t\t\tindex1 = indices[i];\n\t\t\tindex2 = indices[i + 1];\n\t\t\tindex3 = indices[i + 2];\n\n\t\t\tv0 = uvs[index1*uvDim + 1];\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\n\n\t\t\tv0 = index1*positionDim;\n\t\t\tv1 = index2*positionDim;\n\t\t\tv2 = index3*positionDim;\n\n\t\t\tx0 = positions[v0];\n\t\t\tdx1 = positions[v1] - x0;\n\t\t\tdx2 = positions[v2] - x0;\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\n\t\t\ty0 = positions[v0 + 1];\n\t\t\tdy1 = positions[v1 + 1] - y0;\n\t\t\tdy2 = positions[v2 + 1] - y0;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\n\t\t\tif (positionDim == 3) {\n\t\t\t\tz0 = positions[v0 + 2];\n\t\t\t\tdz1 = positions[v1 + 2] - z0;\n\t\t\t\tdz2 = positions[v2 + 2] - z0;\n\t\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\t} else {\n\t\t\t\tcz = 0;\n\t\t\t}\n\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tfaceTangents[i++] = denom*cx;\n\t\t\tfaceTangents[i++] = denom*cy;\n\t\t\tfaceTangents[i++] = denom*cz;\n\t\t}\n\n\t\toutput.set(faceTangents, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar tangents:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear tangent values\n\t\twhile (i < len) {\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t}\n\n\t\tvar weight:number;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\t\tvar f4:number = 3;\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\n\t\t//collect face tangents\n\t\twhile (i < len) {\n\t\t\tweight = faceNormals[f4];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tf1 += 3;\n\t\t\tf2 += 3;\n\t\t\tf3 += 3;\n\t\t\tf4 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise tangents collections\n\t\twhile (i < len) {\n\t\t\tvx = tangents[i];\n\t\t\tvy = tangents[i + 1];\n\t\t\tvz = tangents[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\ttangents[i++] = vx*d;\n\t\t\ttangents[i++] = vy*d;\n\t\t\ttangents[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(tangents);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\n\n\t\tvar index:number = 0;\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\n\n\t\twhile (index < count*4) {\n\t\t\tif (index/4 & 1) {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t} else {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t}\n\n\t\t\tindex += 4;\n\t\t}\n\n\t\toutput.set(colors, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:AttributesView, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:ArrayBufferView = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] *= scaleU;\n\t\t\tuvs[i++] *= scaleV;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\t}\n\n\tpublic static scale(scale:number, output:AttributesView, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar positions:ArrayBufferView = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t}\n\n\t\toutput.set(positions, offset);\n\t}\n\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:AttributesView, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\t//todo: make this compatible with 2-dimensional positions\n\t\tvar positions:ArrayBufferView = positionAttributes.get(count, offset);\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar normals:Float32Array;\n\t\tvar normalDim:number;\n\n\t\tif (normalAttributes) {\n\t\t\tnormals = normalAttributes.get(count, offset);\n\t\t\tnormalDim = normalAttributes.dimensions;\n\t\t}\n\n\t\tvar tangents:Float32Array;\n\t\tvar tangentDim:number;\n\n\t\tif (tangentAttributes) {\n\t\t\ttangents = tangentAttributes.get(count, offset);\n\t\t\ttangentDim = tangentAttributes.dimensions;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (normalAttributes || tangentAttributes) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = 0;\n\t\tvar ni0:number = 0;\n\t\tvar ti0:number = 0;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\t// bake position\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += positionDim;\n\n\t\t\tif\t(normals) {\n\t\t\t\t// bake normal\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += normalDim;\n\t\t\t}\n\n\t\t\tif (tangents) {\n\t\t\t\t// bake tangent\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tangentDim;\n\t\t\t}\n\t\t}\n\n\t\tpositionAttributes.set(positions, offset);\n\n\t\tif (normalAttributes)\n\t\t\tnormalAttributes.set(normals, offset);\n\n\t\tif (tangentAttributes)\n\t\t\ttangentAttributes.set(tangents, offset);\n\t}\n\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\n\t{\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\n\t\tvar numIndices:number = indexAttributes.length;\n\t\t\n\t\t//reset mappings\n\t\tindexMappings.length = 0;\n\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\tif (numIndices < ElementsUtils.LIMIT_INDICES && numVertices < ElementsUtils.LIMIT_VERTS)\n\t\t\treturn buffer;\n\n\t\tvar i:number;\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\n\t\tvar splitIndices:Array<number> = new Array<number>();\n\t\tvar indexSwap:Array<number> = ElementsUtils._indexSwap;\n\t\t\n\n\t\tindexSwap.length = numIndices;\n\t\tfor (i = 0; i < numIndices; i++)\n\t\t\tindexSwap[i] = -1;\n\n\t\tvar originalIndex:number;\n\t\tvar splitIndex:number;\n\t\tvar index:number = 0;\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\n\t\t\n\t\t// Loop over all triangles\n\t\t\n\t\ti = 0;\n\t\twhile (i < numIndices + offsetLength && i + 1 < ElementsUtils.LIMIT_INDICES && index + 1 < ElementsUtils.LIMIT_VERTS) {\n\t\t\toriginalIndex = indices[i];\n\n\t\t\tif (indexSwap[originalIndex] >= 0) {\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\n\t\t\t} else {\n\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t// needs to be copied from the long list.\n\t\t\t\tsplitIndex = index++;\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\n\t\t\t}\n\n\t\t\t// Store new index, which may have come from the swap look-up,\n\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\tsplitIndices[i++] = splitIndex;\n\t\t}\n\t\t\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\n\t\t\n\t\tindexAttributes = indexAttributes.clone(buffer);\n\t\tindexAttributes.set(splitIndices);\n\t\t\n\t\treturn buffer;\n\t}\n\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\n\t{\n\t\tif (!indexMappings.length)\n\t\t\treturn vertexBuffer;\n\n\t\tvar stride:number = vertexBuffer.stride;\n\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\n\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\n\t\tvar splitIndex:number;\n\t\tvar originalIndex:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = indexMappings.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tsplitIndex = i*stride;\n\t\t\toriginalIndex = indexMappings[i]*stride;\n\n\t\t\tfor (j = 0; j < stride; j++)\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\t\t}\n\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\n\t\tvertexBuffer.bufferView = splitVerts;\n\n\t\treturn vertexBuffer;\n\t}\n\n\t//TODO - generate this dyanamically based on num tris\n\n\tpublic static hitTestTriangleElements(x:number, y:number, z:number, boundingBox:Box, triangleElements:TriangleElements):boolean\n\t{\n\t\tvar positionAttributes:AttributesView = triangleElements.positions;\n\t\tvar curveAttributes:AttributesView = triangleElements.getCustomAtributes(\"curves\");\n\t\tvar count:number = triangleElements.numVertices;\n\n\t\tvar posDim:number = positionAttributes.dimensions;\n\t\tvar curveDim:number = curveAttributes.dimensions;\n\n\t\tvar positions:ArrayBufferView = positionAttributes.get(count);\n\t\tvar curves:ArrayBufferView = curveAttributes? curveAttributes.get(count) : null;\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\tvar index:number = triangleElements.lastCollisionIndex;\n\t\tif(index != -1 && index < count)\n\t\t{\n\t\t\tprecheck:\n\t\t\t{\n\t\t\t\tid0 = index + 2;\n\t\t\t\tid1 = index + 1;\n\t\t\t\tid2 = index + 0;\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tif (curves) {\n\t\t\t\t\tvar curvey0:number = curves[id0 * curveDim + 2];\n\t\t\t\t\tvar curvey1:number = curves[id1 * curveDim + 2];\n\t\t\t\t\tvar curvey2:number = curves[id2 * curveDim + 2];\n\t\t\t\t\t//check if not solid\n\t\t\t\t\tif (curvey0 || curvey1 || curvey2) {\n\n\t\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t\t//here be dragons\n\t\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\t\t\tvar az:number = curves[id0 * curveDim];\n\t\t\t\t\t\tif (d > 0 && az == -128) {\n\t\t\t\t\t\t\tbreak precheck;;\n\t\t\t\t\t\t} else if (d < 0 && az == 127) {\n\t\t\t\t\t\t\tbreak precheck;;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\n\n\t\t//hard coded min vertex count to bother using a grid for\n\t\tif (count > 150) {\n\t\t\tvar cells:Array<Array<number>> = triangleElements.cells;\n\t\t\tvar divisions:number = cells.length? triangleElements.divisions : (triangleElements.divisions = Math.min(Math.ceil(Math.sqrt(count)), 32));\n\t\t\tvar conversionX:number = divisions/boundingBox.width;\n\t\t\tvar conversionY:number = divisions/boundingBox.height;\n\t\t\tvar minx:number = boundingBox.x;\n\t\t\tvar miny:number = boundingBox.y;\n\n\t\t\tif (!cells.length) { //build grid\n\n\t\t\t\t//now we have bounds start creating grid cells and filling\n\t\t\t\tcells.length = divisions * divisions;\n\n\t\t\t\tfor(var k:number = 0; k < count; k+=3) {\n\t\t\t\t\tid0 = k + 2;\n\t\t\t\t\tid1 = k + 1;\n\t\t\t\t\tid2 = k + 0;\n\n\t\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t\t//subtractions to push into positive space\n\t\t\t\t\tvar min_index_x:number = Math.floor((Math.min(ax, bx, cx) - minx)*conversionX);\n\t\t\t\t\tvar min_index_y:number = Math.floor((Math.min(ay, by, cy) - miny)*conversionY);\n\n\t\t\t\t\tvar max_index_x:number = Math.floor((Math.max(ax, bx, cx) - minx)*conversionX);\n\t\t\t\t\tvar max_index_y:number = Math.floor((Math.max(ay, by, cy) - miny)*conversionY);\n\n\n\t\t\t\t\tfor (var i:number = min_index_x; i <= max_index_x; i++) {\n\t\t\t\t\t\tfor (var j:number = min_index_y; j <= max_index_y; j++) {\n\t\t\t\t\t\t\tvar index:number = i + j*divisions;\n\t\t\t\t\t\t\tvar nodes:Array<number> = cells[index] || (cells[index] = new Array<number>());\n\n\t\t\t\t\t\t\t//push in the triangle ids\n\t\t\t\t\t\t\tnodes.push(id0, id1, id2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar index_x:number = Math.floor((x - minx)*conversionX);\n\t\t\tvar index_y:number = Math.floor((y - miny)*conversionY);\n\n\t\t\tif ((index_x < 0 || index_x > divisions || index_y < 0 || index_y > divisions))\n\t\t\t\treturn false;\n\n\t\t\tvar nodes:Array<number> = cells[index_x + index_y*divisions];\n\n\t\t\tif (nodes == null)\n\t\t\t\treturn false;\n\n\t\t\tvar nodeCount:number = nodes.length;\n\t\t\tfor (var k:number = 0; k < nodeCount; k += 3) {\n\t\t\t\tid0 = nodes[k];\n\t\t\t\tid1 = nodes[k + 1];\n\t\t\t\tid2 = nodes[k + 2];\n\n\t\t\t\tif(id2 == index) continue;\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tif (curves) {\n\t\t\t\t\tvar curvey0:number = curves[id0 * curveDim + 2];\n\t\t\t\t\tvar curvey1:number = curves[id1 * curveDim + 2];\n\t\t\t\t\tvar curvey2:number = curves[id2 * curveDim + 2];\n\t\t\t\t\t//check if not solid\n\t\t\t\t\tif (curvey0 || curvey1 || curvey2) {\n\n\t\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t\t//here be dragons\n\t\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\t\tvar d:number = uu * uu - vv;\n\t\t\t\t\t\tvar az:number = curves[id0 * curveDim];\n\n\t\t\t\t\t\tif (d > 0 && az == -128)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\telse if (d < 0 && az == 127)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttriangleElements.lastCollisionIndex = id2;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t//brute force\n\t\tfor(var k:number = 0; k < count; k += 3) {\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tif(id2 == index) continue;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - x;\n\t\t\tvar dy:number = ay - y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - x;\n\t\t\tdy = by - y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - x;\n\t\t\tdy = cy - y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tif (curves) {\n\t\t\t\tvar curvey0:number = curves[id0 * curveDim + 2];\n\t\t\t\tvar curvey1:number = curves[id1 * curveDim + 2];\n\t\t\t\tvar curvey2:number = curves[id2 * curveDim + 2];\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvey0 || curvey1 || curvey2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\t\tvar az:number = curves[id0 * curveDim];\n\t\t\t\t\tif (d > 0 && az == -128) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (d < 0 && az == 127) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttriangleElements.lastCollisionIndex = id2;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic static getTriangleGraphicsBoxBounds(positionAttributes:AttributesView, output:Box, count:number, offset:number = 0):Box\n\t{\n\t\tvar positions:ArrayBufferView = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\n\t\tif (output == null)\n\t\t\toutput = new Box();\n\n\t\tvar pos:number;\n\t\tvar minX:number = 0, minY:number = 0, minZ:number = 0;\n\t\tvar maxX:number = 0, maxY:number = 0, maxZ:number = 0;\n\n\t\tvar len:number = count*posDim;\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tif (i == 0) {\n\t\t\t\tmaxX = minX = positions[i];\n\t\t\t\tmaxY = minY = positions[i + 1];\n\t\t\t\tmaxZ = minZ = (posDim == 3)? positions[i + 2] : 0;\n\t\t\t} else {\n\t\t\t\tpos = positions[i];\n\t\t\t\tif (pos < minX)\n\t\t\t\t\tminX = pos;\n\t\t\t\telse if (pos > maxX)\n\t\t\t\t\tmaxX = pos;\n\n\t\t\t\tpos = positions[i + 1];\n\n\t\t\t\tif (pos < minY)\n\t\t\t\t\tminY = pos;\n\t\t\t\telse if (pos > maxY)\n\t\t\t\t\tmaxY = pos;\n\n\t\t\t\tif (posDim == 3) {\n\t\t\t\t\tpos = positions[i + 2];\n\n\t\t\t\t\tif (pos < minZ)\n\t\t\t\t\t\tminZ = pos;\n\t\t\t\t\telse if (pos > maxZ)\n\t\t\t\t\t\tmaxZ = pos;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (output.x > minX)\n\t\t\toutput.x = minX;\n\n\t\tif (output.y > minY)\n\t\t\toutput.y = minY;\n\n\t\tif (output.z > minZ)\n\t\t\toutput.z = minZ;\n\n\t\tif (output.right < maxX)\n\t\t\toutput.right = maxX;\n\n\t\tif (output.bottom < maxY)\n\t\t\toutput.bottom = maxY;\n\n\t\tif (output.back < maxZ)\n\t\t\toutput.back = maxZ;\n\n\t\treturn output;\n\t}\n\n\tpublic static getTriangleGraphicsSphereBounds(positionAttributes:AttributesView, center:Vector3D, output:Sphere, count:number, offset:number = 0):Sphere\n\t{\n\t\tvar positions:ArrayBufferView = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\n\t\tif (output == null)\n\t\t\toutput = new Sphere();\n\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar len = count*posDim;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tdistanceX = positions[i] - center.x;\n\t\t\tdistanceY = positions[i + 1] - center.y;\n\t\t\tdistanceZ = (posDim == 3)? positions[i + 2] - center.z : -center.z;\n\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t}\n\n\t\toutput.x = center.x;\n\t\toutput.y = center.y;\n\t\toutput.z = center.z;\n\t\toutput.radius = Math.sqrt(maxRadiusSquared);\n\n\t\treturn output;\n\t}\n\n}\n\nexport = ElementsUtils;"
  ],
  "sourceRoot": ""
}
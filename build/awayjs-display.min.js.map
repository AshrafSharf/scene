{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/HierarchicalProperties.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Timeline.ts",
    "awayjs-display/lib/base/TouchPoint.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/MovieClip.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/FrameScriptManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/BasicPartition.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/ContainerNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/PartitionBase.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SceneGraphPartition.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/ContainerNodePool.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "cells",
    "Array",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "positions",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "HierarchicalProperties",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "DisplayObject",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pIsEntity",
    "_pIsContainer",
    "_sessionID",
    "_depthID",
    "_matrix3D",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_explicitMaskId",
    "_pImplicitVisibility",
    "_pImplicitMaskId",
    "_pImplicitMaskIds",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_pImplicitColorTransform",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_skewX",
    "_skewY",
    "_skewZ",
    "_scaleX",
    "_scaleY",
    "_scaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pos",
    "_rot",
    "_ske",
    "_sca",
    "_pRenderables",
    "_entityNodes",
    "_inheritColorTransform",
    "_maskMode",
    "_tempVector3D",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "zOffset",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_adapter",
    "pInvalidateHierarchicalProperties",
    "COLOR_TRANSFORM",
    "_explicitColorTransform",
    "alphaMultiplier",
    "_iColorTransform",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "x",
    "rotationX",
    "y",
    "rotationY",
    "z",
    "rotationZ",
    "height",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "_loaderInfo",
    "_updateMaskMode",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_iSetScene",
    "_pScene",
    "_iAssignedPartition",
    "dispatchEvent",
    "PARTITION_CHANGED",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "_elementsDirty",
    "updateElements",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "_width",
    "_setScaleX",
    "skewX",
    "invalidateSkew",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_hierarchicalPropsDirty",
    "SCENE_TRANSFORM",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "VISIBLE",
    "_explicitMasks",
    "maskMode",
    "MASKS",
    "width",
    "scaleX",
    "rawData",
    "invalidatePosition",
    "addEventListener",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SKEW_CHANGED",
    "_listenToSkewChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "newInstance",
    "copyTo",
    "partition",
    "boundsType",
    "name",
    "mouseEnabled",
    "extra",
    "masks",
    "_iMatrix3D",
    "adapter",
    "colorTransform",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "target",
    "setTo",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "left",
    "top",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "hitTestPoint",
    "shapeFlag",
    "maskFlag",
    "isMask",
    "lookAt",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dx",
    "dy",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "reset",
    "visible",
    "clear",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "removeEventListener",
    "hasEventListener",
    "translate",
    "distance",
    "Math",
    "sqrt",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_matrix3DDirty",
    "_pUpdateMatrix3D",
    "_pivotDirty",
    "_pUpdatePivot",
    "_pPickingCollisionVO",
    "iSetParent",
    "ALL",
    "propDirty",
    "newPropDirty",
    "isEntity",
    "invalidatePartition",
    "queueDispatch",
    "_sceneTransformChanged",
    "scene",
    "sceneChanged",
    "_iUnregisterPartition",
    "_iUnregisterEntity",
    "_iRegisterPartition",
    "_iRegisterEntity",
    "_sceneChanged",
    "appendTranslation",
    "_iController",
    "updateController",
    "_iIsRoot",
    "prepend",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iAddRenderable",
    "renderable",
    "push",
    "_iRemoveRenderable",
    "index",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "update",
    "_iIsVisible",
    "_updateVisible",
    "_iAssignedMaskId",
    "MASK_ID",
    "_updateMaskId",
    "_iAssignedMasks",
    "_updateMasks",
    "_pImplicitMasks",
    "_iMasksConfig",
    "_iAssignedColorTransform",
    "_updateColorTransform",
    "_iIsMouseEnabled",
    "MOUSE_ENABLED",
    "_updateMouseEnabled",
    "_applyRenderer",
    "renderer",
    "invalidateMatrix3D",
    "_positionChanged",
    "matrixDirty",
    "_rotationChanged",
    "_skewChanged",
    "invalidateScale",
    "_scaleChanged",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "event",
    "elements",
    "mouseChildren",
    "concat",
    "numLayers",
    "numChildren",
    "implicitChildren",
    "implicitChildIds",
    "j",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/HierarchicalProperties",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "AbstractMethodError",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "thickness",
    "floor",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "awayjs-display/lib/base/Timeline",
    "FrameScriptManager",
    "Timeline",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "scriptPass1",
    "evalScript",
    "add_script_to_queue",
    "add_script_to_queue_pass2",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChilds",
    "getPotentialChildInstance",
    "this_clone",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "skip_script",
    "frameIndex",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "firstframe",
    "set_currentFrameIndex",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "child_depths",
    "sessionID_depths",
    "end_index",
    "k",
    "child",
    "_children",
    "update_indices",
    "update_cnt",
    "targetFrame_first_sessionID",
    "frame_command_idx",
    "start_index",
    "idx",
    "command_index_stream",
    "command_length_stream",
    "remove_child_stream",
    "add_child_stream",
    "removeChildAt",
    "isBlockedByScript",
    "isVisibilityByScript",
    "key",
    "addChildAtDepth",
    "Number",
    "update_childs",
    "queueScript",
    "constructed_keyFrameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "removeChildAtDepth",
    "props_start_idx",
    "props_len",
    "props_end_index",
    "value_start_index",
    "props_type",
    "doit",
    "getChildAtSessionID",
    "update_child_stream",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "properties_stream_f32_mtx_all",
    "new_ct",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "mask",
    "numMasks",
    "properties_stream_int",
    "properties_stream_strings",
    "registerScriptObject",
    "addButtonListeners",
    "Boolean",
    "properties_stream_f32_mtx_scale_rot",
    "properties_stream_f32_mtx_pos",
    "awayjs-display/lib/managers/FrameScriptManager",
    "awayjs-display/lib/base/TouchPoint",
    "TouchPoint",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "dimensions",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cx",
    "cy",
    "cz",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_containerNodes",
    "_mouseChildren",
    "_active_depths",
    "_nextHighestDepth",
    "addChild",
    "addChildAt",
    "replace",
    "removeChildAtInternal",
    "getDepthIndexInternal",
    "getNextHighestDepth",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "disposeWithChildren",
    "getChildAt",
    "getChildAtDepth",
    "getChildDepths",
    "getChildByName",
    "childIndex",
    "_nextHighestDepthDirty",
    "_updateNextHighestDepth",
    "getObjectsUnderPoint",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "min",
    "max",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "bitFlag",
    "masksFlag",
    "maskHit",
    "_hitTestPointInternal",
    "_iAddContainerNode",
    "_iRemoveContainerNode",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_this",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "BasicPartition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "traversePartitions",
    "traverser",
    "traverse",
    "awayjs-display/lib/partition/BasicPartition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_pTouchPoints",
    "_onPartitionChangedDelegate",
    "_onPartitionChanged",
    "_onProjectionChangedDelegate",
    "_onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "_onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "_onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "getLocalTouchPoints",
    "localPosition",
    "localTouchPoints",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_pCamera",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "_colorTransform",
    "_applyColorTransform",
    "_parentColorTransform",
    "testBillboardCollision",
    "_iApplyRenderableOwner",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "viewProjection",
    "invLen",
    "append",
    "nX",
    "nY",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_tempPoint",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "shareAnimationGeometry",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "tmp_maxZ",
    "tmp_minZ",
    "isAsset",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "subGeometriesCount",
    "hitTestCurveGeometry",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/MovieClip",
    "Event",
    "MouseEvent",
    "MovieClip",
    "timeline",
    "loop",
    "_active_session_ids",
    "_potentialInstances",
    "_currentFrameIndex",
    "_isInit",
    "_isPlaying",
    "_isButton",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "numFrames",
    "exit_frame",
    "_skipAdvance",
    "freeFromScript",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "sessionID",
    "unregisterScriptObject",
    "play",
    "advanceFrame",
    "execute_queue",
    "execute_intervals",
    "skipChildren",
    "advanceChildren",
    "logHierarchy",
    "printHierarchyName",
    "console",
    "log",
    "awayjs-core/lib/events/Event",
    "awayjs-display/lib/events/MouseEvent",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextFieldType",
    "TextField",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "toString",
    "reConstruct",
    "_textFormat",
    "_textColor",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "additional_margin_x",
    "offset_x",
    "additional_margin_y",
    "offset_y",
    "y_offset",
    "prev_char",
    "textlines",
    "text",
    "split",
    "tl",
    "line_width",
    "c_cnt",
    "font_chars",
    "font_chars_scale",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "fallback_font_table",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "get_whitespace_width",
    "x_offset",
    "align",
    "positions2",
    "numVertices",
    "curveData2",
    "curves",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "textWidth",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "_camera",
    "object",
    "VISIBLITY_UPDATED",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "setInterval",
    "func",
    "_intervalID",
    "_active_intervals",
    "clearInterval",
    "mc",
    "script",
    "_queued_mcs_pass2",
    "_queued_mcs",
    "_queued_scripts",
    "_queued_scripts_pass2",
    "caller",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "changedTouches",
    "clientY",
    "preventDefault",
    "updateColliders",
    "bounds",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "touches",
    "touch",
    "identifier",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touchPointID",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "w",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "NodeBase",
    "PartitionBase",
    "_rootNode",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/PartitionBase",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/ContainerNode",
    "ContainerNode",
    "container",
    "isContainerNode",
    "_childDepths",
    "_childMasks",
    "_numChildMasks",
    "_pool",
    "_container",
    "_partition",
    "numEntities",
    "_pEntityNode",
    "_pNumChildNodes",
    "_pChildNodes",
    "findParentForNode",
    "node",
    "isContainer",
    "getItem",
    "iAddNode",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "iRemoveNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_entity",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "updateDebugEntity",
    "awayjs-display/lib/partition/IDisplayObjectNode",
    "awayjs-display/lib/partition/INode",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_explicitDebugVisible",
    "_debugChildrenVisible",
    "applyDebugEntity",
    "pop",
    "EntityNodePool",
    "_updatesMade",
    "_entityNodePool",
    "updateEntities",
    "iMarkForUpdate",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "targetNode",
    "disposeItem",
    "awayjs-display/lib/pool/EntityNodePool",
    "awayjs-display/lib/partition/PointLightNode",
    "PointLightNode",
    "pointLight",
    "_pointLight",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphPartition",
    "ContainerNodePool",
    "SceneGraphPartition",
    "rootContainer",
    "_containerNodePool",
    "awayjs-display/lib/pool/ContainerNodePool",
    "awayjs-display/lib/partition/SkyboxNode",
    "SkyboxNode",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nx",
    "ny",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "posDim",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "curveDim",
    "id0",
    "id1",
    "id2",
    "bx",
    "by",
    "curvex",
    "dot",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "uu",
    "vv",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "_view",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "updateLocalPosition",
    "getMasksCollision",
    "children",
    "layerHit",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "displayObjectContainer",
    "containerNode",
    "_classPool",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "registerClass",
    "entityNodeClass",
    "addDefaults",
    "main",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "subMeshClass",
    "classPool",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "_offset_x",
    "_offset_y",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumEntities",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "boundingBox",
    "curveAttributes",
    "divisions",
    "conversionX",
    "conversionY",
    "minx",
    "miny",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "nodes",
    "index_x",
    "index_y",
    "nodeCount",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n/**\r\n * Provides an abstract base class for nodes in an animation blend tree.\r\n */\r\nclass AnimationNodeBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\r\n\r\n\tpublic _pStateClass:any;\r\n\r\n\tpublic get stateClass():any\r\n\t{\r\n\t\treturn this._pStateClass;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>AnimationNodeBase</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AnimationNodeBase.assetType;\r\n\t}\r\n}\r\n\r\nexport = AnimationNodeBase;",
    "/**\r\n *\r\n */\r\nclass AlignmentMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PIVOT_POINT:string = \"pivot\";\r\n}\r\n\r\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.CurveSubGeometry\r\n */\r\nclass CurveSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _uvsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _curves:Float2Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _scaleU:number = 1;\r\n\tprivate _scaleV:number = 1;\r\n\r\n\t//used for hittesting geometry\r\n\tpublic cells:Array<Array<number>> = new Array<Array<number>>();\r\n\r\n\tpublic divisions:number;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubGeometry.assetType;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis._uvsDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get curves():Float2Attributes\r\n\t{\r\n\t\treturn this._curves;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\r\n\r\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setCurves(array:Array<number>, offset?:number);\r\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\r\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setCurves(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._curves)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._curves.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._curves);\r\n\r\n\t\tthis._verticesDirty[this._curves.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tthis._curves.dispose();\r\n\t\tthis._curves = null;\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():CurveSubGeometry\r\n\t{\r\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\t//temp disable auto derives\r\n\t\tclone.autoDeriveUVs = false;\r\n\r\n\t\tif (this.indices)\r\n\t\t\tclone.setIndices(this.indices.clone());\r\n\r\n\t\tif (this.uvs)\r\n\t\t\tclone.setUVs(this.uvs.clone());\r\n\r\n\t\t//return auto derives to cloned values\r\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.CurveSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.CurveSubMesh\r\n */\r\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\r\n\r\n\tprivate _subGeometry:CurveSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t */\r\n\tpublic get subGeometry():CurveSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new CurveSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\r\n\t * @param material An optional material used to render this CurveSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IDisplayObjectAdapter\t\t= require(\"awayjs-display/lib/adapters/IDisplayObjectAdapter\");\r\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\r\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\r\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n * The DisplayObject class is the base class for all objects that can be\r\n * placed on the display list. The display list manages all objects displayed\r\n * in flash. Use the DisplayObjectContainer class to arrange the\r\n * display objects in the display list. DisplayObjectContainer objects can\r\n * have child display objects, while other display objects, such as Shape and\r\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\r\n * children.\r\n *\r\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\r\n * and <i>y</i> position of an object, as well as more advanced properties of\r\n * the object such as its transformation matrix. </p>\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception. </p>\r\n *\r\n * <p>All display objects inherit from the DisplayObject class.</p>\r\n *\r\n * <p>The DisplayObject class itself does not include any APIs for rendering\r\n * content onscreen. For that reason, if you want create a custom subclass of\r\n * the DisplayObject class, you will want to extend one of its subclasses that\r\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\r\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\r\n *\r\n * <p>The DisplayObject class contains several broadcast events. Normally, the\r\n * target of any particular event is a specific DisplayObject instance. For\r\n * example, the target of an <code>added</code> event is the specific\r\n * DisplayObject instance that was added to the display list. Having a single\r\n * target restricts the placement of event listeners to that target and in\r\n * some cases the target's ancestors on the display list. With broadcast\r\n * events, however, the target is not a specific DisplayObject instance, but\r\n * rather all DisplayObject instances, including those that are not on the\r\n * display list. This means that you can add a listener to any DisplayObject\r\n * instance to listen for broadcast events. In addition to the broadcast\r\n * events listed in the DisplayObject class's Events table, the DisplayObject\r\n * class also inherits two broadcast events from the EventDispatcher class:\r\n * <code>activate</code> and <code>deactivate</code>.</p>\r\n *\r\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\r\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\r\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\r\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\r\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\r\n * longer begin with the underscore(_) character.</p>\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n * \r\n * @event added            Dispatched when a display object is added to the\r\n *                         display list. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event addedToScene     Dispatched when a display object is added to the on\r\n *                         scene display list, either directly or through the\r\n *                         addition of a sub tree in which the display object\r\n *                         is contained. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\r\n *                         entering a new frame. If the playhead is not\r\n *                         moving, or if there is only one frame, this event\r\n *                         is dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\r\n *                         exiting the current frame. All frame scripts have\r\n *                         been run. If the playhead is not moving, or if\r\n *                         there is only one frame, this event is dispatched\r\n *                         continuously in conjunction with the frame rate.\r\n *                         This event is a broadcast event, which means that\r\n *                         it is dispatched by all display objects with a\r\n *                         listener registered for this event.\r\n * @event frameConstructed [broadcast event] Dispatched after the constructors\r\n *                         of frame display objects have run but before frame\r\n *                         scripts have run. If the playhead is not moving, or\r\n *                         if there is only one frame, this event is\r\n *                         dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event removed          Dispatched when a display object is about to be\r\n *                         removed from the display list. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event removedFromScene Dispatched when a display object is about to be\r\n *                         removed from the display list, either directly or\r\n *                         through the removal of a sub tree in which the\r\n *                         display object is contained. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event render           [broadcast event] Dispatched when the display list\r\n *                         is about to be updated and rendered. This event\r\n *                         provides the last opportunity for objects listening\r\n *                         for this event to make changes before the display\r\n *                         list is rendered. You must call the\r\n *                         <code>invalidate()</code> method of the Scene\r\n *                         object each time you want a <code>render</code>\r\n *                         event to be dispatched. <code>Render</code> events\r\n *                         are dispatched to an object only if there is mutual\r\n *                         trust between it and the object that called\r\n *                         <code>Scene.invalidate()</code>. This event is a\r\n *                         broadcast event, which means that it is dispatched\r\n *                         by all display objects with a listener registered\r\n *                         for this event.\r\n *\r\n *                         <p><b>Note: </b>This event is not dispatched if the\r\n *                         display is not rendering. This is the case when the\r\n *                         content is either minimized or obscured. </p>\r\n */\r\nclass DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\r\n{\r\n\tpublic _adapter:IDisplayObjectAdapter;\r\n\tprivate _queuedEvents:Array<Event> = new Array<Event>();\r\n\tpublic _elementsDirty:boolean;\r\n\tprivate _loaderInfo:LoaderInfo;\r\n\tprivate _mouseX:number;\r\n\tprivate _mouseY:number;\r\n\tprivate _root:DisplayObjectContainer;\r\n\tprivate _bounds:Rectangle;\r\n\tpublic _pBoxBounds:Box;\r\n\tprivate _boxBoundsInvalid:boolean = true;\r\n\tpublic _pSphereBounds:Sphere;\r\n\tprivate _sphereBoundsInvalid:boolean = true;\r\n\tprivate _debugVisible:boolean;\r\n\tpublic _pName:string;\r\n\r\n\tpublic _pScene:Scene;\r\n\tpublic _pParent:DisplayObjectContainer;\r\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\r\n\tpublic _pIsEntity:boolean = false;\r\n\tpublic _pIsContainer:boolean = false;\r\n\tpublic _sessionID:number = -1;\r\n\tpublic _depthID:number = -16384;\r\n\r\n\tprivate _explicitPartition:PartitionBase;\r\n\tpublic _pImplicitPartition:PartitionBase;\r\n\r\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\r\n\tprivate _sceneChanged:DisplayObjectEvent;\r\n\tprivate _transform:Transform;\r\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\r\n\tprivate _matrix3DDirty:boolean;\r\n\r\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\r\n\tprivate _inverseSceneTransformDirty:boolean;\r\n\tprivate _scenePosition:Vector3D = new Vector3D();\r\n\tprivate _scenePositionDirty:boolean;\r\n\tprivate _explicitVisibility:boolean = true;\r\n\tprivate _explicitMaskId:number = -1;\r\n\tprivate _explicitMasks:Array<DisplayObject>;\r\n\tpublic _pImplicitVisibility:boolean = true;\r\n\tpublic _pImplicitMaskId:number = -1;\r\n\tpublic _pImplicitMasks:Array<Array<DisplayObject>>;\r\n\tpublic _pImplicitMaskIds:Array<Array<number>> = new Array<Array<number>>();\r\n\tprivate _explicitMouseEnabled:boolean = true;\r\n\tpublic _pImplicitMouseEnabled:boolean = true;\r\n\tprivate _explicitColorTransform:ColorTransform;\r\n\tpublic _pImplicitColorTransform:ColorTransform = new ColorTransform();\r\n\tprivate _listenToSceneTransformChanged:boolean;\r\n\tprivate _listenToSceneChanged:boolean;\r\n\r\n\tprivate _positionDirty:boolean;\r\n\tprivate _rotationDirty:boolean;\r\n\tprivate _skewDirty:boolean;\r\n\tprivate _scaleDirty:boolean;\r\n\r\n\tprivate _positionChanged:DisplayObjectEvent;\r\n\tprivate _rotationChanged:DisplayObjectEvent;\r\n\tprivate _skewChanged:DisplayObjectEvent;\r\n\tprivate _scaleChanged:DisplayObjectEvent;\r\n\r\n\tprivate _rotationX:number = 0;\r\n\tprivate _rotationY:number = 0;\r\n\tprivate _rotationZ:number = 0;\r\n\tprivate _eulers:Vector3D = new Vector3D();\r\n\tprivate _flipY:Matrix3D = new Matrix3D();\r\n\r\n\tprivate _listenToPositionChanged:boolean;\r\n\tprivate _listenToRotationChanged:boolean;\r\n\tprivate _listenToSkewChanged:boolean;\r\n\tprivate _listenToScaleChanged:boolean;\r\n\r\n\tpublic _width:number;\r\n\tpublic _height:number;\r\n\tpublic _depth:number;\r\n\r\n\tprivate _skewX:number = 0;\r\n\tprivate _skewY:number = 0;\r\n\tprivate _skewZ:number = 0;\r\n\tprivate _scaleX:number = 1;\r\n\tprivate _scaleY:number = 1;\r\n\tprivate _scaleZ:number = 1;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _pivot:Vector3D = new Vector3D();\r\n\tprivate _pivotScale:Vector3D = new Vector3D();\r\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\r\n\tprivate _pivotZero:boolean = true;\r\n\tprivate _pivotDirty:boolean;\r\n\tprivate _pos:Vector3D = new Vector3D();\r\n\tprivate _rot:Vector3D = new Vector3D();\r\n\tprivate _ske:Vector3D = new Vector3D();\r\n\tprivate _sca:Vector3D = new Vector3D();\r\n\tprivate _transformComponents:Array<Vector3D>;\r\n\r\n\tprivate _shaderPickingDetails:boolean;\r\n\r\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\r\n\r\n\tpublic _boundsType:string;\r\n\r\n\tpublic _pPickingCollider:IPickingCollider;\r\n\r\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\r\n\r\n\tpublic _iSourcePrefab:PrefabBase;\r\n\r\n    private _inheritColorTransform:boolean = false;\r\n\tprivate _maskMode:boolean = false;\r\n\r\n\tpublic _hierarchicalPropsDirty:number;\r\n\r\n\t//temp vector used in global to local\r\n\tprivate _tempVector3D:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\r\n\t * setter typically managed by factory\r\n\t */\r\n\tpublic get adapter():IDisplayObjectAdapter\r\n\t{\r\n\t\treturn this._adapter;\r\n\t}\r\n\r\n\tpublic set adapter(value:IDisplayObjectAdapter)\r\n\t{\r\n\t\tthis._adapter = value;\r\n\t}\r\n\r\n    public get inheritColorTransform():boolean\r\n    {\r\n        return this._inheritColorTransform;\r\n    }\r\n\r\n    public set inheritColorTransform(value:boolean)\r\n    {\r\n\t\tif (this._inheritColorTransform == value)\r\n\t\t\treturn;\r\n\r\n        this._inheritColorTransform = value;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\r\n\r\n\t/**\r\n\t * Indicates the alpha transparency value of the object specified. Valid\r\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\r\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\r\n\t * even though they are invisible.\r\n\t */\r\n\tpublic get alpha():number\r\n    {\r\n        return this._explicitColorTransform? this._explicitColorTransform.alphaMultiplier : 1;\r\n    }\r\n\r\n    public set alpha(value:number)\r\n    {\r\n\t\tif (!this._explicitColorTransform)\r\n\t\t\tthis._iColorTransform = new ColorTransform();\r\n\r\n        this._explicitColorTransform.alphaMultiplier = value;\r\n    }\r\n\r\n\t/**\r\n\t * A value from the BlendMode class that specifies which blend mode to use. A\r\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\r\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\r\n\t * bitmap-filled square shape to the vector render. If you attempt to set\r\n\t * this property to an invalid value, Flash runtimes set the value to\r\n\t * <code>BlendMode.NORMAL</code>.\r\n\t *\r\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\r\n\t * object. Each pixel is composed of three constituent colors(red, green,\r\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\r\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\r\n\t * the movie clip with the corresponding color of the pixel in the\r\n\t * background. For example, if <code>blendMode</code> is set to\r\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\r\n\t * value of the display object with the red value of the background, and uses\r\n\t * the lighter of the two as the value for the red component of the displayed\r\n\t * color.</p>\r\n\t *\r\n\t * <p>The following table describes the <code>blendMode</code> settings. The\r\n\t * BlendMode class defines string values you can use. The illustrations in\r\n\t * the table show <code>blendMode</code> values applied to a circular display\r\n\t * object(2) superimposed on another display object(1).</p>\r\n\t */\r\n\tpublic blendMode:BlendMode;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get boundsType():string\r\n\t{\r\n\t\treturn this._boundsType;\r\n\t}\r\n\r\n\tpublic set boundsType(value:string)\r\n\t{\r\n\t\tif (this._boundsType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._boundsType = value;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].updateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * If set to <code>true</code>, NME will use the software renderer to cache\r\n\t * an internal bitmap representation of the display object. For native targets,\r\n\t * this is often much slower than the default hardware renderer. When you\r\n\t * are using the Flash target, this caching may increase performance for display\r\n\t * objects that contain complex vector content.\r\n\t *\r\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\r\n\t * to the bitmap instead of the main display. If\r\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\r\n\t * then copied to the main display as unstretched, unrotated pixels snapped\r\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\r\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\r\n\t * instead of being stretched.</p>\r\n\t *\r\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\r\n\t * object is drawn to the off-screen bitmap using that matrix and the\r\n\t * stretched and/or rotated results of that rendering are used to draw the\r\n\t * object to the main display.</p>\r\n\t *\r\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\r\n\t * property is set to <code>true</code>.</p>\r\n\t *\r\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\r\n\t * <code>true</code>, the rendering does not change, however the display\r\n\t * object performs pixel snapping automatically. The animation speed can be\r\n\t * significantly faster depending on the complexity of the vector content.\r\n\t * </p>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\r\n\t * <code>true</code> whenever you apply a filter to a display object(when\r\n\t * its <code>filter</code> array is not empty), and if a display object has a\r\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\r\n\t * <code>true</code> for that display object, even if you set the property to\r\n\t * <code>false</code>. If you clear all filters for a display object, the\r\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\r\n\t *\r\n\t * <p>A display object does not use a bitmap even if the\r\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\r\n\t * instead renders from vector data in the following cases:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\r\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\r\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\r\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\r\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\r\n\t * in width.</li>\r\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\r\n\t * that have mostly static content and that do not scale and rotate\r\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\r\n\t * performance increases when the movie clip is translated(when its <i>x</i>\r\n\t * and <i>y</i> position is changed).</p>\r\n\t */\r\n\tpublic cacheAsBitmap:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic castsShadows:boolean = true;\r\n\r\n\t/**\r\n\t * Indicates the depth of the display object, in pixels. The depth is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\r\n\t * set <code>depth</code> to a different value.</p>\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this.getBox().depth*this.scaleZ;\r\n\t}\r\n\r\n\tpublic set depth(val:number)\r\n\t{\r\n\t\tif (this._depth == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._depth = val;\r\n\r\n\t\tthis._setScaleZ(val/this.getBox().depth);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\r\n\t */\r\n\tpublic get eulers():Vector3D\r\n\t{\r\n\t\tthis._eulers.x = this.rotationX;\r\n\t\tthis._eulers.y = this.rotationY;\r\n\t\tthis._eulers.z = this.rotationZ;\r\n\r\n\t\treturn this._eulers;\r\n\t}\r\n\r\n\tpublic set eulers(value:Vector3D)\r\n\t{\r\n\t\tthis.rotationX = value.x;\r\n\t\tthis.rotationY = value.y;\r\n\t\tthis.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * An object that can contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * An indexed array that contains each filter object currently associated\r\n\t * with the display object. The flash.filters package contains several\r\n\t * classes that define specific filters you can use.\r\n\t *\r\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\r\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\r\n\t * you must make a temporary copy of the entire <code>filters</code> array,\r\n\t * modify the temporary array, then assign the value of the temporary array\r\n\t * back to the <code>filters</code> array. You cannot directly add a new\r\n\t * filter object to the <code>filters</code> array.</p>\r\n\t *\r\n\t * <p>To add a filter by using ActionScript, perform the following steps\r\n\t * (assume that the target display object is named\r\n\t * <code>myDisplayObject</code>):</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Create a new filter object by using the constructor method of your\r\n\t * chosen filter class.</li>\r\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\r\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\r\n\t * array.</li>\r\n\t *   <li>Assign the value of the temporary array to the\r\n\t * <code>myDisplayObject.filters</code> array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\r\n\t * a temporary array. Instead, you can directly assign an array literal that\r\n\t * contains one or more filter objects that you create. The first example in\r\n\t * the Examples section adds a drop shadow filter by using code that handles\r\n\t * both defined and undefined <code>filters</code> arrays.</p>\r\n\t *\r\n\t * <p>To modify an existing filter object, you must use the technique of\r\n\t * modifying a copy of the <code>filters</code> array:</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\r\n\t * array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Modify the property by using the temporary array,\r\n\t * <code>myFilters</code>. For example, to set the quality property of the\r\n\t * first filter in the array, you could use the following code:\r\n\t * <code>myFilters[0].quality = 1;</code></li>\r\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\r\n\t * array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>At load time, if a display object has an associated filter, it is\r\n\t * marked to cache itself as a transparent bitmap. From this point forward,\r\n\t * as long as the display object has a valid filter list, the player caches\r\n\t * the display object as a bitmap. This source bitmap is used as a source\r\n\t * image for the filter effects. Each display object usually has two bitmaps:\r\n\t * one with the original unfiltered source display object and another for the\r\n\t * final image after filtering. The final image is used when rendering. As\r\n\t * long as the display object does not change, the final image does not need\r\n\t * updating.</p>\r\n\t *\r\n\t * <p>The flash.filters package includes classes for filters. For example, to\r\n\t * create a DropShadow filter, you would write:</p>\r\n\t *\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel4</code> output).\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader doesn't specify any image input or\r\n\t *                       the first input is not an <code>image4</code> input.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\r\n\t *                       ByteArray or Vector.<Number> instance as a shader\r\n\t *                       input, and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput object, or the specified values\r\n\t *                       don't match the amount of data in the input data.\r\n\t *                       See the <code>ShaderInput.input</code> property for\r\n\t *                       more information.\r\n\t */\r\n//\t\tpublic filters:Array<Dynamic>;\r\n\r\n\t/**\r\n\t * Indicates the height of the display object, in pixels. The height is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a height of 0, even if you try to\r\n\t * set <code>height</code> to a different value.</p>\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this.getBox().height*this.scaleY;\r\n\t}\r\n\r\n\tpublic set height(val:number)\r\n\t{\r\n\t\tif (this._height == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = val;\r\n\r\n\t\tthis._setScaleY(val/this.getBox().height);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance container index of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByIndex()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\r\n\t */\r\n\tpublic get index():number\r\n\t{\r\n\t\tif (this._pParent)\r\n\t\t\treturn this._pParent.getChildIndex(this);\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get inverseSceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._inverseSceneTransformDirty) {\r\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\r\n\t\t\tthis._inverseSceneTransform.invert();\r\n\t\t\tthis._inverseSceneTransformDirty = false;\r\n\t\t}\r\n\t\treturn this._inverseSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isEntity()\r\n\t{\r\n\t\treturn this._pIsEntity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isContainer()\r\n\t{\r\n\t\treturn this._pIsContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object containing information about loading the file\r\n\t * to which this display object belongs. The <code>loaderInfo</code> property\r\n\t * is defined only for the root display object of a SWF file or for a loaded\r\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\r\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\r\n\t * a display object named <code>myDisplayObject</code>, use\r\n\t * <code>myDisplayObject.root.loaderInfo</code>.\r\n\t *\r\n\t * <p>A large SWF file can monitor its download by calling\r\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\r\n\t * func)</code>.</p>\r\n\t */\r\n\tpublic get loaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._loaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * The calling display object is masked by the specified <code>mask</code>\r\n\t * object. To ensure that masking works when the Stage is scaled, the\r\n\t * <code>mask</code> display object must be in an active part of the display\r\n\t * list. The <code>mask</code> object itself is not drawn. Set\r\n\t * <code>mask</code> to <code>null</code> to remove the mask.\r\n\t *\r\n\t * <p>To be able to scale a mask object, it must be on the display list. To\r\n\t * be able to drag a mask Sprite object(by calling its\r\n\t * <code>startDrag()</code> method), it must be on the display list. To call\r\n\t * the <code>startDrag()</code> method for a mask sprite based on a\r\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\r\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\r\n\t *\r\n\t * <p>When display objects are cached by setting the\r\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\r\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\r\n\t * mask and the display object being masked must be part of the same cached\r\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\r\n\t * child of the display object. If an ancestor of the display object on the\r\n\t * display list is cached, then the mask must be a child of that ancestor or\r\n\t * one of its descendents. If more than one ancestor of the masked object is\r\n\t * cached, then the mask must be a descendent of the cached container closest\r\n\t * to the masked object in the display list.</p>\r\n\t *\r\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\r\n\t * more than one calling display object. When the <code>mask</code> is\r\n\t * assigned to a second display object, it is removed as the mask of the\r\n\t * first object, and that object's <code>mask</code> property becomes\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic mask:DisplayObject;\r\n\r\n\tpublic get maskMode():boolean\r\n\t{\r\n\t\treturn this._maskMode;\r\n\t}\r\n\r\n\tpublic set maskMode(value:boolean)\r\n\t{\r\n\t\tif (this._maskMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maskMode = value;\r\n\r\n\t\tthis._explicitMaskId = value? this.id : -1;\r\n\r\n\t\tthis._updateMaskMode();\r\n\t}\r\n\t/**\r\n\t * Specifies whether this object receives mouse, or other user input,\r\n\t * messages. The default value is <code>true</code>, which means that by\r\n\t * default any InteractiveObject instance that is on the display list\r\n\t * receives mouse events or other user input events. If\r\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\r\n\t * not receive any mouse events(or other user input events like keyboard\r\n\t * events). Any children of this instance on the display list are not\r\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\r\n\t * children of an object on the display list, use\r\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseEnabled():boolean\r\n\t{\r\n\t\treturn this._explicitMouseEnabled;\r\n\t}\r\n\r\n\tpublic set mouseEnabled(value:boolean)\r\n\t{\r\n\t\tif (this._explicitMouseEnabled == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMouseEnabled = value;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates the x coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._mouseX;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._mouseY;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance name of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByName()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * @throws IllegalOperationError If you are attempting to set this property\r\n\t *                               on an object that was placed on the timeline\r\n\t *                               in the Flash authoring tool.\r\n\t */\r\n\tpublic get name() :string\r\n    {\r\n        return this._pName;\r\n    }\r\n\r\n    public set name(value : string)\r\n    {\r\n        this._pName = value;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\r\n\r\n\t/**\r\n\t * Indicates the DisplayObjectContainer object that contains this display\r\n\t * object. Use the <code>parent</code> property to specify a relative path to\r\n\t * display objects that are above the current display object in the display\r\n\t * list hierarchy.\r\n\t *\r\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\r\n\t * display list as in the following:</p>\r\n\t *\r\n\t * @throws SecurityError The parent display object belongs to a security\r\n\t *                       sandbox to which you do not have access. You can\r\n\t *                       avoid this situation by having the parent movie call\r\n\t *                       the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic get parent():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._pParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get partition():PartitionBase\r\n\t{\r\n\t\treturn this._explicitPartition;\r\n\t}\r\n\r\n\tpublic set partition(value:PartitionBase)\r\n\t{\r\n\t\tif (this._explicitPartition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitPartition = value;\r\n\r\n\t\tthis._iSetScene(this._pScene, this._pParent? this._pParent._iAssignedPartition : null);\r\n\r\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.PARTITION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pickingCollider():IPickingCollider\r\n\t{\r\n\t\treturn this._pPickingCollider;\r\n\t}\r\n\r\n\tpublic set pickingCollider(value:IPickingCollider)\r\n\t{\r\n\t\tthis._pPickingCollider = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the local point around which the object rotates.\r\n\t */\r\n\tpublic get pivot():Vector3D\r\n\t{\r\n\t\treturn this._pivot;\r\n\t}\r\n\r\n\r\n\tpublic set pivot(pivot:Vector3D)\r\n\t{\r\n\t\tif (this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivot.x = pivot.x;\r\n\t\tthis._pivot.y = pivot.y;\r\n\t\tthis._pivot.z = pivot.z;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * For a display object in a loaded SWF file, the <code>root</code> property\r\n\t * is the top-most display object in the portion of the display list's tree\r\n\t * structure represented by that SWF file. For a Bitmap object representing a\r\n\t * loaded image file, the <code>root</code> property is the Bitmap object\r\n\t * itself. For the instance of the main class of the first SWF file loaded,\r\n\t * the <code>root</code> property is the display object itself. The\r\n\t * <code>root</code> property of the Scene object is the Scene object itself.\r\n\t * The <code>root</code> property is set to <code>null</code> for any display\r\n\t * object that has not been added to the display list, unless it has been\r\n\t * added to a display object container that is off the display list but that\r\n\t * is a child of the top-most display object in a loaded SWF file.\r\n\t *\r\n\t * <p>For example, if you create a new Sprite object by calling the\r\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\r\n\t * is <code>null</code> until you add it to the display list(or to a display\r\n\t * object container that is off the display list but that is a child of the\r\n\t * top-most display object in a SWF file).</p>\r\n\t *\r\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\r\n\t * file may not be on the display list, the top-most display object in the\r\n\t * SWF file has its <code>root</code> property set to itself. The Loader\r\n\t * object does not have its <code>root</code> property set until it is added\r\n\t * as a child of a display object for which the <code>root</code> property is\r\n\t * set.</p>\r\n\t */\r\n\tpublic get root():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._root;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\r\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\r\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\r\n\t * this range are added to or subtracted from 360 to obtain a value within\r\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\r\n\t * is the same as <code> my_video.rotation = 90</code>.\r\n\t */\r\n\tpublic rotation:number; //TODO\r\n\r\n\t/**\r\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationX(val:number)\r\n\t{\r\n\t\tif (this.rotationX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationY(val:number)\r\n\t{\r\n\t\tif (this.rotationY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationZ(val:number)\r\n\t{\r\n\t\tif (this.rotationZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\r\n\t * the entire display object is scaled normally when any scale transformation\r\n\t * is applied.\r\n\t *\r\n\t * <p>When you define the <code>scale9Grid</code> property, the display\r\n\t * object is divided into a grid with nine regions based on the\r\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\r\n\t * grid. The eight other regions of the grid are the following areas: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The upper-left corner outside of the rectangle</li>\r\n\t *   <li>The area above the rectangle </li>\r\n\t *   <li>The upper-right corner outside of the rectangle</li>\r\n\t *   <li>The area to the left of the rectangle</li>\r\n\t *   <li>The area to the right of the rectangle</li>\r\n\t *   <li>The lower-left corner outside of the rectangle</li>\r\n\t *   <li>The area below the rectangle</li>\r\n\t *   <li>The lower-right corner outside of the rectangle</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>You can think of the eight regions outside of the center(defined by\r\n\t * the rectangle) as being like a picture frame that has special rules\r\n\t * applied to it when scaled.</p>\r\n\t *\r\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\r\n\t * is scaled, all text and gradients are scaled normally; however, for other\r\n\t * types of objects the following rules apply:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>Content in the center region is scaled normally. </li>\r\n\t *   <li>Content in the corners is not scaled. </li>\r\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\r\n\t * Content in the left and right regions is scaled vertically only.</li>\r\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\r\n\t * fit their shapes.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\r\n\t * the <code>scale9Grid</code> property is ignored).</p>\r\n\t *\r\n\t * <p>For example, consider the following display object and a rectangle that\r\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\r\n\t *\r\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\r\n\t * object to be used as a component, in which edge regions retain the same\r\n\t * width when the component is scaled.</p>\r\n\t *\r\n\t * @throws ArgumentError If you pass an invalid argument to the method.\r\n\t */\r\n\tpublic scale9Grid:Rectangle;\r\n\r\n\t/**\r\n\t * Indicates the horizontal scale(percentage) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0). 1.0\r\n\t * equals 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleX;\r\n\t}\r\n\r\n\tpublic set scaleX(val:number)\r\n\t{\r\n\t\t//remove absolute width\r\n\t\tthis._width = null;\r\n\r\n\t\tthis._setScaleX(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleY;\r\n\t}\r\n\r\n\tpublic set scaleY(val:number)\r\n\t{\r\n\t\t//remove absolute height\r\n\t\tthis._height = null;\r\n\r\n\t\tthis._setScaleY(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\r\n\t * <code>y</code> and <code>z</code> property values, which are defined in\r\n\t * whole pixels. </p>\r\n\t */\r\n\tpublic get scaleZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleZ;\r\n\t}\r\n\r\n\tpublic set scaleZ(val:number)\r\n\t{\r\n\t\t//remove absolute depth\r\n\t\tthis._depth = null;\r\n\r\n\t\tthis._setScaleZ(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the horizontal skew(angle) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewX;\r\n\t}\r\n\r\n\tpublic set skewX(val:number)\r\n\t{\r\n\t\tif (this.skewX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewX = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical skew(angle) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewY;\r\n\t}\r\n\r\n\tpublic set skewY(val:number)\r\n\t{\r\n\t\tif (this.skewY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewY = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth skew(angle) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewZ;\r\n\t}\r\n\r\n\tpublic set skewZ(val:number)\r\n\t{\r\n\t\tif (this.skewZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewZ = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\tif (this._scenePositionDirty) {\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\r\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\r\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\r\n\t\t\t} else {\r\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\r\n\t\t\t}\r\n\r\n\t\t\tthis._scenePositionDirty = false;\r\n\t\t}\r\n\t\treturn this._scenePosition;\r\n\t}\r\n\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._pSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The scroll rectangle bounds of the display object. The display object is\r\n\t * cropped to the size defined by the rectangle, and it scrolls within the\r\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\r\n\t * of the <code>scrollRect</code> object.\r\n\t *\r\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\r\n\t * display object's coordinate space and are scaled just like the overall\r\n\t * display object. The corner bounds of the cropped window on the scrolling\r\n\t * display object are the origin of the display object(0,0) and the point\r\n\t * defined by the width and height of the rectangle. They are not centered\r\n\t * around the origin, but use the origin to define the upper-left corner of\r\n\t * the area. A scrolled display object always scrolls in whole pixel\r\n\t * increments. </p>\r\n\t *\r\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\r\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\r\n\t * an object up and down by setting the <code>y</code> property of the\r\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\r\n\t * 90° and you scroll it left and right, the display object actually scrolls\r\n\t * up and down.</p>\r\n\t */\r\n\tpublic scrollRect:Rectangle;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shaderPickingDetails():boolean\r\n\t{\r\n\t\treturn this._shaderPickingDetails;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._debugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (value == this._debugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugVisible = value;\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\r\n\t}\r\n\r\n\t/**\r\n\t * An object with properties pertaining to a display object's matrix, color\r\n\t * transform, and pixel bounds. The specific properties  -  matrix,\r\n\t * colorTransform, and three read-only properties\r\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\r\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\r\n\t * Transform class.\r\n\t *\r\n\t * <p>Each of the transform object's properties is itself an object. This\r\n\t * concept is important because the only way to set new values for the matrix\r\n\t * or colorTransform objects is to create a new object and copy that object\r\n\t * into the transform.matrix or transform.colorTransform property.</p>\r\n\t *\r\n\t * <p>For example, to increase the <code>tx</code> value of a display\r\n\t * object's matrix, you must make a copy of the entire matrix object, then\r\n\t * copy the new object into the matrix property of the transform object:</p>\r\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\r\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\r\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\r\n\t *\r\n\t * <p>You cannot directly set the <code>tx</code> property. The following\r\n\t * code has no effect on <code>myDisplayObject</code>: </p>\r\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\r\n\t * 10; </code></pre>\r\n\t *\r\n\t * <p>You can also copy an entire transform object and assign it to another\r\n\t * display object's transform property. For example, the following code\r\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\r\n\t * <code>myNewDisplayObj</code>:</p>\r\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\r\n\t *\r\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\r\n\t * same values for its matrix, color transform, and pixel bounds as the old\r\n\t * display object, <code>myOldDisplayObj</code>.</p>\r\n\t *\r\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\r\n\t * available, for color transforms.</p>\r\n\t */\r\n\tpublic get transform():Transform\r\n\t{\r\n\t\treturn this._transform;\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not the display object is visible. Display objects that are not\r\n\t * visible are disabled. For example, if <code>visible=false</code> for an\r\n\t * InteractiveObject instance, it cannot be clicked.\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn this._explicitVisibility;\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitVisibility == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitVisibility = value;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.VISIBLE);\r\n\t}\r\n\r\n\tpublic get masks():Array<DisplayObject>\r\n\t{\r\n\t\treturn this._explicitMasks;\r\n\t}\r\n\r\n\tpublic set masks(value:Array<DisplayObject>)\r\n\t{\r\n\t\tif (this._explicitMasks == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMasks = value;\r\n\r\n\t\t//make sure maskMode is set to true for all masks\r\n\t\tif (value != null && value.length) {\r\n\t\t\tvar len:number = value.length;\r\n\t\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t\tvalue[i].maskMode = true;\r\n\t\t}\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASKS);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the width of the display object, in pixels. The width is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\r\n\t * <code>width</code> to a different value.</p>\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this.getBox().width*this.scaleX;\r\n\t}\r\n\r\n\tpublic set width(val:number)\r\n\t{\r\n\t\tif (this._width == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = val;\r\n\r\n\t\tthis._setScaleX(val/this.getBox().width);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\tpublic set x(val:number)\r\n\t{\r\n\t\tif (this._x == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = this._matrix3D.rawData[12] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\tpublic set y(val:number)\r\n\t{\r\n\t\tif (this._y == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._y = this._matrix3D.rawData[13] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\r\n\t * instance relative to the 3D parent container. The z property is used for\r\n\t * 3D coordinates, not screen or pixel coordinates.\r\n\t *\r\n\t * <p>When you set a <code>z</code> property for a display object to\r\n\t * something other than the default value of <code>0</code>, a corresponding\r\n\t * Matrix3D object is automatically created. for adjusting a display object's\r\n\t * position and orientation in three dimensions. When working with the\r\n\t * z-axis, the existing behavior of x and y properties changes from screen or\r\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\r\n\t *\r\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\r\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\r\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\r\n\t *\r\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\r\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._z;\r\n\t}\r\n\r\n\tpublic set z(val:number)\r\n\t{\r\n\t\tif (this._z == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._z = this._matrix3D.rawData[14] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic zOffset:number = 0;\r\n\r\n\t/**\r\n\t * Creates a new <code>DisplayObject</code> instance.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t// Cached vector of transformation components used when\r\n\t\t// recomposing the transform matrix in updateTransform()\r\n\r\n\t\tthis._transformComponents = new Array<Vector3D>(4);\r\n\r\n\t\tthis._transformComponents[0] = this._pos;\r\n\t\tthis._transformComponents[1] = this._rot;\r\n\t\tthis._transformComponents[2] = this._ske;\r\n\t\tthis._transformComponents[3] = this._sca;\r\n\r\n\t\t//creation of associated transform object\r\n\t\tthis._transform = new Transform(this);\r\n\r\n\t\tthis._matrix3D.identity();\r\n\r\n\t\tthis._flipY.appendScale(1, -1, 1);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.addEventListener(type, listener);\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\r\n\t\t\t\tthis._listenToSkewChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\r\n\t\t\t\tthis._listenToSceneChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n\t\t\t\tthis._listenToSceneTransformChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar newInstance:DisplayObject = new DisplayObject();\r\n\r\n\t\tthis.copyTo(newInstance);\r\n\r\n\t\treturn newInstance;\r\n\t}\r\n\r\n\tpublic copyTo(newInstance:DisplayObject)\r\n\t{\r\n\t\tnewInstance.partition = this._explicitPartition;\r\n\t\tnewInstance.boundsType = this._boundsType;\r\n\t\tnewInstance.pivot = this._pivot;\r\n\t\tnewInstance.name = this._pName;\r\n\t\tnewInstance.mouseEnabled = this._explicitMouseEnabled;\r\n\t\tnewInstance.extra = this.extra;\r\n\t\tnewInstance.maskMode = this._maskMode;\r\n\r\n\t\tif (this._explicitMasks)\r\n\t\t\tnewInstance.masks = this._explicitMasks;\r\n\r\n\t\tnewInstance._iMatrix3D = this._iMatrix3D;\r\n\r\n\t\tif (this._adapter)\r\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\r\n\r\n\t\tif (this._transform.colorTransform)\r\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tif (this.parent)\r\n\t\t\tthis.parent.removeChild(this);\r\n\r\n\t\twhile (this._pRenderables.length)\r\n\t\t\tthis._pRenderables[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic disposeAsset()\r\n\t{\r\n\t\tthis.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the area of the display object relative\r\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\r\n\t * Consider the following code, which shows how the rectangle returned can\r\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\r\n\t * you pass to the method:\r\n\t *\r\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to display coordinates, or display coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * <p>The <code>getBounds()</code> method is similar to the\r\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\r\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\r\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\r\n\t * an example, see the description of the <code>getRect()</code> method.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the boundary of the display object, based\r\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\r\n\t * parameter, excluding any strokes on shapes. The values that the\r\n\t * <code>getRect()</code> method returns are the same or smaller than those\r\n\t * returned by the <code>getBounds()</code> method.\r\n\t *\r\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to Scene coordinates, or Scene coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//TODO targetCoordinateSpace\r\n\t\tif (this._boxBoundsInvalid) {\r\n\t\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\t\t//scale updates if absolute dimensions are detected\r\n\t\t\tif (this._width != null)\r\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\r\n\r\n\t\t\tif (this._height != null)\r\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\r\n\r\n\t\t\tif (this._depth != null)\r\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\r\n\t\t}\r\n\r\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\r\n\t\t\treturn this._pBoxBounds;\r\n\r\n\t\tif (targetCoordinateSpace == this._pParent)\r\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\r\n\t\telse\r\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\r\n\t}\r\n\r\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tif (this._sphereBoundsInvalid)\r\n\t\t\tthis._pUpdateSphereBounds();\r\n\r\n\t\treturn this._pSphereBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\r\n\t * to the display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\r\n\t * because they relate to the origin(0,0) of the main display area. Then\r\n\t * pass the Point instance as the parameter to the\r\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\r\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\r\n\t * object instead of the origin of the Scene.</p>\r\n\t *\r\n\t * @param point An object created with the Point class. The Point object\r\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the display object.\r\n\t */\r\n\tpublic globalToLocal(point:Point, target:Point = null):Point\r\n\t{\r\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\r\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Point();\r\n\r\n\t\ttarget.x = pos.x;\r\n\t\ttarget.y = pos.y;\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\r\n\t * three-dimensional display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\r\n\t * y and z values that you assign to the Vector3D object represent global\r\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\r\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\r\n\t * <code>position</code> parameter.\r\n\t * The method returns three-dimensional coordinates as a Vector3D object\r\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\r\n\t * are relative to the origin of the three-dimensional display object.</p>\r\n\t *\r\n\t * @param point A Vector3D object representing global x, y and z coordinates in\r\n\t *              the scene.\r\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\r\n\t *         display object.\r\n\t */\r\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.inverseSceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the bounding box of the display object to see if it overlaps or\r\n\t * intersects with the bounding box of the <code>obj</code> display object.\r\n\t *\r\n\t * @param obj The display object to test against.\r\n\t * @return <code>true</code> if the bounding boxes of the display objects\r\n\t *         intersect; <code>false</code> if not.\r\n\t */\r\n\tpublic hitTestObject(obj:DisplayObject):boolean\r\n\t{\r\n\t\tvar objBox:Box = obj.getBox();\r\n\t\tif(!objBox) return false;\r\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\r\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\r\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\r\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\r\n\r\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\r\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\r\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\r\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tif(!box) return false;\r\n\r\n\t\t//first check all points against targer box\r\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\r\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\r\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\r\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\r\n\r\n\t\t//now test against obj box\r\n\t\tvar n0x:number = topRight.y - topLeft.y;\r\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\r\n\r\n\t\tvar n1x:number = bottomRight.y - topRight.y;\r\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\r\n\r\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\r\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\r\n\r\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\r\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\r\n\r\n\t\tvar p0x:number = box.left - topLeft.x;\r\n\t\tvar p0y:number = box.top - topLeft.y;\r\n\t\tvar p1x:number = box.left - topRight.x;\r\n\t\tvar p1y:number = box.top - topRight.y;\r\n\t\tvar p2x:number = box.left - bottomRight.x;\r\n\t\tvar p2y:number = box.top - bottomRight.y;\r\n\t\tvar p3x:number = box.left - bottomLeft.x;\r\n\t\tvar p3y:number = box.top - bottomLeft.y;\r\n\r\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\r\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\r\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\r\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.top - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.top - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.top - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.top - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.left - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.left - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.left - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.left - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @param maskFlag Whether to check against the object when it is used as mask\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic isMask():boolean\r\n\t{\r\n\t\treturn this._explicitMaskId == -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @param    target        The vector defining the point to be looked at\r\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\r\n\t */\r\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\r\n\t{\r\n\r\n\t\tvar yAxis:Vector3D;\r\n\t\tvar zAxis:Vector3D;\r\n\t\tvar xAxis:Vector3D;\r\n\t\tvar raw:Float32Array;\r\n\r\n\t\tif (upAxis == null)\r\n\t\t\tupAxis = Vector3D.Y_AXIS;\r\n\t\telse\r\n\t\t\tupAxis.normalize();\r\n\r\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\r\n\t\tzAxis.normalize();\r\n\r\n\t\txAxis = upAxis.crossProduct(zAxis);\r\n\t\txAxis.normalize();\r\n\r\n\t\tif (xAxis.length < 0.05) {\r\n\t\t\txAxis.x = upAxis.y;\r\n\t\t\txAxis.y = upAxis.x;\r\n\t\t\txAxis.z = 0;\r\n\t\t\txAxis.normalize();\r\n\t\t}\r\n\r\n\t\tyAxis = zAxis.crossProduct(xAxis);\r\n\r\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\traw[0] = xAxis.x;\r\n\t\traw[1] = xAxis.y;\r\n\t\traw[2] = xAxis.z;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = yAxis.x;\r\n\t\traw[5] = yAxis.y;\r\n\t\traw[6] = yAxis.z;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = zAxis.x;\r\n\t\traw[9] = zAxis.y;\r\n\t\traw[10] = zAxis.z;\r\n\t\traw[11] = 0;\r\n\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.copyRawDataFrom(raw);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the display object's(local)\r\n\t * coordinates to the Scene(global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\r\n\t * coordinates from values that are relative to the origin(0,0) of a\r\n\t * specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Point instance that you created as the parameter to\r\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\r\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\r\n\t * Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param point The name or identifier of a point created with the Point\r\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the Scene.\r\n\t */\r\n\tpublic localToGlobal(point:Point, target:Point = null):Point\r\n\t{\r\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\r\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Point();\r\n\r\n\t\ttarget.x = pos.x;\r\n\t\ttarget.y = pos.y;\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a three-dimensional point of the three-dimensional display\r\n\t * object's(local) coordinates to a three-dimensional point in the Scene\r\n\t * (global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\r\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\r\n\t * a specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\r\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\r\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\r\n\t * the origin of the Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param position A Vector3D object containing either a three-dimensional\r\n\t *                position or the coordinates of the three-dimensional\r\n\t *                display object.\r\n\t * @return A Vector3D object representing a three-dimensional position in\r\n\t *         the Scene.\r\n\t */\r\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object directly to a point in space\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\r\n\tpublic moveTo(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\r\n\t\t\treturn;\r\n\r\n\t\tthis.x = dx;\r\n\t\tthis.y = dy;\r\n\t\tthis.z = dz;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the local point around which the object rotates.\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\tpublic movePivot(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (dx == 0 && dy == 0 && dz == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivot.x += dx;\r\n\t\tthis._pivot.y += dy;\r\n\t\tthis._pivot.z += dz;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local x-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic pitch(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\r\n\t}\r\n\r\n\tpublic reset():void\r\n\t{\r\n\t\tthis.visible = true;\r\n\r\n\t\tif(this._iMatrix3D)\r\n\t\t\tthis._iMatrix3D.identity();\r\n\r\n\t\tif(this._iColorTransform)\r\n\t\t\tthis._iColorTransform.clear();\r\n\r\n\t\t//this.name=\"\";\r\n\t\tthis.masks = null;\r\n\r\n\t\tthis.maskMode = false;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\r\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\r\n\t\t\tvar scale:Vector3D = comps[3];\r\n\t\t\tcomps[0] = this.scenePosition;\r\n\t\t\tscale.x = this.scaleX;\r\n\t\t\tscale.y = this.scaleY;\r\n\t\t\tscale.z = this.scaleZ;\r\n\t\t\tthis._orientationMatrix.recompose(comps);\r\n\r\n\t\t\t//add in case of pivot\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\r\n\r\n\t\t\treturn this._orientationMatrix;\r\n\t\t}\r\n\r\n\t\treturn this.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local z-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic roll(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around an axis by a defined angle\r\n\t *\r\n\t * @param    axis        The vector defining the axis of rotation\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic rotate(axis:Vector3D, angle:number)\r\n\t{\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.prependRotation(angle, axis);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis.rotationX += vec.x*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationY += vec.y*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationZ += vec.z*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object directly to a euler angle\r\n\t *\r\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\r\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\r\n\t * @param    az        The angle in degrees of the rotation around the z axis.\r\n\t */\r\n\tpublic rotateTo(ax:number, ay:number, az:number)\r\n\t{\r\n\t\tthis.rotationX = ax;\r\n\t\tthis.rotationY = ay;\r\n\t\tthis.rotationZ = az;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.removeEventListener(type, listener);\r\n\r\n\t\tif (this.hasEventListener(type))\r\n\t\t\treturn;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\r\n\t\t\t\tthis._listenToSkewChanged = false;\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\r\n\t\t\t\tthis._listenToSceneChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n\t\t\t\tthis._listenToSceneTransformChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translate(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis.x += x*len;\r\n\t\tthis.y += y*len;\r\n\t\tthis.z += z*len;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translateLocal(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\r\n\r\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\r\n\r\n\t\tthis.x = this._pos.x;\r\n\t\tthis.y = this._pos.y;\r\n\t\tthis.z = this._pos.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local y-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic yaw(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iController:ControllerBase;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iAssignedPartition():PartitionBase\r\n\t{\r\n\t\treturn this._pImplicitPartition;\r\n\t}\r\n\r\n\t/**\r\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic get _iMatrix3D():Matrix3D\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\tthis._pUpdateMatrix3D();\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\tthis._pUpdatePivot();\r\n\r\n\t\treturn this._matrix3D;\r\n\t}\r\n\r\n\tpublic set _iMatrix3D(val:Matrix3D)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 12; i++)\r\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\r\n\r\n\t\tthis.x = val.rawData[12];\r\n\t\tthis.y = val.rawData[13];\r\n\t\tthis.z = val.rawData[14];\r\n\r\n\t\tthis._elementsDirty = true;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\r\n\t}\r\n\r\n\tpublic get _iColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._explicitColorTransform;\r\n\t}\r\n\r\n\tpublic set _iColorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._explicitColorTransform = value;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\r\n\t{\r\n\t\tif (!this._pPickingCollisionVO)\r\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\r\n\r\n\t\treturn this._pPickingCollisionVO;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n\t\tthis._pParent = value;\r\n\r\n        if (value)\r\n\t\t\tthis._iSetScene(value._pScene, value._iAssignedPartition);\r\n\t\telse\r\n\t\t\tthis._iSetScene(null, null);\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.ALL);\r\n\t}\r\n\r\n\tpublic pInvalidateHierarchicalProperties(propDirty:number):boolean\r\n\t{\r\n\t\tvar newPropDirty:number = (this._hierarchicalPropsDirty ^ propDirty) & propDirty;\r\n\t\tif (!newPropDirty)\r\n\t\t\treturn true;\r\n\r\n\t\tthis._hierarchicalPropsDirty |= propDirty;\r\n\r\n\t\tif (newPropDirty & HierarchicalProperties.SCENE_TRANSFORM) {\r\n\t\t\tthis._inverseSceneTransformDirty = true;\r\n\t\t\tthis._scenePositionDirty = true;\r\n\r\n\t\t\tif (this.isEntity)\r\n\t\t\t\tthis.invalidatePartition();\r\n\r\n\t\t\tif (this._pParent)\r\n\t\t\t\tthis._pParent._pInvalidateBounds();\r\n\r\n\t\t\tif (this._listenToSceneTransformChanged)\r\n\t\t\t\tthis.queueDispatch(this._sceneTransformChanged || (this._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this)));\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _iSetScene(scene:Scene, partition:PartitionBase)\r\n\t{\r\n\t\tvar sceneChanged:boolean = this._pScene != scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//unregister partition from current scene\r\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//unregister entity from current partition\r\n\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\r\n\t\t}\r\n\r\n\t\t// assign parent implicit partition if no explicit one is given\r\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\r\n\r\n\t\t//assign scene\r\n\t\tif (sceneChanged)\r\n\t\t\tthis._pScene = scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//register partition with scene\r\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//register entity with new partition\r\n\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\r\n\t\t}\r\n\r\n\t\tif (sceneChanged && this._listenToSceneChanged)\r\n\t\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateMatrix3D()\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\tthis._pos.x = this._x;\r\n\t\tthis._pos.y = this._y;\r\n\t\tthis._pos.z = this._z;\r\n\r\n\t\tthis._rot.x = this._rotationX;\r\n\t\tthis._rot.y = this._rotationY;\r\n\t\tthis._rot.z = this._rotationZ;\r\n\r\n\t\tthis._ske.x = this._skewX;\r\n\t\tthis._ske.y = this._skewY;\r\n\t\tthis._ske.z = this._skewZ;\r\n\r\n\t\tthis._sca.x = this._scaleX;\r\n\t\tthis._sca.y = this._scaleY;\r\n\t\tthis._sca.z = this._scaleZ;\r\n\r\n\t\tthis._matrix3D.recompose(this._transformComponents);\r\n\r\n\t\tthis._matrix3DDirty = false;\r\n\t}\r\n\r\n\tpublic _pUpdatePivot()\r\n\t{\r\n\t\tif (!this._pivotZero) {\r\n\t\t\tthis._pivotScale.x = this._pivot.x/this._scaleX;\r\n\t\t\tthis._pivotScale.y = this._pivot.y/this._scaleY;\r\n\t\t\tthis._pivotScale.z = this._pivot.z/this._scaleZ;\r\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\r\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\r\n\t\t}\r\n\r\n\t\tthis._pivotDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.updateController();\r\n\r\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\r\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\r\n\t\t} else {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\r\n\t\t}\r\n\r\n\t\tthis._positionDirty = false;\r\n\t\tthis._rotationDirty = false;\r\n\t\tthis._skewDirty = false;\r\n\t\tthis._scaleDirty = false;\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.SCENE_TRANSFORM;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._pRenderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\r\n\r\n\t\tthis._pRenderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic _iInternalUpdate()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.update();\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsVisible():boolean\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.VISIBLE)\r\n\t\t\tthis._updateVisible();\r\n\r\n\t\treturn this._pImplicitVisibility;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iAssignedMaskId():number\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASK_ID)\r\n\t\t\tthis._updateMaskId();\r\n\r\n\t\treturn this._pImplicitMaskId;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iAssignedMasks():Array<Array<DisplayObject>>\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\r\n\t\t\tthis._updateMasks();\r\n\r\n\t\treturn this._pImplicitMasks;\r\n\t}\r\n\r\n\tpublic _iMasksConfig():Array<Array<number>>\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\r\n\t\t\tthis._updateMasks();\r\n\r\n\t\treturn this._pImplicitMaskIds;\r\n\t}\r\n\r\n\tpublic _iAssignedColorTransform():ColorTransform\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.COLOR_TRANSFORM)\r\n\t\t\tthis._updateColorTransform();\r\n\r\n\t\treturn this._pImplicitColorTransform;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsMouseEnabled():boolean\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\r\n\t\t\tthis._updateMouseEnabled();\r\n\r\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate invalidateMatrix3D():void\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._matrix3DDirty = true;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].invalidatePartition();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePivot()\r\n\t{\r\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivotDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePosition()\r\n\t{\r\n\t\tif (this._positionDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionDirty = true;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\r\n\r\n\t\tif (!this._pivotZero)\r\n\t\t\tthis.invalidatePivot();\r\n\r\n\t\tif (this._listenToPositionChanged)\r\n\t\t\tthis.queueDispatch(this._positionChanged || (this._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateRotation(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._rotationDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationDirty = true;\r\n\r\n\t\tif (this._listenToRotationChanged)\r\n\t\t\tthis.queueDispatch(this._rotationChanged || (this._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateSkew(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._skewDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewDirty = true;\r\n\r\n\t\tif (this._listenToSkewChanged)\r\n\t\t\tthis.queueDispatch(this._skewChanged || (this._skewChanged = new DisplayObjectEvent(DisplayObjectEvent.SKEW_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateScale(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._scaleDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleDirty = true;\r\n\r\n\t\tif (this._listenToScaleChanged)\r\n\t\t\tthis.queueDispatch(this._scaleChanged || (this._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this)));\r\n\t}\r\n\r\n\r\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tthis._entityNodes.push(entityNode);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\r\n\r\n\t\tthis._entityNodes.splice(index, 1);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\tpublic _pInvalidateBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = true;\r\n\t\tthis._sphereBoundsInvalid = true;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._pParent)\r\n\t\t\tthis._pParent._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = false;\r\n\r\n\t\tif (this._pBoxBounds == null)\r\n\t\t\tthis._pBoxBounds = new Box();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tthis._sphereBoundsInvalid = false;\r\n\r\n\t\tif (this._pSphereBounds == null)\r\n\t\t\tthis._pSphereBounds = new Sphere();\r\n\t}\r\n\r\n\tprivate queueDispatch(event:Event)\r\n\t{\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\tprivate updateElements()\r\n\t{\r\n\t\tthis._elementsDirty = false;\r\n\r\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\r\n\t\tvar vec:Vector3D;\r\n\r\n\t\tvec = elements[1];\r\n\r\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\r\n\t\t\tthis._rotationX = vec.x;\r\n\t\t\tthis._rotationY = vec.y;\r\n\t\t\tthis._rotationZ = vec.z;\r\n\r\n\t\t\tthis.invalidateRotation(false);\r\n\t\t}\r\n\r\n\t\tvec = elements[2];\r\n\r\n\t\tif (this._skewX != vec.x || this._skewY != vec.y || this._skewZ != vec.z) {\r\n\t\t\tthis._skewX = vec.x;\r\n\t\t\tthis._skewY = vec.y;\r\n\t\t\tthis._skewZ = vec.z;\r\n\r\n\t\t\tthis.invalidateSkew(false);\r\n\t\t}\r\n\r\n\t\tvec = elements[3];\r\n\r\n\t\tthis._width = null;\r\n\t\tthis._height = null;\r\n\t\tthis._depth = null;\r\n\r\n\t\tif (this._scaleX != vec.x || this._scaleY != vec.y || this._scaleZ != vec.z) {\r\n\t\t\tthis._scaleX = vec.x;\r\n\t\t\tthis._scaleY = vec.y;\r\n\t\t\tthis._scaleZ = vec.z;\r\n\r\n\t\t\tthis.invalidateScale(false);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _setScaleX(val:number)\r\n\t{\r\n\t\tif (this.scaleX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleX = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\tprivate _setScaleY(val:number)\r\n\t{\r\n\t\tif (this.scaleY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleY = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\tprivate _setScaleZ(val:number)\r\n\t{\r\n\t\tif (this.scaleZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleZ = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\tpublic _updateMouseEnabled()\r\n\t{\r\n\t\tthis._pImplicitMouseEnabled = (this._pParent)? this._pParent.mouseChildren && this._pParent._pImplicitMouseEnabled : true;\r\n\r\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\r\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\r\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MOUSE_ENABLED;\r\n\t}\r\n\r\n\tprivate _updateVisible()\r\n\t{\r\n\t\tthis._pImplicitVisibility = (this._pParent)? this._explicitVisibility && this._pParent._iIsVisible() : this._explicitVisibility;\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.VISIBLE;\r\n\t}\r\n\r\n\tprivate _updateMaskId()\r\n\t{\r\n\t\tthis._pImplicitMaskId = (this._pParent && this._pParent._iAssignedMaskId() != -1)? this._pParent._iAssignedMaskId() : this._explicitMaskId;\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASK_ID;\r\n\t}\r\n\r\n\tprivate _updateMasks()\r\n\t{\r\n\t\tthis._pImplicitMasks = (this._pParent && this._pParent._iAssignedMasks())? (this._explicitMasks != null)? this._pParent._iAssignedMasks().concat([this._explicitMasks]) : this._pParent._iAssignedMasks().concat() : (this._explicitMasks != null)? [this._explicitMasks] : null;\r\n\r\n\t\tthis._pImplicitMaskIds.length = 0;\r\n\r\n\t\tif (this._pImplicitMasks && this._pImplicitMasks.length) {\r\n\t\t\tvar numLayers:number = this._pImplicitMasks.length;\r\n\t\t\tvar numChildren:number;\r\n\t\t\tvar implicitChildren:Array<DisplayObject>;\r\n\t\t\tvar implicitChildIds:Array<number>;\r\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\r\n\t\t\t\timplicitChildren = this._pImplicitMasks[i];\r\n\t\t\t\tnumChildren = implicitChildren.length;\r\n\t\t\t\timplicitChildIds = new Array<number>();\r\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++)\r\n\t\t\t\t\timplicitChildIds.push(implicitChildren[j].id);\r\n\r\n\t\t\t\tthis._pImplicitMaskIds.push(implicitChildIds);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASKS;\r\n\t}\r\n\r\n\tprivate _updateColorTransform()\r\n\t{\r\n\t\tif (this._inheritColorTransform && this._pParent) {\r\n\t\t\tthis._pImplicitColorTransform.copyFrom(this._pParent._iAssignedColorTransform());\r\n\t\t\tif (this._explicitColorTransform)\r\n\t\t\t\tthis._pImplicitColorTransform.prepend(this._explicitColorTransform);\r\n\t\t} else {\r\n\t\t\tif (this._explicitColorTransform)\r\n\t\t\t\tthis._pImplicitColorTransform.copyFrom(this._explicitColorTransform);\r\n\t\t\telse\r\n\t\t\t\tthis._pImplicitColorTransform.clear();\r\n\t\t}\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.COLOR_TRANSFORM;\r\n\t}\r\n\r\n\tpublic _updateMaskMode()\r\n\t{\r\n\t\tif (this.maskMode)\r\n\t\t\tthis.mouseEnabled = !this._maskMode;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASK_ID);\r\n\t}\r\n}\r\n\r\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\n\r\n/**\r\n *\r\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\r\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\r\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\r\n * the SubGeometries to its respective TriangleSubMesh objects.\r\n *\r\n *\r\n *\r\n * @see away.core.base.SubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class Geometry\r\n */\r\nclass Geometry extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Geometry]\";\r\n\r\n\tprivate _subGeometries:Array<SubGeometryBase>;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Geometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\r\n\t */\r\n\tpublic get subGeometries():Array<SubGeometryBase>\r\n\t{\r\n\t\treturn this._subGeometries;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Geometry object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tvar len:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new TriangleSubGeometry object to the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be added.\r\n\t */\r\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.push(subGeometry);\r\n\r\n\t\tsubGeometry.parentGeometry = this;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a new TriangleSubGeometry object from the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\r\n\t */\r\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\r\n\r\n\t\tsubGeometry.parentGeometry = null;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the geometry.\r\n\t * @return An exact duplicate of the current Geometry object.\r\n\t */\r\n\tpublic clone():Geometry\r\n\t{\r\n\t\tvar clone:Geometry = new Geometry();\r\n\t\tvar len:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scale(scale);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all resources used by the Geometry object, including SubGeometries.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\r\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\r\n\t\t\tthis.removeSubGeometry(subGeom);\r\n\t\t\tsubGeom.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the uv coordinates (tiling)\r\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\r\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\r\n\t */\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\r\n\t}\r\n\r\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\r\n\t{\r\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\r\n\t}\r\n}\r\n\r\nexport = Geometry;",
    "/**\r\n *\r\n */\r\nclass HierarchicalProperties\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static MOUSE_ENABLED:number = 1;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static VISIBLE:number = 2;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static MASK_ID:number = 4;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static MASKS:number = 8;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static COLOR_TRANSFORM:number = 16;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SCENE_TRANSFORM:number = 32;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ALL:number = 63;\r\n}\r\n\r\nexport = HierarchicalProperties;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nclass LightBase extends DisplayObjectContainer\r\n{\r\n\tpublic static assetType:string = \"[asset Light]\";\r\n\r\n\tprivate _color:number = 0xffffff;\r\n\tprivate _colorR:number = 1;\r\n\tprivate _colorG:number = 1;\r\n\tprivate _colorB:number = 1;\r\n\r\n\tprivate _ambientColor:number = 0xffffff;\r\n\tprivate _ambient:number = 0;\r\n\tpublic _iAmbientR:number = 0;\r\n\tpublic _iAmbientG:number = 0;\r\n\tpublic _iAmbientB:number = 0;\r\n\r\n\tprivate _specular:number = 1;\r\n\tpublic _iSpecularR:number = 1;\r\n\tpublic _iSpecularG:number = 1;\r\n\tpublic _iSpecularB:number = 1;\r\n\r\n\tprivate _diffuse:number = 1;\r\n\tpublic _iDiffuseR:number = 1;\r\n\tpublic _iDiffuseG:number = 1;\r\n\tpublic _iDiffuseB:number = 1;\r\n\r\n\tprivate _castsShadows:boolean = false;\r\n\r\n\tprivate _shadowMapper:ShadowMapperBase;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tif (this._castsShadows == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._castsShadows = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tif (this._shadowMapper == null)\r\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\r\n\r\n\t\t\tthis._shadowMapper.light = this;\r\n\t\t} else {\r\n\t\t\tthis._shadowMapper.dispose();\r\n\t\t\tthis._shadowMapper = null;\r\n\t\t}\r\n\t\t//*/\r\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():ShadowMapperBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get specular():number\r\n\t{\r\n\t\treturn this._specular;\r\n\t}\r\n\r\n\tpublic set specular(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._specular = value;\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get diffuse():number\r\n\t{\r\n\t\treturn this._diffuse;\r\n\t}\r\n\r\n\tpublic set diffuse(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._diffuse = value;\r\n\t\tthis.updateDiffuse();\r\n\t}\r\n\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tthis._color = value;\r\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\r\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\r\n\t\tthis._colorB = (this._color & 0xff)/0xff;\r\n\r\n\t\tthis.updateDiffuse();\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get ambient():number\r\n\t{\r\n\t\treturn this._ambient;\r\n\t}\r\n\r\n\tpublic set ambient(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tthis._ambient = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tpublic get ambientColor():number\r\n\t{\r\n\t\treturn this._ambientColor;\r\n\t}\r\n\r\n\tpublic set ambientColor(value:number)\r\n\t{\r\n\t\tthis._ambientColor = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tprivate updateAmbient()\r\n\t{\r\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightBase.assetType;\r\n\t}\r\n\r\n\tprivate updateSpecular()\r\n\t{\r\n\t\tthis._iSpecularR = this._colorR*this._specular;\r\n\t\tthis._iSpecularG = this._colorG*this._specular;\r\n\t\tthis._iSpecularB = this._colorB*this._specular;\r\n\t}\r\n\r\n\tprivate updateDiffuse()\r\n\t{\r\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\r\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\r\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\r\n\t}\r\n\r\n\tpublic get shadowMapper():ShadowMapperBase\r\n\t{\r\n\t\treturn this._shadowMapper;\r\n\t}\r\n\r\n\tpublic set shadowMapper(value:ShadowMapperBase)\r\n\t{\r\n\t\tthis._shadowMapper = value;\r\n\t\tthis._shadowMapper.light = this;\r\n\t}\r\n}\r\n\r\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class LineSubGeometry\r\n */\r\nclass LineSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\r\n\tprivate _positions:AttributesView;\r\n\tprivate _thickness:Float1Attributes;\r\n\tprivate _colors:Byte4Attributes;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubGeometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():AttributesView\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():Float1Attributes\r\n\t{\r\n\t\treturn this._thickness;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colors():Byte4Attributes\r\n\t{\r\n\t\tif (!this._colors)\r\n\t\t\tthis.setColors(this._colors);\r\n\r\n\t\treturn this._colors;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of vertices in the LineSubGeometry.\r\n\t */\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\t\t\r\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\r\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tif (index/6 & 1) {\r\n\t\t\t\t\tpositions[index] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\r\n\t\t\t\t\tpositions[index + 3] = values[i];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpositions[index] = values[i];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\r\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex += 6;\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tvar o:number = index/6 - 4;\r\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti += 6;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._positions.set(positions, offset*4);\r\n\r\n\t\t\tthis.setIndices(indices, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the thickness.\r\n\t */\r\n\tpublic setThickness(array:Array<number>, offset?:number);\r\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\r\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\r\n\tpublic setThickness(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Float1Attributes) {\r\n\t\t\tthis._thickness = <Float1Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._thickness)\r\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\tthis._thickness.set(thickness, offset*4);\r\n\t\t} else if (this._thickness) {\r\n\t\t\tthis._thickness.dispose();\r\n\t\t\tthis._thickness = null;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._thickness);\r\n\r\n\t\tthis._verticesDirty[this._thickness.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setColors(array:Array<number>, offset?:number);\r\n\tpublic setColors(float32Array:Float32Array, offset?:number);\r\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\r\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\r\n\tpublic setColors(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values) {\r\n\t\t\tif (values == this._colors)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Byte4Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\r\n\t\t\t\tthis._colors = <Byte4Attributes> values;\r\n\t\t\t} else {\r\n\t\t\t\tif (!this._colors)\r\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\r\n\r\n\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar j:number = 0;\r\n\t\t\t\tvar index:number = 0;\r\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tif (index/4 & 1) {\r\n\t\t\t\t\t\tcolors[index] = values[i + 4];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcolors[index] = values[i];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\t\tj = 0;\r\n\t\t\t\t\t\ti += 8;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 4;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._colors.set(values, offset*4);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//auto-derive colors\r\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._colors);\r\n\r\n\t\tthis._verticesDirty[this._colors.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions = null;\r\n\t\tthis._thickness = null;\r\n\t\tthis._colors = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():LineSubGeometry\r\n\t{\r\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\tclone.setIndices(this._pIndices.clone());\r\n\r\n\t\tclone.setPositions(this._positions.clone());\r\n\t\tclone.setThickness(this._thickness.clone());\r\n\t\tclone.setColors(this._colors.clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.LineSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.LineSubMesh\r\n */\r\nclass LineSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\r\n\r\n\tprivate _subGeometry:LineSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t */\r\n\tpublic get subGeometry():LineSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new LineSubMesh object\r\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\r\n\t * @param material An optional material used to render this LineSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The LoaderInfo class provides information about a loaded SWF file or a\r\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\r\n * any display object. The information provided includes load progress, the\r\n * URLs of the loader and loaded content, the number of bytes total for the\r\n * media, and the nominal height and width of the media.\r\n *\r\n * <p>You can access LoaderInfo objects in two ways: </p>\r\n *\r\n * <ul>\r\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\r\n * object -  The <code>contentLoaderInfo</code> property is always available\r\n * for any Loader object. For a Loader object that has not called the\r\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\r\n * sufficiently loaded, attempting to access many of the properties of the\r\n * <code>contentLoaderInfo</code> property throws an error.</li>\r\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\r\n * </ul>\r\n *\r\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\r\n * information about the content that the Loader object is loading, whereas\r\n * the <code>loaderInfo</code> property of a DisplayObject provides\r\n * information about the root SWF file for that display object. </p>\r\n *\r\n * <p>When you use a Loader object to load a display object(such as a SWF\r\n * file or a bitmap), the <code>loaderInfo</code> property of the display\r\n * object is the same as the <code>contentLoaderInfo</code> property of the\r\n * Loader object(<code>DisplayObject.loaderInfo =\r\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\r\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\r\n * the only way to access the LoaderInfo for the instance of the main class of\r\n * the SWF file.</p>\r\n *\r\n * <p>The following diagram shows the different uses of the LoaderInfo\r\n * object - for the instance of the main class of the SWF file, for the\r\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\r\n * <code>loaderInfo</code> property of a loaded object:</p>\r\n *\r\n * <p>When a loading operation is not complete, some properties of the\r\n * <code>contentLoaderInfo</code> property of a Loader object are not\r\n * available. You can obtain some properties, such as\r\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\r\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\r\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\r\n * can access all properties of the <code>loaderInfo</code> object and the\r\n * loaded image or SWF file.</p>\r\n *\r\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\r\n *\r\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\r\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\r\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\r\n * \r\n * @event complete   Dispatched when data has loaded successfully. In other\r\n *                   words, it is dispatched when all the content has been\r\n *                   downloaded and the loading has finished. The\r\n *                   <code>complete</code> event is always dispatched after\r\n *                   the <code>init</code> event. The <code>init</code> event\r\n *                   is dispatched when the object is ready to access, though\r\n *                   the content may still be downloading.\r\n * @event httpStatus Dispatched when a network request is made over HTTP and\r\n *                   an HTTP status code can be detected.\r\n * @event init       Dispatched when the properties and methods of a loaded\r\n *                   SWF file are accessible and ready for use. The content,\r\n *                   however, can still be downloading. A LoaderInfo object\r\n *                   dispatches the <code>init</code> event when the following\r\n *                   conditions exist:\r\n *                   <ul>\r\n *                     <li>All properties and methods associated with the\r\n *                   loaded object and those associated with the LoaderInfo\r\n *                   object are accessible.</li>\r\n *                     <li>The constructors for all child objects have\r\n *                   completed.</li>\r\n *                     <li>All ActionScript code in the first frame of the\r\n *                   loaded SWF's main timeline has been executed.</li>\r\n *                   </ul>\r\n *\r\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\r\n *                   when the first frame of a movie or animation is loaded.\r\n *                   The movie is then accessible and can be added to the\r\n *                   display list. The complete movie, however, can take\r\n *                   longer to download. The <code>Event.COMPLETE</code> is\r\n *                   only dispatched once the full movie is loaded.</p>\r\n *\r\n *                   <p>The <code>init</code> event always precedes the\r\n *                   <code>complete</code> event.</p>\r\n * @event ioError    Dispatched when an input or output error occurs that\r\n *                   causes a load operation to fail.\r\n * @event open       Dispatched when a load operation starts.\r\n * @event progress   Dispatched when data is received as the download\r\n *                   operation progresses.\r\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\r\n *                   object is removed by using the <code>unload()</code>\r\n *                   method of the Loader object, or when a second load is\r\n *                   performed by the same Loader object and the original\r\n *                   content is removed prior to the load beginning.\r\n */\r\nclass LoaderInfo extends EventDispatcher\r\n{\r\n\tprivate _bytes:ByteArray;\r\n\tprivate _bytesLoaded:number;\r\n\tprivate _bytesTotal:number;\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentType:string;\r\n\tprivate _loader:Loader;\r\n\tprivate _url:string;\r\n\t/**\r\n\t * The bytes associated with a LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get bytes():ByteArray\r\n\t{\r\n\t\treturn this._bytes;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of bytes that are loaded for the media. When this number equals\r\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\r\n\t */\r\n\tpublic get bytesLoaded():number /*int*/\r\n\t{\r\n\t\treturn this._bytesLoaded;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of compressed bytes in the entire media file.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\r\n\t * is 0. After the first <code>progress</code> event from the Loader object,\r\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\r\n\t * downloaded.</p>\r\n\t */\r\n\tpublic get bytesTotal():number /*int*/\r\n\t{\r\n\t\treturn this._bytesTotal;\r\n\t}\r\n\r\n\t/**\r\n\t * The loaded object associated with this LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\r\n\t * enough of the file has loaded in order to determine the type. The\r\n\t * following list gives the possible values:\r\n\t * <ul>\r\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\r\n\t *   <li><code>\"image/jpeg\"</code></li>\r\n\t *   <li><code>\"image/gif\"</code></li>\r\n\t *   <li><code>\"image/png\"</code></li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get contentType():string\r\n\t{\r\n\t\treturn this._contentType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Loader object associated with this LoaderInfo object. If this\r\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\r\n\t * of the main class of the SWF file, no Loader object is associated.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the Loader object because of security\r\n\t *                       restrictions. This can occur, for instance, when a\r\n\t *                       loaded SWF file attempts to access its\r\n\t *                       <code>loaderInfo.loader</code> property and it is\r\n\t *                       not granted security permission to access the\r\n\t *                       loading SWF file.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get loader():Loader\r\n\t{\r\n\t\treturn this._loader;\r\n\t}\r\n\r\n\t/**\r\n\t * The URL of the media being loaded.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, the value of the\r\n\t * <code>url</code> property might reflect only the initial URL specified in\r\n\t * the call to the <code>load()</code> method of the Loader object. After the\r\n\t * first <code>progress</code> event, the <code>url</code> property reflects\r\n\t * the media's final URL, after any redirects and relative URLs are\r\n\t * resolved.</p>\r\n\t *\r\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\r\n\t * see the <code>isURLInaccessible</code> property for details.</p>\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n}\r\n\r\nexport = LoaderInfo;",
    "class OrientationMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static DEFAULT:string = \"default\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\r\n}\r\n\r\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass SubGeometryBase extends AssetBase\r\n{\r\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\r\n\t\r\n\tpublic _pIndices:Short3Attributes;\r\n\r\n\tprivate _numElements:number = 0;\r\n\r\n\tpublic _concatenatedBuffer:AttributesBuffer;\r\n\r\n\tprivate _indicesUpdated:SubGeometryEvent;\r\n\r\n\tpublic _verticesDirty:Object = new Object();\r\n\tpublic _verticesUpdated:Object = new Object();\r\n\r\n\tpublic get concatenatedBuffer():AttributesBuffer\r\n\t{\r\n\t\treturn this._concatenatedBuffer;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw index data that define the faces.\r\n\t */\r\n\tpublic get indices():Short3Attributes\r\n\t{\r\n\t\treturn this._pIndices;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of triangles in the TriangleSubGeometry.\r\n\t */\r\n\tpublic get numElements():number\r\n\t{\r\n\t\treturn this._numElements;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidate():void\r\n\t{\r\n\t\tvar len:number = this._subGeometryVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._subGeometryVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._subGeometryVO.length)\r\n\t\t\tthis._subGeometryVO[0].dispose();\r\n\r\n\t\tthis._pIndices.dispose();\r\n\t\tthis._pIndices = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Short3Attributes) {\r\n\t\t\tif (this._pIndices)\r\n\t\t\t\tthis.notifyIndicesDispose();\r\n\r\n\t\t\tthis._pIndices = <Short3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._pIndices)\r\n\t\t\t\tthis._pIndices = new Short3Attributes();\r\n\r\n\t\t\tthis._pIndices.set(values, offset);\r\n\t\t} else if (this._pIndices) {\r\n\t\t\tthis._pIndices.dispose();\r\n\t\t\tthis._pIndices = null;\r\n\r\n\t\t\tthis.notifyIndicesDispose();\r\n\t\t}\r\n\r\n\t\tif (this._pIndices) {\r\n\t\t\tthis._numElements = this._pIndices.count;\r\n\r\n\t\t\tthis.notifyIndicesUpdate();\r\n\t\t} else {\r\n\t\t\tthis._numElements = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateBounds()\r\n\t{\r\n\t\tif (this.parentGeometry)\r\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic parentGeometry:Geometry;\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():SubGeometryBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number, box:Box):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tprivate notifyIndicesUpdate()\r\n\t{\r\n\t\tif (!this._indicesUpdated)\r\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\r\n\r\n\t\tthis.dispatchEvent(this._indicesUpdated);\r\n\t}\r\n\r\n\tprivate notifyIndicesDispose()\r\n\t{\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\r\n\t}\r\n\r\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\r\n\t\t\treturn;\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = true;\r\n\r\n\t\tif (!this._verticesUpdated[attributesView.id])\r\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\r\n\r\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\r\n\t}\r\n\r\n\r\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView)\r\n\t\t\treturn;\r\n\r\n\t\tattributesView.dispose();\r\n\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = null;\r\n\t\tthis._verticesUpdated[attributesView.id] = null;\r\n\t}\r\n\r\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.push(subGeometryVO);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass SubMeshBase extends AssetBase\r\n{\r\n\tpublic _pParentMesh:Mesh;\r\n\tpublic _uvTransform:UVTransform;\r\n\r\n\tpublic _iIndex:number = 0;\r\n\r\n\tpublic _material:MaterialBase;\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._pParentMesh.animator;\r\n\t}\r\n\r\n\t/**\r\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material || this._pParentMesh.material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The scene transform object that transforms from model to world space.\r\n\t */\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\r\n\t */\r\n\tpublic get parentMesh():Mesh\r\n\t{\r\n\t\treturn this._pParentMesh;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new SubMeshBase object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param camera\r\n\t * @returns {away.geom.Matrix3D}\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometry()\r\n\t{\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _iGetExplicitMaterial():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n}\r\n\r\nexport = SubMeshBase;",
    "import HierarchicalProperties\t\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport MovieClip\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport DisplayObject                    = require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\r\n\r\n\r\nclass Timeline\r\n{\r\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\r\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\r\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\r\n\r\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\r\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\r\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\r\n\r\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\r\n\r\n\t// synched:\r\n\tpublic frame_command_indices:ArrayBufferView;\r\n\tpublic frame_recipe:ArrayBufferView;\r\n\r\n\t// synched:\r\n\tpublic command_index_stream:ArrayBufferView;\r\n\tpublic command_length_stream:ArrayBufferView;\r\n\r\n\tpublic add_child_stream:ArrayBufferView;\r\n\tpublic remove_child_stream:ArrayBufferView;\r\n\tpublic update_child_stream:ArrayBufferView;\r\n\r\n\tpublic update_child_props_length_stream:ArrayBufferView;\r\n\tpublic update_child_props_indices_stream:ArrayBufferView;\r\n\r\n\tpublic property_index_stream:ArrayBufferView;\r\n\tpublic property_type_stream:ArrayBufferView;\r\n\r\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\r\n\r\n\t// propertiy_values_stream:\r\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_strings:Array<string>;\r\n\r\n\tprivate _potentialPrototypes:Array<DisplayObject>;\r\n\r\n\tpublic numKeyFrames:number=0;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis.keyframe_indices=[];\r\n\r\n\t\tthis._potentialPrototypes=[];\r\n\t\tthis._labels={};\r\n\t\tthis._framescripts={};\r\n\t\tthis._framescripts_translated={};\r\n\t}\r\n\r\n\tpublic init():void\r\n\t{\r\n\t\tif((this.frame_command_indices == null)||(this.frame_recipe == null)||(this.keyframe_durations == null))\r\n\t\t\treturn;\r\n\r\n\t\tthis.keyframe_firstframes = [];\r\n\t\tthis.keyframe_constructframes = [];\r\n\t\tvar frame_cnt = 0;\r\n\t\tvar ic = 0;\r\n\t\tvar ic2 = 0;\r\n\t\tvar keyframe_cnt = 0;\r\n\t\tvar last_construct_frame = 0;\r\n\t\tfor(ic = 0; ic < this.numKeyFrames; ic++){\r\n\t\t\tvar duration=this.keyframe_durations[(ic)];\r\n\r\n\t\t\tif(this.frame_recipe[ic] & 1)\r\n\t\t\t\tlast_construct_frame = keyframe_cnt;\r\n\r\n\t\t\tthis.keyframe_firstframes[keyframe_cnt] = frame_cnt;\r\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++] = last_construct_frame;\r\n\r\n\t\t\tfor(ic2 = 0; ic2 < duration; ic2++)\r\n\t\t\t\tthis.keyframe_indices[frame_cnt++] = ic;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get_framescript(keyframe_index:number):string\r\n\t{\r\n\t\tif(this._framescripts[keyframe_index]==null)\r\n\t\t\treturn \"\";\r\n\r\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\r\n\t\t\treturn this._framescripts[keyframe_index];\r\n\t\telse{\r\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\r\n\t\t}\r\n\r\n\t\treturn \"\";\r\n\t}\r\n\tpublic add_framescript(value:string, keyframe_index:number)\r\n\t{\r\n\t\tthis._framescripts[keyframe_index] = value;\r\n\t}\r\n\r\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\r\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\r\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\r\n\t}\r\n\r\n\r\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number, scriptPass1:Boolean=false) : void\r\n\t{\r\n\t\tif(this._framescripts[keyframe_idx]!=null){\r\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\r\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\r\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\r\n\t\t\t}\r\n\t\t\tif(scriptPass1)\r\n\t\t\t\tFrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\r\n\t\t\telse\r\n\t\t\t\tFrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get numFrames():number\r\n\t{\r\n\t\treturn this.keyframe_indices.length;\r\n\t}\r\n\r\n\r\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\r\n\t{\r\n\t\treturn this._potentialPrototypes[id];\r\n\r\n\t}\r\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\r\n\t{\r\n\t\treturn this.keyframe_indices[frame_index];\r\n\t}\r\n\r\n\tpublic getPotentialChilds():Array<DisplayObject>\r\n\t{\r\n\t\treturn this._potentialPrototypes;\r\n\t}\r\n\r\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\r\n\t{\r\n\t\tvar this_clone:DisplayObject=this._potentialPrototypes[id].clone();\r\n\t\tthis_clone.name=\"\";\r\n\t\treturn this_clone;\r\n\t}\r\n\r\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\r\n\t{\r\n\t\tvar id = this._potentialPrototypes.length;\r\n\t\tthis._potentialPrototypes[id] = prototype;\r\n\t}\r\n\r\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\r\n\t{\r\n\t\tvar key_frame_index:number = this._labels[label];\r\n\t\tif(key_frame_index>=0)\r\n\t\t\ttarget_mc.currentFrameIndex=this.keyframe_firstframes[key_frame_index];\r\n\t}\r\n\r\n\r\n\tpublic gotoFrame(target_mc:MovieClip, value:number, skip_script:boolean = false)\r\n\t{\r\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\r\n\r\n\t\tif (frameIndex == value) //we are already on exactly this frame.\r\n\t\t\treturn;\r\n\r\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\r\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\r\n\r\n\t\tvar firstframe:number = this.keyframe_firstframes[target_keyframe_idx];\r\n\r\n\t\tif (current_keyframe_idx + 1 == target_keyframe_idx) { // target_keyframe_idx is the next keyframe. we can just use constructnext for this\r\n\t\t\ttarget_mc.set_currentFrameIndex(value);\r\n\t\t\tthis.constructNextFrame(target_mc, !skip_script, true);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\r\n\t\tif (current_keyframe_idx == target_keyframe_idx) // already constructed - exit\r\n\t\t\treturn;\r\n\r\n\t\tvar break_frame_idx:number = this.keyframe_constructframes[target_keyframe_idx];\r\n\r\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\r\n\r\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\r\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\r\n\r\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\r\n\t\tvar start_construct_idx:number = break_frame_idx;\r\n\r\n\t\tif (jump_forward && !jump_gap) // in case we jump forward, but not jump a gap, we start at current_keyframe_idx +1\r\n\t\t\tstart_construct_idx = current_keyframe_idx + 1;\r\n\r\n\t\tvar child_depths = {};//target_mc.getChildDepths();\r\n\t\tvar sessionID_depths:Object = {};\r\n\t\tvar i:number;\r\n\t\tvar end_index:number;\r\n\t\tvar k:number;\r\n\t\tvar child:DisplayObject;\r\n\t\tvar depth:number;\r\n\r\n\t\tif (jump_forward && start_construct_idx == target_keyframe_idx){\r\n\t\t\t// if we jump back, we dont want this shortcut, because we need to compare targetframe vs currentframe\r\n\r\n\t\t\t// shortcut: if the targetframe is the breakframe itself, we can just call constructNextFrame\r\n\t\t\t// before we do that, we need to clear the childlist\r\n/*\r\n\t\t\twhile(i--){\r\n\t\t\t\tchild = target_mc._children[i];\r\n\t\t\t\tif(child.adapter)child.adapter.freeFromScript();\r\n\t\t\t\ttarget_mc.adapter.unregisterScriptObject(child);\r\n\t\t\t\ttarget_mc.removeChild(child);\r\n\t\t\t}\r\n\t\t\ttarget_mc.set_currentFrameIndex(value);\r\n\t\t\tthis.constructNextFrame(target_mc, false);\r\n\t\t\treturn;\r\n\t\t\t*/\r\n\t\t}\r\n\r\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\r\n\t\t\tchild = target_mc._children[i];\r\n\t\t\tif (jump_gap) { // if we jump a gap forward, we just can remove all childs from mc. all script blockage will be gone\r\n\t\t\t\ttarget_mc.removeChild(child);\r\n\t\t\t} else if (jump_forward) { // in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\r\n\t\t\t\tsessionID_depths[child._depthID] = child._sessionID;\r\n\t\t\t\tchild_depths[child._depthID]=child;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//  step1: only apply add/remove commands into current_childs_dic.\r\n\t\tvar update_indices:Array<number> = [];// store a list of updatecommand_indices, so we dont have to read frame_recipe again\r\n\t\tvar update_cnt = 0;\r\n\t\tvar targetFrame_first_sessionID:number=0;\r\n\t\tfor (k = start_construct_idx; k <= target_keyframe_idx; k++) {\r\n\t\t\tvar frame_command_idx:number = this.frame_command_indices[k];\r\n\t\t\tvar frame_recipe:number = this.frame_recipe[k];\r\n\t\t\tvar start_index:number;\r\n\t\t\tvar idx:number;\r\n\r\n\t\t\tif (frame_recipe & 2) {\r\n\t\t\t\t// remove childs\r\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\r\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\r\n\t\t\t\tfor (i = start_index; i < end_index; i++) {\r\n\t\t\t\t\tdepth = this.remove_child_stream[i] - 16383;\r\n\t\t\t\t\tdelete child_depths[depth];\r\n\t\t\t\t\tdelete sessionID_depths[depth];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (frame_recipe & 4) {\r\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\r\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\r\n\t\t\t\t// apply add commands in reversed order to have script exeucted in correct order.\r\n\t\t\t\t// this could be changed in exporter\r\n\t\t\t\tfor (i = end_index - 1; i >= start_index; i--) {\r\n\t\t\t\t\tidx = i*2;\r\n\t\t\t\t\tvar target:DisplayObject = target_mc.getPotentialChildInstance(this.add_child_stream[idx]);\r\n\r\n\t\t\t\t\tdepth = this.add_child_stream[idx + 1] - 16383;\r\n\t\t\t\t\tchild_depths[depth] = target;\r\n\t\t\t\t\tsessionID_depths[depth] = i;\r\n\t\t\t\t}\r\n\t\t\t\tif(k==target_keyframe_idx){\r\n\t\t\t\t\ttargetFrame_first_sessionID=start_index;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (frame_recipe & 8)\r\n\t\t\t\tupdate_indices[update_cnt++] = frame_command_idx;// execute update command later\r\n\t\t}\r\n\r\n\t\t//  step2: construct the final frame\r\n\r\n\t\t// check what childs are alive on both frames.\r\n\t\t// childs that are not alive anymore get removed and unregistered\r\n\t\t// childs that are alive on both frames get removed from the target_childs_dic\r\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\r\n\t\t\tchild = target_mc._children[i];\r\n\t\t\tdepth = child._depthID;\r\n\t\t\tif (sessionID_depths[depth] == child._sessionID) {\r\n\t\t\t\tdelete sessionID_depths[depth];\r\n\t\t\t\tdelete child_depths[depth];\r\n\t\t\t}\r\n\r\n\t\t\telse\r\n\t\t\t\ttarget_mc.removeChildAt(i);\r\n\t\t}\r\n\r\n\t\t// the objects that are now child of target_mc, are alive on both frames\r\n\t\t// if we jump back, or we jump a gap forward, we want to reset all objects (but not the timelines of the mcs)\r\n\t\tif((!jump_forward)||(jump_gap)){\r\n\t\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\r\n\t\t\t\tchild = target_mc._children[i];\r\n\t\t\t\tif(child.adapter) {\r\n\t\t\t\t\tif (!child.adapter.isBlockedByScript()) {\r\n\t\t\t\t\t\tif (child._iMatrix3D) {\r\n\t\t\t\t\t\t\tchild._iMatrix3D.identity();\r\n\t\t\t\t\t\t\tchild.x = child._iMatrix3D.rawData[12];\r\n\t\t\t\t\t\t\tchild.y = child._iMatrix3D.rawData[13];\r\n\t\t\t\t\t\t\tchild._elementsDirty = true;\r\n\t\t\t\t\t\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (child._iColorTransform) {\r\n\t\t\t\t\t\t\tchild._iColorTransform.clear();\r\n\t\t\t\t\t\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//this.name=\"\";\r\n\t\t\t\t\t\tchild.masks = null;\r\n\t\t\t\t\t\tchild.maskMode = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!child.adapter.isVisibilityByScript()) {\r\n\t\t\t\t\t\tchild.visible = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// we need to addchild the objects that was added befor targetframe first\r\n\t\t// than we can add the script of the targetframe\r\n\t\t// than we can addchild objects added on targetframe\r\n\r\n\t\tvar id:number;\r\n\t\tfor (var key in sessionID_depths) {\r\n\t\t\tchild = child_depths[key];\r\n\t\t\tchild._sessionID = sessionID_depths[key];\r\n\t\t\ttarget_mc.addChildAtDepth(child, Number(key));\r\n\t\t}\r\n\r\n\t\tif (!skip_script && firstframe == value) //frame changed. and firstframe of keyframe. execute framescript if available\r\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\r\n\r\n\t\t//  pass2: apply update commands for objects on stage (only if they are not blocked by script)\r\n\t\tvar frame_command_idx:number;\r\n\t\tvar len:number = update_indices.length;\r\n\t\tfor (k = 0; k < len; k++) {\r\n\t\t\tframe_command_idx = update_indices[k];\r\n\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx]);\r\n\t\t}\r\n\r\n\t\ttarget_mc.constructedKeyFrameIndex = target_keyframe_idx;\r\n\t}\r\n\r\n\r\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean=true, scriptPass1:Boolean = false)\r\n\t{\r\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\r\n\t\tvar constructed_keyFrameIndex:number = target_mc.constructedKeyFrameIndex;\r\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\r\n\r\n\t\tif(queueScript && this.keyframe_firstframes[new_keyFrameIndex] == frameIndex)\r\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\r\n\r\n\t\tif(constructed_keyFrameIndex != new_keyFrameIndex) {\r\n\t\t\ttarget_mc.constructedKeyFrameIndex = new_keyFrameIndex;\r\n\r\n\t\t\tvar frame_command_idx = this.frame_command_indices[new_keyFrameIndex];\r\n\t\t\tvar frame_recipe = this.frame_recipe[new_keyFrameIndex];\r\n\r\n\t\t\tif(frame_recipe & 1) {\r\n\t\t\t\tfor (var i:number = target_mc.numChildren - 1; i >= 0; i--)\r\n\t\t\t\t\ttarget_mc.removeChildAt(i);\r\n\t\t\t} else if (frame_recipe & 2) {\r\n\t\t\t\tthis.remove_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\r\n\t\t\t}\r\n\r\n\t\t\tif(frame_recipe & 4)\r\n\t\t\t\tthis.add_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\r\n\r\n\t\t\tif(frame_recipe & 8)\r\n\t\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++]);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\r\n\t{\r\n\t\tfor(var i:number = 0; i < len; i++)\r\n\t\t\tsourceMovieClip.removeChildAtDepth(this.remove_child_stream[start_index + i] - 16383);\r\n\t}\r\n\r\n\r\n\t// used to add childs when jumping between frames\r\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\r\n\t{\r\n\t\t// apply add commands in reversed order to have script exeucted in correct order.\r\n\t\t// this could be changed in exporter\r\n\t\tvar idx:number;\r\n\t\tvar end_index:number = start_index + len;\r\n\t\tfor (var i:number = end_index - 1; i >= start_index; i--) {\r\n\t\t\tidx = i*2;\r\n\t\t\tvar target:DisplayObject = sourceMovieClip.getPotentialChildInstance(this.add_child_stream[idx]);\r\n\t\t\ttarget._sessionID = i;\r\n\t\t\tsourceMovieClip.addChildAtDepth(target, this.add_child_stream[idx + 1] - 16383);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update_childs(sourceMovieClip:MovieClip, start_index:number, len:number)\r\n\t{\r\n\t\tvar props_start_idx:number;\r\n\t\tvar props_len:number;\r\n\t\tvar props_end_index:number;\r\n\t\tvar value_start_index:number;\r\n\t\tvar props_type:number;\r\n\t\tvar doit:boolean;\r\n\t\tvar end_index:number = start_index + len;\r\n\t\tfor(var i:number = start_index; i < end_index; i++) {\r\n\t\t\tvar target:DisplayObject = sourceMovieClip.getChildAtSessionID(this.update_child_stream[i]);\r\n\t\t\tif (target != null) {\r\n\t\t\t\tdoit = true;\r\n\t\t\t\t// check if the child is active + not blocked by script\r\n\t\t\t\tif (target.adapter && target.adapter.isBlockedByScript())\r\n\t\t\t\t\tdoit = false;\r\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[i];\r\n\t\t\t\tprops_len = this.update_child_props_length_stream[i];\r\n\t\t\t\tprops_end_index = props_start_idx + props_len;\r\n\t\t\t\tfor(var p:number = props_start_idx; p < props_end_index; p++) {\r\n\t\t\t\t\tprops_type = this.property_type_stream[p];\r\n\t\t\t\t\tvalue_start_index = this.property_index_stream[p];\r\n\t\t\t\t\tswitch(props_type){\r\n\t\t\t\t\t\tcase 0:\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 1:// displaytransform\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 6;\r\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D;\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[value_start_index];\r\n\r\n\t\t\t\t\t\t\t\ttarget.x = new_matrix.rawData[12];\r\n\t\t\t\t\t\t\t\ttarget.y = new_matrix.rawData[13];\r\n\r\n\t\t\t\t\t\t\t\ttarget._elementsDirty = true;\r\n\r\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 2:// colormatrix\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 8;\r\n\t\t\t\t\t\t\t\tvar new_ct:ColorTransform = target._iColorTransform || (target._iColorTransform = new ColorTransform());\r\n\t\t\t\t\t\t\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.redOffset = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[value_start_index];\r\n\r\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 3: //mask the mc with a list of objects\r\n\r\n\t\t\t\t\t\t\t// an object could have multiple groups of masks, in case a graphic clip was merged into the timeline\r\n\t\t\t\t\t\t\t// this is not implmeented in the runtime yet\r\n\t\t\t\t\t\t\t// for now, a second mask-groupd would overwrite the first one\r\n\t\t\t\t\t\t\tvar mask:DisplayObject;\r\n\t\t\t\t\t\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\r\n\t\t\t\t\t\t\tvar numMasks:number = this.properties_stream_int[value_start_index++];\r\n\r\n\t\t\t\t\t\t\t//mask may not exist if a goto command moves the playhead to a point in the timeline after\r\n\t\t\t\t\t\t\t//one of the masks in a mask array has already been removed. Therefore a check is needed.\r\n\t\t\t\t\t\t\tfor(var m:number = 0; m < numMasks; m++)\r\n\t\t\t\t\t\t\t\tif((mask = sourceMovieClip.getChildAtSessionID(this.properties_stream_int[value_start_index++])))\r\n\t\t\t\t\t\t\t\t\tmasks.push(mask);\r\n\r\n\t\t\t\t\t\t\ttarget.masks = masks;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 4:// instance name movieclip instance\r\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\r\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 5:// instance name button instance\r\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\r\n\t\t\t\t\t\t\t// todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\r\n\t\t\t\t\t\t\t(<MovieClip>target).addButtonListeners();\r\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 6://visible\r\n\t\t\t\t\t\t\tif (!target.adapter || !target.adapter.isVisibilityByScript())\r\n\t\t\t\t\t\t\t\ttarget.visible = Boolean(value_start_index);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 11:// displaytransform\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 4;\r\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D;\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[value_start_index];\r\n\t\t\t\t\t\t\t\ttarget._elementsDirty = true;\r\n\r\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 12:// displaytransform\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 2;\r\n\t\t\t\t\t\t\t\ttarget.x = this.properties_stream_f32_mtx_pos[value_start_index++];\r\n\t\t\t\t\t\t\t\ttarget.y = this.properties_stream_f32_mtx_pos[value_start_index];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 200:\r\n\t\t\t\t\t\t\ttarget.maskMode = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 201:\r\n\t\t\t\t\t\t\ttarget.masks = null;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = Timeline;",
    "/**\r\n *\r\n */\r\nclass TouchPoint\r\n{\r\n\tx:number;\r\n\r\n\ty:number;\r\n\r\n\tid:number;\r\n\r\n\tconstructor(x:number, y:number, id:number)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.id = id;\r\n\t}\r\n}\r\n\r\nexport = TouchPoint;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The Transform class provides access to color adjustment properties and two-\r\n * or three-dimensional transformation objects that can be applied to a\r\n * display object. During the transformation, the color or the orientation and\r\n * position of a display object is adjusted(offset) from the current values\r\n * or coordinates to new values or coordinates. The Transform class also\r\n * collects data about color and two-dimensional matrix transformations that\r\n * are applied to a display object and all of its parent objects. You can\r\n * access these combined transformations through the\r\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\r\n * properties.\r\n *\r\n * <p>To apply color transformations: create a ColorTransform object, set the\r\n * color adjustments using the object's methods and properties, and then\r\n * assign the <code>colorTransformation</code> property of the\r\n * <code>transform</code> property of the display object to the new\r\n * ColorTransformation object.</p>\r\n *\r\n * <p>To apply two-dimensional transformations: create a Matrix object, set\r\n * the matrix's two-dimensional transformation, and then assign the\r\n * <code>transform.matrix</code> property of the display object to the new\r\n * Matrix object.</p>\r\n *\r\n * <p>To apply three-dimensional transformations: start with a\r\n * three-dimensional display object. A three-dimensional display object has a\r\n * <code>z</code> property value other than zero. You do not need to create\r\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\r\n * is created automatically when you assign a <code>z</code> value to a\r\n * display object. You can access the display object's Matrix3D object through\r\n * the display object's <code>transform</code> property. Using the methods of\r\n * the Matrix3D class, you can add to or modify the existing transformation\r\n * settings. Also, you can create a custom Matrix3D object, set the custom\r\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\r\n * object to the display object using the <code>transform.matrix</code>\r\n * property.</p>\r\n *\r\n * <p>To modify a perspective projection of the stage or root object: use the\r\n * <code>transform.matrix</code> property of the root display object to gain\r\n * access to the PerspectiveProjection object. Or, apply different perspective\r\n * projection properties to a display object by setting the perspective\r\n * projection properties of the display object's parent. The child display\r\n * object inherits the new properties. Specifically, create a\r\n * PerspectiveProjection object and set its properties, then assign the\r\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\r\n * property of the parent display object's <code>transform</code> property.\r\n * The specified projection transformation then applies to all the display\r\n * object's three-dimensional children.</p>\r\n *\r\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\r\n * perspective transformations, do not assign both to a display object at the\r\n * same time. Use the PerspectiveProjection object for focal length and\r\n * projection center changes. For more control over the perspective\r\n * transformation, create a perspective projection Matrix3D object.</p>\r\n */\r\nclass Transform\r\n{\r\n\tprivate _displayObject:DisplayObject;\r\n\tprivate _concatenatedColorTransform:ColorTransform;\r\n\tprivate _concatenatedMatrix:Matrix;\r\n\tprivate _pixelBounds:Rectangle;\r\n\tpublic _position:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A ColorTransform object containing values that universally adjust the\r\n\t * colors in the display object.\r\n\t * \r\n\t * @throws TypeError The colorTransform is null when being set\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._displayObject._iColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(val:ColorTransform)\r\n\t{\r\n\t\tthis._displayObject._iColorTransform = val;\r\n\t}\r\n\r\n\t/**\r\n\t * A ColorTransform object representing the combined color transformations\r\n\t * applied to the display object and all of its parent objects, back to the\r\n\t * root level. If different color transformations have been applied at\r\n\t * different levels, all of those transformations are concatenated into one\r\n\t * ColorTransform object for this property.\r\n\t */\r\n\tpublic get concatenatedColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._concatenatedColorTransform; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object representing the combined transformation matrixes of the\r\n\t * display object and all of its parent objects, back to the root level. If\r\n\t * different transformation matrixes have been applied at different levels,\r\n\t * all of those matrixes are concatenated into one matrix for this property.\r\n\t * Also, for resizeable SWF content running in the browser, this property\r\n\t * factors in the difference between stage coordinates and window coordinates\r\n\t * due to window resizing. Thus, the property converts local coordinates to\r\n\t * window coordinates, which may not be the same coordinate space as that of\r\n\t * the Stage.\r\n\t */\r\n\tpublic get concatenatedMatrix():Matrix\r\n\t{\r\n\t\treturn this._concatenatedMatrix; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get downVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get forwardVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get leftVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object containing values that alter the scaling, rotation, and\r\n\t * translation of the display object.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t * \r\n\t * @throws TypeError The matrix is null when being set\r\n\t */\r\n\tpublic matrix:Matrix;\r\n\r\n\t/**\r\n\t * Provides access to the Matrix3D object of a three-dimensional display\r\n\t * object. The Matrix3D object represents a transformation matrix that\r\n\t * determines the display object's position and orientation. A Matrix3D\r\n\t * object can also perform perspective projection.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic get matrix3D():Matrix3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D;\r\n\t}\r\n\r\n\tpublic set matrix3D(val:Matrix3D)\r\n\t{\r\n\t\tthis._displayObject._iMatrix3D = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\r\n\t * display object. The PerspectiveProjection object can be used to modify the\r\n\t * perspective transformation of the stage or to assign a perspective\r\n\t * transformation to all the three-dimensional children of a display object.\r\n\t *\r\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\r\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\r\n\t */\r\n\tpublic perspectiveProjection:PerspectiveProjection;\r\n\r\n\t/**\r\n\t * A Rectangle object that defines the bounding rectangle of the display\r\n\t * object on the stage.\r\n\t */\r\n\tpublic get pixelBounds():Rectangle\r\n\t{\r\n\t\treturn this._pixelBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D.position\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.x = value.x;\r\n\t\tthis._displayObject.y = value.y;\r\n\t\tthis._displayObject.z = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get rightVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get rotation():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\r\n\t}\r\n\r\n\tpublic set rotation(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.rotationX = value.x;\r\n\t\tthis._displayObject.rotationY = value.y;\r\n\t\tthis._displayObject.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get scale():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\r\n\t}\r\n\r\n\tpublic set scale(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.scaleX = value.x;\r\n\t\tthis._displayObject.scaleY = value.y;\r\n\t\tthis._displayObject.scaleZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get upVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis._displayObject = displayObject;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Matrix3D object, which can transform the space of a specified\r\n\t * display object in relation to the current display object's space. You can\r\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\r\n\t * three-dimensional display object relative to another three-dimensional\r\n\t * display object.\r\n\t * \r\n\t * @param relativeTo The display object relative to which the transformation\r\n\t *                   occurs. To get a Matrix3D object relative to the stage,\r\n\t *                   set the parameter to the <code>root</code> or\r\n\t *                   <code>stage</code> object. To get the world-relative\r\n\t *                   matrix of the display object, set the parameter to a\r\n\t *                   display object that has a perspective transformation\r\n\t *                   applied to it.\r\n\t * @return A Matrix3D object that can be used to transform the space from the\r\n\t *         <code>relativeTo</code> display object to the current display\r\n\t *         object space.\r\n\t */\r\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(); //TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveForward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveBackward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\r\n\tpublic moveLeft(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveRight(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveUp(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveDown(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\r\n\t}\r\n}\r\n\r\nexport = Transform;\r\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass TriangleSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _faceNormalsDirty:boolean = true;\r\n\tprivate _faceTangentsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _normals:Float3Attributes;\r\n\tprivate _tangents:Float3Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\tprivate _secondaryUVs:Float2Attributes;\r\n\tprivate _jointIndices:AttributesView;\r\n\tprivate _jointWeights:AttributesView;\r\n\r\n\tprivate _useCondensedIndices:boolean;\r\n\tprivate _condensedIndexLookUp:Array<number>;\r\n\r\n\tprivate _jointsPerVertex:number;\r\n\r\n\tprivate _autoDeriveNormals:boolean = true;\r\n\tprivate _autoDeriveTangents:boolean = true;\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _faceNormals:Float4Attributes;\r\n\tprivate _faceTangents:Float3Attributes;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubGeometry.assetType;\r\n\t}\r\n\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\r\n\t * by condensing the number of joint index values required per mesh. Only applicable to\r\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\r\n\t */\r\n\tpublic get useCondensedIndices():boolean\r\n\t{\r\n\t\treturn this._useCondensedIndices;\r\n\t}\r\n\r\n\tpublic set useCondensedIndices(value:boolean)\r\n\t{\r\n\t\tif (this._useCondensedIndices == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useCondensedIndices = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointsPerVertex():number\r\n\t{\r\n\t\treturn this._jointsPerVertex;\r\n\t}\r\n\r\n\tpublic set jointsPerVertex(value:number)\r\n\t{\r\n\t\tif (this._jointsPerVertex == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._jointsPerVertex = value;\r\n\r\n\t\tif (this._jointIndices)\r\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\r\n\r\n\t\tif (this._jointWeights)\r\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveNormals():boolean\r\n\t{\r\n\t\treturn this._autoDeriveNormals;\r\n\t}\r\n\r\n\tpublic set autoDeriveNormals(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveNormals == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveNormals = value;\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveTangents():boolean\r\n\t{\r\n\t\treturn this._autoDeriveTangents;\r\n\t}\r\n\r\n\tpublic set autoDeriveTangents(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveTangents == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveTangents = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get normals():Float3Attributes\r\n\t{\r\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\r\n\t\t\tthis.setNormals(this._normals);\r\n\r\n\t\treturn this._normals;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get tangents():Float3Attributes\r\n\t{\r\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\r\n\t\t\tthis.setTangents(this._tangents);\r\n\r\n\t\treturn this._tangents;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceNormals():Float4Attributes\r\n\t{\r\n\t\tif (this._faceNormalsDirty)\r\n\t\t\tthis.updateFaceNormals();\r\n\r\n\t\treturn this._faceNormals;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceTangents():Float3Attributes\r\n\t{\r\n\t\tif (this._faceTangentsDirty)\r\n\t\t\tthis.updateFaceTangents();\r\n\r\n\t\treturn this._faceTangents;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get secondaryUVs():Float2Attributes\r\n\t{\r\n\t\treturn this._secondaryUVs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointIndices():AttributesView\r\n\t{\r\n\t\treturn this._jointIndices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointWeights():AttributesView\r\n\t{\r\n\t\treturn this._jointWeights;\r\n\t}\r\n\r\n\tpublic get condensedIndexLookUp():Array<number>\r\n\t{\r\n\t\treturn this._condensedIndexLookUp;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setNormals(array:Array<number>, offset?:number);\r\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\r\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setNormals(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveNormals) {\r\n\t\t\tif (values == this._normals)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._normals)\r\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._normals.set(values, offset);\r\n\t\t\t} else if (this._normals) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tthis._verticesDirty[this._normals.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex tangents based on the geometry.\r\n\t */\r\n\tpublic setTangents(array:Array<number>, offset?:number);\r\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\r\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setTangents(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveTangents) {\r\n\t\t\tif (values == this._tangents)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._tangents)\r\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._tangents.set(values, offset);\r\n\t\t\t} else if (this._tangents) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceTangentsDirty)\r\n\t\t\t\tthis.updateFaceTangents();\r\n\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis._verticesDirty[this._tangents.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the secondary uvs based on the geometry.\r\n\t */\r\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\r\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._secondaryUVs)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._secondaryUVs)\r\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tthis._secondaryUVs.set(values, offset);\r\n\t\t} else if (this._secondaryUVs) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\r\n\r\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint indices\r\n\t */\r\n\tpublic setJointIndices(array:Array<number>, offset?:number);\r\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointIndices)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointIndices)\r\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tif (this._useCondensedIndices) {\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar oldIndex:number;\r\n\t\t\t\tvar newIndex:number = 0;\r\n\t\t\t\tvar dic:Object = new Object();\r\n\r\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\toldIndex = values[i];\r\n\r\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\r\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\r\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\r\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//reset value to dictionary lookup\r\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._jointIndices.set(values, offset);\r\n\r\n\t\t} else if (this._jointIndices) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\r\n\r\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint weights.\r\n\t */\r\n\tpublic setJointWeights(array:Array<number>, offset?:number);\r\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointWeights(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointWeights)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointWeights)\r\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tthis._jointWeights.set(values, offset);\r\n\r\n\t\t} else if (this._jointWeights) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\r\n\r\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tif (this._normals) {\r\n\t\t\tthis._normals.dispose();\r\n\t\t\tthis._normals = null;\r\n\t\t}\r\n\r\n\t\tif (this._tangents) {\r\n\t\t\tthis._tangents.dispose();\r\n\t\t\tthis._tangents = null;\r\n\t\t}\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t\tif (this._secondaryUVs) {\r\n\t\t\tthis._secondaryUVs.dispose();\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointIndices) {\r\n\t\t\tthis._jointIndices.dispose();\r\n\t\t\tthis._jointIndices = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointWeights) {\r\n\t\t\tthis._jointWeights.dispose();\r\n\t\t\tthis._jointWeights = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceNormals) {\r\n\t\t\tthis._faceNormals.dispose();\r\n\t\t\tthis._faceNormals = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceTangents) {\r\n\t\t\tthis._faceTangents.dispose();\r\n\t\t\tthis._faceTangents = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tsuper.setIndices(values, offset);\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\t\tthis._faceTangentsDirty = true;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():TriangleSubGeometry\r\n\t{\r\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\t//temp disable auto derives\r\n\t\tclone.autoDeriveNormals = false;\r\n\t\tclone.autoDeriveTangents = false;\r\n\t\tclone.autoDeriveUVs = false;\r\n\r\n\t\tif (this.indices)\r\n\t\t\tclone.setIndices(this.indices.clone());\r\n\r\n\t\tif (this.normals)\r\n\t\t\tclone.setNormals(this.normals.clone());\r\n\r\n\t\tif (this.uvs)\r\n\t\t\tclone.setUVs(this.uvs.clone());\r\n\r\n\t\tif (this.tangents)\r\n\t\t\tclone.setTangents(this.tangents.clone());\r\n\r\n\t\tif (this.secondaryUVs)\r\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\r\n\r\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\r\n\r\n\t\tif (this.jointIndices)\r\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\r\n\r\n\t\tif (this.jointWeights)\r\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\r\n\r\n\t\t//return auto derives to cloned values\r\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\r\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\r\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the tangents for each face.\r\n\t */\r\n\tprivate updateFaceTangents()\r\n\t{\r\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\r\n\r\n\t\tthis._faceTangentsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the normals for each face.\r\n\t */\r\n\tprivate updateFaceNormals()\r\n\t{\r\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\r\n\r\n\t\tthis._faceNormalsDirty = false;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.TriangleSubMesh\r\n */\r\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\r\n\r\n\tprivate _subGeometry:TriangleSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t */\r\n\tpublic get subGeometry():TriangleSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new TriangleSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\r\n\t * @param material An optional material used to render this TriangleSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\n\r\n\r\n/**\r\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\r\n * This is useful for most meshes.\r\n */\r\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\r\n{\r\n\tpublic _box:Box;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\tprivate _depth:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _halfExtentsX:number = 0;\r\n\tprivate _halfExtentsY:number = 0;\r\n\tprivate _halfExtentsZ:number = 0;\r\n\tprivate _prefab:PrimitiveCubePrefab;\r\n\r\n\t/**\r\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\r\n\t */\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._x = this._y = this._z = 0;\r\n\t\tthis._width = this._height = this._depth = 0;\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar a:number = plane.a;\r\n\t\t\tvar b:number = plane.b;\r\n\t\t\tvar c:number = plane.c;\r\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\r\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\r\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\r\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\r\n\r\n\t\t\tif (projDist < 0)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\r\n\r\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._box = this._pEntity.getBox();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\t\tvar hx:number = this._box.width/2;\r\n\t\tvar hy:number = this._box.height/2;\r\n\t\tvar hz:number = this._box.depth/2;\r\n\t\tvar cx:number = this._box.x + hx;\r\n\t\tvar cy:number = this._box.y + hy;\r\n\t\tvar cz:number = this._box.z + hz;\r\n\t\tvar raw:Float32Array = matrix.rawData;\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\r\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\r\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.width = this._box.width;\r\n\t\t\tthis._prefab.height = this._box.height;\r\n\t\t\tthis._prefab.depth = this._box.depth;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\r\n\t\tthis._width = this._halfExtentsX*2;\r\n\t\tthis._height = this._halfExtentsY*2;\r\n\t\tthis._depth = this._halfExtentsZ*2;\r\n\r\n\t\tthis._x = this._centerX - this._halfExtentsX;\r\n\t\tthis._y = this._centerY - this._halfExtentsY;\r\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveCubePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\n\r\nclass BoundingSphere extends BoundingVolumeBase\r\n{\r\n\tprivate _sphere:Sphere;\r\n\tprivate _radius:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _prefab:PrimitiveSpherePrefab;\r\n\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._radius = 0;\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\r\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\r\n\t\t\tif (projDist < 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar rr:Number = (a + b + c)*this._radius;\r\n\r\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._sphere = this._pEntity.getSphere();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\r\n\t\tvar cx:number = this._sphere.x;\r\n\t\tvar cy:number = this._sphere.y;\r\n\t\tvar cz:number = this._sphere.z;\r\n\t\tvar r:number = this._sphere.radius;\r\n\r\n\t\tvar raw:Float32Array = matrix.rawData;\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tvar rx:number = m11 + m12 + m13;\r\n\t\tvar ry:number = m21 + m22 + m23;\r\n\t\tvar rz:number = m31 + m32 + m33;\r\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.radius = r;\r\n\t\t\tthis._pBoundsPrimitive.x = cx;\r\n\t\t\tthis._pBoundsPrimitive.y = cy;\r\n\t\t\tthis._pBoundsPrimitive.z = cz;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveSpherePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nclass BoundingVolumeBase\r\n{\r\n\tpublic _pEntity:IEntity;\r\n\tpublic _pBoundsPrimitive:Mesh;\r\n\tpublic _pInvalidated:boolean = true;\r\n\r\n\tconstructor(entity)\r\n\t{\r\n\t\tthis._pEntity = entity;\r\n\t}\r\n\r\n\tpublic get boundsPrimitive():IEntity\r\n\t{\r\n\t\tif (this._pBoundsPrimitive == null) {\r\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\r\n\r\n\t\t\tthis._pUpdate();\r\n\t\t}\r\n\r\n\t\treturn this._pBoundsPrimitive;\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tthis._pInvalidated = false;\r\n\t}\r\n\r\n\tpublic invalidate()\r\n\t{\r\n\t\tthis._pInvalidated = true;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = BoundingVolumeBase;",
    "/**\r\n *\r\n */\r\nclass BoundsType\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SPHERE:string = \"sphere\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static NULL:string = \"null\";\r\n}\r\n\r\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\n\r\n\r\nclass NullBounds extends BoundingVolumeBase\r\n{\r\n\tprivate _alwaysIn:boolean;\r\n\r\n\tconstructor(alwaysIn:boolean = true)\r\n\t{\r\n\t\tsuper(null);\r\n\r\n\t\tthis._alwaysIn = alwaysIn;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\treturn new NullBounds(this._alwaysIn);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn this._alwaysIn;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\treturn PlaneClassification.INTERSECT;\r\n\t}\r\n}\r\n\r\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\n\r\n/**\r\n * The DisplayObjectContainer class is the base class for all objects that can\r\n * serve as display object containers on the display list. The display list\r\n * manages all objects displayed in the Flash runtimes. Use the\r\n * DisplayObjectContainer class to arrange the display objects in the display\r\n * list. Each DisplayObjectContainer object has its own child list for\r\n * organizing the z-order of the objects. The z-order is the front-to-back\r\n * order that determines which object is drawn in front, which is behind, and\r\n * so on.\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception.</p>\r\n * The DisplayObjectContainer class is an abstract base class for all objects\r\n * that can contain child objects. It cannot be instantiated directly; calling\r\n * the <code>new DisplayObjectContainer()</code> constructor throws an\r\n * <code>ArgumentError</code> exception.\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n */\r\nclass DisplayObjectContainer extends DisplayObject implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\r\n\r\n\tprivate _containerNodes:Array<ContainerNode> = new Array<ContainerNode>();\r\n\tprivate _mouseChildren:boolean = true;\r\n\tprivate _active_depths:Object = {};\r\n\tprivate _nextHighestDepth:number = 0;\r\n\tprivate _nextHighestDepthDirty:boolean;\r\n\tpublic _children:Array<DisplayObject> = new Array<DisplayObject>();\r\n\tpublic _iIsRoot:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn DisplayObjectContainer.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not the children of the object are mouse, or user\r\n\t * input device, enabled. If an object is enabled, a user can interact with\r\n\t * it by using a mouse or user input device. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p>This property is useful when you create a button with an instance of\r\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\r\n\t * Sprite instance to create a button, you can choose to decorate the button\r\n\t * by using the <code>addChild()</code> method to add additional Sprite\r\n\t * instances. This process can cause unexpected behavior with mouse events\r\n\t * because the Sprite instances you add as children can become the target\r\n\t * object of a mouse event when you expect the parent instance to be the\r\n\t * target object. To ensure that the parent instance serves as the target\r\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\r\n\t * property of the parent instance to <code>false</code>.</p>\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseChildren():boolean\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\r\n\t\t\tthis._updateMouseEnabled();\r\n\r\n\t\treturn this._mouseChildren;\r\n\t}\r\n\r\n\tpublic set mouseChildren(value:boolean)\r\n\t{\r\n\t\tif (this._mouseChildren == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mouseChildren = value;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MOUSE_ENABLED);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of children of this object.\r\n\t */\r\n\tpublic get numChildren():number /*int*/\r\n\t{\r\n\t\treturn this._children.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the children of the object are tab enabled. Enables or\r\n\t * disables tabbing for the children of the object. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\r\n\t * Flex. Instead, use the\r\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\r\n\t *\r\n\t * @throws IllegalOperationError Calling this property of the Stage object\r\n\t *                               throws an exception. The Stage object does\r\n\t *                               not implement this property.\r\n\t */\r\n\tpublic tabChildren:boolean;\r\n\r\n\t/**\r\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\r\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\r\n\t * constructors for the following subclasses of DisplayObjectContainer:\r\n\t * <ul>\r\n\t *   <li><code>new Loader()</code></li>\r\n\t *   <li><code>new Sprite()</code></li>\r\n\t *   <li><code>new MovieClip()</code></li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsContainer = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added to the front(top) of all other children in\r\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\r\n\t * position, use the <code>addChildAt()</code> method.)\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\r\n\t * problems with a published SWF file, including security problems and\r\n\t * conflicts with other loaded SWF files. There is only one Stage within a\r\n\t * Flash runtime instance, no matter how many SWF files you load into the\r\n\t * runtime. So, generally, objects should not be added to the Stage,\r\n\t * directly, at all. The only object the Stage should contain is the root\r\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\r\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\r\n\t * to the Stage.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\treturn this.addChildAt(child, this._children.length);\r\n\t}\r\n\r\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\r\n\r\n\t\t//if child already has a parent, remove it.\r\n\t\tif (child._pParent)\r\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\r\n\r\n\r\n\t\tvar index = this.getDepthIndexInternal(depth);\r\n\r\n\t\tif (index != -1) {\r\n\t\t\tif (replace) {\r\n\t\t\t\tthis.removeChildAt(index);\r\n\t\t\t} else {\r\n\t\t\t\t//move depth of existing child up by 1\r\n\t\t\t\tthis.addChildAtDepth(this._children[index], depth + 1, false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._nextHighestDepth < depth + 1)\r\n\t\t\tthis._nextHighestDepth = depth + 1;\r\n\r\n\t\tthis._active_depths[depth] = child;\r\n\t\tthis._children.push(child);\r\n\r\n\t\tchild._depthID = depth;\r\n\r\n\t\tchild.iSetParent(this);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added at the index position specified. An index of\r\n\t * 0 represents the back(bottom) of the display list for this\r\n\t * DisplayObjectContainer object.\r\n\t *\r\n\t * <p>For example, the following example shows three display objects, labeled\r\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @param index The index position to which the child is added. If you\r\n\t *              specify a currently occupied index position, the child object\r\n\t *              that exists at that position and all higher positions are\r\n\t *              moved up one position in the child list.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @throws RangeError    Throws if the index position does not exist in the\r\n\t *                       child list.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\r\n\t{\r\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._children[index]._depthID : this.getNextHighestDepth(), false);\r\n\t}\r\n\r\n\tpublic addChildren(...childarray:Array<DisplayObject>)\r\n\t{\r\n\t\tvar len:number = childarray.length;\r\n\t\tfor (var i:number = 0; i <  len; i++)\r\n\t\t\tthis.addChild(childarray[i]);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObjectContainer\r\n\t{\r\n\t\tvar newInstance:DisplayObjectContainer = new DisplayObjectContainer();\r\n\r\n\t\tthis.copyTo(newInstance);\r\n\r\n\t\treturn newInstance;\r\n\t}\r\n\r\n\tpublic copyTo(newInstance:DisplayObjectContainer)\r\n\t{\r\n\t\tsuper.copyTo(newInstance);\r\n\r\n\t\tnewInstance.mouseChildren = this._mouseChildren;\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tnewInstance.addChild(this._children[i].clone());\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified display object is a child of the\r\n\t * DisplayObjectContainer instance or the instance itself. The search\r\n\t * includes the entire display list including this DisplayObjectContainer\r\n\t * instance. Grandchildren, great-grandchildren, and so on each return\r\n\t * <code>true</code>.\r\n\t *\r\n\t * @param child The child object to test.\r\n\t * @return <code>true</code> if the <code>child</code> object is a child of\r\n\t *         the DisplayObjectContainer or the container itself; otherwise\r\n\t *         <code>false</code>.\r\n\t */\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._children.indexOf(child) >= 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic disposeWithChildren()\r\n\t{\r\n\t\tthis.dispose();\r\n\r\n\t\twhile (this.numChildren > 0)\r\n\t\t\tthis.getChildAt(0).dispose();\r\n\t}\r\n\r\n\tpublic getChildAtDepth(depth:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this._active_depths[depth];\r\n\t}\r\n\r\n\tpublic getChildDepths():Object\r\n\t{\r\n\t\treturn this._active_depths;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object instance that exists at the specified\r\n\t * index.\r\n\t *\r\n\t * @param index The index position of the child object.\r\n\t * @return The child display object at the specified index position.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic getChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children[index];\r\n\r\n\t\tif (child == null)\r\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object that exists with the specified name. If\r\n\t * more that one child display object has the specified name, the method\r\n\t * returns the first object in the child list.\r\n\t *\r\n\t * <p>The <code>getChildAt()</code> method is faster than the\r\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\r\n\t * accesses a child from a cached array, whereas the\r\n\t * <code>getChildByName()</code> method has to traverse a linked list to\r\n\t * access a child.</p>\r\n\t *\r\n\t * @param name The name of the child to return.\r\n\t * @return The child display object with the specified name.\r\n\t */\r\n\tpublic getChildByName(name:string):DisplayObject\r\n\t{\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tif (this._children[i].name == name)\r\n\t\t\t\treturn this._children[i];\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\r\n\t *\r\n\t * @param child The DisplayObject instance to identify.\r\n\t * @return The index position of the child display object to identify.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\r\n\t{\r\n\t\tvar childIndex:number = this._children.indexOf(child);\r\n\r\n\t\tif (childIndex == -1)\r\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\r\n\r\n\t\treturn childIndex;\r\n\t}\r\n\r\n\tpublic getNextHighestDepth()\r\n\t{\r\n\t\tif (this._nextHighestDepthDirty)\r\n\t\t\tthis._updateNextHighestDepth();\r\n\r\n\t\treturn this._nextHighestDepth;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects that lie under the specified point and are\r\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\r\n\t * instance. Any child objects that are inaccessible for security reasons are\r\n\t * omitted from the returned array. To determine whether this security\r\n\t * restriction affects the returned array, call the\r\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\r\n\t *\r\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\r\n\t * Stage, which may differ from the coordinate space of the display object\r\n\t * container(unless the display object container is the Stage). You can use\r\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\r\n\t * methods to convert points between these coordinate spaces.</p>\r\n\t *\r\n\t * @param point The point under which to look.\r\n\t * @return An array of objects that lie under the specified point and are\r\n\t *         children(or grandchildren, and so on) of this\r\n\t *         DisplayObjectContainer instance.\r\n\t */\r\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\r\n\t{\r\n\t\treturn new Array<DisplayObject>();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified <code>child</code> DisplayObject instance from the\r\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\r\n\t * property of the removed child is set to <code>null</code> , and the object\r\n\t * is garbage collected if no other references to the child exist. The index\r\n\t * positions of any display objects above the child in the\r\n\t * DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to remove.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic removeChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\r\n\r\n\t\tthis.removeChildAt(this.getChildIndex(child));\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child DisplayObject from the specified <code>index</code>\r\n\t * position in the child list of the DisplayObjectContainer. The\r\n\t * <code>parent</code> property of the removed child is set to\r\n\t * <code>null</code>, and the object is garbage collected if no other\r\n\t * references to the child exist. The index positions of any display objects\r\n\t * above the child in the DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param index The child index of the DisplayObject to remove.\r\n\t * @return The DisplayObject instance that was removed.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t * @throws SecurityError This child display object belongs to a sandbox to\r\n\t *                       which the calling object does not have access. You\r\n\t *                       can avoid this situation by having the child movie\r\n\t *                       call the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\r\n\r\n\t\tchild.iSetParent(null);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all <code>child</code> DisplayObject instances from the child list\r\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\r\n\t * of the removed children is set to <code>null</code>, and the objects are\r\n\t * garbage collected if no other references to the children exist.\r\n\t *\r\n\t * The garbage collector reallocates unused memory space. When a variable or\r\n\t * object is no longer actively referenced or stored somewhere, the garbage\r\n\t * collector sweeps through and wipes out the memory space it used to occupy\r\n\t * if no other references to it exist.\r\n\t *\r\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\r\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\r\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\r\n\t *                       not exist in the child list.\r\n\t */\r\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\r\n\t{\r\n\t\tif (beginIndex < 0)\r\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\r\n\r\n\t\tif (endIndex > this._children.length)\r\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\r\n\r\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\r\n\t\t\tthis.removeChild(this._children[i]);\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the position of an existing child in the display object container.\r\n\t * This affects the layering of child objects. For example, the following\r\n\t * example shows three display objects, labeled a, b, and c, at index\r\n\t * positions 0, 1, and 2, respectively:\r\n\t *\r\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\r\n\t * index position that is already occupied, the only positions that change\r\n\t * are those in between the display object's former and new position. All\r\n\t * others will stay the same. If a child is moved to an index LOWER than its\r\n\t * current index, all children in between will INCREASE by 1 for their index\r\n\t * reference. If a child is moved to an index HIGHER than its current index,\r\n\t * all children in between will DECREASE by 1 for their index reference. For\r\n\t * example, if the display object container in the previous example is named\r\n\t * <code>container</code>, you can swap the position of the display objects\r\n\t * labeled a and b by calling the following code:</p>\r\n\t *\r\n\t * <p>This code results in the following arrangement of objects:</p>\r\n\t *\r\n\t * @param child The child DisplayObject instance for which you want to change\r\n\t *              the index number.\r\n\t * @param index The resulting index number for the <code>child</code> display\r\n\t *              object.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order (front-to-back order) of the two specified child\r\n\t * objects. All other child objects in the display object container remain in\r\n\t * the same index positions.\r\n\t *\r\n\t * @param child1 The first child object.\r\n\t * @param child2 The second child object.\r\n\t * @throws ArgumentError Throws if either child parameter is not a child of\r\n\t *                       this object.\r\n\t */\r\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\r\n\t{\r\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\r\n\t * specified index positions in the child list. All other child objects in\r\n\t * the display object container remain in the same index positions.\r\n\t *\r\n\t * @param index1 The index position of the first child object.\r\n\t * @param index2 The index position of the second child object.\r\n\t * @throws RangeError If either index does not exist in the child list.\r\n\t */\r\n\tpublic swapChildrenAt(index1:number, index2:number)\r\n\t{\r\n\t\tvar depth:number = this._children[index2]._depthID;\r\n\t\tvar child:DisplayObject = this._children[index1];\r\n\r\n\t\tthis.addChildAtDepth(this._children[index2], this._children[index1]._depthID);\r\n\t\tthis.addChildAtDepth(child, depth);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar min:number;\r\n\t\tvar max:number;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\r\n\t\tvar box:Box;\r\n\t\tvar numChildren:number = this._children.length;\r\n\r\n\t\tif (numChildren > 0) {\r\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\r\n\t\t\t\tbox = this._children[i].getBox(this);\r\n\r\n\t\t\t\tif (i == 0) {\r\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\r\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\r\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmax = box.width + (min = box.x);\r\n\t\t\t\t\tif (min < minX)\r\n\t\t\t\t\t\tminX = min;\r\n\t\t\t\t\tif (max > maxX)\r\n\t\t\t\t\t\tmaxX = max;\r\n\r\n\t\t\t\t\tmax = box.height + (min = box.y);\r\n\t\t\t\t\tif (min < minY)\r\n\t\t\t\t\t\tminY = min;\r\n\t\t\t\t\tif (max > maxY)\r\n\t\t\t\t\t\tmaxY = max;\r\n\r\n\t\t\t\t\tmax = box.depth + (min = box.z);\r\n\t\t\t\t\tif (min < minZ)\r\n\t\t\t\t\t\tminZ = min;\r\n\t\t\t\t\tif (max > maxZ)\r\n\t\t\t\t\t\tmaxZ = max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t} else {\r\n\t\t\tthis._pBoxBounds.setEmpty();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number)\r\n\t{\r\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\r\n\t\t\treturn true;\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i].pInvalidateHierarchicalProperties(bitFlag);\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iSetScene(value:Scene, partition:PartitionBase)\r\n\t{\r\n\t\tsuper._iSetScene(value, partition);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._iSetScene(value, partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t *\r\n\t * @param child\r\n\t */\r\n\tpublic removeChildAtInternal(index:number):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\r\n\r\n\t\t//update next highest depth\r\n\t\tif (this._nextHighestDepth == child._depthID + 1)\r\n\t\t\tthis._nextHighestDepthDirty = true;\r\n\r\n\t\t//check to make sure _active_depths wasn't modified with a new child\r\n\t\tif (this._active_depths[child._depthID] == child)\r\n\t\t\tdelete this._active_depths[child._depthID];\r\n\r\n\t\tchild._depthID = -16384;\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\tprivate getDepthIndexInternal(depth:number /*int*/):number\r\n\t{\r\n\t\tif (!this._active_depths[depth])\r\n\t\t\treturn -1;\r\n\r\n\t\treturn this._children.indexOf(this._active_depths[depth]);\r\n\t}\r\n\r\n\tprivate _updateNextHighestDepth()\r\n\t{\r\n\t\tthis._nextHighestDepthDirty = false;\r\n\r\n\t\tthis._nextHighestDepth = 0;\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._nextHighestDepth < this._children[i]._depthID)\r\n\t\t\t\tthis._nextHighestDepth = this._children[i]._depthID;\r\n\r\n\t\tthis._nextHighestDepth += 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\r\n\t{\r\n\t\tif(this._pImplicitMaskId !== -1 && !masksFlag)\r\n\t\t\treturn;\r\n\r\n\t\tif(!this._pImplicitVisibility)\r\n\t\t\treturn;\r\n\r\n\t\tvar masks:Array<DisplayObject> = this.masks;\r\n\r\n\t\tif (masks) {\r\n\t\t\tvar numMasks:number = masks.length;\r\n\t\t\tvar maskHit:boolean = false;\r\n\t\t\tfor (var i:number = 0; i < numMasks; i++) {\r\n\t\t\t\tif (masks[i].hitTestPoint(x, y, shapeFlag, true)) {\r\n\t\t\t\t\tmaskHit = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!maskHit)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this._hitTestPointInternal(x, y, shapeFlag, masksFlag)\r\n\t}\r\n\r\n\tpublic _iAddContainerNode(entityNode:ContainerNode):ContainerNode\r\n\t{\r\n\t\tthis._containerNodes.push(entityNode);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveContainerNode(entityNode:ContainerNode):ContainerNode\r\n\t{\r\n\t\tvar index:number = this._containerNodes.indexOf(entityNode);\r\n\r\n\t\tthis._containerNodes.splice(index, 1);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\r\n\t{\r\n\t\tvar numChildren:number = this.numChildren;\r\n\t\tfor(var i:number = 0; i < numChildren; i++)\r\n\t\t\tif(this._children[i].hitTestPoint(x,y, shapeFlag, masksFlag))\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic _updateMaskMode()\r\n\t{\r\n\t\t(this.maskMode)\r\n\t\t\tthis.mouseChildren = false;\r\n\r\n\t\tsuper._updateMaskMode();\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\r\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\r\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\r\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\n\r\n/**\r\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\r\n * files. Use the <code>load()</code> method to initiate loading. The loaded\r\n * display object is added as a child of the Loader object.\r\n *\r\n * <p>Use the URLLoader class to load text or binary data.</p>\r\n *\r\n * <p>The Loader class overrides the following methods that it inherits,\r\n * because a Loader object can only have one child display object - the\r\n * display object that it loads. Calling the following methods throws an\r\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\r\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\r\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\r\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\r\n * child array. </p>\r\n *\r\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\r\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\r\n * them.</p>\r\n *\r\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\r\n * security model: </p>\r\n *\r\n * <ul>\r\n *   <li>You can load content from any accessible source. </li>\r\n *   <li>Loading is not allowed if the calling SWF file is in a network\r\n * sandbox and the file to be loaded is local. </li>\r\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\r\n * cannot be cross-scripted by a SWF file in another security sandbox unless\r\n * that cross-scripting arrangement was approved through a call to the\r\n * <code>System.allowDomain()</code> or the\r\n * <code>System.allowInsecureDomain()</code> method in the loaded content\r\n * file.</li>\r\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\r\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\r\n * ActionScript 3.0). However, you can communicate between the two SWF files\r\n * by using the LocalConnection class.</li>\r\n *   <li>If the loaded content is an image, its data cannot be accessed by a\r\n * SWF file outside of the security sandbox, unless the domain of that SWF\r\n * file was included in a URL policy file at the origin domain of the\r\n * image.</li>\r\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\r\n * clips in the local-with-networking sandbox, and the reverse is also\r\n * prevented. </li>\r\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\r\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\r\n * Developer's Guide</i>. </li>\r\n * </ul>\r\n *\r\n * <p>However, in AIR, content in the <code>application</code> security\r\n * sandbox(content installed with the AIR application) are not restricted by\r\n * these security limitations.</p>\r\n *\r\n * <p>For more information related to security, see the Flash Player Developer\r\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\r\n * scope=\"external\">Security</a>.</p>\r\n *\r\n * <p>When loading a SWF file from an untrusted source(such as a domain other\r\n * than that of the Loader object's root SWF file), you may want to define a\r\n * mask for the Loader object, to prevent the loaded content(which is a child\r\n * of the Loader object) from drawing to portions of the Stage outside of that\r\n * mask, as shown in the following code:</p>\r\n */\r\nclass Loader extends DisplayObjectContainer\r\n{\r\n\t/**\r\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\r\n\t * individual asset type (meshes, materials et c.)\r\n\t *\r\n\t * @eventType AssetEvent\r\n\t */\r\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\r\n\r\n\r\n\t/**\r\n\t * Dispatched when a full resource (including dependencies) finishes loading.\r\n\t *\r\n\t * @eventType LoaderEvent\r\n\t */\r\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\r\n\r\n\tprivate _loaderSession:LoaderSession;\r\n\tprivate _loaderSessionGarbage:LoaderSession;\r\n\tprivate _gcTimeoutIID:number;\r\n\tprivate _useAssetLib:boolean;\r\n\tprivate _assetLibId:string;\r\n\tprivate _onResourceCompleteDelegate:Function;\r\n\tprivate _onAssetCompleteDelegate:Function;\r\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\r\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\r\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\r\n\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentLoaderInfo:LoaderInfo;\r\n\r\n\t/**\r\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\r\n\t * GIF) file that was loaded by using the <code>load()</code> or\r\n\t * <code>loadBytes()</code> methods.\r\n\t *\r\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\r\n\t *                       security sandbox to which you do not have access.\r\n\t *                       For a loaded SWF file, you can avoid this situation\r\n\t *                       by having the file call the\r\n\t *                       <code>Security.allowDomain()</code> method or by\r\n\t *                       having the loading file specify a\r\n\t *                       <code>loaderContext</code> parameter with its\r\n\t *                       <code>securityDomain</code> property set to\r\n\t *                       <code>SecurityDomain.currentDomain</code> when you\r\n\t *                       call the <code>load()</code> or\r\n\t *                       <code>loadBytes()</code> method.\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\r\n\t * LoaderInfo objects are shared between the Loader object and the loaded\r\n\t * content object. The LoaderInfo object supplies loading progress\r\n\t * information and statistics about the loaded file.\r\n\t *\r\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\r\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\r\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\r\n\t * LoaderInfo object, even before the content is loaded, so that you can add\r\n\t * event listeners to the object prior to the load.</p>\r\n\t *\r\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\r\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\r\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\r\n\t */\r\n\tpublic get contentLoaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._contentLoaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\r\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\r\n\t * as a child of the Loader instance. You can then add the Loader object to\r\n\t * the display list(for instance, by using the <code>addChild()</code>\r\n\t * method of a DisplayObjectContainer instance). The asset appears on the\r\n\t * Stage as it loads.\r\n\t *\r\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\r\n\t * to a display object container on the display list. In this mode, the\r\n\t * Loader instance might be used to load a SWF file that contains additional\r\n\t * modules of an application. </p>\r\n\t *\r\n\t * <p>To detect when the SWF file is finished loading, you can use the events\r\n\t * of the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\r\n\t * point, the code in the module SWF file can be executed to initialize and\r\n\t * start the module. In the offlist mode, a Loader instance might also be\r\n\t * used to load a SWF file that contains components or media assets. Again,\r\n\t * you can use the LoaderInfo object event notifications to detect when the\r\n\t * components are finished loading. At that point, the application can start\r\n\t * using the components and media assets in the library of the SWF file by\r\n\t * instantiating the ActionScript 3.0 classes that represent those components\r\n\t * and assets.</p>\r\n\t *\r\n\t * <p>To determine the status of a Loader object, monitor the following\r\n\t * events that the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\r\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\r\n\t * dispatched if the file cannot be loaded or if an error occured during the\r\n\t * load process. </li>\r\n\t *   <li>The <code>progress</code> event fires continuously while the file is\r\n\t * being loaded.</li>\r\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\r\n\t * downloading, but before the loaded movie clip's methods and properties are\r\n\t * available. </li>\r\n\t *   <li>The <code>init</code> event is dispatched after the properties and\r\n\t * methods of the loaded SWF file are accessible, so you can begin\r\n\t * manipulating the loaded SWF file. This event is dispatched before the\r\n\t * <code>complete</code> handler. In streaming SWF files, the\r\n\t * <code>init</code> event can occur significantly earlier than the\r\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\r\n\t * handler.</li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\r\n\t{\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis._useAssetLib = useAssetLibrary;\r\n\t\tthis._assetLibId = assetLibraryId;\r\n\r\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\r\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\r\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels a <code>load()</code> method operation that is currently in\r\n\t * progress for the Loader instance.\r\n\t *\r\n\t */\r\n\tpublic close()\r\n\t{\r\n\t\tif (!this._loaderSession)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\r\n\t\t}\r\n\t\t\r\n\t\tthis._disposeLoaderSession();\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\r\n\t * object that is a child of this Loader object. If you load an animated GIF\r\n\t * file, only the first frame is displayed. As the Loader object can contain\r\n\t * only a single child, issuing a subsequent <code>load()</code> request\r\n\t * terminates the previous request, if still pending, and commences a new\r\n\t * load.\r\n\t *\r\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\r\n\t * loaded image is 8,191 pixels in width or height, and the total number of\r\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\r\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\r\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\r\n\t * and 2,880 pixels in width.</p>\r\n\t *\r\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\r\n\t * rotation, and scale properties of the parent display objects of the Loader\r\n\t * object. </p>\r\n\t *\r\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\r\n\t * with this method, or to cancel a load operation that is in progress.</p>\r\n\t *\r\n\t * <p>You can prevent a SWF file from using this method by setting the\r\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\r\n\t * <code>embed</code> tags in the HTML page that contains the SWF\r\n\t * content.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\r\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\r\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\r\n\t * body), the POST operation is subject to the security rules applied to\r\n\t * uploads:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The POST operation must be performed in response to a user-initiated\r\n\t * action, such as a mouse click or key press.</li>\r\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\r\n\t * same server as the SWF file that is sending the POST request), the target\r\n\t * server must provide a URL policy file that permits cross-domain\r\n\t * access.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\r\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\r\n\t * the POST operation is subject to the security rules applied to\r\n\t * uploads.</p>\r\n\t *\r\n\t * <p>For more information related to security, see the Flash Player\r\n\t * Developer Center Topic: <a\r\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t * scope=\"external\">Security</a>.</p>\r\n\t *\r\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\r\n\t *                file to be loaded. A relative path must be relative to the\r\n\t *                main SWF file. Absolute URLs must include the protocol\r\n\t *                reference, such as http:// or file:///. Filenames cannot\r\n\t *                include disk drive specifications.\r\n\t * @param context A LoaderContext object, which has properties that define\r\n\t *                the following:\r\n\t *                <ul>\r\n\t *                  <li>Whether or not to check for the existence of a policy\r\n\t *                file upon loading the object</li>\r\n\t *                  <li>The ApplicationDomain for the loaded object</li>\r\n\t *                  <li>The SecurityDomain for the loaded object</li>\r\n\t *                  <li>The ImageDecodingPolicy for the loaded image\r\n\t *                object</li>\r\n\t *                </ul>\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the loaded content remains in\r\n\t *                its own security domain.</p>\r\n\t *\r\n\t *                <p>For complete details, see the description of the\r\n\t *                properties in the <a\r\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\r\n\t *                class.</p>\r\n\t * @param ns      An optional namespace string under which the file is to be\r\n\t *                loaded, allowing the differentiation of two resources with\r\n\t *                identical assets.\r\n\t * @param parser  An optional parser object for translating the loaded data\r\n\t *                into a usable resource. If not provided, LoaderSession will\r\n\t *                attempt to auto-detect the file type.\r\n\t * @throws IOError               The <code>digest</code> property of the\r\n\t *                               <code>request</code> object is not\r\n\t *                               <code>null</code>. You should only set the\r\n\t *                               <code>digest</code> property of a URLRequest\r\n\t *                               object when calling the\r\n\t *                               <code>URLLoader.load()</code> method when\r\n\t *                               loading a SWZ file(an Adobe platform\r\n\t *                               component).\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         The value of\r\n\t *                               <code>LoaderContext.securityDomain</code>\r\n\t *                               must be either <code>null</code> or\r\n\t *                               <code>SecurityDomain.currentDomain</code>.\r\n\t *                               This reflects the fact that you can only\r\n\t *                               place the loaded media in its natural\r\n\t *                               security sandbox or your own(the latter\r\n\t *                               requires a policy file).\r\n\t * @throws SecurityError         Local SWF files may not set\r\n\t *                               LoaderContext.securityDomain to anything\r\n\t *                               other than <code>null</code>. It is not\r\n\t *                               permitted to import non-local media into a\r\n\t *                               local sandbox, or to place other local media\r\n\t *                               in anything other than its natural sandbox.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\r\n\t *                               <code>securityDomain</code> properties of\r\n\t *                               the <code>context</code> parameter are from\r\n\t *                               a disallowed domain.\r\n\t * @throws SecurityError         If a local SWF file is attempting to use the\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the file has completed loading. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a network request is made over HTTP and\r\n\t *                      Flash Player can detect the HTTP status code.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      SWF file are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when an input or output error occurs that\r\n\t *                      causes a load operation to fail.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the loading operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is received while load operation\r\n\t *                      progresses.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if a SWF file in the local-with-filesystem\r\n\t *                      sandbox attempts to load content in the\r\n\t *                      local-with-networking sandbox, or vice versa.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads from binary data stored in a ByteArray object.\r\n\t *\r\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\r\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\r\n\t *                any of the file formats supported by the Loader class: SWF,\r\n\t *                GIF, JPEG, or PNG.\r\n\t * @param context A LoaderContext object. Only the\r\n\t *                <code>applicationDomain</code> property of the\r\n\t *                LoaderContext object applies; the\r\n\t *                <code>checkPolicyFile</code> and\r\n\t *                <code>securityDomain</code> properties of the LoaderContext\r\n\t *                object do not apply.\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the content is loaded into the\r\n\t *                current security domain -  a process referred to as \"import\r\n\t *                loading\" in Flash Player security documentation.\r\n\t *                Specifically, if the loading SWF file trusts the remote SWF\r\n\t *                by incorporating the remote SWF into its code, then the\r\n\t *                loading SWF can import it directly into its own security\r\n\t *                domain.</p>\r\n\t *\r\n\t *                <p>For more information related to security, see the Flash\r\n\t *                Player Developer Center Topic: <a\r\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                scope=\"external\">Security</a>.</p>\r\n\t * @throws ArgumentError         If the <code>length</code> property of the\r\n\t *                               ByteArray object is not greater than 0.\r\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter are non-null.\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         If the provided\r\n\t *                               <code>applicationDomain</code> property of\r\n\t *                               the <code>context</code> property is from a\r\n\t *                               disallowed domain.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation is complete. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      data are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the runtime cannot parse the data in the\r\n\t *                      byte array.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is transfered in memory.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\r\n\t}\r\n\r\n\tprivate _getLoaderSession()\r\n\t{\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tthis._loaderSession = lib.getLoaderSession();\r\n\t\t} else {\r\n\t\t\tthis._loaderSession = new LoaderSession();\r\n\t\t}\r\n\r\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn this._loaderSession;\r\n\t}\r\n\r\n\tprivate _disposeLoaderSession()\r\n\t{\r\n\t\t// Add loader to garbage - for a collection sweep and kill\r\n\t\tthis._loaderSessionGarbage = this._loaderSession;\r\n\t\tdelete this._loaderSession;\r\n\t\tthis._loaderSession = null;\r\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Removes a child of this Loader object that was loaded by using the\r\n\t * <code>load()</code> method. The <code>property</code> of the associated\r\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\r\n\t * necessarily destroyed because other objects might have references to it;\r\n\t * however, it is no longer a child of the Loader object.\r\n\t *\r\n\t * <p>As a best practice, before you unload a child SWF file, you should\r\n\t * explicitly close any streams in the child SWF file's objects, such as\r\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\r\n\t * audio in the child SWF file might continue to play, even though the child\r\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\r\n\t * event listener to the child that listens for the <code>unload</code>\r\n\t * event. When the parent calls <code>Loader.unload()</code>, the\r\n\t * <code>unload</code> event is dispatched to the child. The following code\r\n\t * shows how you might do this:</p>\r\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\r\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\r\n\t * myLocalConnection.close(); }\r\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\r\n\t * closeAllStreams);</pre>\r\n\t *\r\n\t */\r\n\tpublic unload()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a specific parser.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClass The parser class to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParser(parserClass:Object)\r\n\t{\r\n\t\tLoaderSession.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a list of parsers.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClasses A Vector of parser classes to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParsers(parserClasses:Array<Object>)\r\n\t{\r\n\t\tLoaderSession.enableParsers(parserClasses);\r\n\t}\r\n\t\r\n\tprivate loaderSessionGC():void\r\n\t{\r\n\t\t//remove listeners\r\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\tif (!this._useAssetLib)\r\n\t\t\tthis._loaderSessionGarbage.stop();\r\n\r\n\t\tdelete this._loaderSessionGarbage;\r\n\t\tthis._loaderSessionGarbage = null;\r\n\r\n\t\tclearTimeout(this._gcTimeoutIID);\r\n\t\tthis._gcTimeoutIID = null;\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when an error occurs during loading\r\n\t */\r\n\tprivate onLoadError(event:IOErrorEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during parsing\r\n\t */\r\n\tprivate onParseError(event:ParserEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onTextureSizeError(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the resource and all of its dependencies was retrieved.\r\n\t */\r\n\tprivate onResourceComplete(event:LoaderEvent)\r\n\t{\r\n\t\tthis._content = <DisplayObject> event.content;\r\n\r\n\t\tif (this._content)\r\n\t\t\tthis.addChild(this._content);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\r\n\t\tthis._disposeLoaderSession();\r\n\t}\r\n}\r\n\r\nexport = Loader;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport BasicPartition\t\t\t\t= require(\"awayjs-display/lib/partition/BasicPartition\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\nclass Scene extends DisplayObjectContainer\r\n{\r\n\tprivate _expandedPartitions:Array<PartitionBase> = new Array<PartitionBase>();\r\n\tprivate _partitions:Array<PartitionBase> = new Array<PartitionBase>();\r\n\r\n\tpublic _iCollectionMark = 0;\r\n\r\n\tconstructor(partition:PartitionBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.partition = partition || new BasicPartition();\r\n\r\n\t\tthis._iIsRoot = true;\r\n\t\tthis._pScene = this;\r\n\t}\r\n\r\n\tpublic traversePartitions(traverser:CollectorBase)\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = this._partitions.length;\r\n\r\n\t\ttraverser.scene = this;\r\n\r\n\t\tthis._iCollectionMark++;\r\n\r\n\t\twhile (i < len)\r\n\t\t\tthis._partitions[i++].traverse(traverser);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPartition(partition:PartitionBase)\r\n\t{\r\n\t\tthis._expandedPartitions.push(partition);\r\n\r\n\t\t//ensure duplicates are not found in partitions array\r\n\t\tif (this._partitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.push(partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPartition(partition:PartitionBase)\r\n\t{\r\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\r\n\r\n\t\t//if no more partition references found, remove from partitions array\r\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\r\n\t}\r\n}\r\n\r\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\r\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\r\n\r\nclass View\r\n{\r\n\r\n\t/*\r\n\t *************************************************************************************************************************\r\n\t * Development Notes\r\n\t *************************************************************************************************************************\r\n\t *\r\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\r\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\r\n\t *\r\n\t * Background\r\n\t *                  - this is currently not being included in our tests and is currently disabled\r\n\t *\r\n\t **************************************************************************************************************************\r\n\t */\r\n\r\n\t// Protected\r\n\tpublic _pScene:Scene;\r\n\tpublic _pCamera:Camera;\r\n\tpublic _pEntityCollector:CollectorBase;\r\n\tpublic _pRenderer:IRenderer;\r\n\r\n\t// Private\r\n\tprivate _aspectRatio:number;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\r\n\tprivate _time:number = 0;\r\n\tprivate _deltaTime:number = 0;\r\n\tprivate _backgroundColor:number = 0x000000;\r\n\tprivate _backgroundAlpha:number = 1;\r\n\r\n\tprivate _viewportDirty:boolean = true;\r\n\tprivate _scissorDirty:boolean = true;\r\n\r\n\tprivate _onPartitionChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\r\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _mouseManager:MouseManager;\r\n\tprivate _mousePicker:IPicker = new RaycastPicker();\r\n\r\n\tprivate _htmlElement:HTMLDivElement;\r\n\tprivate _shareContext:boolean;\r\n\tpublic _pMouseX:number;\r\n\tpublic _pMouseY:number;\r\n\tpublic _pTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\r\n\r\n\t/*\r\n\t ***********************************************************************\r\n\t * Disabled / Not yet implemented\r\n\t ***********************************************************************\r\n\t *\r\n\t * private _background:away.textures.Texture2DBase;\r\n\t *\r\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\r\n\t *\r\n\t */\r\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\r\n\t{\r\n\t\tthis._onPartitionChangedDelegate = (event:DisplayObjectEvent) => this._onPartitionChanged(event);\r\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this._onProjectionChanged(event);\r\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this._onViewportUpdated(event);\r\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this._onScissorUpdated(event);\r\n\r\n\t\tthis.scene = scene || new Scene();\r\n\t\tthis.camera = camera || new Camera();\r\n\t\tthis.renderer = renderer;\r\n\r\n\t\t//make sure document border is zero\r\n\t\tdocument.body.style.margin = \"0px\";\r\n\r\n\t\tthis._htmlElement = document.createElement(\"div\");\r\n\t\tthis._htmlElement.style.position = \"absolute\";\r\n\r\n\t\tdocument.body.appendChild(this._htmlElement);\r\n\r\n\t\tthis._mouseManager = MouseManager.getInstance();\r\n\t\tthis._mouseManager.registerView(this);\r\n\r\n//\t\t\tif (this._shareContext)\r\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\r\n\t}\r\n\r\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\r\n\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._pMouseX;\r\n\t}\r\n\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._pMouseY;\r\n\t}\r\n\r\n\tget touchPoints():Array<TouchPoint>\r\n\t{\r\n\t\treturn this._pTouchPoints;\r\n\t}\r\n\r\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\r\n\t}\r\n\r\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\r\n\t}\r\n\r\n\tpublic getLocalTouchPoints(displayObject:DisplayObject):Array<TouchPoint>\r\n\t{\r\n\t\tvar localPosition:Vector3D;\r\n\t\tvar localTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\r\n\r\n\t\tvar len:number = this._pTouchPoints.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tlocalPosition = displayObject.inverseSceneTransform.transformVector(this.unproject(this._pTouchPoints[i].x, this._pTouchPoints[i].y, 1000));\r\n\t\t\tlocalTouchPoints.push(new TouchPoint(localPosition.x, localPosition.y, this._pTouchPoints[i].id));\r\n\t\t}\r\n\r\n\t\treturn localTouchPoints;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get htmlElement():HTMLDivElement\r\n\t{\r\n\t\treturn this._htmlElement;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get renderer():IRenderer\r\n\t{\r\n\t\treturn this._pRenderer;\r\n\t}\r\n\r\n\tpublic set renderer(value:IRenderer)\r\n\t{\r\n\t\tif (this._pRenderer == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pRenderer) {\r\n\t\t\tthis._pRenderer.dispose();\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\t\t}\r\n\r\n\t\tthis._pRenderer = value;\r\n\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\r\n\t\t//reset entity collector\r\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\t//reset back buffer\r\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\r\n\t\tthis._pRenderer.width = this._width;\r\n\t\tthis._pRenderer.height = this._height;\r\n\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shareContext():boolean\r\n\t{\r\n\t\treturn this._shareContext;\r\n\t}\r\n\r\n\tpublic set shareContext(value:boolean)\r\n\t{\r\n\t\tif (this._shareContext == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._shareContext = value;\r\n\r\n\t\tif (this._pRenderer)\r\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backgroundColor():number\r\n\t{\r\n\t\treturn this._backgroundColor;\r\n\t}\r\n\r\n\tpublic set backgroundColor(value:number)\r\n\t{\r\n\t\tif (this._backgroundColor == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundColor = value;\r\n\r\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get backgroundAlpha():number\r\n\t{\r\n\t\treturn this._backgroundAlpha;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set backgroundAlpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._backgroundAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Camera3D}\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\t/**\r\n\t * Set camera that's used to render the scene for this viewport\r\n\t */\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tif (this._pCamera == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\r\n\t\tthis._pCamera = value;\r\n\r\n\t\tif (this._pEntityCollector)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\r\n\r\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {away.containers.Scene3D}\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the scene that's used to render for this viewport\r\n\t */\r\n\tpublic set scene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.removeEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\r\n\r\n\t\tthis._pScene = value;\r\n\r\n\t\tthis._pScene.addEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get deltaTime():number\r\n\t{\r\n\t\treturn this._deltaTime;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.width = value;\r\n\t\tthis._htmlElement.style.width = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.height = value;\r\n\t\tthis._htmlElement.style.height = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get mousePicker():IPicker\r\n\t{\r\n\t\treturn this._mousePicker;\r\n\t}\r\n\r\n\tpublic set mousePicker(value:IPicker)\r\n\t{\r\n\t\tif (this._mousePicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (value == null)\r\n\t\t\tthis._mousePicker = new RaycastPicker();\r\n\t\telse\r\n\t\t\tthis._mousePicker = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._pRenderer.x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.x == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.x == value;\r\n\t\tthis._htmlElement.style.left = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._pRenderer.y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.y == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.y == value;\r\n\t\tthis._htmlElement.style.top = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\r\n\t\t//TODO transfer visible property to associated context (if one exists)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get renderedFacesCount():number\r\n\t{\r\n\t\treturn 0; //TODO\r\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the view.\r\n\t */\r\n\tpublic render()\r\n\t{\r\n\t\tthis.pUpdateTime();\r\n\r\n\t\t//update view and size data\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\r\n\t\tif (this._scissorDirty) {\r\n\t\t\tthis._scissorDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\r\n\t\t}\r\n\r\n\t\tif (this._viewportDirty) {\r\n\t\t\tthis._viewportDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\r\n\t\t}\r\n\r\n\t\t// update picking\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\r\n\t\t\t//_touch3DManager.fireTouchEvents();\r\n\t\t}\r\n\t\t//_touch3DManager.updateCollider();\r\n\r\n\t\t//clear entity collector ready for collection\r\n\t\tthis._pEntityCollector.clear();\r\n\r\n\t\t// collect stuff to render\r\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\r\n\r\n\t\t//render the contents of the entity collector\r\n\t\tthis._pRenderer.render(this._pEntityCollector);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic pUpdateTime():void\r\n\t{\r\n\t\tvar time:number = getTimer();\r\n\r\n\t\tif (this._time == 0)\r\n\t\t\tthis._time = time;\r\n\r\n\t\tthis._deltaTime = time - this._time;\r\n\t\tthis._time = time;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pRenderer.dispose();\r\n\r\n\t\t// TODO: imeplement mouseManager / touch3DManager\r\n\t\tthis._mouseManager.unregisterView(this);\r\n\r\n\t\t//this._touch3DManager.disableTouchListeners(this);\r\n\t\t//this._touch3DManager.dispose();\r\n\r\n\t\tthis._mouseManager = null;\r\n\t\t//this._touch3DManager = null;\r\n\r\n\t\tthis._pRenderer = null;\r\n\t\tthis._pEntityCollector = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get iEntityCollector():CollectorBase\r\n\t{\r\n\t\treturn this._pEntityCollector;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t * @param e\r\n\t */\r\n\tprivate _onPartitionChanged(event:DisplayObjectEvent)\r\n\t{\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _onProjectionChanged(event:CameraEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _onViewportUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _onScissorUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t}\r\n\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\r\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\r\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\r\n\r\n\t}\r\n\r\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\r\n\t}\r\n\r\n\t/* TODO: implement Touch3DManager\r\n\t public get touchPicker():IPicker\r\n\t {\r\n\t return this._touch3DManager.touchPicker;\r\n\t }\r\n\t */\r\n\t/* TODO: implement Touch3DManager\r\n\t public set touchPicker( value:IPicker)\r\n\t {\r\n\t this._touch3DManager.touchPicker = value;\r\n\t }\r\n\t */\r\n\r\n\tpublic forceMouseMove:boolean;\r\n\r\n\t/*TODO: implement Background\r\n\t public get background():away.textures.Texture2DBase\r\n\t {\r\n\t return this._background;\r\n\t }\r\n\t */\r\n\t/*TODO: implement Background\r\n\t public set background( value:away.textures.Texture2DBase )\r\n\t {\r\n\t this._background = value;\r\n\t this._renderer.background = _background;\r\n\t }\r\n\t */\r\n\r\n\t// TODO: required dependency stageGL\r\n\tpublic updateCollider()\r\n\t{\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\t\t} else {\r\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass ControllerBase\r\n{\r\n\tpublic _pControllerDirty:boolean;\r\n\tpublic _pAutoUpdate:boolean = true;\r\n\tpublic _pTargetObject:DisplayObject;\r\n\r\n\tconstructor(targetObject:DisplayObject = null)\r\n\t{\r\n\t\tthis.targetObject = targetObject;\r\n\t}\r\n\r\n\tpublic pNotifyUpdate()\r\n\t{\r\n\t\tif (this._pTargetObject)\r\n\t\t\tthis._pTargetObject.invalidatePartition();\r\n\t}\r\n\r\n\tpublic get targetObject():DisplayObject\r\n\t{\r\n\t\treturn this._pTargetObject;\r\n\t}\r\n\r\n\tpublic set targetObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pTargetObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate)\r\n\t\t\tthis._pTargetObject._iController = null;\r\n\r\n\t\tthis._pTargetObject = val;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate)\r\n\t\t\tthis._pTargetObject._iController = this;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get autoUpdate():boolean\r\n\t{\r\n\t\treturn this._pAutoUpdate;\r\n\t}\r\n\r\n\tpublic set autoUpdate(val:boolean)\r\n\t{\r\n\t\tif (this._pAutoUpdate == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAutoUpdate = val;\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pAutoUpdate)\r\n\t\t\t\tthis._pTargetObject._iController = this;\r\n\t\t\telse\r\n\t\t\t\tthis._pTargetObject._iController = null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic updateController()\r\n\t{\r\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\r\n\t\t\tthis._pControllerDirty = false;\r\n\t\t\tthis.pNotifyUpdate();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\n\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FirstPersonController extends ControllerBase\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic  _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _walkIncrement:number = 0;\r\n\tprivate _strafeIncrement:number = 0;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\r\n\tpublic fly:boolean = false;\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis._pControllerDirty = true;\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\r\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\r\n\r\n\t\tif (this._walkIncrement) {\r\n\t\t\tif (this.fly) {\r\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\r\n\t\t\t} else {\r\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t}\r\n\t\t\tthis._walkIncrement = 0;\r\n\t\t}\r\n\r\n\t\tif (this._strafeIncrement) {\r\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\r\n\t\t\tthis._strafeIncrement = 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic incrementWalk(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._walkIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic incrementStrafe(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._strafeIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n}\r\n\r\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\r\n\r\n/**\r\n * Controller used to follow behind an object on the XZ plane, with an optional\r\n * elevation (tiltAngle).\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FollowController extends HoverController\r\n{\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (!this.lookAtObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away.containers.View\r\n */\r\nclass HoverController extends LookAtController\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _distance:number = 1000;\r\n\tprivate _minPanAngle:number = -Infinity;\r\n\tprivate _maxPanAngle:number = Infinity;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _yFactor:number = 2;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\tprivate _upAxis:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\r\n\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Distance between the camera and the specified target. Defaults to 1000.\r\n\t */\r\n\tpublic get distance():number\r\n\t{\r\n\t\treturn this._distance;\r\n\t}\r\n\r\n\tpublic set distance(val:number)\r\n\t{\r\n\t\tif (this._distance == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._distance = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get minPanAngle():number\r\n\t{\r\n\t\treturn this._minPanAngle;\r\n\t}\r\n\r\n\tpublic set minPanAngle(val:number)\r\n\t{\r\n\t\tif (this._minPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get maxPanAngle():number\r\n\t{\r\n\t\treturn this._maxPanAngle;\r\n\t}\r\n\r\n\tpublic set maxPanAngle(val:number)\r\n\t{\r\n\t\tif (this._maxPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\r\n\t *\r\n\t * @see    #distance\r\n\t */\r\n\tpublic get yFactor():number\r\n\t{\r\n\t\treturn this._yFactor;\r\n\t}\r\n\r\n\tpublic set yFactor(val:number)\r\n\t{\r\n\t\tif (this._yFactor == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._yFactor = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.distance = distance;\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\r\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.yFactor = yFactor;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis._pControllerDirty = true;\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\r\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\r\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\n\r\nclass LookAtController extends ControllerBase\r\n{\r\n\tpublic _pLookAtPosition:Vector3D;\r\n\tpublic _pLookAtObject:DisplayObject;\r\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\r\n\r\n\t\tif (lookAtObject)\r\n\t\t\tthis.lookAtObject = lookAtObject;\r\n\t\telse\r\n\t\t\tthis.lookAtPosition = new Vector3D();\r\n\t}\r\n\r\n\tpublic get lookAtPosition():Vector3D\r\n\t{\r\n\t\treturn this._pLookAtPosition;\r\n\t}\r\n\r\n\tpublic set lookAtPosition(val:Vector3D)\r\n\t{\r\n\t\tif (this._pLookAtObject) {\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\t\t\tthis._pLookAtObject = null;\r\n\t\t}\r\n\r\n\t\tthis._pLookAtPosition = val;\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get lookAtObject():DisplayObject\r\n\t{\r\n\t\treturn this._pLookAtObject;\r\n\t}\r\n\r\n\tpublic set lookAtObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pLookAtPosition)\r\n\t\t\tthis._pLookAtPosition = null;\r\n\r\n\t\tif (this._pLookAtObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis._pLookAtObject = val;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\r\n\t{\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n}\r\n\r\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Uses spring physics to animate the target object towards a position that is\r\n * defined as the lookAtTarget object's position plus the vector defined by the\r\n * positionOffset property.\r\n */\r\nclass SpringController extends LookAtController\r\n{\r\n\tprivate _velocity:Vector3D;\r\n\tprivate _dv:Vector3D;\r\n\tprivate _stretch:Vector3D;\r\n\tprivate _force:Vector3D;\r\n\tprivate _acceleration:Vector3D;\r\n\tprivate _desiredPosition:Vector3D;\r\n\r\n\t/**\r\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic stiffness:number;\r\n\r\n\t/**\r\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic damping:number;\r\n\r\n\t/**\r\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\r\n\t */\r\n\tpublic mass:number;\r\n\r\n\t/**\r\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\r\n\t */\r\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.stiffness = stiffness;\r\n\t\tthis.damping = damping;\r\n\t\tthis.mass = mass;\r\n\r\n\t\tthis._velocity = new Vector3D();\r\n\t\tthis._dv = new Vector3D();\r\n\t\tthis._stretch = new Vector3D();\r\n\t\tthis._force = new Vector3D();\r\n\t\tthis._acceleration = new Vector3D();\r\n\t\tthis._desiredPosition = new Vector3D();\r\n\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tvar offs:Vector3D;\r\n\r\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pControllerDirty = true;\r\n\r\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\r\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\r\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\r\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\r\n\r\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\r\n\t\tthis._stretch.scaleBy(-this.stiffness);\r\n\r\n\t\tthis._dv.copyFrom(this._velocity);\r\n\t\tthis._dv.scaleBy(this.damping);\r\n\r\n\t\tthis._force.x = this._stretch.x - this._dv.x;\r\n\t\tthis._force.y = this._stretch.y - this._dv.y;\r\n\t\tthis._force.z = this._stretch.z - this._dv.z;\r\n\r\n\t\tthis._acceleration.copyFrom(this._force);\r\n\t\tthis._acceleration.scaleBy(1/this.mass);\r\n\r\n\t\tthis._velocity.incrementBy(this._acceleration);\r\n\r\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\r\n\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = SpringController;",
    "/**\r\n * The CapsStyle class is an enumeration of constant values that specify the\r\n * caps style to use in drawing lines. The constants are provided for use as\r\n * values in the <code>caps</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\r\n * following three types of caps:\r\n */\r\nclass CapsStyle\r\n{\r\n\t/**\r\n\t * Used to specify round caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n\r\n\t/**\r\n\t * Used to specify no caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Used to specify square caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static SQUARE:string = \"square\";\r\n}\r\n\r\nexport = CapsStyle;",
    "/**\r\n * The GradientType class provides values for the <code>type</code> parameter\r\n * in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\r\n * class.\r\n */\r\nclass GradientType\r\n{\r\n\t/**\r\n\t * Value used to specify a linear gradient fill.\r\n\t */\r\n\tpublic static LINEAR:string = \"linear\";\r\n\r\n\t/**\r\n\t * Value used to specify a radial gradient fill.\r\n\t */\r\n\tpublic static RADIAL:string = \"radial\";\r\n}\r\n\r\nexport = GradientType;",
    "/**\r\n * The GraphicsPathWinding class provides values for the\r\n * <code>flash.display.GraphicsPath.winding</code> property and the\r\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\r\n * direction to draw a path. A clockwise path is positively wound, and a\r\n * counter-clockwise path is negatively wound:\r\n *\r\n * <p> When paths intersect or overlap, the winding direction determines the\r\n * rules for filling the areas created by the intersection or overlap:</p>\r\n */\r\nclass GraphicsPathWinding\r\n{\r\n\tpublic static EVEN_ODD:string = \"evenOdd\";\r\n\tpublic static NON_ZERO:string = \"nonZero\";\r\n}\r\n\r\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\n\r\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\r\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\r\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\r\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\r\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\r\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\r\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\r\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\r\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\r\n\r\n/**\r\n * The Graphics class contains a set of methods that you can use to create a\r\n * vector shape. Display objects that support drawing include Sprite and Shape\r\n * objects. Each of these classes includes a <code>graphics</code> property\r\n * that is a Graphics object. The following are among those helper functions\r\n * provided for ease of use: <code>drawRect()</code>,\r\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\r\n * <code>drawEllipse()</code>.\r\n *\r\n * <p>You cannot create a Graphics object directly from ActionScript code. If\r\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\r\n *\r\n * <p>The Graphics class is final; it cannot be subclassed.</p>\r\n */\r\nclass Graphics\r\n{\r\n\t/**\r\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\r\n\t * tiled to fill the area. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\r\n\t *               to be displayed.\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the bitmap. For\r\n\t *               example, you can use the following matrix to rotate a bitmap\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\r\n\t *               pattern. If <code>false</code>, the bitmap image does not\r\n\t *               repeat, and the edges of the bitmap are used for any fill\r\n\t *               area that extends beyond the bitmap.\r\n\t *\r\n\t *               <p>For example, consider the following bitmap(a 20 x\r\n\t *               20-pixel checkerboard pattern):</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\r\n\t *               in the following example), the bitmap fill repeats the\r\n\t *               bitmap:</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\r\n\t *               the bitmap fill uses the edge pixels for the fill area\r\n\t *               outside the bitmap:</p>\r\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\r\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\r\n\t *               <code>true</code>, upscaled bitmap images are rendered by\r\n\t *               using a bilinear algorithm. Rendering by using the nearest\r\n\t *               neighbor algorithm is faster.\r\n\t */\r\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\r\n\t * when drawing. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * @param color The color of the fill(0xRRGGBB).\r\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\r\n\t */\r\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\r\n\t * the object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use:\r\n\t *                            <code>GradientType.LINEAR</code> or\r\n\t *                            <code>GradientType.RADIAL</code>.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>beginGradientFill()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use, either:\r\n\t *                            <code>SpreadMethod.PAD</code>,\r\n\t *                            <code>SpreadMethod.REFLECT</code>, or\r\n\t *                            <code>SpreadMethod.REPEAT</code>.\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors:</p>\r\n\t *\r\n\t *                            <p>This example uses\r\n\t *                            <code>SpreadMethod.PAD</code> for the spread\r\n\t *                            method, and the gradient fill looks like the\r\n\t *                            following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use:\r\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\r\n\t *                            <code>InterpolationMethod.RGB</code>\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors(with the\r\n\t *                            <code>spreadMethod</code> parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows: </p>\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. 0 means that the\r\n\t *                            focal point is in the center. 1 means that the\r\n\t *                            focal point is at one border of the gradient\r\n\t *                            circle. -1 means that the focal point is at the\r\n\t *                            other border of the gradient circle. A value\r\n\t *                            less than -1 or greater than 1 is rounded to -1\r\n\t *                            or 1. For example, the following example shows\r\n\t *                            a <code>focalPointRatio</code> set to 0.75:\r\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\r\n\t */\r\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\r\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\r\n\t * object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\r\n\t * be colored cyan.</p>\r\n\t *\r\n\t * @param shader The shader to use for the fill. This Shader instance is not\r\n\t *               required to specify an image input. However, if an image\r\n\t *               input is specified in the shader, the input must be provided\r\n\t *               manually. To specify the input, set the <code>input</code>\r\n\t *               property of the corresponding ShaderInput property of the\r\n\t *               <code>Shader.data</code> property.\r\n\t *\r\n\t *               <p>When you pass a Shader instance as an argument the shader\r\n\t *               is copied internally. The drawing fill operation uses that\r\n\t *               internal copy, not a reference to the original shader. Any\r\n\t *               changes made to the shader, such as changing a parameter\r\n\t *               value, input, or bytecode, are not applied to the copied\r\n\t *               shader that's used for the fill.</p>\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the shader. For\r\n\t *               example, you can use the following matrix to rotate a shader\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t *\r\n\t *               <p>The coordinates received in the shader are based on the\r\n\t *               matrix that is specified for the <code>matrix</code>\r\n\t *               parameter. For a default(<code>null</code>) matrix, the\r\n\t *               coordinates in the shader are local pixel coordinates which\r\n\t *               can be used to sample an input.</p>\r\n\t * @throws ArgumentError When the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\r\n\t * @throws ArgumentError When the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\r\n\t *                       as an input and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput, or the specified values don't match\r\n\t *                       the amount of data in the input object. See the\r\n\t *                       <code>ShaderInput.input</code> property for more\r\n\t *                       information.\r\n\t */\r\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Clears the graphics that were drawn to this Graphics object, and resets\r\n\t * fill and line style settings.\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of drawing commands from the source Graphics object into the\r\n\t * calling Graphics object.\r\n\t *\r\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\r\n\t *                       commands.\r\n\t */\r\n\tpublic copyFrom(sourceGraphics:Graphics)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a cubic Bezier curve from the current drawing position to the\r\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\r\n\t * and two control points. The curve interpolates the two anchor points and\r\n\t * curves toward the two control points.\r\n\t *\r\n\t * The four points you use to draw a cubic Bezier curve with the\r\n\t * <code>cubicCurveTo()</code> method are as follows:\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The current drawing position is the first anchor point. </li>\r\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\r\n\t *   </li>\r\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\r\n\t *   specify the first control point.</li>\r\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\r\n\t *   specify the second control point.</li>\r\n\t * </ul>\r\n\t *\r\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\r\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\r\n\t *\r\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\r\n\t * the current drawing position to (<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\r\n\t * the current drawing position remains unchanged.\r\n\t *\r\n\t * If your movie clip contains content created with the Flash drawing tools,\r\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\r\n\t * underneath that content.\r\n\t *\r\n\t * @param controlX1 Specifies the horizontal position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY1 Specifies the vertical position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlX2 Specifies the horizontal position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY2 Specifies the vertical position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param anchorX   Specifies the horizontal position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t * @param anchorY   Specifies the vertical position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t */\r\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a curve using the current line style from the current drawing\r\n\t * position to(anchorX, anchorY) and using the control point that\r\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\r\n\t * drawing position is then set to(<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\r\n\t * content created with the Flash drawing tools, calls to the\r\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\r\n\t * call the <code>curveTo()</code> method before any calls to the\r\n\t * <code>moveTo()</code> method, the default of the current drawing position\r\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\r\n\t * current drawing position is not changed.\r\n\t *\r\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\r\n\t * consist of two anchor points and one control point. The curve interpolates\r\n\t * the two anchor points and curves toward the control point. </p>\r\n\t *\r\n\t * @param controlX A number that specifies the horizontal position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param controlY A number that specifies the vertical position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param anchorX  A number that specifies the horizontal position of the\r\n\t *                 next anchor point relative to the registration point of\r\n\t *                 the parent display object.\r\n\t * @param anchorY  A number that specifies the vertical position of the next\r\n\t *                 anchor point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t */\r\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a circle. Set the line style, fill, or both before you call the\r\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param y      The <i>y</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param radius The radius of the circle(in pixels).\r\n\t */\r\n\tpublic drawCircle(x:number, y:number, radius:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\r\n\t * <code>drawEllipse()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param width  The width of the ellipse(in pixels).\r\n\t * @param height The height of the ellipse(in pixels).\r\n\t */\r\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of IGraphicsData instances for drawing. This method\r\n\t * accepts a Vector containing objects including paths, fills, and strokes\r\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\r\n\t * instances can refer to a part of a shape, or a complex fully defined set\r\n\t * of data for rendering a complete shape.\r\n\t *\r\n\t * <p> Graphics paths can contain other graphics paths. If the\r\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\r\n\t * sub-paths are rendered during this operation. </p>\r\n\t *\r\n\t */\r\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\r\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\r\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\r\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\r\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\r\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\r\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\r\n\t * coordinate location. The drawing direction is a value from the\r\n\t * GraphicsPathWinding class.\r\n\t *\r\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\r\n\t * with a series of individual <code>lineTo()</code> and\r\n\t * <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\r\n\t * so rotation and scaling of shapes is more accurate and gives better\r\n\t * results. However, curves submitted using the <code>drawPath()</code>\r\n\t * method can have small sub-pixel alignment errors when used in conjunction\r\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\r\n\t * for filling and drawing lines. They are: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>When a fill is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\r\n\t * stroke rendering will still occur, consistent with the rules for strokes\r\n\t * below.)</li>\r\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\r\n\t * begin point) is implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t *   <li>When a stroke is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>The sub-paths can be composed of any number of points.</li>\r\n\t *   <li>The sub-path is never implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t * </ul>\r\n\t *\r\n\t * @param winding Specifies the winding rule using a value defined in the\r\n\t *                GraphicsPathWinding class.\r\n\t */\r\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\r\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      A number indicating the horizontal position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param y      A number indicating the vertical position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param width  The width of the rectangle(in pixels).\r\n\t * @param height The height of the rectangle(in pixels).\r\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\r\n\t *                       parameters are not a number\r\n\t *                      (<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRect(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\r\n\t * call the <code>drawRoundRect()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x             A number indicating the horizontal position relative\r\n\t *                      to the registration point of the parent display\r\n\t *                      object(in pixels).\r\n\t * @param y             A number indicating the vertical position relative to\r\n\t *                      the registration point of the parent display object\r\n\t *                     (in pixels).\r\n\t * @param width         The width of the round rectangle(in pixels).\r\n\t * @param height        The height of the round rectangle(in pixels).\r\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels).\r\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels). Optional; if no value is\r\n\t *                      specified, the default value matches that provided\r\n\t *                      for the <code>ellipseWidth</code> parameter.\r\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\r\n\t *                       <code>ellipseWidth</code> or\r\n\t *                       <code>ellipseHeight</code> parameters are not a\r\n\t *                       number(<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\r\n\t{\r\n\r\n\t}\r\n\r\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\r\n\r\n\t/**\r\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\r\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\r\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\r\n\t * set of(u,v) coordinates.\r\n\t *\r\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\r\n\t * that transform matrix is ignored. </p>\r\n\t *\r\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\r\n\t * bitmap fill is used. </p>\r\n\t *\r\n\t * @param culling Specifies whether to render triangles that face in a\r\n\t *                specified direction. This parameter prevents the rendering\r\n\t *                of triangles that cannot be seen in the current view. This\r\n\t *                parameter can be set to any value defined by the\r\n\t *                TriangleCulling class.\r\n\t */\r\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a fill to the lines and curves that were added since the last call\r\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\r\n\t * specified in the previous call to the <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method. If the current drawing position does not equal the previous\r\n\t * position specified in a <code>moveTo()</code> method and a fill is\r\n\t * defined, the path is closed with a line and then filled.\r\n\t *\r\n\t */\r\n\tpublic endFill()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param bitmap The bitmap to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\r\n\t * @param smooth Whether smoothing should be applied to the bitmap.\r\n\t */\r\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient to use for the stroke when drawing lines.\r\n\t *\r\n\t * <p>The gradient line style is used for subsequent calls to Graphics\r\n\t * methods such as the <code>lineTo()</code> methods or the\r\n\t * <code>drawCircle()</code> method. The line style remains in effect until\r\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\r\n\t * methods, or the <code>lineGradientStyle()</code> method again with\r\n\t * different parameters. </p>\r\n\t *\r\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\r\n\t * of drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use, either\r\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>lineGradientStyle()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use:\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use. For example,\r\n\t *                            consider a simple linear gradient between two\r\n\t *                            colors(with the <code>spreadMethod</code>\r\n\t *                            parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows:\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. The value 0 means\r\n\t *                            the focal point is in the center. The value 1\r\n\t *                            means the focal point is at one border of the\r\n\t *                            gradient circle. The value -1 means that the\r\n\t *                            focal point is at the other border of the\r\n\t *                            gradient circle. Values less than -1 or greater\r\n\t *                            than 1 are rounded to -1 or 1. The following\r\n\t *                            image shows a gradient with a\r\n\t *                            <code>focalPointRatio</code> of -0.75:\r\n\t */\r\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param shader The shader to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t */\r\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Specifies a line style used for subsequent calls to Graphics methods such\r\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineGradientStyle()</code> method, the\r\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\r\n\t * method with different parameters.\r\n\t *\r\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within the path.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\r\n\t * style back to <code>undefined</code>.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\r\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\r\n\t *\r\n\t * @param thickness    An integer that indicates the thickness of the line in\r\n\t *                     points; valid values are 0-255. If a number is not\r\n\t *                     specified, or if the parameter is undefined, a line is\r\n\t *                     not drawn. If a value of less than 0 is passed, the\r\n\t *                     default is 0. The value 0 indicates hairline\r\n\t *                     thickness; the maximum thickness is 255. If a value\r\n\t *                     greater than 255 is passed, the default is 255.\r\n\t * @param color        A hexadecimal color value of the line; for example,\r\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\r\n\t *                     value is not indicated, the default is 0x000000\r\n\t *                    (black). Optional.\r\n\t * @param alpha        A number that indicates the alpha value of the color\r\n\t *                     of the line; valid values are 0 to 1. If a value is\r\n\t *                     not indicated, the default is 1(solid). If the value\r\n\t *                     is less than 0, the default is 0. If the value is\r\n\t *                     greater than 1, the default is 1.\r\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\r\n\t *                     specifies whether to hint strokes to full pixels. This\r\n\t *                     affects both the position of anchors of a curve and\r\n\t *                     the line stroke size itself. With\r\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\r\n\t *                     line widths are adjusted to full pixel widths. With\r\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\r\n\t *                     disjoints can appear for curves and straight lines.\r\n\t *                     For example, the following illustrations show how\r\n\t *                     Flash Player or Adobe AIR renders two rounded\r\n\t *                     rectangles that are identical, except that the\r\n\t *                     <code>pixelHinting</code> parameter used in the\r\n\t *                     <code>lineStyle()</code> method is set differently\r\n\t *                    (the images are scaled by 200%, to emphasize the\r\n\t *                     difference):\r\n\t *\r\n\t *                     <p>If a value is not supplied, the line does not use\r\n\t *                     pixel hinting.</p>\r\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\r\n\t *                     LineScaleMode class that specifies which scale mode to\r\n\t *                     use:\r\n\t *                     <ul>\r\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\r\n\t *                     scale the line thickness when the object is scaled\r\n\t *                    (the default). </li>\r\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\r\n\t *                     the line thickness. </li>\r\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     vertically <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\r\n\t *                     left is scaled vertically only, and the circle on the\r\n\t *                     right is scaled both vertically and horizontally:\r\n\t *                     </li>\r\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     horizontally <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\r\n\t *                     the left is scaled horizontally only, and the circle\r\n\t *                     on the right is scaled both vertically and\r\n\t *                     horizontally:   </li>\r\n\t *                     </ul>\r\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\r\n\t *                     CapsStyle class that specifies the type of caps at the\r\n\t *                     end of lines. Valid values are:\r\n\t *                     <code>CapsStyle.NONE</code>,\r\n\t *                     <code>CapsStyle.ROUND</code>, and\r\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\r\n\t *                     indicated, Flash uses round caps.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>capsStyle</code> settings. For each\r\n\t *                     setting, the illustration shows a blue line with a\r\n\t *                     thickness of 30(for which the <code>capsStyle</code>\r\n\t *                     applies), and a superimposed black line with a\r\n\t *                     thickness of 1(for which no <code>capsStyle</code>\r\n\t *                     applies): </p>\r\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\r\n\t *                     JointStyle class that specifies the type of joint\r\n\t *                     appearance used at angles. Valid values are:\r\n\t *                     <code>JointStyle.BEVEL</code>,\r\n\t *                     <code>JointStyle.MITER</code>, and\r\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\r\n\t *                     indicated, Flash uses round joints.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>joints</code> settings. For each\r\n\t *                     setting, the illustration shows an angled blue line\r\n\t *                     with a thickness of 30(for which the\r\n\t *                     <code>jointStyle</code> applies), and a superimposed\r\n\t *                     angled black line with a thickness of 1(for which no\r\n\t *                     <code>jointStyle</code> applies): </p>\r\n\t *\r\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\r\n\t *                     <code>JointStyle.MITER</code>, you can use the\r\n\t *                     <code>miterLimit</code> parameter to limit the length\r\n\t *                     of the miter.</p>\r\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\r\n\t *                     indicates the limit at which a miter is cut off. Valid\r\n\t *                     values range from 1 to 255(and values outside that\r\n\t *                     range are rounded to 1 or 255). This value is only\r\n\t *                     used if the <code>jointStyle</code> is set to\r\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\r\n\t *                     value represents the length that a miter can extend\r\n\t *                     beyond the point at which the lines meet to form a\r\n\t *                     joint. The value expresses a factor of the line\r\n\t *                     <code>thickness</code>. For example, with a\r\n\t *                     <code>miterLimit</code> factor of 2.5 and a\r\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\r\n\t *                     off at 25 pixels.\r\n\t *\r\n\t *                     <p>For example, consider the following angled lines,\r\n\t *                     each drawn with a <code>thickness</code> of 20, but\r\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\r\n\t *                     Superimposed are black reference lines showing the\r\n\t *                     meeting points of the joints:</p>\r\n\t *\r\n\t *                     <p>Notice that a given <code>miterLimit</code> value\r\n\t *                     has a specific maximum angle for which the miter is\r\n\t *                     cut off. The following table lists some examples:</p>\r\n\t */\r\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a line using the current line style from the current drawing\r\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\r\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\r\n\t * which you are drawing contains content that was created with the Flash\r\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\r\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\r\n\t * to the <code>moveTo()</code> method, the default position for the current\r\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\r\n\t * method fails and the current drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic lineTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\r\n\t * any of the parameters are missing, this method fails and the current\r\n\t * drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic moveTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = Graphics;",
    "/**\r\n * The InterpolationMethod class provides values for the\r\n * <code>interpolationMethod</code> parameter in the\r\n * <code>Graphics.beginGradientFill()</code> and\r\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\r\n * determines the RGB space to use when rendering the gradient.\r\n */\r\nclass InterpolationMethod\r\n{\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static RGB:string = \"rgb\";\r\n}\r\n\r\nexport = InterpolationMethod;",
    "/**\r\n * The JointStyle class is an enumeration of constant values that specify the\r\n * joint style to use in drawing lines. These constants are provided for use\r\n * as values in the <code>joints</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\r\n * three types of joints: miter, round, and bevel, as the following example\r\n * shows:\r\n */\r\nclass JointStyle\r\n{\r\n\t/**\r\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static BEVEL:string = \"bevel\";\r\n\r\n\t/**\r\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static MITER:string = \"miter\";\r\n\r\n\t/**\r\n\t * Specifies round joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n}\r\n\r\nexport = JointStyle;",
    "/**\r\n * The LineScaleMode class provides values for the <code>scaleMode</code>\r\n * parameter in the <code>Graphics.lineStyle()</code> method.\r\n */\r\nclass LineScaleMode\r\n{\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\r\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\r\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\r\n\t * scaled only vertically, and the circle on the right is scaled both\r\n\t * vertically and horizontally.\r\n\t */\r\n\tpublic static HORIZONTAL:string = \"horizontal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\r\n\t * when the object is scaled(the default).\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> horizontally. For example, consider the following circles,\r\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\r\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\r\n\t * left is scaled only horizontally, and the circle on the right is scaled\r\n\t * both vertically and horizontally.\r\n\t */\r\n\tpublic static VERTICAL:string = \"vertical\";\r\n}\r\n\r\nexport = LineScaleMode;",
    "/**\r\n * The PixelSnapping class is an enumeration of constant values for setting\r\n * the pixel snapping options by using the <code>pixelSnapping</code> property\r\n * of a Bitmap object.\r\n */\r\nclass PixelSnapping\r\n{\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is always snapped to the\r\n\t * nearest pixel, independent of any transformation.\r\n\t */\r\n\tpublic static ALWAYS:string = \"always\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\r\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\r\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\r\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\r\n\t * setting allows the image to be drawn as fast as possible by using the\r\n\t * vector renderer.\r\n\t */\r\n\tpublic static AUTO:string = \"auto\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that no pixel snapping occurs.\r\n\t */\r\n\tpublic static NEVER:string = \"never\";\r\n}\r\n\r\nexport = PixelSnapping;",
    "/**\r\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\r\n * parameter in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the Graphics class.\r\n *\r\n * <p>The following example shows the same gradient fill using various spread\r\n * methods:</p>\r\n */\r\nclass SpreadMethod\r\n{\r\n\t/**\r\n\t * Specifies that the gradient use the <i>pad</i> spread method.\r\n\t */\r\n\tpublic static PAD:string = \"pad\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\r\n\t */\r\n\tpublic static REFLECT:string = \"reflect\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\r\n\t */\r\n\tpublic static REPEAT:string = \"repeat\";\r\n}\r\n\r\nexport = SpreadMethod;",
    "/**\r\n * Defines codes for culling algorithms that determine which triangles not to\r\n * render when drawing triangle paths.\r\n *\r\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\r\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\r\n * that is perpendicular to the surface of the triangle. </p>\r\n *\r\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\r\n * has a positive normal value. That is, its normal points in a positive\r\n * z-axis direction, away from the current view point. When the\r\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\r\n * positive normals are not rendered. Another term for this is backface\r\n * culling. </p>\r\n *\r\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\r\n * a negative normal value. That is, its normal points in a negative z-axis\r\n * direction, toward the current view point. When the\r\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\r\n * negative normals will not be rendered. </p>\r\n */\r\nclass TriangleCulling\r\n{\r\n\t/**\r\n\t * Specifies culling of all triangles facing toward the current view point.\r\n\t */\r\n\tpublic static NEGATIVE:string = \"negative\";\r\n\r\n\t/**\r\n\t * Specifies no culling. All triangles in the path are rendered.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies culling of all triangles facing away from the current view\r\n\t * point. This is also known as backface culling.\r\n\t */\r\n\tpublic static POSITIVE:string = \"positive\";\r\n}\r\n\r\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * The Billboard class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Billboard()</code> constructor.\r\n *\r\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\r\n * object that contains a reference to a Image2D object. After you create a\r\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Billboard object can share its Image2D reference among several Billboard\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Billboard objects that reference the same Image2D object,\r\n * multiple display objects can use the same complex Image2D object without\r\n * incurring the memory overhead of a Image2D object for each display\r\n * object instance.</p>\r\n *\r\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\r\n * of two ways: by using the default hardware renderer with a single hardware surface,\r\n * or by using the slower software renderer when 3D acceleration is not available.</p>\r\n *\r\n * <p>If you would prefer to perform a batch rendering command, rather than using a\r\n * single surface for each Billboard object, you can also draw to the screen using the\r\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\r\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\r\n * objects.</code></p>\r\n *\r\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\r\n * class, so it cannot dispatch mouse events. However, you can use the\r\n * <code>addEventListener()</code> method of the display object container that\r\n * contains the Billboard object.</p>\r\n */\r\n\r\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Billboard]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _billboardWidth:number;\r\n\tprivate _billboardHeight:number;\r\n\tprivate _billboardRect:Rectangle;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _parentColorTransform:ColorTransform;\r\n\r\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\r\n\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Billboard.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Image2D object being referenced.\r\n\t */\r\n\tpublic image2D:Image2D; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardRect():Rectangle\r\n\t{\r\n\t\treturn this._billboardRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardHeight():number\r\n\t{\r\n\t\treturn this._billboardHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardWidth():number\r\n\t{\r\n\t\treturn this._billboardWidth;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iRemoveOwner(this);\r\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iAddOwner(this);\r\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\r\n\t * This value is ignored in the native and HTML5 targets.\r\n\t * The PixelSnapping class includes possible values:\r\n\t * <ul>\r\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\r\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\r\n\t * the nearest pixel, independent of transformation.</li>\r\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\r\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\r\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\r\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\r\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\r\n\t * as possible using the internal vector renderer.</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic pixelSnapping:string; //TODO\r\n\r\n\t/**\r\n\t * Controls whether or not the bitmap is smoothed when scaled. If\r\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\r\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\r\n\t */\r\n\tpublic smoothing:boolean; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\t// outputs the concaneted color-transform\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// set this on the inheritet colorTransform\r\n\t\tthis.transform.colorTransform = value;\r\n\t\t// new calculate the concaneted transform\r\n\t\tthis._applyColorTransform();\r\n\r\n\t}\r\n\r\n\tpublic get parentColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._parentColorTransform;\r\n\t}\r\n\r\n\tpublic set parentColorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\r\n\t\tthis._parentColorTransform = value;\r\n\t\tthis._applyColorTransform();\r\n\t}\r\n\r\n\tprivate _applyColorTransform()\r\n\t{\r\n\t\tthis._colorTransform=new ColorTransform();\r\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\r\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this.transform.colorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this._parentColorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t\tthis._billboardHeight = material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\r\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Billboard = new Billboard(this.material);\r\n\t\treturn clone;\r\n\t}\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate onSizeChanged(event:MaterialEvent)\r\n\t{\r\n\t\tthis._billboardWidth = this._material.width;\r\n\t\tthis._billboardHeight = this._material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n}\r\n\r\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\n\r\n\r\nclass Camera extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Camera]\";\r\n\r\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\r\n\tprivate _viewProjectionDirty:Boolean = true;\r\n\tprivate _projection:IProjection;\r\n\tprivate _frustumPlanes:Array<Plane3D>;\r\n\tprivate _frustumPlanesDirty:Boolean = true;\r\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\r\n\r\n\tconstructor(projection:IProjection = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\r\n\r\n\t\tthis._projection = projection || new PerspectiveProjection();\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\r\n\t\tthis._frustumPlanes = [];\r\n\r\n\t\tfor (var i:number = 0; i < 6; ++i)\r\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\r\n\r\n\t\tthis.z = -1000;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Camera.assetType;\r\n\t}\r\n\r\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\r\n\t{\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic get frustumPlanes():Array<Plane3D>\r\n\t{\r\n\t\tif (this._frustumPlanesDirty)\r\n\t\t\tthis.updateFrustum();\r\n\r\n\t\treturn this._frustumPlanes;\r\n\t}\r\n\r\n\tprivate updateFrustum()\r\n\t{\r\n\t\tvar a:number, b:number, c:number;\r\n\t\t//var d : Number;\r\n\t\tvar c11:number, c12:number, c13:number, c14:number;\r\n\t\tvar c21:number, c22:number, c23:number, c24:number;\r\n\t\tvar c31:number, c32:number, c33:number, c34:number;\r\n\t\tvar c41:number, c42:number, c43:number, c44:number;\r\n\t\tvar p:Plane3D;\r\n\t\tvar raw:Float32Array = this.viewProjection.rawData;\r\n\t\tvar invLen:number;\r\n\r\n\t\tc11 = raw[0];\r\n\t\tc12 = raw[4];\r\n\t\tc13 = raw[8];\r\n\t\tc14 = raw[12];\r\n\t\tc21 = raw[1];\r\n\t\tc22 = raw[5];\r\n\t\tc23 = raw[9];\r\n\t\tc24 = raw[13];\r\n\t\tc31 = raw[2];\r\n\t\tc32 = raw[6];\r\n\t\tc33 = raw[10];\r\n\t\tc34 = raw[14];\r\n\t\tc41 = raw[3];\r\n\t\tc42 = raw[7];\r\n\t\tc43 = raw[11];\r\n\t\tc44 = raw[15];\r\n\r\n\t\t// left plane\r\n\t\tp = this._frustumPlanes[0];\r\n\t\ta = c41 + c11;\r\n\t\tb = c42 + c12;\r\n\t\tc = c43 + c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c14)*invLen;\r\n\r\n\t\t// right plane\r\n\t\tp = this._frustumPlanes[1];\r\n\t\ta = c41 - c11;\r\n\t\tb = c42 - c12;\r\n\t\tc = c43 - c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c14 - c44)*invLen;\r\n\r\n\t\t// bottom\r\n\t\tp = this._frustumPlanes[2];\r\n\t\ta = c41 + c21;\r\n\t\tb = c42 + c22;\r\n\t\tc = c43 + c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c24)*invLen;\r\n\r\n\t\t// top\r\n\t\tp = this._frustumPlanes[3];\r\n\t\ta = c41 - c21;\r\n\t\tb = c42 - c22;\r\n\t\tc = c43 - c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c24 - c44)*invLen;\r\n\r\n\t\t// near\r\n\t\tp = this._frustumPlanes[4];\r\n\t\ta = c31;\r\n\t\tb = c32;\r\n\t\tc = c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -c34*invLen;\r\n\r\n\t\t// far\r\n\t\tp = this._frustumPlanes[5];\r\n\t\ta = c41 - c31;\r\n\t\tb = c42 - c32;\r\n\t\tc = c43 - c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c34 - c44)*invLen;\r\n\r\n\t\tthis._frustumPlanesDirty = false;\r\n\r\n\t}\r\n\r\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number):boolean\r\n\t{\r\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\r\n\t\t\treturn true;\r\n\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM) {\r\n\t\t\tthis._viewProjectionDirty = true;\r\n\t\t\tthis._frustumPlanesDirty = true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get projection():IProjection\r\n\t{\r\n\t\treturn this._projection;\r\n\t}\r\n\r\n\tpublic set projection(value:IProjection)\r\n\t{\r\n\t\tif (this._projection == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!value)\r\n\t\t\tthrow new Error(\"Projection cannot be null!\");\r\n\r\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis._projection = value;\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get viewProjection():Matrix3D\r\n\t{\r\n\t\tif (this._viewProjectionDirty) {\r\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\r\n\t\t\tthis._viewProjection.append(this._projection.matrix);\r\n\t\t\tthis._viewProjectionDirty = false;\r\n\t\t}\r\n\r\n\t\treturn this._viewProjection;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\r\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\r\n\t */\r\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the normalised position in screen space of the given scene position.\r\n\t *\r\n\t * @param point3d the position vector of the scene coordinates to be projected.\r\n\t * @return The normalised screen position of the given scene coordinates.\r\n\t */\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the scene position of the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\r\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The scene position of the given screen coordinates.\r\n\t */\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//nothing to do here\r\n\t}\r\n}\r\n\r\nexport = Camera;",
    "import Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass DirectionalLight extends LightBase implements IEntity\r\n{\r\n\tprivate _direction:Vector3D;\r\n\tprivate _tmpLookAt:Vector3D;\r\n\tprivate _sceneDirection:Vector3D;\r\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\r\n\tprivate _projAABBPoints:Array<number>;\r\n\r\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\r\n\r\n\t\tthis._sceneDirection = new Vector3D();\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get sceneDirection():Vector3D\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._sceneDirection;\r\n\t}\r\n\r\n\tpublic get direction():Vector3D\r\n\t{\r\n\t\treturn this._direction;\r\n\t}\r\n\r\n\tpublic set direction(value:Vector3D)\r\n\t{\r\n\t\tthis._direction = value;\r\n\r\n\t\tif (!this._tmpLookAt)\r\n\t\t\tthis._tmpLookAt = new Vector3D();\r\n\r\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\r\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\r\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\r\n\r\n\t\tthis.lookAt(this._tmpLookAt);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tsuper.pUpdateSceneTransform();\r\n\r\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\r\n\r\n\t\tthis._sceneDirection.normalize();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\r\n\t{\r\n\t\treturn new DirectionalShadowMapper();\r\n\t}\r\n\r\n\t//override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tif (!this._projAABBPoints)\r\n\t\t\tthis._projAABBPoints = [];\r\n\r\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\r\n\r\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\r\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\r\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\r\n\t\tvar d:number;\r\n\t\tfor (var i:number = 0; i < 24;) {\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < xMin)\r\n\t\t\t\txMin = d;\r\n\r\n\t\t\tif (d > xMax)\r\n\t\t\t\txMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < yMin)\r\n\t\t\t\tyMin = d;\r\n\r\n\t\t\tif (d > yMax)\r\n\t\t\t\tyMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < zMin)\r\n\t\t\t\tzMin = d;\r\n\r\n\t\t\tif (d > zMax)\r\n\t\t\t\tzMax = d;\r\n\t\t}\r\n\r\n\t\tvar invXRange:number = 1/(xMax - xMin);\r\n\t\tvar invYRange:number = 1/(yMax - yMin);\r\n\t\tvar invZRange:number = 1/(zMax - zMin);\r\n\t\traw[0] = 2*invXRange;\r\n\t\traw[5] = 2*invYRange;\r\n\t\traw[10] = invZRange;\r\n\t\traw[12] = -(xMax + xMin)*invXRange;\r\n\t\traw[13] = -(yMax + yMin)*invYRange;\r\n\t\traw[14] = -zMin*invZRange;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\t//update points\r\n\t\tvar minX:number = this._pBoxBounds.x;\r\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\r\n\t\tvar minZ:number = this._pBoxBounds.z;\r\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\r\n\t\tvar maxY:number = this._pBoxBounds.y;\r\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\r\n\r\n\t\tthis._pAabbPoints[0] = minX;\r\n\t\tthis._pAabbPoints[1] = minY;\r\n\t\tthis._pAabbPoints[2] = minZ;\r\n\t\tthis._pAabbPoints[3] = maxX;\r\n\t\tthis._pAabbPoints[4] = minY;\r\n\t\tthis._pAabbPoints[5] = minZ;\r\n\t\tthis._pAabbPoints[6] = minX;\r\n\t\tthis._pAabbPoints[7] = maxY;\r\n\t\tthis._pAabbPoints[8] = minZ;\r\n\t\tthis._pAabbPoints[9] = maxX;\r\n\t\tthis._pAabbPoints[10] = maxY;\r\n\t\tthis._pAabbPoints[11] = minZ;\r\n\t\tthis._pAabbPoints[12] = minX;\r\n\t\tthis._pAabbPoints[13] = minY;\r\n\t\tthis._pAabbPoints[14] = maxZ;\r\n\t\tthis._pAabbPoints[15] = maxX;\r\n\t\tthis._pAabbPoints[16] = minY;\r\n\t\tthis._pAabbPoints[17] = maxZ;\r\n\t\tthis._pAabbPoints[18] = minX;\r\n\t\tthis._pAabbPoints[19] = maxY;\r\n\t\tthis._pAabbPoints[20] = maxZ;\r\n\t\tthis._pAabbPoints[21] = maxX;\r\n\t\tthis._pAabbPoints[22] = maxY;\r\n\t\tthis._pAabbPoints[23] = maxZ;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\nclass LightProbe extends LightBase implements IEntity\r\n{\r\n\tprivate _diffuseMap:ImageCube;\r\n\tprivate _specularMap:ImageCube;\r\n\r\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._diffuseMap = diffuseMap;\r\n\t\tthis._specularMap = specularMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get diffuseMap():ImageCube\r\n\t{\r\n\t\treturn this._diffuseMap;\r\n\t}\r\n\r\n\tpublic set diffuseMap(value:ImageCube)\r\n\t{\r\n\t\tthis._diffuseMap = value;\r\n\t}\r\n\r\n\tpublic get specularMap():ImageCube\r\n\t{\r\n\t\treturn this._specularMap;\r\n\t}\r\n\r\n\tpublic set specularMap(value:ImageCube)\r\n\t{\r\n\t\tthis._specularMap = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\r\n\t}\r\n}\r\n\r\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A Line Segment primitive.\r\n */\r\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset LineSegment]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\r\n\tpublic _startPosition:Vector3D;\r\n\tpublic _endPosition:Vector3D;\r\n\tpublic _halfThickness:number;\r\n\r\n\t/**\r\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSegment.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startPostion():Vector3D\r\n\t{\r\n\t\treturn this._startPosition;\r\n\t}\r\n\r\n\tpublic set startPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._startPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._startPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endPosition():Vector3D\r\n\t{\r\n\t\treturn this._endPosition;\r\n\t}\r\n\r\n\tpublic set endPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._endPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._endPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():number\r\n\t{\r\n\t\treturn this._halfThickness*2;\r\n\t}\r\n\r\n\tpublic set thickness(value:number)\r\n\t{\r\n\t\tif (this._halfThickness == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._halfThickness = value*0.5;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a line segment\r\n\t *\r\n\t * @param startPosition Start position of the line segment\r\n\t * @param endPosition Ending position of the line segment\r\n\t * @param thickness Thickness of the line\r\n\t */\r\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._startPosition = startPosition;\r\n\t\tthis._endPosition = endPosition;\r\n\t\tthis._halfThickness = thickness*0.5;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._startPosition = null;\r\n\t\tthis._endPosition = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\r\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\r\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\r\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\r\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\r\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\r\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\r\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\r\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\r\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\r\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRenderableUpdate()\r\n\t{\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n}\r\n\r\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\n\r\n/**\r\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\r\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\r\n * of the geometry to be assigned different materials.\r\n */\r\nclass Mesh extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Mesh]\";\r\n\r\n\tprivate _uvTransform:UVTransform;\r\n\r\n\tprivate _subMeshes:Array<ISubMesh>;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _animator:IAnimator;\r\n\tprivate _castsShadows:boolean = true;\r\n\tprivate _shareAnimationGeometry:boolean = true;\r\n\r\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\r\n\r\n\t//temp point used in hit testing\r\n\tprivate _tempPoint:Point = new Point();\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\tpublic set animator(value:IAnimator)\r\n\t{\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.removeOwner(this);\r\n\r\n\t\tthis._animator = value;\r\n\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\r\n\t\t\tif (subMesh.material) {\r\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\r\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\r\n\t\t\t}\r\n\r\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\r\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\r\n\t\t}\r\n\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.addOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Mesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\r\n\t */\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tthis._castsShadows = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The geometry used by the mesh that provides it with its shape.\r\n\t */\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\tpublic set geometry(value:Geometry)\r\n\t{\r\n\t\tvar i:number;\r\n\r\n\t\tif (this._geometry) {\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\r\n\t\t\t\tthis._subMeshes[i].dispose();\r\n\r\n\t\t\tthis._subMeshes.length = 0;\r\n\t\t}\r\n\r\n\t\tthis._geometry = value;\r\n\r\n\t\tif (this._geometry) {\r\n\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\r\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\r\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the Mesh.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tvar i:number;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iAddOwner(subMesh);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the mesh share the same animation geometry.\r\n\t */\r\n\tpublic get shareAnimationGeometry():boolean\r\n\t{\r\n\t\treturn this._shareAnimationGeometry;\r\n\t}\r\n\r\n\tpublic set shareAnimationGeometry(value:boolean)\r\n\t{\r\n\t\tthis._shareAnimationGeometry = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\r\n\t * material.\r\n\t */\r\n\tpublic get subMeshes():Array<ISubMesh>\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._subMeshes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Mesh object.\r\n\t *\r\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\r\n\t * @param material    [optional]        The material with which to render the Mesh.\r\n\t */\r\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._subMeshes = new Array<ISubMesh>();\r\n\r\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\r\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\r\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\r\n\r\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\r\n\t\tthis.geometry = geometry || new Geometry();\r\n\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic bakeTransformations()\r\n\t{\r\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\r\n\t\tthis._iMatrix3D.identity();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis.material = null;\r\n\t\tthis.geometry = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\r\n\t * @return\r\n\t */\r\n\tpublic disposeWithAnimatorAndChildren()\r\n\t{\r\n\t\tthis.disposeWithChildren();\r\n\r\n\t\t if (this._animator)\r\n\t\t\tthis._animator.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Clones this Mesh instance along with all it's children, while re-using the same\r\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\r\n\t * containing copies of all of it's children.\r\n\t *\r\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\r\n\t * geometry, and material. Properties that are cloned or created anew for the copy\r\n\t * include subMeshes, children of the mesh, and the animator.\r\n\t *\r\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\r\n\t * cloning it's children, the simplest way is to create a new mesh manually:\r\n\t *\r\n\t * <code>\r\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\r\n\t * </code>\r\n\t */\r\n\tpublic clone():Mesh\r\n\t{\r\n\t\tvar newInstance:Mesh = new Mesh(this._geometry, this._material);\r\n\r\n\t\tthis.copyTo(newInstance);\r\n\r\n\t\treturn newInstance;\r\n\t}\r\n\r\n\tpublic copyTo(newInstance:Mesh)\r\n\t{\r\n\t\tsuper.copyTo(newInstance);\r\n\r\n\t\tnewInstance.geometry = this._geometry;\r\n\t\tnewInstance.material = this._material;\r\n\t\tnewInstance.castsShadows = this._castsShadows;\r\n\t\tnewInstance.shareAnimationGeometry = this._shareAnimationGeometry;\r\n\r\n        var len:number = this._subMeshes.length;\r\n        for (var i:number = 0; i < len; ++i)\r\n\t\t\tnewInstance._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n        if (this._animator)\r\n\t\t\tnewInstance.animator = this._animator.clone();\r\n    }\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param subGeometry\r\n\t * @returns {SubMeshBase}\r\n\t */\r\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\r\n\t{\r\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\t\tvar tmp_maxZ:number, tmp_minZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\r\n\t\t\tif (this.numChildren) {\r\n\t\t\t\tmaxX = this._pBoxBounds.width + (minX = this._pBoxBounds.x);\r\n\t\t\t\tmaxY = this._pBoxBounds.height + (minY = this._pBoxBounds.y);\r\n\t\t\t\tmaxZ = this._pBoxBounds.depth + (minZ = this._pBoxBounds.z);\r\n\t\t\t\ttmp_maxZ = this._pBoxBounds.depth + (tmp_minZ = this._pBoxBounds.z);\r\n\t\t\t} else {\r\n\t\t\t\tminX = maxX = boundingPositions[i];\r\n\t\t\t\tminY = maxY = boundingPositions[i + 1];\r\n\t\t\t\tif(subGeom.isAsset(CurveSubGeometry)){\r\n\t\t\t\t\tminZ = maxZ = 0;\r\n\t\t\t\t\ttmp_minZ = tmp_maxZ = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\ttmp_minZ = tmp_maxZ = boundingPositions[i + 2];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\t\t\t\tfor (i = 0; i < len; i+=3) {\r\n\t\t\t\t\tp = boundingPositions[i];\r\n\t\t\t\t\tif (p < minX)\r\n\t\t\t\t\t\tminX = p;\r\n\t\t\t\t\telse if (p > maxX)\r\n\t\t\t\t\t\tmaxX = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 1];\r\n\r\n\t\t\t\t\tif (p < minY)\r\n\t\t\t\t\t\tminY = p;\r\n\t\t\t\t\telse if (p > maxY)\r\n\t\t\t\t\t\tmaxY = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 2];\r\n\r\n\t\t\t\t\tif (p < tmp_minZ)\r\n\t\t\t\t\t\ttmp_minZ = p;\r\n\t\t\t\t\telse if (p > tmp_maxZ)\r\n\t\t\t\t\t\ttmp_maxZ = p;\r\n\t\t\t\t}\r\n\t\t\t\tif(!(subGeom.isAsset(CurveSubGeometry))){\r\n\t\t\t\t\tminZ = tmp_minZ;\r\n\t\t\t\t\tmaxZ = tmp_maxZ;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tvar centerX:number = box.x + box.width/2;\r\n\t\tvar centerY:number = box.y + box.height/2;\r\n\t\tvar centerZ:number = box.z + box.depth/2;\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar maxRadiusSquared:number = 0;\r\n\t\tvar radiusSquared:number;\r\n\t\tvar distanceX:number;\r\n\t\tvar distanceY:number;\r\n\t\tvar distanceZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i += 3) {\r\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\r\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\r\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\r\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\r\n\r\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\r\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._pSphereBounds.x = centerX;\r\n\t\tthis._pSphereBounds.y = centerY;\r\n\t\tthis._pSphereBounds.z = centerZ;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\r\n\t{\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was added to the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryAdded(event:GeometryEvent)\r\n\t{\r\n\t\tthis.addSubMesh(event.subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was removed from the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\r\n\t{\r\n\t\tvar subMesh:ISubMesh;\r\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar i:number;\r\n\r\n\t\t// Important! This has to be done here, and not delayed until the\r\n\t\t// next render loop, since this may be caused by the geometry being\r\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\r\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry == subGeom) {\r\n\t\t\t\tsubMesh.dispose();\r\n\r\n\t\t\t\tthis._subMeshes.splice(i, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t--len;\r\n\t\tfor (; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iIndex = i;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a SubMeshBase wrapping a SubGeometry.\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\r\n\r\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\r\n\t\tvar len:number = this._subMeshes.length;\r\n\r\n\t\tsubMesh._iIndex = len;\r\n\r\n\t\tthis._subMeshes[len] = subMesh;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\r\n\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tvar len:number = this.subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this.subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\r\n\r\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\r\n\r\n\t\t\t\tif (!findClosest)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\r\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometries()\r\n\t{\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\r\n\t}\r\n\r\n\r\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\r\n\t{\r\n\t\tif(this._geometry && this._geometry.subGeometries.length) {\r\n\t\t\tthis._tempPoint.setTo(x,y);\r\n\t\t\tvar local:Point = this.globalToLocal(this._tempPoint, this._tempPoint);\r\n\t\t\tvar box:Box;\r\n\r\n\t\t\t//early out for box test\r\n\t\t\tif(!(box = this.getBox()).contains(local.x, local.y, 0))\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t//early out for non-shape tests\r\n\t\t\tif (!shapeFlag)\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t//ok do the geometry thing\r\n\t\t\tvar subGeometries:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\t\tvar subGeometriesCount:number = subGeometries.length;\r\n\t\t\tfor(var i:number = 0; i < subGeometriesCount; i++)\r\n\t\t\t\tif (SubGeometryUtils.hitTestCurveGeometry(local.x, local.y, 0, box, <CurveSubGeometry> subGeometries[i]))\r\n\t\t\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn super._hitTestPointInternal(x, y, shapeFlag, masksFlag);\r\n\t}\r\n}\r\n\r\nexport = Mesh;",
    "import Event = require(\"awayjs-core/lib/events/Event\");\r\nimport AssetEvent = require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport ColorTransform = require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport IAsset = require(\"awayjs-core/lib/library/IAsset\");\r\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Mesh = require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Billboard = require(\"awayjs-display/lib/entities/Billboard\");\r\n\r\nimport MouseEvent = require(\"awayjs-display/lib/events/MouseEvent\");\r\n\r\nimport IMovieClipAdapter\t\t= require(\"awayjs-display/lib/adapters/IMovieClipAdapter\");\r\nimport Timeline = require(\"awayjs-display/lib/base/Timeline\");\r\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\r\n\r\nclass MovieClip extends DisplayObjectContainer\r\n{\r\n    public static assetType:string = \"[asset MovieClip]\";\r\n\r\n    private _timeline:Timeline;\r\n\r\n    private _isButton:boolean;\r\n    private _onMouseOver:(event:MouseEvent) => void;\r\n    private _onMouseOut:(event:MouseEvent) => void;\r\n    private _onMouseDown:(event:MouseEvent) => void;\r\n    private _onMouseUp:(event:MouseEvent) => void;\r\n\r\n    private _time:number;// the current time inside the animation\r\n    private _currentFrameIndex:number;// the current frame\r\n\r\n    private _isPlaying:boolean;// false if paused or stopped\r\n\r\n    // not sure if needed\r\n    private _enterFrame:Event;\r\n    private _skipAdvance : boolean;\r\n    private _isInit : boolean;\r\n\r\n    private _potentialInstances:Object;\r\n    private _active_session_ids:Object;\r\n\r\n\t/**\r\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\r\n\t * setter typically managed by factory\r\n\t */\r\n\tpublic get adapter():IMovieClipAdapter\r\n\t{\r\n\t\treturn <IMovieClipAdapter> this._adapter;\r\n\t}\r\n\r\n\tpublic set adapter(value:IMovieClipAdapter)\r\n\t{\r\n\t\tthis._adapter = value;\r\n\t}\r\n\r\n    constructor(timeline:Timeline = null)\r\n    {\r\n        super();\r\n        this._active_session_ids = {};\r\n        this._potentialInstances = {};\r\n        this._currentFrameIndex = -1;\r\n        this.constructedKeyFrameIndex = -1;\r\n        this._isInit=true;\r\n        this._isPlaying = true; // auto-play\r\n        this._isButton=false;\r\n\r\n        this._time = 0;\r\n        this._enterFrame = new Event(Event.ENTER_FRAME);\r\n        this.inheritColorTransform = true;\r\n\r\n        this._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\r\n        this._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\r\n        this._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\r\n        this._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\r\n\r\n        this._timeline = timeline || new Timeline();\r\n    }\r\n\r\n    public get isInit():boolean\r\n    {\r\n        return this._isInit;\r\n    }\r\n    public set isInit(value:boolean)\r\n    {\r\n        this._isInit = value;\r\n    }\r\n\r\n    public get timeline():Timeline\r\n    {\r\n        return this._timeline;\r\n    }\r\n\r\n    public set timeline(value:Timeline)\r\n    {\r\n        this._timeline = value;\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    public loop:boolean = true;\r\n\r\n    public get numFrames() : number\r\n    {\r\n        return this._timeline.numFrames;\r\n    }\r\n\r\n    public jumpToLabel(label:string)\r\n    {\r\n        // the timeline.jumpTolabel will set currentFrameIndex\r\n        this._timeline.jumpToLabel(this, label);\r\n    }\r\n\r\n    /**\r\n     * the current index of the current active frame\r\n     */\r\n    public constructedKeyFrameIndex:number;\r\n\r\n    public exit_frame():void\r\n    {\r\n        this._skipAdvance = false;\r\n\r\n        var child:DisplayObject;\r\n        for (var i:number = this.numChildren - 1; i >= 0; i--) {\r\n            child = this._children[i];\r\n            if(child.isAsset(MovieClip))\r\n                (<MovieClip> child).exit_frame();\r\n        }\r\n    }\r\n    public reset():void\r\n    {\r\n        super.reset();\r\n\r\n        // time only is relevant for the root mc, as it is the only one that executes the update function\r\n        this._time = 0;\r\n\r\n        if(this.adapter)\r\n            this.adapter.freeFromScript();\r\n\r\n        this._isPlaying = true;\r\n\r\n        this._currentFrameIndex = -1;\r\n        this.constructedKeyFrameIndex = -1;\r\n        for (var i:number = this.numChildren - 1; i >= 0; i--)\r\n            this.removeChildAt(i);\r\n\r\n        this._skipAdvance = true;\r\n\r\n        if (this._timeline.numFrames) {\r\n            this._currentFrameIndex = 0;\r\n            this._timeline.constructNextFrame(this, true, true);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Setting the currentFrameIndex without moving the playhead for this movieclip to the new position\r\n     */\r\n    public set_currentFrameIndex(value : number) {\r\n        this._skipAdvance = true;\r\n        this._currentFrameIndex = value;\r\n    }\r\n    /*\r\n    * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\r\n     */\r\n    public get currentFrameIndex():number\r\n    {\r\n        return this._currentFrameIndex;\r\n    }\r\n\r\n    public set currentFrameIndex(value:number)\r\n    {\r\n        if (this._currentFrameIndex == value)\r\n            return;\r\n\r\n        if(this._timeline.numFrames) {\r\n            value = Math.floor(value);\r\n\r\n            var skip_script:boolean = false;\r\n\r\n            if (value < 0) {\r\n                value = 0;\r\n            } else if (value >= this._timeline.numFrames) {\r\n                value = this._timeline.numFrames - 1;\r\n                skip_script=true;\r\n            }\r\n\r\n            // on changing currentframe we do not need to set skipadvance. the advanceframe should already be happened...\r\n            this._skipAdvance = true;\r\n            //this._time = 0;\r\n\r\n            this._timeline.gotoFrame(this, value, skip_script);\r\n        }\r\n\r\n        this._currentFrameIndex = value;\r\n    }\r\n\r\n    public addButtonListeners()\r\n    {\r\n        this._isButton = true;\r\n\r\n        this.stop();\r\n\r\n        this.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\r\n        this.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\r\n        this.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\r\n        this.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\r\n    }\r\n\r\n    public removeButtonListeners()\r\n    {\r\n        this.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\r\n        this.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\r\n        this.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\r\n        this.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\r\n\r\n    }\r\n\r\n    public getChildAtSessionID(sessionID:number):DisplayObject\r\n    {\r\n        return this._active_session_ids[sessionID];\r\n    }\r\n\r\n    public addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\r\n    {\r\n        //this should be implemented for all display objects\r\n        child.inheritColorTransform = true;\r\n\r\n        child.reset();// this takes care of transform and visibility\r\n\r\n        super.addChildAtDepth(child, depth, true);\r\n\r\n        this._active_session_ids[child._sessionID] = child;\r\n\r\n        return child;\r\n    }\r\n\r\n    public removeChildAtInternal(index:number /*int*/):DisplayObject\r\n    {\r\n        var child:DisplayObject = super.removeChildAtInternal(index);\r\n\r\n        if(child.adapter)\r\n            child.adapter.freeFromScript();\r\n\r\n        this.adapter.unregisterScriptObject(child);\r\n\r\n        delete this._active_session_ids[child._sessionID];\r\n\r\n        child._sessionID = -1;\r\n\r\n        return child;\r\n    }\r\n\r\n    public get assetType():string\r\n    {\r\n        return MovieClip.assetType;\r\n    }\r\n\r\n    /**\r\n     * Starts playback of animation from current position\r\n     */\r\n    public play()\r\n    {\r\n        this._isPlaying = true;\r\n    }\r\n\r\n    /**\r\n     * should be called right before the call to away3d-render.\r\n     */\r\n    public update()\r\n    {\r\n        this.advanceFrame();\r\n\r\n        // after we advanced the scenegraph, we might have some script that needs executing\r\n        FrameScriptManager.execute_queue();\r\n\r\n        // now we want to execute the onEnter\r\n        this.dispatchEvent(this._enterFrame);\r\n\r\n        // after we executed the onEnter, we might have some script that needs executing\r\n        FrameScriptManager.execute_queue();\r\n\r\n        // now we execute any intervals queued\r\n        FrameScriptManager.execute_intervals();\r\n\r\n        // finally, we execute any scripts that were added from intervals\r\n        FrameScriptManager.execute_queue();\r\n\r\n        this.exit_frame();\r\n    }\r\n\r\n    public getPotentialChildInstance(id:number) : DisplayObject\r\n    {\r\n        if (!this._potentialInstances[id])\r\n            this._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\r\n\r\n\r\n        return this._potentialInstances[id];\r\n    }\r\n\r\n\r\n    /**\r\n     * Stop playback of animation and hold current position\r\n     */\r\n    public stop()\r\n    {\r\n        this._isPlaying = false;\r\n    }\r\n\r\n    public clone():MovieClip\r\n    {\r\n        var newInstance:MovieClip = new MovieClip(this._timeline);\r\n\r\n        this.copyTo(newInstance);\r\n\r\n        return newInstance;\r\n    }\r\n\r\n    public copyTo(newInstance:MovieClip)\r\n    {\r\n        super.copyTo(newInstance);\r\n\r\n        newInstance.timeline = this._timeline;\r\n        newInstance.loop = this.loop;\r\n    }\r\n\r\n\r\n    public iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n\t\tsuper.iSetParent(value);\r\n\t}\r\n\r\n    public advanceFrame(skipChildren:boolean = false)\r\n    {\r\n        if(this._timeline.numFrames) {\r\n            if (((this._isPlaying && !this._skipAdvance) || this._currentFrameIndex == -1) && (this._currentFrameIndex != this._timeline.numFrames - 1 || this.loop)) {\r\n                this._currentFrameIndex++;\r\n                if (this._currentFrameIndex == this._timeline.numFrames) { // looping - jump to first frame.\r\n                    this.currentFrameIndex = 0;\r\n                } else { // not looping - construct next frame\r\n                    this._timeline.constructNextFrame(this);\r\n                }\r\n            }\r\n\r\n            if (!skipChildren)\r\n                this.advanceChildren();\r\n        }\r\n\r\n        this._skipAdvance = false;\r\n    }\r\n\r\n    private advanceChildren()\r\n    {\r\n        var len:number = this.numChildren;\r\n        var child:DisplayObject;\r\n        for (var i:number = 0; i <  len; ++i) {\r\n            child = this._children[i];\r\n\r\n            if (child.isAsset(MovieClip))\r\n                (<MovieClip> child).advanceFrame();\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n// DEBUG CODE:\r\n    logHierarchy(depth: number = 0):void\r\n    {\r\n        this.printHierarchyName(depth, this);\r\n\r\n        var len = this.numChildren;\r\n        var child:DisplayObject;\r\n        for (var i:number = 0; i < len; i++) {\r\n            child = this._children[i];\r\n\r\n            if (child.isAsset(MovieClip))\r\n                (<MovieClip> child).logHierarchy(depth + 1);\r\n            else\r\n                this.printHierarchyName(depth + 1, child);\r\n        }\r\n    }\r\n\r\n    printHierarchyName(depth:number, target:DisplayObject)\r\n    {\r\n        var str = \"\";\r\n        for (var i = 0; i < depth; ++i)\r\n            str += \"--\";\r\n\r\n        str += \" \" + target.name + \" = \" + target.id;\r\n        console.log(str);\r\n    }\r\n\r\n\r\n}\r\nexport = MovieClip;\r\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\n\r\nclass PointLight extends LightBase implements IEntity\r\n{\r\n\tpublic _pRadius:number = 90000;\r\n\tpublic _pFallOff:number = 100000;\r\n\tpublic _pFallOffFactor:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.SPHERE;\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\r\n\t{\r\n\t\treturn new CubeMapShadowMapper();\r\n\t}\r\n\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pRadius = value;\r\n\r\n\t\tif (this._pRadius < 0) {\r\n\t\t\tthis._pRadius = 0;\r\n\t\t} else if (this._pRadius > this._pFallOff) {\r\n\t\t\tthis._pFallOff = this._pRadius;\r\n\t\t\tthis._pInvalidateBounds();\r\n\t\t}\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\r\n\t}\r\n\r\n\tpublic iFallOffFactor():number\r\n\t{\r\n\t\treturn this._pFallOffFactor;\r\n\t}\r\n\r\n\tpublic get fallOff():number\r\n\t{\r\n\t\treturn this._pFallOff;\r\n\t}\r\n\r\n\tpublic set fallOff(value:number)\r\n\t{\r\n\t\tthis._pFallOff = value;\r\n\r\n\t\tif (this._pFallOff < 0)\r\n\t\t\tthis._pFallOff = 0;\r\n\r\n\t\tif (this._pFallOff < this._pRadius)\r\n\t\t\tthis._pRadius = this._pFallOff;\r\n\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pSphereBounds.radius = this._pFallOff;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\t// todo: do not use lookAt on Light\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this._pParent.inverseSceneTransform);\r\n\t\tthis.lookAt(m.position);\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tvar box:Box = entity.getBox();\r\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\r\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\r\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\r\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\r\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\r\n\t\tvar zMin:number;\r\n\t\tvar zMax:number;\r\n\r\n\t\tvar z:number = m.rawData[14];\r\n\t\tzMin = z - d;\r\n\t\tzMax = z + d;\r\n\r\n\t\traw[5] = raw[0] = zMin/d;\r\n\t\traw[10] = zMax/(zMax - zMin);\r\n\t\traw[11] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\r\n\t\traw[14] = -zMin*raw[10];\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n}\r\n\r\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\r\n\r\n/**\r\n * This class is used to create lightweight shapes using the ActionScript\r\n * drawing application program interface(API). The Shape class includes a\r\n * <code>graphics</code> property, which lets you access methods from the\r\n * Graphics class.\r\n *\r\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\r\n * includes other features not available to the Shape class. For example, a\r\n * Sprite object is a display object container, whereas a Shape object is not\r\n * (and cannot contain child display objects). For this reason, Shape objects\r\n * consume less memory than Sprite objects that contain the same graphics.\r\n * However, a Sprite object supports user input events, while a Shape object\r\n * does not.</p>\r\n */\r\nclass Shape extends DisplayObject\r\n{\r\n\tprivate _graphics:Graphics;\r\n\r\n\t/**\r\n\t * Specifies the Graphics object belonging to this Shape object, where vector\r\n\t * drawing commands can occur.\r\n\t */\r\n\tget graphics():Graphics\r\n\t{\r\n\t\treturn this._graphics;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Shape object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Shape = new Shape();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = name;\r\n\t\tclone.maskMode = this.maskMode;\r\n\t\tclone.masks = this.masks? this.masks.concat() : null;\r\n\t\tclone._graphics = this._graphics;\r\n\t\treturn clone;\r\n\t}\r\n}\r\n\r\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\n/**\r\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\r\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\r\n * the sky box is always as large as possible without being clipped.\r\n */\r\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Skybox]\";\r\n\r\n\tprivate _cubeMap:SingleCubeTexture;\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tprivate _animationSet:IAnimationSet;\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\tprivate _mipmap:boolean = false;\r\n\tprivate _smooth:boolean = true;\r\n\r\n\tprivate _animator:IAnimator;\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\t\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pIinvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t* The cube texture to use as the skybox.\r\n\t*/\r\n\tpublic get cubeMap():SingleCubeTexture\r\n\t{\r\n\t\treturn this._cubeMap;\r\n\t}\r\n\r\n\tpublic set cubeMap(value:SingleCubeTexture)\r\n\t{\r\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\r\n\t\tif (value && this._cubeMap)\r\n\t\t\tthis._pInvalidateRender();\r\n\r\n\t\tthis._cubeMap = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Skybox object.\r\n\t *\r\n\t * @param material\tThe material with which to render the Skybox.\r\n\t */\r\n\tconstructor(cubeMap:SingleCubeTexture = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\t\tthis._owners = new Array<IRenderableOwner>(this);\r\n\r\n\t\tthis.cubeMap = cubeMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Skybox.assetType;\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//skybox do not get collected in the standard entity list\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n}\r\n\r\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\r\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\r\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\r\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\r\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\n\r\n/**\r\n * The TextField class is used to create display objects for text display and\r\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\r\n * perform low-level text rendering. However, in Flex, you typically use the\r\n * Label, Text, TextArea, and TextInput controls to process text. <ph\r\n * outputclass=\"flashonly\">You can give a text field an instance name in the\r\n * Property inspector and use the methods and properties of the TextField\r\n * class to manipulate it with ActionScript. TextField instance names are\r\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\r\n * the Actions panel.\r\n *\r\n * <p>To create a text field dynamically, use the <code>TextField()</code>\r\n * constructor.</p>\r\n *\r\n * <p>The methods of the TextField class let you set, select, and manipulate\r\n * text in a dynamic or input text field that you create during authoring or\r\n * at runtime. </p>\r\n *\r\n * <p>ActionScript provides several ways to format your text at runtime. The\r\n * TextFormat class lets you set character and paragraph formatting for\r\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\r\n * text fields by using the <code>TextField.styleSheet</code> property and the\r\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\r\n * formatting tags, or apply styles. You can assign HTML formatted text, which\r\n * optionally uses CSS styles, directly to a text field. HTML text that you\r\n * assign to a text field can contain embedded media(movie clips, SWF files,\r\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\r\n * media in the same way that a web browser wraps text around media embedded\r\n * in an HTML document. </p>\r\n *\r\n * <p>Flash Player supports a subset of HTML tags that you can use to format\r\n * text. See the list of supported HTML tags in the description of the\r\n * <code>htmlText</code> property.</p>\r\n * \r\n * @event change                    Dispatched after a control value is\r\n *                                  modified, unlike the\r\n *                                  <code>textInput</code> event, which is\r\n *                                  dispatched before the value is modified.\r\n *                                  Unlike the W3C DOM Event Model version of\r\n *                                  the <code>change</code> event, which\r\n *                                  dispatches the event only after the\r\n *                                  control loses focus, the ActionScript 3.0\r\n *                                  version of the <code>change</code> event\r\n *                                  is dispatched any time the control\r\n *                                  changes. For example, if a user types text\r\n *                                  into a text field, a <code>change</code>\r\n *                                  event is dispatched after every keystroke.\r\n * @event link                      Dispatched when a user clicks a hyperlink\r\n *                                  in an HTML-enabled text field, where the\r\n *                                  URL begins with \"event:\". The remainder of\r\n *                                  the URL after \"event:\" is placed in the\r\n *                                  text property of the LINK event.\r\n *\r\n *                                  <p><b>Note:</b> The default behavior,\r\n *                                  adding the text to the text field, occurs\r\n *                                  only when Flash Player generates the\r\n *                                  event, which in this case happens when a\r\n *                                  user attempts to input text. You cannot\r\n *                                  put text into a text field by sending it\r\n *                                  <code>textInput</code> events.</p>\r\n * @event scroll                    Dispatched by a TextField object\r\n *                                  <i>after</i> the user scrolls.\r\n * @event textInput                 Flash Player dispatches the\r\n *                                  <code>textInput</code> event when a user\r\n *                                  enters one or more characters of text.\r\n *                                  Various text input methods can generate\r\n *                                  this event, including standard keyboards,\r\n *                                  input method editors(IMEs), voice or\r\n *                                  speech recognition systems, and even the\r\n *                                  act of pasting plain text with no\r\n *                                  formatting or style information.\r\n * @event textInteractionModeChange Flash Player dispatches the\r\n *                                  <code>textInteractionModeChange</code>\r\n *                                  event when a user changes the interaction\r\n *                                  mode of a text field. for example on\r\n *                                  Android, one can toggle from NORMAL mode\r\n *                                  to SELECTION mode using context menu\r\n *                                  options\r\n */\r\nclass TextField extends Mesh\r\n{\r\n\tpublic static assetType:string = \"[asset TextField]\";\r\n\r\n\tprivate _bottomScrollV:number;\r\n\tprivate _caretIndex:number;\r\n\tprivate _length:number;\r\n\tprivate _maxScrollH:number;\r\n\tprivate _maxScrollV:number;\r\n\tprivate _numLines:number;\r\n\tprivate _selectionBeginIndex:number;\r\n\tprivate _selectionEndIndex:number;\r\n\tprivate _text:string = \"\";\r\n\tprivate _textHeight:number;\r\n\tprivate _textInteractionMode:TextInteractionMode;\r\n\tprivate _textWidth:number;\r\n\r\n\tprivate _charBoundaries:Rectangle;\r\n\tprivate _charIndexAtPoint:number;\r\n\tprivate _firstCharInParagraph:number;\r\n\tprivate _imageReference:DisplayObject\r\n\tprivate _lineIndexAtPoint:number;\r\n\tprivate _lineIndexOfChar:number;\r\n\tprivate _lineLength:number;\r\n\tprivate _lineMetrics:TextLineMetrics;\r\n\tprivate _lineOffset:number;\r\n\tprivate _lineText:string;\r\n\tprivate _paragraphLength:number;\r\n\tprivate _textFormat:TextFormat;\r\n\r\n\t/**\r\n\t * When set to <code>true</code> and the text field is not in focus, Flash\r\n\t * Player highlights the selection in the text field in gray. When set to\r\n\t * <code>false</code> and the text field is not in focus, Flash Player does\r\n\t * not highlight the selection in the text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic alwaysShowSelection:boolean\r\n\r\n\t/**\r\n\t * The type of anti-aliasing used for this text field. Use\r\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\r\n\t * control this setting only if the font is embedded(with the\r\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\r\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\r\n\t *\r\n\t * <p>To set values for this property, use the following string values:</p>\r\n\t */\r\n\tpublic antiAliasType:AntiAliasType;\r\n\r\n\t/**\r\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\r\n\t * for the <code>TextFieldAutoSize</code> constants:\r\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\r\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\r\n\t * and <code>TextFieldAutoSize.CENTER</code>.\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\r\n\t * (the default) no resizing occurs.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\r\n\t * the text is treated as left-justified text, meaning that the left margin\r\n\t * of the text field remains fixed and any resizing of a single line of the\r\n\t * text field is on the right margin. If the text includes a line break(for\r\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\r\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\r\n\t * to <code>true</code>, only the bottom of the text field is resized and the\r\n\t * right side remains fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\r\n\t * right-justified text, meaning that the right margin of the text field\r\n\t * remains fixed and any resizing of a single line of the text field is on\r\n\t * the left margin. If the text includes a line break(for example,\r\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\r\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\r\n\t * only the bottom of the text field is resized and the left side remains\r\n\t * fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\r\n\t * center-justified text, meaning that any resizing of a single line of the\r\n\t * text field is equally distributed to both the right and left margins. If\r\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\r\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\r\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\r\n\t * bottom of the text field is resized and the left and right sides remain\r\n\t * fixed.</p>\r\n\t * \r\n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\r\n\t *                       of flash.text.TextFieldAutoSize.\r\n\t */\r\n\tpublic autoSize:TextFieldAutoSize;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextField.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a background fill. If\r\n\t * <code>true</code>, the text field has a background fill. If\r\n\t * <code>false</code>, the text field has no background fill. Use the\r\n\t * <code>backgroundColor</code> property to set the background color of a\r\n\t * text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic background:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field background. The default value is\r\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\r\n\t * if there currently is no background, but the color is visible only if the\r\n\t * text field has the <code>background</code> property set to\r\n\t * <code>true</code>.\r\n\t */\r\n\tpublic backgroundColor:number /*int*/;\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a border. If <code>true</code>, the\r\n\t * text field has a border. If <code>false</code>, the text field has no\r\n\t * border. Use the <code>borderColor</code> property to set the border color.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic border:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field border. The default value is\r\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\r\n\t * if there currently is no border, but the color is visible only if the text\r\n\t * field has the <code>border</code> property set to <code>true</code>.\r\n\t */\r\n\tpublic borderColor:number /*int*/;\r\n\r\n\t/**\r\n\t * An integer(1-based index) that indicates the bottommost line that is\r\n\t * currently visible in the specified text field. Think of the text field as\r\n\t * a window onto a block of text. The <code>scrollV</code> property is the\r\n\t * 1-based index of the topmost visible line in the window.\r\n\t *\r\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\r\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\r\n\t */\r\n\tpublic get bottomScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._bottomScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * The index of the insertion point(caret) position. If no insertion point\r\n\t * is displayed, the value is the position the insertion point would be if\r\n\t * you restored focus to the field(typically where the insertion point last\r\n\t * was, or 0 if the field has not had focus).\r\n\t *\r\n\t * <p>Selection span indexes are zero-based(for example, the first position\r\n\t * is 0, the second position is 1, and so on).</p>\r\n\t */\r\n\tpublic get caretIndex():number /*int*/\r\n\t{\r\n\t\treturn this._caretIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that specifies whether extra white space(spaces, line\r\n\t * breaks, and so on) in a text field with HTML text is removed. The default\r\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\r\n\t * affects text set with the <code>htmlText</code> property, not the\r\n\t * <code>text</code> property. If you set text with the <code>text</code>\r\n\t * property, <code>condenseWhite</code> is ignored.\r\n\t *\r\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\r\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\r\n\t * breaks in the text field.</p>\r\n\t *\r\n\t * <p>Set the <code>condenseWhite</code> property before setting the\r\n\t * <code>htmlText</code> property.</p>\r\n\t */\r\n\tpublic condenseWhite:boolean;\r\n\r\n\t/**\r\n\t * Specifies the format applied to newly inserted text, such as text entered\r\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\r\n\t * method.\r\n\t *\r\n\t * <p><b>Note:</b> When selecting characters to be replaced with\r\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\r\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\r\n\t * selected up to and including the last character. Here is an example:</p>\r\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\r\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\r\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\r\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\r\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\r\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\r\n\t * </pre>\r\n\t *\r\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\r\n\t * returned TextFormat object has all of its properties defined. No property\r\n\t * is <code>null</code>.</p>\r\n\t *\r\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic defaultTextFormat:TextFormat;\r\n\r\n\t/**\r\n\t * Specifies whether the text field is a password text field. If the value of\r\n\t * this property is <code>true</code>, the text field is treated as a\r\n\t * password text field and hides the input characters using asterisks instead\r\n\t * of the actual characters. If <code>false</code>, the text field is not\r\n\t * treated as a password text field. When password mode is enabled, the Cut\r\n\t * and Copy commands and their corresponding keyboard shortcuts will not\r\n\t * function. This security mechanism prevents an unscrupulous user from using\r\n\t * the shortcuts to discover a password on an unattended computer.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic displayAsPassword:boolean;\r\n\r\n\t/**\r\n\t * Specifies whether to render by using embedded font outlines. If\r\n\t * <code>false</code>, Flash Player renders the text field by using device\r\n\t * fonts.\r\n\t *\r\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\r\n\t * for a text field, you must specify a font for that text by using the\r\n\t * <code>font</code> property of a TextFormat object applied to the text\r\n\t * field. If the specified font is not embedded in the SWF file, the text is\r\n\t * not displayed.</p>\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic embedFonts:boolean;\r\n\r\n\t/**\r\n\t * The type of grid fitting used for this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The type of grid fitting used determines whether Flash Player forces\r\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\r\n\t * or not at all.</p>\r\n\t *\r\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\r\n\t * following string values:</p>\r\n\t * \r\n\t * @default pixel\r\n\t */\r\n\tpublic gridFitType:GridFitType;\r\n\r\n\t/**\r\n\t * Contains the HTML representation of the text field contents.\r\n\t *\r\n\t * <p>Flash Player supports the following HTML tags:</p>\r\n\t *\r\n\t * <p>Flash Player and AIR also support explicit character codes, such as\r\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\r\n\t */\r\n\tpublic htmlText:string;\r\n\r\n\t/**\r\n\t * The number of characters in a text field. A character such as tab\r\n\t * (<code>\\t</code>) counts as one character.\r\n\t */\r\n\tpublic get length():number /*int*/\r\n\t{\r\n\t\treturn this._length;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum number of characters that the text field can contain, as\r\n\t * entered by a user. A script can insert more text than\r\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\r\n\t * only how much text a user can enter. If the value of this property is\r\n\t * <code>0</code>, a user can enter an unlimited amount of text.\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic maxChars:number /*int*/;\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollH</code>.\r\n\t */\r\n\tpublic maxScrollH():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollH;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollV</code>.\r\n\t */\r\n\tpublic maxScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\r\n\t * multiline text fields when the user clicks a text field and rolls the\r\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\r\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\r\n\t * implement your own text field scrolling.\r\n\t */\r\n\tpublic mouseWheelEnabled:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether field is a multiline text field. If the value is\r\n\t * <code>true</code>, the text field is multiline; if the value is\r\n\t * <code>false</code>, the text field is a single-line text field. In a field\r\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\r\n\t * determines whether the <code>Enter</code> key creates a new line(a value\r\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\r\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\r\n\t * value of <code>false</code>, newlines are stripped out of the text.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic multiline:boolean;\r\n\r\n\t/**\r\n\t * Defines the number of text lines in a multiline text field. If\r\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\r\n\t * lines increases when text wraps.\r\n\t */\r\n\tpublic get numLines():number /*int*/\r\n\t{\r\n\t\treturn this._numLines;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the set of characters that a user can enter into the text field.\r\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\r\n\t * you can enter any character. If the value of the <code>restrict</code>\r\n\t * property is an empty string, you cannot enter any character. If the value\r\n\t * of the <code>restrict</code> property is a string of characters, you can\r\n\t * enter only characters in the string into the text field. The string is\r\n\t * scanned from left to right. You can specify a range by using the hyphen\r\n\t * (-) character. Only user interaction is restricted; a script can put any\r\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\r\n\t * not synchronize with the Embed font options in the Property inspector.\r\n\t *\r\n\t * <p>If the string begins with a caret(^) character, all characters are\r\n\t * initially accepted and succeeding characters in the string are excluded\r\n\t * from the set of accepted characters. If the string does not begin with a\r\n\t * caret(^) character, no characters are initially accepted and succeeding\r\n\t * characters in the string are included in the set of accepted\r\n\t * characters.</p>\r\n\t *\r\n\t * <p>The following example allows only uppercase characters, spaces, and\r\n\t * numbers to be entered into a text field:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\r\n\t *\r\n\t * <p>The following example includes all characters, but excludes lowercase\r\n\t * letters:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\r\n\t *\r\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\r\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\r\n\t * character in the string, so when specified in ActionScript, a double\r\n\t * backslash must be used. For example, the following code includes only the\r\n\t * dash(-) and caret(^):</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\r\n\t *\r\n\t * <p>The ^ can be used anywhere in the string to toggle between including\r\n\t * characters and excluding characters. The following code includes only\r\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\r\n\t *\r\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\r\n\t * <code>restrict</code> strings. The following code includes only the\r\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\r\n\t * \r\n\t * @default null\r\n\t */\r\n\tpublic restrict:string;\r\n\r\n\t/**\r\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\r\n\t * property is 0, the text is not horizontally scrolled. This property value\r\n\t * is an integer that represents the horizontal position in pixels.\r\n\t *\r\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\r\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\r\n\t * because most fonts you typically use are proportionally spaced; that is,\r\n\t * the characters can have different widths. Flash Player performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\r\n\t * height of the line adjusts to fit the largest font in use.</p>\r\n\t *\r\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\r\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\r\n\t */\r\n\tpublic scrollH:number;\r\n\r\n\t/**\r\n\t * The vertical position of text in a text field. The <code>scrollV</code>\r\n\t * property is useful for directing users to a specific paragraph in a long\r\n\t * passage, or creating scrolling text fields.\r\n\t *\r\n\t * <p>The units of vertical scrolling are lines, whereas the units of\r\n\t * horizontal scrolling are pixels. If the first line displayed is the first\r\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\r\n\t * is measured in pixels because most fonts are proportionally spaced; that\r\n\t * is, the characters can have different widths. Flash performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if there are multiple fonts on a\r\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\r\n\t */\r\n\tpublic scrollV:number;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field is selectable. The\r\n\t * value <code>true</code> indicates that the text is selectable. The\r\n\t * <code>selectable</code> property controls whether a text field is\r\n\t * selectable, not whether a text field is editable. A dynamic text field can\r\n\t * be selectable even if it is not editable. If a dynamic text field is not\r\n\t * selectable, the user cannot select its text.\r\n\t *\r\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\r\n\t * the text field does not respond to selection commands from the mouse or\r\n\t * keyboard, and the text cannot be copied with the Copy command. If\r\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\r\n\t * field can be selected with the mouse or keyboard, and the text can be\r\n\t * copied with the Copy command. You can select text this way even if the\r\n\t * text field is a dynamic text field instead of an input text field. </p>\r\n\t * \r\n\t * @default true\r\n\t */\r\n\tpublic selectable:boolean;\r\n\r\n\t/**\r\n\t * The zero-based character index value of the first character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionBeginIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionBeginIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The zero-based character index value of the last character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionEndIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionEndIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The sharpness of the glyph edges in this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\r\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\r\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\r\n\t * property to the nearest value in the range(either -400 or 400).\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic sharpness:number;\r\n\r\n\t/**\r\n\t * Attaches a style sheet to the text field. For information on creating\r\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\r\n\t * Developer's Guide</i>.\r\n\t *\r\n\t * <p>You can change the style sheet associated with a text field at any\r\n\t * time. If you change the style sheet in use, the text field is redrawn with\r\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\r\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\r\n\t * use is removed, the text field is redrawn without a style sheet. </p>\r\n\t *\r\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\r\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\r\n\t * incorporate the formatting previously applied by the style sheet. To\r\n\t * preserve the original <code>TextField.htmlText</code> contents without the\r\n\t * formatting, save the value in a variable before removing the style\r\n\t * sheet.</p>\r\n\t */\r\n\tpublic styleSheet:StyleSheet;\r\n\r\n\t/**\r\n\t * A string that is the current text in the text field. Lines are separated\r\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\r\n\t * property contains unformatted text in the text field, without HTML tags.\r\n\t *\r\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\r\n\t * property.</p>\r\n\t */\r\n\tpublic get text():string\r\n\t{\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\tpublic set text(value:string)\r\n\t{\r\n\t\tvalue=value.toString();\r\n\t\tif (this._text == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._text = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\tpublic get textFormat():TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\tpublic set textFormat(value:TextFormat)\r\n\t{\r\n\t\tif (this._textFormat == value)\r\n\t\t\treturn;\r\n\t\tthis._textFormat = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\r\n\t/**\r\n\t * The color of the text in a text field, in hexadecimal format. The\r\n\t * hexadecimal color system uses six digits to represent color values. Each\r\n\t * digit has 16 possible values or characters. The characters range from 0-9\r\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\r\n\t * <code>0xFFFFFF</code>.\r\n\t * \r\n\t * @default 0(0x000000)\r\n\t */\r\n\tpublic _textColor:number /*int*/;\r\n\r\n\tpublic get textColor()\r\n\t{\r\n\t\treturn this._textColor;\r\n\t}\r\n\r\n\tpublic set textColor(value:number)\r\n\t{\r\n\t\tthis._textColor = value;\r\n\r\n\t\tif(!this._iColorTransform)\r\n\t\t\tthis._iColorTransform = new ColorTransform();\r\n\r\n\t\tthis._iColorTransform.color = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The interaction mode property, Default value is\r\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\r\n\t * that the text can be scrolled but not selected. One can switch to the\r\n\t * selectable mode through the in-built context menu on the text field. On\r\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\r\n\t * selection mode.\r\n\t */\r\n\tpublic get textInteractionMode():TextInteractionMode\r\n\t{\r\n\t\treturn this._textInteractionMode;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textWidth():number\r\n\t{\r\n\t\treturn this._textWidth;\r\n\t}\r\n\r\n\tpublic set textWidth(value:number)\r\n\t{\r\n\t\tthis._textWidth = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textHeight():number\r\n\t{\r\n\t\treturn this._textHeight;\r\n\t}\r\n\r\n\tpublic set textHeight(value:number)\r\n\t{\r\n\t\tthis._textHeight = value;\r\n\t}\r\n\t/**\r\n\t * The thickness of the glyph edges in this text field. This property applies\r\n\t * only when <code>AntiAliasType</code> is set to\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\r\n\t * you attempt to set <code>thickness</code> to a value outside that range,\r\n\t * the property is set to the nearest value in the range(either -200 or\r\n\t * 200).</p>\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic thickness:number;\r\n\r\n\t/**\r\n\t * The type of the text field. Either one of the following TextFieldType\r\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\r\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\r\n\t * which specifies an input text field, which a user can edit.\r\n\t * \r\n\t * @default dynamic\r\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\r\n\t *                       flash.text.TextFieldType.\r\n\t */\r\n\tpublic type:TextFieldType;\r\n\r\n\t/**\r\n\t * Specifies whether to copy and paste the text formatting along with the\r\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\r\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\r\n\t * between text fields. Both the origin and destination text fields for the\r\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\r\n\t * to <code>true</code>. The default value is <code>false</code>.\r\n\t */\r\n\tpublic useRichTextClipboard:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field has word wrap. If\r\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\r\n\t * has word wrap; if the value is <code>false</code>, the text field does not\r\n\t * have word wrap. The default value is <code>false</code>.\r\n\t */\r\n\tpublic wordWrap:boolean;\r\n\r\n\t/**\r\n\t * Creates a new TextField instance. After you create the TextField instance,\r\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\r\n\t * the parent DisplayObjectContainer object to add the TextField instance to\r\n\t * the display list.\r\n\t *\r\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(new Geometry());\r\n\t\tthis.type = TextFieldType.STATIC;\r\n\t}\r\n\r\n\t/**\r\n\t * Reconstructs the Geometry for this Text-field.\r\n\t */\r\n\tpublic reConstruct() {\r\n\r\n\r\n\t\tif(this._textFormat==null)\r\n\t\t\treturn;\r\n\r\n\r\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\r\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\r\n\r\n\t\tif(this._text==\"\")\r\n\t\t\treturn;\r\n\r\n\t\tvar vertices:Array<number> = new Array<number>();\r\n\r\n\r\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\r\n\t\tvar additional_margin_x:number= this._textFormat.font_table.offset_x;\r\n\t\tvar additional_margin_y:number= this._textFormat.font_table.offset_y;\r\n\t\tvar y_offset:number=additional_margin_y;\r\n\t\tvar prev_char:TesselatedFontChar = null;\r\n\t\tvar j:number = 0;\r\n\t\tvar k:number = 0;\r\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\\\n\");\r\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\r\n\t\t\tvar line_width:number = 0;\r\n\t\t\tvar c_cnt:number = 0;\r\n\t\t\tvar font_chars:Array<TesselatedFontChar> = [];\r\n\t\t\tvar font_chars_scale:Array<number> =[];\r\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\r\n\t\t\t\tchar_scale=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\r\n\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(textlines[tl].charCodeAt(i).toString());\r\n\t\t\t\tif(this_char == null) {\r\n\t\t\t\t\tif(this._textFormat.fallback_font_table) {\r\n\t\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.fallback_font_table.get_font_em_size();\r\n\t\t\t\t\t\tthis_char = this._textFormat.fallback_font_table.get_subgeo_for_char(textlines[tl].charCodeAt(i).toString());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\r\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tline_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\tline_width += this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t\t\tline_width += this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t}\r\n\t\t\t\tfont_chars_scale[c_cnt]=char_scale;\r\n\t\t\t\tfont_chars[c_cnt++]=this_char;\r\n\t\t\t}\r\n\t\t\tvar x_offset:number=additional_margin_x;\r\n\t\t\tif(this._textFormat.align==\"center\"){\r\n\t\t\t\tx_offset=(this._textWidth-line_width)/2;\r\n\t\t\t}\r\n\t\t\telse if(this._textFormat.align==\"right\"){\r\n\t\t\t\tx_offset=(this._textWidth-line_width)-additional_margin_x;\r\n\t\t\t}\r\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\r\n\t\t\t//console.log(\"this._width=\"+this._width);\r\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\r\n\t\t\t\tvar this_char:TesselatedFontChar = font_chars[i];\r\n\t\t\t\tchar_scale = font_chars_scale[i];\r\n\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\r\n\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\r\n\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\r\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\r\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\r\n\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\r\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\r\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\r\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\r\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\r\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ty_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\r\n\t\t}\r\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\r\n\t\tattributesView.set(vertices);\r\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\r\n\t\tattributesView.dispose();\r\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\r\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\r\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\r\n\t\tthis.subMeshes[0].material=this._textFormat.material;\r\n\t}\r\n\t/**\r\n\t * Appends the string specified by the <code>newText</code> parameter to the\r\n\t * end of the text of the text field. This method is more efficient than an\r\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\r\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\r\n\t * text field that contains a significant amount of content.\r\n\t *\r\n\t * @param newText The string to append to the existing text.\r\n\t */\r\n\tpublic appendText(newText:string) {\r\n\t\tthis._text+=newText;\r\n\t}\r\n\r\n\t/**\r\n\t * *tells the Textfield that a paragraph is defined completly.\r\n\t * e.g. the textfield will start a new line for future added text.\r\n\t */\r\n\tpublic closeParagraph()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that is the bounding box of the character.\r\n\t * \r\n\t * @param charIndex The zero-based index value for the character(for\r\n\t *                  example, the first position is 0, the second position is\r\n\t *                  1, and so on).\r\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\r\n\t *         maximum values defining the bounding box of the character.\r\n\t */\r\n\tpublic getCharBoundaries(charIndex:number):Rectangle\r\n\t{\r\n\t\treturn this._charBoundaries;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the character at the point specified\r\n\t * by the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the character.\r\n\t * @param y The <i>y</i> coordinate of the character.\r\n\t * @return The zero-based index value of the character(for example, the\r\n\t *         first position is 0, the second position is 1, and so on). Returns\r\n\t *         -1 if the point is not over any character.\r\n\t */\r\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._charIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the index of the first character in the\r\n\t * same paragraph.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the first character in the same\r\n\t *         paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._firstCharInParagraph;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\r\n\t * image or SWF file that has been added to an HTML-formatted text field by\r\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\r\n\t * following format:\r\n\t *\r\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\r\n\t * 'instanceName' ></code></pre></p>\r\n\t * \r\n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\r\n\t *           of the <code><img></code> tag).\r\n\t * @return The display object corresponding to the image or SWF file with the\r\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\r\n\t *         of the text field. For media loaded from an external source, this\r\n\t *         object is a Loader object, and, once loaded, the media object is a\r\n\t *         child of that Loader object. For media embedded in the SWF file,\r\n\t *         it is the loaded object. If no <code><img></code> tag with the\r\n\t *         matching <code>id</code> exists, the method returns\r\n\t *         <code>null</code>.\r\n\t */\r\n\tpublic getImageReference(id:string):DisplayObject\r\n\t{\r\n\t\treturn this._imageReference;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line at the point specified by\r\n\t * the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the line.\r\n\t * @param y The <i>y</i> coordinate of the line.\r\n\t * @return The zero-based index value of the line(for example, the first\r\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\r\n\t *         point is not over any line.\r\n\t */\r\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line containing the character\r\n\t * specified by the <code>charIndex</code> parameter.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the line.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexOfChar;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of characters in a specific text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want the length.\r\n\t * @return The number of characters in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns metrics information about a given text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want metrics information.\r\n\t * @return A TextLineMetrics object.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\r\n\t{\r\n\t\treturn this._lineMetrics;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the character index of the first character in the line that the\r\n\t * <code>lineIndex</code> parameter specifies.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The zero-based index value of the first character in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the text of the line specified by the <code>lineIndex</code>\r\n\t * parameter.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The text string contained in the specified line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineText(lineIndex:number /*int*/):string\r\n\t{\r\n\t\treturn this._lineText;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the length of the paragraph containing\r\n\t * the given character. The length is relative to the first character in the\r\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\r\n\t * the character index passed in.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return Returns the number of characters in the paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._paragraphLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TextFormat object that contains formatting information for the\r\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\r\n\t * parameters specify. Only properties that are common to the entire text\r\n\t * specified are set in the resulting TextFormat object. Any property that is\r\n\t * <i>mixed</i>, meaning that it has different values at different points in\r\n\t * the text, has a value of <code>null</code>.\r\n\t *\r\n\t * <p>If you do not specify values for these parameters, this method is\r\n\t * applied to all the text in the text field. </p>\r\n\t *\r\n\t * <p>The following table describes three possible usages:</p>\r\n\t * \r\n\t * @return The TextFormat object that represents the formatting properties\r\n\t *         for the specified text.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the current selection with the contents of the <code>value</code>\r\n\t * parameter. The text is inserted at the position of the current selection,\r\n\t * using the current default character format and default paragraph format.\r\n\t * The text is not treated as HTML.\r\n\t *\r\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\r\n\t * delete text without disrupting the character and paragraph formatting of\r\n\t * the rest of the text.</p>\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param value The string to replace the currently selected text.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceSelectedText(value:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the range of characters that the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters specify with the contents of the\r\n\t * <code>newText</code> parameter. As designed, the text from\r\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param beginIndex The zero-based index value for the start position of the\r\n\t *                   replacement range.\r\n\t * @param endIndex   The zero-based index position of the first character\r\n\t *                   after the desired text span.\r\n\t * @param newText    The text to use to replace the specified range of\r\n\t *                   characters.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets as selected the text designated by the index values of the first and\r\n\t * last characters, which are specified with the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters. If the two parameter values are the\r\n\t * same, this method sets the insertion point, as if you set the\r\n\t * <code>caretIndex</code> property.\r\n\t * \r\n\t * @param beginIndex The zero-based index value of the first character in the\r\n\t *                   selection(for example, the first character is 0, the\r\n\t *                   second character is 1, and so on).\r\n\t * @param endIndex   The zero-based index value of the last character in the\r\n\t *                   selection.\r\n\t */\r\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the text formatting that the <code>format</code> parameter\r\n\t * specifies to the specified text in a text field. The value of\r\n\t * <code>format</code> must be a TextFormat object that specifies the desired\r\n\t * text formatting changes. Only the non-null properties of\r\n\t * <code>format</code> are applied to the text field. Any property of\r\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\r\n\t * default, all of the properties of a newly created TextFormat object are\r\n\t * set to <code>null</code>.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t *\r\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\r\n\t * applied to a range of characters or to the entire body of text in a text\r\n\t * field. To apply the properties of format to all text in the text field, do\r\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\r\n\t * To apply the properties of the format to a range of text, specify values\r\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\r\n\t * You can use the <code>length</code> property to determine the index\r\n\t * values.</p>\r\n\t *\r\n\t * <p>The two types of formatting information in a TextFormat object are\r\n\t * character level formatting and paragraph level formatting. Each character\r\n\t * in a text field can have its own character formatting settings, such as\r\n\t * font name, font size, bold, and italic.</p>\r\n\t *\r\n\t * <p>For paragraphs, the first character of the paragraph is examined for\r\n\t * the paragraph formatting settings for the entire paragraph. Examples of\r\n\t * paragraph formatting settings are left margin, right margin, and\r\n\t * indentation.</p>\r\n\t *\r\n\t * <p>Any text inserted manually by the user, or replaced by the\r\n\t * <code>replaceSelectedText()</code> method, receives the default text field\r\n\t * formatting for new text, and not the formatting specified for the text\r\n\t * insertion point. To set the default formatting for new text, use\r\n\t * <code>defaultTextFormat</code>.</p>\r\n\t * \r\n\t * @param format A TextFormat object that contains character and paragraph\r\n\t *               formatting information.\r\n\t * @throws Error      This method cannot be used on a text field with a style\r\n\t *                    sheet.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if an embedded font is available with the specified\r\n\t * <code>fontName</code> and <code>fontStyle</code> where\r\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\r\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\r\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\r\n\t * embedded fonts are only used with the flash.text.engine classes. The two\r\n\t * types are distinguished by the <code>fontType</code> property of the\r\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\r\n\t * function.\r\n\t *\r\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\r\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\r\n\t * available at run time with the specified name and style is of type\r\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\r\n\t * embedded font were available with the specified name and style.</p>\r\n\t *\r\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\r\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\r\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\r\n\t * \r\n\t * @param fontName  The name of the embedded font to check.\r\n\t * @param fontStyle Specifies the font style to check. Use\r\n\t *                  <code>flash.text.FontStyle</code>\r\n\t * @return <code>true</code> if a compatible embedded font is available,\r\n\t *         otherwise <code>false</code>.\r\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\r\n\t *                       of <code>flash.text.FontStyle</code>.\r\n\t */\r\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n    public clone():TextField\r\n    {\r\n\t\tvar newInstance:TextField = new TextField();\r\n\r\n\t\tthis.copyTo(newInstance);\r\n\r\n\t\treturn newInstance;\r\n    }\r\n\r\n\r\n\tpublic copyTo(newInstance:TextField)\r\n\t{\r\n\t\tsuper.copyTo(newInstance);\r\n\r\n\t\t// each textfield needs its own geometry.\r\n\t\tnewInstance.geometry=new Geometry();\r\n\r\n\t\tnewInstance.textWidth = this._textWidth;\r\n\t\tnewInstance.textHeight = this._textHeight;\r\n\t\tnewInstance.textFormat = this._textFormat;\r\n\t\t//newInstance.textColor = this._textColor;\r\n\t\tnewInstance.text = this._text;\r\n\t}\r\n}\r\n\r\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass CastError extends Error\r\n{\r\n\tconstructor(message:string)\r\n\t{\r\n\t\tsuper(message);\r\n\t}\r\n}\r\n\r\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\n/**\r\n * @class away.events.CameraEvent\r\n */\r\nclass CameraEvent extends Event\r\n{\r\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\r\n\r\n\tprivate _camera:Camera;\r\n\r\n\tconstructor(type:string, camera:Camera)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._camera = camera;\r\n\t}\r\n\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._camera;\r\n\t}\r\n}\r\n\r\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass DisplayObjectEvent extends Event\r\n{\r\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\r\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\r\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\r\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\r\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\r\n\tpublic static SKEW_CHANGED:string = \"skewChanged\";\r\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\r\n\r\n\tpublic object:DisplayObject;\r\n\r\n\tconstructor(type:string, object:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis.object = object;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n* Dispatched to notify changes in a geometry object's state.\r\n*\r\n* @class away.events.GeometryEvent\r\n* @see away3d.core.base.Geometry\r\n*/\r\nclass GeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\r\n\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\r\n\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\r\n\t */\r\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._subGeometry = subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\r\n\t */\r\n\tpublic get subGeometry():SubGeometryBase\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\r\n\t}\r\n}\r\n\r\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass LightEvent extends Event\r\n{\r\n\r\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new LightEvent(this.type);\r\n\t}\r\n}\r\n\r\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass MaterialEvent extends Event\r\n{\r\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\r\n * TODO: we don't have screenZ data, tho this should be easy to implement\r\n */\r\nclass MouseEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:MouseEvent;\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOver3d event object.\r\n\t */\r\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOut3d event object.\r\n\t */\r\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseUp3d event object.\r\n\t */\r\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseDown3d event object.\r\n\t */\r\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseMove3d event object.\r\n\t */\r\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOver3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOut3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a click3d event object.\r\n\t */\r\n\tpublic static CLICK:string = \"click3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a doubleClick3d event object.\r\n\t */\r\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseWheel3d event object.\r\n\t */\r\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\r\n\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\r\n\t */\r\n\tpublic delta:number;\r\n\r\n\t/**\r\n\t * Create a new MouseEvent object.\r\n\t * @param type The type of the MouseEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\tresult.delta = this.delta;\r\n\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\r\n\t\tresult._iParentEvent = this;\r\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.RenderableOwnerEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass RenderableOwnerEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a Renderable owners's render object owner has been updated.\r\n\t */\r\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\r\n\r\n\tprivate _renderOwner:IRenderOwner;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param dataType An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, renderOwner:IRenderOwner)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._renderOwner = renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * The renderobject owner of the renderable owner.\r\n\t */\r\n\tpublic get renderOwner():IRenderOwner\r\n\t{\r\n\t\treturn this._renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\r\n\t}\r\n}\r\n\r\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass RendererEvent extends Event\r\n{\r\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\r\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ResizeEvent extends Event\r\n{\r\n\tpublic static RESIZE:string = \"resize\";\r\n\r\n\tprivate _oldHeight:number;\r\n\tprivate _oldWidth:number;\r\n\r\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._oldHeight = oldHeight;\r\n\t\tthis._oldWidth = oldWidth;\r\n\t}\r\n\r\n\tpublic get oldHeight():number\r\n\t{\r\n\t\treturn this._oldHeight;\r\n\t}\r\n\r\n\tpublic get oldWidth():number\r\n\t{\r\n\t\treturn this._oldWidth;\r\n\t}\r\n}\r\n\r\nexport = ResizeEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.SubGeometryEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass SubGeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been updated.\r\n\t */\r\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been disposed.\r\n\t */\r\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\r\n\t\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been updated.\r\n\t */\r\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\r\n\t */\r\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\r\n\r\n\t\r\n\tprivate _attributesView:AttributesView;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param attributesView An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, attributesView:AttributesView)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._attributesView = attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * The attributes view of the vertex data.\r\n\t */\r\n\tpublic get attributesView():AttributesView\r\n\t{\r\n\t\treturn this._attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\r\n\t}\r\n}\r\n\r\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nclass TouchEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:TouchEvent;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\r\n\t\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\t\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\t\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\t\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\t\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\t\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\t\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\t\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\t\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\t\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\t\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\r\n\tpublic touchPointID:number;\r\n\t\r\n\t/**\r\n\t * Create a new TouchEvent object.\r\n\t * @param type The type of the TouchEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\t\t\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\t\t\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\t\t\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\t\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\t\t\r\n\t\tresult._iParentEvent = this;\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\t\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass DefaultMaterialManager\r\n{\r\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\r\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\r\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\r\n\tprivate static _defaultTextureMaterial:BasicMaterial;\r\n\tprivate static _defaultColorMaterial:BasicMaterial;\r\n\tprivate static _defaultTexture:Single2DTexture;\r\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\r\n\r\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\r\n\t\t}\r\n\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\r\n\t\t}\r\n\r\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\r\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\r\n\t}\r\n\r\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\r\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\r\n\t\t}\r\n\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTexture;\r\n\t}\r\n\r\n\tprivate static createDefaultTexture()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\r\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\r\n\t}\r\n\r\n\tprivate static createDefaultCubeTexture()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\r\n\r\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\r\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\r\n\t}\r\n\r\n\tprivate static createCheckeredBitmapImageCube()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\r\n\r\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\r\n\t}\r\n\r\n\tprivate static createCheckeredBitmapImage2D()\r\n\t{\r\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\r\n\r\n\t\t//create chekerboard\r\n\t\tvar i:number, j:number;\r\n\t\tfor (i = 0; i < 8; i++) {\r\n\t\t\tfor (j = 0; j < 8; j++) {\r\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\r\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\r\n\t}\r\n\r\n\tprivate static createDefaultTextureMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultCubeTextureMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultColorMaterial()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\r\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\r\n\t}\r\n}\r\n\r\nexport = DefaultMaterialManager;",
    "import MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\r\n\r\nclass FrameScriptManager\r\n{\r\n\t// queues pass1 of scripts.\r\n\tprivate static _queued_mcs:Array<MovieClip> = [];\r\n\tprivate static _queued_scripts:Array<Function> = [];\r\n\r\n\t// queues pass2 of scripts. this will be inserted in reversed order into pass1 queue right before something should be added to pass1\r\n\tprivate static _queued_mcs_pass2:Array<MovieClip> = [];\r\n\tprivate static _queued_scripts_pass2:Array<Function> = [];\r\n\r\n\tprivate static _active_intervals:Object = new Object(); // maps id to function\r\n\r\n\tprivate static _intervalID:number=0;\r\n\tpublic static setInterval(func:any):number\r\n\t{\r\n\t\tthis._intervalID++;\r\n\t\tthis._active_intervals[this._intervalID]=func;\r\n\t\treturn this._intervalID\r\n\t}\r\n\r\n\tpublic static clearInterval(id:number):void\r\n\t{\r\n\t\tdelete this._active_intervals[id];\r\n\t}\r\n\r\n\tpublic static execute_intervals():void\r\n\t{\r\n\t\tfor(var key in this._active_intervals){\r\n\t\t\tthis._active_intervals[key].call();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\r\n\t{\r\n\t\t// whenever we queue scripts of new objects, we first inject the lists of pass2\r\n\t\tvar i=this._queued_mcs_pass2.length;\r\n\t\twhile(i--){\r\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\r\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\r\n\t\t}\r\n\t\tthis._queued_mcs_pass2=[];\r\n\t\tthis._queued_scripts_pass2=[];\r\n\t\tthis._queued_mcs.push(mc);\r\n\t\tthis._queued_scripts.push(script);\r\n\t}\r\n\r\n\tpublic static add_script_to_queue_pass2(mc:MovieClip, script:Function):void\r\n\t{\r\n\t\tthis._queued_mcs_pass2.push(mc);\r\n\t\tthis._queued_scripts_pass2.push(script);\r\n\t}\r\n\r\n\tpublic static execute_queue():void\r\n\t{\r\n\t\tif(this._queued_mcs.length==0 && this._queued_mcs_pass2.length==0)\r\n\t\t\treturn;\r\n\r\n\t\tvar i=this._queued_mcs_pass2.length;\r\n\t\twhile(i--){\r\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\r\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\r\n\t\t}\r\n\t\tthis._queued_mcs_pass2=[];\r\n\t\tthis._queued_scripts_pass2=[];\r\n\r\n\t\tvar mc:MovieClip;\r\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\r\n\t\t\t// during the loop we might add more scripts to the queue\r\n\t\t\tmc=this._queued_mcs[i];\r\n\t\t\tif(mc.scene!=null) {\r\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\r\n\t\t\t//\ttry {\r\n\t\t\t\t\tthis._queued_scripts[i].call(caller);\r\n\t\t\t//\t}\r\n\t\t\t/*\tcatch (err) {\r\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\r\n\t\t\t\t\tconsole.log(err.message);\r\n\t\t\t\t\tthrow err;\r\n\t\t\t\t}*/\r\n\t\t\t}\r\n\t\t}\r\n\t\t// all scripts executed. clear all\r\n\t\tthis._queued_mcs=[];\r\n\t\tthis._queued_scripts=[];\r\n\t}\r\n}\r\nexport = FrameScriptManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\r\nimport FrameScriptManager\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\r\n\r\n/**\r\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\r\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\r\n */\r\nclass MouseManager\r\n{\r\n\tprivate static _instance:MouseManager;\r\n\r\n\tprivate _viewLookup:Array<View> = new Array<View>();\r\n\r\n\tpublic _iActiveDiv:HTMLDivElement;\r\n\tpublic _iUpdateDirty:boolean;\r\n\tpublic _iCollidingObject:PickingCollisionVO;\r\n\t\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\r\n\r\n\tprivate _mouseMoveEvent:MouseEvent;\r\n\r\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\r\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\r\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\r\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\r\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\r\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\r\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\r\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\r\n\r\n\tprivate onClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\r\n\r\n\t/**\r\n\t * Creates a new <code>MouseManager</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\r\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\r\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\r\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\r\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\r\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\r\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\r\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\r\n\t}\r\n\r\n\tpublic static getInstance():MouseManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new MouseManager());\r\n\t}\r\n\r\n\tpublic fireMouseEvents(forceMouseMove:boolean)\r\n\t{\r\n\t\t // If colliding object has changed, queue over/out events.\r\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\r\n\r\n\t\t\tif (this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\r\n\t\t}\r\n\r\n\t\t // Fire mouse move events here if forceMouseMove is on.\r\n\t\t if (forceMouseMove && this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\r\n\r\n\t\tvar event:AwayMouseEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\r\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\r\n\t\t\twhile (dispatcher) {\r\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\r\n\t\t\t\t\tdispatcher.dispatchEvent(event);\r\n\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t}\r\n\t\t\t// not totally sure, but i think just calling it is easier and cheaper than any options for that\r\n\t\t\t// if nothing is queued, the function will return directly anyway\r\n\t\t\tFrameScriptManager.execute_queue();\r\n\r\n\t\t}\r\n\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._previousCollidingObject = this._iCollidingObject;\r\n\r\n\t\tthis._iUpdateDirty = false;\r\n\t}\r\n\r\n//\t\tpublic addViewLayer(view:View)\r\n//\t\t{\r\n//\t\t\tvar stg:Stage = view.stage;\r\n//\r\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\r\n//\t\t\tif (!view.stageGL.mouse3DManager)\r\n//\t\t\t\tview.stageGL.mouse3DManager = this;\r\n//\r\n//\t\t\tif (!hasKey(view))\r\n//\t\t\t\t_view3Ds[view] = 0;\r\n//\r\n//\t\t\t_childDepth = 0;\r\n//\t\t\ttraverseDisplayObjects(stg);\r\n//\t\t\t_viewCount = _childDepth;\r\n//\t\t}\r\n\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.push(view);\r\n\t}\r\n\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent, collider:PickingCollisionVO = null)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tif (sourceEvent) {\r\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\t\tevent.altKey = sourceEvent.altKey;\r\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\t\tevent.screenX = (sourceEvent.clientX != null)? sourceEvent.clientX : sourceEvent.changedTouches[0].clientX;\r\n\t\t\tevent.screenY = (sourceEvent.clientY != null)? sourceEvent.clientY : sourceEvent.changedTouches[0].clientY;\r\n\t\t}\r\n\r\n\t\tif (collider == null)\r\n\t\t\tcollider = this._iCollidingObject;\r\n\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Listeners.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate onMouseMove(event:MouseEvent)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\r\n\t}\r\n\r\n\tprivate onMouseOut(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = null;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseOut, event);\r\n\t}\r\n\r\n\tprivate onMouseOver(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseOver, event);\r\n\t}\r\n\r\n\tprivate onClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseClick, event);\r\n\t}\r\n\r\n\tprivate onDoubleClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\r\n\t}\r\n\r\n\tprivate onMouseDown(event)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDown, event);\r\n\t}\r\n\r\n\tprivate onMouseUp(event)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseUp , event);\r\n\t}\r\n\r\n\tprivate onMouseWheel(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\r\n\t}\r\n\r\n\r\n\tprivate updateColliders(event)\r\n\t{\r\n\t\tif (this._iUpdateDirty)\r\n\t\t\treturn;\r\n\r\n\t\tvar view:View;\r\n\t\tvar bounds:ClientRect;\r\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\r\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\r\n\t\tvar len:number = this._viewLookup.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tview = this._viewLookup[i];\r\n\t\t\tview._pTouchPoints.length = 0;\r\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\r\n\r\n\t\t\tif (event.touches) {\r\n\t\t\t\tvar touch;\r\n\t\t\t\tvar len:number = event.touches.length;\r\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\t\t\ttouch = event.touches[i];\r\n\t\t\t\t\tview._pTouchPoints.push(new TouchPoint(touch.clientX + bounds.left, touch.clientY + bounds.top, touch.identifier));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\r\n\t\t\t\tview._pMouseX = null;\r\n\t\t\t\tview._pMouseY = null;\r\n\t\t\t} else {\r\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\r\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\r\n\r\n\t\t\t\tview.updateCollider();\r\n\r\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._iUpdateDirty = true;\r\n\t}\r\n}\r\n\r\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\r\n\r\nclass TouchManager\r\n{\r\n\tprivate static _instance:TouchManager;\r\n\r\n\tprivate _updateDirty:boolean = true;\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _numTouchPoints:number;\r\n\tprivate _touchPoint:TouchPoint;\r\n\tprivate _iCollidingObject:PickingCollisionVO;\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tpublic static _iCollidingObjectFromTouchId:Object;\r\n\tpublic static _previousCollidingObjectFromTouchId:Object;\r\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\r\n\t\r\n\tprivate _touchPoints:Array<TouchPoint>;\r\n\tprivate _touchPointFromId:Object;\r\n\t\r\n\tprivate _touchMoveEvent:TouchEvent;\r\n\r\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\r\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\r\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\r\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\r\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\r\n\r\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\r\n\t\r\n\tconstructor()\r\n\t{\r\n\t\tthis._touchPoints = new Array<TouchPoint>();\r\n\t\tthis._touchPointFromId = new Object();\r\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\r\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\r\n\r\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\r\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\r\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\r\n\t}\r\n\r\n\tpublic static getInstance():TouchManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new TouchManager());\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Interface.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tpublic updateCollider(forceTouchMove:boolean)\r\n\t{\r\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\r\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\r\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\r\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\r\n\t\t//\t}\r\n\t\t//}\r\n\t}\r\n\t\r\n\tpublic fireTouchEvents(forceTouchMove:boolean)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[i];\r\n\t\t\t// If colliding object has changed, queue over/out events.\r\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\r\n\t\t\t\tif (this._iCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t\t}\r\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\r\n\t\t\tif (forceTouchMove && this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t}\r\n\r\n\t\tvar event:AwayTouchEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\t\t\t\r\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t\r\n\t\t\tif (dispatcher)\r\n\t\t\t\tdispatcher.dispatchEvent(event);\r\n\t\t}\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._updateDirty = false;\r\n\t\t\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\tevent.altKey = sourceEvent.altKey;\r\n\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\tevent.screenX = touch.x;\r\n\t\tevent.screenY = touch.y;\r\n\t\tevent.touchPointID = touch.id;\r\n\t\t\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t\t// SubGeometryIndex.\r\n\t\t\tevent.subGeometryIndex = collider.index;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Event handlers.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate onTouchBegin(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\tvar touch:TouchPoint = new TouchPoint();\r\n\t\t//touch.id = event.touchPointID;\r\n\t\t//touch.x = event.stageX;\r\n\t\t//touch.y = event.stageY;\r\n\t\tthis._numTouchPoints++;\r\n\t\tthis._touchPoints.push(touch);\r\n\t\tthis._touchPointFromId[ touch.id ] = touch;\r\n\r\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\r\n\r\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\r\n\r\n\t\tthis._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchMove(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t////touch.x = event.stageX;\r\n\t\t////touch.y = event.stageY;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchEnd(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._touchPointFromId[ touch.id ] = null;\r\n\t\t//this._numTouchPoints--;\r\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n}\r\n\r\n\r\nexport = TouchManager;\r\n\r\nclass TouchPoint\r\n{\r\n\tpublic id:number;\r\n\tpublic x:number;\r\n\tpublic y:number;\r\n}\r\n\r\n\r\n/**\r\n * Classes for Touch Interfaces\r\n */\r\ninterface TouchEvent extends UIEvent {\r\n\ttouches: TouchList;\r\n\ttargetTouches: TouchList;\r\n\tchangedTouches: TouchList;\r\n\taltKey: boolean;\r\n\tmetaKey: boolean;\r\n\tctrlKey: boolean;\r\n\tshiftKey: boolean;\r\n\trotation: number;\r\n\tscale: number;\r\n\r\n\t// for iOS\r\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\r\n\r\n\t// for Android\r\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\r\n}\r\n\r\ndeclare var TouchEvent: {\r\n\tprototype: TouchEvent;\r\n\tnew (): TouchEvent;\r\n}\r\n\r\ninterface TouchList {\r\n\tlength: number;\r\n\t[index: number]: Touch;\r\n\titem: (index: number) => Touch;\r\n}\r\n\r\ninterface Touch {\r\n\tidentifier: number;\r\n\ttarget: EventTarget;\r\n\tscreenX: number;\r\n\tscreenY: number;\r\n\tclientX: number;\r\n\tclientY: number;\r\n\tpageX: number;\r\n\tpageY: number;\r\n}\r\n\r\ninterface Window {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface Document {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface HTMLElement {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ndeclare var ontouchstart: (ev: TouchEvent) => any;\r\ndeclare var ontouchmove: (ev: TouchEvent) => any;\r\ndeclare var ontouchend: (ev: TouchEvent) => any;\r\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\r\n\r\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n\r\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\n\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n/**\r\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass BasicMaterial extends MaterialBase\r\n{\r\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\r\n\r\n    private _preserveAlpha:boolean = false;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn BasicMaterial.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new BasicMaterial object.\r\n\t *\r\n\t * @param texture The texture used for the material's albedo color.\r\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\r\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\r\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\r\n\t */\r\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(color?:number, alpha?:number);\r\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (textureColor instanceof Image2D)\r\n\t\t\ttextureColor = new Single2DTexture(textureColor);\r\n\r\n\t\tif (textureColor instanceof TextureBase) {\r\n\t\t\tthis.texture = <TextureBase> textureColor;\r\n\r\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\r\n\t\t\tthis.repeat = repeat;\r\n\t\t\tthis.mipmap = mipmap;\r\n\t\t} else {\r\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\r\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\r\n\t\t}\r\n\t}\r\n    /**\r\n     * Indicates whether alpha should be preserved - defaults to false\r\n     */\r\n    public get preserveAlpha():boolean\r\n    {\r\n        return this._preserveAlpha;\r\n    }\r\n    public set preserveAlpha(value:boolean)\r\n    {\r\n        if (this._preserveAlpha == value)\r\n            return;\r\n        this._preserveAlpha = value;\r\n        this._pInvalidateRender();\r\n    }\r\n}\r\n\r\nexport = BasicMaterial;",
    "/**\r\n * Enumeration class for defining which lighting types affect the specific material\r\n * lighting component (diffuse and specular). This can be useful if, for example, you\r\n * want to use light probes for diffuse global lighting, but want specular reflections from\r\n * traditional light sources without those affecting the diffuse light.\r\n *\r\n * @see away.materials.ColorMaterial.diffuseLightSources\r\n * @see away.materials.ColorMaterial.specularLightSources\r\n * @see away.materials.TextureMaterial.diffuseLightSources\r\n * @see away.materials.TextureMaterial.specularLightSources\r\n */\r\nclass LightSources\r\n{\r\n\t/**\r\n\t * Defines normal lights are to be used as the source for the lighting\r\n\t * component.\r\n\t */\r\n\tpublic static LIGHTS:number = 0x01;\r\n\r\n\t/**\r\n\t * Defines that global lighting probes are to be used as the source for the\r\n\t * lighting component.\r\n\t */\r\n\tpublic static PROBES:number = 0x02;\r\n\r\n\t/**\r\n\t * Defines that both normal and global lighting probes  are to be used as the\r\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\r\n\t */\r\n\tpublic static ALL:number = 0x03;\r\n}\r\n\r\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n\r\n/**\r\n * MaterialBase forms an abstract base class for any material.\r\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\r\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\r\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\r\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\r\n *\r\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\r\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\r\n * shaders, or entire new material frameworks.\r\n */\r\nclass MaterialBase extends AssetBase implements IRenderOwner\r\n{\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _pUseColorTransform:boolean = false;\r\n\tprivate _frameRect:Rectangle;\r\n\tprivate _alphaBlending:boolean = false;\r\n\tprivate _alpha:number = 1;\r\n\t\r\n\tprivate _sizeChanged:MaterialEvent;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tpublic _pAnimateUVs:boolean = false;\r\n\tprivate _enableLightFallOff:boolean = true;\r\n\tprivate _specularLightSources:number = 0x01;\r\n\tprivate _diffuseLightSources:number = 0x03;\r\n\r\n\t/**\r\n\t * An object to contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\r\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\r\n\t * that the deferred renderer knows not to take the forward rendering path.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iClassification:string;\r\n\r\n\r\n\t/**\r\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iMaterialId:number = 0;\r\n\r\n\tpublic _iBaseScreenPassIndex:number = 0;\r\n\r\n\tprivate _bothSides:boolean = false; // update\r\n\tprivate _animationSet:IAnimationSet;\r\n\r\n\t/**\r\n\t * A list of material owners, renderables or custom Entities.\r\n\t */\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\r\n\tprivate _alphaPremultiplied:boolean;\r\n\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\r\n\tprivate _mipmap:boolean = true;\r\n\tprivate _smooth:boolean = true;\r\n\tprivate _repeat:boolean = false;\r\n\tprivate _color:number = 0xFFFFFF;\r\n\tpublic _pTexture:TextureBase;\r\n\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\r\n\tpublic _pHeight:number = 1;\r\n\tpublic _pWidth:number = 1;\r\n\r\n\tprivate _onLightChangeDelegate:(event:Event) => void;\r\n\r\n\t/**\r\n\t * Creates a new MaterialBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._iMaterialId = Number(this.id);\r\n\r\n\t\tthis._owners = new Array<IRenderableOwner>();\r\n\r\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\r\n\r\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\r\n\t}\r\n\r\n\t/**\r\n\t * The alpha of the surface.\r\n\t */\r\n\tpublic get alpha():number\r\n\t{\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tpublic set alpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._alpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alpha = value;\r\n\r\n\t\tif (this._colorTransform == null)\r\n\t\t\tthis._colorTransform = new ColorTransform();\r\n\r\n\t\tthis._colorTransform.alphaMultiplier = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\r\n\t * example when using textures of foliage, consider using alphaThreshold instead.\r\n\t */\r\n\tpublic get alphaBlending():boolean\r\n\t{\r\n\t\treturn this._alphaBlending;\r\n\t}\r\n\r\n\tpublic set alphaBlending(value:boolean)\r\n\t{\r\n\t\tif (this._alphaBlending == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaBlending = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic get frameRect():Rectangle\r\n\t{\r\n\t\treturn this._frameRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._pHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\tpublic set lightPicker(value:LightPickerBase)\r\n\t{\r\n\t\tif (this._pLightPicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pLightPicker = value;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\r\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\r\n\t */\r\n\tpublic get repeat():boolean\r\n\t{\r\n\t\treturn this._repeat;\r\n\t}\r\n\r\n\tpublic set repeat(value:boolean)\r\n\t{\r\n\t\tif (this._repeat == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._repeat = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The diffuse reflectivity color of the surface.\r\n\t */\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tif (this._color == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._color = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The texture object to use for the albedo colour.\r\n\t */\r\n\tpublic get texture():TextureBase\r\n\t{\r\n\t\treturn this._pTexture;\r\n\t}\r\n\r\n\tpublic set texture(value:TextureBase)\r\n\t{\r\n\t\tif (this._pTexture == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pTexture = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\r\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\r\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\r\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\r\n\r\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\r\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\r\n\t\t} else {\r\n\t\t\tthis._frameRect = null;\r\n\t\t\tthis._pHeight = 1;\r\n\t\t\tthis._pWidth = 1;\r\n\t\t}\r\n\r\n\r\n\t\tthis._pNotifySizeChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get animateUVs():boolean\r\n\t{\r\n\t\treturn this._pAnimateUVs;\r\n\t}\r\n\r\n\tpublic set animateUVs(value:boolean)\r\n\t{\r\n\t\tif (this._pAnimateUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAnimateUVs = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get useColorTransform():boolean\r\n\t{\r\n\t\treturn this._pUseColorTransform;\r\n\t}\r\n\r\n\tpublic set useColorTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pUseColorTransform == value)\r\n\t\t\treturn;\r\n\t\tthis._pUseColorTransform = value;\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\r\n\t * compatibility for constrained mode.\r\n\t */\r\n\tpublic get enableLightFallOff():boolean\r\n\t{\r\n\t\treturn this._enableLightFallOff;\r\n\t}\r\n\r\n\tpublic set enableLightFallOff(value:boolean)\r\n\t{\r\n\t\tif (this._enableLightFallOff == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._enableLightFallOff = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\r\n\t * and/or light probes for diffuse reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get diffuseLightSources():number\r\n\t{\r\n\t\treturn this._diffuseLightSources;\r\n\t}\r\n\r\n\tpublic set diffuseLightSources(value:number)\r\n\t{\r\n\t\tif (this._diffuseLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._diffuseLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\r\n\t * and/or light probes for specular reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get specularLightSources():number\r\n\t{\r\n\t\treturn this._specularLightSources;\r\n\t}\r\n\r\n\tpublic set specularLightSources(value:number)\r\n\t{\r\n\t\tif (this._specularLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._specularLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether or not the material should cull triangles facing away from the camera.\r\n\t */\r\n\tpublic get bothSides():boolean\r\n\t{\r\n\t\treturn this._bothSides;\r\n\t}\r\n\r\n\tpublic set bothSides(value:boolean)\r\n\t{\r\n\t\tif (this._bothSides = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._bothSides = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether visible textures (or other pixels) used by this material have\r\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\r\n\t * blended alpha edges.\r\n\t */\r\n\tpublic get alphaPremultiplied():boolean\r\n\t{\r\n\t\treturn this._alphaPremultiplied;\r\n\t}\r\n\r\n\tpublic set alphaPremultiplied(value:boolean)\r\n\t{\r\n\t\tif (this._alphaPremultiplied == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaPremultiplied = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._pWidth;\r\n\t}\r\n\r\n\t//\r\n\t// MATERIAL MANAGEMENT\r\n\t//\r\n\t/**\r\n\t * Mark an IRenderableOwner as owner of this material.\r\n\t * Assures we're not using the same material across renderables with different animations, since the\r\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\r\n\t *\r\n\t * @param owner The IRenderableOwner that had this material assigned\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iAddOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.push(owner);\r\n\r\n\t\tvar animationSet:IAnimationSet;\r\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\r\n\r\n\t\tif (animator)\r\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\r\n\r\n\t\tif (owner.animator) {\r\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\r\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\r\n\t\t\t} else {\r\n\t\t\t\tif (this._animationSet != animationSet) {\r\n\r\n\t\t\t\t\tthis._animationSet = animationSet;\r\n\r\n\t\t\t\t\tthis.invalidateAnimation();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an IRenderableOwner as owner.\r\n\t * @param owner\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\r\n\r\n\t\tif (this._owners.length == 0) {\r\n\t\t\tthis._animationSet = null;\r\n\r\n\t\t\tthis.invalidateAnimation();\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pInvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\tprivate invalidateAnimation()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateAnimation();\r\n\t}\r\n\t\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the light picker's configuration changed.\r\n\t */\r\n\tprivate onLightsChange(event:Event)\r\n\t{\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pNotifySizeChanged()\r\n\t{\r\n\t\tif (!this._sizeChanged)\r\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\r\n\r\n\t\tthis.dispatchEvent(this._sizeChanged);\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n}\r\n\r\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\n\r\n/**\r\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\r\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\r\n * extended to provide more application-specific dynamic selection of lights.\r\n *\r\n * @see StaticLightPicker\r\n */\r\nclass LightPickerBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset LightPicker]\";\r\n\r\n\tpublic _pNumPointLights:number = 0;\r\n\tpublic _pNumDirectionalLights:number = 0;\r\n\tpublic _pNumCastingPointLights:number = 0;\r\n\tpublic _pNumCastingDirectionalLights:number = 0;\r\n\tpublic _pNumLightProbes:number = 0;\r\n\r\n\tpublic _pAllPickedLights:Array<LightBase>;\r\n\tpublic _pPointLights:Array<PointLight>;\r\n\tpublic _pCastingPointLights:Array<PointLight>;\r\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pLightProbes:Array<LightProbe>;\r\n\tpublic _pLightProbeWeights:Array<number>;\r\n\r\n\t/**\r\n\t * Creates a new LightPickerBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes resources used by the light picker.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightPickerBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that will be provided.\r\n\t */\r\n\tpublic get numDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of point lights that will be provided.\r\n\t */\r\n\tpublic get numPointLights():number\r\n\t{\r\n\t\treturn this._pNumPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of point lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingPointLights():number\r\n\t{\r\n\t\treturn this._pNumCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of light probes that will be provided.\r\n\t */\r\n\tpublic get numLightProbes():number\r\n\t{\r\n\t\treturn this._pNumLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights to be used for shading.\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights to be used for shading.\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingPointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected light probes to be used for shading.\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._pLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The weights for each light probe, defining their influence on the object.\r\n\t */\r\n\tpublic get lightProbeWeights():Array<number>\r\n\t{\r\n\t\treturn this._pLightProbeWeights;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of all the collected lights.\r\n\t */\r\n\tpublic get allPickedLights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pAllPickedLights;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\r\n\t */\r\n\tpublic collectLights(renderable:IRenderable)\r\n\t{\r\n\t\tthis.updateProbeWeights(renderable);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\r\n\t * @param renderable The renderble for which to calculate the light probes' influence.\r\n\t */\r\n\tprivate updateProbeWeights(renderable:IRenderable)\r\n\t{\r\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\r\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\r\n\t\tvar lightPos:Vector3D;\r\n\r\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\r\n\t\tvar dx:number, dy:number, dz:number;\r\n\t\tvar w:number, total:number = 0;\r\n\t\tvar i:number;\r\n\r\n\t\t// calculates weights for probes\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\r\n\r\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\r\n\t\t\tdx = rx - lightPos.x;\r\n\t\t\tdy = ry - lightPos.y;\r\n\t\t\tdz = rz - lightPos.z;\r\n\t\t\t// weight is inversely proportional to square of distance\r\n\t\t\tw = dx*dx + dy*dy + dz*dz;\r\n\r\n\t\t\t// just... huge if at the same spot\r\n\t\t\tw = w > .00001? 1/w : 50000000;\r\n\t\t\tthis._pLightProbeWeights[i] = w;\r\n\t\t\ttotal += w;\r\n\t\t}\r\n\r\n\t\t// normalize\r\n\t\ttotal = 1/total;\r\n\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\r\n\t\t\tthis._pLightProbeWeights[i] *= total;\r\n\t}\r\n}\r\n\r\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\n\r\n/**\r\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\r\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\r\n * occur.\r\n */\r\nclass StaticLightPicker extends LightPickerBase\r\n{\r\n\tprivate _lights:Array<any>;\r\n\tprivate _onCastShadowChangeDelegate:Function;\r\n\r\n\t/**\r\n\t * Creates a new StaticLightPicker object.\r\n\t * @param lights The lights to be used for shading.\r\n\t */\r\n\tconstructor(lights)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\r\n\r\n\t\tthis.lights = lights;\r\n\t}\r\n\r\n\t/**\r\n\t * The lights used for shading.\r\n\t */\r\n\tpublic get lights()\r\n\t{\r\n\t\treturn this._lights;\r\n\t}\r\n\r\n\tpublic set lights(value:Array<any>)\r\n\t{\r\n\t\tvar numPointLights:number = 0;\r\n\t\tvar numDirectionalLights:number = 0;\r\n\t\tvar numCastingPointLights:number = 0;\r\n\t\tvar numCastingDirectionalLights:number = 0;\r\n\t\tvar numLightProbes:number = 0;\r\n\t\tvar light:LightBase;\r\n\r\n\t\tif (this._lights)\r\n\t\t\tthis.clearListeners();\r\n\r\n\t\tthis._lights = value;\r\n\t\tthis._pAllPickedLights = value;\r\n\t\tthis._pPointLights = new Array<PointLight>();\r\n\t\tthis._pCastingPointLights = new Array<PointLight>();\r\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pLightProbes = new Array<LightProbe>();\r\n\r\n\t\tvar len:number = value.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tlight = value[i];\r\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\r\n\t\t\tif (light instanceof PointLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\r\n\r\n\t\t\t} else if (light instanceof DirectionalLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\r\n\r\n\t\t\t} else if (light instanceof LightProbe) {\r\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\r\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\r\n\t\tthis._pNumPointLights = numPointLights;\r\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\r\n\t\tthis._pNumLightProbes = numLightProbes;\r\n\r\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\r\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\r\n\r\n\t\t// notify material lights have changed\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove configuration change listeners on the lights.\r\n\t */\r\n\tprivate clearListeners()\r\n\t{\r\n\t\tvar len:number = this._lights.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Notifies the material of a configuration change.\r\n\t */\r\n\tprivate onCastShadowChange(event:LightEvent)\r\n\t{\r\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\r\n\t\t// But keep seperated in multipass\r\n\r\n\t\tvar light:LightBase = <LightBase> event.target;\r\n\r\n\t\tif (light instanceof PointLight)\r\n\t\t\tthis.updatePointCasting(<PointLight> light);\r\n\t\telse if (light instanceof DirectionalLight)\r\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\r\n\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a directional light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updateDirectionalCasting(light:DirectionalLight)\r\n\t{\r\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumDirectionalLights;\r\n\t\t\t++this._pNumCastingDirectionalLights;\r\n\r\n\r\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pCastingDirectionalLights.push(light);\r\n\r\n\t\t} else {\r\n\t\t\t++this._pNumDirectionalLights;\r\n\t\t\t--this._pNumCastingDirectionalLights;\r\n\r\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pDirectionalLights.push(light);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a point light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updatePointCasting(light:PointLight)\r\n\t{\r\n\t\tvar pl:PointLight = <PointLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumPointLights;\r\n\t\t\t++this._pNumCastingPointLights;\r\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pCastingPointLights.push(light);\r\n\t\t} else {\r\n\t\t\t++this._pNumPointLights;\r\n\t\t\t--this._pNumCastingPointLights;\r\n\r\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pPointLights.push(light);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\r\n{\r\n\tpublic _pScissorRects:Rectangle[];\r\n\tprivate _pScissorRectsInvalid:boolean = true;\r\n\tprivate _splitRatios:number[];\r\n\r\n\tprivate _numCascades:number /*int*/;\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\r\n\r\n\tprivate _texOffsetsX:Array<number>;\r\n\tprivate _texOffsetsY:Array<number>;\r\n\r\n\tprivate _changeDispatcher:EventDispatcher;\r\n\tprivate _nearPlaneDistances:number[];\r\n\r\n\tconstructor(numCascades:number /*uint*/ = 3)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (numCascades < 1 || numCascades > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = numCascades;\r\n\t\tthis._changeDispatcher = new EventDispatcher(this);\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tpublic getSplitRatio(index:number /*uint*/):number\r\n\t{\r\n\t\treturn this._splitRatios[index];\r\n\t}\r\n\r\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (index >= this._numCascades)\r\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\r\n\r\n\t\tthis._splitRatios[index] = value;\r\n\t}\r\n\r\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\r\n\t{\r\n\t\treturn this._depthCameras[partition].viewProjection;\r\n\t}\r\n\r\n\tprivate init()\r\n\t{\r\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\r\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\r\n\r\n\t\tvar s:number = 1;\r\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\r\n\t\t\tthis._splitRatios[i] = s;\r\n\t\t\ts *= .4;\r\n\t\t}\r\n\r\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\r\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\r\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\r\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\r\n\t\tthis._depthCameras = new Array<Camera>();\r\n\r\n\t\tfor (i = 0; i < this._numCascades; ++i) {\r\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\r\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\r\n\t{\r\n\t\tsuper._pSetDepthMapSize(value);\r\n\r\n\t\tthis.invalidateScissorRects();\r\n\t}\r\n\r\n\tprivate invalidateScissorRects()\r\n\t{\r\n\t\tthis._pScissorRectsInvalid = true;\r\n\t}\r\n\r\n\tpublic get numCascades():number /*int*/\r\n\t{\r\n\t\treturn this._numCascades;\r\n\t}\r\n\r\n\tpublic set numCascades(value:number /*int*/)\r\n\t{\r\n\t\tif (value == this._numCascades)\r\n\t\t\treturn;\r\n\r\n\t\tif (value < 1 || value > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = value;\r\n\t\tthis.invalidateScissorRects();\r\n\t\tthis.init();\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tif (this._pScissorRectsInvalid)\r\n\t\t\tthis.updateScissorRects();\r\n\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\r\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\r\n\t}\r\n\r\n\tprivate updateScissorRects()\r\n\t{\r\n\t\tvar half:number = this._pDepthMapSize*.5;\r\n\r\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\r\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\r\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\r\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\r\n\r\n\t\tthis._pScissorRectsInvalid = false;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar matrix:Matrix3D;\r\n\t\tvar projection:IProjection = viewCamera.projection;\r\n\t\tvar projectionNear:number = projection.near;\r\n\t\tvar projectionRange:number = projection.far - projectionNear;\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\r\n\t\t\tmatrix = this._depthLenses[i].matrix;\r\n\r\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\r\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\r\n\r\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\r\n\r\n\t\t\tthis._depthLenses[i].matrix = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar xN:number, yN:number, zN:number;\r\n\t\tvar xF:number, yF:number, zF:number;\r\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\r\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\r\n\t\twhile (i < 12) {\r\n\t\t\txN = this._pLocalFrustum[i];\r\n\t\t\tyN = this._pLocalFrustum[i + 1];\r\n\t\t\tzN = this._pLocalFrustum[i + 2];\r\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\r\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\r\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\r\n\t\t\tif (xN < minX)\r\n\t\t\t\tminX = xN;\r\n\t\t\tif (xN > maxX)\r\n\t\t\t\tmaxX = xN;\r\n\t\t\tif (yN < minY)\r\n\t\t\t\tminY = yN;\r\n\t\t\tif (yN > maxY)\r\n\t\t\t\tmaxY = yN;\r\n\t\t\tif (zN > maxZ)\r\n\t\t\t\tmaxZ = zN;\r\n\t\t\tif (xF < minX)\r\n\t\t\t\tminX = xF;\r\n\t\t\tif (xF > maxX)\r\n\t\t\t\tmaxX = xF;\r\n\t\t\tif (yF < minY)\r\n\t\t\t\tminY = yF;\r\n\t\t\tif (yF > maxY)\r\n\t\t\t\tmaxY = yF;\r\n\t\t\tif (zF > maxZ)\r\n\t\t\t\tmaxZ = zF;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tminZ = 1;\r\n\r\n\t\tvar w:number = (maxX - minX);\r\n\t\tvar h:number = (maxY - minY);\r\n\t\tvar d:number = 1/(maxZ - minZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\r\n\t\th = Math.floor(h/snap2 + 1)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -minZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t\tmatrix.appendScale(.96, .96, 1);\r\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\r\n\t\tmatrix.appendScale(.5, .5, 1);\r\n\t}\r\n\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.addEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic dispatchEvent(event:Event)\r\n\t{\r\n\t\treturn this._changeDispatcher.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic hasEventListener(type:string):boolean\r\n\t{\r\n\t\treturn this._changeDispatcher.hasEventListener(type);\r\n\t}\r\n\r\n\tget _iNearPlaneDistances():Array<number>\r\n\t{\r\n\t\treturn this._nearPlaneDistances;\r\n\t}\r\n}\r\n\r\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\nclass CubeMapShadowMapper extends ShadowMapperBase\r\n{\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _projections:Array<PerspectiveProjection>;\r\n\tprivate _needsRender:Array<boolean>;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pDepthMapSize = 512;\r\n\t\tthis._needsRender = new Array();\r\n\t\tthis.initCameras();\r\n\t}\r\n\r\n\tprivate initCameras()\r\n\t{\r\n\t\tthis._depthCameras = new Array();\r\n\t\tthis._projections = new Array();\r\n\r\n\t\t// posX, negX, posY, negY, posZ, negZ\r\n\t\tthis.addCamera(0, 90, 0);\r\n\t\tthis.addCamera(0, -90, 0);\r\n\t\tthis.addCamera(-90, 0, 0);\r\n\t\tthis.addCamera(90, 0, 0);\r\n\t\tthis.addCamera(0, 0, 0);\r\n\t\tthis.addCamera(0, 180, 0);\r\n\t}\r\n\r\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\r\n\t{\r\n\t\tvar cam:Camera = new Camera();\r\n\t\tcam.rotationX = rotationX;\r\n\t\tcam.rotationY = rotationY;\r\n\t\tcam.rotationZ = rotationZ;\r\n\t\tcam.projection.near = .01;\r\n\r\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\r\n\t\tprojection.fieldOfView = 90;\r\n\t\tthis._projections.push(projection);\r\n\t\tcam.projection._iAspectRatio = 1;\r\n\t\tthis._depthCameras.push(cam);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateDepthTexture():SingleCubeTexture\r\n\t{\r\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar light:PointLight = <PointLight>(this._pLight);\r\n\t\tvar maxDistance:number = light._pFallOff;\r\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\r\n\r\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tthis._projections[i].far = maxDistance;\r\n\t\t\tthis._depthCameras[i].transform.position = pos;\r\n\t\t\tthis._needsRender[i] = true;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tif (this._needsRender[i]) {\r\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\r\n\t\t\t\tthis._pCasterCollector.clear();\r\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass DirectionalShadowMapper extends ShadowMapperBase\r\n{\r\n\tpublic _pOverallDepthCamera:Camera;\r\n\tpublic _pLocalFrustum:Array<number>;\r\n\r\n\tpublic _pLightOffset:number = 10000;\r\n\tpublic _pMatrix:Matrix3D;\r\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\r\n\tpublic _pSnap:number = 64;\r\n\r\n\tpublic _pCullPlanes:Array<Plane3D>;\r\n\tpublic _pMinZ:number;\r\n\tpublic _pMaxZ:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pCullPlanes = [];\r\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\r\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\r\n\t\tthis._pLocalFrustum = [];\r\n\t\tthis._pMatrix = new Matrix3D();\r\n\t}\r\n\r\n\tpublic get snap():number\r\n\t{\r\n\t\treturn this._pSnap;\r\n\t}\r\n\r\n\tpublic set snap(value:number)\r\n\t{\r\n\t\tthis._pSnap = value;\r\n\t}\r\n\r\n\tpublic get lightOffset():number\r\n\t{\r\n\t\treturn this._pLightOffset;\r\n\t}\r\n\r\n\tpublic set lightOffset(value:number)\r\n\t{\r\n\t\tthis._pLightOffset = value;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get iDepthProjection():Matrix3D\r\n\t{\r\n\t\treturn this._pOverallDepthCamera.viewProjection;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._pMaxZ - this._pMinZ;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\r\n\t{\r\n\t\tif (this._depthMap == depthMap)\r\n\t\t\treturn;\r\n\r\n\t\tsuper.iSetDepthMap(depthMap);\r\n\r\n\t\tif (this._depthMap) {\r\n\t\t\tthis._explicitDepthMap = true;\r\n\t\t\tthis._pDepthMapSize = depthMap.width;\r\n\t\t} else {\r\n\t\t\tthis._explicitDepthMap = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():Single2DTexture\r\n\t{\r\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\r\n\t}\r\n\r\n\t//@protected\r\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\r\n\t{\r\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\r\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\r\n\t\tthis._pCullPlanes.length = 4;\r\n\r\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\r\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\r\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\r\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tvar dir:Vector3D = light.sceneDirection;\r\n\t\tvar dirX:number = dir.x;\r\n\t\tvar dirY:number = dir.y;\r\n\t\tvar dirZ:number = dir.z;\r\n\t\tvar j:number = 4;\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\r\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\r\n\t\t\t\tthis._pCullPlanes[j++] = plane;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\t}\r\n\r\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar dir:Vector3D;\r\n\t\tvar x:number, y:number, z:number;\r\n\t\tvar minX:number, minY:number;\r\n\t\tvar maxX:number, maxY:number;\r\n\t\tvar i:number;\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tdir = light.sceneDirection;\r\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\r\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tthis._pOverallDepthCamera.x = x;\r\n\t\tthis._pOverallDepthCamera.y = y;\r\n\t\tthis._pOverallDepthCamera.z = z;\r\n\r\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\r\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\r\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\r\n\r\n\t\tminX = maxX = this._pLocalFrustum[0];\r\n\t\tminY = maxY = this._pLocalFrustum[1];\r\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\r\n\r\n\t\ti = 3;\r\n\t\twhile (i < 24) {\r\n\t\t\tx = this._pLocalFrustum[i];\r\n\t\t\ty = this._pLocalFrustum[i + 1];\r\n\t\t\tz = this._pLocalFrustum[i + 2];\r\n\t\t\tif (x < minX)\r\n\t\t\t\tminX = x;\r\n\t\t\tif (x > maxX)\r\n\t\t\t\tmaxX = x;\r\n\t\t\tif (y < minY)\r\n\t\t\t\tminY = y;\r\n\t\t\tif (y > maxY)\r\n\t\t\t\tmaxY = y;\r\n\t\t\tif (z > this._pMaxZ)\r\n\t\t\t\tthis._pMaxZ = z;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tthis._pMinZ = 1;\r\n\r\n\t\tvar w:number = maxX - minX;\r\n\t\tvar h:number = maxY - minY;\r\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\r\n\t\th = Math.floor(h/snap2 + 2)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -this._pMinZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t}\r\n}\r\n\r\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\r\n{\r\n\tprivate _coverageRatio:number;\r\n\r\n\tconstructor(coverageRatio:number = .5)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.coverageRatio = coverageRatio;\r\n\t}\r\n\r\n\t/**\r\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\r\n\t */\r\n\tpublic get coverageRatio():number\r\n\t{\r\n\t\treturn this._coverageRatio;\r\n\t}\r\n\r\n\tpublic set coverageRatio(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1; else if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._coverageRatio = value;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\r\n\t\t\tvar v:number = corners[i];\r\n\t\t\tthis._pLocalFrustum[i] = v;\r\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\r\n\t\t}\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t}\r\n}\r\n\r\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass ShadowMapperBase\r\n{\r\n\r\n\tpublic _pCasterCollector:ShadowCasterCollector;\r\n\r\n\tpublic _depthMap:TextureBase;\r\n\tpublic _pDepthMapSize:number = 2048;\r\n\tpublic _pLight:LightBase;\r\n\tpublic _explicitDepthMap:boolean;\r\n\tprivate _autoUpdateShadows:boolean = true;\r\n\tpublic _iShadowsInvalid:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\r\n\t}\r\n\r\n\tpublic pCreateCasterCollector()\r\n\t{\r\n\t\treturn new ShadowCasterCollector();\r\n\t}\r\n\r\n\tpublic get autoUpdateShadows():boolean\r\n\t{\r\n\t\treturn this._autoUpdateShadows;\r\n\t}\r\n\r\n\tpublic set autoUpdateShadows(value:boolean)\r\n\t{\r\n\t\tthis._autoUpdateShadows = value;\r\n\t}\r\n\r\n\tpublic updateShadows()\r\n\t{\r\n\t\tthis._iShadowsInvalid = true;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:TextureBase)\r\n\t{\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = depthMap;\r\n\t}\r\n\r\n\tpublic get light():LightBase\r\n\t{\r\n\t\treturn this._pLight;\r\n\t}\r\n\r\n\tpublic set light(value:LightBase)\r\n\t{\r\n\t\tthis._pLight = value;\r\n\t}\r\n\r\n\tpublic get depthMap():TextureBase\r\n\t{\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\treturn this._depthMap;\r\n\t}\r\n\r\n\tpublic get depthMapSize():number\r\n\t{\r\n\t\treturn this._pDepthMapSize;\r\n\t}\r\n\r\n\tpublic set depthMapSize(value:number)\r\n\t{\r\n\t\tif (value == this._pDepthMapSize)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSetDepthMapSize(value);\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pCasterCollector = null;\r\n\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = null;\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():TextureBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\r\n\t{\r\n\t\tthis._iShadowsInvalid = false;\r\n\r\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\r\n\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value)\r\n\t{\r\n\t\tthis._pDepthMapSize = value;\r\n\r\n\t\tif (this._explicitDepthMap) {\r\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\r\n\t\t} else if (this._depthMap) {\r\n\t\t\tthis._depthMap.dispose();\r\n\t\t\tthis._depthMap = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ShadowMapperBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\n\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass BasicPartition extends PartitionBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._rootNode = new NodeBase();\r\n\t}\r\n}\r\n\r\nexport = BasicPartition;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.CameraNode\r\n */\r\nclass CameraNode extends EntityNode\r\n{\r\n\tconstructor(pool:EntityNodePool, camera:Camera, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, camera, partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\r\n\t}\r\n}\r\n\r\nexport = CameraNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport CollectorBase = require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity = require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport PartitionBase\t\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport NodeBase = require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode = require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport ContainerNodePool = require(\"awayjs-display/lib/pool/ContainerNodePool\");\r\nimport INode\t\t\t= require(\"awayjs-display/lib/partition/INode\");\r\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\r\n\r\n/**\r\n * Maintains scenegraph heirarchy when collecting nodes\r\n */\r\nclass ContainerNode extends NodeBase implements IDisplayObjectNode\r\n{\r\n    public isContainerNode:boolean = true;\r\n\r\n    public _iUpdateQueueNext:IDisplayObjectNode;\r\n\r\n    private _pool:ContainerNodePool;\r\n    private _container : DisplayObjectContainer;\r\n    private _partition:PartitionBase;\r\n    private _childDepths:Array<number> = new Array<number>();\r\n    private _childMasks:Array<INode> = new Array<INode>();\r\n    private _numChildMasks:number = 0;\r\n\r\n    public _pEntityNode:IDisplayObjectNode;\r\n\r\n    constructor(pool:ContainerNodePool, container:DisplayObjectContainer, partition:PartitionBase)\r\n    {\r\n        super();\r\n\r\n        this._pool = pool;\r\n        this._container = container;\r\n        this._partition = partition;\r\n    }\r\n\r\n    public get displayObject():DisplayObject\r\n    {\r\n        return this._container;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param traverser\r\n     */\r\n    public acceptTraverser(traverser:CollectorBase)\r\n    {\r\n        //containers nodes are for ordering only, no need to check enterNode or debugVisible\r\n        if (this.numEntities == 0)\r\n            return;\r\n\r\n        if (this._pEntityNode)\r\n            this._pEntityNode.acceptTraverser(traverser);\r\n\r\n        var i:number;\r\n        for (i = 0; i < this._numChildMasks; i++)\r\n            this._childMasks[i].acceptTraverser(traverser);\r\n\r\n        for (i = 0; i < this._pNumChildNodes; i++)\r\n            this._pChildNodes[i].acceptTraverser(traverser);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param entity\r\n     * @returns {away.partition.NodeBase}\r\n     */\r\n    public findParentForNode(node:IDisplayObjectNode):INode\r\n    {\r\n        if (!node.isContainerNode && node.displayObject.isContainer)\r\n            return this._pool.getItem(<DisplayObjectContainer> node.displayObject);\r\n\r\n        return this._pool.getItem(node.displayObject.parent);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param node\r\n     * @internal\r\n     */\r\n    public iAddNode(node:IDisplayObjectNode)\r\n    {\r\n        node.parent = this;\r\n\r\n        if (!node.isContainerNode && node.displayObject.isContainer) {\r\n            this._pEntityNode = node;\r\n        } else if (node.displayObject.maskMode) {\r\n            this._childMasks.push(node);\r\n            this._numChildMasks = this._childMasks.length;\r\n        } else {\r\n            var depth:number = node.displayObject._depthID;\r\n            var len:number = this._childDepths.length;\r\n            var index:number = len;\r\n\r\n            while (index--)\r\n                if (this._childDepths[index] < depth)\r\n                    break;\r\n\r\n            index++;\r\n\r\n            if (index < len) {\r\n                this._pChildNodes.splice(index, 0, node);\r\n                this._childDepths.splice(index, 0, depth);\r\n            } else {\r\n                this._pChildNodes.push(node);\r\n                this._childDepths.push(depth);\r\n            }\r\n            this._pNumChildNodes = this._childDepths.length;\r\n        }\r\n\r\n        node._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\r\n\r\n        var numEntities:number = node.numEntities;\r\n        node = this;\r\n\r\n        do {\r\n            node.numEntities += numEntities;\r\n        } while ((node = <EntityNode> node.parent) != null);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param node\r\n     * @internal\r\n     */\r\n    public iRemoveNode(node:IDisplayObjectNode)\r\n    {\r\n        if (!node.isContainerNode && node.displayObject.isContainer) {\r\n            this._pEntityNode = null;\r\n        } else if (node.displayObject.maskMode) {\r\n            this._childMasks.splice(this._childMasks.indexOf(node), 1);\r\n            this._numChildMasks = this._childMasks.length;\r\n        } else {\r\n            var index:number = this._pChildNodes.indexOf(node);\r\n\r\n            this._pChildNodes.splice(index, 1);\r\n            this._childDepths.splice(index, 1);\r\n\r\n            this._pNumChildNodes = this._childDepths.length;\r\n        }\r\n\r\n        node._iUpdateImplicitDebugVisible(false);\r\n\r\n        var numEntities:number = node.numEntities;\r\n        node = this;\r\n\r\n        do {\r\n            node.numEntities -= numEntities;\r\n        } while ((node = <IDisplayObjectNode> node.parent) != null);\r\n    }\r\n}\r\nexport = ContainerNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.DirectionalLightNode\r\n */\r\nclass DirectionalLightNode extends EntityNode\r\n{\r\n\tpublic static assetClass:IAssetClass = DirectionalLight;\r\n\r\n\tprivate _directionalLight:DirectionalLight;\r\n\r\n\t/**\r\n\t *\r\n\t * @param directionalLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, directionalLight:DirectionalLight, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, directionalLight, partition);\r\n\r\n\t\tthis._directionalLight = directionalLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLightNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\r\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.EntityNode\r\n */\r\nclass EntityNode extends NodeBase implements IDisplayObjectNode\r\n{\r\n\tpublic isContainerNode:boolean = false;\r\n\r\n\tpublic _iUpdateQueueNext:IDisplayObjectNode;\r\n\tprivate _pool:EntityNodePool;\r\n\tprivate _entity:DisplayObject;\r\n\tprivate _partition:PartitionBase;\r\n\tpublic _bounds:BoundingVolumeBase;\r\n\r\n\tconstructor(pool:EntityNodePool, entity:DisplayObject, partition:PartitionBase)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pool = pool;\r\n\t\tthis._entity = entity;\r\n\t\tthis._partition = partition;\r\n\t\tthis.numEntities = 1;\r\n\r\n\t\tthis.updateBounds();\r\n\r\n\t\tthis.debugVisible = this._entity.debugVisible;\r\n\t}\r\n\r\n\tpublic get displayObject():DisplayObject\r\n\t{\r\n\t\treturn this._entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn this.displayObject.castsShadows;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\r\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\ttraverser.applyEntity(<IEntity> this._entity);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\r\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\r\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\r\n\r\n\t\tif (!pickingCollisionVO.localNormal)\r\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\r\n\r\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\r\n\r\n\t\tif (rayEntryDistance < 0)\r\n\t\t\treturn false;\r\n\r\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\r\n\t\tpickingCollisionVO.rayPosition = rayPosition;\r\n\t\tpickingCollisionVO.rayDirection = rayDirection;\r\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\treturn this._bounds.boundsPrimitive;\r\n\t}\r\n\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tthis._bounds.invalidate();\r\n\r\n\t\t//this._partition.iMarkForUpdate(this);\r\n\t}\r\n\r\n\tpublic updateBounds()\r\n\t{\r\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\r\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\r\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\r\n\t\t\tthis._bounds = new NullBounds();\r\n\r\n\t\tthis.updateDebugEntity();\r\n\t}\r\n}\r\n\r\nexport = EntityNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.LightProbeNode\r\n */\r\nclass LightProbeNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"lightProbeNode\";\r\n\r\n\tprivate _lightProbe:LightProbe;\r\n\r\n\t/**\r\n\t *\r\n\t * @param lightProbe\r\n\t */\r\n\tconstructor(pool:EntityNodePool, lightProbe:LightProbe, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, lightProbe, partition);\r\n\r\n\t\tthis._lightProbe = lightProbe;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = LightProbeNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\r\n\r\n/**\r\n * @class away.partition.NodeBase\r\n */\r\nclass NodeBase implements INode\r\n{\r\n\tprivate _debugChildrenVisible:boolean;\r\n\tprivate _explicitDebugVisible:boolean;\r\n\tpublic _pImplicitDebugVisible:boolean;\r\n\tpublic _pChildNodes:Array<INode> = new Array<INode>();\r\n\tpublic _pNumChildNodes:number = 0;\r\n\r\n\tpublic _pDebugEntity:IEntity;\r\n\r\n\tpublic _iCollectionMark:number;// = 0;\r\n\r\n\tpublic numEntities:number = 0;\r\n\r\n\tpublic parent:INode;\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._explicitDebugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitDebugVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitDebugVisible = value;\r\n\r\n\t\tthis._iUpdateImplicitDebugVisible(this.parent? this.parent.debugChildrenVisible : false);\r\n\r\n\t}\r\n\r\n\tpublic get debugChildrenVisible():boolean\r\n\t{\r\n\t\treturn this._debugChildrenVisible;\r\n\t}\r\n\r\n\tpublic set debugChildrenVisible(value:boolean)\r\n\t{\r\n\t\tif (this._debugChildrenVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugChildrenVisible = value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t * @internal\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param rayPosition\r\n\t * @param rayDirection\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t * @returns {away.partition.NodeBase}\r\n\t */\r\n\tpublic findParentForNode(node:INode):INode\r\n\t{\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param traverser\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this.numEntities == 0 && !this._pImplicitDebugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\tfor (var i:number = 0; i < this._pNumChildNodes; i++)\r\n\t\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic applyDebugEntity(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pDebugEntity == null)\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\r\n\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iAddNode(node:INode)\r\n\t{\r\n\t\tnode.parent = this;\r\n\t\tthis.numEntities += node.numEntities;\r\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\r\n\r\n\t\tvar numEntities:number = node.numEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode.numEntities += numEntities;\r\n\t\t} while ((node = node.parent) != null);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveNode(node:INode)\r\n\t{\r\n\t\tvar index:number = this._pChildNodes.indexOf(node);\r\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\r\n\t\tthis._pChildNodes.pop();\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(false);\r\n\r\n\t\tvar numEntities:number = node.numEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode.numEntities -= numEntities;\r\n\t\t} while ((node = node.parent) != null);\r\n\t}\r\n\r\n\tpublic _iUpdateImplicitDebugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t} else {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = null;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tpublic updateDebugEntity()\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = NodeBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\r\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass PartitionBase\r\n{\r\n\tpublic _entityNodePool:EntityNodePool;\r\n\tpublic _rootNode:INode;\r\n\r\n\tprivate _updatesMade:Boolean = false;\r\n\tprivate _updateQueue:IDisplayObjectNode;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._entityNodePool = new EntityNodePool(this);\r\n\t}\r\n\r\n\tpublic traverse(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._updatesMade)\r\n\t\t\tthis.updateEntities();\r\n\r\n\t\tthis._rootNode.acceptTraverser(traverser);\r\n\t}\r\n\r\n\tpublic iMarkForUpdate(node:IDisplayObjectNode)\r\n\t{\r\n\t\tvar t:IDisplayObjectNode = this._updateQueue;\r\n\r\n\t\twhile (t) {\r\n\t\t\tif (node == t)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tt = t._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = this._updateQueue;\r\n\r\n\t\tthis._updateQueue = node;\r\n\t\tthis._updatesMade = true;\r\n\t}\r\n\r\n\tpublic iRemoveEntity(node:IDisplayObjectNode)\r\n\t{\r\n\t\tvar t:IDisplayObjectNode;\r\n\r\n\t\tif (node.parent) {\r\n\t\t\tnode.parent.iRemoveNode(node);\r\n\t\t\tnode.parent = null;\r\n\t\t}\r\n\r\n\r\n\t\tif (node == this._updateQueue) {\r\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\r\n\t\t} else {\r\n\t\t\tt = this._updateQueue;\r\n\t\t\twhile (t && t._iUpdateQueueNext != node)\r\n\t\t\t\tt = t._iUpdateQueueNext;\r\n\r\n\t\t\tif (t)\r\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\tif (!this._updateQueue)\r\n\t\t\tthis._updatesMade = false;\r\n\t}\r\n\r\n\tprivate updateEntities()\r\n\t{\r\n\t\tvar node:IDisplayObjectNode = this._updateQueue;\r\n\t\twhile (node) {\r\n\t\t\t//required for controllers with autoUpdate set to true and queued events\r\n\t\t\tnode.displayObject._iInternalUpdate();\r\n\t\t\tnode = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\t//reset head\r\n\t\tnode = this._updateQueue;\r\n\t\tvar targetNode:INode;\r\n\t\tvar t:IDisplayObjectNode;\r\n\t\tthis._updateQueue = null;\r\n\t\tthis._updatesMade = false;\r\n\r\n\t\tdo {\r\n\t\t\ttargetNode = this._rootNode.findParentForNode(node);\r\n\r\n\t\t\tif (node.parent != targetNode) {\r\n\t\t\t\tif (node.parent)\r\n\t\t\t\t\tnode.parent.iRemoveNode(node);\r\n\t\t\t\ttargetNode.iAddNode(node);\r\n\t\t\t}\r\n\r\n\t\t\tt = node._iUpdateQueueNext;\r\n\t\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\t} while ((node = t) != null);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\r\n\t{\r\n\t\tif (displayObject.isEntity)\r\n\t\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(displayObject));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\r\n\t{\r\n\t\tif (displayObject.isEntity)\r\n\t\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(displayObject));\r\n\t}\r\n}\r\n\r\nexport = PartitionBase;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.PointLightNode\r\n */\r\nclass PointLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"pointLightNode\";\r\n\r\n\tprivate _pointLight:PointLight;\r\n\r\n\t/**\r\n\t *\r\n\t * @param pointLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, pointLight:PointLight, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, pointLight, partition);\r\n\r\n\t\tthis._pointLight = pointLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyPointLight(this._pointLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = PointLightNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\n\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport ContainerNodePool\t\t\t= require(\"awayjs-display/lib/pool/ContainerNodePool\");\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass SceneGraphPartition extends PartitionBase\r\n{\r\n\tpublic _containerNodePool:ContainerNodePool;\r\n\r\n\tconstructor(rootContainer:DisplayObjectContainer)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._containerNodePool = new ContainerNodePool(this);\r\n\r\n\t\tthis._rootNode = this._containerNodePool.getItem(rootContainer);\r\n\t}\r\n\r\n\tpublic traverse(traverser:CollectorBase)\r\n\t{\r\n\t\tsuper.traverse(traverser);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\r\n\t{\r\n\t\tsuper._iRegisterEntity(displayObject);\r\n\r\n\t\tif (displayObject.isContainer)\r\n\t\t\tthis.iMarkForUpdate(this._containerNodePool.getItem(<DisplayObjectContainer> displayObject));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\r\n\t{\r\n\t\tsuper._iUnregisterEntity(displayObject);\r\n\r\n\t\tif (displayObject.isContainer)\r\n\t\t\tthis.iRemoveEntity(this._containerNodePool.disposeItem(<DisplayObjectContainer> displayObject));\r\n\t}\r\n}\r\n\r\nexport = SceneGraphPartition;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\r\n *\r\n * @class away.partition.SkyboxNode\r\n */\r\nclass SkyboxNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"skyboxNode\";\r\n\r\n\tprivate _skyBox:Skybox;\r\n\r\n\t/**\r\n\t * Creates a new SkyboxNode object.\r\n\t * @param skyBox The Skybox to be contained in the node.\r\n\t */\r\n\tconstructor(pool:EntityNodePool, skyBox:Skybox, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, skyBox, partition);\r\n\r\n\t\tthis._skyBox = skyBox;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(<NodeBase> this))\r\n\t\t\ttraverser.applySkybox(this._skyBox);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._skyBox._iIsVisible)\r\n\t\t\treturn false;\r\n\r\n\t\t//a skybox is always in view unless its visibility is set to false\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n\r\n/**\r\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\r\n *\r\n * @see away.base.DisplayObject#pickingCollider\r\n * @see away.pick.RaycastPicker\r\n *\r\n * @class away.pick.JSPickingCollider\r\n */\r\nclass JSPickingCollider implements IPickingCollider\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>JSPickingCollider</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param billboard The billboard instance to be tested.\r\n\t * @param pickingCollisionVO The collision object used to store the collision results\r\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\r\n\t * @param findClosest\r\n\t */\r\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\r\n\t{\r\n\t\tpickingCollisionVO.renderableOwner = null;\r\n\r\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t//\r\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\r\n\t\t//\r\n\t\t//\treturn true;\r\n\t\t//}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar t:number;\r\n\t\tvar i0:number, i1:number, i2:number;\r\n\t\tvar rx:number, ry:number, rz:number;\r\n\t\tvar nx:number, ny:number, nz:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar coeff:number, u:number, v:number, w:number;\r\n\t\tvar p0x:number, p0y:number, p0z:number;\r\n\t\tvar p1x:number, p1y:number, p1z:number;\r\n\t\tvar p2x:number, p2y:number, p2z:number;\r\n\t\tvar s0x:number, s0y:number, s0z:number;\r\n\t\tvar s1x:number, s1y:number, s1z:number;\r\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\r\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\r\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\r\n\t\tvar collisionTriangleIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\r\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\r\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\r\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\r\n\t\t\t// evaluate triangle indices\r\n\t\t\ti0 = indices[index]*posDim;\r\n\t\t\ti1 = indices[index + 1]*posDim;\r\n\t\t\ti2 = indices[index + 2]*posDim;\r\n\r\n\t\t\t// evaluate triangle positions\r\n\t\t\tp0x = positions[i0];\r\n\t\t\tp0y = positions[i0 + 1];\r\n\t\t\tp0z = positions[i0 + 2];\r\n\t\t\tp1x = positions[i1];\r\n\t\t\tp1y = positions[i1 + 1];\r\n\t\t\tp1z = positions[i1 + 2];\r\n\t\t\tp2x = positions[i2];\r\n\t\t\tp2y = positions[i2 + 1];\r\n\t\t\tp2z = positions[i2 + 2];\r\n\r\n\t\t\t// evaluate sides and triangle normal\r\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\r\n\t\t\ts0y = p1y - p0y;\r\n\t\t\ts0z = p1z - p0z;\r\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\r\n\t\t\ts1y = p2y - p0y;\r\n\t\t\ts1z = p2z - p0z;\r\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\r\n\t\t\tny = s0z*s1x - s0x*s1z;\r\n\t\t\tnz = s0x*s1y - s0y*s1x;\r\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\r\n\t\t\tnx *= nl;\r\n\t\t\tny *= nl;\r\n\t\t\tnz *= nl;\r\n\r\n\t\t\t// -- plane intersection test --\r\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\r\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\r\n\t\t\t\t// find collision t\r\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\r\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\r\n\t\t\t\tt = disToPlane/nDotV;\r\n\t\t\t\t// find collision point\r\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\r\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\r\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\r\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\r\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\r\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\r\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\r\n\t\t\t\trx = cx - p0x;\r\n\t\t\t\try = cy - p0y;\r\n\t\t\t\trz = cz - p0z;\r\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\r\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\r\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\r\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\r\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\r\n\t\t\t\tif (v < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif (w < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tu = 1 - v - w;\r\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\r\n\t\t\t\t\tshortestCollisionDistance = t;\r\n\t\t\t\t\tcollisionTriangleIndex = index/3;\r\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\r\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\r\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\r\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\t\tpickingCollisionVO.index = index;\r\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tif (collisionTriangleIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\r\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\r\n\t\t//this will only work while all points lie on the x/y plane\r\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\r\n\r\n\t\tvar result:Vector3D = new Vector3D();\r\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\r\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\r\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\r\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\r\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\r\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\r\n\t\trayDirection.scaleBy(t);\r\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\r\n\r\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\r\n\t\tvar collisionCurveIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\r\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\r\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\r\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\r\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\r\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\r\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\r\n\r\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\r\n\t\t{\r\n\t\t\tvar id0:number = indices[index];\r\n\t\t\tvar id1:number = indices[index + 1] * posDim;\r\n\t\t\tvar id2:number = indices[index + 2] * posDim;\r\n\r\n\t\t\tvar ax:number = positions[id0 * posDim];\r\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\r\n\t\t\tvar bx:number = positions[id1];\r\n\t\t\tvar by:number = positions[id1 + 1];\r\n\t\t\tvar cx:number = positions[id2];\r\n\t\t\tvar cy:number = positions[id2 + 1];\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - p.x;\r\n\t\t\tvar dy:number = ay - p.y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = bx - p.x;\r\n\t\t\tdy = by - p.y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = cx - p.x;\r\n\t\t\tdy = cy - p.y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t//check if not solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = p.x - ax;\r\n\t\t\t\tvar v2y:number = p.y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\tvar u:number = 1 - v - w;\r\n\r\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\r\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\r\n\t\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\r\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\r\n\t\t\tif (distance < shortestCollisionDistance) {\r\n\t\t\t\tshortestCollisionDistance = distance;\r\n\t\t\t\tcollisionCurveIndex = index/3;\r\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\r\n\t\t\t\tpickingCollisionVO.localPosition = p;\r\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\r\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\tpickingCollisionVO.index = index;\r\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (collisionCurveIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\r\n\t{\r\n\t\tvar uv:Point = new Point();\r\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\r\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\r\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\r\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\r\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\r\n\t\treturn uv;\r\n\t}\r\n}\r\n\r\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\n\r\n/**\r\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\r\n *\r\n * @see away.base.DisplayObject#pickingCollisionVO\r\n * @see away.core.pick.IPickingCollider\r\n *\r\n * @class away.pick.PickingCollisionVO\r\n */\r\nclass PickingCollisionVO\r\n{\r\n\t/**\r\n\t * The display object to which this collision object belongs.\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\t/**\r\n\t * The local position of the collision on the entity's surface.\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The local normal vector at the position of the collision.\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * The uv coordinate at the position of the collision.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took pl ace.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n//\t\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * Determines if the ray position is contained within the entity bounds.\r\n\t *\r\n\t * @see away3d.entities.Entity#bounds\r\n\t */\r\n\tpublic rayOriginIsInsideBounds:boolean;\r\n\r\n\t/**\r\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\r\n\t */\r\n\tpublic rayEntryDistance:number;\r\n\r\n\t/**\r\n\t * The material ownwer associated with a collision.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * Creates a new <code>PickingCollisionVO</code> object.\r\n\t *\r\n\t * @param entity The entity to which this collision object belongs.\r\n\t */\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n\r\n}\r\n\r\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * Picks a 3d object from a view or scene by 3D raycast calculations.\r\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\r\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\r\n *\r\n * @class away.pick.RaycastPicker\r\n */\r\nclass RaycastPicker implements IPicker\r\n{\r\n\tprivate _x:number;\r\n\tprivate _y:number;\r\n\tprivate _view:View;\r\n\tprivate _findClosestCollision:boolean;\r\n\tprivate _raycastCollector:RaycastCollector;\r\n\tprivate _ignoredEntities = [];\r\n\tprivate _onlyMouseEnabled:boolean = true;\r\n\r\n\tprivate _entities:Array<IEntity>;\r\n\tprivate _numEntities:number = 0;\r\n\tprivate _hasCollisions:boolean;\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get onlyMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._onlyMouseEnabled;\r\n\t}\r\n\r\n\tpublic set onlyMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._onlyMouseEnabled = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>RaycastPicker</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\r\n\t * or simply returns the first collision encountered. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._raycastCollector = new RaycastCollector();\r\n\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t\tthis._entities = new Array<IEntity>();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\r\n\t{\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._view = view;\r\n\r\n\t\t//update ray\r\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\r\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\r\n\r\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\r\n\t{\r\n\t\t//clear collector\r\n\t\tthis._raycastCollector.clear();\r\n\r\n\t\t//setup ray vectors\r\n\t\tthis._raycastCollector.rayPosition = rayPosition;\r\n\t\tthis._raycastCollector.rayDirection = rayDirection;\r\n\r\n\t\t// collect entities to test\r\n\t\tscene.traversePartitions(this._raycastCollector);\r\n\r\n\t\tthis._numEntities = 0;\r\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\r\n\t\tvar entity:IEntity;\r\n\r\n\t\twhile (node) {\r\n\t\t\tif (!this.isIgnored(entity = node.entity))\r\n\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n\r\n\t\t\tnode = node.next;\r\n\t\t}\r\n\r\n\t\t//early out if no collisions detected\r\n\t\tif (!this._numEntities)\r\n\t\t\treturn null;\r\n\r\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n\t}\r\n\r\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\r\n//\t\t{\r\n//\t\t\tthis._numEntities = 0;\r\n//\r\n//\t\t\tvar entity:IEntity;\r\n//\t\t\tvar l:number = entities.length;\r\n//\r\n//\t\t\tfor (var c:number = 0; c < l; c++) {\r\n//\t\t\t\tentity = entities[c];\r\n//\r\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\r\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n//\t\t\t}\r\n//\r\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n//\t\t}\r\n\r\n\tpublic setIgnoreList(entities)\r\n\t{\r\n\t\tthis._ignoredEntities = entities;\r\n\t}\r\n\r\n\tprivate isIgnored(entity:IEntity):boolean\r\n\t{\r\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\r\n\t\t\treturn true;\r\n\r\n\t\tvar len:number = this._ignoredEntities.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._ignoredEntities[i] == entity)\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\r\n\t{\r\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\r\n\t}\r\n\r\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\r\n\t{\r\n\t\t// trim before sorting\r\n\t\tthis._entities.length = this._numEntities;\r\n\r\n\t\t// Sort entities from closest to furthest.\r\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\r\n\r\n\t\t// ---------------------------------------------------------------------\r\n\t\t// Evaluate triangle collisions when needed.\r\n\t\t// Replaces collision data provided by bounds collider with more precise data.\r\n\t\t// ---------------------------------------------------------------------\r\n\r\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\r\n\t\tvar bestCollisionVO:PickingCollisionVO;\r\n\t\tvar pickingCollisionVO:PickingCollisionVO;\r\n\t\tvar entity:IEntity;\r\n\t\tvar i:number;\r\n\r\n\t\tfor (i = 0; i < this._numEntities; ++i) {\r\n\t\t\tentity = this._entities[i];\r\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\r\n\t\t\tif (entity.pickingCollider) {\r\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\r\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\r\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\r\n\t\t\t\t\tif (!this._findClosestCollision) {\r\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\r\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\r\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\r\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\r\n\t\t\t\t// if it has been established that there is NO triangle collider to test\r\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds && this.getMasksCollision(entity._iAssignedMasks()) ) {\r\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn bestCollisionVO;\r\n\t}\r\n\r\n\tprivate getMasksCollision(masks:Array<Array<DisplayObject>>)\r\n\t{\r\n\t\t//horrible hack for 2d masks\r\n\t\tif (masks != null) {\r\n\t\t\tvar position:Vector3D = this._view.unproject(this._x, this._y, 1000);\r\n\t\t\tvar numLayers:number = masks.length;\r\n\t\t\tvar children:Array<DisplayObject>;\r\n\t\t\tvar numChildren:number;\r\n\t\t\tvar layerHit:boolean;\r\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\r\n\t\t\t\tchildren = masks[i];\r\n\t\t\t\tnumChildren = children.length;\r\n\t\t\t\tlayerHit = false;\r\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++) {\r\n\t\t\t\t\tif (children[j].hitTestPoint(position.x, position.y, true, true)) {\r\n\t\t\t\t\t\tlayerHit = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!layerHit)\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\r\n\t{\r\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\r\n\r\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\r\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\r\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\r\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n}\r\n\r\nexport = RaycastPicker;",
    "import DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\n\r\n/**\r\n * @class away.pool.ContainerNodePool\r\n */\r\nclass ContainerNodePool\r\n{\r\n\tprivate static _classPool:Object = new Object();\r\n\r\n\tprivate _containerNodePool:Object = new Object();\r\n\tprivate _partition:PartitionBase;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entityNodeClass\r\n\t */\r\n\tconstructor(partition:PartitionBase)\r\n\t{\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getItem(displayObjectContainer:DisplayObjectContainer):ContainerNode\r\n\t{\r\n\t\treturn (this._containerNodePool[displayObjectContainer.id] || (this._containerNodePool[displayObjectContainer.id] = displayObjectContainer._iAddContainerNode(new ContainerNode(this, displayObjectContainer, this._partition))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic disposeItem(displayObjectContainer:DisplayObjectContainer):ContainerNode\r\n\t{\r\n\t\tvar containerNode:ContainerNode = this._containerNodePool[displayObjectContainer.id];\r\n\r\n\t\tif (containerNode) {\r\n\t\t\tdisplayObjectContainer._iRemoveContainerNode(containerNode);\r\n\r\n\t\t\tdelete this._containerNodePool[displayObjectContainer.id];\r\n\t\t}\r\n\r\n\t\treturn containerNode;\r\n\t}\r\n}\r\n\r\nexport = ContainerNodePool;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\n\r\n/**\r\n * @class away.pool.EntityListItemPool\r\n */\r\nclass EntityListItemPool\r\n{\r\n\tprivate _pool:Array<EntityListItem>;\r\n\tprivate _index:number = 0;\r\n\tprivate _poolSize:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pool = new Array<EntityListItem>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getItem():EntityListItem\r\n\t{\r\n\t\tvar item:EntityListItem;\r\n\t\tif (this._index == this._poolSize) {\r\n\t\t\titem = new EntityListItem();\r\n\t\t\tthis._pool[this._index++] = item;\r\n\t\t\t++this._poolSize;\r\n\t\t} else {\r\n\t\t\titem = this._pool[this._index++];\r\n\t\t}\r\n\t\treturn item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic freeAll()\r\n\t{\r\n\t\tthis._index = 0;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pool.length = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.pool.EntityListItem\r\n */\r\nclass EntityListItem\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic entity:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic next:EntityListItem;\r\n}\r\n\r\nexport = EntityListItem;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\r\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\r\nimport TextField\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\r\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\r\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\r\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\r\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\r\n\r\n/**\r\n * @class away.pool.EntityNodePool\r\n */\r\nclass EntityNodePool\r\n{\r\n\tprivate static _classPool:Object = new Object();\r\n\r\n\tprivate _entityNodePool:Object = new Object();\r\n\tprivate _partition:PartitionBase;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entityNodeClass\r\n\t */\r\n\tconstructor(partition:PartitionBase)\r\n\t{\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getItem(displayObject:DisplayObject):EntityNode\r\n\t{\r\n\t\treturn (this._entityNodePool[displayObject.id] || (this._entityNodePool[displayObject.id] = displayObject._iAddEntityNode(new (EntityNodePool.getClass(displayObject))(this, displayObject, this._partition))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic disposeItem(displayObject:DisplayObject):EntityNode\r\n\t{\r\n\t\tvar entityNode:EntityNode = this._entityNodePool[displayObject.id];\r\n\r\n\t\tif (entityNode) {\r\n\t\t\tdisplayObject._iRemoveEntityNode(entityNode);\r\n\r\n\t\t\tdelete this._entityNodePool[displayObject.id];\r\n\t\t}\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param imageObjectClass\r\n\t */\r\n\tpublic static registerClass(entityNodeClass:IEntityNodeClass, assetClass:IAssetClass)\r\n\t{\r\n\t\tEntityNodePool._classPool[assetClass.assetType] = entityNodeClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tpublic static getClass(displayObject:DisplayObject):IEntityNodeClass\r\n\t{\r\n\t\treturn EntityNodePool._classPool[displayObject.assetType];\r\n\t}\r\n\r\n\tprivate static main = EntityNodePool.addDefaults();\r\n\r\n\tprivate static addDefaults()\r\n\t{\r\n\t\tEntityNodePool.registerClass(CameraNode, Camera);\r\n\t\tEntityNodePool.registerClass(DirectionalLightNode, DirectionalLight);\r\n\t\tEntityNodePool.registerClass(EntityNode, Mesh);\r\n\t\tEntityNodePool.registerClass(EntityNode, Billboard);\r\n\t\tEntityNodePool.registerClass(EntityNode, LineSegment);\r\n\t\tEntityNodePool.registerClass(EntityNode, TextField);\r\n\t\tEntityNodePool.registerClass(EntityNode, MovieClip);\r\n\t\tEntityNodePool.registerClass(LightProbeNode, LightProbe);\r\n\t\tEntityNodePool.registerClass(PointLightNode, PointLight);\r\n\t\tEntityNodePool.registerClass(SkyboxNode, Skybox);\r\n\t}\r\n}\r\n\r\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\r\n\r\n/**\r\n * @class away.pool.SubMeshPool\r\n */\r\nclass SubMeshPool\r\n{\r\n\tprivate static classPool:Object = new Object();\r\n\r\n\t/**\r\n\t *\r\n\t * @param subMeshClass\r\n\t */\r\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\r\n\t{\r\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\r\n\t{\r\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\r\n\t}\r\n\r\n\tprivate static main = SubMeshPool.addDefaults();\r\n\r\n\tprivate static addDefaults()\r\n\t{\r\n\t\tSubMeshPool.registerClass(LineSubMesh);\r\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\r\n\t\tSubMeshPool.registerClass(CurveSubMesh);\r\n\t}\r\n}\r\n\r\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\r\n */\r\nclass PrefabBase extends AssetBase\r\n{\r\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\r\n\r\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\r\n\r\n\t/**\r\n\t * Creates a new PrefabBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a display object generated from this prefab\r\n\t */\r\n\tpublic getNewObject():DisplayObject\r\n\t{\r\n\t\tvar object:DisplayObject = this._pCreateObject();\r\n\r\n\t\tthis._pObjects.push(object);\r\n\r\n\t\treturn object;\r\n\t}\r\n\r\n//\t\tpublic getNewBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\r\n//\r\n//\t\t\tthis._pBatchObjects.push(object);\r\n//\r\n//\t\t\treturn object;\r\n//\t\t}\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\t// To be overridden when necessary\r\n\t}\r\n}\r\n\r\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Capsule primitive mesh.\r\n */\r\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _height:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the capsule.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the capsule.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Capsule object.\r\n\t * @param radius The radius of the capsule.\r\n\t * @param height The height of the capsule.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\r\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._height = height;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar triIndex:number = 0;\r\n\t\tvar index:number = 0;\r\n\t\tvar startIndex:number;\r\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\r\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tstartIndex = index;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\r\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\r\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\r\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\r\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// vertex\r\n\t\t\t\t\t\tpositions[index] = x;\r\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\r\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\r\n\t\t\t\t\t\t// normal\r\n\t\t\t\t\t\tnormals[index] = x*normLen;\r\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\r\n\t\t\t\t\t\t// tangent\r\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[index + 1] = t1;\r\n\t\t\t\t\t\ttangents[index + 2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV Cone primitive mesh.\r\n */\r\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cone.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cone object.\r\n\t * @param radius The radius of the bottom end of the cone\r\n\t * @param height The height of the cone\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cube primitive prefab.\r\n */\r\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _depth:number;\r\n\tprivate _tile6:boolean;\r\n\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _segmentsD:number;\r\n\r\n\t/**\r\n\t * Creates a new Cube object.\r\n\t * @param width The size of the cube along its X-axis.\r\n\t * @param height The size of the cube along its Y-axis.\r\n\t * @param depth The size of the cube along its Z-axis.\r\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\r\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\r\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._depth = depth;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._segmentsD = segmentsD;\r\n\t\tthis._tile6 = tile6;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its X-axis.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Y-axis.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Z-axis.\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._depth;\r\n\t}\r\n\r\n\tpublic set depth(value:number)\r\n\t{\r\n\t\tthis._depth = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\r\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\r\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\r\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\r\n\t * several shared edges (between the top, front, left and right faces) which simplifies\r\n\t * texture painting.\r\n\t */\r\n\tpublic get tile6():boolean\r\n\t{\r\n\t\treturn this._tile6;\r\n\t}\r\n\r\n\tpublic set tile6(value:boolean)\r\n\t{\r\n\t\tthis._tile6 = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsD():number\r\n\t{\r\n\t\treturn this._segmentsD;\r\n\t}\r\n\r\n\tpublic set segmentsD(value:number)\r\n\t{\r\n\t\tthis._segmentsD = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\t\t\r\n\t\tvar tl:number, tr:number, bl:number, br:number;\r\n\t\tvar i:number, j:number, inc:number = 0;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\t\tvar hw:number, hh:number, hd:number; // halves\r\n\t\tvar dw:number, dh:number, dd:number; // deltas\r\n\r\n\t\tvar outer_pos:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\t// half cube dimensions\r\n\t\thw = this._width/2;\r\n\t\thh = this._height/2;\r\n\t\thd = this._depth/2;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// Segment dimensions\r\n\t\t\tdw = this._width/this._segmentsW;\r\n\t\t\tdh = this._height/this._segmentsH;\r\n\t\t\tdd = this._depth/this._segmentsD;\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// front\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// back\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = 1;\r\n\t\t\t\t\ttangents[vidx] = -1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\t// top\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// bottom\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = -1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\touter_pos = hd - i*dd;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// left\r\n\t\t\t\t\tpositions[vidx] = -hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = -1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = -1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// right\r\n\t\t\t\t\tpositions[vidx] = hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = 1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = 1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\t\t\t\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t//front/back face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t//left/right face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\t//top/bottom face\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number, index:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tvar u_tile_dim:number, v_tile_dim:number;\r\n\t\tvar u_tile_step:number, v_tile_step:number;\r\n\t\tvar tl0u:number, tl0v:number;\r\n\t\tvar tl1u:number, tl1v:number;\r\n\t\tvar du:number, dv:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._tile6) {\r\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\r\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\r\n\t\t\t} else {\r\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\r\n\t\t\t\tu_tile_step = v_tile_step = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Create planes two and two, the same way that they were\r\n\t\t\t// constructed in the buildGeometry() function. First calculate\r\n\t\t\t// the top-left UV coordinate for both planes, and then loop\r\n\t\t\t// over the points, calculating the UVs from these numbers.\r\n\r\n\t\t\t// When tile6 is true, the layout is as follows:\r\n\t\t\t//       .-----.-----.-----. (1,1)\r\n\t\t\t//       | Bot |  T  | Bak |\r\n\t\t\t//       |-----+-----+-----|\r\n\t\t\t//       |  L  |  F  |  R  |\r\n\t\t\t// (0,0)'-----'-----'-----'\r\n\r\n\t\t\tindex = 0;\r\n\r\n\t\t\t// FRONT / BACK\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// TOP / BOTTOM\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 0*v_tile_step;\r\n\t\t\ttl1u = 0*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsD;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// LEFT / RIGHT\r\n\t\t\ttl0u = 0*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 1*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsD;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cylinder primitive mesh.\r\n */\r\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tpublic _pBottomRadius:number;\r\n\tpublic _pSegmentsW:number;\r\n\tpublic _pSegmentsH:number;\r\n\r\n\tprivate _topRadius:number;\r\n\tprivate _height:number;\r\n\r\n\tprivate _topClosed:boolean;\r\n\tprivate _bottomClosed:boolean;\r\n\tprivate _surfaceClosed:boolean;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get topRadius():number\r\n\t{\r\n\t\treturn this._topRadius;\r\n\t}\r\n\r\n\tpublic set topRadius(value:number)\r\n\t{\r\n\t\tthis._topRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cylinder.\r\n\t */\r\n\tpublic get bottomRadius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set bottomRadius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\tpublic setSegmentsW(value:number)\r\n\t{\r\n\t\tthis._pSegmentsW = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis.setSegmentsH(value)\r\n\r\n\t}\r\n\r\n\tpublic setSegmentsH(value:number)\r\n\t{\r\n\t\tthis._pSegmentsH = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the top end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get topClosed():boolean\r\n\t{\r\n\t\treturn this._topClosed;\r\n\t}\r\n\r\n\tpublic set topClosed(value:boolean)\r\n\t{\r\n\t\tthis._topClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get bottomClosed():boolean\r\n\t{\r\n\t\treturn this._bottomClosed;\r\n\t}\r\n\r\n\tpublic set bottomClosed(value:boolean)\r\n\t{\r\n\t\tthis._bottomClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cylinder object.\r\n\t * @param topRadius The radius of the top end of the cylinder.\r\n\t * @param bottomRadius The radius of the bottom end of the cylinder\r\n\t * @param height The radius of the bottom end of the cylinder\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\r\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._topRadius = topRadius;\r\n\t\tthis._pBottomRadius = bottomRadius;\r\n\t\tthis._height = height;\r\n\t\tthis._pSegmentsW = segmentsW;\r\n\t\tthis._pSegmentsH = segmentsH;\r\n\t\tthis._topClosed = topClosed;\r\n\t\tthis._bottomClosed = bottomClosed;\r\n\t\tthis._surfaceClosed = surfaceClosed;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\r\n\t\tvar radius:number;\r\n\t\tvar revolutionAngle:number;\r\n\r\n\t\tvar dr:number;\r\n\t\tvar latNormElev:number;\r\n\t\tvar latNormBase:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar startIndex:number = 0;\r\n\t\tvar nextVertexIndex:number = 0;\r\n\t\tvar centerVertexIndex:number = 0;\r\n\r\n\t\tvar t1:number;\r\n\t\tvar t2:number;\r\n\r\n\t\t// reset utility variables\r\n\t\tthis._numVertices = 0;\r\n\r\n\t\t// evaluate revolution steps\r\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\r\n\t\t\t}\r\n\t\t\tif (this._topClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\r\n\t\t\t}\r\n\t\t\tif (this._bottomClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\r\n\t\t\t\tnumIndices += this._pSegmentsW*3;\r\n\t\t\t}\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed && this._topRadius > 0) {\r\n\r\n\t\t\t\tz = -0.5*this._height;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = 1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = -1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\r\n\r\n\t\t\t\tz = 0.5*this._height;\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = -1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = 1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\r\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\r\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\r\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\r\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\r\n\t\t\tlatNormElev = dr/this._height;\r\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tvar a:number;\r\n\t\t\t\tvar b:number;\r\n\t\t\t\tvar c:number;\r\n\t\t\t\tvar d:number;\r\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\t\tt2 = -na0;\r\n\t\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\r\n\t\t\t\t\t\t\tnaComp2 = na1;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tt1 = -na0;\r\n\t\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t\t\tnaComp1 = na1;\r\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\r\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t\t// close triangle\r\n\t\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\r\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\t\t\tvar _radius = 50;\r\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\r\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar revolutionAngle:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\r\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Plane primitive mesh.\r\n */\r\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _doubleSided:boolean;\r\n\r\n\t/**\r\n\t * Creates a new Plane object.\r\n\t * @param width The width of the plane.\r\n\t * @param height The height of the plane.\r\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\r\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\r\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\r\n\t{\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._doubleSided = doubleSided;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\r\n\t * false, respectively. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\r\n\t */\r\n\tpublic get doubleSided():boolean\r\n\t{\r\n\t\treturn this._doubleSided;\r\n\t}\r\n\r\n\tpublic set doubleSided(value:boolean)\r\n\t{\r\n\t\tthis._doubleSided = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the plane.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the plane.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar x:number, y:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar base:number;\r\n\t\tvar tw:number = this._segmentsW + 1;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar xi:number;\r\n\t\tvar yi:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar normals:Float32Array;\r\n\t\t\tvar tangents:Float32Array;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumIndices *= 2;\r\n\r\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\r\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\r\n\r\n\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\r\n\t\t\t\t\t\tpositions[vidx + 2] = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx + 1] = y;\r\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\r\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\r\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\r\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\r\n\r\n\t\t\t\t\t\tbase = xi + yi*tw;\r\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\r\n\r\n\t\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\r\n\t\t\tvar hw:number = this._width/2;\r\n\t\t\tvar hh:number = this._height/2;\r\n\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar uvs:Float32Array;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t\tthis._pInvalidateGeometry()\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\tindex += 2;\r\n\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\t\tindex += 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV RegularPolygon primitive mesh.\r\n */\r\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the regular polygon.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of sides of the regular polygon.\r\n\t */\r\n\tpublic get sides():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set sides(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\t/**\r\n\t * The number of subdivisions from the edge to the center of the regular polygon.\r\n\t */\r\n\tpublic get subdivisions():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set subdivisions(value:number)\r\n\t{\r\n\t\tthis.setSegmentsH(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RegularPolygon disc object.\r\n\t * @param radius The radius of the regular polygon\r\n\t * @param sides Defines the number of sides of the regular polygon.\r\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\n/**\r\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\r\n */\r\nclass PrimitivePrefabBase extends PrefabBase\r\n{\r\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\r\n\r\n\tpublic _geomDirty:boolean = true;\r\n\tpublic _uvDirty:boolean = true;\r\n\tpublic _scaleU:number = 1;\r\n\tpublic _scaleV:number = 1;\r\n\r\n\tprivate _material:MaterialBase;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\tprivate _geometryType:string;\r\n\tprivate _geometryTypeDirty:boolean = true;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn PrimitivePrefabBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get geometryType():string\r\n\t{\r\n\t\treturn this._geometryType;\r\n\t}\r\n\t\r\n\tpublic set geometryType(value:string)\r\n\t{\r\n\t\tif (this._geometryType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._geometryType = value;\r\n\t\t\r\n\t\tthis.invalidateGeometryType();\r\n\t}\r\n\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tthis._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the primitive.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tvar len:number = this._pObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\r\n\t}\r\n\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\tpublic set scaleU(value:number)\r\n\t{\r\n\t\tif (this._scaleU = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleU = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\tpublic set scaleV(value:number)\r\n\t{\r\n\t\tif (this._scaleV = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleV = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates a new PrimitivePrefabBase object.\r\n\t *\r\n\t * @param material The material with which to render the object\r\n\t */\r\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._geometry = new Geometry();\r\n\t\tthis._material = material;\r\n\t\tthis._geometryType = geometryType;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\r\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\r\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\r\n\t */\r\n\tpublic invalidateGeometryType()\r\n\t{\r\n\t\tthis._geometryTypeDirty = true;\r\n\t\tthis._geomDirty = true;\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateGeometry()\r\n\t{\r\n\t\tthis._geomDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateUVs()\r\n\t{\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the subgeometry when invalid.\r\n\t */\r\n\tprivate updateGeometryType()\r\n\t{\r\n\t\t//remove any existing sub geometry\r\n\t\tif (this._subGeometry)\r\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\r\n\r\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\r\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\r\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\r\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\r\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\r\n\t\t\tthis._subGeometry = triangleGeometry;\r\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\r\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\r\n\t\t}\r\n\r\n\t\tthis._geometryTypeDirty = false;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Updates the geometry when invalid.\r\n\t */\r\n\tprivate updateGeometry()\r\n\t{\r\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._geomDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uv coordinates when invalid.\r\n\t */\r\n\tprivate updateUVs()\r\n\t{\r\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._uvDirty = false;\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\tif (this._geometryTypeDirty)\r\n\t\t\tthis.updateGeometryType();\r\n\t\t\r\n\t\tif (this._geomDirty)\r\n\t\t\tthis.updateGeometry();\r\n\r\n\t\tif (this._uvDirty)\r\n\t\t\tthis.updateUVs();\r\n\t}\r\n\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\r\n\t\tmesh._iSourcePrefab = this;\r\n\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\r\n//\t\tpublic _pCreateBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\r\n//\t\t\tbatch._iSourcePrefab = this;\r\n//\r\n//\t\t\treturn batch;\r\n//\t\t}\r\n}\r\n\r\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Sphere primitive mesh.\r\n */\r\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\r\n\t/**\r\n\t * The radius of the sphere.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Sphere object.\r\n\t *\r\n\t * @param radius The radius of the sphere.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\r\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar numVertices:number;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvar startIndex:number;\r\n\t\t\tvar t1:number;\r\n\t\t\tvar t2:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tstartIndex = vidx;\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\r\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\r\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Cylinder primitive mesh.\r\n */\r\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _tubeRadius:number;\r\n\tprivate _segmentsR:number;\r\n\tprivate _segmentsT:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the torus.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the inner tube of the torus.\r\n\t */\r\n\tpublic get tubeRadius():number\r\n\t{\r\n\t\treturn this._tubeRadius;\r\n\t}\r\n\r\n\tpublic set tubeRadius(value:number)\r\n\t{\r\n\t\tthis._tubeRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsR():number\r\n\t{\r\n\t\treturn this._segmentsR;\r\n\t}\r\n\r\n\tpublic set segmentsR(value:number)\r\n\t{\r\n\t\tthis._segmentsR = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\r\n\t */\r\n\tpublic get segmentsT():number\r\n\t{\r\n\t\treturn this._segmentsT;\r\n\t}\r\n\r\n\tpublic set segmentsT(value:number)\r\n\t{\r\n\t\tthis._segmentsT = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>Torus</code> object.\r\n\t * @param radius The radius of the torus.\r\n\t * @param tuebRadius The radius of the inner tube of the torus.\r\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\r\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\r\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._tubeRadius = tubeRadius;\r\n\t\tthis._segmentsR = segmentsR;\r\n\t\tthis._segmentsT = segmentsT;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\r\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\r\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\r\n\r\n\t\t\tvar comp1:number, comp2:number;\r\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\r\n\t\t\tvar startIndex:number = 0;\r\n\t\t\tvar nextVertexIndex:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\r\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\r\n\r\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\r\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\r\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\r\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\r\n\r\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\r\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\r\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tn1 = -nz;\r\n\t\t\t\t\t\tn2 = ny;\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tn1 = ny;\r\n\t\t\t\t\t\tn2 = nz;\r\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsR) {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = nx;\r\n\t\t\t\t\tnormals[vidx + 1] = n1;\r\n\t\t\t\t\tnormals[vidx + 2] = n2;\r\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\r\n\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// close triangle\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\r\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.RenderableMergeSort\r\n */\r\nclass RenderableMergeSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable;\r\n\t\tvar slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortBlendedRenderables(head);\r\n\t\theadB = this.sortBlendedRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB) {\r\n\t\t\tif (head.zIndex < headB.zIndex) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result)\r\n\t\t\t\tresult = l; else\r\n\t\t\t\tcurr.next = l;\r\n\r\n\t\t\tcurr = l;\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable, slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortOpaqueRenderables(head);\r\n\t\theadB = this.sortOpaqueRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\t\tvar cmp:number = 0;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB && head != null && headB != null) {\r\n\r\n\t\t\t// first sort per render order id (reduces program3D switches),\r\n\t\t\t// then on render object id (reduces setting props),\r\n\t\t\t// then on zIndex (reduces overdraw)\r\n\t\t\tvar aid:number = head.renderOrderId;\r\n\t\t\tvar bid:number = headB.renderOrderId;\r\n\r\n\t\t\tif (aid == bid) {\r\n\t\t\t\tvar ma:number = head.renderId;\r\n\t\t\t\tvar mb:number = headB.renderId;\r\n\r\n\t\t\t\tif (ma == mb) {\r\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\r\n\t\t\t\t\t\tcmp = 1; else\r\n\t\t\t\t\t\tcmp = -1;\r\n\t\t\t\t} else if (ma > mb) {\r\n\t\t\t\t\tcmp = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcmp = -1;\r\n\t\t\t\t}\r\n\t\t\t} else if (aid > bid) {\r\n\t\t\t\tcmp = 1;\r\n\t\t\t} else {\r\n\t\t\t\tcmp = -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (cmp < 0) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result) {\r\n\t\t\t\tresult = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t} else {\r\n\t\t\t\tcurr.next = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.NullSort\r\n */\r\nclass RenderableNullSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n}\r\n\r\nexport = RenderableNullSort;",
    "/**\r\n * The AntiAliasType class provides values for anti-aliasing in the\r\n * away.text.TextField class.\r\n */\r\nclass AntiAliasType\r\n{\r\n\t/**\r\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\r\n\t * allows font faces to be rendered at very high quality at small sizes. It\r\n\t * is best used with applications that have a lot of small text. Advanced\r\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\r\n\t * points). This constant is used for the <code>antiAliasType</code> property\r\n\t * in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t */\r\n\tpublic static ADVANCED:string = \"advanced\";\r\n\r\n\t/**\r\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\r\n\t * earlier. This setting is recommended for applications that do not have a\r\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\r\n\t * property in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.NORMAL</code>.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n}\r\n\r\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass Font extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Font]\";\r\n\r\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get font_styles():Array<FontTable>\r\n\t{\r\n\t\treturn this._font_styles;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Font.assetType;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\t/**\r\n\t *Get a font-table for a specific name, or create one if it does not exists.\r\n\t */\r\n\tpublic get_font_table(style_name:string):FontTable\r\n\t{\r\n\t\tvar len:number = this._font_styles.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tif(this._font_styles[i].name==style_name)\r\n\t\t\t\treturn this._font_styles[i];\r\n\t\t}\r\n\t\tvar font_style:FontTable = new FontTable();\r\n\t\tfont_style.name=style_name;\r\n\t\tthis._font_styles.push(font_style);\r\n\t\treturn font_style;\r\n\t}\r\n\r\n}\r\n\r\nexport = Font;",
    "/**\r\n * The GridFitType class defines values for grid fitting in the TextField class.\r\n */\r\nclass GridFitType\r\n{\r\n\t/**\r\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\r\n\t * not forced to the pixel grid. This constant is used in setting the\r\n\t * <code>gridFitType</code> property of the TextField class. This is often a\r\n\t * good setting for animation or for large font sizes. Use the syntax\r\n\t * <code>GridFitType.NONE</code>.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\r\n\t * is used in setting the <code>gridFitType</code> property of the TextField\r\n\t * class. This setting only works for left-justified text fields and acts\r\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\r\n\t * setting generally provides the best readability for left-aligned text. Use\r\n\t * the syntax <code>GridFitType.PIXEL</code>.\r\n\t */\r\n\tpublic static PIXEL:string = \"pixel\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\r\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\r\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\r\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\r\n\t * constant is used in setting the <code>gridFitType</code> property of the\r\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\r\n\t */\r\n\tpublic static SUBPIXEL:string = \"subpixel\";\r\n}\r\n\r\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TesselatedFontChar\r\n{\r\n\r\n\t/**\r\n\t * The width of the char\r\n\t */\r\n\tpublic char_width:number;\r\n\r\n\t/**\r\n\t * SubGeometry for this char\r\n\t */\r\n\tpublic subgeom:CurveSubGeometry;\r\n\r\n\t/**\r\n\t * the char_codes that this geom has kerning set for\r\n\t */\r\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\r\n\t/**\r\n\t * the kerning values per char_code\r\n\t */\r\n\tpublic kerningValues:Array<number>=new Array<number>();\r\n\r\n\r\n\tconstructor(subgeom:CurveSubGeometry)\r\n\t{\r\n\t\tthis.char_width=0;\r\n\t\tthis.subgeom = subgeom;\r\n\t\tif (this.subgeom != null) {\r\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\r\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\r\n\t\t\t\tif(positions2[v*3]>this.char_width)\r\n\t\t\t\t\tthis.char_width=positions2[v*3];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontChar;",
    "\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass TesselatedFontTable extends AssetBase\r\n{\r\n\tprivate _font_chars:Array<TesselatedFontChar>;\r\n\tpublic _font_chars_dic:Object;\r\n\tprivate _font_em_size:number;\r\n\tprivate _whitespace_width:number;\r\n\tprivate _offset_x:number;\r\n\tprivate _offset_y:number;\r\n\tprivate _charDictDirty:Boolean;\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\r\n\t\tthis._font_chars_dic = new Object();\r\n\t\tthis._offset_x=0;\r\n\t\tthis._offset_y=0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\r\n\tget offset_x():number {\r\n\t\treturn this._offset_x;\r\n\t}\r\n\r\n\tset offset_x(value:number){\r\n\t\tthis._offset_x=value;\r\n\t}\r\n\r\n\tget offset_y():number {\r\n\t\treturn this._offset_y;\r\n\t}\r\n\r\n\tset offset_y(value:number){\r\n\t\tthis._offset_y=value;\r\n\t}\r\n\tpublic get_font_chars():Array<TesselatedFontChar>\r\n\t{\r\n\t\treturn this._font_chars\r\n\t}\r\n\tpublic get_font_em_size():number\r\n\t{\r\n\t\treturn this._font_em_size\r\n\t}\r\n\tpublic set_whitespace_width(value:number):void\r\n\t{\r\n\t\tthis._whitespace_width=value;\r\n\t}\r\n\tpublic get_whitespace_width():number\r\n\t{\r\n\t\treturn this._whitespace_width\r\n\t}\r\n\tpublic set_font_em_size(font_em_size:number):void\r\n\t{\r\n\t\tthis._font_em_size=font_em_size;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\r\n\t{\r\n\t\treturn this._font_chars_dic[char];\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\r\n\t{\r\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\r\n\t\tsubgeo.name=char;\r\n\t\tthis._font_chars.push(tesselated_font_char);\r\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontTable;",
    "/**\r\n * The TextFieldAutoSize class is an enumeration of constant values used in\r\n * setting the <code>autoSize</code> property of the TextField class.\r\n */\r\nclass TextFieldAutoSize\r\n{\r\n\t/**\r\n\t * Specifies that the text is to be treated as center-justified text. Any\r\n\t * resizing of a single line of a text field is equally distributed to both\r\n\t * the right and left sides.\r\n\t */\r\n\tpublic static CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as left-justified text, meaning\r\n\t * that the left side of the text field remains fixed and any resizing of a\r\n\t * single line is on the right side.\r\n\t */\r\n\tpublic static LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Specifies that no resizing is to occur.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as right-justified text, meaning\r\n\t * that the right side of the text field remains fixed and any resizing of a\r\n\t * single line is on the left side.\r\n\t */\r\n\tpublic static RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFieldAutoSize;",
    "/**\r\n * The TextFieldType class is an enumeration of constant values used in setting the\r\n * <code>type</code> property of the TextField class.\r\n *\r\n * @see away.entities.TextField#type\r\n */\r\nclass TextFieldType\r\n{\r\n\t/**\r\n\t * Used to specify a <code>dynamic</code> TextField.\r\n\t */\r\n\tpublic static DYNAMIC:string = \"dynamic\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>input</code> TextField.\r\n\t */\r\n\tpublic static INPUT:string = \"input\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>static</code> TextField.\r\n\t */\r\n\tpublic static STATIC:string = \"input\";\r\n}\r\n\r\nexport = TextFieldType;",
    "/**\r\n * The TextFormatAlign class provides values for text alignment in the\r\n * TextFormat class.\r\n */\r\nclass TextFormatAlign\r\n{\r\n\t/**\r\n\t * Constant; centers the text in the text field. Use the syntax\r\n\t * <code>TextFormatAlign.CENTER</code>.\r\n\t */\r\n\tpublic CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Constant; justifies text within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.JUSTIFY</code>.\r\n\t */\r\n\tpublic JUSTIFY:string = \"justify\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the left within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.LEFT</code>.\r\n\t */\r\n\tpublic LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the right within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.RIGHT</code>.\r\n\t */\r\n\tpublic RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TextFormat extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset TextFormat]\";\r\n\r\n\t/**\r\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\r\n\t * constants.\r\n\t *\r\n\t * @default TextFormatAlign.LEFT\r\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\r\n\t *                       flash.text.TextFormatAlign.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic align:string;\r\n\r\n\r\n\t/**\r\n\t * Indicates the block indentation in pixels. Block indentation is applied to\r\n\t * an entire block of text; that is, to all lines of the text. In contrast,\r\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\r\n\t * line of each paragraph. If this property is <code>null</code>, the\r\n\t * TextFormat object does not specify block indentation(block indentation is\r\n\t * 0).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic blockIndent:number;\r\n\r\n\t/**\r\n\t * Specifies whether the text is boldface. The default value is\r\n\t * <code>null</code>, which means no boldface is used. If the value is\r\n\t * <code>true</code>, then the text is boldface.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\r\n\tpublic bold:boolean;\r\n\r\n\t/**\r\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\r\n\t * each paragraph of text is indented. To the left of the first line of each\r\n\t * paragraph, a bullet symbol is displayed. The default value is\r\n\t * <code>null</code>, which means no bulleted list is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\r\n\tpublic bullet:boolean;\r\n\r\n\t/**\r\n\t * Indicates the color of the text. A number containing three 8-bit RGB\r\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\r\n\t * default value is <code>null</code>, which means that Flash Player uses the\r\n\t * color black(0x000000).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\r\n\tpublic color:boolean;\r\n\r\n\r\n\t/**\r\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv-values of the colors in textureatlas.\r\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\r\n\t */\r\n\tpublic uv_values:Array<number>;\r\n\r\n\t/**\r\n\t * The name of the font for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\r\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\r\n\t */\r\n\tpublic font_name:string;\r\n\t/**\r\n\t * The name of the font-style for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-style can be used to get a Font-table, from a Font-object.\r\n\t */\r\n\tpublic font_style:string;\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic font_table:TesselatedFontTable;\r\n\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic fallback_font_table:TesselatedFontTable;\r\n\r\n\t/**\r\n\t * Indicates the indentation from the left margin to the first character in\r\n\t * the paragraph. The default value is <code>null</code>, which indicates\r\n\t * that no indentation is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic indent:number;\r\n\r\n\t/**\r\n\t * Indicates whether text in this text format is italicized. The default\r\n\t * value is <code>null</code>, which means no italics are used.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\r\n\tpublic italic:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether kerning is enabled\r\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\r\n\t * pixels between certain character pairs to improve readability, and should\r\n\t * be used only when necessary, such as with headings in large fonts. Kerning\r\n\t * is supported for embedded fonts only.\r\n\t *\r\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\r\n\t * New, do not support kerning.</p>\r\n\t *\r\n\t * <p>The default value is <code>null</code>, which means that kerning is not\r\n\t * enabled.</p>\r\n\t */\r\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\r\n\tpublic kerning:boolean;\r\n\r\n\t/**\r\n\t * An integer representing the amount of vertical space(called\r\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\r\n\t * which indicates that the amount of leading used is 0.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The left margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leftMargin:number;\r\n\r\n\t/**\r\n\t * A number representing the amount of space that is uniformly distributed\r\n\t * between all characters. The value specifies the number of pixels that are\r\n\t * added to the advance after each character. The default value is\r\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\r\n\t * You can use decimal values such as <code>1.75</code>.\r\n\t */\r\n\tpublic letterSpacing:number;\r\n\r\n\t/**\r\n\t * The right margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic rightMargin:number;\r\n\r\n\t/**\r\n\t * The size in pixels of text in this text format. The default value is\r\n\t * <code>null</code>, which means that a size of 12 is used.\r\n\t */\r\n\tpublic size:number;\r\n\r\n\t/**\r\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\r\n\t * stop is specified in pixels. If custom tab stops are not specified\r\n\t * (<code>null</code>), the default tab stop is 4(average character width).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\r\n\r\n\t/**\r\n\t * Indicates the target window where the hyperlink is displayed. If the\r\n\t * target window is an empty string, the text is displayed in the default\r\n\t * target window <code>_self</code>. You can choose a custom name or one of\r\n\t * the following four names: <code>_self</code> specifies the current frame\r\n\t * in the current window, <code>_blank</code> specifies a new window,\r\n\t * <code>_parent</code> specifies the parent of the current frame, and\r\n\t * <code>_top</code> specifies the top-level frame in the current window. If\r\n\t * the <code>TextFormat.url</code> property is an empty string or\r\n\t * <code>null</code>, you can get or set this property, but the property will\r\n\t * have no effect.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic link_target:string;\r\n\r\n\t/**\r\n\t * Indicates whether the text that uses this text format is underlined\r\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\r\n\t * similar to that produced by the <code><U></code> tag, but the latter is\r\n\t * not true underlining, because it does not skip descenders correctly. The\r\n\t * default value is <code>null</code>, which indicates that underlining is\r\n\t * not used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic underline:boolean;\r\n\r\n\t/**\r\n\t * Indicates the target URL for the text in this text format. If the\r\n\t * <code>url</code> property is an empty string, the text does not have a\r\n\t * hyperlink. The default value is <code>null</code>, which indicates that\r\n\t * the text does not have a hyperlink.\r\n\t *\r\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\r\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic url:string;\r\n\r\n\t/**\r\n\t * Creates a TextFormat object with the specified properties. You can then\r\n\t * change the properties of the TextFormat object to change the formatting of\r\n\t * text fields.\r\n\t *\r\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\r\n\t * not defined. All of the parameters are optional; any omitted parameters\r\n\t * are treated as <code>null</code>.</p>\r\n\t *\r\n\t * @param font        The name of a font for text as a string.\r\n\t * @param size        An integer that indicates the size in pixels.\r\n\t * @param color       The color of text using this text format. A number\r\n\t *                    containing three 8-bit RGB components; for example,\r\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\r\n\t * @param bold        A Boolean value that indicates whether the text is\r\n\t *                    boldface.\r\n\t * @param italic      A Boolean value that indicates whether the text is\r\n\t *                    italicized.\r\n\t * @param underline   A Boolean value that indicates whether the text is\r\n\t *                    underlined.\r\n\t * @param url         The URL to which the text in this text format\r\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\r\n\t *                    text does not have a hyperlink.\r\n\t * @param target      The target window where the hyperlink is displayed. If\r\n\t *                    the target window is an empty string, the text is\r\n\t *                    displayed in the default target window\r\n\t *                    <code>_self</code>. If the <code>url</code> parameter\r\n\t *                    is set to an empty string or to the value\r\n\t *                    <code>null</code>, you can get or set this property,\r\n\t *                    but the property will have no effect.\r\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\r\n\t *                    value.\r\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\r\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\r\n\t * @param indent      An integer that indicates the indentation from the left\r\n\t *                    margin to the first character in the paragraph.\r\n\t * @param leading     A number that indicates the amount of leading vertical\r\n\t *                    space between lines.\r\n\t */\r\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.font_name = font;\r\n\t\tthis.size = size;\r\n\t\tthis.bold = bold;\r\n\t\tthis.italic = italic;\r\n\t\tthis.underline = underline;\r\n\t\tthis.url = url;\r\n\t\tthis.link_target = link_target;\r\n\t\tthis.align = align;\r\n\t\tthis.leftMargin = leftMargin;\r\n\t\tthis.rightMargin = rightMargin;\r\n\t\tthis.indent = indent;\r\n\t\tthis.leading = leading;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextFormat.assetType;\r\n\t}\r\n}\r\n\r\nexport = TextFormat;",
    "/**\r\n * A class that defines the Interactive mode of a text field object.\r\n *\r\n * @see away.entities.TextField#textInteractionMode\r\n */\r\nclass TextInteractionMode\r\n{\r\n\t/**\r\n\t * The text field's default interaction mode is NORMAL and it varies across\r\n\t * platform. On Desktop, the normal mode implies that the text field is in\r\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\r\n\t * implies that the text field can only be scrolled but the text can not be\r\n\t * selected.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * On mobile platforms like Android, the text field starts in normal mode\r\n\t * (which implies scroll and non-selectable mode). The user can switch to\r\n\t * selection mode through the in-built context menu of the text field object.\r\n\t */\r\n\tpublic static SELECTION:string = \"selection\";\r\n}\r\n\r\nexport = TextInteractionMode;",
    "/**\r\n * The TextLineMetrics class contains information about the text position and\r\n * measurements of a line of text within a text field. All measurements are in\r\n * pixels. Objects of this class are returned by the \r\n * <code>away.entities.TextField.getLineMetrics()</code> method.\r\n */\r\nclass TextLineMetrics\r\n{\r\n\t/**\r\n\t * The ascent value of the text is the length from the baseline to the top of\r\n\t * the line height in pixels.\r\n\t */\r\n\tpublic ascent:number;\r\n\r\n\t/**\r\n\t * The descent value of the text is the length from the baseline to the\r\n\t * bottom depth of the line in pixels.\r\n\t */\r\n\tpublic descent:number;\r\n\r\n\t/**\r\n\t * The height value of the text of the selected lines (not necessarily the\r\n\t * complete text) in pixels. The height of the text line does not include the\r\n\t * gutter height.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The leading value is the measurement of the vertical distance between the\r\n\t * lines of text.\r\n\t */\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The width value is the width of the text of the selected lines (not\r\n\t * necessarily the complete text) in pixels. The width of the text line is\r\n\t * not the same as the width of the text field. The width of the text line is\r\n\t * relative to the text field width, minus the gutter width of 4 pixels\r\n\t * (2 pixels on each side).\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The x value is the left position of the first character in pixels. This\r\n\t * value includes the margin, indent (if any), and gutter widths.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\r\n\t * information about the text metrics of a line of text in a text field.\r\n\t * Objects of this class are returned by the\r\n\t * away.entities.TextField.getLineMetrics() method.\r\n\t *\r\n\t * @param x           The left position of the first character in pixels.\r\n\t * @param width       The width of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param height      The height of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param ascent      The length from the baseline to the top of the line\r\n\t *                    height in pixels.\r\n\t * @param descent     The length from the baseline to the bottom depth of\r\n\t *                    the line in pixels.\r\n\t * @param leading     The measurement of the vertical distance between the\r\n\t *                    lines of text.\r\n\t */\r\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass Single2DTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\r\n\r\n\tprivate _sampler2D:Sampler2D;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Single2DTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Image2D}\r\n\t */\r\n\tpublic get sampler2D():Sampler2D\r\n\t{\r\n\t\treturn this._sampler2D;\r\n\t}\r\n\r\n\tpublic set sampler2D(value:Sampler2D)\r\n\t{\r\n\t\tif (this._sampler2D == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\r\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\r\n\r\n\t\tthis._sampler2D = value;\r\n\r\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:Sampler2D);\r\n\tconstructor(source:Image2D);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof Image2D)\r\n\t\t\tthis.sampler2D = new Sampler2D(source);\r\n\t\telse\r\n\t\t\tthis.sampler2D = source;\r\n\r\n\t}\r\n}\r\n\r\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\r\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n\r\nclass SingleCubeTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\r\n\r\n\tprivate _samplerCube:SamplerCube;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn SingleCubeTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {BitmapData}\r\n\t */\r\n\tpublic get samplerCube():SamplerCube\r\n\t{\r\n\t\treturn this._samplerCube;\r\n\t}\r\n\r\n\tpublic set samplerCube(value:SamplerCube)\r\n\t{\r\n\t\tif (this._samplerCube == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._samplerCube = value;\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:SamplerCube);\r\n\tconstructor(source:ImageCube);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof ImageCube)\r\n\t\t\tthis.samplerCube = new SamplerCube(source);\r\n\t\telse\r\n\t\t\tthis.samplerCube = source;\r\n\t}\r\n}\r\n\r\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\r\n\r\n/**\r\n *\r\n */\r\nclass TextureBase extends AssetBase implements IAsset\r\n{\r\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\r\n\r\n\tpublic _width:number = 1;\r\n\tpublic _height:number = 1;\r\n\r\n\tget width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tget height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateContent():void\r\n\t{\r\n\t\tvar len:number = this._textureVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._textureVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic invalidateSize():void\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\r\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.push(textureVO);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _setSize(width:number, height:number)\r\n\t{\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t}\r\n\r\n}\r\n\r\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.CSSEntityCollector\r\n */\r\nclass CSSEntityCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.traverse.CollectorBase\r\n */\r\nclass CollectorBase\r\n{\r\n\tpublic scene:Scene;\r\n\r\n\tpublic _pEntityHead:EntityListItem;\r\n\tpublic _pEntityListItemPool:EntityListItemPool;\r\n\tpublic _pCamera:Camera;\r\n\tprivate _customCullPlanes:Array<Plane3D>;\r\n\tprivate _cullPlanes:Array<Plane3D>;\r\n\tprivate _numCullPlanes:number = 0;\r\n\tpublic _pNumEntities:number = 0;\r\n\tpublic _pNumInteractiveEntities:number = 0;\r\n\r\n\tpublic isEntityCollector:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tthis._pCamera = value;\r\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get cullPlanes():Array<Plane3D>\r\n\t{\r\n\t\treturn this._customCullPlanes;\r\n\t}\r\n\r\n\tpublic set cullPlanes(value:Array<Plane3D>)\r\n\t{\r\n\t\tthis._customCullPlanes = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get entityHead():EntityListItem\r\n\t{\r\n\t\treturn this._pEntityHead;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numEntities():number\r\n\t{\r\n\t\treturn this._pNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numInteractiveEntities():number\r\n\t{\r\n\t\treturn this._pNumInteractiveEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\r\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\r\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\r\n\t\tthis._pEntityHead = null;\r\n\t\tthis._pEntityListItemPool.freeAll();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\r\n\r\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\treturn enter;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyEntity(entity:IEntity)\r\n\t{\r\n\t\tthis._pNumEntities++;\r\n\r\n\t\tif (entity._iIsMouseEnabled())\r\n\t\t\tthis._pNumInteractiveEntities++;\r\n\r\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\r\n\t\titem.entity = entity;\r\n\r\n\t\titem.next = this._pEntityHead;\r\n\t\tthis._pEntityHead = item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n}\r\n\r\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\n\r\n/**\r\n * @class away.traverse.EntityCollector\r\n */\r\nclass EntityCollector extends CollectorBase\r\n{\r\n\tpublic _pSkybox:Skybox;\r\n\tpublic _pLights:Array<LightBase>;\r\n\tprivate _directionalLights:Array<DirectionalLight>;\r\n\tprivate _pointLights:Array<PointLight>;\r\n\tprivate _lightProbes:Array<LightProbe>;\r\n\r\n\tpublic _pNumLights:number = 0;\r\n\r\n\tprivate _numDirectionalLights:number = 0;\r\n\tprivate _numPointLights:number = 0;\r\n\tprivate _numLightProbes:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._directionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._lightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pointLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get skyBox():Skybox\r\n\t{\r\n\t\treturn this._pSkybox;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pLights = new Array<LightBase>();\r\n\t\tthis._directionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pointLights = new Array<PointLight>();\r\n\t\tthis._lightProbes = new Array<LightProbe>();\r\n\r\n\t\tthis.isEntityCollector = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\tthis._pSkybox = <Skybox> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tsuper.clear();\r\n\r\n\t\tthis._pSkybox = null;\r\n\r\n\t\tif (this._pNumLights > 0)\r\n\t\t\tthis._pLights.length = this._pNumLights = 0;\r\n\r\n\t\tif (this._numDirectionalLights > 0)\r\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\r\n\r\n\t\tif (this._numPointLights > 0)\r\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\r\n\r\n\t\tif (this._numLightProbes > 0)\r\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\r\n * considered intersecting with the defined ray.\r\n *\r\n * @see away.partition.Partition\r\n * @see away.entities.IEntity\r\n *\r\n * @class away.traverse.RaycastCollector\r\n */\r\nclass RaycastCollector extends CollectorBase\r\n{\r\n\tprivate _rayPosition:Vector3D = new Vector3D();\r\n\tprivate _rayDirection:Vector3D = new Vector3D();\r\n\r\n\tpublic _iCollectionMark:number = 0;\r\n\r\n\t/**\r\n\t * Provides the starting position of the ray.\r\n\t */\r\n\tpublic get rayPosition():Vector3D\r\n\t{\r\n\t\treturn this._rayPosition;\r\n\t}\r\n\r\n\tpublic set rayPosition(value:Vector3D)\r\n\t{\r\n\t\tthis._rayPosition = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides the direction vector of the ray.\r\n\t */\r\n\tpublic get rayDirection():Vector3D\r\n\t{\r\n\t\treturn this._rayDirection;\r\n\t}\r\n\r\n\tpublic set rayDirection(value:Vector3D)\r\n\t{\r\n\t\tthis._rayDirection = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RaycastCollector object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\r\n\t *\r\n\t * @param node The Partition3DNode object to frustum-test.\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\r\n\t}\r\n}\r\n\r\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.ShadowCasterCollector\r\n */\r\nclass ShadowCasterCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\r\n\r\n\t\tif (!enter) {\r\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn super.enterNode(node);\r\n\t}\r\n}\r\n\r\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\r\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n/**\r\n * Helper class for casting assets to usable objects\r\n */\r\nclass Cast\r\n{\r\n\tprivate static _colorNames:Object;\r\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\r\n\r\n\tprivate static _notClasses:Object = new Object();\r\n\tprivate static _classes:Object = new Object();\r\n\r\n\tpublic static string(data:any):string\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\treturn data;\r\n\r\n\t\treturn <string> data;\r\n\t}\r\n\r\n\tpublic static byteArray(data:any):ByteArray\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (data instanceof ByteArray)\r\n\t\t\treturn data;\r\n\r\n\t\treturn <ByteArray> data;\r\n\t}\r\n\r\n\t//        public static xml(data:any):XML\r\n\t//        {\r\n\t//            if (typeof(data) == 'function')\r\n\t//                data = new data;\r\n\t//\r\n\t//            if (data is XML)\r\n\t//                return data;\r\n\t//\r\n\t//            return XML(data);\r\n\t//        }\r\n\r\n\tprivate static isHex(str:string):boolean\r\n\t{\r\n\t\tvar length:number /*int*/ = str.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\r\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static tryColor(data:any):number /*uint*/\r\n\t{\r\n\t\tif (typeof(data) == 'number' /*uint*/)\r\n\t\t\treturn Math.floor(<number> data);\r\n\r\n\t\tif (typeof(data) == 'string') {\r\n\t\t\tif (data == \"random\")\r\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\r\n\r\n\t\t\tif (this._colorNames == null) {\r\n\t\t\t\tthis._colorNames = new Object();\r\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\r\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\r\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\r\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\r\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\r\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\r\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\r\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\r\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\r\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\r\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\r\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\r\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\r\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\r\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\r\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\r\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\r\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\r\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\r\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\r\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\r\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\r\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\r\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\r\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\r\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\r\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\r\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\r\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\r\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\r\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\r\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\r\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\r\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\r\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\r\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\r\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\r\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\r\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\r\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\r\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\r\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\r\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\r\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\r\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\r\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\r\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\r\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\r\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\r\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\r\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\r\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\r\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\r\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\r\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\r\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\r\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\r\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\r\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\r\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\r\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\r\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\r\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\r\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\r\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\r\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\r\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\r\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\r\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\r\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\r\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\r\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\r\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\r\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\r\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\r\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\r\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\r\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\r\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\r\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\r\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\r\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\r\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\r\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\r\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\r\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\r\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\r\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\r\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\r\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\r\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\r\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\r\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\r\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\r\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\r\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\r\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\r\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\r\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\r\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\r\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\r\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\r\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\r\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\r\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\r\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\r\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\r\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\r\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\r\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\r\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\r\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\r\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\r\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\r\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\r\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\r\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\r\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\r\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\r\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\r\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\r\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\r\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\r\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\r\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\r\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\r\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\r\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\r\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\r\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\r\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\r\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\r\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\r\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\r\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\r\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\r\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._colorNames[data] != null)\r\n\t\t\t\treturn this._colorNames[data];\r\n\r\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\r\n\t\t\t\treturn parseInt(\"0x\" + data);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static color(data:any):number /*uint*/\r\n\t{\r\n\t\tvar result:number /*uint*/ = this.tryColor(data);\r\n\r\n\t\tif (result == null)\r\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static tryClass(name:string):any\r\n\t{\r\n\t\tif (this._notClasses[name])\r\n\t\t\treturn name;\r\n\r\n\t\tvar result:any = this._classes[name];\r\n\r\n\t\tif (result != null)\r\n\t\t\treturn result;\r\n\r\n\t\ttry {\r\n\t\t\tresult = window[name];\r\n\t\t\tthis._classes[name] = result;\r\n\t\t\treturn result;\r\n\t\t} catch (e /*ReferenceError*/) {\r\n\t\t}\r\n\r\n\t\tthis._notClasses[name] = true;\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic static image2D(data:any):Image2D\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Image2D)\r\n\t\t\treturn data;\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\r\n\r\n\t\tif (data instanceof Sampler2D)\r\n\t\t\treturn (<Sampler2D> data).image2D;\r\n\r\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\r\n\t}\r\n\r\n\tpublic static bitmapTexture(data:any):Single2DTexture\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\treturn data;\r\n\r\n\t\ttry {\r\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\r\n\t\t\treturn new Single2DTexture(bmd);\r\n\t\t} catch (e /*CastError*/) {\r\n\t\t}\r\n\r\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\r\n\t}\r\n}\r\n\r\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\r\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\nclass SubGeometryUtils\r\n{\r\n\tprivate static LIMIT_VERTS:number = 0xffff;\r\n\r\n\tprivate static LIMIT_INDICES:number = 0xffffff;\r\n\t\r\n\tprivate static _indexSwap:Array<number> = new Array<number>();\r\n\r\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float4Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar index:number;\r\n\r\n\t\tvar x1:number, x2:number, x3:number;\r\n\t\tvar y1:number, y2:number, y3:number;\r\n\t\tvar z1:number, z2:number, z3:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar d:number;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx1 = positions[index];\r\n\t\t\ty1 = positions[index + 1];\r\n\t\t\tz1 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx2 = positions[index];\r\n\t\t\ty2 = positions[index + 1];\r\n\t\t\tz2 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx3 = positions[index];\r\n\t\t\ty3 = positions[index + 1];\r\n\t\t\tz3 = positions[index + 2];\r\n\t\t\tdx1 = x3 - x1;\r\n\t\t\tdy1 = y3 - y1;\r\n\t\t\tdz1 = z3 - z1;\r\n\t\t\tdx2 = x2 - x1;\r\n\t\t\tdy2 = y2 - y1;\r\n\t\t\tdz2 = z2 - z1;\r\n\t\t\tcx = dz1*dy2 - dy1*dz2;\r\n\t\t\tcy = dx1*dz2 - dz1*dx2;\r\n\t\t\tcz = dy1*dx2 - dx1*dy2;\r\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\t\t\t// length of cross product = 2*triangle area\r\n\r\n\t\t\tfaceNormals[j++] = cx;\r\n\t\t\tfaceNormals[j++] = cy;\r\n\t\t\tfaceNormals[j++] = cz;\r\n\t\t\tfaceNormals[j++] = d;\r\n\t\t}\r\n\r\n\t\toutput.set(faceNormals, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar normals:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear normal values\r\n\t\twhile (i < len) {\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\r\n\t\t//collect face normals\r\n\t\twhile (i < len) {\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tf1 += 4;\r\n\t\t\tf2 += 4;\r\n\t\t\tf3 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise normals collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = normals[i];\r\n\t\t\tvy = normals[i + 1];\r\n\t\t\tvz = normals[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\tnormals[i++] = vx*d;\r\n\t\t\tnormals[i++] = vy*d;\r\n\t\t\tnormals[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(normals);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\t\tvar uvDim:number = uvAttributes.dimensions;\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\r\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar index1:number;\r\n\t\tvar index2:number;\r\n\t\tvar index3:number;\r\n\t\tvar vi:number;\r\n\t\tvar v0:number;\r\n\t\tvar dv1:number;\r\n\t\tvar dv2:number;\r\n\t\tvar denom:number;\r\n\t\tvar x0:number, y0:number, z0:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex1 = indices[i];\r\n\t\t\tindex2 = indices[i + 1];\r\n\t\t\tindex3 = indices[i + 2];\r\n\r\n\t\t\tv0 = uvs[index1*uvDim + 1];\r\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\r\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\r\n\r\n\t\t\tvi = index1*positionDim;\r\n\t\t\tx0 = positions[vi];\r\n\t\t\ty0 = positions[vi + 1];\r\n\t\t\tz0 = positions[vi + 2];\r\n\t\t\tvi = index2*positionDim;\r\n\t\t\tdx1 = positions[vi] - x0;\r\n\t\t\tdy1 = positions[vi + 1] - y0;\r\n\t\t\tdz1 = positions[vi + 2] - z0;\r\n\t\t\tvi = index3*positionDim;\r\n\t\t\tdx2 = positions[vi] - x0;\r\n\t\t\tdy2 = positions[vi + 1] - y0;\r\n\t\t\tdz2 = positions[vi + 2] - z0;\r\n\r\n\t\t\tcx = dv2*dx1 - dv1*dx2;\r\n\t\t\tcy = dv2*dy1 - dv1*dy2;\r\n\t\t\tcz = dv2*dz1 - dv1*dz2;\r\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\r\n\t\t\tfaceTangents[i++] = denom*cx;\r\n\t\t\tfaceTangents[i++] = denom*cy;\r\n\t\t\tfaceTangents[i++] = denom*cz;\r\n\t\t}\r\n\r\n\t\toutput.set(faceTangents, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar tangents:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear tangent values\r\n\t\twhile (i < len) {\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t}\r\n\r\n\t\tvar weight:number;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\t\tvar f4:number = 3;\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\r\n\t\t//collect face tangents\r\n\t\twhile (i < len) {\r\n\t\t\tweight = faceNormals[f4];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tf1 += 3;\r\n\t\t\tf2 += 3;\r\n\t\t\tf3 += 3;\r\n\t\t\tf4 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise tangents collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = tangents[i];\r\n\t\t\tvy = tangents[i + 1];\r\n\t\t\tvz = tangents[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\ttangents[i++] = vx*d;\r\n\t\t\ttangents[i++] = vy*d;\r\n\t\t\ttangents[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(tangents);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\r\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] = j*.5;\r\n\t\t\tuvs[i++] = 1.0 - (j & 1);\r\n\r\n\t\t\tif (++j == 3)\r\n\t\t\t\tj = 0;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\r\n\r\n\t\tvar index:number = 0;\r\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\r\n\r\n\t\twhile (index < count*4) {\r\n\t\t\tif (index/4 & 1) {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t} else {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t}\r\n\r\n\t\t\tindex += 4;\r\n\t\t}\r\n\r\n\t\toutput.set(colors, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] *= scaleU;\r\n\t\t\tuvs[i++] *= scaleV;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\t}\r\n\r\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar positions:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t}\r\n\r\n\t\toutput.set(positions, offset);\r\n\t}\r\n\r\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar normals:Float32Array;\r\n\t\tvar normalDim:number;\r\n\r\n\t\tif (normalAttributes) {\r\n\t\t\tnormals = normalAttributes.get(count, offset);\r\n\t\t\tnormalDim = normalAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar tangents:Float32Array;\r\n\t\tvar tangentDim:number;\r\n\r\n\t\tif (tangentAttributes) {\r\n\t\t\ttangents = tangentAttributes.get(count, offset);\r\n\t\t\ttangentDim = tangentAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar i:number;\r\n\t\tvar i1:number;\r\n\t\tvar i2:number;\r\n\t\tvar vector:Vector3D = new Vector3D();\r\n\t\tvar invTranspose:Matrix3D;\r\n\r\n\t\tif (normalAttributes || tangentAttributes) {\r\n\t\t\tinvTranspose = transform.clone();\r\n\t\t\tinvTranspose.invert();\r\n\t\t\tinvTranspose.transpose();\r\n\t\t}\r\n\r\n\t\tvar vi0:number = 0;\r\n\t\tvar ni0:number = 0;\r\n\t\tvar ti0:number = 0;\r\n\r\n\t\tfor (i = 0; i < count; ++i) {\r\n\t\t\t// bake position\r\n\t\t\ti1 = vi0 + 1;\r\n\t\t\ti2 = vi0 + 2;\r\n\t\t\tvector.x = positions[vi0];\r\n\t\t\tvector.y = positions[i1];\r\n\t\t\tvector.z = positions[i2];\r\n\t\t\tvector = transform.transformVector(vector);\r\n\t\t\tpositions[vi0] = vector.x;\r\n\t\t\tpositions[i1] = vector.y;\r\n\t\t\tpositions[i2] = vector.z;\r\n\t\t\tvi0 += positionDim;\r\n\r\n\t\t\tif\t(normals) {\r\n\t\t\t\t// bake normal\r\n\t\t\t\ti1 = ni0 + 1;\r\n\t\t\t\ti2 = ni0 + 2;\r\n\t\t\t\tvector.x = normals[ni0];\r\n\t\t\t\tvector.y = normals[i1];\r\n\t\t\t\tvector.z = normals[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\tnormals[ni0] = vector.x;\r\n\t\t\t\tnormals[i1] = vector.y;\r\n\t\t\t\tnormals[i2] = vector.z;\r\n\t\t\t\tni0 += normalDim;\r\n\t\t\t}\r\n\r\n\t\t\tif (tangents) {\r\n\t\t\t\t// bake tangent\r\n\t\t\t\ti1 = ti0 + 1;\r\n\t\t\t\ti2 = ti0 + 2;\r\n\t\t\t\tvector.x = tangents[ti0];\r\n\t\t\t\tvector.y = tangents[i1];\r\n\t\t\t\tvector.z = tangents[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\ttangents[ti0] = vector.x;\r\n\t\t\t\ttangents[i1] = vector.y;\r\n\t\t\t\ttangents[i2] = vector.z;\r\n\t\t\t\tti0 += tangentDim;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpositionAttributes.set(positions, offset);\r\n\r\n\t\tif (normalAttributes)\r\n\t\t\tnormalAttributes.set(normals, offset);\r\n\r\n\t\tif (tangentAttributes)\r\n\t\t\ttangentAttributes.set(tangents, offset);\r\n\t}\r\n\r\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\r\n\t{\r\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\r\n\t\tvar numIndices:number = indexAttributes.length;\r\n\t\t\r\n\t\t//reset mappings\r\n\t\tindexMappings.length = 0;\r\n\r\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\r\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\r\n\t\t\treturn buffer;\r\n\r\n\t\tvar i:number;\r\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\r\n\t\tvar splitIndices:Array<number> = new Array<number>();\r\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\r\n\t\t\r\n\r\n\t\tindexSwap.length = numIndices;\r\n\t\tfor (i = 0; i < numIndices; i++)\r\n\t\t\tindexSwap[i] = -1;\r\n\r\n\t\tvar originalIndex:number;\r\n\t\tvar splitIndex:number;\r\n\t\tvar index:number = 0;\r\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\r\n\t\t\r\n\t\t// Loop over all triangles\r\n\t\t\r\n\t\ti = 0;\r\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\r\n\t\t\toriginalIndex = indices[i];\r\n\r\n\t\t\tif (indexSwap[originalIndex] >= 0) {\r\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\r\n\t\t\t} else {\r\n\t\t\t\t// This vertex does not yet exist in the split list and\r\n\t\t\t\t// needs to be copied from the long list.\r\n\t\t\t\tsplitIndex = index++;\r\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\r\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\r\n\t\t\t}\r\n\r\n\t\t\t// Store new index, which may have come from the swap look-up,\r\n\t\t\t// or from copying a new set of vertex data from the original vector\r\n\t\t\tsplitIndices[i++] = splitIndex;\r\n\t\t}\r\n\t\t\r\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\r\n\t\t\r\n\t\tindexAttributes = indexAttributes.clone(buffer);\r\n\t\tindexAttributes.set(splitIndices);\r\n\t\t\r\n\t\treturn buffer;\r\n\t}\r\n\r\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\r\n\t{\r\n\t\tif (!indexMappings.length)\r\n\t\t\treturn vertexBuffer;\r\n\r\n\t\tvar stride:number = vertexBuffer.stride;\r\n\r\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\r\n\r\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\r\n\t\tvar splitIndex:number;\r\n\t\tvar originalIndex:number;\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = indexMappings.length;\r\n\t\tfor (i = 0; i < len; i++) {\r\n\t\t\tsplitIndex = i*stride;\r\n\t\t\toriginalIndex = indexMappings[i]*stride;\r\n\r\n\t\t\tfor (j = 0; j < stride; j++)\r\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\r\n\t\t}\r\n\r\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\r\n\t\tvertexBuffer.bufferView = splitVerts;\r\n\r\n\t\treturn vertexBuffer;\r\n\t}\r\n\r\n\t//TODO - generate this dyanamically based on num tris\r\n\r\n\tpublic static hitTestCurveGeometry(x:number, y:number, z:number, boundingBox:Box, curveSubGeometry:CurveSubGeometry):boolean\r\n\t{\r\n\t\tvar positionAttributes:Short3Attributes = curveSubGeometry.positions;\r\n\t\tvar curveAttributes:Short2Attributes = curveSubGeometry.curves;\r\n\t\tvar count:number = curveSubGeometry.numVertices;\r\n\r\n\t\tvar posDim:number = positionAttributes.dimensions;\r\n\t\tvar curveDim:number = curveAttributes.dimensions;\r\n\r\n\t\tvar positions:Float32Array = positionAttributes.get(count);\r\n\t\tvar curves:Float32Array = curveAttributes.get(count);\r\n\r\n\t\tvar id0:number;\r\n\t\tvar id1:number;\r\n\t\tvar id2:number;\r\n\r\n\t\tvar ax:number;\r\n\t\tvar ay:number;\r\n\t\tvar bx:number;\r\n\t\tvar by:number;\r\n\t\tvar cx:number;\r\n\t\tvar cy:number;\r\n\r\n\t\t//hard coded min vertex count to bother using a grid for\r\n\t\tif (count > 150) {\r\n\t\t\tvar cells:Array<Array<number>> = curveSubGeometry.cells;\r\n\t\t\tvar divisions:number = cells.length? curveSubGeometry.divisions : (curveSubGeometry.divisions = Math.min(Math.ceil(Math.sqrt(count)), 32));\r\n\t\t\tvar conversionX:number = divisions/boundingBox.width;\r\n\t\t\tvar conversionY:number = divisions/boundingBox.height;\r\n\t\t\tvar minx:number = boundingBox.x;\r\n\t\t\tvar miny:number = boundingBox.y;\r\n\r\n\t\t\tif (!cells.length) { //build grid\r\n\t\t\t\t\r\n\t\t\t\t//now we have bounds start creating grid cells and filling\r\n\t\t\t\tcells.length = divisions * divisions;\r\n\r\n\t\t\t\tfor(var k:number = 0; k < count; k+=3) {\r\n\t\t\t\t\tid0 = k + 2;\r\n\t\t\t\t\tid1 = k + 1;\r\n\t\t\t\t\tid2 = k + 0;\r\n\r\n\t\t\t\t\tax = positions[id0 * posDim];\r\n\t\t\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\t\t\tbx = positions[id1 * posDim];\r\n\t\t\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\t\t\tcx = positions[id2 * posDim];\r\n\t\t\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\t\t\t//subtractions to push into positive space\r\n\t\t\t\t\tvar min_index_x:number = Math.floor((Math.min(ax, bx, cx) - minx)*conversionX);\r\n\t\t\t\t\tvar min_index_y:number = Math.floor((Math.min(ay, by, cy) - miny)*conversionY);\r\n\r\n\t\t\t\t\tvar max_index_x:number = Math.floor((Math.max(ax, bx, cx) - minx)*conversionX);\r\n\t\t\t\t\tvar max_index_y:number = Math.floor((Math.max(ay, by, cy) - miny)*conversionY);\r\n\r\n\r\n\t\t\t\t\tfor (var i:number = min_index_x; i <= max_index_x; i++) {\r\n\t\t\t\t\t\tfor (var j:number = min_index_y; j <= max_index_y; j++) {\r\n\t\t\t\t\t\t\tvar index:number = i + j*divisions;\r\n\t\t\t\t\t\t\tvar nodes:Array<number> = cells[index] || (cells[index] = new Array<number>());\r\n\r\n\t\t\t\t\t\t\t//push in the triangle ids\r\n\t\t\t\t\t\t\tnodes.push(id0, id1, id2);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar index_x:number = Math.floor((x - minx)*conversionX);\r\n\t\t\tvar index_y:number = Math.floor((y - miny)*conversionY);\r\n\r\n\t\t\tif ((index_x < 0 || index_x > divisions || index_y < 0 || index_y > divisions))\r\n\t\t\t\treturn false;\r\n\r\n\t\t\tvar nodes:Array<number> = cells[index_x + index_y*divisions];\r\n\r\n\t\t\tif (nodes == null)\r\n\t\t\t\treturn false;\r\n\r\n\t\t\tvar nodeCount:number = nodes.length;\r\n\t\t\tfor (var k:number = 0; k < nodeCount; k += 3) {\r\n\t\t\t\tid0 = nodes[k];\r\n\t\t\t\tid1 = nodes[k + 1];\r\n\t\t\t\tid2 = nodes[k + 2];\r\n\r\n\t\t\t\tax = positions[id0 * posDim];\r\n\t\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\t\tbx = positions[id1 * posDim];\r\n\t\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\t\tcx = positions[id2 * posDim];\r\n\t\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\t\t//from a to p\r\n\t\t\t\tvar dx:number = ax - x;\r\n\t\t\t\tvar dy:number = ay - y;\r\n\r\n\t\t\t\t//edge normal (a-b)\r\n\t\t\t\tvar nx:number = by - ay;\r\n\t\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\r\n\t\t\t\tif (dot > 0)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tdx = bx - x;\r\n\t\t\t\tdy = by - y;\r\n\t\t\t\tnx = cy - by;\r\n\t\t\t\tny = -(cx - bx);\r\n\r\n\t\t\t\tdot = (dx * nx) + (dy * ny);\r\n\r\n\t\t\t\tif (dot > 0)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tdx = cx - x;\r\n\t\t\t\tdy = cy - y;\r\n\t\t\t\tnx = ay - cy;\r\n\t\t\t\tny = -(ax - cx);\r\n\r\n\t\t\t\tdot = (dx * nx) + (dy * ny);\r\n\r\n\t\t\t\tif (dot > 0)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\r\n\t\t\t\t//check if not solid\r\n\t\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\t\tvar v2x:number = x - ax;\r\n\t\t\t\t\tvar v2y:number = y - ay;\r\n\r\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\r\n\r\n\t\t\t\t\t//here be dragons\r\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\t\tvar d:number = uu * uu - vv;\r\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\r\n\t\t\t\t\tif (d > 0 && az == -1)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\telse if (d < 0 && az == 1)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t//brute force\r\n\t\tfor(var k:number = 0; k < count; k += 3) {\r\n\t\t\tid0 = k + 2;\r\n\t\t\tid1 = k + 1;\r\n\t\t\tid2 = k + 0;\r\n\r\n\t\t\tax = positions[id0 * posDim];\r\n\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\tbx = positions[id1 * posDim];\r\n\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\tcx = positions[id2 * posDim];\r\n\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - x;\r\n\t\t\tvar dy:number = ay - y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = bx - x;\r\n\t\t\tdy = by - y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = cx - x;\r\n\t\t\tdy = cy - y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\r\n\t\t\t//check if not solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = x - ax;\r\n\t\t\t\tvar v2y:number = y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\r\n\r\n\t\t\t\t//here be dragons\r\n\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\t\t\t\tif (d > 0 && az == -1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else if (d < 0 && az == 1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SceneEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/NullNode.ts",
    "awayjs-display/lib/partition/Partition.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubMesh",
    "CurveSubGeometry",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "material",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-core/lib/data/CurveSubGeometry",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "AbstractMethodError",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "SceneEvent",
    "DisplayObject",
    "_this",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pSceneTransformDirty",
    "_iMaskID",
    "_iMasks",
    "_matrix3D",
    "_matrix3DDirty",
    "_inverseSceneTransform",
    "_inverseSceneTransformDirty",
    "_scenePosition",
    "_scenePositionDirty",
    "_explicitVisibility",
    "_pImplicitVisibility",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_positionDirty",
    "_rotationDirty",
    "_scaleDirty",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_pScaleX",
    "_pScaleY",
    "_pScaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pivotDirty",
    "_pos",
    "_rot",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "Array",
    "_entityNodes",
    "_globalColorTransformDirty",
    "_globalColorTransform",
    "_inheritColorTransform",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_onGlobalColorTransformChangedDelegate",
    "event",
    "onGlobalColorTransformChanged",
    "_onColorTransformChangedDelegate",
    "onColorTransformChanged",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "set",
    "value",
    "_invalidateGlobalColorTransform",
    "_updateGlobalColorTransform",
    "_pColorTransform",
    "alphaMultiplier",
    "removeEventListener",
    "_pSetColorTransform",
    "addEventListener",
    "_boundsType",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "val",
    "_depth",
    "invalidateScale",
    "x",
    "RADIANS_TO_DEGREES",
    "y",
    "z",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "height",
    "_height",
    "_pParent",
    "getChildIndex",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_pIsEntity",
    "_loaderInfo",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "_pPickingCollider",
    "pivot",
    "clone",
    "invalidatePivot",
    "_root",
    "rotationX",
    "rotationY",
    "rotationZ",
    "_width",
    "transformVector",
    "copyColumnTo",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "width",
    "invalidatePosition",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "_iMatrix3D",
    "name",
    "concat",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "globalToLocal3D",
    "position",
    "inverseSceneTransform",
    "hitTestObject",
    "obj",
    "hitTestPoint",
    "shapeFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal",
    "localToGlobal3D",
    "moveTo",
    "dx",
    "dy",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scale",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "hasEventListener",
    "translate",
    "distance",
    "Math",
    "sqrt",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_pUpdateMatrix3D",
    "elements",
    "_pPickingCollisionVO",
    "iSetParent",
    "GLOBAL_COLOR_TRANSFORM_CHANGED",
    "isEntity",
    "invalidatePartition",
    "notifySceneTransformChange",
    "partition",
    "scene",
    "sceneChanged",
    "dispatchEvent",
    "REMOVED_FROM_SCENE",
    "_iUnregisterPartition",
    "_pUnregisterEntity",
    "_iRegisterPartition",
    "_pRegisterEntity",
    "ADDED_TO_SCENE",
    "notifySceneChange",
    "appendTranslation",
    "_iIsRoot",
    "prepend",
    "_iAddRenderable",
    "renderable",
    "push",
    "_iRemoveRenderable",
    "index",
    "indexOf",
    "splice",
    "_iTestCollision",
    "shortestCollisionDistance",
    "findClosest",
    "_iInternalUpdate",
    "_iController",
    "update",
    "_iIsMouseEnabled",
    "_iSetScene",
    "notifyPositionChanged",
    "_positionChanged",
    "notifyRotationChanged",
    "_rotationChanged",
    "notifyScaleChanged",
    "_scaleChanged",
    "_scenechanged",
    "_sceneTransformChanged",
    "invalidateMatrix3D",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "globalColorTransform",
    "clear",
    "_globalColorTransformChanged",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/SceneEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubGeometry",
    "LineSubMesh",
    "awayjs-core/lib/data/LineSubGeometry",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_colorTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "scaleX",
    "scaleY",
    "scaleZ",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubGeometry",
    "TriangleSubMesh",
    "awayjs-core/lib/data/TriangleSubGeometry",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cx",
    "cy",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "transform",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "invalidate",
    "awayjs-display/lib/bounds/BoundsType",
    "BoundsType",
    "SPHERE",
    "AXIS_ALIGNED_BOX",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_children",
    "addChild",
    "child",
    "removeChildInternal",
    "addChildAt",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "disposeWithChildren",
    "numChildren",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "getObjectsUnderPoint",
    "removeChildAt",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "AssetLoader",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_loadingSessions",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_contentLoaderInfo",
    "close",
    "lib",
    "getInstance",
    "stopAllLoadingSessions",
    "removeListeners",
    "stop",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "token",
    "loader",
    "RESOURCE_COMPLETE",
    "ASSET_COMPLETE",
    "_iLoader",
    "_iAddErrorHandler",
    "onLoadError",
    "_iAddParseErrorHandler",
    "onParseError",
    "loadData",
    "data",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "dispatcher",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/AssetLoader",
    "awayjs-display/lib/containers/Scene",
    "NodeBase",
    "Partition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "_partition",
    "_iSceneGraphRoot",
    "traversePartitions",
    "traverser",
    "traverse",
    "PARTITION_CHANGED",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/Partition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "renderer",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onScenePartitionChangedDelegate",
    "onScenePartitionChanged",
    "_onProjectionChangedDelegate",
    "onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pCamera",
    "_iRegisterCamera",
    "_pMouseX",
    "_pMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "left",
    "top",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "unproject",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "max",
    "min",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "pos",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "colors",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "indices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "thickness",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "colorTransform",
    "_applyColorTransform",
    "_parentColorTransform",
    "redMultiplier",
    "blueMultiplier",
    "greenMultiplier",
    "alphaOffset",
    "redOffset",
    "blueOffset",
    "greenOffset",
    "testBillboardCollision",
    "_applyRenderer",
    "_iApplyRenderableOwner",
    "_iRegisterEntity",
    "_iUnregisterEntity",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "_iUnregisterCamera",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "_iRegisterDirectionalLight",
    "_iUnregisterDirectionalLight",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "_iRegisterLightProbe",
    "_iUnregisterLightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "Geometry",
    "GeometryEvent",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "BOUNDS_INVALID",
    "SUB_GEOMETRY_ADDED",
    "SUB_GEOMETRY_REMOVED",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "applyTransformation",
    "disposeWithAnimatorAndChildren",
    "_iCopyToMesh",
    "boundsType",
    "shareAnimationGeometry",
    "mouseEnabled",
    "extra",
    "getSubMeshFromSubGeometry",
    "j",
    "subGeom",
    "boundingPositions",
    "numSubGeoms",
    "getBoundingPositions",
    "setEmpty",
    "box",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "testMeshCollision",
    "_iInvalidateRenderableGeometries",
    "awayjs-core/lib/data/Geometry",
    "awayjs-core/lib/events/GeometryEvent",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "bottom",
    "front",
    "v2",
    "right",
    "back",
    "d1",
    "d2",
    "rawData",
    "_iRegisterPointLight",
    "_iUnregisterPointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "_iRegisterSkybox",
    "_iUnregisterSkybox",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextField",
    "_text",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "reConstruct",
    "_textFormat",
    "_textHeight",
    "_textInteractionMode",
    "_textWidth",
    "removeSubGeometry",
    "positions",
    "curveData",
    "uvs",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "tri_idx_offset",
    "tri_cnt",
    "x_offset",
    "y_offset",
    "prev_char",
    "text",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "toString",
    "this_subGeom",
    "subgeom",
    "indices2",
    "positions2",
    "curveData2",
    "curves",
    "uv_values",
    "kerning_value",
    "k",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "curve_sub_geom",
    "updateIndices",
    "updatePositions",
    "updateCurves",
    "updateUVs",
    "addSubGeometry",
    "subMeshes",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "id",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "_iCopyToTextField",
    "textFormat",
    "textColor",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "Event",
    "_camera",
    "awayjs-core/lib/events/Event",
    "object",
    "VISIBLITY_UPDATED",
    "awayjs-display/lib/events/MouseEvent",
    "MouseEvent",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "renderableOwner",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_UP",
    "MOUSE_DOWN",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BasicMaterial",
    "Single2DTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "isAsset",
    "_defaultLineMaterial",
    "createDefaultLineMaterial",
    "_defaultTriangleMaterial",
    "createDefaultTriangleMaterial",
    "getDefaultTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_queuedEvents",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "queueDispatch",
    "_mouseMoveEvent",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "bounds",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "Number",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "w",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "init",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "floor",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "SingleCubeTexture",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_pool",
    "_entity",
    "_iNumEntities",
    "removeFromParent",
    "_iParent",
    "iRemoveNode",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "pickingCollisionVO",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_pNumChildNodes",
    "_pChildNodes",
    "_explicitDebugVisible",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "_debugChildrenVisible",
    "findPartitionForEntity",
    "_pNumEntities",
    "applyDebugEntity",
    "iAddNode",
    "node",
    "numEntities",
    "pop",
    "awayjs-display/lib/partition/NullNode",
    "NullNode",
    "PointLightNode",
    "SkyboxNode",
    "EntityNodePool",
    "rootNode",
    "_updatesMade",
    "_rootNode",
    "_cameraNodePool",
    "_directionalLightNodePool",
    "_entityNodePool",
    "_lightProbeNodePool",
    "_pointLightNodePool",
    "_skyboxNodePool",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "targetNode",
    "getItem",
    "pointLight",
    "skybox",
    "disposeItem",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/pool/EntityNodePool",
    "_pointLight",
    "applyPointLight",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "RaycastCollector",
    "findClosestCollision",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_findClosestCollision",
    "_entities",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "pickingCollider",
    "updateLocalPosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "entityNodeClass",
    "_entityNodeClass",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "registerClass",
    "subMeshClass",
    "classPool",
    "addDefaults",
    "main",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_numVertices",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "normals",
    "tangents",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "numIndices",
    "triangleGeometry",
    "numVertices",
    "vertexNormals",
    "vertexTangents",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "offset",
    "normLen",
    "tanLen",
    "updateVertexNormals",
    "updateVertexTangents",
    "_pBuildUVs",
    "scaleU",
    "scaleV",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tl",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "startPositions",
    "endPositions",
    "updateThickness",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "autoDeriveUVs",
    "updateGeometry",
    "mesh",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "nx",
    "ny",
    "nz",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "get_font_chars",
    "_font_em_size",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "awayjs-display/lib/text/TextFieldType",
    "TextFieldType",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "align",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "str",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray"
  ],
  "mappings": "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GAC3B12D,MAAK02D,YAAY,YAAc,GAC/B12D,MAAK02D,YAAY,cAAgB,GACjC12D,MAAK02D,YAAY,QAAU,GAC3B12D,MAAK02D,YAAY,cAAgB,OACjC12D,MAAK02D,YAAY,eAAiB,KAClC12D,MAAK02D,YAAY,gBAAkB,OACnC12D,MAAK02D,YAAY,WAAa,OAC9B12D,MAAK02D,YAAY,aAAe,QAChC12D,MAAK02D,YAAY,cAAgB,QACjC12D,MAAK02D,YAAY,SAAW,QAC5B12D,MAAK02D,YAAY,aAAe,QAChC12D,MAAK02D,YAAY,iBAAmB,QACpC12D,MAAK02D,YAAY,mBAAqB,OACtC12D,MAAK02D,YAAY,iBAAmB,OACpC12D,MAAK02D,YAAY,YAAc,KAC/B12D,MAAK02D,YAAY,QAAU,KAC3B12D,MAAK02D,YAAY,aAAe,OAChC12D,MAAK02D,YAAY,iBAAmB,KACpC12D,MAAK02D,YAAY,QAAU,KAC3B12D,MAAK02D,YAAY,QAAU,KAC3B12D,MAAK02D,YAAY,aAAe,OAChC12D,MAAK02D,YAAY,cAAgB,OACjC12D,MAAK02D,YAAY,oBAAsB,OACvC12D,MAAK02D,YAAY,gBAAkB,OACnC12D,MAAK02D,YAAY,kBAAoB,OACrC12D,MAAK02D,YAAY,YAAc,OAC/B12D,MAAK02D,YAAY,aAAe,KAChC12D,MAAK02D,YAAY,SAAW,KAC5B12D,MAAK02D,YAAY,eAAiB,OAClC12D,MAAK02D,YAAY,aAAe,OAChC12D,MAAK02D,YAAY,QAAU,KAC3B12D,MAAK02D,YAAY,cAAgB,OACjC12D,MAAK02D,YAAY,aAAe,OAChC12D,MAAK02D,YAAY,eAAiB,QAClC12D,MAAK02D,YAAY,eAAiB,QAClC12D,MAAK02D,YAAY,aAAe,QAChC12D,MAAK02D,YAAY,cAAgB,OACjC12D,MAAK02D,YAAY,eAAiB,KAClC12D,MAAK02D,YAAY,qBAAuB,KACxC12D,MAAK02D,YAAY,kBAAoB,OACrC12D,MAAK02D,YAAY,aAAe,OAChC12D,MAAK02D,YAAY,SAAW,OAC5B12D,MAAK02D,YAAY,aAAe,QAChC12D,MAAK02D,YAAY,iBAAmB,QACpC12D,MAAK02D,YAAY,aAAe,QAChC12D,MAAK02D,YAAY,QAAU,QAC3B12D,MAAK02D,YAAY,UAAY,QAC7B12D,MAAK02D,YAAY,SAAW,QAC5B12D,MAAK02D,YAAY,iBAAmB,QACpC12D,MAAK02D,YAAY,kBAAoB,QACrC12D,MAAK02D,YAAY,YAAc,QAC/B12D,MAAK02D,YAAY,SAAW,QAC5B12D,MAAK02D,YAAY,eAAiB,QAClC12D,MAAK02D,YAAY,aAAe,QAChC12D,MAAK02D,YAAY,OAAS,QAC1B12D,MAAK02D,YAAY,aAAe,QAChC12D,MAAK02D,YAAY,UAAY,QAC7B12D,MAAK02D,YAAY,eAAiB,OAClC12D,MAAK02D,YAAY,aAAe,QAChC12D,MAAK02D,YAAY,QAAU,QAC3B12D,MAAK02D,YAAY,cAAgB,QACjC12D,MAAK02D,YAAY,WAAa,OAC9B12D,MAAK02D,YAAY,UAAY,OAC7B12D,MAAK02D,YAAY,SAAW,QAC5B12D,MAAK02D,YAAY,aAAe,QAChC12D,MAAK02D,YAAY,aAAe,QAChC12D,MAAK02D,YAAY,cAAgB,QACjC12D,MAAK02D,YAAY,UAAY,QAC7B12D,MAAK02D,YAAY,cAAgB,QACjC12D,MAAK02D,YAAY,eAAiB,QAClC12D,MAAK02D,YAAY,SAAW,QAC5B12D,MAAK02D,YAAY,UAAY,QAC7B12D,MAAK02D,YAAY,cAAgB,QACjC12D,MAAK02D,YAAY,UAAY,QAC7B12D,MAAK02D,YAAY,aAAe,QAChC12D,MAAK02D,YAAY,WAAa,QAC9B12D,MAAK02D,YAAY,OAAS,QAC1B12D,MAAK02D,YAAY,YAAc,QAC/B12D,MAAK02D,YAAY,WAAa,QAC9B12D,MAAK02D,YAAY,WAAa,QAC9B12D,MAAK02D,YAAY,WAAa,QAC9B12D,MAAK02D,YAAY,aAAe,QAChC12D,MAAK02D,YAAY,QAAU,QAC3B12D,MAAK02D,YAAY,iBAAmB,QACpC12D,MAAK02D,YAAY,mBAAqB,QACtC12D,MAAK02D,YAAY,UAAY,OAC7B12D,MAAK02D,YAAY,eAAiB,OAClC12D,MAAK02D,YAAY,gBAAkB,OACnC12D,MAAK02D,YAAY,cAAgB,OACjC12D,MAAK02D,YAAY,UAAY,OAC7B12D,MAAK02D,YAAY,cAAgB,OACjC12D,MAAK02D,YAAY,cAAgB,QACjC12D,MAAK02D,YAAY,gBAAkB,QACnC12D,MAAK02D,YAAY,UAAY,QAC7B12D,MAAK02D,YAAY,UAAY,QAC7B12D,MAAK02D,YAAY,QAAU,QAC3B12D,MAAK02D,YAAY,WAAa,QAC9B12D,MAAK02D,YAAY,YAAc,QAC/B12D,MAAK02D,YAAY,cAAgB,QACjC12D,MAAK02D,YAAY,aAAe,QAChC12D,MAAK02D,YAAY,aAAe,QAChC12D,MAAK02D,YAAY,YAAc,QAC/B12D,MAAK02D,YAAY,wBAA0B,QAC3C12D,MAAK02D,YAAY,gBAAkB,QACnC12D,MAAK02D,YAAY,YAAc,QAC/B12D,MAAK02D,YAAY,eAAiB,QAClC12D,MAAK02D,YAAY,SAAW,QAC5B12D,MAAK02D,YAAY,eAAiB,QAClC12D,MAAK02D,YAAY,SAAW,QAC5B12D,MAAK02D,YAAY,WAAa,QAC9B12D,MAAK02D,YAAY,gBAAkB,QACnC12D,MAAK02D,YAAY,UAAY,QAC7B12D,MAAK02D,YAAY,aAAe,QAChC12D,MAAK02D,YAAY,cAAgB,QACjC12D,MAAK02D,YAAY,SAAW,QAC5B12D,MAAK02D,YAAY,YAAc,QAC/B12D,MAAK02D,YAAY,iBAAmB,QACpC12D,MAAK02D,YAAY,aAAe,QAChC12D,MAAK02D,YAAY,QAAU,QAC3B12D,MAAK02D,YAAY,SAAW,QAC5B12D,MAAK02D,YAAY,cAAgB,QACjC12D,MAAK02D,YAAY,aAAe,QAChC12D,MAAK02D,YAAY,aAAe,QAChC12D,MAAK02D,YAAY,UAAY,QAC7B12D,MAAK02D,YAAY,YAAc,QAC/B12D,MAAK02D,YAAY,QAAU,OAC3B12D,MAAK02D,YAAY,kBAAoB,OACrC12D,MAAK02D,YAAY,aAAe,OAChC12D,MAAK02D,YAAY,WAAa,OAC9B12D,MAAK02D,YAAY,iBAAmB,OACpC12D,MAAK02D,YAAY,SAAW,CAC5B12D,MAAK02D,YAAY,eAAiB,WAGnC,GAAI12D,KAAK02D,YAAYnyC,IAAS,KAC7B,MAAOvkB,MAAK02D,YAAYnyC,EAEzB,IAAeA,EAAM9kB,QAAU,GAAMO,KAAKo2D,MAAM7xC,GAC/C,MAAOoyC,UAAS,KAAOpyC,GAGzB,MAAO,MAGM0xC,GAAArkC,MAAd,SAAoBrN,GAEnB,GAAIymB,GAAyBhrC,KAAKw2D,SAASjyC,EAE3C,IAAIymB,GAAU,KACb,KAAM,IAAId,GAAU,wBAA0B3lB,EAE/C,OAAOymB,GAGMirB,GAAAW,SAAd,SAAuB/qD,GAEtB,GAAI7L,KAAK62D,YAAYhrD,GACpB,MAAOA,EAER,IAAIm/B,GAAahrC,KAAK82D,SAASjrD,EAE/B,IAAIm/B,GAAU,KACb,MAAOA,EAER,KACCA,EAAS+rB,OAAOlrD,EAChB7L,MAAK82D,SAASjrD,GAAQm/B,CACtB,OAAOA,GACN,MAAOtsC,IAGTsB,KAAK62D,YAAYhrD,GAAQ,IAEzB,OAAOA,GAGMoqD,GAAAje,QAAd,SAAsBzzB,GAErB,GAAIA,GAAQ,KACX,MAAO,KAER,UAAU,IAAU,SACnBA,EAAOvkB,KAAK42D,SAASryC,EAEtB,UAAU,IAAU,WAAY,CAC/B,IACCA,EAAO,GAAIA,GACV,MAAO7lB,GACR6lB,EAAO,GAAIA,GAAK,EAAG,IAIrB,GAAIA,YAAgB2sB,GACnB,MAAO3sB,EAER,IAAIA,YAAgB6oB,GACnB7oB,EAA0BA,EAAMgvB,SAEjC,IAAIhvB,YAAgB+uC,GACnB,MAAoB/uC,GAAMyzB,OAE3B,MAAM,IAAI9N,GAAU,gCAAkC3lB,GAGzC0xC,GAAAe,cAAd,SAA4BzyC,GAE3B,GAAIA,GAAQ,KACX,MAAO,KAER,UAAU,IAAU,SACnBA,EAAOvkB,KAAK42D,SAASryC,EAEtB,UAAU,IAAU,WAAY,CAC/B,IACCA,EAAO,GAAIA,GACV,MAAO7lB,GACR6lB,EAAO,GAAIA,GAAK,EAAG,IAIrB,GAAIA,YAAgB6oB,GACnB,MAAO7oB,EAER,KACC,GAAI0yC,GAAchB,EAAKje,QAAQzzB,EAC/B,OAAO,IAAI6oB,GAAgB6pB,GAC1B,MAAOv4D,IAGT,KAAM,IAAIwrC,GAAU,kCAAoC3lB,GA1S1C0xC,GAAAK,UAAmB,wBAEnBL,GAAAY,YAAqB,GAAIl2D,OACzBs1D,GAAAa,SAAkB,GAAIn2D,OAyStC,OAAAs1D,KAEAt2D,GAAcJ,QAAL02D,InH8qgBNvkB,+BAA+BtwC,UAAUyyD,iCAAiCzyD,UAAU81D,kCAAkC91D,UAAU6oC,sCAAsC,sCAAsCoE,8CAA8C",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n/**\r\n * Provides an abstract base class for nodes in an animation blend tree.\r\n */\r\nclass AnimationNodeBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\r\n\r\n\tpublic _pStateClass:any;\r\n\r\n\tpublic get stateClass():any\r\n\t{\r\n\t\treturn this._pStateClass;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>AnimationNodeBase</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AnimationNodeBase.assetType;\r\n\t}\r\n}\r\n\r\nexport = AnimationNodeBase;",
    "/**\r\n *\r\n */\r\nclass AlignmentMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PIVOT_POINT:string = \"pivot\";\r\n}\r\n\r\nexport = AlignmentMode;",
    "import CurveSubGeometry\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\r\nimport IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.CurveSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.CurveSubMesh\r\n */\r\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\r\n\r\n\tprivate _subGeometry:CurveSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t */\r\n\tpublic get subGeometry():CurveSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new CurveSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\r\n\t * @param material An optional material used to render this CurveSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\r\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\r\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\n/**\r\n * The DisplayObject class is the base class for all objects that can be\r\n * placed on the display list. The display list manages all objects displayed\r\n * in flash. Use the DisplayObjectContainer class to arrange the\r\n * display objects in the display list. DisplayObjectContainer objects can\r\n * have child display objects, while other display objects, such as Shape and\r\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\r\n * children.\r\n *\r\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\r\n * and <i>y</i> position of an object, as well as more advanced properties of\r\n * the object such as its transformation matrix. </p>\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception. </p>\r\n *\r\n * <p>All display objects inherit from the DisplayObject class.</p>\r\n *\r\n * <p>The DisplayObject class itself does not include any APIs for rendering\r\n * content onscreen. For that reason, if you want create a custom subclass of\r\n * the DisplayObject class, you will want to extend one of its subclasses that\r\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\r\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\r\n *\r\n * <p>The DisplayObject class contains several broadcast events. Normally, the\r\n * target of any particular event is a specific DisplayObject instance. For\r\n * example, the target of an <code>added</code> event is the specific\r\n * DisplayObject instance that was added to the display list. Having a single\r\n * target restricts the placement of event listeners to that target and in\r\n * some cases the target's ancestors on the display list. With broadcast\r\n * events, however, the target is not a specific DisplayObject instance, but\r\n * rather all DisplayObject instances, including those that are not on the\r\n * display list. This means that you can add a listener to any DisplayObject\r\n * instance to listen for broadcast events. In addition to the broadcast\r\n * events listed in the DisplayObject class's Events table, the DisplayObject\r\n * class also inherits two broadcast events from the EventDispatcher class:\r\n * <code>activate</code> and <code>deactivate</code>.</p>\r\n *\r\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\r\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\r\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\r\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\r\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\r\n * longer begin with the underscore(_) character.</p>\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n * \r\n * @event added            Dispatched when a display object is added to the\r\n *                         display list. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event addedToScene     Dispatched when a display object is added to the on\r\n *                         scene display list, either directly or through the\r\n *                         addition of a sub tree in which the display object\r\n *                         is contained. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\r\n *                         entering a new frame. If the playhead is not\r\n *                         moving, or if there is only one frame, this event\r\n *                         is dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\r\n *                         exiting the current frame. All frame scripts have\r\n *                         been run. If the playhead is not moving, or if\r\n *                         there is only one frame, this event is dispatched\r\n *                         continuously in conjunction with the frame rate.\r\n *                         This event is a broadcast event, which means that\r\n *                         it is dispatched by all display objects with a\r\n *                         listener registered for this event.\r\n * @event frameConstructed [broadcast event] Dispatched after the constructors\r\n *                         of frame display objects have run but before frame\r\n *                         scripts have run. If the playhead is not moving, or\r\n *                         if there is only one frame, this event is\r\n *                         dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event removed          Dispatched when a display object is about to be\r\n *                         removed from the display list. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event removedFromScene Dispatched when a display object is about to be\r\n *                         removed from the display list, either directly or\r\n *                         through the removal of a sub tree in which the\r\n *                         display object is contained. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event render           [broadcast event] Dispatched when the display list\r\n *                         is about to be updated and rendered. This event\r\n *                         provides the last opportunity for objects listening\r\n *                         for this event to make changes before the display\r\n *                         list is rendered. You must call the\r\n *                         <code>invalidate()</code> method of the Scene\r\n *                         object each time you want a <code>render</code>\r\n *                         event to be dispatched. <code>Render</code> events\r\n *                         are dispatched to an object only if there is mutual\r\n *                         trust between it and the object that called\r\n *                         <code>Scene.invalidate()</code>. This event is a\r\n *                         broadcast event, which means that it is dispatched\r\n *                         by all display objects with a listener registered\r\n *                         for this event.\r\n *\r\n *                         <p><b>Note: </b>This event is not dispatched if the\r\n *                         display is not rendering. This is the case when the\r\n *                         content is either minimized or obscured. </p>\r\n */\r\nclass DisplayObject extends AssetBase implements IBitmapDrawable\r\n{\r\n\tprivate _loaderInfo:LoaderInfo;\r\n\tprivate _mouseX:number;\r\n\tprivate _mouseY:number;\r\n\tprivate _root:DisplayObjectContainer;\r\n\tprivate _bounds:Rectangle;\r\n\tpublic _pBoxBounds:Box;\r\n\tprivate _boxBoundsInvalid:boolean = true;\r\n\tpublic _pSphereBounds:Sphere;\r\n\tprivate _sphereBoundsInvalid:boolean = true;\r\n\tprivate _debugVisible:boolean;\r\n\tpublic _pName:string;\r\n\r\n\tpublic _pScene:Scene;\r\n\tpublic _pParent:DisplayObjectContainer;\r\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\r\n\tpublic _pSceneTransformDirty:boolean = true;\r\n\tpublic _pIsEntity:boolean;\r\n    public _iMaskID:number = -1;\r\n    public _iMasks:DisplayObject[] = null;\r\n\r\n\tprivate _explicitPartition:Partition;\r\n\tpublic _pImplicitPartition:Partition;\r\n\r\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\r\n\tprivate _scenechanged:DisplayObjectEvent;\r\n\tprivate _transform:Transform;\r\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\r\n\tprivate _matrix3DDirty:boolean = true;\r\n    public _pColorTransform:ColorTransform;\r\n\r\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\r\n\tprivate _inverseSceneTransformDirty:boolean = true;\r\n\tprivate _scenePosition:Vector3D = new Vector3D();\r\n\tprivate _scenePositionDirty:boolean = true;\r\n\tprivate _explicitVisibility:boolean = true;\r\n\tpublic _pImplicitVisibility:boolean = true;\r\n\tprivate _explicitMouseEnabled:boolean = true;\r\n\tpublic _pImplicitMouseEnabled:boolean = true;\r\n\tprivate _listenToSceneTransformChanged:boolean;\r\n\tprivate _listenToSceneChanged:boolean;\r\n\r\n\tprivate _positionDirty:boolean = true;\r\n\tprivate _rotationDirty:boolean = true;\r\n\tprivate _scaleDirty:boolean = true;\r\n\r\n\tprivate _positionChanged:DisplayObjectEvent;\r\n\tprivate _rotationChanged:DisplayObjectEvent;\r\n\tprivate _scaleChanged:DisplayObjectEvent;\r\n\r\n\tprivate _rotationX:number = 0;\r\n\tprivate _rotationY:number = 0;\r\n\tprivate _rotationZ:number = 0;\r\n\tprivate _eulers:Vector3D = new Vector3D();\r\n\tprivate _flipY:Matrix3D = new Matrix3D();\r\n\r\n\tprivate _listenToPositionChanged:boolean;\r\n\tprivate _listenToRotationChanged:boolean;\r\n\tprivate _listenToScaleChanged:boolean;\r\n\tprivate _zOffset:number = 0;\r\n\r\n\tpublic _width:number;\r\n\tpublic _height:number;\r\n\tpublic _depth:number;\r\n\r\n\tpublic _pScaleX:number = 1;\r\n\tpublic _pScaleY:number = 1;\r\n\tpublic _pScaleZ:number = 1;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _pivot:Vector3D = new Vector3D();\r\n\tprivate _pivotScale:Vector3D = new Vector3D();\r\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\r\n\tprivate _pivotZero:boolean = true;\r\n\tprivate _pivotDirty:boolean = true;\r\n\tprivate _pos:Vector3D = new Vector3D();\r\n\tprivate _rot:Vector3D = new Vector3D();\r\n\tprivate _sca:Vector3D = new Vector3D();\r\n\tprivate _transformComponents:Array<Vector3D>;\r\n\r\n\tpublic _pIgnoreTransform:boolean = false;\r\n\r\n\tprivate _shaderPickingDetails:boolean;\r\n\r\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\r\n\r\n\tpublic _boundsType:string;\r\n\r\n\tpublic _pPickingCollider:IPickingCollider;\r\n\r\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\r\n\r\n\tpublic _iSourcePrefab:PrefabBase;\r\n\r\n    private _globalColorTransformChanged:DisplayObjectEvent;\r\n    private _globalColorTransformDirty:boolean = false;\r\n    private _globalColorTransform:ColorTransform = new ColorTransform();\r\n    private _onGlobalColorTransformChangedDelegate:(event:DisplayObjectEvent) => void;\r\n    private _onColorTransformChangedDelegate:(event:Event) => void;\r\n    private _inheritColorTransform:boolean = false;\r\n\r\n    public get inheritColorTransform():boolean\r\n    {\r\n        return this._inheritColorTransform;\r\n    }\r\n\r\n    public set inheritColorTransform(value:boolean)\r\n    {\r\n        this._inheritColorTransform = value;\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n\r\n    public get globalColorTransform():ColorTransform\r\n    {\r\n        if (this._globalColorTransformDirty)\r\n            this._updateGlobalColorTransform();\r\n\r\n        return this._globalColorTransform;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\r\n\r\n\t/**\r\n\t * Indicates the alpha transparency value of the object specified. Valid\r\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\r\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\r\n\t * even though they are invisible.\r\n\t */\r\n\tpublic get alpha():number\r\n    {\r\n        return this._pColorTransform.alphaMultiplier;\r\n    }\r\n\r\n    public set alpha(value:number)\r\n    {\r\n        this._pColorTransform.alphaMultiplier = value;\r\n    }\r\n\r\n    public get colorTransform()\r\n    {\r\n        return this._pColorTransform;\r\n    }\r\n\r\n    public set colorTransform(value:ColorTransform)\r\n    {\r\n        // TS compiler freaking out over Event.CHANGE, using literal strings for now\r\n        if (this._pColorTransform)\r\n            this._pColorTransform.removeEventListener(\"change\", this._onColorTransformChangedDelegate);\r\n\r\n\r\n        this._pSetColorTransform(value);\r\n\r\n        if (value)\r\n            value.addEventListener(\"change\", this._onColorTransformChangedDelegate);\r\n    }\r\n\r\n\t/**\r\n\t * A value from the BlendMode class that specifies which blend mode to use. A\r\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\r\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\r\n\t * bitmap-filled square shape to the vector render. If you attempt to set\r\n\t * this property to an invalid value, Flash runtimes set the value to\r\n\t * <code>BlendMode.NORMAL</code>.\r\n\t *\r\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\r\n\t * object. Each pixel is composed of three constituent colors(red, green,\r\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\r\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\r\n\t * the movie clip with the corresponding color of the pixel in the\r\n\t * background. For example, if <code>blendMode</code> is set to\r\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\r\n\t * value of the display object with the red value of the background, and uses\r\n\t * the lighter of the two as the value for the red component of the displayed\r\n\t * color.</p>\r\n\t *\r\n\t * <p>The following table describes the <code>blendMode</code> settings. The\r\n\t * BlendMode class defines string values you can use. The illustrations in\r\n\t * the table show <code>blendMode</code> values applied to a circular display\r\n\t * object(2) superimposed on another display object(1).</p>\r\n\t */\r\n\tpublic blendMode:BlendMode;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get boundsType():string\r\n\t{\r\n\t\treturn this._boundsType;\r\n\t}\r\n\r\n\tpublic set boundsType(value:string)\r\n\t{\r\n\t\tif (this._boundsType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._boundsType = value;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].updateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * If set to <code>true</code>, NME will use the software renderer to cache\r\n\t * an internal bitmap representation of the display object. For native targets,\r\n\t * this is often much slower than the default hardware renderer. When you\r\n\t * are using the Flash target, this caching may increase performance for display\r\n\t * objects that contain complex vector content.\r\n\t *\r\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\r\n\t * to the bitmap instead of the main display. If\r\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\r\n\t * then copied to the main display as unstretched, unrotated pixels snapped\r\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\r\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\r\n\t * instead of being stretched.</p>\r\n\t *\r\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\r\n\t * object is drawn to the off-screen bitmap using that matrix and the\r\n\t * stretched and/or rotated results of that rendering are used to draw the\r\n\t * object to the main display.</p>\r\n\t *\r\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\r\n\t * property is set to <code>true</code>.</p>\r\n\t *\r\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\r\n\t * <code>true</code>, the rendering does not change, however the display\r\n\t * object performs pixel snapping automatically. The animation speed can be\r\n\t * significantly faster depending on the complexity of the vector content.\r\n\t * </p>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\r\n\t * <code>true</code> whenever you apply a filter to a display object(when\r\n\t * its <code>filter</code> array is not empty), and if a display object has a\r\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\r\n\t * <code>true</code> for that display object, even if you set the property to\r\n\t * <code>false</code>. If you clear all filters for a display object, the\r\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\r\n\t *\r\n\t * <p>A display object does not use a bitmap even if the\r\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\r\n\t * instead renders from vector data in the following cases:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\r\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\r\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\r\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\r\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\r\n\t * in width.</li>\r\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\r\n\t * that have mostly static content and that do not scale and rotate\r\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\r\n\t * performance increases when the movie clip is translated(when its <i>x</i>\r\n\t * and <i>y</i> position is changed).</p>\r\n\t */\r\n\tpublic cacheAsBitmap:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic castsShadows:boolean = true;\r\n\r\n\t/**\r\n\t * Indicates the depth of the display object, in pixels. The depth is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\r\n\t * set <code>depth</code> to a different value.</p>\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this.getBox().depth*this._pScaleZ;\r\n\t}\r\n\r\n\tpublic set depth(val:number)\r\n\t{\r\n\t\tif (this._depth == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._depth = val;\r\n\r\n\t\tthis._pScaleZ = val/this.getBox().depth;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\r\n\t */\r\n\tpublic get eulers():Vector3D\r\n\t{\r\n\t\tthis._eulers.x = this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis._eulers.y = this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis._eulers.z = this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\r\n\t\treturn this._eulers;\r\n\t}\r\n\r\n\tpublic set eulers(value:Vector3D)\r\n\t{\r\n\t\tthis._rotationX = value.x*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationY = value.y*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationZ = value.z*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * An object that can contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * An indexed array that contains each filter object currently associated\r\n\t * with the display object. The flash.filters package contains several\r\n\t * classes that define specific filters you can use.\r\n\t *\r\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\r\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\r\n\t * you must make a temporary copy of the entire <code>filters</code> array,\r\n\t * modify the temporary array, then assign the value of the temporary array\r\n\t * back to the <code>filters</code> array. You cannot directly add a new\r\n\t * filter object to the <code>filters</code> array.</p>\r\n\t *\r\n\t * <p>To add a filter by using ActionScript, perform the following steps\r\n\t * (assume that the target display object is named\r\n\t * <code>myDisplayObject</code>):</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Create a new filter object by using the constructor method of your\r\n\t * chosen filter class.</li>\r\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\r\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\r\n\t * array.</li>\r\n\t *   <li>Assign the value of the temporary array to the\r\n\t * <code>myDisplayObject.filters</code> array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\r\n\t * a temporary array. Instead, you can directly assign an array literal that\r\n\t * contains one or more filter objects that you create. The first example in\r\n\t * the Examples section adds a drop shadow filter by using code that handles\r\n\t * both defined and undefined <code>filters</code> arrays.</p>\r\n\t *\r\n\t * <p>To modify an existing filter object, you must use the technique of\r\n\t * modifying a copy of the <code>filters</code> array:</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\r\n\t * array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Modify the property by using the temporary array,\r\n\t * <code>myFilters</code>. For example, to set the quality property of the\r\n\t * first filter in the array, you could use the following code:\r\n\t * <code>myFilters[0].quality = 1;</code></li>\r\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\r\n\t * array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>At load time, if a display object has an associated filter, it is\r\n\t * marked to cache itself as a transparent bitmap. From this point forward,\r\n\t * as long as the display object has a valid filter list, the player caches\r\n\t * the display object as a bitmap. This source bitmap is used as a source\r\n\t * image for the filter effects. Each display object usually has two bitmaps:\r\n\t * one with the original unfiltered source display object and another for the\r\n\t * final image after filtering. The final image is used when rendering. As\r\n\t * long as the display object does not change, the final image does not need\r\n\t * updating.</p>\r\n\t *\r\n\t * <p>The flash.filters package includes classes for filters. For example, to\r\n\t * create a DropShadow filter, you would write:</p>\r\n\t *\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel4</code> output).\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader doesn't specify any image input or\r\n\t *                       the first input is not an <code>image4</code> input.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\r\n\t *                       ByteArray or Vector.<Number> instance as a shader\r\n\t *                       input, and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput object, or the specified values\r\n\t *                       don't match the amount of data in the input data.\r\n\t *                       See the <code>ShaderInput.input</code> property for\r\n\t *                       more information.\r\n\t */\r\n//\t\tpublic filters:Array<Dynamic>;\r\n\r\n\t/**\r\n\t * Indicates the height of the display object, in pixels. The height is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a height of 0, even if you try to\r\n\t * set <code>height</code> to a different value.</p>\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this.getBox().height*this._pScaleY;\r\n\t}\r\n\r\n\tpublic set height(val:number)\r\n\t{\r\n\t\tif (this._height == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = val;\r\n\r\n\t\tthis._pScaleY = val/this.getBox().height;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance container index of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByIndex()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\r\n\t */\r\n\tpublic get index():number\r\n\t{\r\n\t\tif (this._pParent)\r\n\t\t\treturn this._pParent.getChildIndex(this);\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get inverseSceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._inverseSceneTransformDirty) {\r\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\r\n\t\t\tthis._inverseSceneTransform.invert();\r\n\t\t\tthis._inverseSceneTransformDirty = false;\r\n\t\t}\r\n\t\treturn this._inverseSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get ignoreTransform():boolean\r\n\t{\r\n\t\treturn this._pIgnoreTransform;\r\n\t}\r\n\r\n\tpublic set ignoreTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pIgnoreTransform == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pIgnoreTransform = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._pSceneTransform.identity();\r\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\r\n\t\t}\r\n\r\n\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isEntity()\r\n\t{\r\n\t\treturn this._pIsEntity;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object containing information about loading the file\r\n\t * to which this display object belongs. The <code>loaderInfo</code> property\r\n\t * is defined only for the root display object of a SWF file or for a loaded\r\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\r\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\r\n\t * a display object named <code>myDisplayObject</code>, use\r\n\t * <code>myDisplayObject.root.loaderInfo</code>.\r\n\t *\r\n\t * <p>A large SWF file can monitor its download by calling\r\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\r\n\t * func)</code>.</p>\r\n\t */\r\n\tpublic get loaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._loaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * The calling display object is masked by the specified <code>mask</code>\r\n\t * object. To ensure that masking works when the Stage is scaled, the\r\n\t * <code>mask</code> display object must be in an active part of the display\r\n\t * list. The <code>mask</code> object itself is not drawn. Set\r\n\t * <code>mask</code> to <code>null</code> to remove the mask.\r\n\t *\r\n\t * <p>To be able to scale a mask object, it must be on the display list. To\r\n\t * be able to drag a mask Sprite object(by calling its\r\n\t * <code>startDrag()</code> method), it must be on the display list. To call\r\n\t * the <code>startDrag()</code> method for a mask sprite based on a\r\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\r\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\r\n\t *\r\n\t * <p>When display objects are cached by setting the\r\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\r\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\r\n\t * mask and the display object being masked must be part of the same cached\r\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\r\n\t * child of the display object. If an ancestor of the display object on the\r\n\t * display list is cached, then the mask must be a child of that ancestor or\r\n\t * one of its descendents. If more than one ancestor of the masked object is\r\n\t * cached, then the mask must be a descendent of the cached container closest\r\n\t * to the masked object in the display list.</p>\r\n\t *\r\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\r\n\t * more than one calling display object. When the <code>mask</code> is\r\n\t * assigned to a second display object, it is removed as the mask of the\r\n\t * first object, and that object's <code>mask</code> property becomes\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic mask:DisplayObject;\r\n\r\n\t/**\r\n\t * Specifies whether this object receives mouse, or other user input,\r\n\t * messages. The default value is <code>true</code>, which means that by\r\n\t * default any InteractiveObject instance that is on the display list\r\n\t * receives mouse events or other user input events. If\r\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\r\n\t * not receive any mouse events(or other user input events like keyboard\r\n\t * events). Any children of this instance on the display list are not\r\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\r\n\t * children of an object on the display list, use\r\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseEnabled():boolean\r\n\t{\r\n\t\treturn this._explicitMouseEnabled;\r\n\t}\r\n\r\n\tpublic set mouseEnabled(value:boolean)\r\n\t{\r\n\t\tif (this._explicitMouseEnabled == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMouseEnabled = value;\r\n\r\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates the x coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._mouseX;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._mouseY;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance name of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByName()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * @throws IllegalOperationError If you are attempting to set this property\r\n\t *                               on an object that was placed on the timeline\r\n\t *                               in the Flash authoring tool.\r\n\t */\r\n\tpublic get name() :string\r\n    {\r\n        return this._pName;\r\n    }\r\n\r\n    public set name(value : string)\r\n    {\r\n        this._pName = value;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\r\n\r\n\t/**\r\n\t * Indicates the DisplayObjectContainer object that contains this display\r\n\t * object. Use the <code>parent</code> property to specify a relative path to\r\n\t * display objects that are above the current display object in the display\r\n\t * list hierarchy.\r\n\t *\r\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\r\n\t * display list as in the following:</p>\r\n\t *\r\n\t * @throws SecurityError The parent display object belongs to a security\r\n\t *                       sandbox to which you do not have access. You can\r\n\t *                       avoid this situation by having the parent movie call\r\n\t *                       the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic get parent():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._pParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._explicitPartition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tif (this._explicitPartition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitPartition = value;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pickingCollider():IPickingCollider\r\n\t{\r\n\t\treturn this._pPickingCollider;\r\n\t}\r\n\r\n\tpublic set pickingCollider(value:IPickingCollider)\r\n\t{\r\n\t\tthis._pPickingCollider = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the local point around which the object rotates.\r\n\t */\r\n\tpublic get pivot():Vector3D\r\n\t{\r\n\t\treturn this._pivot;\r\n\t}\r\n\r\n\r\n\tpublic set pivot(pivot:Vector3D)\r\n\t{\r\n\t\tthis._pivot = pivot.clone();\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * For a display object in a loaded SWF file, the <code>root</code> property\r\n\t * is the top-most display object in the portion of the display list's tree\r\n\t * structure represented by that SWF file. For a Bitmap object representing a\r\n\t * loaded image file, the <code>root</code> property is the Bitmap object\r\n\t * itself. For the instance of the main class of the first SWF file loaded,\r\n\t * the <code>root</code> property is the display object itself. The\r\n\t * <code>root</code> property of the Scene object is the Scene object itself.\r\n\t * The <code>root</code> property is set to <code>null</code> for any display\r\n\t * object that has not been added to the display list, unless it has been\r\n\t * added to a display object container that is off the display list but that\r\n\t * is a child of the top-most display object in a loaded SWF file.\r\n\t *\r\n\t * <p>For example, if you create a new Sprite object by calling the\r\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\r\n\t * is <code>null</code> until you add it to the display list(or to a display\r\n\t * object container that is off the display list but that is a child of the\r\n\t * top-most display object in a SWF file).</p>\r\n\t *\r\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\r\n\t * file may not be on the display list, the top-most display object in the\r\n\t * SWF file has its <code>root</code> property set to itself. The Loader\r\n\t * object does not have its <code>root</code> property set until it is added\r\n\t * as a child of a display object for which the <code>root</code> property is\r\n\t * set.</p>\r\n\t */\r\n\tpublic get root():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._root;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\r\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\r\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\r\n\t * this range are added to or subtracted from 360 to obtain a value within\r\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\r\n\t * is the same as <code> my_video.rotation = 90</code>.\r\n\t */\r\n\tpublic rotation:number; //TODO\r\n\r\n\t/**\r\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationX():number\r\n\t{\r\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationX(val:number)\r\n\t{\r\n\t\tif (this.rotationX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationY():number\r\n\t{\r\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationY(val:number)\r\n\t{\r\n\t\tif (this.rotationY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationZ():number\r\n\t{\r\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationZ(val:number)\r\n\t{\r\n\t\tif (this.rotationZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\r\n\t * the entire display object is scaled normally when any scale transformation\r\n\t * is applied.\r\n\t *\r\n\t * <p>When you define the <code>scale9Grid</code> property, the display\r\n\t * object is divided into a grid with nine regions based on the\r\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\r\n\t * grid. The eight other regions of the grid are the following areas: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The upper-left corner outside of the rectangle</li>\r\n\t *   <li>The area above the rectangle </li>\r\n\t *   <li>The upper-right corner outside of the rectangle</li>\r\n\t *   <li>The area to the left of the rectangle</li>\r\n\t *   <li>The area to the right of the rectangle</li>\r\n\t *   <li>The lower-left corner outside of the rectangle</li>\r\n\t *   <li>The area below the rectangle</li>\r\n\t *   <li>The lower-right corner outside of the rectangle</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>You can think of the eight regions outside of the center(defined by\r\n\t * the rectangle) as being like a picture frame that has special rules\r\n\t * applied to it when scaled.</p>\r\n\t *\r\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\r\n\t * is scaled, all text and gradients are scaled normally; however, for other\r\n\t * types of objects the following rules apply:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>Content in the center region is scaled normally. </li>\r\n\t *   <li>Content in the corners is not scaled. </li>\r\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\r\n\t * Content in the left and right regions is scaled vertically only.</li>\r\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\r\n\t * fit their shapes.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\r\n\t * the <code>scale9Grid</code> property is ignored).</p>\r\n\t *\r\n\t * <p>For example, consider the following display object and a rectangle that\r\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\r\n\t *\r\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\r\n\t * object to be used as a component, in which edge regions retain the same\r\n\t * width when the component is scaled.</p>\r\n\t *\r\n\t * @throws ArgumentError If you pass an invalid argument to the method.\r\n\t */\r\n\tpublic scale9Grid:Rectangle;\r\n\r\n\t/**\r\n\t * Indicates the horizontal scale(percentage) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0). 1.0\r\n\t * equals 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleX():number\r\n\t{\r\n\t\treturn this._pScaleX;\r\n\t}\r\n\r\n\tpublic set scaleX(val:number)\r\n\t{\r\n\t\t//remove absolute width\r\n\t\tthis._width = null;\r\n\r\n\t\tif (this._pScaleX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleX = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleY():number\r\n\t{\r\n\t\treturn this._pScaleY;\r\n\t}\r\n\r\n\tpublic set scaleY(val:number)\r\n\t{\r\n\t\t//remove absolute height\r\n\t\tthis._height = null;\r\n\r\n\t\tif (this._pScaleY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleY = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\r\n\t * <code>y</code> and <code>z</code> property values, which are defined in\r\n\t * whole pixels. </p>\r\n\t */\r\n\tpublic get scaleZ():number\r\n\t{\r\n\t\treturn this._pScaleZ;\r\n\t}\r\n\r\n\tpublic set scaleZ(val:number)\r\n\t{\r\n\t\t//remove absolute depth\r\n\t\tthis._depth = null;\r\n\r\n\t\tif (this._pScaleZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleZ = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\tif (this._scenePositionDirty) {\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\r\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\r\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._pScaleX, this._pivot.y*this._pScaleY, this._pivot.z*this._pScaleZ));\r\n\t\t\t} else {\r\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\r\n\t\t\t}\r\n\r\n\t\t\tthis._scenePositionDirty = false;\r\n\t\t}\r\n\t\treturn this._scenePosition;\r\n\t}\r\n\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._pSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The scroll rectangle bounds of the display object. The display object is\r\n\t * cropped to the size defined by the rectangle, and it scrolls within the\r\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\r\n\t * of the <code>scrollRect</code> object.\r\n\t *\r\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\r\n\t * display object's coordinate space and are scaled just like the overall\r\n\t * display object. The corner bounds of the cropped window on the scrolling\r\n\t * display object are the origin of the display object(0,0) and the point\r\n\t * defined by the width and height of the rectangle. They are not centered\r\n\t * around the origin, but use the origin to define the upper-left corner of\r\n\t * the area. A scrolled display object always scrolls in whole pixel\r\n\t * increments. </p>\r\n\t *\r\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\r\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\r\n\t * an object up and down by setting the <code>y</code> property of the\r\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\r\n\t * 90° and you scroll it left and right, the display object actually scrolls\r\n\t * up and down.</p>\r\n\t */\r\n\tpublic scrollRect:Rectangle;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shaderPickingDetails():boolean\r\n\t{\r\n\t\treturn this._shaderPickingDetails;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._debugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (value == this._debugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugVisible = value;\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\r\n\t}\r\n\r\n\t/**\r\n\t * An object with properties pertaining to a display object's matrix, color\r\n\t * transform, and pixel bounds. The specific properties  -  matrix,\r\n\t * colorTransform, and three read-only properties\r\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\r\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\r\n\t * Transform class.\r\n\t *\r\n\t * <p>Each of the transform object's properties is itself an object. This\r\n\t * concept is important because the only way to set new values for the matrix\r\n\t * or colorTransform objects is to create a new object and copy that object\r\n\t * into the transform.matrix or transform.colorTransform property.</p>\r\n\t *\r\n\t * <p>For example, to increase the <code>tx</code> value of a display\r\n\t * object's matrix, you must make a copy of the entire matrix object, then\r\n\t * copy the new object into the matrix property of the transform object:</p>\r\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\r\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\r\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\r\n\t *\r\n\t * <p>You cannot directly set the <code>tx</code> property. The following\r\n\t * code has no effect on <code>myDisplayObject</code>: </p>\r\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\r\n\t * 10; </code></pre>\r\n\t *\r\n\t * <p>You can also copy an entire transform object and assign it to another\r\n\t * display object's transform property. For example, the following code\r\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\r\n\t * <code>myNewDisplayObj</code>:</p>\r\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\r\n\t *\r\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\r\n\t * same values for its matrix, color transform, and pixel bounds as the old\r\n\t * display object, <code>myOldDisplayObj</code>.</p>\r\n\t *\r\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\r\n\t * available, for color transforms.</p>\r\n\t */\r\n\tpublic get transform():Transform\r\n\t{\r\n\t\treturn this._transform;\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not the display object is visible. Display objects that are not\r\n\t * visible are disabled. For example, if <code>visible=false</code> for an\r\n\t * InteractiveObject instance, it cannot be clicked.\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn this._explicitVisibility;\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitVisibility == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitVisibility = value;\r\n\r\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the width of the display object, in pixels. The width is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\r\n\t * <code>width</code> to a different value.</p>\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this.getBox().width*this._pScaleX;\r\n\t}\r\n\r\n\tpublic set width(val:number)\r\n\t{\r\n\t\tif (this._width == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = val;\r\n\r\n\t\tthis._pScaleX = val/this.getBox().width;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\tpublic set x(val:number)\r\n\t{\r\n\t\tif (this._x == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\tpublic set y(val:number)\r\n\t{\r\n\t\tif (this._y == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._y = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\r\n\t * instance relative to the 3D parent container. The z property is used for\r\n\t * 3D coordinates, not screen or pixel coordinates.\r\n\t *\r\n\t * <p>When you set a <code>z</code> property for a display object to\r\n\t * something other than the default value of <code>0</code>, a corresponding\r\n\t * Matrix3D object is automatically created. for adjusting a display object's\r\n\t * position and orientation in three dimensions. When working with the\r\n\t * z-axis, the existing behavior of x and y properties changes from screen or\r\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\r\n\t *\r\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\r\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\r\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\r\n\t *\r\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\r\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._z;\r\n\t}\r\n\r\n\tpublic set z(val:number)\r\n\t{\r\n\t\tif (this._z == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._z = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get zOffset():number\r\n\t{\r\n\t\treturn this._zOffset;\r\n\t}\r\n\r\n\tpublic set zOffset(value:number)\r\n\t{\r\n\t\tthis._zOffset = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>DisplayObject</code> instance.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t// Cached vector of transformation components used when\r\n\t\t// recomposing the transform matrix in updateTransform()\r\n\r\n        this._onGlobalColorTransformChangedDelegate = (event:DisplayObjectEvent) => this.onGlobalColorTransformChanged(event);\r\n        this._onColorTransformChangedDelegate = (event:Event) => this.onColorTransformChanged(event);\r\n\t\tthis._transformComponents = new Array<Vector3D>(3);\r\n\r\n\t\tthis._transformComponents[0] = this._pos;\r\n\t\tthis._transformComponents[1] = this._rot;\r\n\t\tthis._transformComponents[2] = this._sca;\r\n\r\n\t\t//creation of associated transform object\r\n\t\tthis._transform = new Transform(this);\r\n\r\n\t\tthis._matrix3D.identity();\r\n\r\n\t\tthis._flipY.appendScale(1, -1, 1);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.addEventListener(type, listener);\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\r\n\t\t\t\tthis._listenToSceneChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n\t\t\t\tthis._listenToSceneTransformChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:DisplayObject = new DisplayObject();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = name;\r\n        clone._iMaskID = this._iMaskID;\r\n        clone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n\t\t// todo: implement for all subtypes\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tif (this.parent)\r\n\t\t\tthis.parent.removeChild(this);\r\n\r\n\t\twhile (this._pRenderables.length)\r\n\t\t\tthis._pRenderables[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic disposeAsset()\r\n\t{\r\n\t\tthis.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the area of the display object relative\r\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\r\n\t * Consider the following code, which shows how the rectangle returned can\r\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\r\n\t * you pass to the method:\r\n\t *\r\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to display coordinates, or display coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * <p>The <code>getBounds()</code> method is similar to the\r\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\r\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\r\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\r\n\t * an example, see the description of the <code>getRect()</code> method.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the boundary of the display object, based\r\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\r\n\t * parameter, excluding any strokes on shapes. The values that the\r\n\t * <code>getRect()</code> method returns are the same or smaller than those\r\n\t * returned by the <code>getBounds()</code> method.\r\n\t *\r\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to Scene coordinates, or Scene coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//TODO targetCoordinateSpace\r\n\t\tif (this._boxBoundsInvalid) {\r\n\t\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\t\tif (this._width != null) {\r\n\t\t\t\tthis._pScaleX = this._width/this._pBoxBounds.width;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this._height != null) {\r\n\t\t\t\tthis._pScaleY = this._height/this._pBoxBounds.height;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this._depth != null) {\r\n\t\t\t\tthis._pScaleZ = this._depth/this._pBoxBounds.depth;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\treturn this._pBoxBounds;\r\n\t}\r\n\r\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tif (this._sphereBoundsInvalid) {\r\n\t\t\tthis._pUpdateSphereBounds();\r\n\t\t}\r\n\r\n\r\n\t\treturn this._pSphereBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\r\n\t * to the display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\r\n\t * because they relate to the origin(0,0) of the main display area. Then\r\n\t * pass the Point instance as the parameter to the\r\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\r\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\r\n\t * object instead of the origin of the Scene.</p>\r\n\t *\r\n\t * @param point An object created with the Point class. The Point object\r\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the display object.\r\n\t */\r\n\tpublic globalToLocal(point:Point):Point\r\n\t{\r\n\t\treturn point; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\r\n\t * three-dimensional display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\r\n\t * y and z values that you assign to the Vector3D object represent global\r\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\r\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\r\n\t * <code>position</code> parameter.\r\n\t * The method returns three-dimensional coordinates as a Vector3D object\r\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\r\n\t * are relative to the origin of the three-dimensional display object.</p>\r\n\t *\r\n\t * @param point A Vector3D object representing global x, y and z coordinates in\r\n\t *              the scene.\r\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\r\n\t *         display object.\r\n\t */\r\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.inverseSceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the bounding box of the display object to see if it overlaps or\r\n\t * intersects with the bounding box of the <code>obj</code> display object.\r\n\t *\r\n\t * @param obj The display object to test against.\r\n\t * @return <code>true</code> if the bounding boxes of the display objects\r\n\t *         intersect; <code>false</code> if not.\r\n\t */\r\n\tpublic hitTestObject(obj:DisplayObject):boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false):boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @param    target        The vector defining the point to be looked at\r\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\r\n\t */\r\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\r\n\t{\r\n\r\n\t\tvar yAxis:Vector3D;\r\n\t\tvar zAxis:Vector3D;\r\n\t\tvar xAxis:Vector3D;\r\n\t\tvar raw:Array<number>;\r\n\r\n\t\tif (upAxis == null)\r\n\t\t\tupAxis = Vector3D.Y_AXIS;\r\n\t\telse\r\n\t\t\tupAxis.normalize();\r\n\r\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\r\n\t\tzAxis.normalize();\r\n\r\n\t\txAxis = upAxis.crossProduct(zAxis);\r\n\t\txAxis.normalize();\r\n\r\n\t\tif (xAxis.length < 0.05) {\r\n\t\t\txAxis.x = upAxis.y;\r\n\t\t\txAxis.y = upAxis.x;\r\n\t\t\txAxis.z = 0;\r\n\t\t\txAxis.normalize();\r\n\t\t}\r\n\r\n\t\tyAxis = zAxis.crossProduct(xAxis);\r\n\r\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\traw[0] = xAxis.x;\r\n\t\traw[1] = xAxis.y;\r\n\t\traw[2] = xAxis.z;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = yAxis.x;\r\n\t\traw[5] = yAxis.y;\r\n\t\traw[6] = yAxis.z;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = zAxis.x;\r\n\t\traw[9] = zAxis.y;\r\n\t\traw[10] = zAxis.z;\r\n\t\traw[11] = 0;\r\n\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.copyRawDataFrom(raw);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis._rotationX = vec.x;\r\n\t\tthis._rotationY = vec.y;\r\n\t\tthis._rotationZ = vec.z;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the display object's(local)\r\n\t * coordinates to the Scene(global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\r\n\t * coordinates from values that are relative to the origin(0,0) of a\r\n\t * specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Point instance that you created as the parameter to\r\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\r\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\r\n\t * Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param point The name or identifier of a point created with the Point\r\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the Scene.\r\n\t */\r\n\tpublic localToGlobal(point:Point):Point\r\n\t{\r\n\t\treturn new Point(); //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a three-dimensional point of the three-dimensional display\r\n\t * object's(local) coordinates to a three-dimensional point in the Scene\r\n\t * (global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\r\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\r\n\t * a specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\r\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\r\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\r\n\t * the origin of the Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param position A Vector3D object containing either a three-dimensional\r\n\t *                position or the coordinates of the three-dimensional\r\n\t *                display object.\r\n\t * @return A Vector3D object representing a three-dimensional position in\r\n\t *         the Scene.\r\n\t */\r\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object directly to a point in space\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\r\n\tpublic moveTo(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = dx;\r\n\t\tthis._y = dy;\r\n\t\tthis._z = dz;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the local point around which the object rotates.\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\tpublic movePivot(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._pivot == null)\r\n\t\t\tthis._pivot = new Vector3D();\r\n\r\n\t\tthis._pivot.x += dx;\r\n\t\tthis._pivot.y += dy;\r\n\t\tthis._pivot.z += dz;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local x-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic pitch(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\r\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\r\n\t\t\tvar scale:Vector3D = comps[2];\r\n\t\t\tcomps[0] = this.scenePosition;\r\n\t\t\tscale.x = this._pScaleX;\r\n\t\t\tscale.y = this._pScaleY;\r\n\t\t\tscale.z = this._pScaleZ;\r\n\t\t\tthis._orientationMatrix.recompose(comps);\r\n\r\n\t\t\t//add in case of pivot\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this._pScaleX, -this._pivot.y/this._pScaleY, -this._pivot.z/this._pScaleZ);\r\n\r\n\t\t\treturn this._orientationMatrix;\r\n\t\t}\r\n\r\n\t\treturn this.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local z-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic roll(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around an axis by a defined angle\r\n\t *\r\n\t * @param    axis        The vector defining the axis of rotation\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic rotate(axis:Vector3D, angle:number)\r\n\t{\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.prependRotation(angle, axis);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis._rotationX += vec.x;\r\n\t\tthis._rotationY += vec.y;\r\n\t\tthis._rotationZ += vec.z;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object directly to a euler angle\r\n\t *\r\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\r\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\r\n\t * @param    az        The angle in degrees of the rotation around the z axis.\r\n\t */\r\n\tpublic rotateTo(ax:number, ay:number, az:number)\r\n\t{\r\n\t\tthis._rotationX = ax*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationY = ay*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationZ = az*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.removeEventListener(type, listener);\r\n\r\n\t\tif (this.hasEventListener(type, listener))\r\n\t\t\treturn;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translate(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._x += x*len;\r\n\t\tthis._y += y*len;\r\n\t\tthis._z += z*len;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translateLocal(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\r\n\r\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\r\n\r\n\t\tthis._x = this._pos.x;\r\n\t\tthis._y = this._pos.y;\r\n\t\tthis._z = this._pos.z;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local y-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic yaw(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iController:ControllerBase;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iAssignedPartition():Partition\r\n\t{\r\n\t\treturn this._pImplicitPartition;\r\n\t}\r\n\r\n\t/**\r\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic get _iMatrix3D():Matrix3D\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\tthis._pUpdateMatrix3D();\r\n\r\n\t\treturn this._matrix3D;\r\n\t}\r\n\r\n\tpublic set _iMatrix3D(val:Matrix3D)\r\n\t{\r\n\r\n\t\t// TODO: From AS3 - Do we still need this in JS ?\r\n\t\t//ridiculous matrix error\r\n\t\t/*\r\n\t\tif (!val.rawData[0]) {\r\n\r\n\t\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\t\tval.copyRawDataTo(raw);\r\n\t\t\traw[0] = this._smallestNumber;\r\n\t\t\tval.copyRawDataFrom(raw);\r\n\t\t}\r\n\t\t//*/\r\n\t\tvar elements:Array<Vector3D> = val.decompose();\r\n\t\tvar vec:Vector3D;\r\n\r\n\t\tvec = elements[0];\r\n\r\n\t\tif (this._x != vec.x || this._y != vec.y || this._z != vec.z) {\r\n\t\t\tthis._x = vec.x;\r\n\t\t\tthis._y = vec.y;\r\n\t\t\tthis._z = vec.z;\r\n\r\n\t\t\tthis.invalidatePosition();\r\n\t\t}\r\n\r\n\t\tvec = elements[1];\r\n\r\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\r\n\t\t\tthis._rotationX = vec.x;\r\n\t\t\tthis._rotationY = vec.y;\r\n\t\t\tthis._rotationZ = vec.z;\r\n\r\n\t\t\tthis.invalidateRotation();\r\n\t\t}\r\n\r\n\t\tvec = elements[2];\r\n\r\n\t\tif (this._pScaleX != vec.x || this._pScaleY != vec.y || this._pScaleZ != vec.z) {\r\n\t\t\tthis._pScaleX = vec.x;\r\n\t\t\tthis._pScaleY = vec.y;\r\n\t\t\tthis._pScaleZ = vec.z;\r\n\r\n\t\t\tthis.invalidateScale();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\r\n\t{\r\n\t\tif (!this._pPickingCollisionVO)\r\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\r\n\r\n\t\treturn this._pPickingCollisionVO;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n        if (this._pParent) {\r\n            this._pParent.removeEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\r\n        }\r\n\r\n\t\tthis._pParent = value;\r\n\r\n        if (value) {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren);\r\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\r\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\r\n            value.addEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\r\n\t\t} else {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\r\n\t\t\tthis._pUpdateImplicitVisibility(true);\r\n\t\t\tthis._pUpdateImplicitPartition(null, null);\r\n\t\t}\r\n\r\n        this._invalidateGlobalColorTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._listenToSceneTransformChanged)\r\n\t\t\tthis.notifySceneTransformChange();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitMouseEnabled = this._explicitMouseEnabled && value;\r\n\r\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\r\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\r\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\r\n\t{\r\n\t\tvar sceneChanged:boolean = this._pScene != scene;\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//unregister partition from current scene\r\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//unregister entity from current partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\t// assign parent implicit partition if no explicit one is given\r\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\r\n\r\n\t\t//assign scene\r\n\t\tif (sceneChanged)\r\n\t\t\tthis._pScene = scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//register partition with scene\r\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//register entity with new partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\r\n\r\n\t\tif (sceneChanged) {\r\n\t\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\r\n\t\t\t\tthis.pInvalidateSceneTransform();\r\n\r\n\t\t\tif (this._listenToSceneChanged)\r\n\t\t\t\tthis.notifySceneChange();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateMatrix3D()\r\n\t{\r\n\r\n\t\tthis._pos.x = this._x;\r\n\t\tthis._pos.y = this._y;\r\n\t\tthis._pos.z = this._z;\r\n\r\n\t\tthis._rot.x = this._rotationX;\r\n\t\tthis._rot.y = this._rotationY;\r\n\t\tthis._rot.z = this._rotationZ;\r\n\r\n\t\tthis._sca.x = this._pScaleX;\r\n\t\tthis._sca.y = this._pScaleY;\r\n\t\tthis._sca.z = this._pScaleZ;\r\n\r\n\t\tthis._matrix3D.recompose(this._transformComponents);\r\n\r\n\t\tif (!this._pivotZero) {\r\n\t\t\tthis._pivotScale.x = this._pivot.x/this._pScaleX;\r\n\t\t\tthis._pivotScale.y = this._pivot.y/this._pScaleY;\r\n\t\t\tthis._pivotScale.z = this._pivot.z/this._pScaleZ;\r\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\r\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\r\n\t\t}\r\n\r\n\t\tthis._matrix3DDirty = false;\r\n\t\tthis._positionDirty = false;\r\n\t\tthis._rotationDirty = false;\r\n\t\tthis._scaleDirty = false;\r\n\t\tthis._pivotDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\r\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\r\n\t\t} else {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\r\n\t\t}\r\n\r\n\t\tthis._pSceneTransformDirty = false;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._pRenderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\r\n\r\n\t\tthis._pRenderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic _iInternalUpdate()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.update();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsVisible():boolean\r\n\t{\r\n\t\treturn this._pImplicitVisibility;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._pImplicitMouseEnabled;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iSetScene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyPositionChanged()\r\n\t{\r\n\t\tif (!this._positionChanged)\r\n\t\t\tthis._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._positionChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRotationChanged()\r\n\t{\r\n\t\tif (!this._rotationChanged)\r\n\t\t\tthis._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._rotationChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyScaleChanged()\r\n\t{\r\n\t\tif (!this._scaleChanged)\r\n\t\t\tthis._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._scaleChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifySceneChange()\r\n\t{\r\n\t\tif (!this._scenechanged)\r\n\t\t\tthis._scenechanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._scenechanged);\r\n}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifySceneTransformChange()\r\n\t{\r\n\t\tif (!this._sceneTransformChanged)\r\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._sceneTransformChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate invalidateMatrix3D():void\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._matrix3DDirty = true;\r\n\r\n\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].invalidatePartition();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePivot()\r\n\t{\r\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivotDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePosition()\r\n\t{\r\n\t\tif (this._positionDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToPositionChanged)\r\n\t\t\tthis.notifyPositionChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateRotation()\r\n\t{\r\n\t\tif (this._rotationDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToRotationChanged)\r\n\t\t\tthis.notifyRotationChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateScale()\r\n\t{\r\n\t\tif (this._scaleDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToScaleChanged)\r\n\t\t\tthis.notifyScaleChanged();\r\n\t}\r\n\r\n\r\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tthis._entityNodes.push(entityNode);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\r\n\r\n\t\tthis._entityNodes.splice(index, 1);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pInvalidateBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = true;\r\n\t\tthis._sphereBoundsInvalid = true;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\t}\r\n\t\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = false;\r\n\t\t\r\n\t\tif (this._pBoxBounds == null)\r\n\t\t\tthis._pBoxBounds = new Box();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tthis._sphereBoundsInvalid = false;\r\n\r\n\t\tif (this._pSphereBounds == null)\r\n\t\t\tthis._pSphereBounds = new Sphere();\r\n\t}\r\n\r\n    _updateGlobalColorTransform()\r\n    {\r\n        if (this._inheritColorTransform && this._pParent) {\r\n            this._globalColorTransform.copyFrom(this._pParent.globalColorTransform);\r\n            if (this._pColorTransform)\r\n                this._globalColorTransform.prepend(this._pColorTransform);\r\n        } else {\r\n            if (this._pColorTransform)\r\n                this._globalColorTransform.copyFrom(this._pColorTransform);\r\n            else\r\n                this._globalColorTransform.clear();\r\n        }\r\n\r\n        this._globalColorTransformDirty = false;\r\n    }\r\n\r\n    // this method is to bypass that TypeScript can't call super setters.\r\n    _pSetColorTransform(value:ColorTransform)\r\n    {\r\n        this._pColorTransform = value;\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n    _invalidateGlobalColorTransform()\r\n    {\r\n        this._globalColorTransformDirty = true;\r\n\r\n        if (!this._globalColorTransformChanged)\r\n            this._globalColorTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this);\r\n\r\n        this.dispatchEvent(this._globalColorTransformChanged);\r\n    }\r\n\r\n    private onGlobalColorTransformChanged(event:DisplayObjectEvent)\r\n    {\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n    private onColorTransformChanged(event:Event)\r\n    {\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n}\r\n\r\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nclass LightBase extends DisplayObjectContainer\r\n{\r\n\tpublic static assetType:string = \"[asset Light]\";\r\n\r\n\tprivate _color:number = 0xffffff;\r\n\tprivate _colorR:number = 1;\r\n\tprivate _colorG:number = 1;\r\n\tprivate _colorB:number = 1;\r\n\r\n\tprivate _ambientColor:number = 0xffffff;\r\n\tprivate _ambient:number = 0;\r\n\tpublic _iAmbientR:number = 0;\r\n\tpublic _iAmbientG:number = 0;\r\n\tpublic _iAmbientB:number = 0;\r\n\r\n\tprivate _specular:number = 1;\r\n\tpublic _iSpecularR:number = 1;\r\n\tpublic _iSpecularG:number = 1;\r\n\tpublic _iSpecularB:number = 1;\r\n\r\n\tprivate _diffuse:number = 1;\r\n\tpublic _iDiffuseR:number = 1;\r\n\tpublic _iDiffuseG:number = 1;\r\n\tpublic _iDiffuseB:number = 1;\r\n\r\n\tprivate _castsShadows:boolean = false;\r\n\r\n\tprivate _shadowMapper:ShadowMapperBase;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tif (this._castsShadows == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._castsShadows = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tif (this._shadowMapper == null)\r\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\r\n\r\n\t\t\tthis._shadowMapper.light = this;\r\n\t\t} else {\r\n\t\t\tthis._shadowMapper.dispose();\r\n\t\t\tthis._shadowMapper = null;\r\n\t\t}\r\n\t\t//*/\r\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():ShadowMapperBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get specular():number\r\n\t{\r\n\t\treturn this._specular;\r\n\t}\r\n\r\n\tpublic set specular(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._specular = value;\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get diffuse():number\r\n\t{\r\n\t\treturn this._diffuse;\r\n\t}\r\n\r\n\tpublic set diffuse(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._diffuse = value;\r\n\t\tthis.updateDiffuse();\r\n\t}\r\n\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tthis._color = value;\r\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\r\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\r\n\t\tthis._colorB = (this._color & 0xff)/0xff;\r\n\r\n\t\tthis.updateDiffuse();\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get ambient():number\r\n\t{\r\n\t\treturn this._ambient;\r\n\t}\r\n\r\n\tpublic set ambient(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tthis._ambient = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tpublic get ambientColor():number\r\n\t{\r\n\t\treturn this._ambientColor;\r\n\t}\r\n\r\n\tpublic set ambientColor(value:number)\r\n\t{\r\n\t\tthis._ambientColor = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tprivate updateAmbient()\r\n\t{\r\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightBase.assetType;\r\n\t}\r\n\r\n\tprivate updateSpecular()\r\n\t{\r\n\t\tthis._iSpecularR = this._colorR*this._specular;\r\n\t\tthis._iSpecularG = this._colorG*this._specular;\r\n\t\tthis._iSpecularB = this._colorB*this._specular;\r\n\t}\r\n\r\n\tprivate updateDiffuse()\r\n\t{\r\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\r\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\r\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\r\n\t}\r\n\r\n\tpublic get shadowMapper():ShadowMapperBase\r\n\t{\r\n\t\treturn this._shadowMapper;\r\n\t}\r\n\r\n\tpublic set shadowMapper(value:ShadowMapperBase)\r\n\t{\r\n\t\tthis._shadowMapper = value;\r\n\t\tthis._shadowMapper.light = this;\r\n\t}\r\n}\r\n\r\nexport = LightBase;",
    "import LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\r\nimport IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.LineSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.LineSubMesh\r\n */\r\nclass LineSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\r\n\r\n\tprivate _subGeometry:LineSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t */\r\n\tpublic get subGeometry():LineSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new LineSubMesh object\r\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\r\n\t * @param material An optional material used to render this LineSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The LoaderInfo class provides information about a loaded SWF file or a\r\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\r\n * any display object. The information provided includes load progress, the\r\n * URLs of the loader and loaded content, the number of bytes total for the\r\n * media, and the nominal height and width of the media.\r\n *\r\n * <p>You can access LoaderInfo objects in two ways: </p>\r\n *\r\n * <ul>\r\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\r\n * object -  The <code>contentLoaderInfo</code> property is always available\r\n * for any Loader object. For a Loader object that has not called the\r\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\r\n * sufficiently loaded, attempting to access many of the properties of the\r\n * <code>contentLoaderInfo</code> property throws an error.</li>\r\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\r\n * </ul>\r\n *\r\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\r\n * information about the content that the Loader object is loading, whereas\r\n * the <code>loaderInfo</code> property of a DisplayObject provides\r\n * information about the root SWF file for that display object. </p>\r\n *\r\n * <p>When you use a Loader object to load a display object(such as a SWF\r\n * file or a bitmap), the <code>loaderInfo</code> property of the display\r\n * object is the same as the <code>contentLoaderInfo</code> property of the\r\n * Loader object(<code>DisplayObject.loaderInfo =\r\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\r\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\r\n * the only way to access the LoaderInfo for the instance of the main class of\r\n * the SWF file.</p>\r\n *\r\n * <p>The following diagram shows the different uses of the LoaderInfo\r\n * object - for the instance of the main class of the SWF file, for the\r\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\r\n * <code>loaderInfo</code> property of a loaded object:</p>\r\n *\r\n * <p>When a loading operation is not complete, some properties of the\r\n * <code>contentLoaderInfo</code> property of a Loader object are not\r\n * available. You can obtain some properties, such as\r\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\r\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\r\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\r\n * can access all properties of the <code>loaderInfo</code> object and the\r\n * loaded image or SWF file.</p>\r\n *\r\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\r\n *\r\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\r\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\r\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\r\n * \r\n * @event complete   Dispatched when data has loaded successfully. In other\r\n *                   words, it is dispatched when all the content has been\r\n *                   downloaded and the loading has finished. The\r\n *                   <code>complete</code> event is always dispatched after\r\n *                   the <code>init</code> event. The <code>init</code> event\r\n *                   is dispatched when the object is ready to access, though\r\n *                   the content may still be downloading.\r\n * @event httpStatus Dispatched when a network request is made over HTTP and\r\n *                   an HTTP status code can be detected.\r\n * @event init       Dispatched when the properties and methods of a loaded\r\n *                   SWF file are accessible and ready for use. The content,\r\n *                   however, can still be downloading. A LoaderInfo object\r\n *                   dispatches the <code>init</code> event when the following\r\n *                   conditions exist:\r\n *                   <ul>\r\n *                     <li>All properties and methods associated with the\r\n *                   loaded object and those associated with the LoaderInfo\r\n *                   object are accessible.</li>\r\n *                     <li>The constructors for all child objects have\r\n *                   completed.</li>\r\n *                     <li>All ActionScript code in the first frame of the\r\n *                   loaded SWF's main timeline has been executed.</li>\r\n *                   </ul>\r\n *\r\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\r\n *                   when the first frame of a movie or animation is loaded.\r\n *                   The movie is then accessible and can be added to the\r\n *                   display list. The complete movie, however, can take\r\n *                   longer to download. The <code>Event.COMPLETE</code> is\r\n *                   only dispatched once the full movie is loaded.</p>\r\n *\r\n *                   <p>The <code>init</code> event always precedes the\r\n *                   <code>complete</code> event.</p>\r\n * @event ioError    Dispatched when an input or output error occurs that\r\n *                   causes a load operation to fail.\r\n * @event open       Dispatched when a load operation starts.\r\n * @event progress   Dispatched when data is received as the download\r\n *                   operation progresses.\r\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\r\n *                   object is removed by using the <code>unload()</code>\r\n *                   method of the Loader object, or when a second load is\r\n *                   performed by the same Loader object and the original\r\n *                   content is removed prior to the load beginning.\r\n */\r\nclass LoaderInfo extends EventDispatcher\r\n{\r\n\tprivate _bytes:ByteArray;\r\n\tprivate _bytesLoaded:number;\r\n\tprivate _bytesTotal:number;\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentType:string;\r\n\tprivate _loader:Loader;\r\n\tprivate _url:string;\r\n\t/**\r\n\t * The bytes associated with a LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get bytes():ByteArray\r\n\t{\r\n\t\treturn this._bytes;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of bytes that are loaded for the media. When this number equals\r\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\r\n\t */\r\n\tpublic get bytesLoaded():number /*int*/\r\n\t{\r\n\t\treturn this._bytesLoaded;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of compressed bytes in the entire media file.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\r\n\t * is 0. After the first <code>progress</code> event from the Loader object,\r\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\r\n\t * downloaded.</p>\r\n\t */\r\n\tpublic get bytesTotal():number /*int*/\r\n\t{\r\n\t\treturn this._bytesTotal;\r\n\t}\r\n\r\n\t/**\r\n\t * The loaded object associated with this LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\r\n\t * enough of the file has loaded in order to determine the type. The\r\n\t * following list gives the possible values:\r\n\t * <ul>\r\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\r\n\t *   <li><code>\"image/jpeg\"</code></li>\r\n\t *   <li><code>\"image/gif\"</code></li>\r\n\t *   <li><code>\"image/png\"</code></li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get contentType():string\r\n\t{\r\n\t\treturn this._contentType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Loader object associated with this LoaderInfo object. If this\r\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\r\n\t * of the main class of the SWF file, no Loader object is associated.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the Loader object because of security\r\n\t *                       restrictions. This can occur, for instance, when a\r\n\t *                       loaded SWF file attempts to access its\r\n\t *                       <code>loaderInfo.loader</code> property and it is\r\n\t *                       not granted security permission to access the\r\n\t *                       loading SWF file.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get loader():Loader\r\n\t{\r\n\t\treturn this._loader;\r\n\t}\r\n\r\n\t/**\r\n\t * The URL of the media being loaded.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, the value of the\r\n\t * <code>url</code> property might reflect only the initial URL specified in\r\n\t * the call to the <code>load()</code> method of the Loader object. After the\r\n\t * first <code>progress</code> event, the <code>url</code> property reflects\r\n\t * the media's final URL, after any redirects and relative URLs are\r\n\t * resolved.</p>\r\n\t *\r\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\r\n\t * see the <code>isURLInaccessible</code> property for details.</p>\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n}\r\n\r\nexport = LoaderInfo;",
    "class OrientationMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static DEFAULT:string = \"default\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\r\n}\r\n\r\nexport = OrientationMode;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass SubMeshBase extends AssetBase\r\n{\r\n\tpublic _pParentMesh:Mesh;\r\n\tpublic _uvTransform:UVTransform;\r\n\tpublic _colorTransform:ColorTransform;\r\n\r\n\tpublic _iIndex:number = 0;\r\n\r\n\tpublic _material:MaterialBase;\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._pParentMesh.animator;\r\n\t}\r\n\r\n\t/**\r\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material || this._pParentMesh.material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The scene transform object that transforms from model to world space.\r\n\t */\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\r\n\t */\r\n\tpublic get parentMesh():Mesh\r\n\t{\r\n\t\treturn this._pParentMesh;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform || this._pParentMesh.globalColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t * Creates a new SubMeshBase object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param camera\r\n\t * @returns {away.geom.Matrix3D}\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometry()\r\n\t{\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _iGetExplicitMaterial():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n}\r\n\r\nexport = SubMeshBase;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The Transform class provides access to color adjustment properties and two-\r\n * or three-dimensional transformation objects that can be applied to a\r\n * display object. During the transformation, the color or the orientation and\r\n * position of a display object is adjusted(offset) from the current values\r\n * or coordinates to new values or coordinates. The Transform class also\r\n * collects data about color and two-dimensional matrix transformations that\r\n * are applied to a display object and all of its parent objects. You can\r\n * access these combined transformations through the\r\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\r\n * properties.\r\n *\r\n * <p>To apply color transformations: create a ColorTransform object, set the\r\n * color adjustments using the object's methods and properties, and then\r\n * assign the <code>colorTransformation</code> property of the\r\n * <code>transform</code> property of the display object to the new\r\n * ColorTransformation object.</p>\r\n *\r\n * <p>To apply two-dimensional transformations: create a Matrix object, set\r\n * the matrix's two-dimensional transformation, and then assign the\r\n * <code>transform.matrix</code> property of the display object to the new\r\n * Matrix object.</p>\r\n *\r\n * <p>To apply three-dimensional transformations: start with a\r\n * three-dimensional display object. A three-dimensional display object has a\r\n * <code>z</code> property value other than zero. You do not need to create\r\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\r\n * is created automatically when you assign a <code>z</code> value to a\r\n * display object. You can access the display object's Matrix3D object through\r\n * the display object's <code>transform</code> property. Using the methods of\r\n * the Matrix3D class, you can add to or modify the existing transformation\r\n * settings. Also, you can create a custom Matrix3D object, set the custom\r\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\r\n * object to the display object using the <code>transform.matrix</code>\r\n * property.</p>\r\n *\r\n * <p>To modify a perspective projection of the stage or root object: use the\r\n * <code>transform.matrix</code> property of the root display object to gain\r\n * access to the PerspectiveProjection object. Or, apply different perspective\r\n * projection properties to a display object by setting the perspective\r\n * projection properties of the display object's parent. The child display\r\n * object inherits the new properties. Specifically, create a\r\n * PerspectiveProjection object and set its properties, then assign the\r\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\r\n * property of the parent display object's <code>transform</code> property.\r\n * The specified projection transformation then applies to all the display\r\n * object's three-dimensional children.</p>\r\n *\r\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\r\n * perspective transformations, do not assign both to a display object at the\r\n * same time. Use the PerspectiveProjection object for focal length and\r\n * projection center changes. For more control over the perspective\r\n * transformation, create a perspective projection Matrix3D object.</p>\r\n */\r\nclass Transform\r\n{\r\n\tprivate _displayObject:DisplayObject;\r\n\tprivate _concatenatedColorTransform:ColorTransform;\r\n\tprivate _concatenatedMatrix:Matrix;\r\n\tprivate _pixelBounds:Rectangle;\r\n\tpublic _position:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A ColorTransform object containing values that universally adjust the\r\n\t * colors in the display object.\r\n\t * \r\n\t * @throws TypeError The colorTransform is null when being set\r\n\t */\r\n\tpublic colorTransform:ColorTransform;\r\n\r\n\t/**\r\n\t * A ColorTransform object representing the combined color transformations\r\n\t * applied to the display object and all of its parent objects, back to the\r\n\t * root level. If different color transformations have been applied at\r\n\t * different levels, all of those transformations are concatenated into one\r\n\t * ColorTransform object for this property.\r\n\t */\r\n\tpublic get concatenatedColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._concatenatedColorTransform; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object representing the combined transformation matrixes of the\r\n\t * display object and all of its parent objects, back to the root level. If\r\n\t * different transformation matrixes have been applied at different levels,\r\n\t * all of those matrixes are concatenated into one matrix for this property.\r\n\t * Also, for resizeable SWF content running in the browser, this property\r\n\t * factors in the difference between stage coordinates and window coordinates\r\n\t * due to window resizing. Thus, the property converts local coordinates to\r\n\t * window coordinates, which may not be the same coordinate space as that of\r\n\t * the Stage.\r\n\t */\r\n\tpublic get concatenatedMatrix():Matrix\r\n\t{\r\n\t\treturn this._concatenatedMatrix; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get downVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get forwardVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get leftVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object containing values that alter the scaling, rotation, and\r\n\t * translation of the display object.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t * \r\n\t * @throws TypeError The matrix is null when being set\r\n\t */\r\n\tpublic matrix:Matrix;\r\n\r\n\t/**\r\n\t * Provides access to the Matrix3D object of a three-dimensional display\r\n\t * object. The Matrix3D object represents a transformation matrix that\r\n\t * determines the display object's position and orientation. A Matrix3D\r\n\t * object can also perform perspective projection.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic get matrix3D():Matrix3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D;\r\n\t}\r\n\r\n\tpublic set matrix3D(val:Matrix3D)\r\n\t{\r\n\t\tthis._displayObject._iMatrix3D = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\r\n\t * display object. The PerspectiveProjection object can be used to modify the\r\n\t * perspective transformation of the stage or to assign a perspective\r\n\t * transformation to all the three-dimensional children of a display object.\r\n\t *\r\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\r\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\r\n\t */\r\n\tpublic perspectiveProjection:PerspectiveProjection;\r\n\r\n\t/**\r\n\t * A Rectangle object that defines the bounding rectangle of the display\r\n\t * object on the stage.\r\n\t */\r\n\tpublic get pixelBounds():Rectangle\r\n\t{\r\n\t\treturn this._pixelBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D.position\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.x = value.x;\r\n\t\tthis._displayObject.y = value.y;\r\n\t\tthis._displayObject.z = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get rightVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get rotation():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\r\n\t}\r\n\r\n\tpublic set rotation(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.rotationX = value.x;\r\n\t\tthis._displayObject.rotationY = value.y;\r\n\t\tthis._displayObject.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get scale():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\r\n\t}\r\n\r\n\tpublic set scale(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.scaleX = value.x;\r\n\t\tthis._displayObject.scaleY = value.y;\r\n\t\tthis._displayObject.scaleZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get upVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis._displayObject = displayObject;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Matrix3D object, which can transform the space of a specified\r\n\t * display object in relation to the current display object's space. You can\r\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\r\n\t * three-dimensional display object relative to another three-dimensional\r\n\t * display object.\r\n\t * \r\n\t * @param relativeTo The display object relative to which the transformation\r\n\t *                   occurs. To get a Matrix3D object relative to the stage,\r\n\t *                   set the parameter to the <code>root</code> or\r\n\t *                   <code>stage</code> object. To get the world-relative\r\n\t *                   matrix of the display object, set the parameter to a\r\n\t *                   display object that has a perspective transformation\r\n\t *                   applied to it.\r\n\t * @return A Matrix3D object that can be used to transform the space from the\r\n\t *         <code>relativeTo</code> display object to the current display\r\n\t *         object space.\r\n\t */\r\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(); //TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveForward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveBackward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\r\n\tpublic moveLeft(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveRight(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveUp(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveDown(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\r\n\t}\r\n}\r\n\r\nexport = Transform;\r\n",
    "import TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.TriangleSubMesh\r\n */\r\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\r\n\r\n\tprivate _subGeometry:TriangleSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t */\r\n\tpublic get subGeometry():TriangleSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new TriangleSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\r\n\t * @param material An optional material used to render this TriangleSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\n\r\n\r\n/**\r\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\r\n * This is useful for most meshes.\r\n */\r\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\r\n{\r\n\tprivate _box:Box;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\tprivate _depth:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _halfExtentsX:number = 0;\r\n\tprivate _halfExtentsY:number = 0;\r\n\tprivate _halfExtentsZ:number = 0;\r\n\tprivate _prefab:PrimitiveCubePrefab;\r\n\r\n\t/**\r\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\r\n\t */\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._x = this._y = this._z = 0;\r\n\t\tthis._width = this._height = this._depth = 0;\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar a:number = plane.a;\r\n\t\t\tvar b:number = plane.b;\r\n\t\t\tvar c:number = plane.c;\r\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\r\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\r\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\r\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\r\n\r\n\t\t\tif (projDist < 0)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\r\n\r\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._box = this._pEntity.getBox();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\t\tvar hx:number = this._box.width/2;\r\n\t\tvar hy:number = this._box.height/2;\r\n\t\tvar hz:number = this._box.depth/2;\r\n\t\tvar cx:number = this._box.x + hx;\r\n\t\tvar cy:number = this._box.y + hy;\r\n\t\tvar cz:number = this._box.z + hz;\r\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\r\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\r\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.width = this._box.width;\r\n\t\t\tthis._prefab.height = this._box.height;\r\n\t\t\tthis._prefab.depth = this._box.depth;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\r\n\t\tthis._width = this._halfExtentsX*2;\r\n\t\tthis._height = this._halfExtentsY*2;\r\n\t\tthis._depth = this._halfExtentsZ*2;\r\n\r\n\t\tthis._x = this._centerX - this._halfExtentsX;\r\n\t\tthis._y = this._centerY - this._halfExtentsY;\r\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveCubePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\n\r\nclass BoundingSphere extends BoundingVolumeBase\r\n{\r\n\tprivate _sphere:Sphere;\r\n\tprivate _radius:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _prefab:PrimitiveSpherePrefab;\r\n\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._radius = 0;\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\r\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\r\n\t\t\tif (projDist < 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar rr:Number = (a + b + c)*this._radius;\r\n\r\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._sphere = this._pEntity.getSphere();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\r\n\t\tvar cx:number = this._sphere.x;\r\n\t\tvar cy:number = this._sphere.y;\r\n\t\tvar cz:number = this._sphere.z;\r\n\t\tvar r:number = this._sphere.radius;\r\n\r\n\t\tvar raw:Array<number> = new Array<number>(16);\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tvar rx:number = m11 + m12 + m13;\r\n\t\tvar ry:number = m21 + m22 + m23;\r\n\t\tvar rz:number = m31 + m32 + m33;\r\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.radius = r;\r\n\t\t\tthis._pBoundsPrimitive.x = cx;\r\n\t\t\tthis._pBoundsPrimitive.y = cy;\r\n\t\t\tthis._pBoundsPrimitive.z = cz;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveSpherePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nclass BoundingVolumeBase\r\n{\r\n\tpublic _pEntity:IEntity;\r\n\tpublic _pBoundsPrimitive:Mesh;\r\n\tpublic _pInvalidated:boolean = true;\r\n\r\n\tconstructor(entity)\r\n\t{\r\n\t\tthis._pEntity = entity;\r\n\t}\r\n\r\n\tpublic get boundsPrimitive():IEntity\r\n\t{\r\n\t\tif (this._pBoundsPrimitive == null) {\r\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\r\n\r\n\t\t\tthis._pUpdate();\r\n\t\t}\r\n\r\n\t\treturn this._pBoundsPrimitive;\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tthis._pInvalidated = false;\r\n\t}\r\n\r\n\tpublic invalidate()\r\n\t{\r\n\t\tthis._pInvalidated = true;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = BoundingVolumeBase;",
    "/**\r\n *\r\n */\r\nclass BoundsType\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SPHERE:string = \"sphere\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static NULL:string = \"null\";\r\n}\r\n\r\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\n\r\n\r\nclass NullBounds extends BoundingVolumeBase\r\n{\r\n\tprivate _alwaysIn:boolean;\r\n\r\n\tconstructor(alwaysIn:boolean = true)\r\n\t{\r\n\t\tsuper(null);\r\n\r\n\t\tthis._alwaysIn = alwaysIn;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\treturn new NullBounds(this._alwaysIn);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn this._alwaysIn;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\treturn PlaneClassification.INTERSECT;\r\n\t}\r\n}\r\n\r\nexport = NullBounds;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\n\r\n/**\r\n * The DisplayObjectContainer class is the base class for all objects that can\r\n * serve as display object containers on the display list. The display list\r\n * manages all objects displayed in the Flash runtimes. Use the\r\n * DisplayObjectContainer class to arrange the display objects in the display\r\n * list. Each DisplayObjectContainer object has its own child list for\r\n * organizing the z-order of the objects. The z-order is the front-to-back\r\n * order that determines which object is drawn in front, which is behind, and\r\n * so on.\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception.</p>\r\n * The DisplayObjectContainer class is an abstract base class for all objects\r\n * that can contain child objects. It cannot be instantiated directly; calling\r\n * the <code>new DisplayObjectContainer()</code> constructor throws an\r\n * <code>ArgumentError</code> exception.\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n */\r\nclass DisplayObjectContainer extends DisplayObject implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\r\n\r\n\tprivate _mouseChildren:boolean = true;\r\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\r\n\tpublic _iIsRoot:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn DisplayObjectContainer.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not the children of the object are mouse, or user\r\n\t * input device, enabled. If an object is enabled, a user can interact with\r\n\t * it by using a mouse or user input device. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p>This property is useful when you create a button with an instance of\r\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\r\n\t * Sprite instance to create a button, you can choose to decorate the button\r\n\t * by using the <code>addChild()</code> method to add additional Sprite\r\n\t * instances. This process can cause unexpected behavior with mouse events\r\n\t * because the Sprite instances you add as children can become the target\r\n\t * object of a mouse event when you expect the parent instance to be the\r\n\t * target object. To ensure that the parent instance serves as the target\r\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\r\n\t * property of the parent instance to <code>false</code>.</p>\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseChildren():boolean\r\n\t{\r\n\t\treturn this._mouseChildren;\r\n\t}\r\n\r\n\tpublic set mouseChildren(value:boolean)\r\n\t{\r\n\t\tif (this._mouseChildren == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mouseChildren = value;\r\n\r\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of children of this object.\r\n\t */\r\n\tpublic get numChildren():number /*int*/\r\n\t{\r\n\t\treturn this._children.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the children of the object are tab enabled. Enables or\r\n\t * disables tabbing for the children of the object. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\r\n\t * Flex. Instead, use the\r\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\r\n\t *\r\n\t * @throws IllegalOperationError Calling this property of the Stage object\r\n\t *                               throws an exception. The Stage object does\r\n\t *                               not implement this property.\r\n\t */\r\n\tpublic tabChildren:boolean;\r\n\r\n\t/**\r\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\r\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\r\n\t * constructors for the following subclasses of DisplayObjectContainer:\r\n\t * <ul>\r\n\t *   <li><code>new Loader()</code></li>\r\n\t *   <li><code>new Sprite()</code></li>\r\n\t *   <li><code>new MovieClip()</code></li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added to the front(top) of all other children in\r\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\r\n\t * position, use the <code>addChildAt()</code> method.)\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\r\n\t * problems with a published SWF file, including security problems and\r\n\t * conflicts with other loaded SWF files. There is only one Stage within a\r\n\t * Flash runtime instance, no matter how many SWF files you load into the\r\n\t * runtime. So, generally, objects should not be added to the Stage,\r\n\t * directly, at all. The only object the Stage should contain is the root\r\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\r\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\r\n\t * to the Stage.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\r\n\r\n\t\t//if child already has a parent, remove it.\r\n\t\tif (child._pParent)\r\n\t\t\tchild._pParent.removeChildInternal(child);\r\n\r\n\t\tchild.iSetParent(this);\r\n\r\n\t\tthis._children.push(child);\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added at the index position specified. An index of\r\n\t * 0 represents the back(bottom) of the display list for this\r\n\t * DisplayObjectContainer object.\r\n\t *\r\n\t * <p>For example, the following example shows three display objects, labeled\r\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @param index The index position to which the child is added. If you\r\n\t *              specify a currently occupied index position, the child object\r\n\t *              that exists at that position and all higher positions are\r\n\t *              moved up one position in the child list.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @throws RangeError    Throws if the index position does not exist in the\r\n\t *                       child list.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChildAt(child:DisplayObject, index:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn child;\r\n\t}\r\n\r\n\tpublic addChildren(...childarray:Array<DisplayObject>)\r\n\t{\r\n\t\tvar len:number = childarray.length;\r\n\t\tfor (var i:number = 0; i <  len; i++)\r\n\t\t\tthis.addChild(childarray[i]);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:DisplayObjectContainer = new DisplayObjectContainer();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.partition = this.partition;\r\n\t\tclone.name = name;\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addChild(this._children[i].clone());\r\n\r\n\t\t// todo: implement for all subtypes\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified display object is a child of the\r\n\t * DisplayObjectContainer instance or the instance itself. The search\r\n\t * includes the entire display list including this DisplayObjectContainer\r\n\t * instance. Grandchildren, great-grandchildren, and so on each return\r\n\t * <code>true</code>.\r\n\t *\r\n\t * @param child The child object to test.\r\n\t * @return <code>true</code> if the <code>child</code> object is a child of\r\n\t *         the DisplayObjectContainer or the container itself; otherwise\r\n\t *         <code>false</code>.\r\n\t */\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._children.indexOf(child) >= 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic disposeWithChildren()\r\n\t{\r\n\t\tthis.dispose();\r\n\r\n\t\twhile (this.numChildren > 0)\r\n\t\t\tthis.getChildAt(0).dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object instance that exists at the specified\r\n\t * index.\r\n\t *\r\n\t * @param index The index position of the child object.\r\n\t * @return The child display object at the specified index position.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic getChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children[index];\r\n\r\n\t\tif (child == null)\r\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object that exists with the specified name. If\r\n\t * more that one child display object has the specified name, the method\r\n\t * returns the first object in the child list.\r\n\t *\r\n\t * <p>The <code>getChildAt()</code> method is faster than the\r\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\r\n\t * accesses a child from a cached array, whereas the\r\n\t * <code>getChildByName()</code> method has to traverse a linked list to\r\n\t * access a child.</p>\r\n\t *\r\n\t * @param name The name of the child to return.\r\n\t * @return The child display object with the specified name.\r\n\t */\r\n\tpublic getChildByName(name:string):DisplayObject\r\n\t{\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tif (this._children[i].name == name)\r\n\t\t\t\treturn this._children[i];\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\r\n\t *\r\n\t * @param child The DisplayObject instance to identify.\r\n\t * @return The index position of the child display object to identify.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\r\n\t{\r\n\t\tvar childIndex:number = this._children.indexOf(child);\r\n\r\n\t\tif (childIndex == -1)\r\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\r\n\r\n\t\treturn childIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects that lie under the specified point and are\r\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\r\n\t * instance. Any child objects that are inaccessible for security reasons are\r\n\t * omitted from the returned array. To determine whether this security\r\n\t * restriction affects the returned array, call the\r\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\r\n\t *\r\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\r\n\t * Stage, which may differ from the coordinate space of the display object\r\n\t * container(unless the display object container is the Stage). You can use\r\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\r\n\t * methods to convert points between these coordinate spaces.</p>\r\n\t *\r\n\t * @param point The point under which to look.\r\n\t * @return An array of objects that lie under the specified point and are\r\n\t *         children(or grandchildren, and so on) of this\r\n\t *         DisplayObjectContainer instance.\r\n\t */\r\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\r\n\t{\r\n\t\treturn new Array<DisplayObject>();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified <code>child</code> DisplayObject instance from the\r\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\r\n\t * property of the removed child is set to <code>null</code> , and the object\r\n\t * is garbage collected if no other references to the child exist. The index\r\n\t * positions of any display objects above the child in the\r\n\t * DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to remove.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic removeChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\r\n\r\n\t\tthis.removeChildInternal(child);\r\n\r\n\t\tchild.iSetParent(null);\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child DisplayObject from the specified <code>index</code>\r\n\t * position in the child list of the DisplayObjectContainer. The\r\n\t * <code>parent</code> property of the removed child is set to\r\n\t * <code>null</code>, and the object is garbage collected if no other\r\n\t * references to the child exist. The index positions of any display objects\r\n\t * above the child in the DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param index The child index of the DisplayObject to remove.\r\n\t * @return The DisplayObject instance that was removed.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t * @throws SecurityError This child display object belongs to a sandbox to\r\n\t *                       which the calling object does not have access. You\r\n\t *                       can avoid this situation by having the child movie\r\n\t *                       call the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this.removeChild(this._children[index]);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all <code>child</code> DisplayObject instances from the child list\r\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\r\n\t * of the removed children is set to <code>null</code>, and the objects are\r\n\t * garbage collected if no other references to the children exist.\r\n\t *\r\n\t * The garbage collector reallocates unused memory space. When a variable or\r\n\t * object is no longer actively referenced or stored somewhere, the garbage\r\n\t * collector sweeps through and wipes out the memory space it used to occupy\r\n\t * if no other references to it exist.\r\n\t *\r\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\r\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\r\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\r\n\t *                       not exist in the child list.\r\n\t */\r\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\r\n\t{\r\n\t\tif (beginIndex < 0)\r\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\r\n\r\n\t\tif (endIndex > this._children.length)\r\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\r\n\r\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\r\n\t\t\tthis.removeChild(this._children[i]);\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the position of an existing child in the display object container.\r\n\t * This affects the layering of child objects. For example, the following\r\n\t * example shows three display objects, labeled a, b, and c, at index\r\n\t * positions 0, 1, and 2, respectively:\r\n\t *\r\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\r\n\t * index position that is already occupied, the only positions that change\r\n\t * are those in between the display object's former and new position. All\r\n\t * others will stay the same. If a child is moved to an index LOWER than its\r\n\t * current index, all children in between will INCREASE by 1 for their index\r\n\t * reference. If a child is moved to an index HIGHER than its current index,\r\n\t * all children in between will DECREASE by 1 for their index reference. For\r\n\t * example, if the display object container in the previous example is named\r\n\t * <code>container</code>, you can swap the position of the display objects\r\n\t * labeled a and b by calling the following code:</p>\r\n\t *\r\n\t * <p>This code results in the following arrangement of objects:</p>\r\n\t *\r\n\t * @param child The child DisplayObject instance for which you want to change\r\n\t *              the index number.\r\n\t * @param index The resulting index number for the <code>child</code> display\r\n\t *              object.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order (front-to-back order) of the two specified child\r\n\t * objects. All other child objects in the display object container remain in\r\n\t * the same index positions.\r\n\t *\r\n\t * @param child1 The first child object.\r\n\t * @param child2 The second child object.\r\n\t * @throws ArgumentError Throws if either child parameter is not a child of\r\n\t *                       this object.\r\n\t */\r\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\r\n\t * specified index positions in the child list. All other child objects in\r\n\t * the display object container remain in the same index positions.\r\n\t *\r\n\t * @param index1 The index position of the first child object.\r\n\t * @param index2 The index position of the second child object.\r\n\t * @throws RangeError If either index does not exist in the child list.\r\n\t */\r\n\tpublic swapChildrenAt(index1:number /*int*/, index2:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i].pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitVisibility(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\r\n\t{\r\n\t\tsuper._pUpdateImplicitPartition(value, scene);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t *\r\n\t * @param child\r\n\t */\r\n\tprivate removeChildInternal(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tthis._children.splice(this.getChildIndex(child), 1);\r\n\r\n\t\treturn child;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\r\nimport AssetLoader\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\r\nimport AssetLoaderContext\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\r\nimport AssetLoaderToken\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\r\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\n\r\n/**\r\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\r\n * files. Use the <code>load()</code> method to initiate loading. The loaded\r\n * display object is added as a child of the Loader object.\r\n *\r\n * <p>Use the URLLoader class to load text or binary data.</p>\r\n *\r\n * <p>The Loader class overrides the following methods that it inherits,\r\n * because a Loader object can only have one child display object - the\r\n * display object that it loads. Calling the following methods throws an\r\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\r\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\r\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\r\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\r\n * child array. </p>\r\n *\r\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\r\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\r\n * them.</p>\r\n *\r\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\r\n * security model: </p>\r\n *\r\n * <ul>\r\n *   <li>You can load content from any accessible source. </li>\r\n *   <li>Loading is not allowed if the calling SWF file is in a network\r\n * sandbox and the file to be loaded is local. </li>\r\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\r\n * cannot be cross-scripted by a SWF file in another security sandbox unless\r\n * that cross-scripting arrangement was approved through a call to the\r\n * <code>System.allowDomain()</code> or the\r\n * <code>System.allowInsecureDomain()</code> method in the loaded content\r\n * file.</li>\r\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\r\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\r\n * ActionScript 3.0). However, you can communicate between the two SWF files\r\n * by using the LocalConnection class.</li>\r\n *   <li>If the loaded content is an image, its data cannot be accessed by a\r\n * SWF file outside of the security sandbox, unless the domain of that SWF\r\n * file was included in a URL policy file at the origin domain of the\r\n * image.</li>\r\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\r\n * clips in the local-with-networking sandbox, and the reverse is also\r\n * prevented. </li>\r\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\r\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\r\n * Developer's Guide</i>. </li>\r\n * </ul>\r\n *\r\n * <p>However, in AIR, content in the <code>application</code> security\r\n * sandbox(content installed with the AIR application) are not restricted by\r\n * these security limitations.</p>\r\n *\r\n * <p>For more information related to security, see the Flash Player Developer\r\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\r\n * scope=\"external\">Security</a>.</p>\r\n *\r\n * <p>When loading a SWF file from an untrusted source(such as a domain other\r\n * than that of the Loader object's root SWF file), you may want to define a\r\n * mask for the Loader object, to prevent the loaded content(which is a child\r\n * of the Loader object) from drawing to portions of the Stage outside of that\r\n * mask, as shown in the following code:</p>\r\n */\r\nclass Loader extends DisplayObjectContainer\r\n{\r\n\t/**\r\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\r\n\t * individual asset type (meshes, materials et c.)\r\n\t *\r\n\t * @eventType AssetEvent\r\n\t */\r\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\r\n\r\n\r\n\t/**\r\n\t * Dispatched when a full resource (including dependencies) finishes loading.\r\n\t *\r\n\t * @eventType LoaderEvent\r\n\t */\r\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\r\n\r\n\tprivate _loadingSessions:Array<AssetLoader>;\r\n\tprivate _useAssetLib:boolean;\r\n\tprivate _assetLibId:string;\r\n\tprivate _onResourceCompleteDelegate:Function;\r\n\tprivate _onAssetCompleteDelegate:Function;\r\n\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentLoaderInfo:LoaderInfo;\r\n\r\n\t/**\r\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\r\n\t * GIF) file that was loaded by using the <code>load()</code> or\r\n\t * <code>loadBytes()</code> methods.\r\n\t *\r\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\r\n\t *                       security sandbox to which you do not have access.\r\n\t *                       For a loaded SWF file, you can avoid this situation\r\n\t *                       by having the file call the\r\n\t *                       <code>Security.allowDomain()</code> method or by\r\n\t *                       having the loading file specify a\r\n\t *                       <code>loaderContext</code> parameter with its\r\n\t *                       <code>securityDomain</code> property set to\r\n\t *                       <code>SecurityDomain.currentDomain</code> when you\r\n\t *                       call the <code>load()</code> or\r\n\t *                       <code>loadBytes()</code> method.\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\r\n\t * LoaderInfo objects are shared between the Loader object and the loaded\r\n\t * content object. The LoaderInfo object supplies loading progress\r\n\t * information and statistics about the loaded file.\r\n\t *\r\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\r\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\r\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\r\n\t * LoaderInfo object, even before the content is loaded, so that you can add\r\n\t * event listeners to the object prior to the load.</p>\r\n\t *\r\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\r\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\r\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\r\n\t */\r\n\tpublic get contentLoaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._contentLoaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\r\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\r\n\t * as a child of the Loader instance. You can then add the Loader object to\r\n\t * the display list(for instance, by using the <code>addChild()</code>\r\n\t * method of a DisplayObjectContainer instance). The asset appears on the\r\n\t * Stage as it loads.\r\n\t *\r\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\r\n\t * to a display object container on the display list. In this mode, the\r\n\t * Loader instance might be used to load a SWF file that contains additional\r\n\t * modules of an application. </p>\r\n\t *\r\n\t * <p>To detect when the SWF file is finished loading, you can use the events\r\n\t * of the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\r\n\t * point, the code in the module SWF file can be executed to initialize and\r\n\t * start the module. In the offlist mode, a Loader instance might also be\r\n\t * used to load a SWF file that contains components or media assets. Again,\r\n\t * you can use the LoaderInfo object event notifications to detect when the\r\n\t * components are finished loading. At that point, the application can start\r\n\t * using the components and media assets in the library of the SWF file by\r\n\t * instantiating the ActionScript 3.0 classes that represent those components\r\n\t * and assets.</p>\r\n\t *\r\n\t * <p>To determine the status of a Loader object, monitor the following\r\n\t * events that the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\r\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\r\n\t * dispatched if the file cannot be loaded or if an error occured during the\r\n\t * load process. </li>\r\n\t *   <li>The <code>progress</code> event fires continuously while the file is\r\n\t * being loaded.</li>\r\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\r\n\t * downloading, but before the loaded movie clip's methods and properties are\r\n\t * available. </li>\r\n\t *   <li>The <code>init</code> event is dispatched after the properties and\r\n\t * methods of the loaded SWF file are accessible, so you can begin\r\n\t * manipulating the loaded SWF file. This event is dispatched before the\r\n\t * <code>complete</code> handler. In streaming SWF files, the\r\n\t * <code>init</code> event can occur significantly earlier than the\r\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\r\n\t * handler.</li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._loadingSessions = new Array<AssetLoader>();\r\n\t\tthis._useAssetLib = useAssetLibrary;\r\n\t\tthis._assetLibId = assetLibraryId;\r\n\r\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels a <code>load()</code> method operation that is currently in\r\n\t * progress for the Loader instance.\r\n\t *\r\n\t */\r\n\tpublic close()\r\n\t{\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tlib.stopAllLoadingSessions();\r\n\t\t\tthis._loadingSessions = null;\r\n\t\t\treturn\r\n\t\t}\r\n\t\tvar i:number /*int*/;\r\n\t\tvar length:number /*int*/ = this._loadingSessions.length;\r\n\t\tfor (i = 0; i < length; i++) {\r\n\t\t\tthis.removeListeners(this._loadingSessions[i]);\r\n\t\t\tthis._loadingSessions[i].stop();\r\n\t\t\tthis._loadingSessions[i] = null;\r\n\t\t}\r\n\t\tthis._loadingSessions = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\r\n\t * object that is a child of this Loader object. If you load an animated GIF\r\n\t * file, only the first frame is displayed. As the Loader object can contain\r\n\t * only a single child, issuing a subsequent <code>load()</code> request\r\n\t * terminates the previous request, if still pending, and commences a new\r\n\t * load.\r\n\t *\r\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\r\n\t * loaded image is 8,191 pixels in width or height, and the total number of\r\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\r\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\r\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\r\n\t * and 2,880 pixels in width.</p>\r\n\t *\r\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\r\n\t * rotation, and scale properties of the parent display objects of the Loader\r\n\t * object. </p>\r\n\t *\r\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\r\n\t * with this method, or to cancel a load operation that is in progress.</p>\r\n\t *\r\n\t * <p>You can prevent a SWF file from using this method by setting the\r\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\r\n\t * <code>embed</code> tags in the HTML page that contains the SWF\r\n\t * content.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\r\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\r\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\r\n\t * body), the POST operation is subject to the security rules applied to\r\n\t * uploads:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The POST operation must be performed in response to a user-initiated\r\n\t * action, such as a mouse click or key press.</li>\r\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\r\n\t * same server as the SWF file that is sending the POST request), the target\r\n\t * server must provide a URL policy file that permits cross-domain\r\n\t * access.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\r\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\r\n\t * the POST operation is subject to the security rules applied to\r\n\t * uploads.</p>\r\n\t *\r\n\t * <p>For more information related to security, see the Flash Player\r\n\t * Developer Center Topic: <a\r\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t * scope=\"external\">Security</a>.</p>\r\n\t *\r\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\r\n\t *                file to be loaded. A relative path must be relative to the\r\n\t *                main SWF file. Absolute URLs must include the protocol\r\n\t *                reference, such as http:// or file:///. Filenames cannot\r\n\t *                include disk drive specifications.\r\n\t * @param context A LoaderContext object, which has properties that define\r\n\t *                the following:\r\n\t *                <ul>\r\n\t *                  <li>Whether or not to check for the existence of a policy\r\n\t *                file upon loading the object</li>\r\n\t *                  <li>The ApplicationDomain for the loaded object</li>\r\n\t *                  <li>The SecurityDomain for the loaded object</li>\r\n\t *                  <li>The ImageDecodingPolicy for the loaded image\r\n\t *                object</li>\r\n\t *                </ul>\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the loaded content remains in\r\n\t *                its own security domain.</p>\r\n\t *\r\n\t *                <p>For complete details, see the description of the\r\n\t *                properties in the <a\r\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\r\n\t *                class.</p>\r\n\t * @param ns      An optional namespace string under which the file is to be\r\n\t *                loaded, allowing the differentiation of two resources with\r\n\t *                identical assets.\r\n\t * @param parser  An optional parser object for translating the loaded data\r\n\t *                into a usable resource. If not provided, AssetLoader will\r\n\t *                attempt to auto-detect the file type.\r\n\t * @throws IOError               The <code>digest</code> property of the\r\n\t *                               <code>request</code> object is not\r\n\t *                               <code>null</code>. You should only set the\r\n\t *                               <code>digest</code> property of a URLRequest\r\n\t *                               object when calling the\r\n\t *                               <code>URLLoader.load()</code> method when\r\n\t *                               loading a SWZ file(an Adobe platform\r\n\t *                               component).\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         The value of\r\n\t *                               <code>LoaderContext.securityDomain</code>\r\n\t *                               must be either <code>null</code> or\r\n\t *                               <code>SecurityDomain.currentDomain</code>.\r\n\t *                               This reflects the fact that you can only\r\n\t *                               place the loaded media in its natural\r\n\t *                               security sandbox or your own(the latter\r\n\t *                               requires a policy file).\r\n\t * @throws SecurityError         Local SWF files may not set\r\n\t *                               LoaderContext.securityDomain to anything\r\n\t *                               other than <code>null</code>. It is not\r\n\t *                               permitted to import non-local media into a\r\n\t *                               local sandbox, or to place other local media\r\n\t *                               in anything other than its natural sandbox.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\r\n\t *                               <code>securityDomain</code> properties of\r\n\t *                               the <code>context</code> parameter are from\r\n\t *                               a disallowed domain.\r\n\t * @throws SecurityError         If a local SWF file is attempting to use the\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the file has completed loading. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a network request is made over HTTP and\r\n\t *                      Flash Player can detect the HTTP status code.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      SWF file are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when an input or output error occurs that\r\n\t *                      causes a load operation to fail.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the loading operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is received while load operation\r\n\t *                      progresses.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if a SWF file in the local-with-filesystem\r\n\t *                      sandbox attempts to load content in the\r\n\t *                      local-with-networking sandbox, or vice versa.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic load(request:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tvar token:AssetLoaderToken;\r\n\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\ttoken = lib.load(request, context, ns, parser);\r\n\t\t} else {\r\n\t\t\tvar loader:AssetLoader = new AssetLoader();\r\n\t\t\tthis._loadingSessions.push(loader);\r\n\t\t\ttoken = loader.load(request, context, ns, parser);\r\n\t\t}\r\n\r\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\ttoken._iLoader._iAddErrorHandler(this.onLoadError);\r\n\t\ttoken._iLoader._iAddParseErrorHandler(this.onParseError);\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads from binary data stored in a ByteArray object.\r\n\t *\r\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\r\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\r\n\t *                any of the file formats supported by the Loader class: SWF,\r\n\t *                GIF, JPEG, or PNG.\r\n\t * @param context A LoaderContext object. Only the\r\n\t *                <code>applicationDomain</code> property of the\r\n\t *                LoaderContext object applies; the\r\n\t *                <code>checkPolicyFile</code> and\r\n\t *                <code>securityDomain</code> properties of the LoaderContext\r\n\t *                object do not apply.\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the content is loaded into the\r\n\t *                current security domain -  a process referred to as \"import\r\n\t *                loading\" in Flash Player security documentation.\r\n\t *                Specifically, if the loading SWF file trusts the remote SWF\r\n\t *                by incorporating the remote SWF into its code, then the\r\n\t *                loading SWF can import it directly into its own security\r\n\t *                domain.</p>\r\n\t *\r\n\t *                <p>For more information related to security, see the Flash\r\n\t *                Player Developer Center Topic: <a\r\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                scope=\"external\">Security</a>.</p>\r\n\t * @throws ArgumentError         If the <code>length</code> property of the\r\n\t *                               ByteArray object is not greater than 0.\r\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter are non-null.\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         If the provided\r\n\t *                               <code>applicationDomain</code> property of\r\n\t *                               the <code>context</code> property is from a\r\n\t *                               disallowed domain.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation is complete. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      data are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the runtime cannot parse the data in the\r\n\t *                      byte array.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is transfered in memory.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tvar token:AssetLoaderToken;\r\n\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\ttoken = lib.loadData(data, context, ns, parser);\r\n\t\t} else {\r\n\t\t\tvar loader:AssetLoader = new AssetLoader();\r\n\t\t\tthis._loadingSessions.push(loader);\r\n\t\t\ttoken = loader.loadData(data, '', context, ns, parser);\r\n\t\t}\r\n\r\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\ttoken._iLoader._iAddErrorHandler(this.onLoadError);\r\n\t\ttoken._iLoader._iAddParseErrorHandler(this.onParseError);\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child of this Loader object that was loaded by using the\r\n\t * <code>load()</code> method. The <code>property</code> of the associated\r\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\r\n\t * necessarily destroyed because other objects might have references to it;\r\n\t * however, it is no longer a child of the Loader object.\r\n\t *\r\n\t * <p>As a best practice, before you unload a child SWF file, you should\r\n\t * explicitly close any streams in the child SWF file's objects, such as\r\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\r\n\t * audio in the child SWF file might continue to play, even though the child\r\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\r\n\t * event listener to the child that listens for the <code>unload</code>\r\n\t * event. When the parent calls <code>Loader.unload()</code>, the\r\n\t * <code>unload</code> event is dispatched to the child. The following code\r\n\t * shows how you might do this:</p>\r\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\r\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\r\n\t * myLocalConnection.close(); }\r\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\r\n\t * closeAllStreams);</pre>\r\n\t *\r\n\t */\r\n\tpublic unload()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a specific parser.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClass The parser class to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParser(parserClass:Object)\r\n\t{\r\n\t\tAssetLoader.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a list of parsers.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClasses A Vector of parser classes to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParsers(parserClasses:Array<Object>)\r\n\t{\r\n\t\tAssetLoader.enableParsers(parserClasses);\r\n\t}\r\n\r\n\r\n\tprivate removeListeners(dispatcher:EventDispatcher)\r\n\t{\r\n\t\tdispatcher.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tdispatcher.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when an error occurs during loading\r\n\t */\r\n\tprivate onLoadError(event:LoaderEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during parsing\r\n\t */\r\n\tprivate onParseError(event:ParserEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the resource and all of its dependencies was retrieved.\r\n\t */\r\n\tprivate onResourceComplete(event:LoaderEvent)\r\n\t{\r\n\t\tthis._content = <DisplayObject> event.content;\r\n\r\n\t\tif (this._content)\r\n\t\t\tthis.addChild(this._content);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n}\r\n\r\nexport = Loader;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\nclass Scene extends EventDispatcher\r\n{\r\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partition:Partition;\r\n\r\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\r\n\tpublic _iCollectionMark = 0;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._partition = new Partition(new NodeBase());\r\n\r\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\r\n\r\n\t\tthis._iSceneGraphRoot._iSetScene(this);\r\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\r\n\t\tthis._iSceneGraphRoot.partition = this._partition;\r\n\t}\r\n\r\n\tpublic traversePartitions(traverser:CollectorBase)\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = this._partitions.length;\r\n\r\n\t\ttraverser.scene = this;\r\n\r\n\t\tthis._iCollectionMark++;\r\n\r\n\t\twhile (i < len)\r\n\t\t\tthis._partitions[i++].traverse(traverser);\r\n\t}\r\n\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.partition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.partition = value;\r\n\r\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\r\n\t}\r\n\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.contains(child);\r\n\t}\r\n\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.addChild(child);\r\n\t}\r\n\r\n\tpublic removeChild(child:DisplayObject)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChild(child);\r\n\t}\r\n\r\n\tpublic removeChildAt(index:number)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\r\n\t}\r\n\r\n\r\n\tpublic getChildAt(index:number):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\r\n\t}\r\n\r\n\tpublic get numChildren():number\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.numChildren;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.push(partition);\r\n\r\n\t\t//ensure duplicates are not found in partitions array\r\n\t\tif (this._partitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.push(partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\r\n\r\n\t\t//if no more partition references found, remove from partitions array\r\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\r\n\t}\r\n}\r\n\r\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\r\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\r\n\r\nclass View\r\n{\r\n\r\n\t/*\r\n\t *************************************************************************************************************************\r\n\t * Development Notes\r\n\t *************************************************************************************************************************\r\n\t *\r\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\r\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\r\n\t *\r\n\t * Background\r\n\t *                  - this is currently not being included in our tests and is currently disabled\r\n\t *\r\n\t **************************************************************************************************************************\r\n\t */\r\n\r\n\t// Protected\r\n\tpublic _pScene:Scene;\r\n\tpublic _pCamera:Camera;\r\n\tpublic _pEntityCollector:CollectorBase;\r\n\tpublic _pRenderer:IRenderer;\r\n\r\n\t// Private\r\n\tprivate _aspectRatio:number;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\r\n\tprivate _time:number = 0;\r\n\tprivate _deltaTime:number = 0;\r\n\tprivate _backgroundColor:number = 0x000000;\r\n\tprivate _backgroundAlpha:number = 1;\r\n\r\n\tprivate _viewportDirty:boolean = true;\r\n\tprivate _scissorDirty:boolean = true;\r\n\r\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\r\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\r\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _mouseManager:MouseManager;\r\n\tprivate _mousePicker:IPicker = new RaycastPicker();\r\n\r\n\tprivate _htmlElement:HTMLDivElement;\r\n\tprivate _shareContext:boolean;\r\n\tpublic _pMouseX:number;\r\n\tpublic _pMouseY:number;\r\n\r\n\t/*\r\n\t ***********************************************************************\r\n\t * Disabled / Not yet implemented\r\n\t ***********************************************************************\r\n\t *\r\n\t * private _background:away.textures.Texture2DBase;\r\n\t *\r\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\r\n\t *\r\n\t */\r\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\r\n\t{\r\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\r\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\r\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\r\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\r\n\r\n\t\tthis.scene = scene || new Scene();\r\n\t\tthis.camera = camera || new Camera();\r\n\t\tthis.renderer = renderer;\r\n\r\n\t\t//make sure document border is zero\r\n\t\tdocument.body.style.margin = \"0px\";\r\n\r\n\t\tthis._htmlElement = document.createElement(\"div\");\r\n\t\tthis._htmlElement.style.position = \"absolute\";\r\n\r\n\t\tdocument.body.appendChild(this._htmlElement);\r\n\r\n\t\tthis._mouseManager = MouseManager.getInstance();\r\n\t\tthis._mouseManager.registerView(this);\r\n\r\n//\t\t\tif (this._shareContext)\r\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param e\r\n\t */\r\n\tprivate onScenePartitionChanged(event:SceneEvent)\r\n\t{\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\r\n\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._pMouseX;\r\n\t}\r\n\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._pMouseY;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get htmlElement():HTMLDivElement\r\n\t{\r\n\t\treturn this._htmlElement;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get renderer():IRenderer\r\n\t{\r\n\t\treturn this._pRenderer;\r\n\t}\r\n\r\n\tpublic set renderer(value:IRenderer)\r\n\t{\r\n\t\tif (this._pRenderer == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pRenderer) {\r\n\t\t\tthis._pRenderer.dispose();\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\t\t}\r\n\r\n\t\tthis._pRenderer = value;\r\n\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\r\n\t\t//reset entity collector\r\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\t//reset back buffer\r\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\r\n\t\tthis._pRenderer.width = this._width;\r\n\t\tthis._pRenderer.height = this._height;\r\n\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shareContext():boolean\r\n\t{\r\n\t\treturn this._shareContext;\r\n\t}\r\n\r\n\tpublic set shareContext(value:boolean)\r\n\t{\r\n\t\tif (this._shareContext == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._shareContext = value;\r\n\r\n\t\tif (this._pRenderer)\r\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backgroundColor():number\r\n\t{\r\n\t\treturn this._backgroundColor;\r\n\t}\r\n\r\n\tpublic set backgroundColor(value:number)\r\n\t{\r\n\t\tif (this._backgroundColor == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundColor = value;\r\n\r\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get backgroundAlpha():number\r\n\t{\r\n\t\treturn this._backgroundAlpha;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set backgroundAlpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._backgroundAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Camera3D}\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\t/**\r\n\t * Set camera that's used to render the scene for this viewport\r\n\t */\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tif (this._pCamera == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\r\n\t\tthis._pCamera = value;\r\n\r\n\t\tif (this._pEntityCollector)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\r\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {away.containers.Scene3D}\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the scene that's used to render for this viewport\r\n\t */\r\n\tpublic set scene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tthis._pScene = value;\r\n\r\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get deltaTime():number\r\n\t{\r\n\t\treturn this._deltaTime;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.width = value;\r\n\t\tthis._htmlElement.style.width = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.height = value;\r\n\t\tthis._htmlElement.style.height = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get mousePicker():IPicker\r\n\t{\r\n\t\treturn this._mousePicker;\r\n\t}\r\n\r\n\tpublic set mousePicker(value:IPicker)\r\n\t{\r\n\t\tif (this._mousePicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (value == null)\r\n\t\t\tthis._mousePicker = new RaycastPicker();\r\n\t\telse\r\n\t\t\tthis._mousePicker = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._pRenderer.x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.x == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.x == value;\r\n\t\tthis._htmlElement.style.left = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._pRenderer.y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.y == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.y == value;\r\n\t\tthis._htmlElement.style.top = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\r\n\t\t//TODO transfer visible property to associated context (if one exists)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get renderedFacesCount():number\r\n\t{\r\n\t\treturn 0; //TODO\r\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the view.\r\n\t */\r\n\tpublic render()\r\n\t{\r\n\t\tthis.pUpdateTime();\r\n\r\n\t\t//update view and size data\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\r\n\t\tif (this._scissorDirty) {\r\n\t\t\tthis._scissorDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\r\n\t\t}\r\n\r\n\t\tif (this._viewportDirty) {\r\n\t\t\tthis._viewportDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\r\n\t\t}\r\n\r\n\t\t// update picking\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\r\n\t\t\t//_touch3DManager.fireTouchEvents();\r\n\t\t}\r\n\t\t//_touch3DManager.updateCollider();\r\n\r\n\t\t//clear entity collector ready for collection\r\n\t\tthis._pEntityCollector.clear();\r\n\r\n\t\t// collect stuff to render\r\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\r\n\r\n\t\t//render the contents of the entity collector\r\n\t\tthis._pRenderer.render(this._pEntityCollector);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic pUpdateTime():void\r\n\t{\r\n\t\tvar time:number = getTimer();\r\n\r\n\t\tif (this._time == 0)\r\n\t\t\tthis._time = time;\r\n\r\n\t\tthis._deltaTime = time - this._time;\r\n\t\tthis._time = time;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pRenderer.dispose();\r\n\r\n\t\t// TODO: imeplement mouseManager / touch3DManager\r\n\t\tthis._mouseManager.unregisterView(this);\r\n\r\n\t\t//this._touch3DManager.disableTouchListeners(this);\r\n\t\t//this._touch3DManager.dispose();\r\n\r\n\t\tthis._mouseManager = null;\r\n\t\t//this._touch3DManager = null;\r\n\r\n\t\tthis._pRenderer = null;\r\n\t\tthis._pEntityCollector = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get iEntityCollector():CollectorBase\r\n\t{\r\n\t\treturn this._pEntityCollector;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onProjectionChanged(event:CameraEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onViewportUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onScissorUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t}\r\n\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\r\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\r\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\r\n\r\n\t}\r\n\r\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\r\n\t}\r\n\r\n\t/* TODO: implement Touch3DManager\r\n\t public get touchPicker():IPicker\r\n\t {\r\n\t return this._touch3DManager.touchPicker;\r\n\t }\r\n\t */\r\n\t/* TODO: implement Touch3DManager\r\n\t public set touchPicker( value:IPicker)\r\n\t {\r\n\t this._touch3DManager.touchPicker = value;\r\n\t }\r\n\t */\r\n\r\n\tpublic forceMouseMove:boolean;\r\n\r\n\t/*TODO: implement Background\r\n\t public get background():away.textures.Texture2DBase\r\n\t {\r\n\t return this._background;\r\n\t }\r\n\t */\r\n\t/*TODO: implement Background\r\n\t public set background( value:away.textures.Texture2DBase )\r\n\t {\r\n\t this._background = value;\r\n\t this._renderer.background = _background;\r\n\t }\r\n\t */\r\n\r\n\t// TODO: required dependency stageGL\r\n\tpublic updateCollider()\r\n\t{\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\t\t} else {\r\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass ControllerBase\r\n{\r\n\r\n\tpublic _pAutoUpdate:boolean = true;\r\n\tpublic _pTargetObject:DisplayObject;\r\n\r\n\tconstructor(targetObject:DisplayObject = null)\r\n\t{\r\n\t\tthis.targetObject = targetObject;\r\n\t}\r\n\r\n\tpublic pNotifyUpdate()\r\n\t{\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject.invalidatePartition();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get targetObject():DisplayObject\r\n\t{\r\n\t\treturn this._pTargetObject;\r\n\t}\r\n\r\n\tpublic set targetObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pTargetObject == val) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject._iController = null;\r\n\t\t}\r\n\t\tthis._pTargetObject = val;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject._iController = this;\r\n\t\t}\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get autoUpdate():boolean\r\n\t{\r\n\t\treturn this._pAutoUpdate;\r\n\t}\r\n\r\n\tpublic set autoUpdate(val:boolean)\r\n\t{\r\n\t\tif (this._pAutoUpdate == val) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pAutoUpdate = val;\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pTargetObject) {\r\n\t\t\t\tthis._pTargetObject._iController = this;\r\n\t\t\t} else {\r\n\t\t\t\tthis._pTargetObject._iController = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\n\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FirstPersonController extends ControllerBase\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic  _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _walkIncrement:number = 0;\r\n\tprivate _strafeIncrement:number = 0;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\r\n\tpublic fly:boolean = false;\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis.pNotifyUpdate();\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\r\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\r\n\r\n\t\tif (this._walkIncrement) {\r\n\t\t\tif (this.fly) {\r\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\r\n\t\t\t} else {\r\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t}\r\n\t\t\tthis._walkIncrement = 0;\r\n\t\t}\r\n\r\n\t\tif (this._strafeIncrement) {\r\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\r\n\t\t\tthis._strafeIncrement = 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic incrementWalk(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._walkIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic incrementStrafe(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._strafeIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n}\r\n\r\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\r\n\r\n/**\r\n * Controller used to follow behind an object on the XZ plane, with an optional\r\n * elevation (tiltAngle).\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FollowController extends HoverController\r\n{\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tinterpolate = interpolate; // unused: prevents warning\r\n\r\n\t\tif (!this.lookAtObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away.containers.View\r\n */\r\nclass HoverController extends LookAtController\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _distance:number = 1000;\r\n\tprivate _minPanAngle:number = -Infinity;\r\n\tprivate _maxPanAngle:number = Infinity;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _yFactor:number = 2;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\tprivate _upAxis:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\r\n\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Distance between the camera and the specified target. Defaults to 1000.\r\n\t */\r\n\tpublic get distance():number\r\n\t{\r\n\t\treturn this._distance;\r\n\t}\r\n\r\n\tpublic set distance(val:number)\r\n\t{\r\n\t\tif (this._distance == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._distance = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get minPanAngle():number\r\n\t{\r\n\t\treturn this._minPanAngle;\r\n\t}\r\n\r\n\tpublic set minPanAngle(val:number)\r\n\t{\r\n\t\tif (this._minPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get maxPanAngle():number\r\n\t{\r\n\t\treturn this._maxPanAngle;\r\n\t}\r\n\r\n\tpublic set maxPanAngle(val:number)\r\n\t{\r\n\t\tif (this._maxPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\r\n\t *\r\n\t * @see    #distance\r\n\t */\r\n\tpublic get yFactor():number\r\n\t{\r\n\t\treturn this._yFactor;\r\n\t}\r\n\r\n\tpublic set yFactor(val:number)\r\n\t{\r\n\t\tif (this._yFactor == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._yFactor = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.distance = distance;\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\r\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.yFactor = yFactor;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis.pNotifyUpdate();\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\r\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\r\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\n\r\nclass LookAtController extends ControllerBase\r\n{\r\n\tpublic _pLookAtPosition:Vector3D;\r\n\tpublic _pLookAtObject:DisplayObject;\r\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\r\n\r\n\t\tif (lookAtObject)\r\n\t\t\tthis.lookAtObject = lookAtObject;\r\n\t\telse\r\n\t\t\tthis.lookAtPosition = new Vector3D();\r\n\t}\r\n\r\n\tpublic get lookAtPosition():Vector3D\r\n\t{\r\n\t\treturn this._pLookAtPosition;\r\n\t}\r\n\r\n\tpublic set lookAtPosition(val:Vector3D)\r\n\t{\r\n\t\tif (this._pLookAtObject) {\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\t\t\tthis._pLookAtObject = null;\r\n\t\t}\r\n\r\n\t\tthis._pLookAtPosition = val;\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get lookAtObject():DisplayObject\r\n\t{\r\n\t\treturn this._pLookAtObject;\r\n\t}\r\n\r\n\tpublic set lookAtObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pLookAtPosition)\r\n\t\t\tthis._pLookAtPosition = null;\r\n\r\n\t\tif (this._pLookAtObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis._pLookAtObject = val;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\r\n\t{\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n}\r\n\r\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Uses spring physics to animate the target object towards a position that is\r\n * defined as the lookAtTarget object's position plus the vector defined by the\r\n * positionOffset property.\r\n */\r\nclass SpringController extends LookAtController\r\n{\r\n\tprivate _velocity:Vector3D;\r\n\tprivate _dv:Vector3D;\r\n\tprivate _stretch:Vector3D;\r\n\tprivate _force:Vector3D;\r\n\tprivate _acceleration:Vector3D;\r\n\tprivate _desiredPosition:Vector3D;\r\n\r\n\t/**\r\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic stiffness:number;\r\n\r\n\t/**\r\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic damping:number;\r\n\r\n\t/**\r\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\r\n\t */\r\n\tpublic mass:number;\r\n\r\n\t/**\r\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\r\n\t */\r\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.stiffness = stiffness;\r\n\t\tthis.damping = damping;\r\n\t\tthis.mass = mass;\r\n\r\n\t\tthis._velocity = new Vector3D();\r\n\t\tthis._dv = new Vector3D();\r\n\t\tthis._stretch = new Vector3D();\r\n\t\tthis._force = new Vector3D();\r\n\t\tthis._acceleration = new Vector3D();\r\n\t\tthis._desiredPosition = new Vector3D();\r\n\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tvar offs:Vector3D;\r\n\r\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\r\n\t\t\treturn;\r\n\r\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\r\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\r\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\r\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\r\n\r\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\r\n\t\tthis._stretch.scaleBy(-this.stiffness);\r\n\r\n\t\tthis._dv.copyFrom(this._velocity);\r\n\t\tthis._dv.scaleBy(this.damping);\r\n\r\n\t\tthis._force.x = this._stretch.x - this._dv.x;\r\n\t\tthis._force.y = this._stretch.y - this._dv.y;\r\n\t\tthis._force.z = this._stretch.z - this._dv.z;\r\n\r\n\t\tthis._acceleration.copyFrom(this._force);\r\n\t\tthis._acceleration.scaleBy(1/this.mass);\r\n\r\n\t\tthis._velocity.incrementBy(this._acceleration);\r\n\r\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\r\n\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = SpringController;",
    "/**\r\n * The CapsStyle class is an enumeration of constant values that specify the\r\n * caps style to use in drawing lines. The constants are provided for use as\r\n * values in the <code>caps</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\r\n * following three types of caps:\r\n */\r\nclass CapsStyle\r\n{\r\n\t/**\r\n\t * Used to specify round caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n\r\n\t/**\r\n\t * Used to specify no caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Used to specify square caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static SQUARE:string = \"square\";\r\n}\r\n\r\nexport = CapsStyle;",
    "/**\r\n * The GradientType class provides values for the <code>type</code> parameter\r\n * in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\r\n * class.\r\n */\r\nclass GradientType\r\n{\r\n\t/**\r\n\t * Value used to specify a linear gradient fill.\r\n\t */\r\n\tpublic static LINEAR:string = \"linear\";\r\n\r\n\t/**\r\n\t * Value used to specify a radial gradient fill.\r\n\t */\r\n\tpublic static RADIAL:string = \"radial\";\r\n}\r\n\r\nexport = GradientType;",
    "/**\r\n * The GraphicsPathWinding class provides values for the\r\n * <code>flash.display.GraphicsPath.winding</code> property and the\r\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\r\n * direction to draw a path. A clockwise path is positively wound, and a\r\n * counter-clockwise path is negatively wound:\r\n *\r\n * <p> When paths intersect or overlap, the winding direction determines the\r\n * rules for filling the areas created by the intersection or overlap:</p>\r\n */\r\nclass GraphicsPathWinding\r\n{\r\n\tpublic static EVEN_ODD:string = \"evenOdd\";\r\n\tpublic static NON_ZERO:string = \"nonZero\";\r\n}\r\n\r\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\n\r\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\r\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\r\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\r\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\r\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\r\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\r\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\r\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\r\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\r\n\r\n/**\r\n * The Graphics class contains a set of methods that you can use to create a\r\n * vector shape. Display objects that support drawing include Sprite and Shape\r\n * objects. Each of these classes includes a <code>graphics</code> property\r\n * that is a Graphics object. The following are among those helper functions\r\n * provided for ease of use: <code>drawRect()</code>,\r\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\r\n * <code>drawEllipse()</code>.\r\n *\r\n * <p>You cannot create a Graphics object directly from ActionScript code. If\r\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\r\n *\r\n * <p>The Graphics class is final; it cannot be subclassed.</p>\r\n */\r\nclass Graphics\r\n{\r\n\t/**\r\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\r\n\t * tiled to fill the area. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\r\n\t *               to be displayed.\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the bitmap. For\r\n\t *               example, you can use the following matrix to rotate a bitmap\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\r\n\t *               pattern. If <code>false</code>, the bitmap image does not\r\n\t *               repeat, and the edges of the bitmap are used for any fill\r\n\t *               area that extends beyond the bitmap.\r\n\t *\r\n\t *               <p>For example, consider the following bitmap(a 20 x\r\n\t *               20-pixel checkerboard pattern):</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\r\n\t *               in the following example), the bitmap fill repeats the\r\n\t *               bitmap:</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\r\n\t *               the bitmap fill uses the edge pixels for the fill area\r\n\t *               outside the bitmap:</p>\r\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\r\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\r\n\t *               <code>true</code>, upscaled bitmap images are rendered by\r\n\t *               using a bilinear algorithm. Rendering by using the nearest\r\n\t *               neighbor algorithm is faster.\r\n\t */\r\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\r\n\t * when drawing. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * @param color The color of the fill(0xRRGGBB).\r\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\r\n\t */\r\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\r\n\t * the object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use:\r\n\t *                            <code>GradientType.LINEAR</code> or\r\n\t *                            <code>GradientType.RADIAL</code>.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>beginGradientFill()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use, either:\r\n\t *                            <code>SpreadMethod.PAD</code>,\r\n\t *                            <code>SpreadMethod.REFLECT</code>, or\r\n\t *                            <code>SpreadMethod.REPEAT</code>.\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors:</p>\r\n\t *\r\n\t *                            <p>This example uses\r\n\t *                            <code>SpreadMethod.PAD</code> for the spread\r\n\t *                            method, and the gradient fill looks like the\r\n\t *                            following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use:\r\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\r\n\t *                            <code>InterpolationMethod.RGB</code>\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors(with the\r\n\t *                            <code>spreadMethod</code> parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows: </p>\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. 0 means that the\r\n\t *                            focal point is in the center. 1 means that the\r\n\t *                            focal point is at one border of the gradient\r\n\t *                            circle. -1 means that the focal point is at the\r\n\t *                            other border of the gradient circle. A value\r\n\t *                            less than -1 or greater than 1 is rounded to -1\r\n\t *                            or 1. For example, the following example shows\r\n\t *                            a <code>focalPointRatio</code> set to 0.75:\r\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\r\n\t */\r\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\r\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\r\n\t * object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\r\n\t * be colored cyan.</p>\r\n\t *\r\n\t * @param shader The shader to use for the fill. This Shader instance is not\r\n\t *               required to specify an image input. However, if an image\r\n\t *               input is specified in the shader, the input must be provided\r\n\t *               manually. To specify the input, set the <code>input</code>\r\n\t *               property of the corresponding ShaderInput property of the\r\n\t *               <code>Shader.data</code> property.\r\n\t *\r\n\t *               <p>When you pass a Shader instance as an argument the shader\r\n\t *               is copied internally. The drawing fill operation uses that\r\n\t *               internal copy, not a reference to the original shader. Any\r\n\t *               changes made to the shader, such as changing a parameter\r\n\t *               value, input, or bytecode, are not applied to the copied\r\n\t *               shader that's used for the fill.</p>\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the shader. For\r\n\t *               example, you can use the following matrix to rotate a shader\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t *\r\n\t *               <p>The coordinates received in the shader are based on the\r\n\t *               matrix that is specified for the <code>matrix</code>\r\n\t *               parameter. For a default(<code>null</code>) matrix, the\r\n\t *               coordinates in the shader are local pixel coordinates which\r\n\t *               can be used to sample an input.</p>\r\n\t * @throws ArgumentError When the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\r\n\t * @throws ArgumentError When the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\r\n\t *                       as an input and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput, or the specified values don't match\r\n\t *                       the amount of data in the input object. See the\r\n\t *                       <code>ShaderInput.input</code> property for more\r\n\t *                       information.\r\n\t */\r\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Clears the graphics that were drawn to this Graphics object, and resets\r\n\t * fill and line style settings.\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of drawing commands from the source Graphics object into the\r\n\t * calling Graphics object.\r\n\t *\r\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\r\n\t *                       commands.\r\n\t */\r\n\tpublic copyFrom(sourceGraphics:Graphics)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a cubic Bezier curve from the current drawing position to the\r\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\r\n\t * and two control points. The curve interpolates the two anchor points and\r\n\t * curves toward the two control points.\r\n\t *\r\n\t * The four points you use to draw a cubic Bezier curve with the\r\n\t * <code>cubicCurveTo()</code> method are as follows:\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The current drawing position is the first anchor point. </li>\r\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\r\n\t *   </li>\r\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\r\n\t *   specify the first control point.</li>\r\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\r\n\t *   specify the second control point.</li>\r\n\t * </ul>\r\n\t *\r\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\r\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\r\n\t *\r\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\r\n\t * the current drawing position to (<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\r\n\t * the current drawing position remains unchanged.\r\n\t *\r\n\t * If your movie clip contains content created with the Flash drawing tools,\r\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\r\n\t * underneath that content.\r\n\t *\r\n\t * @param controlX1 Specifies the horizontal position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY1 Specifies the vertical position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlX2 Specifies the horizontal position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY2 Specifies the vertical position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param anchorX   Specifies the horizontal position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t * @param anchorY   Specifies the vertical position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t */\r\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a curve using the current line style from the current drawing\r\n\t * position to(anchorX, anchorY) and using the control point that\r\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\r\n\t * drawing position is then set to(<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\r\n\t * content created with the Flash drawing tools, calls to the\r\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\r\n\t * call the <code>curveTo()</code> method before any calls to the\r\n\t * <code>moveTo()</code> method, the default of the current drawing position\r\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\r\n\t * current drawing position is not changed.\r\n\t *\r\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\r\n\t * consist of two anchor points and one control point. The curve interpolates\r\n\t * the two anchor points and curves toward the control point. </p>\r\n\t *\r\n\t * @param controlX A number that specifies the horizontal position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param controlY A number that specifies the vertical position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param anchorX  A number that specifies the horizontal position of the\r\n\t *                 next anchor point relative to the registration point of\r\n\t *                 the parent display object.\r\n\t * @param anchorY  A number that specifies the vertical position of the next\r\n\t *                 anchor point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t */\r\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a circle. Set the line style, fill, or both before you call the\r\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param y      The <i>y</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param radius The radius of the circle(in pixels).\r\n\t */\r\n\tpublic drawCircle(x:number, y:number, radius:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\r\n\t * <code>drawEllipse()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param width  The width of the ellipse(in pixels).\r\n\t * @param height The height of the ellipse(in pixels).\r\n\t */\r\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of IGraphicsData instances for drawing. This method\r\n\t * accepts a Vector containing objects including paths, fills, and strokes\r\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\r\n\t * instances can refer to a part of a shape, or a complex fully defined set\r\n\t * of data for rendering a complete shape.\r\n\t *\r\n\t * <p> Graphics paths can contain other graphics paths. If the\r\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\r\n\t * sub-paths are rendered during this operation. </p>\r\n\t *\r\n\t */\r\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\r\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\r\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\r\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\r\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\r\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\r\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\r\n\t * coordinate location. The drawing direction is a value from the\r\n\t * GraphicsPathWinding class.\r\n\t *\r\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\r\n\t * with a series of individual <code>lineTo()</code> and\r\n\t * <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\r\n\t * so rotation and scaling of shapes is more accurate and gives better\r\n\t * results. However, curves submitted using the <code>drawPath()</code>\r\n\t * method can have small sub-pixel alignment errors when used in conjunction\r\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\r\n\t * for filling and drawing lines. They are: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>When a fill is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\r\n\t * stroke rendering will still occur, consistent with the rules for strokes\r\n\t * below.)</li>\r\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\r\n\t * begin point) is implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t *   <li>When a stroke is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>The sub-paths can be composed of any number of points.</li>\r\n\t *   <li>The sub-path is never implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t * </ul>\r\n\t *\r\n\t * @param winding Specifies the winding rule using a value defined in the\r\n\t *                GraphicsPathWinding class.\r\n\t */\r\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\r\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      A number indicating the horizontal position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param y      A number indicating the vertical position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param width  The width of the rectangle(in pixels).\r\n\t * @param height The height of the rectangle(in pixels).\r\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\r\n\t *                       parameters are not a number\r\n\t *                      (<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRect(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\r\n\t * call the <code>drawRoundRect()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x             A number indicating the horizontal position relative\r\n\t *                      to the registration point of the parent display\r\n\t *                      object(in pixels).\r\n\t * @param y             A number indicating the vertical position relative to\r\n\t *                      the registration point of the parent display object\r\n\t *                     (in pixels).\r\n\t * @param width         The width of the round rectangle(in pixels).\r\n\t * @param height        The height of the round rectangle(in pixels).\r\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels).\r\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels). Optional; if no value is\r\n\t *                      specified, the default value matches that provided\r\n\t *                      for the <code>ellipseWidth</code> parameter.\r\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\r\n\t *                       <code>ellipseWidth</code> or\r\n\t *                       <code>ellipseHeight</code> parameters are not a\r\n\t *                       number(<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\r\n\t{\r\n\r\n\t}\r\n\r\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\r\n\r\n\t/**\r\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\r\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\r\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\r\n\t * set of(u,v) coordinates.\r\n\t *\r\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\r\n\t * that transform matrix is ignored. </p>\r\n\t *\r\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\r\n\t * bitmap fill is used. </p>\r\n\t *\r\n\t * @param culling Specifies whether to render triangles that face in a\r\n\t *                specified direction. This parameter prevents the rendering\r\n\t *                of triangles that cannot be seen in the current view. This\r\n\t *                parameter can be set to any value defined by the\r\n\t *                TriangleCulling class.\r\n\t */\r\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a fill to the lines and curves that were added since the last call\r\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\r\n\t * specified in the previous call to the <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method. If the current drawing position does not equal the previous\r\n\t * position specified in a <code>moveTo()</code> method and a fill is\r\n\t * defined, the path is closed with a line and then filled.\r\n\t *\r\n\t */\r\n\tpublic endFill()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param bitmap The bitmap to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\r\n\t * @param smooth Whether smoothing should be applied to the bitmap.\r\n\t */\r\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient to use for the stroke when drawing lines.\r\n\t *\r\n\t * <p>The gradient line style is used for subsequent calls to Graphics\r\n\t * methods such as the <code>lineTo()</code> methods or the\r\n\t * <code>drawCircle()</code> method. The line style remains in effect until\r\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\r\n\t * methods, or the <code>lineGradientStyle()</code> method again with\r\n\t * different parameters. </p>\r\n\t *\r\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\r\n\t * of drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use, either\r\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>lineGradientStyle()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use:\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use. For example,\r\n\t *                            consider a simple linear gradient between two\r\n\t *                            colors(with the <code>spreadMethod</code>\r\n\t *                            parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows:\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. The value 0 means\r\n\t *                            the focal point is in the center. The value 1\r\n\t *                            means the focal point is at one border of the\r\n\t *                            gradient circle. The value -1 means that the\r\n\t *                            focal point is at the other border of the\r\n\t *                            gradient circle. Values less than -1 or greater\r\n\t *                            than 1 are rounded to -1 or 1. The following\r\n\t *                            image shows a gradient with a\r\n\t *                            <code>focalPointRatio</code> of -0.75:\r\n\t */\r\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param shader The shader to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t */\r\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Specifies a line style used for subsequent calls to Graphics methods such\r\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineGradientStyle()</code> method, the\r\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\r\n\t * method with different parameters.\r\n\t *\r\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within the path.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\r\n\t * style back to <code>undefined</code>.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\r\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\r\n\t *\r\n\t * @param thickness    An integer that indicates the thickness of the line in\r\n\t *                     points; valid values are 0-255. If a number is not\r\n\t *                     specified, or if the parameter is undefined, a line is\r\n\t *                     not drawn. If a value of less than 0 is passed, the\r\n\t *                     default is 0. The value 0 indicates hairline\r\n\t *                     thickness; the maximum thickness is 255. If a value\r\n\t *                     greater than 255 is passed, the default is 255.\r\n\t * @param color        A hexadecimal color value of the line; for example,\r\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\r\n\t *                     value is not indicated, the default is 0x000000\r\n\t *                    (black). Optional.\r\n\t * @param alpha        A number that indicates the alpha value of the color\r\n\t *                     of the line; valid values are 0 to 1. If a value is\r\n\t *                     not indicated, the default is 1(solid). If the value\r\n\t *                     is less than 0, the default is 0. If the value is\r\n\t *                     greater than 1, the default is 1.\r\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\r\n\t *                     specifies whether to hint strokes to full pixels. This\r\n\t *                     affects both the position of anchors of a curve and\r\n\t *                     the line stroke size itself. With\r\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\r\n\t *                     line widths are adjusted to full pixel widths. With\r\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\r\n\t *                     disjoints can appear for curves and straight lines.\r\n\t *                     For example, the following illustrations show how\r\n\t *                     Flash Player or Adobe AIR renders two rounded\r\n\t *                     rectangles that are identical, except that the\r\n\t *                     <code>pixelHinting</code> parameter used in the\r\n\t *                     <code>lineStyle()</code> method is set differently\r\n\t *                    (the images are scaled by 200%, to emphasize the\r\n\t *                     difference):\r\n\t *\r\n\t *                     <p>If a value is not supplied, the line does not use\r\n\t *                     pixel hinting.</p>\r\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\r\n\t *                     LineScaleMode class that specifies which scale mode to\r\n\t *                     use:\r\n\t *                     <ul>\r\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\r\n\t *                     scale the line thickness when the object is scaled\r\n\t *                    (the default). </li>\r\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\r\n\t *                     the line thickness. </li>\r\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     vertically <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\r\n\t *                     left is scaled vertically only, and the circle on the\r\n\t *                     right is scaled both vertically and horizontally:\r\n\t *                     </li>\r\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     horizontally <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\r\n\t *                     the left is scaled horizontally only, and the circle\r\n\t *                     on the right is scaled both vertically and\r\n\t *                     horizontally:   </li>\r\n\t *                     </ul>\r\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\r\n\t *                     CapsStyle class that specifies the type of caps at the\r\n\t *                     end of lines. Valid values are:\r\n\t *                     <code>CapsStyle.NONE</code>,\r\n\t *                     <code>CapsStyle.ROUND</code>, and\r\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\r\n\t *                     indicated, Flash uses round caps.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>capsStyle</code> settings. For each\r\n\t *                     setting, the illustration shows a blue line with a\r\n\t *                     thickness of 30(for which the <code>capsStyle</code>\r\n\t *                     applies), and a superimposed black line with a\r\n\t *                     thickness of 1(for which no <code>capsStyle</code>\r\n\t *                     applies): </p>\r\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\r\n\t *                     JointStyle class that specifies the type of joint\r\n\t *                     appearance used at angles. Valid values are:\r\n\t *                     <code>JointStyle.BEVEL</code>,\r\n\t *                     <code>JointStyle.MITER</code>, and\r\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\r\n\t *                     indicated, Flash uses round joints.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>joints</code> settings. For each\r\n\t *                     setting, the illustration shows an angled blue line\r\n\t *                     with a thickness of 30(for which the\r\n\t *                     <code>jointStyle</code> applies), and a superimposed\r\n\t *                     angled black line with a thickness of 1(for which no\r\n\t *                     <code>jointStyle</code> applies): </p>\r\n\t *\r\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\r\n\t *                     <code>JointStyle.MITER</code>, you can use the\r\n\t *                     <code>miterLimit</code> parameter to limit the length\r\n\t *                     of the miter.</p>\r\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\r\n\t *                     indicates the limit at which a miter is cut off. Valid\r\n\t *                     values range from 1 to 255(and values outside that\r\n\t *                     range are rounded to 1 or 255). This value is only\r\n\t *                     used if the <code>jointStyle</code> is set to\r\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\r\n\t *                     value represents the length that a miter can extend\r\n\t *                     beyond the point at which the lines meet to form a\r\n\t *                     joint. The value expresses a factor of the line\r\n\t *                     <code>thickness</code>. For example, with a\r\n\t *                     <code>miterLimit</code> factor of 2.5 and a\r\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\r\n\t *                     off at 25 pixels.\r\n\t *\r\n\t *                     <p>For example, consider the following angled lines,\r\n\t *                     each drawn with a <code>thickness</code> of 20, but\r\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\r\n\t *                     Superimposed are black reference lines showing the\r\n\t *                     meeting points of the joints:</p>\r\n\t *\r\n\t *                     <p>Notice that a given <code>miterLimit</code> value\r\n\t *                     has a specific maximum angle for which the miter is\r\n\t *                     cut off. The following table lists some examples:</p>\r\n\t */\r\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a line using the current line style from the current drawing\r\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\r\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\r\n\t * which you are drawing contains content that was created with the Flash\r\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\r\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\r\n\t * to the <code>moveTo()</code> method, the default position for the current\r\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\r\n\t * method fails and the current drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic lineTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\r\n\t * any of the parameters are missing, this method fails and the current\r\n\t * drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic moveTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = Graphics;",
    "/**\r\n * The InterpolationMethod class provides values for the\r\n * <code>interpolationMethod</code> parameter in the\r\n * <code>Graphics.beginGradientFill()</code> and\r\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\r\n * determines the RGB space to use when rendering the gradient.\r\n */\r\nclass InterpolationMethod\r\n{\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static RGB:string = \"rgb\";\r\n}\r\n\r\nexport = InterpolationMethod;",
    "/**\r\n * The JointStyle class is an enumeration of constant values that specify the\r\n * joint style to use in drawing lines. These constants are provided for use\r\n * as values in the <code>joints</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\r\n * three types of joints: miter, round, and bevel, as the following example\r\n * shows:\r\n */\r\nclass JointStyle\r\n{\r\n\t/**\r\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static BEVEL:string = \"bevel\";\r\n\r\n\t/**\r\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static MITER:string = \"miter\";\r\n\r\n\t/**\r\n\t * Specifies round joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n}\r\n\r\nexport = JointStyle;",
    "/**\r\n * The LineScaleMode class provides values for the <code>scaleMode</code>\r\n * parameter in the <code>Graphics.lineStyle()</code> method.\r\n */\r\nclass LineScaleMode\r\n{\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\r\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\r\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\r\n\t * scaled only vertically, and the circle on the right is scaled both\r\n\t * vertically and horizontally.\r\n\t */\r\n\tpublic static HORIZONTAL:string = \"horizontal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\r\n\t * when the object is scaled(the default).\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> horizontally. For example, consider the following circles,\r\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\r\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\r\n\t * left is scaled only horizontally, and the circle on the right is scaled\r\n\t * both vertically and horizontally.\r\n\t */\r\n\tpublic static VERTICAL:string = \"vertical\";\r\n}\r\n\r\nexport = LineScaleMode;",
    "/**\r\n * The PixelSnapping class is an enumeration of constant values for setting\r\n * the pixel snapping options by using the <code>pixelSnapping</code> property\r\n * of a Bitmap object.\r\n */\r\nclass PixelSnapping\r\n{\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is always snapped to the\r\n\t * nearest pixel, independent of any transformation.\r\n\t */\r\n\tpublic static ALWAYS:string = \"always\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\r\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\r\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\r\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\r\n\t * setting allows the image to be drawn as fast as possible by using the\r\n\t * vector renderer.\r\n\t */\r\n\tpublic static AUTO:string = \"auto\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that no pixel snapping occurs.\r\n\t */\r\n\tpublic static NEVER:string = \"never\";\r\n}\r\n\r\nexport = PixelSnapping;",
    "/**\r\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\r\n * parameter in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the Graphics class.\r\n *\r\n * <p>The following example shows the same gradient fill using various spread\r\n * methods:</p>\r\n */\r\nclass SpreadMethod\r\n{\r\n\t/**\r\n\t * Specifies that the gradient use the <i>pad</i> spread method.\r\n\t */\r\n\tpublic static PAD:string = \"pad\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\r\n\t */\r\n\tpublic static REFLECT:string = \"reflect\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\r\n\t */\r\n\tpublic static REPEAT:string = \"repeat\";\r\n}\r\n\r\nexport = SpreadMethod;",
    "/**\r\n * Defines codes for culling algorithms that determine which triangles not to\r\n * render when drawing triangle paths.\r\n *\r\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\r\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\r\n * that is perpendicular to the surface of the triangle. </p>\r\n *\r\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\r\n * has a positive normal value. That is, its normal points in a positive\r\n * z-axis direction, away from the current view point. When the\r\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\r\n * positive normals are not rendered. Another term for this is backface\r\n * culling. </p>\r\n *\r\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\r\n * a negative normal value. That is, its normal points in a negative z-axis\r\n * direction, toward the current view point. When the\r\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\r\n * negative normals will not be rendered. </p>\r\n */\r\nclass TriangleCulling\r\n{\r\n\t/**\r\n\t * Specifies culling of all triangles facing toward the current view point.\r\n\t */\r\n\tpublic static NEGATIVE:string = \"negative\";\r\n\r\n\t/**\r\n\t * Specifies no culling. All triangles in the path are rendered.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies culling of all triangles facing away from the current view\r\n\t * point. This is also known as backface culling.\r\n\t */\r\n\tpublic static POSITIVE:string = \"positive\";\r\n}\r\n\r\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * The Billboard class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Billboard()</code> constructor.\r\n *\r\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\r\n * object that contains a reference to a Image2D object. After you create a\r\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Billboard object can share its Image2D reference among several Billboard\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Billboard objects that reference the same Image2D object,\r\n * multiple display objects can use the same complex Image2D object without\r\n * incurring the memory overhead of a Image2D object for each display\r\n * object instance.</p>\r\n *\r\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\r\n * of two ways: by using the default hardware renderer with a single hardware surface,\r\n * or by using the slower software renderer when 3D acceleration is not available.</p>\r\n *\r\n * <p>If you would prefer to perform a batch rendering command, rather than using a\r\n * single surface for each Billboard object, you can also draw to the screen using the\r\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\r\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\r\n * objects.</code></p>\r\n *\r\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\r\n * class, so it cannot dispatch mouse events. However, you can use the\r\n * <code>addEventListener()</code> method of the display object container that\r\n * contains the Billboard object.</p>\r\n */\r\n\r\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Billboard]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _billboardWidth:number;\r\n\tprivate _billboardHeight:number;\r\n\tprivate _billboardRect:Rectangle;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _parentColorTransform:ColorTransform;\r\n\r\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\r\n\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Billboard.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Image2D object being referenced.\r\n\t */\r\n\tpublic image2D:Image2D; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardRect():Rectangle\r\n\t{\r\n\t\treturn this._billboardRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardHeight():number\r\n\t{\r\n\t\treturn this._billboardHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardWidth():number\r\n\t{\r\n\t\treturn this._billboardWidth;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iRemoveOwner(this);\r\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iAddOwner(this);\r\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\r\n\t * This value is ignored in the native and HTML5 targets.\r\n\t * The PixelSnapping class includes possible values:\r\n\t * <ul>\r\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\r\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\r\n\t * the nearest pixel, independent of transformation.</li>\r\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\r\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\r\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\r\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\r\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\r\n\t * as possible using the internal vector renderer.</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic pixelSnapping:string; //TODO\r\n\r\n\t/**\r\n\t * Controls whether or not the bitmap is smoothed when scaled. If\r\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\r\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\r\n\t */\r\n\tpublic smoothing:boolean; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\t// outputs the concaneted color-transform\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// set this on the inheritet colorTransform\r\n\t\tthis.transform.colorTransform = value;\r\n\t\t// new calculate the concaneted transform\r\n\t\tthis._applyColorTransform();\r\n\r\n\t}\r\n\r\n\tpublic get parentColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._parentColorTransform;\r\n\t}\r\n\r\n\tpublic set parentColorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\r\n\t\tthis._parentColorTransform = value;\r\n\t\tthis._applyColorTransform();\r\n\t}\r\n\r\n\tprivate _applyColorTransform()\r\n\t{\r\n\t\tthis._colorTransform=new ColorTransform();\r\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\r\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this.transform.colorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this._parentColorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t\tthis._billboardHeight = material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\r\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Billboard = new Billboard(this.material);\r\n\t\treturn clone;\r\n\t}\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this._pPickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate onSizeChanged(event:MaterialEvent)\r\n\t{\r\n\t\tthis._billboardWidth = this._material.width;\r\n\t\tthis._billboardHeight = this._material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\n\r\n\r\nclass Camera extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Camera]\";\r\n\r\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\r\n\tprivate _viewProjectionDirty:Boolean = true;\r\n\tprivate _projection:IProjection;\r\n\tprivate _frustumPlanes:Array<Plane3D>;\r\n\tprivate _frustumPlanesDirty:Boolean = true;\r\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\r\n\r\n\tconstructor(projection:IProjection = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\r\n\r\n\t\tthis._projection = projection || new PerspectiveProjection();\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\r\n\t\tthis._frustumPlanes = [];\r\n\r\n\t\tfor (var i:number = 0; i < 6; ++i)\r\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\r\n\r\n\t\tthis.z = -1000;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Camera.assetType;\r\n\t}\r\n\r\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\r\n\t{\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic get frustumPlanes():Array<Plane3D>\r\n\t{\r\n\t\tif (this._frustumPlanesDirty)\r\n\t\t\tthis.updateFrustum();\r\n\r\n\t\treturn this._frustumPlanes;\r\n\t}\r\n\r\n\tprivate updateFrustum()\r\n\t{\r\n\t\tvar a:number, b:number, c:number;\r\n\t\t//var d : Number;\r\n\t\tvar c11:number, c12:number, c13:number, c14:number;\r\n\t\tvar c21:number, c22:number, c23:number, c24:number;\r\n\t\tvar c31:number, c32:number, c33:number, c34:number;\r\n\t\tvar c41:number, c42:number, c43:number, c44:number;\r\n\t\tvar p:Plane3D;\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\r\n\t\tvar invLen:number;\r\n\t\tthis.viewProjection.copyRawDataTo(raw);\r\n\r\n\t\tc11 = raw[0];\r\n\t\tc12 = raw[4];\r\n\t\tc13 = raw[8];\r\n\t\tc14 = raw[12];\r\n\t\tc21 = raw[1];\r\n\t\tc22 = raw[5];\r\n\t\tc23 = raw[9];\r\n\t\tc24 = raw[13];\r\n\t\tc31 = raw[2];\r\n\t\tc32 = raw[6];\r\n\t\tc33 = raw[10];\r\n\t\tc34 = raw[14];\r\n\t\tc41 = raw[3];\r\n\t\tc42 = raw[7];\r\n\t\tc43 = raw[11];\r\n\t\tc44 = raw[15];\r\n\r\n\t\t// left plane\r\n\t\tp = this._frustumPlanes[0];\r\n\t\ta = c41 + c11;\r\n\t\tb = c42 + c12;\r\n\t\tc = c43 + c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c14)*invLen;\r\n\r\n\t\t// right plane\r\n\t\tp = this._frustumPlanes[1];\r\n\t\ta = c41 - c11;\r\n\t\tb = c42 - c12;\r\n\t\tc = c43 - c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c14 - c44)*invLen;\r\n\r\n\t\t// bottom\r\n\t\tp = this._frustumPlanes[2];\r\n\t\ta = c41 + c21;\r\n\t\tb = c42 + c22;\r\n\t\tc = c43 + c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c24)*invLen;\r\n\r\n\t\t// top\r\n\t\tp = this._frustumPlanes[3];\r\n\t\ta = c41 - c21;\r\n\t\tb = c42 - c22;\r\n\t\tc = c43 - c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c24 - c44)*invLen;\r\n\r\n\t\t// near\r\n\t\tp = this._frustumPlanes[4];\r\n\t\ta = c31;\r\n\t\tb = c32;\r\n\t\tc = c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -c34*invLen;\r\n\r\n\t\t// far\r\n\t\tp = this._frustumPlanes[5];\r\n\t\ta = c41 - c31;\r\n\t\tb = c42 - c32;\r\n\t\tc = c43 - c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c34 - c44)*invLen;\r\n\r\n\t\tthis._frustumPlanesDirty = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get projection():IProjection\r\n\t{\r\n\t\treturn this._projection;\r\n\t}\r\n\r\n\tpublic set projection(value:IProjection)\r\n\t{\r\n\t\tif (this._projection == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!value)\r\n\t\t\tthrow new Error(\"Projection cannot be null!\");\r\n\r\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis._projection = value;\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get viewProjection():Matrix3D\r\n\t{\r\n\t\tif (this._viewProjectionDirty) {\r\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\r\n\t\t\tthis._viewProjection.append(this._projection.matrix);\r\n\t\t\tthis._viewProjectionDirty = false;\r\n\t\t}\r\n\r\n\t\treturn this._viewProjection;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\r\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\r\n\t */\r\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the normalised position in screen space of the given scene position.\r\n\t *\r\n\t * @param point3d the position vector of the scene coordinates to be projected.\r\n\t * @return The normalised screen position of the given scene coordinates.\r\n\t */\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the scene position of the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\r\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The scene position of the given screen coordinates.\r\n\t */\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterCamera(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterCamera(this);\r\n\t}\r\n}\r\n\r\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass DirectionalLight extends LightBase implements IEntity\r\n{\r\n\tprivate _direction:Vector3D;\r\n\tprivate _tmpLookAt:Vector3D;\r\n\tprivate _sceneDirection:Vector3D;\r\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\r\n\tprivate _projAABBPoints:Array<number>;\r\n\r\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\r\n\r\n\t\tthis._sceneDirection = new Vector3D();\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get sceneDirection():Vector3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._sceneDirection;\r\n\t}\r\n\r\n\tpublic get direction():Vector3D\r\n\t{\r\n\t\treturn this._direction;\r\n\t}\r\n\r\n\tpublic set direction(value:Vector3D)\r\n\t{\r\n\t\tthis._direction = value;\r\n\r\n\t\tif (!this._tmpLookAt)\r\n\t\t\tthis._tmpLookAt = new Vector3D();\r\n\r\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\r\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\r\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\r\n\r\n\t\tthis.lookAt(this._tmpLookAt);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tsuper.pUpdateSceneTransform();\r\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\r\n\t\tthis._sceneDirection.normalize();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\r\n\t{\r\n\t\treturn new DirectionalShadowMapper();\r\n\t}\r\n\r\n\t//override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tif (!this._projAABBPoints)\r\n\t\t\tthis._projAABBPoints = [];\r\n\r\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\r\n\r\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\r\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\r\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\r\n\t\tvar d:number;\r\n\t\tfor (var i:number = 0; i < 24;) {\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < xMin)\r\n\t\t\t\txMin = d;\r\n\r\n\t\t\tif (d > xMax)\r\n\t\t\t\txMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < yMin)\r\n\t\t\t\tyMin = d;\r\n\r\n\t\t\tif (d > yMax)\r\n\t\t\t\tyMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < zMin)\r\n\t\t\t\tzMin = d;\r\n\r\n\t\t\tif (d > zMax)\r\n\t\t\t\tzMax = d;\r\n\t\t}\r\n\r\n\t\tvar invXRange:number = 1/(xMax - xMin);\r\n\t\tvar invYRange:number = 1/(yMax - yMin);\r\n\t\tvar invZRange:number = 1/(zMax - zMin);\r\n\t\traw[0] = 2*invXRange;\r\n\t\traw[5] = 2*invYRange;\r\n\t\traw[10] = invZRange;\r\n\t\traw[12] = -(xMax + xMin)*invXRange;\r\n\t\traw[13] = -(yMax + yMin)*invYRange;\r\n\t\traw[14] = -zMin*invZRange;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterDirectionalLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterDirectionalLight(this);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\t//update points\r\n\t\tvar minX:number = this._pBoxBounds.x;\r\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\r\n\t\tvar minZ:number = this._pBoxBounds.z;\r\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\r\n\t\tvar maxY:number = this._pBoxBounds.y;\r\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\r\n\r\n\t\tthis._pAabbPoints[0] = minX;\r\n\t\tthis._pAabbPoints[1] = minY;\r\n\t\tthis._pAabbPoints[2] = minZ;\r\n\t\tthis._pAabbPoints[3] = maxX;\r\n\t\tthis._pAabbPoints[4] = minY;\r\n\t\tthis._pAabbPoints[5] = minZ;\r\n\t\tthis._pAabbPoints[6] = minX;\r\n\t\tthis._pAabbPoints[7] = maxY;\r\n\t\tthis._pAabbPoints[8] = minZ;\r\n\t\tthis._pAabbPoints[9] = maxX;\r\n\t\tthis._pAabbPoints[10] = maxY;\r\n\t\tthis._pAabbPoints[11] = minZ;\r\n\t\tthis._pAabbPoints[12] = minX;\r\n\t\tthis._pAabbPoints[13] = minY;\r\n\t\tthis._pAabbPoints[14] = maxZ;\r\n\t\tthis._pAabbPoints[15] = maxX;\r\n\t\tthis._pAabbPoints[16] = minY;\r\n\t\tthis._pAabbPoints[17] = maxZ;\r\n\t\tthis._pAabbPoints[18] = minX;\r\n\t\tthis._pAabbPoints[19] = maxY;\r\n\t\tthis._pAabbPoints[20] = maxZ;\r\n\t\tthis._pAabbPoints[21] = maxX;\r\n\t\tthis._pAabbPoints[22] = maxY;\r\n\t\tthis._pAabbPoints[23] = maxZ;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\nclass LightProbe extends LightBase implements IEntity\r\n{\r\n\tprivate _diffuseMap:ImageCube;\r\n\tprivate _specularMap:ImageCube;\r\n\r\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._diffuseMap = diffuseMap;\r\n\t\tthis._specularMap = specularMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get diffuseMap():ImageCube\r\n\t{\r\n\t\treturn this._diffuseMap;\r\n\t}\r\n\r\n\tpublic set diffuseMap(value:ImageCube)\r\n\t{\r\n\t\tthis._diffuseMap = value;\r\n\t}\r\n\r\n\tpublic get specularMap():ImageCube\r\n\t{\r\n\t\treturn this._specularMap;\r\n\t}\r\n\r\n\tpublic set specularMap(value:ImageCube)\r\n\t{\r\n\t\tthis._specularMap = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterLightProbe(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterLightProbe(this);\r\n\t}\r\n}\r\n\r\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A Line Segment primitive.\r\n */\r\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset LineSegment]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\r\n\tpublic _startPosition:Vector3D;\r\n\tpublic _endPosition:Vector3D;\r\n\tpublic _halfThickness:number;\r\n\r\n\t/**\r\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSegment.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startPostion():Vector3D\r\n\t{\r\n\t\treturn this._startPosition;\r\n\t}\r\n\r\n\tpublic set startPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._startPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._startPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endPosition():Vector3D\r\n\t{\r\n\t\treturn this._endPosition;\r\n\t}\r\n\r\n\tpublic set endPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._endPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._endPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():number\r\n\t{\r\n\t\treturn this._halfThickness*2;\r\n\t}\r\n\r\n\tpublic set thickness(value:number)\r\n\t{\r\n\t\tif (this._halfThickness == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._halfThickness = value*0.5;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a line segment\r\n\t *\r\n\t * @param startPosition Start position of the line segment\r\n\t * @param endPosition Ending position of the line segment\r\n\t * @param thickness Thickness of the line\r\n\t */\r\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._startPosition = startPosition;\r\n\t\tthis._endPosition = endPosition;\r\n\t\tthis._halfThickness = thickness*0.5;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._startPosition = null;\r\n\t\tthis._endPosition = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\r\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\r\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\r\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\r\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\r\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\r\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\r\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\r\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\r\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\r\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRenderableUpdate()\r\n\t{\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = LineSegment;",
    "﻿import Geometry\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport GeometryEvent\t\t\t\t= require(\"awayjs-core/lib/events/GeometryEvent\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\r\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\r\n * of the geometry to be assigned different materials.\r\n */\r\nclass Mesh extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Mesh]\";\r\n\r\n\tprivate _uvTransform:UVTransform;\r\n\r\n\tprivate _subMeshes:Array<ISubMesh>;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _animator:IAnimator;\r\n\tprivate _castsShadows:boolean = true;\r\n\tprivate _shareAnimationGeometry:boolean = true;\r\n\r\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\tpublic set animator(value:IAnimator)\r\n\t{\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.removeOwner(this);\r\n\r\n\t\tthis._animator = value;\r\n\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\r\n\t\t\tif (subMesh.material) {\r\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\r\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\r\n\t\t\t}\r\n\r\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\r\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\r\n\t\t}\r\n\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.addOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Mesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\r\n\t */\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tthis._castsShadows = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The geometry used by the mesh that provides it with its shape.\r\n\t */\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\tpublic set geometry(value:Geometry)\r\n\t{\r\n\t\tvar i:number;\r\n\r\n\t\tif (this._geometry) {\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\r\n\t\t\t\tthis._subMeshes[i].dispose();\r\n\r\n\t\t\tthis._subMeshes.length = 0;\r\n\t\t}\r\n\r\n\t\tthis._geometry = value;\r\n\r\n\t\tif (this._geometry) {\r\n\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\r\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\r\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the Mesh.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tvar i:number;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iAddOwner(subMesh);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the mesh share the same animation geometry.\r\n\t */\r\n\tpublic get shareAnimationGeometry():boolean\r\n\t{\r\n\t\treturn this._shareAnimationGeometry;\r\n\t}\r\n\r\n\tpublic set shareAnimationGeometry(value:boolean)\r\n\t{\r\n\t\tthis._shareAnimationGeometry = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\r\n\t * material.\r\n\t */\r\n\tpublic get subMeshes():Array<ISubMesh>\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._subMeshes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._pColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tsuper._pSetColorTransform(value);\r\n\t}\r\n\t/**\r\n\t * Create a new Mesh object.\r\n\t *\r\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\r\n\t * @param material    [optional]        The material with which to render the Mesh.\r\n\t */\r\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._subMeshes = new Array<ISubMesh>();\r\n\r\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\r\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\r\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\r\n\r\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\r\n\t\tthis.geometry = geometry || new Geometry();\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic bakeTransformations()\r\n\t{\r\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\r\n\t\tthis._iMatrix3D.identity();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis.material = null;\r\n\t\tthis.geometry = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\r\n\t * @return\r\n\t */\r\n\tpublic disposeWithAnimatorAndChildren()\r\n\t{\r\n\t\tthis.disposeWithChildren();\r\n\r\n\t\t if (this._animator)\r\n\t\t\tthis._animator.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Clones this Mesh instance along with all it's children, while re-using the same\r\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\r\n\t * containing copies of all of it's children.\r\n\t *\r\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\r\n\t * geometry, and material. Properties that are cloned or created anew for the copy\r\n\t * include subMeshes, children of the mesh, and the animator.\r\n\t *\r\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\r\n\t * cloning it's children, the simplest way is to create a new mesh manually:\r\n\t *\r\n\t * <code>\r\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\r\n\t * </code>\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Mesh = new Mesh(null, null);\r\n\r\n        this._iCopyToMesh(clone);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n    public _iCopyToMesh(clone:Mesh):void\r\n    {\r\n        clone.geometry = this._geometry;\r\n        clone.material = this._material;\r\n        clone._iMatrix3D = this._iMatrix3D;\r\n        clone.pivot = this.pivot;\r\n        clone.partition = this.partition;\r\n        clone.boundsType = this.boundsType;\r\n\r\n\r\n        clone.name = this.name;\r\n        clone.castsShadows = this.castsShadows;\r\n        clone.shareAnimationGeometry = this.shareAnimationGeometry;\r\n        clone.mouseEnabled = this.mouseEnabled;\r\n        clone.mouseChildren = this.mouseChildren;\r\n        //this is of course no proper cloning\r\n        //maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\r\n        clone.extra = this.extra;\r\n        clone._iMasks = this._iMasks;\r\n        clone._iMaskID = this._iMaskID;\r\n\r\n        var len:number = this._subMeshes.length;\r\n        for (var i:number = 0; i < len; ++i)\r\n            clone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n\r\n        len = this.numChildren;\r\n        var obj:any;\r\n\r\n        for (i = 0; i < len; ++i) {\r\n            obj = this.getChildAt(i).clone();\r\n            clone.addChild(<DisplayObjectContainer> obj);\r\n        }\r\n\r\n        if (this._animator)\r\n            clone.animator = this._animator.clone();\r\n    }\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param subGeometry\r\n\t * @returns {SubMeshBase}\r\n\t */\r\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\r\n\t{\r\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Array<number>;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\tminX = maxX = boundingPositions[i];\r\n\t\t\tminY = maxY = boundingPositions[i + 1];\r\n\t\t\tminZ = maxZ = boundingPositions[i + 2];\r\n\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i+=3) {\r\n\t\t\t\t\tp = boundingPositions[i];\r\n\t\t\t\t\tif (p < minX)\r\n\t\t\t\t\t\tminX = p;\r\n\t\t\t\t\telse if (p > maxX)\r\n\t\t\t\t\t\tmaxX = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 1];\r\n\r\n\t\t\t\t\tif (p < minY)\r\n\t\t\t\t\t\tminY = p;\r\n\t\t\t\t\telse if (p > maxY)\r\n\t\t\t\t\t\tmaxY = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 2];\r\n\r\n\t\t\t\t\tif (p < minZ)\r\n\t\t\t\t\t\tminZ = p;\r\n\t\t\t\t\telse if (p > maxZ)\r\n\t\t\t\t\t\tmaxZ = p;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t} else {\r\n\t\t\tthis._pBoxBounds.setEmpty();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tvar centerX:number = box.x + box.width/2;\r\n\t\tvar centerY:number = box.y + box.height/2;\r\n\t\tvar centerZ:number = box.z + box.depth/2;\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Array<number>;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar maxRadiusSquared:number = 0;\r\n\t\tvar radiusSquared:number;\r\n\t\tvar distanceX:number;\r\n\t\tvar distanceY:number;\r\n\t\tvar distanceZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i += 3) {\r\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\r\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\r\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\r\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\r\n\r\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\r\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._pSphereBounds.x = centerX;\r\n\t\tthis._pSphereBounds.y = centerY;\r\n\t\tthis._pSphereBounds.z = centerZ;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\r\n\t{\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was added to the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryAdded(event:GeometryEvent)\r\n\t{\r\n\t\tthis.addSubMesh(event.subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was removed from the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\r\n\t{\r\n\t\tvar subMesh:ISubMesh;\r\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar i:number;\r\n\r\n\t\t// Important! This has to be done here, and not delayed until the\r\n\t\t// next render loop, since this may be caused by the geometry being\r\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\r\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry == subGeom) {\r\n\t\t\t\tsubMesh.dispose();\r\n\r\n\t\t\t\tthis._subMeshes.splice(i, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t--len;\r\n\t\tfor (; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iIndex = i;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a SubMeshBase wrapping a SubGeometry.\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\r\n\r\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\r\n\t\tvar len:number = this._subMeshes.length;\r\n\r\n\t\tsubMesh._iIndex = len;\r\n\r\n\t\tthis._subMeshes[len] = subMesh;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn this._pPickingCollider.testMeshCollision(this, this._pPickingCollisionVO, shortestCollisionDistance, findClosest);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\r\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometries()\r\n\t{\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = Mesh;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\n\r\nclass PointLight extends LightBase implements IEntity\r\n{\r\n\tpublic _pRadius:number = 90000;\r\n\tpublic _pFallOff:number = 100000;\r\n\tpublic _pFallOffFactor:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.SPHERE;\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\r\n\t{\r\n\t\treturn new CubeMapShadowMapper();\r\n\t}\r\n\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pRadius = value;\r\n\r\n\t\tif (this._pRadius < 0) {\r\n\t\t\tthis._pRadius = 0;\r\n\t\t} else if (this._pRadius > this._pFallOff) {\r\n\t\t\tthis._pFallOff = this._pRadius;\r\n\t\t\tthis._pInvalidateBounds();\r\n\t\t}\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\r\n\t}\r\n\r\n\tpublic iFallOffFactor():number\r\n\t{\r\n\t\treturn this._pFallOffFactor;\r\n\t}\r\n\r\n\tpublic get fallOff():number\r\n\t{\r\n\t\treturn this._pFallOff;\r\n\t}\r\n\r\n\tpublic set fallOff(value:number)\r\n\t{\r\n\t\tthis._pFallOff = value;\r\n\r\n\t\tif (this._pFallOff < 0)\r\n\t\t\tthis._pFallOff = 0;\r\n\r\n\t\tif (this._pFallOff < this._pRadius)\r\n\t\t\tthis._pRadius = this._pFallOff;\r\n\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pSphereBounds.radius = this._pFallOff;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\t// todo: do not use lookAt on Light\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this._pParent.inverseSceneTransform);\r\n\t\tthis.lookAt(m.position);\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tvar box:Box = entity.getBox();\r\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\r\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\r\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\r\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\r\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\r\n\t\tvar zMin:number;\r\n\t\tvar zMax:number;\r\n\r\n\t\tvar z:number = m.rawData[14];\r\n\t\tzMin = z - d;\r\n\t\tzMax = z + d;\r\n\r\n\t\traw[5] = raw[0] = zMin/d;\r\n\t\traw[10] = zMax/(zMax - zMin);\r\n\t\traw[11] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\r\n\t\traw[14] = -zMin*raw[10];\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterPointLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterPointLight(this);\r\n\t}\r\n}\r\n\r\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\r\n\r\n/**\r\n * This class is used to create lightweight shapes using the ActionScript\r\n * drawing application program interface(API). The Shape class includes a\r\n * <code>graphics</code> property, which lets you access methods from the\r\n * Graphics class.\r\n *\r\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\r\n * includes other features not available to the Shape class. For example, a\r\n * Sprite object is a display object container, whereas a Shape object is not\r\n * (and cannot contain child display objects). For this reason, Shape objects\r\n * consume less memory than Sprite objects that contain the same graphics.\r\n * However, a Sprite object supports user input events, while a Shape object\r\n * does not.</p>\r\n */\r\nclass Shape extends DisplayObject\r\n{\r\n\tprivate _graphics:Graphics;\r\n\r\n\t/**\r\n\t * Specifies the Graphics object belonging to this Shape object, where vector\r\n\t * drawing commands can occur.\r\n\t */\r\n\tget graphics():Graphics\r\n\t{\r\n\t\treturn this._graphics;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Shape object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\n/**\r\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\r\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\r\n * the sky box is always as large as possible without being clipped.\r\n */\r\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Skybox]\";\r\n\r\n\tprivate _cubeMap:SingleCubeTexture;\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tprivate _animationSet:IAnimationSet;\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\tprivate _mipmap:boolean = false;\r\n\tprivate _smooth:boolean = true;\r\n\r\n\tprivate _animator:IAnimator;\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\t\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pIinvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t* The cube texture to use as the skybox.\r\n\t*/\r\n\tpublic get cubeMap():SingleCubeTexture\r\n\t{\r\n\t\treturn this._cubeMap;\r\n\t}\r\n\r\n\tpublic set cubeMap(value:SingleCubeTexture)\r\n\t{\r\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\r\n\t\tif (value && this._cubeMap)\r\n\t\t\tthis._pInvalidateRender();\r\n\r\n\t\tthis._cubeMap = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Skybox object.\r\n\t *\r\n\t * @param material\tThe material with which to render the Skybox.\r\n\t */\r\n\tconstructor(cubeMap:SingleCubeTexture = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\t\tthis._owners = new Array<IRenderableOwner>(this);\r\n\r\n\t\tthis.cubeMap = cubeMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Skybox.assetType;\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//skybox do not get collected in the standard entity list\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterSkybox(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterSkybox(this);\r\n\t}\r\n}\r\n\r\nexport = Skybox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\r\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\r\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\r\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\r\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\n\r\n/**\r\n * The TextField class is used to create display objects for text display and\r\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\r\n * perform low-level text rendering. However, in Flex, you typically use the\r\n * Label, Text, TextArea, and TextInput controls to process text. <ph\r\n * outputclass=\"flashonly\">You can give a text field an instance name in the\r\n * Property inspector and use the methods and properties of the TextField\r\n * class to manipulate it with ActionScript. TextField instance names are\r\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\r\n * the Actions panel.\r\n *\r\n * <p>To create a text field dynamically, use the <code>TextField()</code>\r\n * constructor.</p>\r\n *\r\n * <p>The methods of the TextField class let you set, select, and manipulate\r\n * text in a dynamic or input text field that you create during authoring or\r\n * at runtime. </p>\r\n *\r\n * <p>ActionScript provides several ways to format your text at runtime. The\r\n * TextFormat class lets you set character and paragraph formatting for\r\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\r\n * text fields by using the <code>TextField.styleSheet</code> property and the\r\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\r\n * formatting tags, or apply styles. You can assign HTML formatted text, which\r\n * optionally uses CSS styles, directly to a text field. HTML text that you\r\n * assign to a text field can contain embedded media(movie clips, SWF files,\r\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\r\n * media in the same way that a web browser wraps text around media embedded\r\n * in an HTML document. </p>\r\n *\r\n * <p>Flash Player supports a subset of HTML tags that you can use to format\r\n * text. See the list of supported HTML tags in the description of the\r\n * <code>htmlText</code> property.</p>\r\n * \r\n * @event change                    Dispatched after a control value is\r\n *                                  modified, unlike the\r\n *                                  <code>textInput</code> event, which is\r\n *                                  dispatched before the value is modified.\r\n *                                  Unlike the W3C DOM Event Model version of\r\n *                                  the <code>change</code> event, which\r\n *                                  dispatches the event only after the\r\n *                                  control loses focus, the ActionScript 3.0\r\n *                                  version of the <code>change</code> event\r\n *                                  is dispatched any time the control\r\n *                                  changes. For example, if a user types text\r\n *                                  into a text field, a <code>change</code>\r\n *                                  event is dispatched after every keystroke.\r\n * @event link                      Dispatched when a user clicks a hyperlink\r\n *                                  in an HTML-enabled text field, where the\r\n *                                  URL begins with \"event:\". The remainder of\r\n *                                  the URL after \"event:\" is placed in the\r\n *                                  text property of the LINK event.\r\n *\r\n *                                  <p><b>Note:</b> The default behavior,\r\n *                                  adding the text to the text field, occurs\r\n *                                  only when Flash Player generates the\r\n *                                  event, which in this case happens when a\r\n *                                  user attempts to input text. You cannot\r\n *                                  put text into a text field by sending it\r\n *                                  <code>textInput</code> events.</p>\r\n * @event scroll                    Dispatched by a TextField object\r\n *                                  <i>after</i> the user scrolls.\r\n * @event textInput                 Flash Player dispatches the\r\n *                                  <code>textInput</code> event when a user\r\n *                                  enters one or more characters of text.\r\n *                                  Various text input methods can generate\r\n *                                  this event, including standard keyboards,\r\n *                                  input method editors(IMEs), voice or\r\n *                                  speech recognition systems, and even the\r\n *                                  act of pasting plain text with no\r\n *                                  formatting or style information.\r\n * @event textInteractionModeChange Flash Player dispatches the\r\n *                                  <code>textInteractionModeChange</code>\r\n *                                  event when a user changes the interaction\r\n *                                  mode of a text field. for example on\r\n *                                  Android, one can toggle from NORMAL mode\r\n *                                  to SELECTION mode using context menu\r\n *                                  options\r\n */\r\nclass TextField extends Mesh\r\n{\r\n\tpublic static assetType:string = \"[asset TextField]\";\r\n\r\n\tprivate _bottomScrollV:number;\r\n\tprivate _caretIndex:number;\r\n\tprivate _length:number;\r\n\tprivate _maxScrollH:number;\r\n\tprivate _maxScrollV:number;\r\n\tprivate _numLines:number;\r\n\tprivate _selectionBeginIndex:number;\r\n\tprivate _selectionEndIndex:number;\r\n\tprivate _text:string = \"\";\r\n\tprivate _textHeight:number;\r\n\tprivate _textInteractionMode:TextInteractionMode;\r\n\tprivate _textWidth:number;\r\n\r\n\tprivate _charBoundaries:Rectangle;\r\n\tprivate _charIndexAtPoint:number;\r\n\tprivate _firstCharInParagraph:number;\r\n\tprivate _imageReference:DisplayObject\r\n\tprivate _lineIndexAtPoint:number;\r\n\tprivate _lineIndexOfChar:number;\r\n\tprivate _lineLength:number;\r\n\tprivate _lineMetrics:TextLineMetrics;\r\n\tprivate _lineOffset:number;\r\n\tprivate _lineText:string;\r\n\tprivate _paragraphLength:number;\r\n\tprivate _textFormat:TextFormat;\r\n\r\n\t/**\r\n\t * When set to <code>true</code> and the text field is not in focus, Flash\r\n\t * Player highlights the selection in the text field in gray. When set to\r\n\t * <code>false</code> and the text field is not in focus, Flash Player does\r\n\t * not highlight the selection in the text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic alwaysShowSelection:boolean\r\n\r\n\t/**\r\n\t * The type of anti-aliasing used for this text field. Use\r\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\r\n\t * control this setting only if the font is embedded(with the\r\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\r\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\r\n\t *\r\n\t * <p>To set values for this property, use the following string values:</p>\r\n\t */\r\n\tpublic antiAliasType:AntiAliasType;\r\n\r\n\t/**\r\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\r\n\t * for the <code>TextFieldAutoSize</code> constants:\r\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\r\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\r\n\t * and <code>TextFieldAutoSize.CENTER</code>.\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\r\n\t * (the default) no resizing occurs.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\r\n\t * the text is treated as left-justified text, meaning that the left margin\r\n\t * of the text field remains fixed and any resizing of a single line of the\r\n\t * text field is on the right margin. If the text includes a line break(for\r\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\r\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\r\n\t * to <code>true</code>, only the bottom of the text field is resized and the\r\n\t * right side remains fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\r\n\t * right-justified text, meaning that the right margin of the text field\r\n\t * remains fixed and any resizing of a single line of the text field is on\r\n\t * the left margin. If the text includes a line break(for example,\r\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\r\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\r\n\t * only the bottom of the text field is resized and the left side remains\r\n\t * fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\r\n\t * center-justified text, meaning that any resizing of a single line of the\r\n\t * text field is equally distributed to both the right and left margins. If\r\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\r\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\r\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\r\n\t * bottom of the text field is resized and the left and right sides remain\r\n\t * fixed.</p>\r\n\t * \r\n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\r\n\t *                       of flash.text.TextFieldAutoSize.\r\n\t */\r\n\tpublic autoSize:TextFieldAutoSize;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextField.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a background fill. If\r\n\t * <code>true</code>, the text field has a background fill. If\r\n\t * <code>false</code>, the text field has no background fill. Use the\r\n\t * <code>backgroundColor</code> property to set the background color of a\r\n\t * text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic background:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field background. The default value is\r\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\r\n\t * if there currently is no background, but the color is visible only if the\r\n\t * text field has the <code>background</code> property set to\r\n\t * <code>true</code>.\r\n\t */\r\n\tpublic backgroundColor:number /*int*/;\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a border. If <code>true</code>, the\r\n\t * text field has a border. If <code>false</code>, the text field has no\r\n\t * border. Use the <code>borderColor</code> property to set the border color.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic border:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field border. The default value is\r\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\r\n\t * if there currently is no border, but the color is visible only if the text\r\n\t * field has the <code>border</code> property set to <code>true</code>.\r\n\t */\r\n\tpublic borderColor:number /*int*/;\r\n\r\n\t/**\r\n\t * An integer(1-based index) that indicates the bottommost line that is\r\n\t * currently visible in the specified text field. Think of the text field as\r\n\t * a window onto a block of text. The <code>scrollV</code> property is the\r\n\t * 1-based index of the topmost visible line in the window.\r\n\t *\r\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\r\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\r\n\t */\r\n\tpublic get bottomScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._bottomScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * The index of the insertion point(caret) position. If no insertion point\r\n\t * is displayed, the value is the position the insertion point would be if\r\n\t * you restored focus to the field(typically where the insertion point last\r\n\t * was, or 0 if the field has not had focus).\r\n\t *\r\n\t * <p>Selection span indexes are zero-based(for example, the first position\r\n\t * is 0, the second position is 1, and so on).</p>\r\n\t */\r\n\tpublic get caretIndex():number /*int*/\r\n\t{\r\n\t\treturn this._caretIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that specifies whether extra white space(spaces, line\r\n\t * breaks, and so on) in a text field with HTML text is removed. The default\r\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\r\n\t * affects text set with the <code>htmlText</code> property, not the\r\n\t * <code>text</code> property. If you set text with the <code>text</code>\r\n\t * property, <code>condenseWhite</code> is ignored.\r\n\t *\r\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\r\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\r\n\t * breaks in the text field.</p>\r\n\t *\r\n\t * <p>Set the <code>condenseWhite</code> property before setting the\r\n\t * <code>htmlText</code> property.</p>\r\n\t */\r\n\tpublic condenseWhite:boolean;\r\n\r\n\t/**\r\n\t * Specifies the format applied to newly inserted text, such as text entered\r\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\r\n\t * method.\r\n\t *\r\n\t * <p><b>Note:</b> When selecting characters to be replaced with\r\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\r\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\r\n\t * selected up to and including the last character. Here is an example:</p>\r\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\r\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\r\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\r\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\r\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\r\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\r\n\t * </pre>\r\n\t *\r\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\r\n\t * returned TextFormat object has all of its properties defined. No property\r\n\t * is <code>null</code>.</p>\r\n\t *\r\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic defaultTextFormat:TextFormat;\r\n\r\n\t/**\r\n\t * Specifies whether the text field is a password text field. If the value of\r\n\t * this property is <code>true</code>, the text field is treated as a\r\n\t * password text field and hides the input characters using asterisks instead\r\n\t * of the actual characters. If <code>false</code>, the text field is not\r\n\t * treated as a password text field. When password mode is enabled, the Cut\r\n\t * and Copy commands and their corresponding keyboard shortcuts will not\r\n\t * function. This security mechanism prevents an unscrupulous user from using\r\n\t * the shortcuts to discover a password on an unattended computer.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic displayAsPassword:boolean;\r\n\r\n\t/**\r\n\t * Specifies whether to render by using embedded font outlines. If\r\n\t * <code>false</code>, Flash Player renders the text field by using device\r\n\t * fonts.\r\n\t *\r\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\r\n\t * for a text field, you must specify a font for that text by using the\r\n\t * <code>font</code> property of a TextFormat object applied to the text\r\n\t * field. If the specified font is not embedded in the SWF file, the text is\r\n\t * not displayed.</p>\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic embedFonts:boolean;\r\n\r\n\t/**\r\n\t * The type of grid fitting used for this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The type of grid fitting used determines whether Flash Player forces\r\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\r\n\t * or not at all.</p>\r\n\t *\r\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\r\n\t * following string values:</p>\r\n\t * \r\n\t * @default pixel\r\n\t */\r\n\tpublic gridFitType:GridFitType;\r\n\r\n\t/**\r\n\t * Contains the HTML representation of the text field contents.\r\n\t *\r\n\t * <p>Flash Player supports the following HTML tags:</p>\r\n\t *\r\n\t * <p>Flash Player and AIR also support explicit character codes, such as\r\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\r\n\t */\r\n\tpublic htmlText:string;\r\n\r\n\t/**\r\n\t * The number of characters in a text field. A character such as tab\r\n\t * (<code>\\t</code>) counts as one character.\r\n\t */\r\n\tpublic get length():number /*int*/\r\n\t{\r\n\t\treturn this._length;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum number of characters that the text field can contain, as\r\n\t * entered by a user. A script can insert more text than\r\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\r\n\t * only how much text a user can enter. If the value of this property is\r\n\t * <code>0</code>, a user can enter an unlimited amount of text.\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic maxChars:number /*int*/;\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollH</code>.\r\n\t */\r\n\tpublic maxScrollH():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollH;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollV</code>.\r\n\t */\r\n\tpublic maxScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\r\n\t * multiline text fields when the user clicks a text field and rolls the\r\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\r\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\r\n\t * implement your own text field scrolling.\r\n\t */\r\n\tpublic mouseWheelEnabled:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether field is a multiline text field. If the value is\r\n\t * <code>true</code>, the text field is multiline; if the value is\r\n\t * <code>false</code>, the text field is a single-line text field. In a field\r\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\r\n\t * determines whether the <code>Enter</code> key creates a new line(a value\r\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\r\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\r\n\t * value of <code>false</code>, newlines are stripped out of the text.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic multiline:boolean;\r\n\r\n\t/**\r\n\t * Defines the number of text lines in a multiline text field. If\r\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\r\n\t * lines increases when text wraps.\r\n\t */\r\n\tpublic get numLines():number /*int*/\r\n\t{\r\n\t\treturn this._numLines;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the set of characters that a user can enter into the text field.\r\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\r\n\t * you can enter any character. If the value of the <code>restrict</code>\r\n\t * property is an empty string, you cannot enter any character. If the value\r\n\t * of the <code>restrict</code> property is a string of characters, you can\r\n\t * enter only characters in the string into the text field. The string is\r\n\t * scanned from left to right. You can specify a range by using the hyphen\r\n\t * (-) character. Only user interaction is restricted; a script can put any\r\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\r\n\t * not synchronize with the Embed font options in the Property inspector.\r\n\t *\r\n\t * <p>If the string begins with a caret(^) character, all characters are\r\n\t * initially accepted and succeeding characters in the string are excluded\r\n\t * from the set of accepted characters. If the string does not begin with a\r\n\t * caret(^) character, no characters are initially accepted and succeeding\r\n\t * characters in the string are included in the set of accepted\r\n\t * characters.</p>\r\n\t *\r\n\t * <p>The following example allows only uppercase characters, spaces, and\r\n\t * numbers to be entered into a text field:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\r\n\t *\r\n\t * <p>The following example includes all characters, but excludes lowercase\r\n\t * letters:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\r\n\t *\r\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\r\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\r\n\t * character in the string, so when specified in ActionScript, a double\r\n\t * backslash must be used. For example, the following code includes only the\r\n\t * dash(-) and caret(^):</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\r\n\t *\r\n\t * <p>The ^ can be used anywhere in the string to toggle between including\r\n\t * characters and excluding characters. The following code includes only\r\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\r\n\t *\r\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\r\n\t * <code>restrict</code> strings. The following code includes only the\r\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\r\n\t * \r\n\t * @default null\r\n\t */\r\n\tpublic restrict:string;\r\n\r\n\t/**\r\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\r\n\t * property is 0, the text is not horizontally scrolled. This property value\r\n\t * is an integer that represents the horizontal position in pixels.\r\n\t *\r\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\r\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\r\n\t * because most fonts you typically use are proportionally spaced; that is,\r\n\t * the characters can have different widths. Flash Player performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\r\n\t * height of the line adjusts to fit the largest font in use.</p>\r\n\t *\r\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\r\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\r\n\t */\r\n\tpublic scrollH:number;\r\n\r\n\t/**\r\n\t * The vertical position of text in a text field. The <code>scrollV</code>\r\n\t * property is useful for directing users to a specific paragraph in a long\r\n\t * passage, or creating scrolling text fields.\r\n\t *\r\n\t * <p>The units of vertical scrolling are lines, whereas the units of\r\n\t * horizontal scrolling are pixels. If the first line displayed is the first\r\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\r\n\t * is measured in pixels because most fonts are proportionally spaced; that\r\n\t * is, the characters can have different widths. Flash performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if there are multiple fonts on a\r\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\r\n\t */\r\n\tpublic scrollV:number;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field is selectable. The\r\n\t * value <code>true</code> indicates that the text is selectable. The\r\n\t * <code>selectable</code> property controls whether a text field is\r\n\t * selectable, not whether a text field is editable. A dynamic text field can\r\n\t * be selectable even if it is not editable. If a dynamic text field is not\r\n\t * selectable, the user cannot select its text.\r\n\t *\r\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\r\n\t * the text field does not respond to selection commands from the mouse or\r\n\t * keyboard, and the text cannot be copied with the Copy command. If\r\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\r\n\t * field can be selected with the mouse or keyboard, and the text can be\r\n\t * copied with the Copy command. You can select text this way even if the\r\n\t * text field is a dynamic text field instead of an input text field. </p>\r\n\t * \r\n\t * @default true\r\n\t */\r\n\tpublic selectable:boolean;\r\n\r\n\t/**\r\n\t * The zero-based character index value of the first character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionBeginIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionBeginIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The zero-based character index value of the last character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionEndIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionEndIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The sharpness of the glyph edges in this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\r\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\r\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\r\n\t * property to the nearest value in the range(either -400 or 400).\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic sharpness:number;\r\n\r\n\t/**\r\n\t * Attaches a style sheet to the text field. For information on creating\r\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\r\n\t * Developer's Guide</i>.\r\n\t *\r\n\t * <p>You can change the style sheet associated with a text field at any\r\n\t * time. If you change the style sheet in use, the text field is redrawn with\r\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\r\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\r\n\t * use is removed, the text field is redrawn without a style sheet. </p>\r\n\t *\r\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\r\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\r\n\t * incorporate the formatting previously applied by the style sheet. To\r\n\t * preserve the original <code>TextField.htmlText</code> contents without the\r\n\t * formatting, save the value in a variable before removing the style\r\n\t * sheet.</p>\r\n\t */\r\n\tpublic styleSheet:StyleSheet;\r\n\r\n\t/**\r\n\t * A string that is the current text in the text field. Lines are separated\r\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\r\n\t * property contains unformatted text in the text field, without HTML tags.\r\n\t *\r\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\r\n\t * property.</p>\r\n\t */\r\n\tpublic get text():string\r\n\t{\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\tpublic set text(value:string)\r\n\t{\r\n\t\tif (this._text == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._text = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\tpublic get textFormat():TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\tpublic set textFormat(value:TextFormat)\r\n\t{\r\n\t\tif (this._textFormat == value)\r\n\t\t\treturn;\r\n\t\tthis._textFormat = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\r\n\t/**\r\n\t * The color of the text in a text field, in hexadecimal format. The\r\n\t * hexadecimal color system uses six digits to represent color values. Each\r\n\t * digit has 16 possible values or characters. The characters range from 0-9\r\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\r\n\t * <code>0xFFFFFF</code>.\r\n\t * \r\n\t * @default 0(0x000000)\r\n\t */\r\n\tpublic textColor:number /*int*/;\r\n\r\n\t/**\r\n\t * The height of the text in pixels.\r\n\t */\r\n\tpublic get textHeight():number\r\n\t{\r\n\t\treturn this._textHeight;\r\n\t}\r\n\r\n\t/**\r\n\t * The interaction mode property, Default value is\r\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\r\n\t * that the text can be scrolled but not selected. One can switch to the\r\n\t * selectable mode through the in-built context menu on the text field. On\r\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\r\n\t * selection mode.\r\n\t */\r\n\tpublic get textInteractionMode():TextInteractionMode\r\n\t{\r\n\t\treturn this._textInteractionMode;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textWidth():number\r\n\t{\r\n\t\treturn this._textWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * The thickness of the glyph edges in this text field. This property applies\r\n\t * only when <code>AntiAliasType</code> is set to\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\r\n\t * you attempt to set <code>thickness</code> to a value outside that range,\r\n\t * the property is set to the nearest value in the range(either -200 or\r\n\t * 200).</p>\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic thickness:number;\r\n\r\n\t/**\r\n\t * The type of the text field. Either one of the following TextFieldType\r\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\r\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\r\n\t * which specifies an input text field, which a user can edit.\r\n\t * \r\n\t * @default dynamic\r\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\r\n\t *                       flash.text.TextFieldType.\r\n\t */\r\n\tpublic type:TextFieldType;\r\n\r\n\t/**\r\n\t * Specifies whether to copy and paste the text formatting along with the\r\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\r\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\r\n\t * between text fields. Both the origin and destination text fields for the\r\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\r\n\t * to <code>true</code>. The default value is <code>false</code>.\r\n\t */\r\n\tpublic useRichTextClipboard:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field has word wrap. If\r\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\r\n\t * has word wrap; if the value is <code>false</code>, the text field does not\r\n\t * have word wrap. The default value is <code>false</code>.\r\n\t */\r\n\tpublic wordWrap:boolean;\r\n\r\n\t/**\r\n\t * Creates a new TextField instance. After you create the TextField instance,\r\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\r\n\t * the parent DisplayObjectContainer object to add the TextField instance to\r\n\t * the display list.\r\n\t *\r\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(new Geometry());\r\n\t}\r\n\r\n\t/**\r\n\t * Reconstructs the Geometry for this Text-field.\r\n\t */\r\n\tpublic reConstruct() {\r\n\r\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\r\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\r\n\r\n\t\tif(this._textFormat==null){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(this._text==\"\"){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar indices:Array<number> = new Array<number>();\r\n\t\tvar positions:Array<number> = new Array<number>();\r\n\t\tvar curveData:Array<number> = new Array<number>();\r\n\t\tvar uvs:Array<number> = new Array<number>();\r\n\r\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\r\n\t\tvar tri_idx_offset:number=0;\r\n\t\tvar tri_cnt:number=0;\r\n\t\tvar x_offset:number=0;\r\n\t\tvar y_offset:number=0;\r\n\t\tvar prev_char:TesselatedFontChar = null;\r\n\t\tfor (var i = 0; i < this.text.length; i++) {\r\n\r\n\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(this._text.charCodeAt(i).toString());\r\n\t\t\tif(this_char!= null) {\r\n\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\ttri_cnt = 0;\r\n\t\t\t\t\tvar indices2:Array<number> = this_subGeom.indices;\r\n\t\t\t\t\tvar positions2:Array<number> = this_subGeom.positions;\r\n\t\t\t\t\tvar curveData2:Array<number> = this_subGeom.curves;\r\n\t\t\t\t\tfor (var v = 0; v < indices2.length; v++) {\r\n\t\t\t\t\t\tindices.push(indices2[v] + tri_idx_offset);\r\n\t\t\t\t\t\ttri_cnt++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttri_idx_offset += tri_cnt;\r\n\t\t\t\t\tfor (v = 0; v < positions2.length / 3; v++) {\r\n\t\t\t\t\t\tpositions.push((positions2[v * 3] * char_scale) + x_offset);\r\n\t\t\t\t\t\tpositions.push((positions2[v * 3 + 1] * char_scale) + y_offset);\r\n\t\t\t\t\t\tpositions.push(positions2[v * 3 + 2]);\r\n\t\t\t\t\t\tcurveData.push(curveData2[v * 2]);\r\n\t\t\t\t\t\tcurveData.push(curveData2[v * 2 + 1]);\r\n\t\t\t\t\t\tuvs.push(this._textFormat.uv_values[0]);\r\n\t\t\t\t\t\tuvs.push(this._textFormat.uv_values[1]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\tvar kerning_value:number=0;\r\n\t\t\t\t\tif(prev_char!=null){\r\n\t\t\t\t\t\tfor(var k:number=0; k<prev_char.kerningCharCodes.length;k++){\r\n\t\t\t\t\t\t\tif(prev_char.kerningCharCodes[k]==this._text.charCodeAt(i)){\r\n\t\t\t\t\t\t\t\tkerning_value=prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tx_offset += ((this_char.char_width+kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\tx_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\tx_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(true);\r\n\t\tcurve_sub_geom.updateIndices(indices);\r\n\t\tcurve_sub_geom.updatePositions(positions);\r\n\t\tcurve_sub_geom.updateCurves(curveData);\r\n\t\tcurve_sub_geom.updateUVs(uvs);\r\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\r\n\t\tthis.subMeshes[0].material=this._textFormat.material;\r\n\t}\r\n\t/**\r\n\t * Appends the string specified by the <code>newText</code> parameter to the\r\n\t * end of the text of the text field. This method is more efficient than an\r\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\r\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\r\n\t * text field that contains a significant amount of content.\r\n\t *\r\n\t * @param newText The string to append to the existing text.\r\n\t */\r\n\tpublic appendText(newText:string) {\r\n\t\tthis._text+=newText;\r\n\t}\r\n\r\n\t/**\r\n\t * *tells the Textfield that a paragraph is defined completly.\r\n\t * e.g. the textfield will start a new line for future added text.\r\n\t */\r\n\tpublic closeParagraph()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that is the bounding box of the character.\r\n\t * \r\n\t * @param charIndex The zero-based index value for the character(for\r\n\t *                  example, the first position is 0, the second position is\r\n\t *                  1, and so on).\r\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\r\n\t *         maximum values defining the bounding box of the character.\r\n\t */\r\n\tpublic getCharBoundaries(charIndex:number):Rectangle\r\n\t{\r\n\t\treturn this._charBoundaries;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the character at the point specified\r\n\t * by the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the character.\r\n\t * @param y The <i>y</i> coordinate of the character.\r\n\t * @return The zero-based index value of the character(for example, the\r\n\t *         first position is 0, the second position is 1, and so on). Returns\r\n\t *         -1 if the point is not over any character.\r\n\t */\r\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._charIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the index of the first character in the\r\n\t * same paragraph.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the first character in the same\r\n\t *         paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._firstCharInParagraph;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\r\n\t * image or SWF file that has been added to an HTML-formatted text field by\r\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\r\n\t * following format:\r\n\t *\r\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\r\n\t * 'instanceName' ></code></pre></p>\r\n\t * \r\n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\r\n\t *           of the <code><img></code> tag).\r\n\t * @return The display object corresponding to the image or SWF file with the\r\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\r\n\t *         of the text field. For media loaded from an external source, this\r\n\t *         object is a Loader object, and, once loaded, the media object is a\r\n\t *         child of that Loader object. For media embedded in the SWF file,\r\n\t *         it is the loaded object. If no <code><img></code> tag with the\r\n\t *         matching <code>id</code> exists, the method returns\r\n\t *         <code>null</code>.\r\n\t */\r\n\tpublic getImageReference(id:string):DisplayObject\r\n\t{\r\n\t\treturn this._imageReference;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line at the point specified by\r\n\t * the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the line.\r\n\t * @param y The <i>y</i> coordinate of the line.\r\n\t * @return The zero-based index value of the line(for example, the first\r\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\r\n\t *         point is not over any line.\r\n\t */\r\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line containing the character\r\n\t * specified by the <code>charIndex</code> parameter.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the line.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexOfChar;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of characters in a specific text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want the length.\r\n\t * @return The number of characters in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns metrics information about a given text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want metrics information.\r\n\t * @return A TextLineMetrics object.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\r\n\t{\r\n\t\treturn this._lineMetrics;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the character index of the first character in the line that the\r\n\t * <code>lineIndex</code> parameter specifies.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The zero-based index value of the first character in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the text of the line specified by the <code>lineIndex</code>\r\n\t * parameter.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The text string contained in the specified line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineText(lineIndex:number /*int*/):string\r\n\t{\r\n\t\treturn this._lineText;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the length of the paragraph containing\r\n\t * the given character. The length is relative to the first character in the\r\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\r\n\t * the character index passed in.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return Returns the number of characters in the paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._paragraphLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TextFormat object that contains formatting information for the\r\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\r\n\t * parameters specify. Only properties that are common to the entire text\r\n\t * specified are set in the resulting TextFormat object. Any property that is\r\n\t * <i>mixed</i>, meaning that it has different values at different points in\r\n\t * the text, has a value of <code>null</code>.\r\n\t *\r\n\t * <p>If you do not specify values for these parameters, this method is\r\n\t * applied to all the text in the text field. </p>\r\n\t *\r\n\t * <p>The following table describes three possible usages:</p>\r\n\t * \r\n\t * @return The TextFormat object that represents the formatting properties\r\n\t *         for the specified text.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the current selection with the contents of the <code>value</code>\r\n\t * parameter. The text is inserted at the position of the current selection,\r\n\t * using the current default character format and default paragraph format.\r\n\t * The text is not treated as HTML.\r\n\t *\r\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\r\n\t * delete text without disrupting the character and paragraph formatting of\r\n\t * the rest of the text.</p>\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param value The string to replace the currently selected text.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceSelectedText(value:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the range of characters that the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters specify with the contents of the\r\n\t * <code>newText</code> parameter. As designed, the text from\r\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param beginIndex The zero-based index value for the start position of the\r\n\t *                   replacement range.\r\n\t * @param endIndex   The zero-based index position of the first character\r\n\t *                   after the desired text span.\r\n\t * @param newText    The text to use to replace the specified range of\r\n\t *                   characters.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets as selected the text designated by the index values of the first and\r\n\t * last characters, which are specified with the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters. If the two parameter values are the\r\n\t * same, this method sets the insertion point, as if you set the\r\n\t * <code>caretIndex</code> property.\r\n\t * \r\n\t * @param beginIndex The zero-based index value of the first character in the\r\n\t *                   selection(for example, the first character is 0, the\r\n\t *                   second character is 1, and so on).\r\n\t * @param endIndex   The zero-based index value of the last character in the\r\n\t *                   selection.\r\n\t */\r\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the text formatting that the <code>format</code> parameter\r\n\t * specifies to the specified text in a text field. The value of\r\n\t * <code>format</code> must be a TextFormat object that specifies the desired\r\n\t * text formatting changes. Only the non-null properties of\r\n\t * <code>format</code> are applied to the text field. Any property of\r\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\r\n\t * default, all of the properties of a newly created TextFormat object are\r\n\t * set to <code>null</code>.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t *\r\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\r\n\t * applied to a range of characters or to the entire body of text in a text\r\n\t * field. To apply the properties of format to all text in the text field, do\r\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\r\n\t * To apply the properties of the format to a range of text, specify values\r\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\r\n\t * You can use the <code>length</code> property to determine the index\r\n\t * values.</p>\r\n\t *\r\n\t * <p>The two types of formatting information in a TextFormat object are\r\n\t * character level formatting and paragraph level formatting. Each character\r\n\t * in a text field can have its own character formatting settings, such as\r\n\t * font name, font size, bold, and italic.</p>\r\n\t *\r\n\t * <p>For paragraphs, the first character of the paragraph is examined for\r\n\t * the paragraph formatting settings for the entire paragraph. Examples of\r\n\t * paragraph formatting settings are left margin, right margin, and\r\n\t * indentation.</p>\r\n\t *\r\n\t * <p>Any text inserted manually by the user, or replaced by the\r\n\t * <code>replaceSelectedText()</code> method, receives the default text field\r\n\t * formatting for new text, and not the formatting specified for the text\r\n\t * insertion point. To set the default formatting for new text, use\r\n\t * <code>defaultTextFormat</code>.</p>\r\n\t * \r\n\t * @param format A TextFormat object that contains character and paragraph\r\n\t *               formatting information.\r\n\t * @throws Error      This method cannot be used on a text field with a style\r\n\t *                    sheet.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if an embedded font is available with the specified\r\n\t * <code>fontName</code> and <code>fontStyle</code> where\r\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\r\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\r\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\r\n\t * embedded fonts are only used with the flash.text.engine classes. The two\r\n\t * types are distinguished by the <code>fontType</code> property of the\r\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\r\n\t * function.\r\n\t *\r\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\r\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\r\n\t * available at run time with the specified name and style is of type\r\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\r\n\t * embedded font were available with the specified name and style.</p>\r\n\t *\r\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\r\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\r\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\r\n\t * \r\n\t * @param fontName  The name of the embedded font to check.\r\n\t * @param fontStyle Specifies the font style to check. Use\r\n\t *                  <code>flash.text.FontStyle</code>\r\n\t * @return <code>true</code> if a compatible embedded font is available,\r\n\t *         otherwise <code>false</code>.\r\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\r\n\t *                       of <code>flash.text.FontStyle</code>.\r\n\t */\r\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n    public clone() : DisplayObject\r\n    {\r\n        var clone = new TextField();\r\n        this._iCopyToTextField(clone);\r\n        return clone;\r\n    }\r\n\r\n    public _iCopyToTextField(clone:TextField):void\r\n    {\r\n        this._iCopyToMesh(clone);\r\n        clone.textFormat = clone.textFormat;\r\n        clone.textColor = clone.textColor;\r\n        clone.text = clone.text;\r\n    }\r\n}\r\n\r\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass CastError extends Error\r\n{\r\n\tconstructor(message:string)\r\n\t{\r\n\t\tsuper(message);\r\n\t}\r\n}\r\n\r\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\n/**\r\n * @class away.events.CameraEvent\r\n */\r\nclass CameraEvent extends Event\r\n{\r\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\r\n\r\n\tprivate _camera:Camera;\r\n\r\n\tconstructor(type:string, camera:Camera)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._camera = camera;\r\n\t}\r\n\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._camera;\r\n\t}\r\n}\r\n\r\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass DisplayObjectEvent extends Event\r\n{\r\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\r\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\r\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\r\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\r\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\r\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\r\n    public static GLOBAL_COLOR_TRANSFORM_CHANGED:string = \"globalColorTransformChanged\";\r\n\r\n\tpublic object:DisplayObject;\r\n\r\n\tconstructor(type:string, object:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis.object = object;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass LightEvent extends Event\r\n{\r\n\r\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new LightEvent(this.type);\r\n\t}\r\n}\r\n\r\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass MaterialEvent extends Event\r\n{\r\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\r\n * TODO: we don't have screenZ data, tho this should be easy to implement\r\n */\r\nclass MouseEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:MouseEvent;\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOver3d event object.\r\n\t */\r\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOut3d event object.\r\n\t */\r\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseUp3d event object.\r\n\t */\r\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseDown3d event object.\r\n\t */\r\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseMove3d event object.\r\n\t */\r\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOver3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOut3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a click3d event object.\r\n\t */\r\n\tpublic static CLICK:string = \"click3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a doubleClick3d event object.\r\n\t */\r\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseWheel3d event object.\r\n\t */\r\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\r\n\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\r\n\t */\r\n\tpublic delta:number;\r\n\r\n\t/**\r\n\t * Create a new MouseEvent object.\r\n\t * @param type The type of the MouseEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\tresult.delta = this.delta;\r\n\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\r\n\t\tresult._iParentEvent = this;\r\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.RenderableOwnerEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass RenderableOwnerEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a Renderable owners's render object owner has been updated.\r\n\t */\r\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\r\n\r\n\tprivate _renderOwner:IRenderOwner;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param dataType An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, renderOwner:IRenderOwner)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._renderOwner = renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * The renderobject owner of the renderable owner.\r\n\t */\r\n\tpublic get renderOwner():IRenderOwner\r\n\t{\r\n\t\treturn this._renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\r\n\t}\r\n}\r\n\r\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass RendererEvent extends Event\r\n{\r\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\r\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ResizeEvent extends Event\r\n{\r\n\tpublic static RESIZE:string = \"resize\";\r\n\r\n\tprivate _oldHeight:number;\r\n\tprivate _oldWidth:number;\r\n\r\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._oldHeight = oldHeight;\r\n\t\tthis._oldWidth = oldWidth;\r\n\t}\r\n\r\n\tpublic get oldHeight():number\r\n\t{\r\n\t\treturn this._oldHeight;\r\n\t}\r\n\r\n\tpublic get oldWidth():number\r\n\t{\r\n\t\treturn this._oldWidth;\r\n\t}\r\n}\r\n\r\nexport = ResizeEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass SceneEvent extends Event\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\tconstructor(type:string, displayObject:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n}\r\n\r\nexport = SceneEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass DefaultMaterialManager\r\n{\r\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\r\n\tprivate static _defaultTriangleMaterial:BasicMaterial;\r\n\tprivate static _defaultLineMaterial:BasicMaterial;\r\n\tprivate static _defaultTexture:Single2DTexture;\r\n\r\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultLineMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultLineMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultLineMaterial;\r\n\t\t} else {\r\n\t\t\tif (!DefaultMaterialManager._defaultTriangleMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultTriangleMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultTriangleMaterial;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):Single2DTexture\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTexture;\r\n\t}\r\n\r\n\tprivate static createDefaultTexture()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultBitmapImage2D = DefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\r\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\r\n\t}\r\n\r\n\tpublic static createCheckeredBitmapImage2D():BitmapImage2D\r\n\t{\r\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\r\n\r\n\t\t//create chekerboard\r\n\t\tvar i:number, j:number;\r\n\t\tfor (i = 0; i < 8; i++) {\r\n\t\t\tfor (j = 0; j < 8; j++) {\r\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\r\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn b;\r\n\t}\r\n\r\n\tprivate static createDefaultTriangleMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.name = \"defaultTriangleMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultLineMaterial()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultLineMaterial = new BasicMaterial();\r\n\t\tDefaultMaterialManager._defaultLineMaterial.name = \"defaultLineMaterial\";\r\n\t}\r\n}\r\n\r\nexport = DefaultMaterialManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\r\n\r\n/**\r\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\r\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\r\n */\r\nclass MouseManager\r\n{\r\n\tprivate static _instance:MouseManager;\r\n\r\n\tprivate _viewLookup:Array<View> = new Array<View>();\r\n\r\n\tpublic _iActiveDiv:HTMLDivElement;\r\n\tpublic _iUpdateDirty:boolean;\r\n\tpublic _iCollidingObject:PickingCollisionVO;\r\n\t\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\r\n\r\n\tprivate _mouseMoveEvent:MouseEvent;\r\n\r\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\r\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\r\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\r\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\r\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\r\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\r\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\r\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\r\n\r\n\tprivate onClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\r\n\r\n\t/**\r\n\t * Creates a new <code>MouseManager</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\r\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\r\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\r\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\r\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\r\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\r\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\r\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\r\n\t}\r\n\r\n\tpublic static getInstance():MouseManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new MouseManager());\r\n\t}\r\n\r\n\tpublic fireMouseEvents(forceMouseMove:boolean)\r\n\t{\r\n\t\t // If colliding object has changed, queue over/out events.\r\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\r\n\r\n\t\t\tif (this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\r\n\t\t}\r\n\r\n\t\t // Fire mouse move events here if forceMouseMove is on.\r\n\t\tif (forceMouseMove && this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\r\n\r\n\t\tvar event:AwayMouseEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t // Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a mouseChildren = false hierarchy ).\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\r\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\r\n\t\t\tif (dispatcher)\r\n\t\t\t\tdispatcher.dispatchEvent(event);\r\n\t\t}\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._previousCollidingObject = this._iCollidingObject;\r\n\r\n\t\tthis._iUpdateDirty = false;\r\n\t}\r\n\r\n//\t\tpublic addViewLayer(view:View)\r\n//\t\t{\r\n//\t\t\tvar stg:Stage = view.stage;\r\n//\r\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\r\n//\t\t\tif (!view.stageGL.mouse3DManager)\r\n//\t\t\t\tview.stageGL.mouse3DManager = this;\r\n//\r\n//\t\t\tif (!hasKey(view))\r\n//\t\t\t\t_view3Ds[view] = 0;\r\n//\r\n//\t\t\t_childDepth = 0;\r\n//\t\t\ttraverseDisplayObjects(stg);\r\n//\t\t\t_viewCount = _childDepth;\r\n//\t\t}\r\n\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.push(view);\r\n\t}\r\n\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tif (sourceEvent) {\r\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\t\tevent.altKey = sourceEvent.altKey;\r\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\t\tevent.screenX = sourceEvent.clientX;\r\n\t\t\tevent.screenY = sourceEvent.clientY;\r\n\t\t}\r\n\r\n\t\tif (collider == null)\r\n\t\t\tcollider = this._iCollidingObject;\r\n\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Listeners.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate onMouseMove(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\r\n\t}\r\n\r\n\tprivate onMouseOut(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = null;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseOut, event);\r\n\t}\r\n\r\n\tprivate onMouseOver(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseOver, event);\r\n\t}\r\n\r\n\tprivate onClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseClick, event);\r\n\t}\r\n\r\n\tprivate onDoubleClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\r\n\t}\r\n\r\n\tprivate onMouseDown(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDown, event);\r\n\t}\r\n\r\n\tprivate onMouseUp(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseUp , event);\r\n\t}\r\n\r\n\tprivate onMouseWheel(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\r\n\t}\r\n\r\n\r\n\tprivate updateColliders(event:MouseEvent)\r\n\t{\r\n\t\tif (this._iUpdateDirty)\r\n\t\t\treturn;\r\n\r\n\t\tvar view:View;\r\n\t\tvar bounds:ClientRect;\r\n\t\tvar mouseX:number = event.clientX;\r\n\t\tvar mouseY:number = event.clientY;\r\n\t\tvar len:number = this._viewLookup.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tview = this._viewLookup[i];\r\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\r\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\r\n\t\t\t\tview._pMouseX = null;\r\n\t\t\t\tview._pMouseY = null;\r\n\t\t\t} else {\r\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\r\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\r\n\t\t\t\tview.updateCollider();\r\n\r\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._iUpdateDirty = true;\r\n\t}\r\n}\r\n\r\nexport = MouseManager;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\n\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n/**\r\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass BasicMaterial extends MaterialBase\r\n{\r\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\r\n\r\n    private _preserveAlpha:boolean = false;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn BasicMaterial.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new BasicMaterial object.\r\n\t *\r\n\t * @param texture The texture used for the material's albedo color.\r\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\r\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\r\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\r\n\t */\r\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(color?:number, alpha?:number);\r\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (textureColor instanceof Image2D)\r\n\t\t\ttextureColor = new Single2DTexture(textureColor);\r\n\r\n\t\tif (textureColor instanceof TextureBase) {\r\n\t\t\tthis.texture = <TextureBase> textureColor;\r\n\r\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\r\n\t\t\tthis.repeat = repeat;\r\n\t\t\tthis.mipmap = mipmap;\r\n\t\t} else {\r\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\r\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\r\n\t\t}\r\n\t}\r\n    /**\r\n     * Indicates whether alpha should be preserved - defaults to false\r\n     */\r\n    public get preserveAlpha():boolean\r\n    {\r\n        return this._preserveAlpha;\r\n    }\r\n    public set preserveAlpha(value:boolean)\r\n    {\r\n        if (this._preserveAlpha == value)\r\n            return;\r\n        this._preserveAlpha = value;\r\n        this._pInvalidateRender();\r\n    }\r\n}\r\n\r\nexport = BasicMaterial;",
    "/**\r\n * Enumeration class for defining which lighting types affect the specific material\r\n * lighting component (diffuse and specular). This can be useful if, for example, you\r\n * want to use light probes for diffuse global lighting, but want specular reflections from\r\n * traditional light sources without those affecting the diffuse light.\r\n *\r\n * @see away.materials.ColorMaterial.diffuseLightSources\r\n * @see away.materials.ColorMaterial.specularLightSources\r\n * @see away.materials.TextureMaterial.diffuseLightSources\r\n * @see away.materials.TextureMaterial.specularLightSources\r\n */\r\nclass LightSources\r\n{\r\n\t/**\r\n\t * Defines normal lights are to be used as the source for the lighting\r\n\t * component.\r\n\t */\r\n\tpublic static LIGHTS:number = 0x01;\r\n\r\n\t/**\r\n\t * Defines that global lighting probes are to be used as the source for the\r\n\t * lighting component.\r\n\t */\r\n\tpublic static PROBES:number = 0x02;\r\n\r\n\t/**\r\n\t * Defines that both normal and global lighting probes  are to be used as the\r\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\r\n\t */\r\n\tpublic static ALL:number = 0x03;\r\n}\r\n\r\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n\r\n/**\r\n * MaterialBase forms an abstract base class for any material.\r\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\r\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\r\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\r\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\r\n *\r\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\r\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\r\n * shaders, or entire new material frameworks.\r\n */\r\nclass MaterialBase extends AssetBase implements IRenderOwner\r\n{\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _pUseColorTransform:boolean = false;\r\n\tprivate _frameRect:Rectangle;\r\n\tprivate _alphaBlending:boolean = false;\r\n\tprivate _alpha:number = 1;\r\n\t\r\n\tprivate _sizeChanged:MaterialEvent;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tpublic _pAnimateUVs:boolean = false;\r\n\tprivate _enableLightFallOff:boolean = true;\r\n\tprivate _specularLightSources:number = 0x01;\r\n\tprivate _diffuseLightSources:number = 0x03;\r\n\r\n\t/**\r\n\t * An object to contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\r\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\r\n\t * that the deferred renderer knows not to take the forward rendering path.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iClassification:string;\r\n\r\n\r\n\t/**\r\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iMaterialId:number = 0;\r\n\r\n\tpublic _iBaseScreenPassIndex:number = 0;\r\n\r\n\tprivate _bothSides:boolean = false; // update\r\n\tprivate _animationSet:IAnimationSet;\r\n\r\n\t/**\r\n\t * A list of material owners, renderables or custom Entities.\r\n\t */\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\r\n\tprivate _alphaPremultiplied:boolean;\r\n\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\r\n\tprivate _mipmap:boolean = true;\r\n\tprivate _smooth:boolean = true;\r\n\tprivate _repeat:boolean = false;\r\n\tprivate _color:number = 0xFFFFFF;\r\n\tpublic _pTexture:TextureBase;\r\n\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\r\n\tpublic _pHeight:number = 1;\r\n\tpublic _pWidth:number = 1;\r\n\r\n\tprivate _onLightChangeDelegate:(event:Event) => void;\r\n\r\n\t/**\r\n\t * Creates a new MaterialBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._iMaterialId = Number(this.id);\r\n\r\n\t\tthis._owners = new Array<IRenderableOwner>();\r\n\r\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\r\n\r\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\r\n\t}\r\n\r\n\t/**\r\n\t * The alpha of the surface.\r\n\t */\r\n\tpublic get alpha():number\r\n\t{\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tpublic set alpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._alpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alpha = value;\r\n\r\n\t\tif (this._colorTransform == null)\r\n\t\t\tthis._colorTransform = new ColorTransform();\r\n\r\n\t\tthis._colorTransform.alphaMultiplier = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\r\n\t * example when using textures of foliage, consider using alphaThreshold instead.\r\n\t */\r\n\tpublic get alphaBlending():boolean\r\n\t{\r\n\t\treturn this._alphaBlending;\r\n\t}\r\n\r\n\tpublic set alphaBlending(value:boolean)\r\n\t{\r\n\t\tif (this._alphaBlending == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaBlending = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic get frameRect():Rectangle\r\n\t{\r\n\t\treturn this._frameRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._pHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\tpublic set lightPicker(value:LightPickerBase)\r\n\t{\r\n\t\tif (this._pLightPicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pLightPicker = value;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\r\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\r\n\t */\r\n\tpublic get repeat():boolean\r\n\t{\r\n\t\treturn this._repeat;\r\n\t}\r\n\r\n\tpublic set repeat(value:boolean)\r\n\t{\r\n\t\tif (this._repeat == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._repeat = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The diffuse reflectivity color of the surface.\r\n\t */\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tif (this._color == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._color = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The texture object to use for the albedo colour.\r\n\t */\r\n\tpublic get texture():TextureBase\r\n\t{\r\n\t\treturn this._pTexture;\r\n\t}\r\n\r\n\tpublic set texture(value:TextureBase)\r\n\t{\r\n\t\tif (this._pTexture == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pTexture = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\r\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\r\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\r\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\r\n\r\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\r\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\r\n\t\t} else {\r\n\t\t\tthis._frameRect = null;\r\n\t\t\tthis._pHeight = 1;\r\n\t\t\tthis._pWidth = 1;\r\n\t\t}\r\n\r\n\r\n\t\tthis._pNotifySizeChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get animateUVs():boolean\r\n\t{\r\n\t\treturn this._pAnimateUVs;\r\n\t}\r\n\r\n\tpublic set animateUVs(value:boolean)\r\n\t{\r\n\t\tif (this._pAnimateUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAnimateUVs = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get useColorTransform():boolean\r\n\t{\r\n\t\treturn this._pUseColorTransform;\r\n\t}\r\n\r\n\tpublic set useColorTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pUseColorTransform == value)\r\n\t\t\treturn;\r\n\t\tthis._pUseColorTransform = value;\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\r\n\t * compatibility for constrained mode.\r\n\t */\r\n\tpublic get enableLightFallOff():boolean\r\n\t{\r\n\t\treturn this._enableLightFallOff;\r\n\t}\r\n\r\n\tpublic set enableLightFallOff(value:boolean)\r\n\t{\r\n\t\tif (this._enableLightFallOff == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._enableLightFallOff = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\r\n\t * and/or light probes for diffuse reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get diffuseLightSources():number\r\n\t{\r\n\t\treturn this._diffuseLightSources;\r\n\t}\r\n\r\n\tpublic set diffuseLightSources(value:number)\r\n\t{\r\n\t\tif (this._diffuseLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._diffuseLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\r\n\t * and/or light probes for specular reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get specularLightSources():number\r\n\t{\r\n\t\treturn this._specularLightSources;\r\n\t}\r\n\r\n\tpublic set specularLightSources(value:number)\r\n\t{\r\n\t\tif (this._specularLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._specularLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether or not the material should cull triangles facing away from the camera.\r\n\t */\r\n\tpublic get bothSides():boolean\r\n\t{\r\n\t\treturn this._bothSides;\r\n\t}\r\n\r\n\tpublic set bothSides(value:boolean)\r\n\t{\r\n\t\tif (this._bothSides = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._bothSides = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether visible textures (or other pixels) used by this material have\r\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\r\n\t * blended alpha edges.\r\n\t */\r\n\tpublic get alphaPremultiplied():boolean\r\n\t{\r\n\t\treturn this._alphaPremultiplied;\r\n\t}\r\n\r\n\tpublic set alphaPremultiplied(value:boolean)\r\n\t{\r\n\t\tif (this._alphaPremultiplied == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaPremultiplied = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._pWidth;\r\n\t}\r\n\r\n\t//\r\n\t// MATERIAL MANAGEMENT\r\n\t//\r\n\t/**\r\n\t * Mark an IRenderableOwner as owner of this material.\r\n\t * Assures we're not using the same material across renderables with different animations, since the\r\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\r\n\t *\r\n\t * @param owner The IRenderableOwner that had this material assigned\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iAddOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.push(owner);\r\n\r\n\t\tvar animationSet:IAnimationSet;\r\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\r\n\r\n\t\tif (animator)\r\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\r\n\r\n\t\tif (owner.animator) {\r\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\r\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\r\n\t\t\t} else {\r\n\t\t\t\tif (this._animationSet != animationSet) {\r\n\r\n\t\t\t\t\tthis._animationSet = animationSet;\r\n\r\n\t\t\t\t\tthis.invalidateAnimation();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an IRenderableOwner as owner.\r\n\t * @param owner\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\r\n\r\n\t\tif (this._owners.length == 0) {\r\n\t\t\tthis._animationSet = null;\r\n\r\n\t\t\tthis.invalidateAnimation();\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pInvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\tprivate invalidateAnimation()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateAnimation();\r\n\t}\r\n\t\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the light picker's configuration changed.\r\n\t */\r\n\tprivate onLightsChange(event:Event)\r\n\t{\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pNotifySizeChanged()\r\n\t{\r\n\t\tif (!this._sizeChanged)\r\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\r\n\r\n\t\tthis.dispatchEvent(this._sizeChanged);\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n}\r\n\r\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\n\r\n/**\r\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\r\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\r\n * extended to provide more application-specific dynamic selection of lights.\r\n *\r\n * @see StaticLightPicker\r\n */\r\nclass LightPickerBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset LightPicker]\";\r\n\r\n\tpublic _pNumPointLights:number = 0;\r\n\tpublic _pNumDirectionalLights:number = 0;\r\n\tpublic _pNumCastingPointLights:number = 0;\r\n\tpublic _pNumCastingDirectionalLights:number = 0;\r\n\tpublic _pNumLightProbes:number = 0;\r\n\r\n\tpublic _pAllPickedLights:Array<LightBase>;\r\n\tpublic _pPointLights:Array<PointLight>;\r\n\tpublic _pCastingPointLights:Array<PointLight>;\r\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pLightProbes:Array<LightProbe>;\r\n\tpublic _pLightProbeWeights:Array<number>;\r\n\r\n\t/**\r\n\t * Creates a new LightPickerBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes resources used by the light picker.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightPickerBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that will be provided.\r\n\t */\r\n\tpublic get numDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of point lights that will be provided.\r\n\t */\r\n\tpublic get numPointLights():number\r\n\t{\r\n\t\treturn this._pNumPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of point lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingPointLights():number\r\n\t{\r\n\t\treturn this._pNumCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of light probes that will be provided.\r\n\t */\r\n\tpublic get numLightProbes():number\r\n\t{\r\n\t\treturn this._pNumLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights to be used for shading.\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights to be used for shading.\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingPointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected light probes to be used for shading.\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._pLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The weights for each light probe, defining their influence on the object.\r\n\t */\r\n\tpublic get lightProbeWeights():Array<number>\r\n\t{\r\n\t\treturn this._pLightProbeWeights;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of all the collected lights.\r\n\t */\r\n\tpublic get allPickedLights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pAllPickedLights;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\r\n\t */\r\n\tpublic collectLights(renderable:IRenderable)\r\n\t{\r\n\t\tthis.updateProbeWeights(renderable);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\r\n\t * @param renderable The renderble for which to calculate the light probes' influence.\r\n\t */\r\n\tprivate updateProbeWeights(renderable:IRenderable)\r\n\t{\r\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\r\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\r\n\t\tvar lightPos:Vector3D;\r\n\r\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\r\n\t\tvar dx:number, dy:number, dz:number;\r\n\t\tvar w:number, total:number = 0;\r\n\t\tvar i:number;\r\n\r\n\t\t// calculates weights for probes\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\r\n\r\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\r\n\t\t\tdx = rx - lightPos.x;\r\n\t\t\tdy = ry - lightPos.y;\r\n\t\t\tdz = rz - lightPos.z;\r\n\t\t\t// weight is inversely proportional to square of distance\r\n\t\t\tw = dx*dx + dy*dy + dz*dz;\r\n\r\n\t\t\t// just... huge if at the same spot\r\n\t\t\tw = w > .00001? 1/w : 50000000;\r\n\t\t\tthis._pLightProbeWeights[i] = w;\r\n\t\t\ttotal += w;\r\n\t\t}\r\n\r\n\t\t// normalize\r\n\t\ttotal = 1/total;\r\n\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\r\n\t\t\tthis._pLightProbeWeights[i] *= total;\r\n\t}\r\n}\r\n\r\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\n\r\n/**\r\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\r\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\r\n * occur.\r\n */\r\nclass StaticLightPicker extends LightPickerBase\r\n{\r\n\tprivate _lights:Array<any>;\r\n\tprivate _onCastShadowChangeDelegate:Function;\r\n\r\n\t/**\r\n\t * Creates a new StaticLightPicker object.\r\n\t * @param lights The lights to be used for shading.\r\n\t */\r\n\tconstructor(lights)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\r\n\r\n\t\tthis.lights = lights;\r\n\t}\r\n\r\n\t/**\r\n\t * The lights used for shading.\r\n\t */\r\n\tpublic get lights()\r\n\t{\r\n\t\treturn this._lights;\r\n\t}\r\n\r\n\tpublic set lights(value:Array<any>)\r\n\t{\r\n\t\tvar numPointLights:number = 0;\r\n\t\tvar numDirectionalLights:number = 0;\r\n\t\tvar numCastingPointLights:number = 0;\r\n\t\tvar numCastingDirectionalLights:number = 0;\r\n\t\tvar numLightProbes:number = 0;\r\n\t\tvar light:LightBase;\r\n\r\n\t\tif (this._lights)\r\n\t\t\tthis.clearListeners();\r\n\r\n\t\tthis._lights = value;\r\n\t\tthis._pAllPickedLights = value;\r\n\t\tthis._pPointLights = new Array<PointLight>();\r\n\t\tthis._pCastingPointLights = new Array<PointLight>();\r\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pLightProbes = new Array<LightProbe>();\r\n\r\n\t\tvar len:number = value.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tlight = value[i];\r\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\r\n\t\t\tif (light instanceof PointLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\r\n\r\n\t\t\t} else if (light instanceof DirectionalLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\r\n\r\n\t\t\t} else if (light instanceof LightProbe) {\r\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\r\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\r\n\t\tthis._pNumPointLights = numPointLights;\r\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\r\n\t\tthis._pNumLightProbes = numLightProbes;\r\n\r\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\r\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\r\n\r\n\t\t// notify material lights have changed\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove configuration change listeners on the lights.\r\n\t */\r\n\tprivate clearListeners()\r\n\t{\r\n\t\tvar len:number = this._lights.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Notifies the material of a configuration change.\r\n\t */\r\n\tprivate onCastShadowChange(event:LightEvent)\r\n\t{\r\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\r\n\t\t// But keep seperated in multipass\r\n\r\n\t\tvar light:LightBase = <LightBase> event.target;\r\n\r\n\t\tif (light instanceof PointLight)\r\n\t\t\tthis.updatePointCasting(<PointLight> light);\r\n\t\telse if (light instanceof DirectionalLight)\r\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\r\n\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a directional light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updateDirectionalCasting(light:DirectionalLight)\r\n\t{\r\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumDirectionalLights;\r\n\t\t\t++this._pNumCastingDirectionalLights;\r\n\r\n\r\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pCastingDirectionalLights.push(light);\r\n\r\n\t\t} else {\r\n\t\t\t++this._pNumDirectionalLights;\r\n\t\t\t--this._pNumCastingDirectionalLights;\r\n\r\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pDirectionalLights.push(light);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a point light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updatePointCasting(light:PointLight)\r\n\t{\r\n\t\tvar pl:PointLight = <PointLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumPointLights;\r\n\t\t\t++this._pNumCastingPointLights;\r\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pCastingPointLights.push(light);\r\n\t\t} else {\r\n\t\t\t++this._pNumPointLights;\r\n\t\t\t--this._pNumCastingPointLights;\r\n\r\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pPointLights.push(light);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\r\n{\r\n\tpublic _pScissorRects:Rectangle[];\r\n\tprivate _pScissorRectsInvalid:boolean = true;\r\n\tprivate _splitRatios:number[];\r\n\r\n\tprivate _numCascades:number /*int*/;\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\r\n\r\n\tprivate _texOffsetsX:Array<number>;\r\n\tprivate _texOffsetsY:Array<number>;\r\n\r\n\tprivate _changeDispatcher:EventDispatcher;\r\n\tprivate _nearPlaneDistances:number[];\r\n\r\n\tconstructor(numCascades:number /*uint*/ = 3)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (numCascades < 1 || numCascades > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = numCascades;\r\n\t\tthis._changeDispatcher = new EventDispatcher(this);\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tpublic getSplitRatio(index:number /*uint*/):number\r\n\t{\r\n\t\treturn this._splitRatios[index];\r\n\t}\r\n\r\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (index >= this._numCascades)\r\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\r\n\r\n\t\tthis._splitRatios[index] = value;\r\n\t}\r\n\r\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\r\n\t{\r\n\t\treturn this._depthCameras[partition].viewProjection;\r\n\t}\r\n\r\n\tprivate init()\r\n\t{\r\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\r\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\r\n\r\n\t\tvar s:number = 1;\r\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\r\n\t\t\tthis._splitRatios[i] = s;\r\n\t\t\ts *= .4;\r\n\t\t}\r\n\r\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\r\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\r\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\r\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\r\n\t\tthis._depthCameras = new Array<Camera>();\r\n\r\n\t\tfor (i = 0; i < this._numCascades; ++i) {\r\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\r\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\r\n\t{\r\n\t\tsuper._pSetDepthMapSize(value);\r\n\r\n\t\tthis.invalidateScissorRects();\r\n\t}\r\n\r\n\tprivate invalidateScissorRects()\r\n\t{\r\n\t\tthis._pScissorRectsInvalid = true;\r\n\t}\r\n\r\n\tpublic get numCascades():number /*int*/\r\n\t{\r\n\t\treturn this._numCascades;\r\n\t}\r\n\r\n\tpublic set numCascades(value:number /*int*/)\r\n\t{\r\n\t\tif (value == this._numCascades)\r\n\t\t\treturn;\r\n\r\n\t\tif (value < 1 || value > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = value;\r\n\t\tthis.invalidateScissorRects();\r\n\t\tthis.init();\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tif (this._pScissorRectsInvalid)\r\n\t\t\tthis.updateScissorRects();\r\n\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\r\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\r\n\t}\r\n\r\n\tprivate updateScissorRects()\r\n\t{\r\n\t\tvar half:number = this._pDepthMapSize*.5;\r\n\r\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\r\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\r\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\r\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\r\n\r\n\t\tthis._pScissorRectsInvalid = false;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar matrix:Matrix3D;\r\n\t\tvar projection:IProjection = viewCamera.projection;\r\n\t\tvar projectionNear:number = projection.near;\r\n\t\tvar projectionRange:number = projection.far - projectionNear;\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\r\n\t\t\tmatrix = this._depthLenses[i].matrix;\r\n\r\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\r\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\r\n\r\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\r\n\r\n\t\t\tthis._depthLenses[i].matrix = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\r\n\t{\r\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar xN:number, yN:number, zN:number;\r\n\t\tvar xF:number, yF:number, zF:number;\r\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\r\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\r\n\t\twhile (i < 12) {\r\n\t\t\txN = this._pLocalFrustum[i];\r\n\t\t\tyN = this._pLocalFrustum[i + 1];\r\n\t\t\tzN = this._pLocalFrustum[i + 2];\r\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\r\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\r\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\r\n\t\t\tif (xN < minX)\r\n\t\t\t\tminX = xN;\r\n\t\t\tif (xN > maxX)\r\n\t\t\t\tmaxX = xN;\r\n\t\t\tif (yN < minY)\r\n\t\t\t\tminY = yN;\r\n\t\t\tif (yN > maxY)\r\n\t\t\t\tmaxY = yN;\r\n\t\t\tif (zN > maxZ)\r\n\t\t\t\tmaxZ = zN;\r\n\t\t\tif (xF < minX)\r\n\t\t\t\tminX = xF;\r\n\t\t\tif (xF > maxX)\r\n\t\t\t\tmaxX = xF;\r\n\t\t\tif (yF < minY)\r\n\t\t\t\tminY = yF;\r\n\t\t\tif (yF > maxY)\r\n\t\t\t\tmaxY = yF;\r\n\t\t\tif (zF > maxZ)\r\n\t\t\t\tmaxZ = zF;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tminZ = 1;\r\n\r\n\t\tvar w:number = (maxX - minX);\r\n\t\tvar h:number = (maxY - minY);\r\n\t\tvar d:number = 1/(maxZ - minZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\r\n\t\th = Math.floor(h/snap2 + 1)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -minZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t\tmatrix.appendScale(.96, .96, 1);\r\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\r\n\t\tmatrix.appendScale(.5, .5, 1);\r\n\t}\r\n\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.addEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic dispatchEvent(event:Event)\r\n\t{\r\n\t\treturn this._changeDispatcher.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic hasEventListener(type:string):boolean\r\n\t{\r\n\t\treturn this._changeDispatcher.hasEventListener(type);\r\n\t}\r\n\r\n\tget _iNearPlaneDistances():Array<number>\r\n\t{\r\n\t\treturn this._nearPlaneDistances;\r\n\t}\r\n}\r\n\r\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\nclass CubeMapShadowMapper extends ShadowMapperBase\r\n{\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _projections:Array<PerspectiveProjection>;\r\n\tprivate _needsRender:Array<boolean>;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pDepthMapSize = 512;\r\n\t\tthis._needsRender = new Array();\r\n\t\tthis.initCameras();\r\n\t}\r\n\r\n\tprivate initCameras()\r\n\t{\r\n\t\tthis._depthCameras = new Array();\r\n\t\tthis._projections = new Array();\r\n\r\n\t\t// posX, negX, posY, negY, posZ, negZ\r\n\t\tthis.addCamera(0, 90, 0);\r\n\t\tthis.addCamera(0, -90, 0);\r\n\t\tthis.addCamera(-90, 0, 0);\r\n\t\tthis.addCamera(90, 0, 0);\r\n\t\tthis.addCamera(0, 0, 0);\r\n\t\tthis.addCamera(0, 180, 0);\r\n\t}\r\n\r\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\r\n\t{\r\n\t\tvar cam:Camera = new Camera();\r\n\t\tcam.rotationX = rotationX;\r\n\t\tcam.rotationY = rotationY;\r\n\t\tcam.rotationZ = rotationZ;\r\n\t\tcam.projection.near = .01;\r\n\r\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\r\n\t\tprojection.fieldOfView = 90;\r\n\t\tthis._projections.push(projection);\r\n\t\tcam.projection._iAspectRatio = 1;\r\n\t\tthis._depthCameras.push(cam);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateDepthTexture():SingleCubeTexture\r\n\t{\r\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar light:PointLight = <PointLight>(this._pLight);\r\n\t\tvar maxDistance:number = light._pFallOff;\r\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\r\n\r\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tthis._projections[i].far = maxDistance;\r\n\t\t\tthis._depthCameras[i].transform.position = pos;\r\n\t\t\tthis._needsRender[i] = true;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tif (this._needsRender[i]) {\r\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\r\n\t\t\t\tthis._pCasterCollector.clear();\r\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass DirectionalShadowMapper extends ShadowMapperBase\r\n{\r\n\tpublic _pOverallDepthCamera:Camera;\r\n\tpublic _pLocalFrustum:Array<number>;\r\n\r\n\tpublic _pLightOffset:number = 10000;\r\n\tpublic _pMatrix:Matrix3D;\r\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\r\n\tpublic _pSnap:number = 64;\r\n\r\n\tpublic _pCullPlanes:Array<Plane3D>;\r\n\tpublic _pMinZ:number;\r\n\tpublic _pMaxZ:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pCullPlanes = [];\r\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\r\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\r\n\t\tthis._pLocalFrustum = [];\r\n\t\tthis._pMatrix = new Matrix3D();\r\n\t}\r\n\r\n\tpublic get snap():number\r\n\t{\r\n\t\treturn this._pSnap;\r\n\t}\r\n\r\n\tpublic set snap(value:number)\r\n\t{\r\n\t\tthis._pSnap = value;\r\n\t}\r\n\r\n\tpublic get lightOffset():number\r\n\t{\r\n\t\treturn this._pLightOffset;\r\n\t}\r\n\r\n\tpublic set lightOffset(value:number)\r\n\t{\r\n\t\tthis._pLightOffset = value;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get iDepthProjection():Matrix3D\r\n\t{\r\n\t\treturn this._pOverallDepthCamera.viewProjection;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._pMaxZ - this._pMinZ;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\r\n\t{\r\n\t\tif (this._depthMap == depthMap)\r\n\t\t\treturn;\r\n\r\n\t\tsuper.iSetDepthMap(depthMap);\r\n\r\n\t\tif (this._depthMap) {\r\n\t\t\tthis._explicitDepthMap = true;\r\n\t\t\tthis._pDepthMapSize = depthMap.width;\r\n\t\t} else {\r\n\t\t\tthis._explicitDepthMap = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():Single2DTexture\r\n\t{\r\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\r\n\t}\r\n\r\n\t//@protected\r\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\r\n\t{\r\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\r\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\r\n\t\tthis._pCullPlanes.length = 4;\r\n\r\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\r\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\r\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\r\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tvar dir:Vector3D = light.sceneDirection;\r\n\t\tvar dirX:number = dir.x;\r\n\t\tvar dirY:number = dir.y;\r\n\t\tvar dirZ:number = dir.z;\r\n\t\tvar j:number = 4;\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\r\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\r\n\t\t\t\tthis._pCullPlanes[j++] = plane;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\t}\r\n\r\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar dir:Vector3D;\r\n\t\tvar x:number, y:number, z:number;\r\n\t\tvar minX:number, minY:number;\r\n\t\tvar maxX:number, maxY:number;\r\n\t\tvar i:number;\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tdir = light.sceneDirection;\r\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\r\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tthis._pOverallDepthCamera.x = x;\r\n\t\tthis._pOverallDepthCamera.y = y;\r\n\t\tthis._pOverallDepthCamera.z = z;\r\n\r\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\r\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\r\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\r\n\r\n\t\tminX = maxX = this._pLocalFrustum[0];\r\n\t\tminY = maxY = this._pLocalFrustum[1];\r\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\r\n\r\n\t\ti = 3;\r\n\t\twhile (i < 24) {\r\n\t\t\tx = this._pLocalFrustum[i];\r\n\t\t\ty = this._pLocalFrustum[i + 1];\r\n\t\t\tz = this._pLocalFrustum[i + 2];\r\n\t\t\tif (x < minX)\r\n\t\t\t\tminX = x;\r\n\t\t\tif (x > maxX)\r\n\t\t\t\tmaxX = x;\r\n\t\t\tif (y < minY)\r\n\t\t\t\tminY = y;\r\n\t\t\tif (y > maxY)\r\n\t\t\t\tmaxY = y;\r\n\t\t\tif (z > this._pMaxZ)\r\n\t\t\t\tthis._pMaxZ = z;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tthis._pMinZ = 1;\r\n\r\n\t\tvar w:number = maxX - minX;\r\n\t\tvar h:number = maxY - minY;\r\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\r\n\t\th = Math.floor(h/snap2 + 2)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -this._pMinZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t}\r\n}\r\n\r\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\r\n{\r\n\tprivate _coverageRatio:number;\r\n\r\n\tconstructor(coverageRatio:number = .5)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.coverageRatio = coverageRatio;\r\n\t}\r\n\r\n\t/**\r\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\r\n\t */\r\n\tpublic get coverageRatio():number\r\n\t{\r\n\t\treturn this._coverageRatio;\r\n\t}\r\n\r\n\tpublic set coverageRatio(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1; else if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._coverageRatio = value;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\r\n\t\t\tvar v:number = corners[i];\r\n\t\t\tthis._pLocalFrustum[i] = v;\r\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\r\n\t\t}\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t}\r\n}\r\n\r\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass ShadowMapperBase\r\n{\r\n\r\n\tpublic _pCasterCollector:ShadowCasterCollector;\r\n\r\n\tpublic _depthMap:TextureBase;\r\n\tpublic _pDepthMapSize:number = 2048;\r\n\tpublic _pLight:LightBase;\r\n\tpublic _explicitDepthMap:boolean;\r\n\tprivate _autoUpdateShadows:boolean = true;\r\n\tpublic _iShadowsInvalid:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\r\n\t}\r\n\r\n\tpublic pCreateCasterCollector()\r\n\t{\r\n\t\treturn new ShadowCasterCollector();\r\n\t}\r\n\r\n\tpublic get autoUpdateShadows():boolean\r\n\t{\r\n\t\treturn this._autoUpdateShadows;\r\n\t}\r\n\r\n\tpublic set autoUpdateShadows(value:boolean)\r\n\t{\r\n\t\tthis._autoUpdateShadows = value;\r\n\t}\r\n\r\n\tpublic updateShadows()\r\n\t{\r\n\t\tthis._iShadowsInvalid = true;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:TextureBase)\r\n\t{\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = depthMap;\r\n\t}\r\n\r\n\tpublic get light():LightBase\r\n\t{\r\n\t\treturn this._pLight;\r\n\t}\r\n\r\n\tpublic set light(value:LightBase)\r\n\t{\r\n\t\tthis._pLight = value;\r\n\t}\r\n\r\n\tpublic get depthMap():TextureBase\r\n\t{\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\treturn this._depthMap;\r\n\t}\r\n\r\n\tpublic get depthMapSize():number\r\n\t{\r\n\t\treturn this._pDepthMapSize;\r\n\t}\r\n\r\n\tpublic set depthMapSize(value:number)\r\n\t{\r\n\t\tif (value == this._pDepthMapSize)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSetDepthMapSize(value);\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pCasterCollector = null;\r\n\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = null;\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():TextureBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\r\n\t{\r\n\t\tthis._iShadowsInvalid = false;\r\n\r\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\r\n\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value)\r\n\t{\r\n\t\tthis._pDepthMapSize = value;\r\n\r\n\t\tif (this._explicitDepthMap) {\r\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\r\n\t\t} else if (this._depthMap) {\r\n\t\t\tthis._depthMap.dispose();\r\n\t\t\tthis._depthMap = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ShadowMapperBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.CameraNode\r\n */\r\nclass CameraNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"cameraNode\";\r\n\r\n\tconstructor(pool:EntityNodePool, camera:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, camera, partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\r\n\t}\r\n}\r\n\r\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.DirectionalLightNode\r\n */\r\nclass DirectionalLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"directionalLightNode\";\r\n\r\n\tprivate _directionalLight:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param directionalLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, directionalLight:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, directionalLight, partition);\r\n\r\n\t\tthis._directionalLight = directionalLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\r\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.EntityNode\r\n */\r\nclass EntityNode extends NodeBase\r\n{\r\n\tpublic static id:string = \"entityNode\";\r\n\r\n\tprivate _pool:EntityNodePool;\r\n\tprivate _entity:IEntity;\r\n\tprivate _partition:Partition;\r\n\tprivate _bounds:BoundingVolumeBase;\r\n\tpublic _iUpdateQueueNext:EntityNode;\r\n\r\n\tconstructor(pool:EntityNodePool, entity:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._pool = pool;\r\n\t\tthis._entity = entity;\r\n\t\tthis._partition = partition;\r\n\t\tthis._iNumEntities = 1;\r\n\r\n\t\tthis.updateBounds();\r\n\r\n\t\tthis.debugVisible = this._entity.debugVisible;\r\n\t}\r\n\r\n\tpublic get entity():IEntity\r\n\t{\r\n\t\treturn this._entity;\r\n\t}\r\n\r\n\tpublic removeFromParent():void\r\n\t{\r\n\t\tif (this._iParent)\r\n\t\t\tthis._iParent.iRemoveNode(this);\r\n\r\n\t\tthis._iParent = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn this.entity.castsShadows;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\treturn this._bounds.isInFrustum(planes, numPlanes);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\ttraverser.applyEntity(this._entity);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\r\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\r\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\r\n\r\n\t\tif (!pickingCollisionVO.localNormal)\r\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\r\n\r\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\r\n\r\n\t\tif (rayEntryDistance < 0)\r\n\t\t\treturn false;\r\n\r\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\r\n\t\tpickingCollisionVO.rayPosition = rayPosition;\r\n\t\tpickingCollisionVO.rayDirection = rayDirection;\r\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\treturn this._bounds.boundsPrimitive;\r\n\t}\r\n\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tthis._bounds.invalidate();\r\n\r\n\t\tthis._partition.iMarkForUpdate(this);\r\n\t}\r\n\r\n\tpublic updateBounds()\r\n\t{\r\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\r\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\r\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\r\n\t\t\tthis._bounds = new NullBounds();\r\n\r\n\t\tthis.updateDebugEntity();\r\n\t}\r\n}\r\n\r\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.LightProbeNode\r\n */\r\nclass LightProbeNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"lightProbeNode\";\r\n\r\n\tprivate _lightProbe:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param lightProbe\r\n\t */\r\n\tconstructor(pool:EntityNodePool, lightProbe:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, lightProbe, partition);\r\n\r\n\t\tthis._lightProbe = lightProbe;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = LightProbeNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.partition.NodeBase\r\n */\r\nclass NodeBase\r\n{\r\n\tprivate _debugChildrenVisible:boolean;\r\n\tprivate _explicitDebugVisible:boolean;\r\n\tpublic _pImplicitDebugVisible:boolean;\r\n\tpublic _iParent:NodeBase;\r\n\tpublic _pChildNodes:Array<NodeBase>;\r\n\tpublic _pNumChildNodes:number = 0;\r\n\r\n\tpublic _pDebugEntity:IEntity;\r\n\r\n\tpublic _iNumEntities:number = 0;\r\n\tpublic _iCollectionMark:number;// = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._explicitDebugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitDebugVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitDebugVisible = value;\r\n\r\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\r\n\r\n\t}\r\n\r\n\tpublic get debugChildrenVisible():boolean\r\n\t{\r\n\t\treturn this._debugChildrenVisible;\r\n\t}\r\n\r\n\tpublic set debugChildrenVisible(value:boolean)\r\n\t{\r\n\t\tif (this._debugChildrenVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugChildrenVisible = value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get parent():NodeBase\r\n\t{\r\n\t\treturn this._iParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic get _pNumEntities():number\r\n\t{\r\n\t\treturn this._iNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pChildNodes = new Array<NodeBase>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t * @internal\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param rayPosition\r\n\t * @param rayDirection\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t * @returns {away.partition.NodeBase}\r\n\t */\r\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\r\n\t{\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param traverser\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\tvar i:number = 0;\r\n\r\n\t\t\twhile (i < this._pNumChildNodes)\r\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic applyDebugEntity(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pDebugEntity == null)\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\r\n\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iAddNode(node:NodeBase)\r\n\t{\r\n\t\tnode._iParent = this;\r\n\t\tthis._iNumEntities += node._pNumEntities;\r\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._iNumEntities += numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveNode(node:NodeBase)\r\n\t{\r\n\t\tvar index:number = this._pChildNodes.indexOf(node);\r\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\r\n\t\tthis._pChildNodes.pop();\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(false);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._pNumEntities -= numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t} else {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = null;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tpublic updateDebugEntity()\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = NodeBase;",
    "/**\r\n * @class away.partition.NullNode\r\n */\r\nclass NullNode\r\n{\r\n\tconstructor()\r\n\t{\r\n\t}\r\n}\r\n\r\nexport = NullNode;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\r\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\r\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\r\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass Partition\r\n{\r\n\tprivate _cameraNodePool:EntityNodePool;\r\n\tprivate _directionalLightNodePool:EntityNodePool;\r\n\tprivate _entityNodePool:EntityNodePool;\r\n\tprivate _lightProbeNodePool:EntityNodePool;\r\n\tprivate _pointLightNodePool:EntityNodePool;\r\n\tprivate _skyboxNodePool:EntityNodePool;\r\n\r\n\tpublic _rootNode:NodeBase;\r\n\tprivate _updatesMade:Boolean = false;\r\n\tprivate _updateQueue:EntityNode;\r\n\r\n\tconstructor(rootNode:NodeBase)\r\n\t{\r\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\r\n\r\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\r\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\r\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\r\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\r\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\r\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\r\n\t}\r\n\r\n\tpublic get rootNode():NodeBase\r\n\t{\r\n\t\treturn this._rootNode;\r\n\t}\r\n\r\n\tpublic traverse(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._updatesMade)\r\n\t\t\tthis.updateEntities();\r\n\r\n\t\tthis._rootNode.acceptTraverser(traverser);\r\n\t}\r\n\r\n\tpublic iMarkForUpdate(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode = this._updateQueue;\r\n\r\n\t\twhile (t) {\r\n\t\t\tif (node == t)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tt = t._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = this._updateQueue;\r\n\r\n\t\tthis._updateQueue = node;\r\n\t\tthis._updatesMade = true;\r\n\t}\r\n\r\n\tpublic iRemoveEntity(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode;\r\n\r\n\t\tnode.removeFromParent();\r\n\r\n\t\tif (node == this._updateQueue) {\r\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\r\n\t\t} else {\r\n\t\t\tt = this._updateQueue;\r\n\t\t\twhile (t && t._iUpdateQueueNext != node)\r\n\t\t\t\tt = t._iUpdateQueueNext;\r\n\r\n\t\t\tif (t)\r\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\tif (!this._updateQueue)\r\n\t\t\tthis._updatesMade = false;\r\n\t}\r\n\r\n\tprivate updateEntities()\r\n\t{\r\n\t\tvar node:EntityNode = this._updateQueue;\r\n\t\tvar targetNode:NodeBase;\r\n\t\tvar t:EntityNode;\r\n\t\tthis._updateQueue = null;\r\n\t\tthis._updatesMade = false;\r\n\r\n\t\tdo {\r\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\r\n\r\n\t\t\tif (node.parent != targetNode) {\r\n\t\t\t\tif (node)\r\n\t\t\t\t\tnode.removeFromParent();\r\n\r\n\t\t\t\ttargetNode.iAddNode(node);\r\n\t\t\t}\r\n\r\n\t\t\tt = node._iUpdateQueueNext;\r\n\t\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\t\t//required for controllers with autoUpdate set to true\r\n\t\t\tnode.entity._iInternalUpdate();\r\n\r\n\t\t} while ((node = t) != null);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._cameraNodePool.disposeItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.disposeItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.disposeItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._pointLightNodePool.disposeItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._skyboxNodePool.disposeItem(skybox));\r\n\t}\r\n}\r\n\r\nexport = Partition;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.PointLightNode\r\n */\r\nclass PointLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"pointLightNode\";\r\n\r\n\tprivate _pointLight:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param pointLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, pointLight:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, pointLight, partition);\r\n\r\n\t\tthis._pointLight = pointLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyPointLight(this._pointLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = PointLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\r\n *\r\n * @class away.partition.SkyboxNode\r\n */\r\nclass SkyboxNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"skyboxNode\";\r\n\r\n\tprivate _skyBox:IEntity;\r\n\r\n\t/**\r\n\t * Creates a new SkyboxNode object.\r\n\t * @param skyBox The Skybox to be contained in the node.\r\n\t */\r\n\tconstructor(pool:EntityNodePool, skyBox:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, skyBox, partition);\r\n\r\n\t\tthis._skyBox = skyBox;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(<NodeBase> this))\r\n\t\t\ttraverser.applySkybox(this._skyBox);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._skyBox._iIsVisible)\r\n\t\t\treturn false;\r\n\r\n\t\t//a skybox is always in view unless its visibility is set to false\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport = SkyboxNode;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\n\r\n/**\r\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\r\n *\r\n * @see away.base.DisplayObject#pickingCollisionVO\r\n * @see away.core.pick.IPickingCollider\r\n *\r\n * @class away.pick.PickingCollisionVO\r\n */\r\nclass PickingCollisionVO\r\n{\r\n\t/**\r\n\t * The display object to which this collision object belongs.\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\t/**\r\n\t * The local position of the collision on the entity's surface.\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The local normal vector at the position of the collision.\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * The uv coordinate at the position of the collision.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took pl ace.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n//\t\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * Determines if the ray position is contained within the entity bounds.\r\n\t *\r\n\t * @see away3d.entities.Entity#bounds\r\n\t */\r\n\tpublic rayOriginIsInsideBounds:boolean;\r\n\r\n\t/**\r\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\r\n\t */\r\n\tpublic rayEntryDistance:number;\r\n\r\n\t/**\r\n\t * The material ownwer associated with a collision.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * Creates a new <code>PickingCollisionVO</code> object.\r\n\t *\r\n\t * @param entity The entity to which this collision object belongs.\r\n\t */\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n\r\n}\r\n\r\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * Picks a 3d object from a view or scene by 3D raycast calculations.\r\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\r\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\r\n *\r\n * @class away.pick.RaycastPicker\r\n */\r\nclass RaycastPicker implements IPicker\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\tprivate _raycastCollector:RaycastCollector;\r\n\tprivate _ignoredEntities = [];\r\n\tprivate _onlyMouseEnabled:boolean = true;\r\n\r\n\tprivate _entities:Array<IEntity>;\r\n\tprivate _numEntities:number = 0;\r\n\tprivate _hasCollisions:boolean;\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get onlyMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._onlyMouseEnabled;\r\n\t}\r\n\r\n\tpublic set onlyMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._onlyMouseEnabled = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>RaycastPicker</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\r\n\t * or simply returns the first collision encountered. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._raycastCollector = new RaycastCollector();\r\n\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t\tthis._entities = new Array<IEntity>();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\r\n\t{\r\n\t\t//update ray\r\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\r\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\r\n\r\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\r\n\t{\r\n\t\t//clear collector\r\n\t\tthis._raycastCollector.clear();\r\n\r\n\t\t//setup ray vectors\r\n\t\tthis._raycastCollector.rayPosition = rayPosition;\r\n\t\tthis._raycastCollector.rayDirection = rayDirection;\r\n\r\n\t\t// collect entities to test\r\n\t\tscene.traversePartitions(this._raycastCollector);\r\n\r\n\t\tthis._numEntities = 0;\r\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\r\n\t\tvar entity:IEntity;\r\n\r\n\t\twhile (node) {\r\n\t\t\tif (!this.isIgnored(entity = node.entity))\r\n\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n\r\n\t\t\tnode = node.next;\r\n\t\t}\r\n\r\n\t\t//early out if no collisions detected\r\n\t\tif (!this._numEntities)\r\n\t\t\treturn null;\r\n\r\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n\t}\r\n\r\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\r\n//\t\t{\r\n//\t\t\tthis._numEntities = 0;\r\n//\r\n//\t\t\tvar entity:IEntity;\r\n//\t\t\tvar l:number = entities.length;\r\n//\r\n//\t\t\tfor (var c:number = 0; c < l; c++) {\r\n//\t\t\t\tentity = entities[c];\r\n//\r\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\r\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n//\t\t\t}\r\n//\r\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n//\t\t}\r\n\r\n\tpublic setIgnoreList(entities)\r\n\t{\r\n\t\tthis._ignoredEntities = entities;\r\n\t}\r\n\r\n\tprivate isIgnored(entity:IEntity):boolean\r\n\t{\r\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\r\n\t\t\treturn true;\r\n\r\n\t\tvar len:number = this._ignoredEntities.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._ignoredEntities[i] == entity)\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\r\n\t{\r\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\r\n\t}\r\n\r\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\r\n\t{\r\n\t\t// trim before sorting\r\n\t\tthis._entities.length = this._numEntities;\r\n\r\n\t\t// Sort entities from closest to furthest.\r\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\r\n\r\n\t\t// ---------------------------------------------------------------------\r\n\t\t// Evaluate triangle collisions when needed.\r\n\t\t// Replaces collision data provided by bounds collider with more precise data.\r\n\t\t// ---------------------------------------------------------------------\r\n\r\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\r\n\t\tvar bestCollisionVO:PickingCollisionVO;\r\n\t\tvar pickingCollisionVO:PickingCollisionVO;\r\n\t\tvar entity:IEntity;\r\n\t\tvar i:number;\r\n\r\n\t\tfor (i = 0; i < this._numEntities; ++i) {\r\n\t\t\tentity = this._entities[i];\r\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\r\n\t\t\tif (entity.pickingCollider) {\r\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\r\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\r\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\r\n\t\t\t\t\tif (!this._findClosestCollision) {\r\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\r\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\r\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\r\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\r\n\t\t\t\t// if it has been established that there is NO triangle collider to test\r\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\r\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn bestCollisionVO;\r\n\t}\r\n\r\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\r\n\t{\r\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\r\n\r\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\r\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\r\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\r\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n}\r\n\r\nexport = RaycastPicker;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\n\r\n/**\r\n * @class away.pool.EntityListItemPool\r\n */\r\nclass EntityListItemPool\r\n{\r\n\tprivate _pool:Array<EntityListItem>;\r\n\tprivate _index:number = 0;\r\n\tprivate _poolSize:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pool = new Array<EntityListItem>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getItem():EntityListItem\r\n\t{\r\n\t\tvar item:EntityListItem;\r\n\t\tif (this._index == this._poolSize) {\r\n\t\t\titem = new EntityListItem();\r\n\t\t\tthis._pool[this._index++] = item;\r\n\t\t\t++this._poolSize;\r\n\t\t} else {\r\n\t\t\titem = this._pool[this._index++];\r\n\t\t}\r\n\t\treturn item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic freeAll()\r\n\t{\r\n\t\tthis._index = 0;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pool.length = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.pool.EntityListItem\r\n */\r\nclass EntityListItem\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic entity:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic next:EntityListItem;\r\n}\r\n\r\nexport = EntityListItem;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\r\n\r\n/**\r\n * @class away.pool.EntityNodePool\r\n */\r\nclass EntityNodePool\r\n{\r\n\tprivate _entityNodePool:Object = new Object();\r\n\tprivate _entityNodeClass:IEntityNodeClass;\r\n\tprivate _partition:Partition;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entityNodeClass\r\n\t */\r\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\r\n\t{\r\n\t\tthis._entityNodeClass = entityNodeClass;\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic disposeItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\tvar entityNode:EntityNode = this._entityNodePool[entity.id];\r\n\r\n\t\tif (entityNode) {\r\n\t\t\tentity._iRemoveEntityNode(entityNode);\r\n\r\n\t\t\tthis._entityNodePool[entity.id] = null;\r\n\t\t}\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n}\r\n\r\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\r\n\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\r\n\r\n/**\r\n * @class away.pool.SubMeshPool\r\n */\r\nclass SubMeshPool\r\n{\r\n\tprivate static classPool:Object = new Object();\r\n\r\n\t/**\r\n\t *\r\n\t * @param subMeshClass\r\n\t */\r\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\r\n\t{\r\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\r\n\t{\r\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\r\n\t}\r\n\r\n\tprivate static main = SubMeshPool.addDefaults();\r\n\r\n\tprivate static addDefaults()\r\n\t{\r\n\t\tSubMeshPool.registerClass(LineSubMesh);\r\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\r\n\t\tSubMeshPool.registerClass(CurveSubMesh);\r\n\t}\r\n}\r\n\r\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\r\n */\r\nclass PrefabBase extends AssetBase\r\n{\r\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\r\n\r\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\r\n\r\n\t/**\r\n\t * Creates a new PrefabBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a display object generated from this prefab\r\n\t */\r\n\tpublic getNewObject():DisplayObject\r\n\t{\r\n\t\tvar object:DisplayObject = this._pCreateObject();\r\n\r\n\t\tthis._pObjects.push(object);\r\n\r\n\t\treturn object;\r\n\t}\r\n\r\n//\t\tpublic getNewBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\r\n//\r\n//\t\t\tthis._pBatchObjects.push(object);\r\n//\r\n//\t\t\treturn object;\r\n//\t\t}\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\t// To be overridden when necessary\r\n\t}\r\n}\r\n\r\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Capsule primitive mesh.\r\n */\r\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _height:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the capsule.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the capsule.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Capsule object.\r\n\t * @param radius The radius of the capsule.\r\n\t * @param height The height of the capsule.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\r\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._height = height;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar triIndex:number = 0;\r\n\t\tvar index:number = 0;\r\n\t\tvar startIndex:number;\r\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\r\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>(numIndices)\r\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tstartIndex = index;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\r\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\r\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\r\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\r\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// vertex\r\n\t\t\t\t\t\tpositions[index] = x;\r\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\r\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\r\n\t\t\t\t\t\t// normal\r\n\t\t\t\t\t\tnormals[index] = x*normLen;\r\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\r\n\t\t\t\t\t\t// tangent\r\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[index + 1] = t1;\r\n\t\t\t\t\t\ttangents[index + 2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV Cone primitive mesh.\r\n */\r\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cone.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cone object.\r\n\t * @param radius The radius of the bottom end of the cone\r\n\t * @param height The height of the cone\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cube primitive prefab.\r\n */\r\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _depth:number;\r\n\tprivate _tile6:boolean;\r\n\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _segmentsD:number;\r\n\r\n\t/**\r\n\t * Creates a new Cube object.\r\n\t * @param width The size of the cube along its X-axis.\r\n\t * @param height The size of the cube along its Y-axis.\r\n\t * @param depth The size of the cube along its Z-axis.\r\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\r\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\r\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._depth = depth;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._segmentsD = segmentsD;\r\n\t\tthis._tile6 = tile6;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its X-axis.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Y-axis.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Z-axis.\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._depth;\r\n\t}\r\n\r\n\tpublic set depth(value:number)\r\n\t{\r\n\t\tthis._depth = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\r\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\r\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\r\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\r\n\t * several shared edges (between the top, front, left and right faces) which simplifies\r\n\t * texture painting.\r\n\t */\r\n\tpublic get tile6():boolean\r\n\t{\r\n\t\treturn this._tile6;\r\n\t}\r\n\r\n\tpublic set tile6(value:boolean)\r\n\t{\r\n\t\tthis._tile6 = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsD():number\r\n\t{\r\n\t\treturn this._segmentsD;\r\n\t}\r\n\r\n\tpublic set segmentsD(value:number)\r\n\t{\r\n\t\tthis._segmentsD = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tvar tl:number, tr:number, bl:number, br:number;\r\n\t\tvar i:number, j:number, inc:number = 0;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\t\tvar hw:number, hh:number, hd:number; // halves\r\n\t\tvar dw:number, dh:number, dd:number; // deltas\r\n\r\n\t\tvar outer_pos:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\t// half cube dimensions\r\n\t\thw = this._width/2;\r\n\t\thh = this._height/2;\r\n\t\thd = this._depth/2;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>(numIndices);\r\n\t\t\t\tpositions = new Array<number>(numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// Segment dimensions\r\n\t\t\tdw = this._width/this._segmentsW;\r\n\t\t\tdh = this._height/this._segmentsH;\r\n\t\t\tdd = this._depth/this._segmentsD;\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// front\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// back\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = 1;\r\n\t\t\t\t\ttangents[vidx] = -1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\t// top\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// bottom\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = -1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\touter_pos = hd - i*dd;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// left\r\n\t\t\t\t\tpositions[vidx] = -hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = -1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = -1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// right\r\n\t\t\t\t\tpositions[vidx] = hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = 1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = 1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\r\n\t\t\tvar startPositions:Array<number>;\r\n\t\t\tvar endPositions:Array<number>;\r\n\t\t\tvar thickness:Array<number>;\r\n\r\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\r\n\t\t\t\tstartPositions = lineGeometry.startPositions;\r\n\t\t\t\tendPositions = lineGeometry.endPositions;\r\n\t\t\t\tthickness = lineGeometry.thickness;\r\n\t\t\t} else {\r\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tthickness = new Array<number>(numSegments);\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t//front/back face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tendPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tstartPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tstartPositions[vidx] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\t//left/right face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = -hw;\r\n\t\t\t\tendPositions[vidx + 1] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = hw;\r\n\t\t\t\tstartPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tstartPositions[vidx] = hw\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tendPositions[vidx] = -hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\r\n\t\t\t//top/bottom face\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = -hh;\r\n\t\t\t\tendPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = hh;\r\n\t\t\t\tstartPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tstartPositions[vidx] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tendPositions[vidx + 1] = -hh;\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tstartPositions[vidx + 1] = hh;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\r\n\t\t\tlineGeometry.updateThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number, index:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\t\tvar u_tile_dim:number, v_tile_dim:number;\r\n\t\tvar u_tile_step:number, v_tile_step:number;\r\n\t\tvar tl0u:number, tl0v:number;\r\n\t\tvar tl1u:number, tl1v:number;\r\n\t\tvar du:number, dv:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._tile6) {\r\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\r\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\r\n\t\t\t} else {\r\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\r\n\t\t\t\tu_tile_step = v_tile_step = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Create planes two and two, the same way that they were\r\n\t\t\t// constructed in the buildGeometry() function. First calculate\r\n\t\t\t// the top-left UV coordinate for both planes, and then loop\r\n\t\t\t// over the points, calculating the UVs from these numbers.\r\n\r\n\t\t\t// When tile6 is true, the layout is as follows:\r\n\t\t\t//       .-----.-----.-----. (1,1)\r\n\t\t\t//       | Bot |  T  | Bak |\r\n\t\t\t//       |-----+-----+-----|\r\n\t\t\t//       |  L  |  F  |  R  |\r\n\t\t\t// (0,0)'-----'-----'-----'\r\n\r\n\t\t\tindex = 0;\r\n\r\n\t\t\t// FRONT / BACK\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// TOP / BOTTOM\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 0*v_tile_step;\r\n\t\t\ttl1u = 0*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsD;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// LEFT / RIGHT\r\n\t\t\ttl0u = 0*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 1*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsD;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cylinder primitive mesh.\r\n */\r\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tpublic _pBottomRadius:number;\r\n\tpublic _pSegmentsW:number;\r\n\tpublic _pSegmentsH:number;\r\n\r\n\tprivate _topRadius:number;\r\n\tprivate _height:number;\r\n\r\n\tprivate _topClosed:boolean;\r\n\tprivate _bottomClosed:boolean;\r\n\tprivate _surfaceClosed:boolean;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get topRadius():number\r\n\t{\r\n\t\treturn this._topRadius;\r\n\t}\r\n\r\n\tpublic set topRadius(value:number)\r\n\t{\r\n\t\tthis._topRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cylinder.\r\n\t */\r\n\tpublic get bottomRadius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set bottomRadius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\tpublic setSegmentsW(value:number)\r\n\t{\r\n\t\tthis._pSegmentsW = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis.setSegmentsH(value)\r\n\r\n\t}\r\n\r\n\tpublic setSegmentsH(value:number)\r\n\t{\r\n\t\tthis._pSegmentsH = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the top end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get topClosed():boolean\r\n\t{\r\n\t\treturn this._topClosed;\r\n\t}\r\n\r\n\tpublic set topClosed(value:boolean)\r\n\t{\r\n\t\tthis._topClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get bottomClosed():boolean\r\n\t{\r\n\t\treturn this._bottomClosed;\r\n\t}\r\n\r\n\tpublic set bottomClosed(value:boolean)\r\n\t{\r\n\t\tthis._bottomClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cylinder object.\r\n\t * @param topRadius The radius of the top end of the cylinder.\r\n\t * @param bottomRadius The radius of the bottom end of the cylinder\r\n\t * @param height The radius of the bottom end of the cylinder\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\r\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._topRadius = topRadius;\r\n\t\tthis._pBottomRadius = bottomRadius;\r\n\t\tthis._height = height;\r\n\t\tthis._pSegmentsW = segmentsW;\r\n\t\tthis._pSegmentsH = segmentsH;\r\n\t\tthis._topClosed = topClosed;\r\n\t\tthis._bottomClosed = bottomClosed;\r\n\t\tthis._surfaceClosed = surfaceClosed;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\r\n\t\tvar radius:number;\r\n\t\tvar revolutionAngle:number;\r\n\r\n\t\tvar dr:number;\r\n\t\tvar latNormElev:number;\r\n\t\tvar latNormBase:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar startIndex:number = 0;\r\n\t\tvar nextVertexIndex:number = 0;\r\n\t\tvar centerVertexIndex:number = 0;\r\n\r\n\t\tvar t1:number;\r\n\t\tvar t2:number;\r\n\r\n\t\t// reset utility variables\r\n\t\tthis._numVertices = 0;\r\n\r\n\t\t// evaluate revolution steps\r\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\r\n\t\t\t}\r\n\t\t\tif (this._topClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\r\n\t\t\t}\r\n\t\t\tif (this._bottomClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\r\n\t\t\t\tnumIndices += this._pSegmentsW*3;\r\n\t\t\t}\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>(numIndices)\r\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed && this._topRadius > 0) {\r\n\r\n\t\t\t\tz = -0.5*this._height;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = 1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = -1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\r\n\r\n\t\t\t\tz = 0.5*this._height;\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = -1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = 1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\r\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\r\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\r\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\r\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\r\n\t\t\tlatNormElev = dr/this._height;\r\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tvar a:number;\r\n\t\t\t\tvar b:number;\r\n\t\t\t\tvar c:number;\r\n\t\t\t\tvar d:number;\r\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\t\tt2 = -na0;\r\n\t\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\r\n\t\t\t\t\t\t\tnaComp2 = na1;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tt1 = -na0;\r\n\t\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t\t\tnaComp1 = na1;\r\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\r\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t\t// close triangle\r\n\t\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\r\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._pSegmentsH + 1)*(this._pSegmentsW) + this._pSegmentsW;\r\n\t\t\tvar startPositions:Array<number>;\r\n\t\t\tvar endPositions:Array<number>;\r\n\t\t\tvar thickness:Array<number>;\r\n\r\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\r\n\t\t\t\tstartPositions = lineGeometry.startPositions;\r\n\t\t\t\tendPositions = lineGeometry.endPositions;\r\n\t\t\t\tthickness = lineGeometry.thickness;\r\n\t\t\t} else {\r\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tthickness = new Array<number>(numSegments);\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t//horizonal lines\r\n\r\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\tz = this._height*(j/this._pSegmentsH - 0.5);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\tendPositions[vidx] = x;\r\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tstartPositions[vidx] = endPositions[vidx - this._pSegmentsW*6];\r\n\t\t\t\t\t\tstartPositions[vidx + 1] = endPositions[vidx + 1 - this._pSegmentsW*6];\r\n\t\t\t\t\t\tstartPositions[vidx + 2] = endPositions[vidx + 2 - this._pSegmentsW*6];\r\n\r\n\t\t\t\t\t\tendPositions[vidx] = x;\r\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i < this._pSegmentsW) {\r\n\t\t\t\t\t\tstartPositions[vidx] = x;\r\n\t\t\t\t\t\tstartPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tstartPositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\r\n\t\t\tlineGeometry.updateThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar revolutionAngle:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*triangleGeometry.scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*triangleGeometry.scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*triangleGeometry.scaleU;\r\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*triangleGeometry.scaleV;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Plane primitive mesh.\r\n */\r\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _doubleSided:boolean;\r\n\r\n\t/**\r\n\t * Creates a new Plane object.\r\n\t * @param width The width of the plane.\r\n\t * @param height The height of the plane.\r\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\r\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\r\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\r\n\t{\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._doubleSided = doubleSided;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\r\n\t * false, respectively. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\r\n\t */\r\n\tpublic get doubleSided():boolean\r\n\t{\r\n\t\treturn this._doubleSided;\r\n\t}\r\n\r\n\tpublic set doubleSided(value:boolean)\r\n\t{\r\n\t\tthis._doubleSided = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the plane.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the plane.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar x:number, y:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar base:number;\r\n\t\tvar tw:number = this._segmentsW + 1;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar xi:number;\r\n\t\tvar yi:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\r\n\t\t\tvar positions:Array<number>;\r\n\t\t\tvar normals:Array<number>;\r\n\t\t\tvar tangents:Array<number>;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumIndices *= 2;\r\n\r\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>(numIndices);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tpositions = new Array<number>(numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\r\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\r\n\r\n\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\r\n\t\t\t\t\t\tpositions[vidx + 2] = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx + 1] = y;\r\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\r\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\r\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\r\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\r\n\r\n\t\t\t\t\t\tbase = xi + yi*tw;\r\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\r\n\r\n\t\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\r\n\t\t\tvar startPositions:Array<number>;\r\n\t\t\tvar endPositions:Array<number>;\r\n\t\t\tvar thickness:Array<number>;\r\n\r\n\t\t\tvar hw:number = this._width/2;\r\n\t\t\tvar hh:number = this._height/2;\r\n\r\n\r\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\r\n\t\t\t\tstartPositions = lineGeometry.startPositions;\r\n\t\t\t\tendPositions = lineGeometry.endPositions;\r\n\t\t\t\tthickness = lineGeometry.thickness;\r\n\t\t\t} else {\r\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tthickness = new Array<number>(numSegments);\r\n\t\t\t}\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = 0;\r\n\t\t\t\tstartPositions[vidx + 2] = yi*this._height - hh;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = 0;\r\n\t\t\t\tendPositions[vidx + 2] = yi*this._height - hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\tstartPositions[vidx] = xi*this._width - hw;\r\n\t\t\t\tstartPositions[vidx + 1] = 0;\r\n\t\t\t\tstartPositions[vidx + 2] = -hh;\r\n\r\n\t\t\t\tendPositions[vidx] = xi*this._width - hw;\r\n\t\t\t\tendPositions[vidx + 1] = 0;\r\n\t\t\t\tendPositions[vidx + 2] = hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\r\n\t\t\tlineGeometry.updateThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar uvs:Array<number>;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(numVertices*2);\r\n\t\t\t\tthis._pInvalidateGeometry()\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*triangleGeometry.scaleV;\r\n\t\t\t\t\tindex += 2;\r\n\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*triangleGeometry.scaleU;\r\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*triangleGeometry.scaleV;\r\n\t\t\t\t\t\tindex += 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV RegularPolygon primitive mesh.\r\n */\r\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the regular polygon.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of sides of the regular polygon.\r\n\t */\r\n\tpublic get sides():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set sides(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\t/**\r\n\t * The number of subdivisions from the edge to the center of the regular polygon.\r\n\t */\r\n\tpublic get subdivisions():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set subdivisions(value:number)\r\n\t{\r\n\t\tthis.setSegmentsH(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RegularPolygon disc object.\r\n\t * @param radius The radius of the regular polygon\r\n\t * @param sides Defines the number of sides of the regular polygon.\r\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitivePolygonPrefab;",
    "import Geometry\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\n/**\r\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\r\n */\r\nclass PrimitivePrefabBase extends PrefabBase\r\n{\r\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\r\n\r\n\tpublic _geomDirty:boolean = true;\r\n\tpublic _uvDirty:boolean = true;\r\n\r\n\tprivate _material:MaterialBase;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\tprivate _geometryType:string;\r\n\tprivate _geometryTypeDirty:boolean = true;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn PrimitivePrefabBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get geometryType():string\r\n\t{\r\n\t\treturn this._geometryType;\r\n\t}\r\n\t\r\n\tpublic set geometryType(value:string)\r\n\t{\r\n\t\tif (this._geometryType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._geometryType = value;\r\n\t\t\r\n\t\tthis.invalidateGeometryType();\r\n\t}\r\n\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tthis._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the primitive.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tvar len:number = this._pObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new PrimitivePrefabBase object.\r\n\t *\r\n\t * @param material The material with which to render the object\r\n\t */\r\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._geometry = new Geometry();\r\n\t\tthis._material = material;\r\n\t\tthis._geometryType = geometryType;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\r\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\r\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\r\n\t */\r\n\tpublic invalidateGeometryType()\r\n\t{\r\n\t\tthis._geometryTypeDirty = true;\r\n\t\tthis._geomDirty = true;\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateGeometry()\r\n\t{\r\n\t\tthis._geomDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateUVs()\r\n\t{\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the subgeometry when invalid.\r\n\t */\r\n\tprivate updateGeometryType()\r\n\t{\r\n\t\t//remove any existing sub geometry\r\n\t\tif (this._subGeometry)\r\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\r\n\r\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(true);\r\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\r\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\r\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\r\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\r\n\t\t\tthis._subGeometry = triangleGeometry;\r\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\r\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry());\r\n\t\t}\r\n\r\n\t\tthis._geometryTypeDirty = false;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Updates the geometry when invalid.\r\n\t */\r\n\tprivate updateGeometry()\r\n\t{\r\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._geomDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uv coordinates when invalid.\r\n\t */\r\n\tprivate updateUVs()\r\n\t{\r\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._uvDirty = false;\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\tif (this._geometryTypeDirty)\r\n\t\t\tthis.updateGeometryType();\r\n\t\t\r\n\t\tif (this._geomDirty)\r\n\t\t\tthis.updateGeometry();\r\n\r\n\t\tif (this._uvDirty)\r\n\t\t\tthis.updateUVs();\r\n\t}\r\n\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\r\n\t\tmesh._iSourcePrefab = this;\r\n\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\r\n//\t\tpublic _pCreateBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\r\n//\t\t\tbatch._iSourcePrefab = this;\r\n//\r\n//\t\t\treturn batch;\r\n//\t\t}\r\n}\r\n\r\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Sphere primitive mesh.\r\n */\r\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\r\n\t/**\r\n\t * The radius of the sphere.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Sphere object.\r\n\t *\r\n\t * @param radius The radius of the sphere.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\r\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar numVertices:number;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>((this._segmentsH - 1)*this._segmentsW*6);\r\n\t\t\t\tpositions = new Array<number>(numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvar startIndex:number;\r\n\t\t\tvar t1:number;\r\n\t\t\tvar t2:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tstartIndex = vidx;\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\r\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\r\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._segmentsH - 1)*this._segmentsW*2;\r\n\t\t\tvar startPositions:Array<number>;\r\n\t\t\tvar endPositions:Array<number>;\r\n\t\t\tvar thickness:Array<number>;\r\n\r\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\r\n\t\t\t\tstartPositions = lineGeometry.startPositions;\r\n\t\t\t\tendPositions = lineGeometry.endPositions;\r\n\t\t\t\tthickness = lineGeometry.thickness;\r\n\t\t\t} else {\r\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tthickness = new Array<number>(numSegments);\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tif (j < this._segmentsH) {\r\n\t\t\t\t\t\t\tendPositions[vidx] = x;\r\n\t\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t\tvidx += 3;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tstartPositions[vidx] = endPositions[vidx - this._segmentsW*6];\r\n\t\t\t\t\t\tstartPositions[vidx + 1] = endPositions[vidx + 1 - this._segmentsW*6];\r\n\t\t\t\t\t\tstartPositions[vidx + 2] = endPositions[vidx + 2 - this._segmentsW*6];\r\n\r\n\t\t\t\t\t\tendPositions[vidx] = x;\r\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i < this._segmentsW && j > 0 && j < this._segmentsH) {\r\n\t\t\t\t\t\tstartPositions[vidx] = x;\r\n\t\t\t\t\t\tstartPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tstartPositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\r\n\t\t\tlineGeometry.updateThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\t\tvar uvs:Array<number>;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Cylinder primitive mesh.\r\n */\r\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _tubeRadius:number;\r\n\tprivate _segmentsR:number;\r\n\tprivate _segmentsT:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the torus.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the inner tube of the torus.\r\n\t */\r\n\tpublic get tubeRadius():number\r\n\t{\r\n\t\treturn this._tubeRadius;\r\n\t}\r\n\r\n\tpublic set tubeRadius(value:number)\r\n\t{\r\n\t\tthis._tubeRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsR():number\r\n\t{\r\n\t\treturn this._segmentsR;\r\n\t}\r\n\r\n\tpublic set segmentsR(value:number)\r\n\t{\r\n\t\tthis._segmentsR = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\r\n\t */\r\n\tpublic get segmentsT():number\r\n\t{\r\n\t\treturn this._segmentsT;\r\n\t}\r\n\r\n\tpublic set segmentsT(value:number)\r\n\t{\r\n\t\tthis._segmentsT = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>Torus</code> object.\r\n\t * @param radius The radius of the torus.\r\n\t * @param tuebRadius The radius of the inner tube of the torus.\r\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\r\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\r\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._tubeRadius = tubeRadius;\r\n\t\tthis._segmentsR = segmentsR;\r\n\t\tthis._segmentsT = segmentsT;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\r\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>(numIndices)\r\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\r\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\r\n\r\n\t\t\tvar comp1:number, comp2:number;\r\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\r\n\t\t\tvar startIndex:number = 0;\r\n\t\t\tvar nextVertexIndex:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\r\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\r\n\r\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\r\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\r\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\r\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\r\n\r\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\r\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\r\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tn1 = -nz;\r\n\t\t\t\t\t\tn2 = ny;\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tn1 = ny;\r\n\t\t\t\t\t\tn2 = nz;\r\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsR) {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = nx;\r\n\t\t\t\t\tnormals[vidx + 1] = n1;\r\n\t\t\t\t\tnormals[vidx + 2] = n2;\r\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\r\n\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// close triangle\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\r\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.RenderableMergeSort\r\n */\r\nclass RenderableMergeSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable;\r\n\t\tvar slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortBlendedRenderables(head);\r\n\t\theadB = this.sortBlendedRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB) {\r\n\t\t\tif (head.zIndex < headB.zIndex) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result)\r\n\t\t\t\tresult = l; else\r\n\t\t\t\tcurr.next = l;\r\n\r\n\t\t\tcurr = l;\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable, slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortOpaqueRenderables(head);\r\n\t\theadB = this.sortOpaqueRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\t\tvar cmp:number = 0;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB && head != null && headB != null) {\r\n\r\n\t\t\t// first sort per render order id (reduces program3D switches),\r\n\t\t\t// then on render object id (reduces setting props),\r\n\t\t\t// then on zIndex (reduces overdraw)\r\n\t\t\tvar aid:number = head.renderOrderId;\r\n\t\t\tvar bid:number = headB.renderOrderId;\r\n\r\n\t\t\tif (aid == bid) {\r\n\t\t\t\tvar ma:number = head.renderId;\r\n\t\t\t\tvar mb:number = headB.renderId;\r\n\r\n\t\t\t\tif (ma == mb) {\r\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\r\n\t\t\t\t\t\tcmp = 1; else\r\n\t\t\t\t\t\tcmp = -1;\r\n\t\t\t\t} else if (ma > mb) {\r\n\t\t\t\t\tcmp = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcmp = -1;\r\n\t\t\t\t}\r\n\t\t\t} else if (aid > bid) {\r\n\t\t\t\tcmp = 1;\r\n\t\t\t} else {\r\n\t\t\t\tcmp = -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (cmp < 0) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result) {\r\n\t\t\t\tresult = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t} else {\r\n\t\t\t\tcurr.next = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.NullSort\r\n */\r\nclass RenderableNullSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n}\r\n\r\nexport = RenderableNullSort;",
    "/**\r\n * The AntiAliasType class provides values for anti-aliasing in the\r\n * away.text.TextField class.\r\n */\r\nclass AntiAliasType\r\n{\r\n\t/**\r\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\r\n\t * allows font faces to be rendered at very high quality at small sizes. It\r\n\t * is best used with applications that have a lot of small text. Advanced\r\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\r\n\t * points). This constant is used for the <code>antiAliasType</code> property\r\n\t * in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t */\r\n\tpublic static ADVANCED:string = \"advanced\";\r\n\r\n\t/**\r\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\r\n\t * earlier. This setting is recommended for applications that do not have a\r\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\r\n\t * property in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.NORMAL</code>.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n}\r\n\r\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass Font extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Font]\";\r\n\r\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Font.assetType;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\t/**\r\n\t *Get a font-table for a specific name, or create one if it does not exists.\r\n\t */\r\n\tpublic get_font_table(style_name:string):FontTable\r\n\t{\r\n\t\tvar len:number = this._font_styles.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tif(this._font_styles[i].name==style_name)\r\n\t\t\t\treturn this._font_styles[i];\r\n\t\t}\r\n\t\tvar font_style:FontTable = new FontTable();\r\n\t\tfont_style.name=style_name;\r\n\t\tthis._font_styles.push(font_style);\r\n\t\treturn font_style;\r\n\t}\r\n\r\n}\r\n\r\nexport = Font;",
    "/**\r\n * The GridFitType class defines values for grid fitting in the TextField class.\r\n */\r\nclass GridFitType\r\n{\r\n\t/**\r\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\r\n\t * not forced to the pixel grid. This constant is used in setting the\r\n\t * <code>gridFitType</code> property of the TextField class. This is often a\r\n\t * good setting for animation or for large font sizes. Use the syntax\r\n\t * <code>GridFitType.NONE</code>.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\r\n\t * is used in setting the <code>gridFitType</code> property of the TextField\r\n\t * class. This setting only works for left-justified text fields and acts\r\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\r\n\t * setting generally provides the best readability for left-aligned text. Use\r\n\t * the syntax <code>GridFitType.PIXEL</code>.\r\n\t */\r\n\tpublic static PIXEL:string = \"pixel\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\r\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\r\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\r\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\r\n\t * constant is used in setting the <code>gridFitType</code> property of the\r\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\r\n\t */\r\n\tpublic static SUBPIXEL:string = \"subpixel\";\r\n}\r\n\r\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TesselatedFontChar\r\n{\r\n\r\n\t/**\r\n\t * The width of the char\r\n\t */\r\n\tpublic char_width:number;\r\n\r\n\t/**\r\n\t * SubGeometry for this char\r\n\t */\r\n\tpublic subgeom:CurveSubGeometry;\r\n\r\n\t/**\r\n\t * the char_codes that this geom has kerning set for\r\n\t */\r\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\r\n\t/**\r\n\t * the kerning values per char_code\r\n\t */\r\n\tpublic kerningValues:Array<number>=new Array<number>();\r\n\r\n\r\n\tconstructor(subgeom:CurveSubGeometry)\r\n\t{\r\n\t\tthis.char_width=0;\r\n\t\tthis.subgeom = subgeom;\r\n\t\tif (this.subgeom != null) {\r\n\t\t\tvar positions2:Array<number> = this.subgeom.positions;\r\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\r\n\t\t\t\tif(positions2[v*3]>this.char_width)\r\n\t\t\t\t\tthis.char_width=positions2[v*3];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontChar;",
    "\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport SubGeometryBase\t\t\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass TesselatedFontTable extends AssetBase\r\n{\r\n\tprivate _font_chars:Array<TesselatedFontChar>;\r\n\tprivate _font_chars_dic:Object;\r\n\tprivate _font_em_size:number;\r\n\tprivate _charDictDirty:Boolean;\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\r\n\t\tthis._font_chars_dic = new Object();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic get_font_chars():Array<TesselatedFontChar>\r\n\t{\r\n\t\treturn this._font_chars\r\n\t}\r\n\tpublic get_font_em_size():number\r\n\t{\r\n\t\treturn this._font_em_size\r\n\t}\r\n\tpublic set_font_em_size(font_em_size:number):void\r\n\t{\r\n\t\tthis._font_em_size=font_em_size;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\r\n\t{\r\n\t\treturn this._font_chars_dic[char];\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\r\n\t{\r\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\r\n\t\tsubgeo.name=char;\r\n\t\tthis._font_chars.push(tesselated_font_char);\r\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontTable;",
    "/**\r\n * The TextFieldAutoSize class is an enumeration of constant values used in\r\n * setting the <code>autoSize</code> property of the TextField class.\r\n */\r\nclass TextFieldAutoSize\r\n{\r\n\t/**\r\n\t * Specifies that the text is to be treated as center-justified text. Any\r\n\t * resizing of a single line of a text field is equally distributed to both\r\n\t * the right and left sides.\r\n\t */\r\n\tpublic static CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as left-justified text, meaning\r\n\t * that the left side of the text field remains fixed and any resizing of a\r\n\t * single line is on the right side.\r\n\t */\r\n\tpublic static LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Specifies that no resizing is to occur.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as right-justified text, meaning\r\n\t * that the right side of the text field remains fixed and any resizing of a\r\n\t * single line is on the left side.\r\n\t */\r\n\tpublic static RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFieldAutoSize;",
    "/**\r\n * The TextFieldType class is an enumeration of constant values used in setting the\r\n * <code>type</code> property of the TextField class.\r\n *\r\n * @see away.entities.TextField#type\r\n */\r\nclass TextFieldType\r\n{\r\n\t/**\r\n\t * Used to specify a <code>dynamic</code> TextField.\r\n\t */\r\n\tpublic static DYNAMIC:string = \"dynamic\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>input</code> TextField.\r\n\t */\r\n\tpublic static INPUT:string = \"input\";\r\n}\r\n\r\nexport = TextFieldType;",
    "/**\r\n * The TextFormatAlign class provides values for text alignment in the\r\n * TextFormat class.\r\n */\r\nclass TextFormatAlign\r\n{\r\n\t/**\r\n\t * Constant; centers the text in the text field. Use the syntax\r\n\t * <code>TextFormatAlign.CENTER</code>.\r\n\t */\r\n\tpublic CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Constant; justifies text within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.JUSTIFY</code>.\r\n\t */\r\n\tpublic JUSTIFY:string = \"justify\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the left within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.LEFT</code>.\r\n\t */\r\n\tpublic LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the right within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.RIGHT</code>.\r\n\t */\r\n\tpublic RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TextFormat extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset TextFormat]\";\r\n\r\n\t/**\r\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\r\n\t * constants.\r\n\t *\r\n\t * @default TextFormatAlign.LEFT\r\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\r\n\t *                       flash.text.TextFormatAlign.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic align:string;\r\n\r\n\r\n\t/**\r\n\t * Indicates the block indentation in pixels. Block indentation is applied to\r\n\t * an entire block of text; that is, to all lines of the text. In contrast,\r\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\r\n\t * line of each paragraph. If this property is <code>null</code>, the\r\n\t * TextFormat object does not specify block indentation(block indentation is\r\n\t * 0).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic blockIndent:number;\r\n\r\n\t/**\r\n\t * Specifies whether the text is boldface. The default value is\r\n\t * <code>null</code>, which means no boldface is used. If the value is\r\n\t * <code>true</code>, then the text is boldface.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\r\n\tpublic bold:boolean;\r\n\r\n\t/**\r\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\r\n\t * each paragraph of text is indented. To the left of the first line of each\r\n\t * paragraph, a bullet symbol is displayed. The default value is\r\n\t * <code>null</code>, which means no bulleted list is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\r\n\tpublic bullet:boolean;\r\n\r\n\t/**\r\n\t * Indicates the color of the text. A number containing three 8-bit RGB\r\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\r\n\t * default value is <code>null</code>, which means that Flash Player uses the\r\n\t * color black(0x000000).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\r\n\tpublic color:boolean;\r\n\r\n\r\n\t/**\r\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv-values of the colors in textureatlas.\r\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\r\n\t */\r\n\tpublic uv_values:Array<number>;\r\n\r\n\t/**\r\n\t * The name of the font for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\r\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\r\n\t */\r\n\tpublic font_name:string;\r\n\t/**\r\n\t * The name of the font-style for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-style can be used to get a Font-table, from a Font-object.\r\n\t */\r\n\tpublic font_style:string;\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic font_table:TesselatedFontTable;\r\n\r\n\t/**\r\n\t * Indicates the indentation from the left margin to the first character in\r\n\t * the paragraph. The default value is <code>null</code>, which indicates\r\n\t * that no indentation is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic indent:number;\r\n\r\n\t/**\r\n\t * Indicates whether text in this text format is italicized. The default\r\n\t * value is <code>null</code>, which means no italics are used.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\r\n\tpublic italic:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether kerning is enabled\r\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\r\n\t * pixels between certain character pairs to improve readability, and should\r\n\t * be used only when necessary, such as with headings in large fonts. Kerning\r\n\t * is supported for embedded fonts only.\r\n\t *\r\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\r\n\t * New, do not support kerning.</p>\r\n\t *\r\n\t * <p>The default value is <code>null</code>, which means that kerning is not\r\n\t * enabled.</p>\r\n\t */\r\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\r\n\tpublic kerning:boolean;\r\n\r\n\t/**\r\n\t * An integer representing the amount of vertical space(called\r\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\r\n\t * which indicates that the amount of leading used is 0.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The left margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leftMargin:number;\r\n\r\n\t/**\r\n\t * A number representing the amount of space that is uniformly distributed\r\n\t * between all characters. The value specifies the number of pixels that are\r\n\t * added to the advance after each character. The default value is\r\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\r\n\t * You can use decimal values such as <code>1.75</code>.\r\n\t */\r\n\tpublic letterSpacing:number;\r\n\r\n\t/**\r\n\t * The right margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic rightMargin:number;\r\n\r\n\t/**\r\n\t * The size in pixels of text in this text format. The default value is\r\n\t * <code>null</code>, which means that a size of 12 is used.\r\n\t */\r\n\tpublic size:number;\r\n\r\n\t/**\r\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\r\n\t * stop is specified in pixels. If custom tab stops are not specified\r\n\t * (<code>null</code>), the default tab stop is 4(average character width).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\r\n\r\n\t/**\r\n\t * Indicates the target window where the hyperlink is displayed. If the\r\n\t * target window is an empty string, the text is displayed in the default\r\n\t * target window <code>_self</code>. You can choose a custom name or one of\r\n\t * the following four names: <code>_self</code> specifies the current frame\r\n\t * in the current window, <code>_blank</code> specifies a new window,\r\n\t * <code>_parent</code> specifies the parent of the current frame, and\r\n\t * <code>_top</code> specifies the top-level frame in the current window. If\r\n\t * the <code>TextFormat.url</code> property is an empty string or\r\n\t * <code>null</code>, you can get or set this property, but the property will\r\n\t * have no effect.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic link_target:string;\r\n\r\n\t/**\r\n\t * Indicates whether the text that uses this text format is underlined\r\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\r\n\t * similar to that produced by the <code><U></code> tag, but the latter is\r\n\t * not true underlining, because it does not skip descenders correctly. The\r\n\t * default value is <code>null</code>, which indicates that underlining is\r\n\t * not used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic underline:boolean;\r\n\r\n\t/**\r\n\t * Indicates the target URL for the text in this text format. If the\r\n\t * <code>url</code> property is an empty string, the text does not have a\r\n\t * hyperlink. The default value is <code>null</code>, which indicates that\r\n\t * the text does not have a hyperlink.\r\n\t *\r\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\r\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic url:string;\r\n\r\n\t/**\r\n\t * Creates a TextFormat object with the specified properties. You can then\r\n\t * change the properties of the TextFormat object to change the formatting of\r\n\t * text fields.\r\n\t *\r\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\r\n\t * not defined. All of the parameters are optional; any omitted parameters\r\n\t * are treated as <code>null</code>.</p>\r\n\t *\r\n\t * @param font        The name of a font for text as a string.\r\n\t * @param size        An integer that indicates the size in pixels.\r\n\t * @param color       The color of text using this text format. A number\r\n\t *                    containing three 8-bit RGB components; for example,\r\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\r\n\t * @param bold        A Boolean value that indicates whether the text is\r\n\t *                    boldface.\r\n\t * @param italic      A Boolean value that indicates whether the text is\r\n\t *                    italicized.\r\n\t * @param underline   A Boolean value that indicates whether the text is\r\n\t *                    underlined.\r\n\t * @param url         The URL to which the text in this text format\r\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\r\n\t *                    text does not have a hyperlink.\r\n\t * @param target      The target window where the hyperlink is displayed. If\r\n\t *                    the target window is an empty string, the text is\r\n\t *                    displayed in the default target window\r\n\t *                    <code>_self</code>. If the <code>url</code> parameter\r\n\t *                    is set to an empty string or to the value\r\n\t *                    <code>null</code>, you can get or set this property,\r\n\t *                    but the property will have no effect.\r\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\r\n\t *                    value.\r\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\r\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\r\n\t * @param indent      An integer that indicates the indentation from the left\r\n\t *                    margin to the first character in the paragraph.\r\n\t * @param leading     A number that indicates the amount of leading vertical\r\n\t *                    space between lines.\r\n\t */\r\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.font_name = font;\r\n\t\tthis.size = size;\r\n\t\tthis.bold = bold;\r\n\t\tthis.italic = italic;\r\n\t\tthis.underline = underline;\r\n\t\tthis.url = url;\r\n\t\tthis.link_target = link_target;\r\n\t\tthis.align = align;\r\n\t\tthis.leftMargin = leftMargin;\r\n\t\tthis.rightMargin = rightMargin;\r\n\t\tthis.indent = indent;\r\n\t\tthis.leading = leading;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextFormat.assetType;\r\n\t}\r\n}\r\n\r\nexport = TextFormat;",
    "/**\r\n * A class that defines the Interactive mode of a text field object.\r\n *\r\n * @see away.entities.TextField#textInteractionMode\r\n */\r\nclass TextInteractionMode\r\n{\r\n\t/**\r\n\t * The text field's default interaction mode is NORMAL and it varies across\r\n\t * platform. On Desktop, the normal mode implies that the text field is in\r\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\r\n\t * implies that the text field can only be scrolled but the text can not be\r\n\t * selected.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * On mobile platforms like Android, the text field starts in normal mode\r\n\t * (which implies scroll and non-selectable mode). The user can switch to\r\n\t * selection mode through the in-built context menu of the text field object.\r\n\t */\r\n\tpublic static SELECTION:string = \"selection\";\r\n}\r\n\r\nexport = TextInteractionMode;",
    "/**\r\n * The TextLineMetrics class contains information about the text position and\r\n * measurements of a line of text within a text field. All measurements are in\r\n * pixels. Objects of this class are returned by the \r\n * <code>away.entities.TextField.getLineMetrics()</code> method.\r\n */\r\nclass TextLineMetrics\r\n{\r\n\t/**\r\n\t * The ascent value of the text is the length from the baseline to the top of\r\n\t * the line height in pixels.\r\n\t */\r\n\tpublic ascent:number;\r\n\r\n\t/**\r\n\t * The descent value of the text is the length from the baseline to the\r\n\t * bottom depth of the line in pixels.\r\n\t */\r\n\tpublic descent:number;\r\n\r\n\t/**\r\n\t * The height value of the text of the selected lines (not necessarily the\r\n\t * complete text) in pixels. The height of the text line does not include the\r\n\t * gutter height.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The leading value is the measurement of the vertical distance between the\r\n\t * lines of text.\r\n\t */\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The width value is the width of the text of the selected lines (not\r\n\t * necessarily the complete text) in pixels. The width of the text line is\r\n\t * not the same as the width of the text field. The width of the text line is\r\n\t * relative to the text field width, minus the gutter width of 4 pixels\r\n\t * (2 pixels on each side).\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The x value is the left position of the first character in pixels. This\r\n\t * value includes the margin, indent (if any), and gutter widths.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\r\n\t * information about the text metrics of a line of text in a text field.\r\n\t * Objects of this class are returned by the\r\n\t * away.entities.TextField.getLineMetrics() method.\r\n\t *\r\n\t * @param x           The left position of the first character in pixels.\r\n\t * @param width       The width of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param height      The height of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param ascent      The length from the baseline to the top of the line\r\n\t *                    height in pixels.\r\n\t * @param descent     The length from the baseline to the bottom depth of\r\n\t *                    the line in pixels.\r\n\t * @param leading     The measurement of the vertical distance between the\r\n\t *                    lines of text.\r\n\t */\r\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass Single2DTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\r\n\r\n\tprivate _sampler2D:Sampler2D;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Single2DTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Image2D}\r\n\t */\r\n\tpublic get sampler2D():Sampler2D\r\n\t{\r\n\t\treturn this._sampler2D;\r\n\t}\r\n\r\n\tpublic set sampler2D(value:Sampler2D)\r\n\t{\r\n\t\tif (this._sampler2D == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\r\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\r\n\r\n\t\tthis._sampler2D = value;\r\n\r\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:Sampler2D);\r\n\tconstructor(source:Image2D);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof Image2D)\r\n\t\t\tthis.sampler2D = new Sampler2D(source);\r\n\t\telse\r\n\t\t\tthis.sampler2D = source;\r\n\r\n\t}\r\n}\r\n\r\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\r\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n\r\nclass SingleCubeTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\r\n\r\n\tprivate _samplerCube:SamplerCube;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn SingleCubeTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {BitmapData}\r\n\t */\r\n\tpublic get samplerCube():SamplerCube\r\n\t{\r\n\t\treturn this._samplerCube;\r\n\t}\r\n\r\n\tpublic set samplerCube(value:SamplerCube)\r\n\t{\r\n\t\tif (this._samplerCube == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._samplerCube = value;\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:SamplerCube);\r\n\tconstructor(source:ImageCube);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof ImageCube)\r\n\t\t\tthis.samplerCube = new SamplerCube(source);\r\n\t\telse\r\n\t\t\tthis.samplerCube = source;\r\n\t}\r\n}\r\n\r\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\r\n\r\n/**\r\n *\r\n */\r\nclass TextureBase extends AssetBase implements IAsset\r\n{\r\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\r\n\r\n\tpublic _width:number = 1;\r\n\tpublic _height:number = 1;\r\n\r\n\tget width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tget height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateContent():void\r\n\t{\r\n\t\tvar len:number = this._textureVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._textureVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic invalidateSize():void\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\r\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.push(textureVO);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _setSize(width:number, height:number)\r\n\t{\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t}\r\n\r\n}\r\n\r\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.CSSEntityCollector\r\n */\r\nclass CSSEntityCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.traverse.CollectorBase\r\n */\r\nclass CollectorBase\r\n{\r\n\tpublic scene:Scene;\r\n\r\n\tpublic _pEntityHead:EntityListItem;\r\n\tpublic _pEntityListItemPool:EntityListItemPool;\r\n\tpublic _pCamera:Camera;\r\n\tprivate _customCullPlanes:Array<Plane3D>;\r\n\tprivate _cullPlanes:Array<Plane3D>;\r\n\tprivate _numCullPlanes:number = 0;\r\n\tpublic _pNumEntities:number = 0;\r\n\tpublic _pNumInteractiveEntities:number = 0;\r\n\r\n\tpublic isEntityCollector:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tthis._pCamera = value;\r\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get cullPlanes():Array<Plane3D>\r\n\t{\r\n\t\treturn this._customCullPlanes;\r\n\t}\r\n\r\n\tpublic set cullPlanes(value:Array<Plane3D>)\r\n\t{\r\n\t\tthis._customCullPlanes = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get entityHead():EntityListItem\r\n\t{\r\n\t\treturn this._pEntityHead;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numEntities():number\r\n\t{\r\n\t\treturn this._pNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numInteractiveEntities():number\r\n\t{\r\n\t\treturn this._pNumInteractiveEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\r\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\r\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\r\n\t\tthis._pEntityHead = null;\r\n\t\tthis._pEntityListItemPool.freeAll();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\r\n\r\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\treturn enter;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyEntity(entity:IEntity)\r\n\t{\r\n\t\tthis._pNumEntities++;\r\n\r\n\t\tif (entity._iIsMouseEnabled())\r\n\t\t\tthis._pNumInteractiveEntities++;\r\n\r\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\r\n\t\titem.entity = entity;\r\n\r\n\t\titem.next = this._pEntityHead;\r\n\t\tthis._pEntityHead = item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n}\r\n\r\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\n\r\n/**\r\n * @class away.traverse.EntityCollector\r\n */\r\nclass EntityCollector extends CollectorBase\r\n{\r\n\tpublic _pSkybox:Skybox;\r\n\tpublic _pLights:Array<LightBase>;\r\n\tprivate _directionalLights:Array<DirectionalLight>;\r\n\tprivate _pointLights:Array<PointLight>;\r\n\tprivate _lightProbes:Array<LightProbe>;\r\n\r\n\tpublic _pNumLights:number = 0;\r\n\r\n\tprivate _numDirectionalLights:number = 0;\r\n\tprivate _numPointLights:number = 0;\r\n\tprivate _numLightProbes:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._directionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._lightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pointLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get skyBox():Skybox\r\n\t{\r\n\t\treturn this._pSkybox;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pLights = new Array<LightBase>();\r\n\t\tthis._directionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pointLights = new Array<PointLight>();\r\n\t\tthis._lightProbes = new Array<LightProbe>();\r\n\r\n\t\tthis.isEntityCollector = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\tthis._pSkybox = <Skybox> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tsuper.clear();\r\n\r\n\t\tthis._pSkybox = null;\r\n\r\n\t\tif (this._pNumLights > 0)\r\n\t\t\tthis._pLights.length = this._pNumLights = 0;\r\n\r\n\t\tif (this._numDirectionalLights > 0)\r\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\r\n\r\n\t\tif (this._numPointLights > 0)\r\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\r\n\r\n\t\tif (this._numLightProbes > 0)\r\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\r\n * considered intersecting with the defined ray.\r\n *\r\n * @see away.partition.Partition\r\n * @see away.entities.IEntity\r\n *\r\n * @class away.traverse.RaycastCollector\r\n */\r\nclass RaycastCollector extends CollectorBase\r\n{\r\n\tprivate _rayPosition:Vector3D = new Vector3D();\r\n\tprivate _rayDirection:Vector3D = new Vector3D();\r\n\r\n\tpublic _iCollectionMark:number = 0;\r\n\r\n\t/**\r\n\t * Provides the starting position of the ray.\r\n\t */\r\n\tpublic get rayPosition():Vector3D\r\n\t{\r\n\t\treturn this._rayPosition;\r\n\t}\r\n\r\n\tpublic set rayPosition(value:Vector3D)\r\n\t{\r\n\t\tthis._rayPosition = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides the direction vector of the ray.\r\n\t */\r\n\tpublic get rayDirection():Vector3D\r\n\t{\r\n\t\treturn this._rayDirection;\r\n\t}\r\n\r\n\tpublic set rayDirection(value:Vector3D)\r\n\t{\r\n\t\tthis._rayDirection = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RaycastCollector object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\r\n\t *\r\n\t * @param node The Partition3DNode object to frustum-test.\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\r\n\t}\r\n}\r\n\r\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.ShadowCasterCollector\r\n */\r\nclass ShadowCasterCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\r\n\r\n\t\tif (!enter) {\r\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn super.enterNode(node);\r\n\t}\r\n}\r\n\r\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\r\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n/**\r\n * Helper class for casting assets to usable objects\r\n */\r\nclass Cast\r\n{\r\n\tprivate static _colorNames:Object;\r\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\r\n\r\n\tprivate static _notClasses:Object = new Object();\r\n\tprivate static _classes:Object = new Object();\r\n\r\n\tpublic static string(data:any):string\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\treturn data;\r\n\r\n\t\treturn <string> data;\r\n\t}\r\n\r\n\tpublic static byteArray(data:any):ByteArray\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (data instanceof ByteArray)\r\n\t\t\treturn data;\r\n\r\n\t\treturn <ByteArray> data;\r\n\t}\r\n\r\n\t//        public static xml(data:any):XML\r\n\t//        {\r\n\t//            if (typeof(data) == 'function')\r\n\t//                data = new data;\r\n\t//\r\n\t//            if (data is XML)\r\n\t//                return data;\r\n\t//\r\n\t//            return XML(data);\r\n\t//        }\r\n\r\n\tprivate static isHex(str:string):boolean\r\n\t{\r\n\t\tvar length:number /*int*/ = str.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\r\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static tryColor(data:any):number /*uint*/\r\n\t{\r\n\t\tif (typeof(data) == 'number' /*uint*/)\r\n\t\t\treturn Math.floor(<number> data);\r\n\r\n\t\tif (typeof(data) == 'string') {\r\n\t\t\tif (data == \"random\")\r\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\r\n\r\n\t\t\tif (this._colorNames == null) {\r\n\t\t\t\tthis._colorNames = new Object();\r\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\r\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\r\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\r\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\r\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\r\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\r\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\r\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\r\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\r\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\r\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\r\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\r\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\r\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\r\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\r\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\r\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\r\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\r\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\r\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\r\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\r\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\r\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\r\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\r\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\r\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\r\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\r\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\r\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\r\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\r\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\r\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\r\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\r\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\r\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\r\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\r\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\r\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\r\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\r\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\r\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\r\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\r\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\r\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\r\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\r\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\r\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\r\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\r\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\r\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\r\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\r\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\r\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\r\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\r\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\r\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\r\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\r\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\r\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\r\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\r\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\r\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\r\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\r\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\r\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\r\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\r\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\r\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\r\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\r\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\r\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\r\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\r\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\r\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\r\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\r\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\r\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\r\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\r\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\r\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\r\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\r\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\r\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\r\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\r\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\r\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\r\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\r\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\r\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\r\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\r\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\r\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\r\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\r\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\r\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\r\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\r\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\r\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\r\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\r\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\r\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\r\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\r\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\r\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\r\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\r\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\r\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\r\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\r\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\r\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\r\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\r\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\r\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\r\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\r\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\r\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\r\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\r\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\r\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\r\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\r\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\r\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\r\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\r\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\r\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\r\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\r\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\r\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\r\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\r\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\r\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\r\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\r\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\r\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\r\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\r\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\r\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._colorNames[data] != null)\r\n\t\t\t\treturn this._colorNames[data];\r\n\r\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\r\n\t\t\t\treturn parseInt(\"0x\" + data);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static color(data:any):number /*uint*/\r\n\t{\r\n\t\tvar result:number /*uint*/ = this.tryColor(data);\r\n\r\n\t\tif (result == null)\r\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static tryClass(name:string):any\r\n\t{\r\n\t\tif (this._notClasses[name])\r\n\t\t\treturn name;\r\n\r\n\t\tvar result:any = this._classes[name];\r\n\r\n\t\tif (result != null)\r\n\t\t\treturn result;\r\n\r\n\t\ttry {\r\n\t\t\tresult = window[name];\r\n\t\t\tthis._classes[name] = result;\r\n\t\t\treturn result;\r\n\t\t} catch (e /*ReferenceError*/) {\r\n\t\t}\r\n\r\n\t\tthis._notClasses[name] = true;\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic static image2D(data:any):Image2D\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Image2D)\r\n\t\t\treturn data;\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\r\n\r\n\t\tif (data instanceof Sampler2D)\r\n\t\t\treturn (<Sampler2D> data).image2D;\r\n\r\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\r\n\t}\r\n\r\n\tpublic static bitmapTexture(data:any):Single2DTexture\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\treturn data;\r\n\r\n\t\ttry {\r\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\r\n\t\t\treturn new Single2DTexture(bmd);\r\n\t\t} catch (e /*CastError*/) {\r\n\t\t}\r\n\r\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\r\n\t}\r\n}\r\n\r\nexport = Cast;"
  ],
  "sourceRoot": ""
}
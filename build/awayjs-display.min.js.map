{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SceneEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/NullNode.ts",
    "awayjs-display/lib/partition/Partition.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "devisions",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "getCell",
    "x",
    "y",
    "index_x",
    "Math",
    "floor",
    "minx",
    "conversionX",
    "index_y",
    "miny",
    "conversionY",
    "buildGrid",
    "positions",
    "posDim",
    "dimensions",
    "Number",
    "MAX_VALUE",
    "maxx",
    "maxy",
    "k",
    "width",
    "height",
    "numCells",
    "cellWidth",
    "cellHeight",
    "id0",
    "id1",
    "id2",
    "ax",
    "ay",
    "bx",
    "by",
    "cx",
    "cy",
    "cells",
    "Array",
    "left",
    "min",
    "right",
    "max",
    "top",
    "bottom",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "j",
    "index",
    "nodes",
    "push",
    "hitTestPoint",
    "z",
    "curveDim",
    "curves",
    "cell",
    "dx",
    "dy",
    "nx",
    "ny",
    "dot",
    "curvex",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "v",
    "w",
    "uu",
    "vv",
    "az",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "AbstractMethodError",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "SceneEvent",
    "DisplayObject",
    "_this",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_iMaskID",
    "_iMasks",
    "_matrix3D",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_pImplicitVisibility",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_skewX",
    "_skewY",
    "_skewZ",
    "_scaleX",
    "_scaleY",
    "_scaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pos",
    "_rot",
    "_ske",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "_entityNodes",
    "_globalColorTransform",
    "_inheritColorTransform",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_onGlobalColorTransformChangedDelegate",
    "event",
    "onGlobalColorTransformChanged",
    "_onColorTransformChangedDelegate",
    "onColorTransformChanged",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_invalidateGlobalColorTransform",
    "_globalColorTransformDirty",
    "_updateGlobalColorTransform",
    "_pColorTransform",
    "alphaMultiplier",
    "removeEventListener",
    "_pSetColorTransform",
    "addEventListener",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_pIsEntity",
    "_loaderInfo",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "_elementsDirty",
    "updateElements",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "_width",
    "_setScaleX",
    "skewX",
    "invalidateSkew",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_pSceneTransformDirty",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "scaleX",
    "rawData",
    "invalidatePosition",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SKEW_CHANGED",
    "_listenToSkewChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "_iMatrix3D",
    "name",
    "concat",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "shapeFlag",
    "maskFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "reset_to_init_state",
    "visible",
    "colorTransform",
    "clear",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "hasEventListener",
    "translate",
    "distance",
    "sqrt",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_matrix3DDirty",
    "_pUpdateMatrix3D",
    "_pivotDirty",
    "_pUpdatePivot",
    "_pPickingCollisionVO",
    "iSetParent",
    "GLOBAL_COLOR_TRANSFORM_CHANGED",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "isEntity",
    "invalidatePartition",
    "_sceneTransformChanged",
    "queueDispatch",
    "partition",
    "scene",
    "sceneChanged",
    "dispatchEvent",
    "REMOVED_FROM_SCENE",
    "_iUnregisterPartition",
    "_pUnregisterEntity",
    "_iRegisterPartition",
    "_pRegisterEntity",
    "ADDED_TO_SCENE",
    "_sceneChanged",
    "appendTranslation",
    "_iController",
    "updateController",
    "_iIsRoot",
    "prepend",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iAddRenderable",
    "renderable",
    "_iRemoveRenderable",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "update",
    "_iIsMouseEnabled",
    "_iSetScene",
    "invalidateMatrix3D",
    "_positionChanged",
    "matrixDirty",
    "_rotationChanged",
    "_skewChanged",
    "invalidateScale",
    "_scaleChanged",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "globalColorTransform",
    "_globalColorTransformChanged",
    "elements",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/SceneEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "thickness",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_colorTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_children",
    "addChild",
    "child",
    "removeChildInternal",
    "addChildAt",
    "addChildren",
    "childarray",
    "_i",
    "mouseEnabled",
    "contains",
    "disposeWithChildren",
    "numChildren",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "getObjectsUnderPoint",
    "removeChildAt",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "masksFlag",
    "childHit",
    "all_masks",
    "mi_cnt",
    "mask_child",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "NodeBase",
    "Partition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "_partition",
    "_iSceneGraphRoot",
    "traversePartitions",
    "traverser",
    "traverse",
    "PARTITION_CHANGED",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/Partition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "renderer",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onScenePartitionChangedDelegate",
    "onScenePartitionChanged",
    "_onProjectionChangedDelegate",
    "onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pCamera",
    "_iRegisterCamera",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "_applyColorTransform",
    "_parentColorTransform",
    "redMultiplier",
    "blueMultiplier",
    "greenMultiplier",
    "alphaOffset",
    "redOffset",
    "blueOffset",
    "greenOffset",
    "testBillboardCollision",
    "_applyRenderer",
    "_iApplyRenderableOwner",
    "_iRegisterEntity",
    "_iUnregisterEntity",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "_iUnregisterCamera",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "_iRegisterDirectionalLight",
    "_iUnregisterDirectionalLight",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "_iRegisterLightProbe",
    "_iUnregisterLightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "_iCopyToMesh",
    "boundsType",
    "shareAnimationGeometry",
    "extra",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "tmp_maxZ",
    "tmp_minZ",
    "isAsset",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "all_hir_masks",
    "hit",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "_iRegisterPointLight",
    "_iUnregisterPointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "_iRegisterSkybox",
    "_iUnregisterSkybox",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextFieldType",
    "TextField",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "reConstruct",
    "_textFormat",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "y_offset",
    "prev_char",
    "textlines",
    "text",
    "toString",
    "split",
    "tl",
    "line_width",
    "font_chars",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "get_whitespace_width",
    "x_offset",
    "align",
    "positions2",
    "numVertices",
    "curveData2",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "_iCopyToTextField",
    "textWidth",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "Event",
    "_camera",
    "awayjs-core/lib/events/Event",
    "object",
    "VISIBLITY_UPDATED",
    "awayjs-display/lib/events/MouseEvent",
    "MouseEvent",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_UP",
    "MOUSE_DOWN",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "preventDefault",
    "bounds",
    "mouseX",
    "changedTouches",
    "mouseY",
    "getBoundingClientRect",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touch",
    "touchPointID",
    "TouchPoint",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "init",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_pool",
    "_entity",
    "_iNumEntities",
    "removeFromParent",
    "_iParent",
    "iRemoveNode",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_pNumChildNodes",
    "_pChildNodes",
    "_explicitDebugVisible",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "_debugChildrenVisible",
    "findPartitionForEntity",
    "_pNumEntities",
    "applyDebugEntity",
    "iAddNode",
    "node",
    "numEntities",
    "pop",
    "awayjs-display/lib/partition/NullNode",
    "NullNode",
    "PointLightNode",
    "SkyboxNode",
    "EntityNodePool",
    "rootNode",
    "_updatesMade",
    "_rootNode",
    "_cameraNodePool",
    "_directionalLightNodePool",
    "_entityNodePool",
    "_lightProbeNodePool",
    "_pointLightNodePool",
    "_skyboxNodePool",
    "_updateQueue",
    "_iUpdateQueueNext",
    "updateEntities",
    "iRemoveEntity",
    "targetNode",
    "getItem",
    "pointLight",
    "skybox",
    "disposeItem",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/pool/EntityNodePool",
    "_pointLight",
    "applyPointLight",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "bestCollisionVO",
    "updateLocalPosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "entityNodeClass",
    "_entityNodeClass",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "registerClass",
    "subMeshClass",
    "classPool",
    "addDefaults",
    "main",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "str",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n/**\r\n * Provides an abstract base class for nodes in an animation blend tree.\r\n */\r\nclass AnimationNodeBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\r\n\r\n\tpublic _pStateClass:any;\r\n\r\n\tpublic get stateClass():any\r\n\t{\r\n\t\treturn this._pStateClass;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>AnimationNodeBase</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AnimationNodeBase.assetType;\r\n\t}\r\n}\r\n\r\nexport = AnimationNodeBase;",
    "/**\r\n *\r\n */\r\nclass AlignmentMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PIVOT_POINT:string = \"pivot\";\r\n}\r\n\r\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.CurveSubGeometry\n */\nclass CurveSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _uvsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _curves:Float2Attributes;\n\tprivate _uvs:Float2Attributes;\n\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubGeometry.assetType;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis._uvsDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get curves():Float2Attributes\n\t{\n\t\treturn this._curves;\n\t}\n\n\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\t//grid stuff - to tidy\n\tprivate cells:Array<Array<number>>;\n\t//TODO - generate this dyanamically based on num tris\n\tprivate devisions:number = 32;\n\tprivate conversionX:number;\n\tprivate conversionY:number;\n\tprivate minx:number;\n\tprivate maxx:number;\n\tprivate miny:number;\n\tprivate maxy:number;\n\n\tprivate getCell(x:number, y:number):number\n\t{\n\t\tvar index_x:number = Math.floor((x - this.minx) * this.conversionX);\n\t\tvar index_y:number = Math.floor((y - this.miny) * this.conversionY);\n\n\t\t//out of bounds\n\t\tif(index_x < 0 || index_x > this.devisions || index_y < 0 || index_y > this.devisions) return -1;\n\n\t\treturn  index_x + index_y * this.devisions;\n\t}\n\tprivate buildGrid():void\n\t{\n\t\t//calculate bounds, ideally via bounding box already computed\n\t\t//if not just loop through and generate min/max\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\n\t\tvar posDim:number = this.positions.dimensions;\n\t\tthis.minx = Number.MAX_VALUE;\n\t\tthis.maxx = -Number.MAX_VALUE;\n\t\tthis.miny = Number.MAX_VALUE;\n\t\tthis.maxy = -Number.MAX_VALUE;\n\t\tfor(var k:number = 0; k < positions.length; k+=3)\n\t\t{\n\t\t\tvar x:number = positions[k];\n\t\t\tvar y:number = positions[k + 1];\n\n\t\t\tif(x < this.minx) this.minx = x;\n\t\t\tif(x > this.maxx) this.maxx = x;\n\t\t\tif(y < this.miny) this.miny = y;\n\t\t\tif(y > this.maxy) this.maxy = y;\n\t\t}\n\n\t\tvar width:number = this.maxx - this.minx;\n\t\tvar height:number = this.maxy - this.miny;\n\n\n\t\t//now we have bounds start creating grid cells and filling\n\t\tvar numCells:number = this.devisions * this.devisions;\n\t\tvar cellWidth:number = width/this.devisions;\n\t\tvar cellHeight:number = height/this.devisions;\n\n\t\tthis.conversionX = 1/cellWidth;\n\t\tthis.conversionY = 1/cellHeight;\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\tthis.cells = new Array<Array<number>>(numCells);\n\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3) {\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//subtractions to push into positive space\n\t\t\tvar left:number = Math.min(ax, bx, cx)-this.minx;\n\t\t\tvar right:number = Math.max(ax, bx, cx)-this.minx;\n\t\t\tvar top:number = Math.min(ay, by, cy)-this.miny;\n\t\t\tvar bottom:number = Math.max(ay, by, cy)-this.miny;\n\n\t\t\tvar min_index_x:number = Math.floor(left * this.conversionX);\n\t\t\tvar min_index_y:number = Math.floor(top * this.conversionY);\n\n\t\t\tvar max_index_x:number = Math.floor(right * this.conversionX);\n\t\t\tvar max_index_y:number = Math.floor(bottom * this.conversionY);\n\n\n\t\t\tfor (var i : number = min_index_x; i <= max_index_x; i++)\n\t\t\t{\n\t\t\t\tfor (var j : number = min_index_y; j <= max_index_y; j++)\n\t\t\t\t{\n\t\t\t\t\tvar index:number = i + j * this.devisions;\n\t\t\t\t\tvar nodes:Array<number> = this.cells[index];\n\t\t\t\t\tif(nodes == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnodes = new Array<number>();\n\t\t\t\t\t\tthis.cells[index] = nodes;\n\t\t\t\t\t}\n\t\t\t\t\t//push in the triangle ids\n\t\t\t\t\tnodes.push(id0, id1, id2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean {\n\t\tvar posDim:number = this.positions.dimensions;\n\t\tvar curveDim:number = this.curves.dimensions;\n\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\n\t\tvar curves:Float32Array = this.curves.get(this._numVertices);\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\tif (this.cells == null) {\n\t\t\tthis.buildGrid();\n\t\t}\n\t\tvar cell:number = this.getCell(x,y);\n\t\tif(cell == -1) return false;\n\n\t\tvar nodes:Array<number> = this.cells[cell];\n\t\tif(nodes == null) return false;\n\n\n\t\tfor(var k:number = 0; k < nodes.length; k+=3)\n\t\t{\n\t\t\tid0 = nodes[k];\n\t\t\tid1 = nodes[k+1];\n\t\t\tid2 = nodes[k + 2];\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - x;\n\t\t\tvar dy:number = ay - y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tdx = bx - x;\n\t\t\tdy = by - y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tdx = cx - x;\n\t\t\tdy = cy - y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t//here be dragons\n\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\tvar vv:number = w;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\n\t\t//brute force\n\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3)\n\t\t{\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - x;\n\t\t\tvar dy:number = ay - y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tdx = bx - x;\n\t\t\tdy = by - y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tdx = cx - x;\n\t\t\tdy = cy - y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t//here be dragons\n\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\tvar vv:number = w;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setCurves(array:Array<number>, offset?:number);\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setCurves(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._curves)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._curves.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._curves);\n\n\t\tthis._verticesDirty[this._curves.id] = false;\n\t}\n\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._curves.dispose();\n\t\tthis._curves = null;\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CurveSubGeometry\n\t{\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.CurveSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.CurveSubMesh\r\n */\r\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\r\n\r\n\tprivate _subGeometry:CurveSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t */\r\n\tpublic get subGeometry():CurveSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new CurveSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\r\n\t * @param material An optional material used to render this CurveSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\r\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\r\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n * The DisplayObject class is the base class for all objects that can be\r\n * placed on the display list. The display list manages all objects displayed\r\n * in flash. Use the DisplayObjectContainer class to arrange the\r\n * display objects in the display list. DisplayObjectContainer objects can\r\n * have child display objects, while other display objects, such as Shape and\r\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\r\n * children.\r\n *\r\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\r\n * and <i>y</i> position of an object, as well as more advanced properties of\r\n * the object such as its transformation matrix. </p>\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception. </p>\r\n *\r\n * <p>All display objects inherit from the DisplayObject class.</p>\r\n *\r\n * <p>The DisplayObject class itself does not include any APIs for rendering\r\n * content onscreen. For that reason, if you want create a custom subclass of\r\n * the DisplayObject class, you will want to extend one of its subclasses that\r\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\r\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\r\n *\r\n * <p>The DisplayObject class contains several broadcast events. Normally, the\r\n * target of any particular event is a specific DisplayObject instance. For\r\n * example, the target of an <code>added</code> event is the specific\r\n * DisplayObject instance that was added to the display list. Having a single\r\n * target restricts the placement of event listeners to that target and in\r\n * some cases the target's ancestors on the display list. With broadcast\r\n * events, however, the target is not a specific DisplayObject instance, but\r\n * rather all DisplayObject instances, including those that are not on the\r\n * display list. This means that you can add a listener to any DisplayObject\r\n * instance to listen for broadcast events. In addition to the broadcast\r\n * events listed in the DisplayObject class's Events table, the DisplayObject\r\n * class also inherits two broadcast events from the EventDispatcher class:\r\n * <code>activate</code> and <code>deactivate</code>.</p>\r\n *\r\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\r\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\r\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\r\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\r\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\r\n * longer begin with the underscore(_) character.</p>\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n * \r\n * @event added            Dispatched when a display object is added to the\r\n *                         display list. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event addedToScene     Dispatched when a display object is added to the on\r\n *                         scene display list, either directly or through the\r\n *                         addition of a sub tree in which the display object\r\n *                         is contained. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\r\n *                         entering a new frame. If the playhead is not\r\n *                         moving, or if there is only one frame, this event\r\n *                         is dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\r\n *                         exiting the current frame. All frame scripts have\r\n *                         been run. If the playhead is not moving, or if\r\n *                         there is only one frame, this event is dispatched\r\n *                         continuously in conjunction with the frame rate.\r\n *                         This event is a broadcast event, which means that\r\n *                         it is dispatched by all display objects with a\r\n *                         listener registered for this event.\r\n * @event frameConstructed [broadcast event] Dispatched after the constructors\r\n *                         of frame display objects have run but before frame\r\n *                         scripts have run. If the playhead is not moving, or\r\n *                         if there is only one frame, this event is\r\n *                         dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event removed          Dispatched when a display object is about to be\r\n *                         removed from the display list. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event removedFromScene Dispatched when a display object is about to be\r\n *                         removed from the display list, either directly or\r\n *                         through the removal of a sub tree in which the\r\n *                         display object is contained. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event render           [broadcast event] Dispatched when the display list\r\n *                         is about to be updated and rendered. This event\r\n *                         provides the last opportunity for objects listening\r\n *                         for this event to make changes before the display\r\n *                         list is rendered. You must call the\r\n *                         <code>invalidate()</code> method of the Scene\r\n *                         object each time you want a <code>render</code>\r\n *                         event to be dispatched. <code>Render</code> events\r\n *                         are dispatched to an object only if there is mutual\r\n *                         trust between it and the object that called\r\n *                         <code>Scene.invalidate()</code>. This event is a\r\n *                         broadcast event, which means that it is dispatched\r\n *                         by all display objects with a listener registered\r\n *                         for this event.\r\n *\r\n *                         <p><b>Note: </b>This event is not dispatched if the\r\n *                         display is not rendering. This is the case when the\r\n *                         content is either minimized or obscured. </p>\r\n */\r\nclass DisplayObject extends AssetBase implements IBitmapDrawable\r\n{\r\n\tprivate _queuedEvents:Array<Event> = new Array<Event>();\r\n\tprivate _elementsDirty:boolean;\r\n\tprivate _loaderInfo:LoaderInfo;\r\n\tprivate _mouseX:number;\r\n\tprivate _mouseY:number;\r\n\tprivate _root:DisplayObjectContainer;\r\n\tprivate _bounds:Rectangle;\r\n\tpublic _pBoxBounds:Box;\r\n\tprivate _boxBoundsInvalid:boolean = true;\r\n\tpublic _pSphereBounds:Sphere;\r\n\tprivate _sphereBoundsInvalid:boolean = true;\r\n\tprivate _debugVisible:boolean;\r\n\tpublic _pName:string;\r\n\r\n\tpublic _pScene:Scene;\r\n\tpublic _pParent:DisplayObjectContainer;\r\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\r\n\tpublic _pSceneTransformDirty:boolean;\r\n\tpublic _pIsEntity:boolean;\r\n    public _iMaskID:number = -1;\r\n    public _iMasks:DisplayObject[] = null;\r\n\r\n\tprivate _explicitPartition:Partition;\r\n\tpublic _pImplicitPartition:Partition;\r\n\r\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\r\n\tprivate _sceneChanged:DisplayObjectEvent;\r\n\tprivate _transform:Transform;\r\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\r\n\tprivate _matrix3DDirty:boolean;\r\n    public _pColorTransform:ColorTransform;\r\n\r\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\r\n\tprivate _inverseSceneTransformDirty:boolean;\r\n\tprivate _scenePosition:Vector3D = new Vector3D();\r\n\tprivate _scenePositionDirty:boolean;\r\n\tprivate _explicitVisibility:boolean = true;\r\n\tpublic _pImplicitVisibility:boolean = true;\r\n\tprivate _explicitMouseEnabled:boolean = true;\r\n\tpublic _pImplicitMouseEnabled:boolean = true;\r\n\tprivate _listenToSceneTransformChanged:boolean;\r\n\tprivate _listenToSceneChanged:boolean;\r\n\r\n\tprivate _positionDirty:boolean;\r\n\tprivate _rotationDirty:boolean;\r\n\tprivate _skewDirty:boolean;\r\n\tprivate _scaleDirty:boolean;\r\n\r\n\tprivate _positionChanged:DisplayObjectEvent;\r\n\tprivate _rotationChanged:DisplayObjectEvent;\r\n\tprivate _skewChanged:DisplayObjectEvent;\r\n\tprivate _scaleChanged:DisplayObjectEvent;\r\n\r\n\tprivate _rotationX:number = 0;\r\n\tprivate _rotationY:number = 0;\r\n\tprivate _rotationZ:number = 0;\r\n\tprivate _eulers:Vector3D = new Vector3D();\r\n\tprivate _flipY:Matrix3D = new Matrix3D();\r\n\r\n\tprivate _listenToPositionChanged:boolean;\r\n\tprivate _listenToRotationChanged:boolean;\r\n\tprivate _listenToSkewChanged:boolean;\r\n\tprivate _listenToScaleChanged:boolean;\r\n\tprivate _zOffset:number = 0;\r\n\r\n\tpublic _width:number;\r\n\tpublic _height:number;\r\n\tpublic _depth:number;\r\n\r\n\tprivate _skewX:number = 0;\r\n\tprivate _skewY:number = 0;\r\n\tprivate _skewZ:number = 0;\r\n\tprivate _scaleX:number = 1;\r\n\tprivate _scaleY:number = 1;\r\n\tprivate _scaleZ:number = 1;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _pivot:Vector3D = new Vector3D();\r\n\tprivate _pivotScale:Vector3D = new Vector3D();\r\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\r\n\tprivate _pivotZero:boolean = true;\r\n\tprivate _pivotDirty:boolean;\r\n\tprivate _pos:Vector3D = new Vector3D();\r\n\tprivate _rot:Vector3D = new Vector3D();\r\n\tprivate _ske:Vector3D = new Vector3D();\r\n\tprivate _sca:Vector3D = new Vector3D();\r\n\tprivate _transformComponents:Array<Vector3D>;\r\n\r\n\tpublic _pIgnoreTransform:boolean = false;\r\n\r\n\tprivate _shaderPickingDetails:boolean;\r\n\r\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\r\n\r\n\tpublic _boundsType:string;\r\n\r\n\tpublic _pPickingCollider:IPickingCollider;\r\n\r\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\r\n\r\n\tpublic _iSourcePrefab:PrefabBase;\r\n\r\n    private _globalColorTransformChanged:DisplayObjectEvent;\r\n    private _globalColorTransformDirty:boolean;\r\n    private _globalColorTransform:ColorTransform = new ColorTransform();\r\n    private _onGlobalColorTransformChangedDelegate:(event:DisplayObjectEvent) => void;\r\n    private _onColorTransformChangedDelegate:(event:Event) => void;\r\n    private _inheritColorTransform:boolean = false;\r\n\r\n    public get inheritColorTransform():boolean\r\n    {\r\n        return this._inheritColorTransform;\r\n    }\r\n\r\n    public set inheritColorTransform(value:boolean)\r\n    {\r\n        this._inheritColorTransform = value;\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n\r\n    public get globalColorTransform():ColorTransform\r\n    {\r\n        if (this._globalColorTransformDirty)\r\n            this._updateGlobalColorTransform();\r\n\r\n        return this._globalColorTransform;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\r\n\r\n\t/**\r\n\t * Indicates the alpha transparency value of the object specified. Valid\r\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\r\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\r\n\t * even though they are invisible.\r\n\t */\r\n\tpublic get alpha():number\r\n    {\r\n        return this._pColorTransform.alphaMultiplier;\r\n    }\r\n\r\n    public set alpha(value:number)\r\n    {\r\n        this._pColorTransform.alphaMultiplier = value;\r\n    }\r\n\r\n    public get colorTransform()\r\n    {\r\n        return this._pColorTransform;\r\n    }\r\n\r\n    public set colorTransform(value:ColorTransform)\r\n    {\r\n        // TS compiler freaking out over Event.CHANGE, using literal strings for now\r\n        if (this._pColorTransform)\r\n            this._pColorTransform.removeEventListener(\"change\", this._onColorTransformChangedDelegate);\r\n\r\n\r\n        this._pSetColorTransform(value);\r\n\r\n        if (value)\r\n            value.addEventListener(\"change\", this._onColorTransformChangedDelegate);\r\n    }\r\n\r\n\t/**\r\n\t * A value from the BlendMode class that specifies which blend mode to use. A\r\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\r\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\r\n\t * bitmap-filled square shape to the vector render. If you attempt to set\r\n\t * this property to an invalid value, Flash runtimes set the value to\r\n\t * <code>BlendMode.NORMAL</code>.\r\n\t *\r\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\r\n\t * object. Each pixel is composed of three constituent colors(red, green,\r\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\r\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\r\n\t * the movie clip with the corresponding color of the pixel in the\r\n\t * background. For example, if <code>blendMode</code> is set to\r\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\r\n\t * value of the display object with the red value of the background, and uses\r\n\t * the lighter of the two as the value for the red component of the displayed\r\n\t * color.</p>\r\n\t *\r\n\t * <p>The following table describes the <code>blendMode</code> settings. The\r\n\t * BlendMode class defines string values you can use. The illustrations in\r\n\t * the table show <code>blendMode</code> values applied to a circular display\r\n\t * object(2) superimposed on another display object(1).</p>\r\n\t */\r\n\tpublic blendMode:BlendMode;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get boundsType():string\r\n\t{\r\n\t\treturn this._boundsType;\r\n\t}\r\n\r\n\tpublic set boundsType(value:string)\r\n\t{\r\n\t\tif (this._boundsType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._boundsType = value;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].updateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * If set to <code>true</code>, NME will use the software renderer to cache\r\n\t * an internal bitmap representation of the display object. For native targets,\r\n\t * this is often much slower than the default hardware renderer. When you\r\n\t * are using the Flash target, this caching may increase performance for display\r\n\t * objects that contain complex vector content.\r\n\t *\r\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\r\n\t * to the bitmap instead of the main display. If\r\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\r\n\t * then copied to the main display as unstretched, unrotated pixels snapped\r\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\r\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\r\n\t * instead of being stretched.</p>\r\n\t *\r\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\r\n\t * object is drawn to the off-screen bitmap using that matrix and the\r\n\t * stretched and/or rotated results of that rendering are used to draw the\r\n\t * object to the main display.</p>\r\n\t *\r\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\r\n\t * property is set to <code>true</code>.</p>\r\n\t *\r\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\r\n\t * <code>true</code>, the rendering does not change, however the display\r\n\t * object performs pixel snapping automatically. The animation speed can be\r\n\t * significantly faster depending on the complexity of the vector content.\r\n\t * </p>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\r\n\t * <code>true</code> whenever you apply a filter to a display object(when\r\n\t * its <code>filter</code> array is not empty), and if a display object has a\r\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\r\n\t * <code>true</code> for that display object, even if you set the property to\r\n\t * <code>false</code>. If you clear all filters for a display object, the\r\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\r\n\t *\r\n\t * <p>A display object does not use a bitmap even if the\r\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\r\n\t * instead renders from vector data in the following cases:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\r\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\r\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\r\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\r\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\r\n\t * in width.</li>\r\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\r\n\t * that have mostly static content and that do not scale and rotate\r\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\r\n\t * performance increases when the movie clip is translated(when its <i>x</i>\r\n\t * and <i>y</i> position is changed).</p>\r\n\t */\r\n\tpublic cacheAsBitmap:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic castsShadows:boolean = true;\r\n\r\n\t/**\r\n\t * Indicates the depth of the display object, in pixels. The depth is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\r\n\t * set <code>depth</code> to a different value.</p>\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this.getBox().depth*this.scaleZ;\r\n\t}\r\n\r\n\tpublic set depth(val:number)\r\n\t{\r\n\t\tif (this._depth == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._depth = val;\r\n\r\n\t\tthis._setScaleZ(val/this.getBox().depth);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\r\n\t */\r\n\tpublic get eulers():Vector3D\r\n\t{\r\n\t\tthis._eulers.x = this.rotationX;\r\n\t\tthis._eulers.y = this.rotationY;\r\n\t\tthis._eulers.z = this.rotationZ;\r\n\r\n\t\treturn this._eulers;\r\n\t}\r\n\r\n\tpublic set eulers(value:Vector3D)\r\n\t{\r\n\t\tthis.rotationX = value.x;\r\n\t\tthis.rotationY = value.y;\r\n\t\tthis.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * An object that can contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * An indexed array that contains each filter object currently associated\r\n\t * with the display object. The flash.filters package contains several\r\n\t * classes that define specific filters you can use.\r\n\t *\r\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\r\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\r\n\t * you must make a temporary copy of the entire <code>filters</code> array,\r\n\t * modify the temporary array, then assign the value of the temporary array\r\n\t * back to the <code>filters</code> array. You cannot directly add a new\r\n\t * filter object to the <code>filters</code> array.</p>\r\n\t *\r\n\t * <p>To add a filter by using ActionScript, perform the following steps\r\n\t * (assume that the target display object is named\r\n\t * <code>myDisplayObject</code>):</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Create a new filter object by using the constructor method of your\r\n\t * chosen filter class.</li>\r\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\r\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\r\n\t * array.</li>\r\n\t *   <li>Assign the value of the temporary array to the\r\n\t * <code>myDisplayObject.filters</code> array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\r\n\t * a temporary array. Instead, you can directly assign an array literal that\r\n\t * contains one or more filter objects that you create. The first example in\r\n\t * the Examples section adds a drop shadow filter by using code that handles\r\n\t * both defined and undefined <code>filters</code> arrays.</p>\r\n\t *\r\n\t * <p>To modify an existing filter object, you must use the technique of\r\n\t * modifying a copy of the <code>filters</code> array:</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\r\n\t * array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Modify the property by using the temporary array,\r\n\t * <code>myFilters</code>. For example, to set the quality property of the\r\n\t * first filter in the array, you could use the following code:\r\n\t * <code>myFilters[0].quality = 1;</code></li>\r\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\r\n\t * array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>At load time, if a display object has an associated filter, it is\r\n\t * marked to cache itself as a transparent bitmap. From this point forward,\r\n\t * as long as the display object has a valid filter list, the player caches\r\n\t * the display object as a bitmap. This source bitmap is used as a source\r\n\t * image for the filter effects. Each display object usually has two bitmaps:\r\n\t * one with the original unfiltered source display object and another for the\r\n\t * final image after filtering. The final image is used when rendering. As\r\n\t * long as the display object does not change, the final image does not need\r\n\t * updating.</p>\r\n\t *\r\n\t * <p>The flash.filters package includes classes for filters. For example, to\r\n\t * create a DropShadow filter, you would write:</p>\r\n\t *\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel4</code> output).\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader doesn't specify any image input or\r\n\t *                       the first input is not an <code>image4</code> input.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\r\n\t *                       ByteArray or Vector.<Number> instance as a shader\r\n\t *                       input, and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput object, or the specified values\r\n\t *                       don't match the amount of data in the input data.\r\n\t *                       See the <code>ShaderInput.input</code> property for\r\n\t *                       more information.\r\n\t */\r\n//\t\tpublic filters:Array<Dynamic>;\r\n\r\n\t/**\r\n\t * Indicates the height of the display object, in pixels. The height is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a height of 0, even if you try to\r\n\t * set <code>height</code> to a different value.</p>\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this.getBox().height*this.scaleY;\r\n\t}\r\n\r\n\tpublic set height(val:number)\r\n\t{\r\n\t\tif (this._height == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = val;\r\n\r\n\t\tthis._setScaleY(val/this.getBox().height);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance container index of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByIndex()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\r\n\t */\r\n\tpublic get index():number\r\n\t{\r\n\t\tif (this._pParent)\r\n\t\t\treturn this._pParent.getChildIndex(this);\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get inverseSceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._inverseSceneTransformDirty) {\r\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\r\n\t\t\tthis._inverseSceneTransform.invert();\r\n\t\t\tthis._inverseSceneTransformDirty = false;\r\n\t\t}\r\n\t\treturn this._inverseSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get ignoreTransform():boolean\r\n\t{\r\n\t\treturn this._pIgnoreTransform;\r\n\t}\r\n\r\n\tpublic set ignoreTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pIgnoreTransform == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pIgnoreTransform = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._pSceneTransform.identity();\r\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\r\n\t\t}\r\n\r\n\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isEntity()\r\n\t{\r\n\t\treturn this._pIsEntity;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object containing information about loading the file\r\n\t * to which this display object belongs. The <code>loaderInfo</code> property\r\n\t * is defined only for the root display object of a SWF file or for a loaded\r\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\r\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\r\n\t * a display object named <code>myDisplayObject</code>, use\r\n\t * <code>myDisplayObject.root.loaderInfo</code>.\r\n\t *\r\n\t * <p>A large SWF file can monitor its download by calling\r\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\r\n\t * func)</code>.</p>\r\n\t */\r\n\tpublic get loaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._loaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * The calling display object is masked by the specified <code>mask</code>\r\n\t * object. To ensure that masking works when the Stage is scaled, the\r\n\t * <code>mask</code> display object must be in an active part of the display\r\n\t * list. The <code>mask</code> object itself is not drawn. Set\r\n\t * <code>mask</code> to <code>null</code> to remove the mask.\r\n\t *\r\n\t * <p>To be able to scale a mask object, it must be on the display list. To\r\n\t * be able to drag a mask Sprite object(by calling its\r\n\t * <code>startDrag()</code> method), it must be on the display list. To call\r\n\t * the <code>startDrag()</code> method for a mask sprite based on a\r\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\r\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\r\n\t *\r\n\t * <p>When display objects are cached by setting the\r\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\r\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\r\n\t * mask and the display object being masked must be part of the same cached\r\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\r\n\t * child of the display object. If an ancestor of the display object on the\r\n\t * display list is cached, then the mask must be a child of that ancestor or\r\n\t * one of its descendents. If more than one ancestor of the masked object is\r\n\t * cached, then the mask must be a descendent of the cached container closest\r\n\t * to the masked object in the display list.</p>\r\n\t *\r\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\r\n\t * more than one calling display object. When the <code>mask</code> is\r\n\t * assigned to a second display object, it is removed as the mask of the\r\n\t * first object, and that object's <code>mask</code> property becomes\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic mask:DisplayObject;\r\n\r\n\t/**\r\n\t * Specifies whether this object receives mouse, or other user input,\r\n\t * messages. The default value is <code>true</code>, which means that by\r\n\t * default any InteractiveObject instance that is on the display list\r\n\t * receives mouse events or other user input events. If\r\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\r\n\t * not receive any mouse events(or other user input events like keyboard\r\n\t * events). Any children of this instance on the display list are not\r\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\r\n\t * children of an object on the display list, use\r\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseEnabled():boolean\r\n\t{\r\n\t\treturn this._explicitMouseEnabled;\r\n\t}\r\n\r\n\tpublic set mouseEnabled(value:boolean)\r\n\t{\r\n\t\tif (this._explicitMouseEnabled == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMouseEnabled = value;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates the x coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._mouseX;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._mouseY;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance name of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByName()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * @throws IllegalOperationError If you are attempting to set this property\r\n\t *                               on an object that was placed on the timeline\r\n\t *                               in the Flash authoring tool.\r\n\t */\r\n\tpublic get name() :string\r\n    {\r\n        return this._pName;\r\n    }\r\n\r\n    public set name(value : string)\r\n    {\r\n        this._pName = value;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\r\n\r\n\t/**\r\n\t * Indicates the DisplayObjectContainer object that contains this display\r\n\t * object. Use the <code>parent</code> property to specify a relative path to\r\n\t * display objects that are above the current display object in the display\r\n\t * list hierarchy.\r\n\t *\r\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\r\n\t * display list as in the following:</p>\r\n\t *\r\n\t * @throws SecurityError The parent display object belongs to a security\r\n\t *                       sandbox to which you do not have access. You can\r\n\t *                       avoid this situation by having the parent movie call\r\n\t *                       the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic get parent():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._pParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._explicitPartition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tif (this._explicitPartition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitPartition = value;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pickingCollider():IPickingCollider\r\n\t{\r\n\t\treturn this._pPickingCollider;\r\n\t}\r\n\r\n\tpublic set pickingCollider(value:IPickingCollider)\r\n\t{\r\n\t\tthis._pPickingCollider = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the local point around which the object rotates.\r\n\t */\r\n\tpublic get pivot():Vector3D\r\n\t{\r\n\t\treturn this._pivot;\r\n\t}\r\n\r\n\r\n\tpublic set pivot(pivot:Vector3D)\r\n\t{\r\n\t\tif (this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivot.x = pivot.x;\r\n\t\tthis._pivot.y = pivot.y;\r\n\t\tthis._pivot.z = pivot.z;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * For a display object in a loaded SWF file, the <code>root</code> property\r\n\t * is the top-most display object in the portion of the display list's tree\r\n\t * structure represented by that SWF file. For a Bitmap object representing a\r\n\t * loaded image file, the <code>root</code> property is the Bitmap object\r\n\t * itself. For the instance of the main class of the first SWF file loaded,\r\n\t * the <code>root</code> property is the display object itself. The\r\n\t * <code>root</code> property of the Scene object is the Scene object itself.\r\n\t * The <code>root</code> property is set to <code>null</code> for any display\r\n\t * object that has not been added to the display list, unless it has been\r\n\t * added to a display object container that is off the display list but that\r\n\t * is a child of the top-most display object in a loaded SWF file.\r\n\t *\r\n\t * <p>For example, if you create a new Sprite object by calling the\r\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\r\n\t * is <code>null</code> until you add it to the display list(or to a display\r\n\t * object container that is off the display list but that is a child of the\r\n\t * top-most display object in a SWF file).</p>\r\n\t *\r\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\r\n\t * file may not be on the display list, the top-most display object in the\r\n\t * SWF file has its <code>root</code> property set to itself. The Loader\r\n\t * object does not have its <code>root</code> property set until it is added\r\n\t * as a child of a display object for which the <code>root</code> property is\r\n\t * set.</p>\r\n\t */\r\n\tpublic get root():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._root;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\r\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\r\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\r\n\t * this range are added to or subtracted from 360 to obtain a value within\r\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\r\n\t * is the same as <code> my_video.rotation = 90</code>.\r\n\t */\r\n\tpublic rotation:number; //TODO\r\n\r\n\t/**\r\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationX(val:number)\r\n\t{\r\n\t\tif (this.rotationX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationY(val:number)\r\n\t{\r\n\t\tif (this.rotationY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationZ(val:number)\r\n\t{\r\n\t\tif (this.rotationZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\r\n\t * the entire display object is scaled normally when any scale transformation\r\n\t * is applied.\r\n\t *\r\n\t * <p>When you define the <code>scale9Grid</code> property, the display\r\n\t * object is divided into a grid with nine regions based on the\r\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\r\n\t * grid. The eight other regions of the grid are the following areas: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The upper-left corner outside of the rectangle</li>\r\n\t *   <li>The area above the rectangle </li>\r\n\t *   <li>The upper-right corner outside of the rectangle</li>\r\n\t *   <li>The area to the left of the rectangle</li>\r\n\t *   <li>The area to the right of the rectangle</li>\r\n\t *   <li>The lower-left corner outside of the rectangle</li>\r\n\t *   <li>The area below the rectangle</li>\r\n\t *   <li>The lower-right corner outside of the rectangle</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>You can think of the eight regions outside of the center(defined by\r\n\t * the rectangle) as being like a picture frame that has special rules\r\n\t * applied to it when scaled.</p>\r\n\t *\r\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\r\n\t * is scaled, all text and gradients are scaled normally; however, for other\r\n\t * types of objects the following rules apply:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>Content in the center region is scaled normally. </li>\r\n\t *   <li>Content in the corners is not scaled. </li>\r\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\r\n\t * Content in the left and right regions is scaled vertically only.</li>\r\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\r\n\t * fit their shapes.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\r\n\t * the <code>scale9Grid</code> property is ignored).</p>\r\n\t *\r\n\t * <p>For example, consider the following display object and a rectangle that\r\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\r\n\t *\r\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\r\n\t * object to be used as a component, in which edge regions retain the same\r\n\t * width when the component is scaled.</p>\r\n\t *\r\n\t * @throws ArgumentError If you pass an invalid argument to the method.\r\n\t */\r\n\tpublic scale9Grid:Rectangle;\r\n\r\n\t/**\r\n\t * Indicates the horizontal scale(percentage) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0). 1.0\r\n\t * equals 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleX;\r\n\t}\r\n\r\n\tpublic set scaleX(val:number)\r\n\t{\r\n\t\t//remove absolute width\r\n\t\tthis._width = null;\r\n\r\n\t\tthis._setScaleX(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleY;\r\n\t}\r\n\r\n\tpublic set scaleY(val:number)\r\n\t{\r\n\t\t//remove absolute height\r\n\t\tthis._height = null;\r\n\r\n\t\tthis._setScaleY(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\r\n\t * <code>y</code> and <code>z</code> property values, which are defined in\r\n\t * whole pixels. </p>\r\n\t */\r\n\tpublic get scaleZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleZ;\r\n\t}\r\n\r\n\tpublic set scaleZ(val:number)\r\n\t{\r\n\t\t//remove absolute depth\r\n\t\tthis._depth = null;\r\n\r\n\t\tthis._setScaleZ(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the horizontal skew(angle) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewX;\r\n\t}\r\n\r\n\tpublic set skewX(val:number)\r\n\t{\r\n\t\tif (this.skewX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewX = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical skew(angle) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewY;\r\n\t}\r\n\r\n\tpublic set skewY(val:number)\r\n\t{\r\n\t\tif (this.skewY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewY = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth skew(angle) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewZ;\r\n\t}\r\n\r\n\tpublic set skewZ(val:number)\r\n\t{\r\n\t\tif (this.skewZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewZ = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\tif (this._scenePositionDirty) {\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\r\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\r\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\r\n\t\t\t} else {\r\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\r\n\t\t\t}\r\n\r\n\t\t\tthis._scenePositionDirty = false;\r\n\t\t}\r\n\t\treturn this._scenePosition;\r\n\t}\r\n\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._pSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The scroll rectangle bounds of the display object. The display object is\r\n\t * cropped to the size defined by the rectangle, and it scrolls within the\r\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\r\n\t * of the <code>scrollRect</code> object.\r\n\t *\r\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\r\n\t * display object's coordinate space and are scaled just like the overall\r\n\t * display object. The corner bounds of the cropped window on the scrolling\r\n\t * display object are the origin of the display object(0,0) and the point\r\n\t * defined by the width and height of the rectangle. They are not centered\r\n\t * around the origin, but use the origin to define the upper-left corner of\r\n\t * the area. A scrolled display object always scrolls in whole pixel\r\n\t * increments. </p>\r\n\t *\r\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\r\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\r\n\t * an object up and down by setting the <code>y</code> property of the\r\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\r\n\t * 90° and you scroll it left and right, the display object actually scrolls\r\n\t * up and down.</p>\r\n\t */\r\n\tpublic scrollRect:Rectangle;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shaderPickingDetails():boolean\r\n\t{\r\n\t\treturn this._shaderPickingDetails;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._debugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (value == this._debugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugVisible = value;\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\r\n\t}\r\n\r\n\t/**\r\n\t * An object with properties pertaining to a display object's matrix, color\r\n\t * transform, and pixel bounds. The specific properties  -  matrix,\r\n\t * colorTransform, and three read-only properties\r\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\r\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\r\n\t * Transform class.\r\n\t *\r\n\t * <p>Each of the transform object's properties is itself an object. This\r\n\t * concept is important because the only way to set new values for the matrix\r\n\t * or colorTransform objects is to create a new object and copy that object\r\n\t * into the transform.matrix or transform.colorTransform property.</p>\r\n\t *\r\n\t * <p>For example, to increase the <code>tx</code> value of a display\r\n\t * object's matrix, you must make a copy of the entire matrix object, then\r\n\t * copy the new object into the matrix property of the transform object:</p>\r\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\r\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\r\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\r\n\t *\r\n\t * <p>You cannot directly set the <code>tx</code> property. The following\r\n\t * code has no effect on <code>myDisplayObject</code>: </p>\r\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\r\n\t * 10; </code></pre>\r\n\t *\r\n\t * <p>You can also copy an entire transform object and assign it to another\r\n\t * display object's transform property. For example, the following code\r\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\r\n\t * <code>myNewDisplayObj</code>:</p>\r\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\r\n\t *\r\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\r\n\t * same values for its matrix, color transform, and pixel bounds as the old\r\n\t * display object, <code>myOldDisplayObj</code>.</p>\r\n\t *\r\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\r\n\t * available, for color transforms.</p>\r\n\t */\r\n\tpublic get transform():Transform\r\n\t{\r\n\t\treturn this._transform;\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not the display object is visible. Display objects that are not\r\n\t * visible are disabled. For example, if <code>visible=false</code> for an\r\n\t * InteractiveObject instance, it cannot be clicked.\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn this._explicitVisibility;\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitVisibility == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitVisibility = value;\r\n\r\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the width of the display object, in pixels. The width is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\r\n\t * <code>width</code> to a different value.</p>\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this.getBox().width*this.scaleX;\r\n\t}\r\n\r\n\tpublic set width(val:number)\r\n\t{\r\n\t\tif (this._width == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = val;\r\n\r\n\t\tthis._setScaleX(val/this.getBox().width);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\tpublic set x(val:number)\r\n\t{\r\n\t\tif (this._x == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = this._matrix3D.rawData[12] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\tpublic set y(val:number)\r\n\t{\r\n\t\tif (this._y == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._y = this._matrix3D.rawData[13] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\r\n\t * instance relative to the 3D parent container. The z property is used for\r\n\t * 3D coordinates, not screen or pixel coordinates.\r\n\t *\r\n\t * <p>When you set a <code>z</code> property for a display object to\r\n\t * something other than the default value of <code>0</code>, a corresponding\r\n\t * Matrix3D object is automatically created. for adjusting a display object's\r\n\t * position and orientation in three dimensions. When working with the\r\n\t * z-axis, the existing behavior of x and y properties changes from screen or\r\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\r\n\t *\r\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\r\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\r\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\r\n\t *\r\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\r\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._z;\r\n\t}\r\n\r\n\tpublic set z(val:number)\r\n\t{\r\n\t\tif (this._z == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._z = this._matrix3D.rawData[14] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get zOffset():number\r\n\t{\r\n\t\treturn this._zOffset;\r\n\t}\r\n\r\n\tpublic set zOffset(value:number)\r\n\t{\r\n\t\tthis._zOffset = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>DisplayObject</code> instance.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t// Cached vector of transformation components used when\r\n\t\t// recomposing the transform matrix in updateTransform()\r\n\r\n        this._onGlobalColorTransformChangedDelegate = (event:DisplayObjectEvent) => this.onGlobalColorTransformChanged(event);\r\n        this._onColorTransformChangedDelegate = (event:Event) => this.onColorTransformChanged(event);\r\n\t\tthis._transformComponents = new Array<Vector3D>(4);\r\n\r\n\t\tthis._transformComponents[0] = this._pos;\r\n\t\tthis._transformComponents[1] = this._rot;\r\n\t\tthis._transformComponents[2] = this._ske;\r\n\t\tthis._transformComponents[3] = this._sca;\r\n\r\n\t\t//creation of associated transform object\r\n\t\tthis._transform = new Transform(this);\r\n\r\n\t\tthis._matrix3D.identity();\r\n\r\n\t\tthis._flipY.appendScale(1, -1, 1);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.addEventListener(type, listener);\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\r\n\t\t\t\tthis._listenToSkewChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\r\n\t\t\t\tthis._listenToSceneChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n\t\t\t\tthis._listenToSceneTransformChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:DisplayObject = new DisplayObject();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = this.name;\r\n\r\n        clone._iMaskID = this._iMaskID;\r\n        clone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n\t\t// todo: implement for all subtypes\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tif (this.parent)\r\n\t\t\tthis.parent.removeChild(this);\r\n\r\n\t\twhile (this._pRenderables.length)\r\n\t\t\tthis._pRenderables[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic disposeAsset()\r\n\t{\r\n\t\tthis.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the area of the display object relative\r\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\r\n\t * Consider the following code, which shows how the rectangle returned can\r\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\r\n\t * you pass to the method:\r\n\t *\r\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to display coordinates, or display coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * <p>The <code>getBounds()</code> method is similar to the\r\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\r\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\r\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\r\n\t * an example, see the description of the <code>getRect()</code> method.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the boundary of the display object, based\r\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\r\n\t * parameter, excluding any strokes on shapes. The values that the\r\n\t * <code>getRect()</code> method returns are the same or smaller than those\r\n\t * returned by the <code>getBounds()</code> method.\r\n\t *\r\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to Scene coordinates, or Scene coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//TODO targetCoordinateSpace\r\n\t\tif (this._boxBoundsInvalid) {\r\n\t\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\t\t//scale updates if absolute dimensions are detected\r\n\t\t\tif (this._width != null)\r\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\r\n\r\n\t\t\tif (this._height != null)\r\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\r\n\r\n\t\t\tif (this._depth != null)\r\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\r\n\t\t}\r\n\r\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\r\n\t\t\treturn this._pBoxBounds;\r\n\r\n\t\tif (targetCoordinateSpace == this._pParent)\r\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\r\n\t\telse\r\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\r\n\t}\r\n\r\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tif (this._sphereBoundsInvalid)\r\n\t\t\tthis._pUpdateSphereBounds();\r\n\r\n\t\treturn this._pSphereBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\r\n\t * to the display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\r\n\t * because they relate to the origin(0,0) of the main display area. Then\r\n\t * pass the Point instance as the parameter to the\r\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\r\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\r\n\t * object instead of the origin of the Scene.</p>\r\n\t *\r\n\t * @param point An object created with the Point class. The Point object\r\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the display object.\r\n\t */\r\n\tpublic globalToLocal(point:Point):Point\r\n\t{\r\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\r\n\t\treturn new Point(pos.x, pos.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\r\n\t * three-dimensional display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\r\n\t * y and z values that you assign to the Vector3D object represent global\r\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\r\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\r\n\t * <code>position</code> parameter.\r\n\t * The method returns three-dimensional coordinates as a Vector3D object\r\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\r\n\t * are relative to the origin of the three-dimensional display object.</p>\r\n\t *\r\n\t * @param point A Vector3D object representing global x, y and z coordinates in\r\n\t *              the scene.\r\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\r\n\t *         display object.\r\n\t */\r\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.inverseSceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the bounding box of the display object to see if it overlaps or\r\n\t * intersects with the bounding box of the <code>obj</code> display object.\r\n\t *\r\n\t * @param obj The display object to test against.\r\n\t * @return <code>true</code> if the bounding boxes of the display objects\r\n\t *         intersect; <code>false</code> if not.\r\n\t */\r\n\tpublic hitTestObject(obj:DisplayObject):boolean\r\n\t{\r\n\t\tvar objBox:Box = obj.getBox();\r\n\t\tif(!objBox) return false;\r\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\r\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\r\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\r\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\r\n\r\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\r\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\r\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\r\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tif(!box) return false;\r\n\r\n\t\t//first check all points against targer box\r\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\r\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\r\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\r\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\r\n\r\n\t\t//now test against obj box\r\n\t\tvar n0x:number = topRight.y - topLeft.y;\r\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\r\n\r\n\t\tvar n1x:number = bottomRight.y - topRight.y;\r\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\r\n\r\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\r\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\r\n\r\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\r\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\r\n\r\n\t\tvar p0x:number = box.left - topLeft.x;\r\n\t\tvar p0y:number = box.top - topLeft.y;\r\n\t\tvar p1x:number = box.left - topRight.x;\r\n\t\tvar p1y:number = box.top - topRight.y;\r\n\t\tvar p2x:number = box.left - bottomRight.x;\r\n\t\tvar p2y:number = box.top - bottomRight.y;\r\n\t\tvar p3x:number = box.left - bottomLeft.x;\r\n\t\tvar p3y:number = box.top - bottomLeft.y;\r\n\r\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\r\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\r\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\r\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.top - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.top - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.top - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.top - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.left - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.left - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.left - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.left - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @param maskFlag Whether to check against the object when it is used as mask\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @param    target        The vector defining the point to be looked at\r\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\r\n\t */\r\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\r\n\t{\r\n\r\n\t\tvar yAxis:Vector3D;\r\n\t\tvar zAxis:Vector3D;\r\n\t\tvar xAxis:Vector3D;\r\n\t\tvar raw:Array<number>;\r\n\r\n\t\tif (upAxis == null)\r\n\t\t\tupAxis = Vector3D.Y_AXIS;\r\n\t\telse\r\n\t\t\tupAxis.normalize();\r\n\r\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\r\n\t\tzAxis.normalize();\r\n\r\n\t\txAxis = upAxis.crossProduct(zAxis);\r\n\t\txAxis.normalize();\r\n\r\n\t\tif (xAxis.length < 0.05) {\r\n\t\t\txAxis.x = upAxis.y;\r\n\t\t\txAxis.y = upAxis.x;\r\n\t\t\txAxis.z = 0;\r\n\t\t\txAxis.normalize();\r\n\t\t}\r\n\r\n\t\tyAxis = zAxis.crossProduct(xAxis);\r\n\r\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\traw[0] = xAxis.x;\r\n\t\traw[1] = xAxis.y;\r\n\t\traw[2] = xAxis.z;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = yAxis.x;\r\n\t\traw[5] = yAxis.y;\r\n\t\traw[6] = yAxis.z;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = zAxis.x;\r\n\t\traw[9] = zAxis.y;\r\n\t\traw[10] = zAxis.z;\r\n\t\traw[11] = 0;\r\n\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.copyRawDataFrom(raw);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the display object's(local)\r\n\t * coordinates to the Scene(global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\r\n\t * coordinates from values that are relative to the origin(0,0) of a\r\n\t * specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Point instance that you created as the parameter to\r\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\r\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\r\n\t * Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param point The name or identifier of a point created with the Point\r\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the Scene.\r\n\t */\r\n\tpublic localToGlobal(point:Point):Point\r\n\t{\r\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\r\n\t\treturn new Point(pos.x, pos.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a three-dimensional point of the three-dimensional display\r\n\t * object's(local) coordinates to a three-dimensional point in the Scene\r\n\t * (global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\r\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\r\n\t * a specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\r\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\r\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\r\n\t * the origin of the Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param position A Vector3D object containing either a three-dimensional\r\n\t *                position or the coordinates of the three-dimensional\r\n\t *                display object.\r\n\t * @return A Vector3D object representing a three-dimensional position in\r\n\t *         the Scene.\r\n\t */\r\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object directly to a point in space\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\r\n\tpublic moveTo(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\r\n\t\t\treturn;\r\n\r\n\t\tthis.x = dx;\r\n\t\tthis.y = dy;\r\n\t\tthis.z = dz;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the local point around which the object rotates.\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\tpublic movePivot(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (dx == 0 && dy == 0 && dz == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivot.x += dx;\r\n\t\tthis._pivot.y += dy;\r\n\t\tthis._pivot.z += dz;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local x-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic pitch(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\r\n\t}\r\n\r\n\tpublic reset_to_init_state():void\r\n\t{\r\n\t\tthis.visible=true;\r\n\t\tif(this._iMatrix3D)\r\n\t\t\tthis._iMatrix3D.identity();\r\n\t\tif(this.colorTransform)\r\n\t\t\tthis.colorTransform.clear();\r\n\r\n\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\r\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\r\n\t\t\tvar scale:Vector3D = comps[3];\r\n\t\t\tcomps[0] = this.scenePosition;\r\n\t\t\tscale.x = this.scaleX;\r\n\t\t\tscale.y = this.scaleY;\r\n\t\t\tscale.z = this.scaleZ;\r\n\t\t\tthis._orientationMatrix.recompose(comps);\r\n\r\n\t\t\t//add in case of pivot\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\r\n\r\n\t\t\treturn this._orientationMatrix;\r\n\t\t}\r\n\r\n\t\treturn this.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local z-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic roll(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around an axis by a defined angle\r\n\t *\r\n\t * @param    axis        The vector defining the axis of rotation\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic rotate(axis:Vector3D, angle:number)\r\n\t{\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.prependRotation(angle, axis);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis.rotationX += vec.x*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationY += vec.y*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationZ += vec.z*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object directly to a euler angle\r\n\t *\r\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\r\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\r\n\t * @param    az        The angle in degrees of the rotation around the z axis.\r\n\t */\r\n\tpublic rotateTo(ax:number, ay:number, az:number)\r\n\t{\r\n\t\tthis.rotationX = ax;\r\n\t\tthis.rotationY = ay;\r\n\t\tthis.rotationZ = az;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.removeEventListener(type, listener);\r\n\r\n\t\tif (this.hasEventListener(type, listener))\r\n\t\t\treturn;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\r\n\t\t\t\tthis._listenToSkewChanged = false;\r\n\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translate(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis.x += x*len;\r\n\t\tthis.y += y*len;\r\n\t\tthis.z += z*len;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translateLocal(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\r\n\r\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\r\n\r\n\t\tthis.x = this._pos.x;\r\n\t\tthis.y = this._pos.y;\r\n\t\tthis.z = this._pos.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local y-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic yaw(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iController:ControllerBase;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iAssignedPartition():Partition\r\n\t{\r\n\t\treturn this._pImplicitPartition;\r\n\t}\r\n\r\n\t/**\r\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic get _iMatrix3D():Matrix3D\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\tthis._pUpdateMatrix3D();\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\tthis._pUpdatePivot();\r\n\r\n\t\treturn this._matrix3D;\r\n\t}\r\n\r\n\tpublic set _iMatrix3D(val:Matrix3D)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 12; i++)\r\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\r\n\r\n\t\tthis.x = val.rawData[12];\r\n\t\tthis.y = val.rawData[13];\r\n\t\tthis.z = val.rawData[14];\r\n\r\n\t\tthis._elementsDirty = true;\r\n\r\n\t\tif (!this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\r\n\t{\r\n\t\tif (!this._pPickingCollisionVO)\r\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\r\n\r\n\t\treturn this._pPickingCollisionVO;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n        if (this._pParent) {\r\n            this._pParent.removeEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\r\n        }\r\n\r\n\t\tthis._pParent = value;\r\n\r\n        if (value) {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren && value._pImplicitMouseEnabled);\r\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\r\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\r\n            value.addEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\r\n\t\t} else {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\r\n\t\t\tthis._pUpdateImplicitVisibility(true);\r\n\t\t\tthis._pUpdateImplicitPartition(null, null);\r\n\t\t}\r\n\r\n        this._invalidateGlobalColorTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._pParent)\r\n\t\t\tthis._pParent._pInvalidateBounds();\r\n\r\n\t\tif (!this._sceneTransformChanged)\r\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\r\n\r\n\t\tthis.queueDispatch(this._sceneTransformChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitMouseEnabled = value;\r\n\r\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\r\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\r\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\r\n\t{\r\n\t\tvar sceneChanged:boolean = this._pScene != scene;\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//unregister partition from current scene\r\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//unregister entity from current partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\t// assign parent implicit partition if no explicit one is given\r\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\r\n\r\n\t\t//assign scene\r\n\t\tif (sceneChanged)\r\n\t\t\tthis._pScene = scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//register partition with scene\r\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//register entity with new partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\r\n\r\n\t\tif (sceneChanged) {\r\n\t\t\tif (!this._pIgnoreTransform)\r\n\t\t\t\tthis.pInvalidateSceneTransform();\r\n\r\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateMatrix3D()\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\tthis._pos.x = this._x;\r\n\t\tthis._pos.y = this._y;\r\n\t\tthis._pos.z = this._z;\r\n\r\n\t\tthis._rot.x = this._rotationX;\r\n\t\tthis._rot.y = this._rotationY;\r\n\t\tthis._rot.z = this._rotationZ;\r\n\r\n\t\tthis._ske.x = this._skewX;\r\n\t\tthis._ske.y = this._skewY;\r\n\t\tthis._ske.z = this._skewZ;\r\n\r\n\t\tthis._sca.x = this._scaleX;\r\n\t\tthis._sca.y = this._scaleY;\r\n\t\tthis._sca.z = this._scaleZ;\r\n\r\n\t\tthis._matrix3D.recompose(this._transformComponents);\r\n\r\n\t\tthis._matrix3DDirty = false;\r\n\t}\r\n\r\n\tpublic _pUpdatePivot()\r\n\t{\r\n\t\tif (!this._pivotZero) {\r\n\t\t\tthis._pivotScale.x = this._pivot.x/this._scaleX;\r\n\t\t\tthis._pivotScale.y = this._pivot.y/this._scaleY;\r\n\t\t\tthis._pivotScale.z = this._pivot.z/this._scaleZ;\r\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\r\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\r\n\t\t}\r\n\r\n\t\tthis._pivotDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.updateController();\r\n\r\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\r\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\r\n\t\t} else {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\r\n\t\t}\r\n\r\n\t\tthis._positionDirty = false;\r\n\t\tthis._rotationDirty = false;\r\n\t\tthis._skewDirty = false;\r\n\t\tthis._scaleDirty = false;\r\n\t\tthis._pSceneTransformDirty = false;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._pRenderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\r\n\r\n\t\tthis._pRenderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic _iInternalUpdate()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.update();\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsVisible():boolean\r\n\t{\r\n\t\treturn this._pImplicitVisibility;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iSetScene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate invalidateMatrix3D():void\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._matrix3DDirty = true;\r\n\r\n\t\tif (!this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].invalidatePartition();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePivot()\r\n\t{\r\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivotDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePosition()\r\n\t{\r\n\t\tif (this._positionDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionDirty = true;\r\n\r\n\t\tif (!this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\r\n\t\tif (!this._pivotZero)\r\n\t\t\tthis.invalidatePivot();\r\n\r\n\t\tthis.queueDispatch(this._positionChanged || (this._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateRotation(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._rotationDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationDirty = true;\r\n\r\n\t\tthis.queueDispatch(this._rotationChanged || (this._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateSkew(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._skewDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewDirty = true;\r\n\r\n\t\tthis.queueDispatch(this._skewChanged || (this._skewChanged = new DisplayObjectEvent(DisplayObjectEvent.SKEW_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateScale(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._scaleDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleDirty = true;\r\n\r\n\t\tthis.queueDispatch(this._scaleChanged || (this._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this)));\r\n\t}\r\n\r\n\r\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tthis._entityNodes.push(entityNode);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\r\n\r\n\t\tthis._entityNodes.splice(index, 1);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pInvalidateBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = true;\r\n\t\tthis._sphereBoundsInvalid = true;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._pParent)\r\n\t\t\tthis._pParent._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = false;\r\n\r\n\t\tif (this._pBoxBounds == null)\r\n\t\t\tthis._pBoxBounds = new Box();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tthis._sphereBoundsInvalid = false;\r\n\r\n\t\tif (this._pSphereBounds == null)\r\n\t\t\tthis._pSphereBounds = new Sphere();\r\n\t}\r\n\r\n    _updateGlobalColorTransform()\r\n    {\r\n        if (this._inheritColorTransform && this._pParent) {\r\n            this._globalColorTransform.copyFrom(this._pParent.globalColorTransform);\r\n            if (this._pColorTransform)\r\n                this._globalColorTransform.prepend(this._pColorTransform);\r\n        } else {\r\n            if (this._pColorTransform)\r\n                this._globalColorTransform.copyFrom(this._pColorTransform);\r\n            else\r\n                this._globalColorTransform.clear();\r\n        }\r\n\r\n        this._globalColorTransformDirty = false;\r\n    }\r\n\r\n    // this method is to bypass that TypeScript can't call super setters.\r\n    _pSetColorTransform(value:ColorTransform)\r\n    {\r\n        this._pColorTransform = value;\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n    _invalidateGlobalColorTransform()\r\n    {\r\n        this._globalColorTransformDirty = true;\r\n\r\n        if (!this._globalColorTransformChanged)\r\n            this._globalColorTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this);\r\n\r\n        this.dispatchEvent(this._globalColorTransformChanged);\r\n    }\r\n\r\n    private onGlobalColorTransformChanged(event:DisplayObjectEvent)\r\n    {\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n    private onColorTransformChanged(event:Event)\r\n    {\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n\tprivate queueDispatch(event:Event)\r\n\t{\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\tprivate updateElements()\r\n\t{\r\n\t\tthis._elementsDirty = false;\r\n\r\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\r\n\t\tvar vec:Vector3D;\r\n\r\n\t\tvec = elements[1];\r\n\r\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\r\n\t\t\tthis._rotationX = vec.x;\r\n\t\t\tthis._rotationY = vec.y;\r\n\t\t\tthis._rotationZ = vec.z;\r\n\r\n\t\t\tthis.invalidateRotation(false);\r\n\t\t}\r\n\r\n\t\tvec = elements[2];\r\n\r\n\t\tif (this._skewX != vec.x || this._skewY != vec.y || this._skewZ != vec.z) {\r\n\t\t\tthis._skewX = vec.x;\r\n\t\t\tthis._skewY = vec.y;\r\n\t\t\tthis._skewZ = vec.z;\r\n\r\n\t\t\tthis.invalidateSkew(false);\r\n\t\t}\r\n\r\n\t\tvec = elements[3];\r\n\r\n\t\tthis._width = null;\r\n\t\tthis._height = null;\r\n\t\tthis._depth = null;\r\n\r\n\t\tif (this._scaleX != vec.x || this._scaleY != vec.y || this._scaleZ != vec.z) {\r\n\t\t\tthis._scaleX = vec.x;\r\n\t\t\tthis._scaleY = vec.y;\r\n\t\t\tthis._scaleZ = vec.z;\r\n\r\n\t\t\tthis.invalidateScale(false);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _setScaleX(val:number)\r\n\t{\r\n\t\tif (this.scaleX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleX = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\tprivate _setScaleY(val:number)\r\n\t{\r\n\t\tif (this.scaleY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleY = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\tprivate _setScaleZ(val:number)\r\n\t{\r\n\t\tif (this.scaleZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleZ = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n}\r\n\r\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\n\r\n/**\r\n *\r\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\r\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\r\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\r\n * the SubGeometries to its respective TriangleSubMesh objects.\r\n *\r\n *\r\n *\r\n * @see away.core.base.SubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class Geometry\r\n */\r\nclass Geometry extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Geometry]\";\r\n\r\n\tprivate _subGeometries:Array<SubGeometryBase>;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Geometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\r\n\t */\r\n\tpublic get subGeometries():Array<SubGeometryBase>\r\n\t{\r\n\t\treturn this._subGeometries;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Geometry object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tvar len:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new TriangleSubGeometry object to the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be added.\r\n\t */\r\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.push(subGeometry);\r\n\r\n\t\tsubGeometry.parentGeometry = this;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a new TriangleSubGeometry object from the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\r\n\t */\r\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\r\n\r\n\t\tsubGeometry.parentGeometry = null;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the geometry.\r\n\t * @return An exact duplicate of the current Geometry object.\r\n\t */\r\n\tpublic clone():Geometry\r\n\t{\r\n\t\tvar clone:Geometry = new Geometry();\r\n\t\tvar len:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scale(scale);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all resources used by the Geometry object, including SubGeometries.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\r\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\r\n\t\t\tthis.removeSubGeometry(subGeom);\r\n\t\t\tsubGeom.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the uv coordinates (tiling)\r\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\r\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\r\n\t */\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\r\n\t}\r\n\r\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\r\n\t{\r\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\r\n\t}\r\n}\r\n\r\nexport = Geometry;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nclass LightBase extends DisplayObjectContainer\r\n{\r\n\tpublic static assetType:string = \"[asset Light]\";\r\n\r\n\tprivate _color:number = 0xffffff;\r\n\tprivate _colorR:number = 1;\r\n\tprivate _colorG:number = 1;\r\n\tprivate _colorB:number = 1;\r\n\r\n\tprivate _ambientColor:number = 0xffffff;\r\n\tprivate _ambient:number = 0;\r\n\tpublic _iAmbientR:number = 0;\r\n\tpublic _iAmbientG:number = 0;\r\n\tpublic _iAmbientB:number = 0;\r\n\r\n\tprivate _specular:number = 1;\r\n\tpublic _iSpecularR:number = 1;\r\n\tpublic _iSpecularG:number = 1;\r\n\tpublic _iSpecularB:number = 1;\r\n\r\n\tprivate _diffuse:number = 1;\r\n\tpublic _iDiffuseR:number = 1;\r\n\tpublic _iDiffuseG:number = 1;\r\n\tpublic _iDiffuseB:number = 1;\r\n\r\n\tprivate _castsShadows:boolean = false;\r\n\r\n\tprivate _shadowMapper:ShadowMapperBase;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tif (this._castsShadows == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._castsShadows = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tif (this._shadowMapper == null)\r\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\r\n\r\n\t\t\tthis._shadowMapper.light = this;\r\n\t\t} else {\r\n\t\t\tthis._shadowMapper.dispose();\r\n\t\t\tthis._shadowMapper = null;\r\n\t\t}\r\n\t\t//*/\r\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():ShadowMapperBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get specular():number\r\n\t{\r\n\t\treturn this._specular;\r\n\t}\r\n\r\n\tpublic set specular(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._specular = value;\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get diffuse():number\r\n\t{\r\n\t\treturn this._diffuse;\r\n\t}\r\n\r\n\tpublic set diffuse(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._diffuse = value;\r\n\t\tthis.updateDiffuse();\r\n\t}\r\n\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tthis._color = value;\r\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\r\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\r\n\t\tthis._colorB = (this._color & 0xff)/0xff;\r\n\r\n\t\tthis.updateDiffuse();\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get ambient():number\r\n\t{\r\n\t\treturn this._ambient;\r\n\t}\r\n\r\n\tpublic set ambient(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tthis._ambient = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tpublic get ambientColor():number\r\n\t{\r\n\t\treturn this._ambientColor;\r\n\t}\r\n\r\n\tpublic set ambientColor(value:number)\r\n\t{\r\n\t\tthis._ambientColor = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tprivate updateAmbient()\r\n\t{\r\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightBase.assetType;\r\n\t}\r\n\r\n\tprivate updateSpecular()\r\n\t{\r\n\t\tthis._iSpecularR = this._colorR*this._specular;\r\n\t\tthis._iSpecularG = this._colorG*this._specular;\r\n\t\tthis._iSpecularB = this._colorB*this._specular;\r\n\t}\r\n\r\n\tprivate updateDiffuse()\r\n\t{\r\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\r\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\r\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\r\n\t}\r\n\r\n\tpublic get shadowMapper():ShadowMapperBase\r\n\t{\r\n\t\treturn this._shadowMapper;\r\n\t}\r\n\r\n\tpublic set shadowMapper(value:ShadowMapperBase)\r\n\t{\r\n\t\tthis._shadowMapper = value;\r\n\t\tthis._shadowMapper.light = this;\r\n\t}\r\n}\r\n\r\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class LineSubGeometry\r\n */\r\nclass LineSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\r\n\tprivate _positions:AttributesView;\r\n\tprivate _thickness:Float1Attributes;\r\n\tprivate _colors:Byte4Attributes;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubGeometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():AttributesView\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():Float1Attributes\r\n\t{\r\n\t\treturn this._thickness;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colors():Byte4Attributes\r\n\t{\r\n\t\tif (!this._colors)\r\n\t\t\tthis.setColors(this._colors);\r\n\r\n\t\treturn this._colors;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of vertices in the LineSubGeometry.\r\n\t */\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\t\t\r\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\r\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tif (index/6 & 1) {\r\n\t\t\t\t\tpositions[index] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\r\n\t\t\t\t\tpositions[index + 3] = values[i];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpositions[index] = values[i];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\r\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex += 6;\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tvar o:number = index/6 - 4;\r\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti += 6;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._positions.set(positions, offset*4);\r\n\r\n\t\t\tthis.setIndices(indices, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the thickness.\r\n\t */\r\n\tpublic setThickness(array:Array<number>, offset?:number);\r\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\r\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\r\n\tpublic setThickness(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Float1Attributes) {\r\n\t\t\tthis._thickness = <Float1Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._thickness)\r\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\tthis._thickness.set(thickness, offset*4);\r\n\t\t} else if (this._thickness) {\r\n\t\t\tthis._thickness.dispose();\r\n\t\t\tthis._thickness = null;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._thickness);\r\n\r\n\t\tthis._verticesDirty[this._thickness.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setColors(array:Array<number>, offset?:number);\r\n\tpublic setColors(float32Array:Float32Array, offset?:number);\r\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\r\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\r\n\tpublic setColors(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values) {\r\n\t\t\tif (values == this._colors)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Byte4Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\r\n\t\t\t\tthis._colors = <Byte4Attributes> values;\r\n\t\t\t} else {\r\n\t\t\t\tif (!this._colors)\r\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\r\n\r\n\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar j:number = 0;\r\n\t\t\t\tvar index:number = 0;\r\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tif (index/4 & 1) {\r\n\t\t\t\t\t\tcolors[index] = values[i + 4];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcolors[index] = values[i];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\t\tj = 0;\r\n\t\t\t\t\t\ti += 8;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 4;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._colors.set(values, offset*4);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//auto-derive colors\r\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._colors);\r\n\r\n\t\tthis._verticesDirty[this._colors.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions = null;\r\n\t\tthis._thickness = null;\r\n\t\tthis._colors = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():LineSubGeometry\r\n\t{\r\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\tclone.setIndices(this._pIndices.clone());\r\n\r\n\t\tclone.setPositions(this._positions.clone());\r\n\t\tclone.setThickness(this._thickness.clone());\r\n\t\tclone.setColors(this._colors.clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.LineSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.LineSubMesh\r\n */\r\nclass LineSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\r\n\r\n\tprivate _subGeometry:LineSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t */\r\n\tpublic get subGeometry():LineSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new LineSubMesh object\r\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\r\n\t * @param material An optional material used to render this LineSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The LoaderInfo class provides information about a loaded SWF file or a\r\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\r\n * any display object. The information provided includes load progress, the\r\n * URLs of the loader and loaded content, the number of bytes total for the\r\n * media, and the nominal height and width of the media.\r\n *\r\n * <p>You can access LoaderInfo objects in two ways: </p>\r\n *\r\n * <ul>\r\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\r\n * object -  The <code>contentLoaderInfo</code> property is always available\r\n * for any Loader object. For a Loader object that has not called the\r\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\r\n * sufficiently loaded, attempting to access many of the properties of the\r\n * <code>contentLoaderInfo</code> property throws an error.</li>\r\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\r\n * </ul>\r\n *\r\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\r\n * information about the content that the Loader object is loading, whereas\r\n * the <code>loaderInfo</code> property of a DisplayObject provides\r\n * information about the root SWF file for that display object. </p>\r\n *\r\n * <p>When you use a Loader object to load a display object(such as a SWF\r\n * file or a bitmap), the <code>loaderInfo</code> property of the display\r\n * object is the same as the <code>contentLoaderInfo</code> property of the\r\n * Loader object(<code>DisplayObject.loaderInfo =\r\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\r\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\r\n * the only way to access the LoaderInfo for the instance of the main class of\r\n * the SWF file.</p>\r\n *\r\n * <p>The following diagram shows the different uses of the LoaderInfo\r\n * object - for the instance of the main class of the SWF file, for the\r\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\r\n * <code>loaderInfo</code> property of a loaded object:</p>\r\n *\r\n * <p>When a loading operation is not complete, some properties of the\r\n * <code>contentLoaderInfo</code> property of a Loader object are not\r\n * available. You can obtain some properties, such as\r\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\r\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\r\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\r\n * can access all properties of the <code>loaderInfo</code> object and the\r\n * loaded image or SWF file.</p>\r\n *\r\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\r\n *\r\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\r\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\r\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\r\n * \r\n * @event complete   Dispatched when data has loaded successfully. In other\r\n *                   words, it is dispatched when all the content has been\r\n *                   downloaded and the loading has finished. The\r\n *                   <code>complete</code> event is always dispatched after\r\n *                   the <code>init</code> event. The <code>init</code> event\r\n *                   is dispatched when the object is ready to access, though\r\n *                   the content may still be downloading.\r\n * @event httpStatus Dispatched when a network request is made over HTTP and\r\n *                   an HTTP status code can be detected.\r\n * @event init       Dispatched when the properties and methods of a loaded\r\n *                   SWF file are accessible and ready for use. The content,\r\n *                   however, can still be downloading. A LoaderInfo object\r\n *                   dispatches the <code>init</code> event when the following\r\n *                   conditions exist:\r\n *                   <ul>\r\n *                     <li>All properties and methods associated with the\r\n *                   loaded object and those associated with the LoaderInfo\r\n *                   object are accessible.</li>\r\n *                     <li>The constructors for all child objects have\r\n *                   completed.</li>\r\n *                     <li>All ActionScript code in the first frame of the\r\n *                   loaded SWF's main timeline has been executed.</li>\r\n *                   </ul>\r\n *\r\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\r\n *                   when the first frame of a movie or animation is loaded.\r\n *                   The movie is then accessible and can be added to the\r\n *                   display list. The complete movie, however, can take\r\n *                   longer to download. The <code>Event.COMPLETE</code> is\r\n *                   only dispatched once the full movie is loaded.</p>\r\n *\r\n *                   <p>The <code>init</code> event always precedes the\r\n *                   <code>complete</code> event.</p>\r\n * @event ioError    Dispatched when an input or output error occurs that\r\n *                   causes a load operation to fail.\r\n * @event open       Dispatched when a load operation starts.\r\n * @event progress   Dispatched when data is received as the download\r\n *                   operation progresses.\r\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\r\n *                   object is removed by using the <code>unload()</code>\r\n *                   method of the Loader object, or when a second load is\r\n *                   performed by the same Loader object and the original\r\n *                   content is removed prior to the load beginning.\r\n */\r\nclass LoaderInfo extends EventDispatcher\r\n{\r\n\tprivate _bytes:ByteArray;\r\n\tprivate _bytesLoaded:number;\r\n\tprivate _bytesTotal:number;\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentType:string;\r\n\tprivate _loader:Loader;\r\n\tprivate _url:string;\r\n\t/**\r\n\t * The bytes associated with a LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get bytes():ByteArray\r\n\t{\r\n\t\treturn this._bytes;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of bytes that are loaded for the media. When this number equals\r\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\r\n\t */\r\n\tpublic get bytesLoaded():number /*int*/\r\n\t{\r\n\t\treturn this._bytesLoaded;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of compressed bytes in the entire media file.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\r\n\t * is 0. After the first <code>progress</code> event from the Loader object,\r\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\r\n\t * downloaded.</p>\r\n\t */\r\n\tpublic get bytesTotal():number /*int*/\r\n\t{\r\n\t\treturn this._bytesTotal;\r\n\t}\r\n\r\n\t/**\r\n\t * The loaded object associated with this LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\r\n\t * enough of the file has loaded in order to determine the type. The\r\n\t * following list gives the possible values:\r\n\t * <ul>\r\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\r\n\t *   <li><code>\"image/jpeg\"</code></li>\r\n\t *   <li><code>\"image/gif\"</code></li>\r\n\t *   <li><code>\"image/png\"</code></li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get contentType():string\r\n\t{\r\n\t\treturn this._contentType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Loader object associated with this LoaderInfo object. If this\r\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\r\n\t * of the main class of the SWF file, no Loader object is associated.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the Loader object because of security\r\n\t *                       restrictions. This can occur, for instance, when a\r\n\t *                       loaded SWF file attempts to access its\r\n\t *                       <code>loaderInfo.loader</code> property and it is\r\n\t *                       not granted security permission to access the\r\n\t *                       loading SWF file.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get loader():Loader\r\n\t{\r\n\t\treturn this._loader;\r\n\t}\r\n\r\n\t/**\r\n\t * The URL of the media being loaded.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, the value of the\r\n\t * <code>url</code> property might reflect only the initial URL specified in\r\n\t * the call to the <code>load()</code> method of the Loader object. After the\r\n\t * first <code>progress</code> event, the <code>url</code> property reflects\r\n\t * the media's final URL, after any redirects and relative URLs are\r\n\t * resolved.</p>\r\n\t *\r\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\r\n\t * see the <code>isURLInaccessible</code> property for details.</p>\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n}\r\n\r\nexport = LoaderInfo;",
    "class OrientationMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static DEFAULT:string = \"default\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\r\n}\r\n\r\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass SubGeometryBase extends AssetBase\r\n{\r\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\r\n\t\r\n\tpublic _pIndices:Short3Attributes;\r\n\r\n\tprivate _numElements:number = 0;\r\n\r\n\tpublic _concatenatedBuffer:AttributesBuffer;\r\n\r\n\tprivate _indicesUpdated:SubGeometryEvent;\r\n\r\n\tpublic _verticesDirty:Object = new Object();\r\n\tpublic _verticesUpdated:Object = new Object();\r\n\r\n\tpublic get concatenatedBuffer():AttributesBuffer\r\n\t{\r\n\t\treturn this._concatenatedBuffer;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw index data that define the faces.\r\n\t */\r\n\tpublic get indices():Short3Attributes\r\n\t{\r\n\t\treturn this._pIndices;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of triangles in the TriangleSubGeometry.\r\n\t */\r\n\tpublic get numElements():number\r\n\t{\r\n\t\treturn this._numElements;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidate():void\r\n\t{\r\n\t\tvar len:number = this._subGeometryVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._subGeometryVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._subGeometryVO.length)\r\n\t\t\tthis._subGeometryVO[0].dispose();\r\n\r\n\t\tthis._pIndices.dispose();\r\n\t\tthis._pIndices = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Short3Attributes) {\r\n\t\t\tif (this._pIndices)\r\n\t\t\t\tthis.notifyIndicesDispose();\r\n\r\n\t\t\tthis._pIndices = <Short3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._pIndices)\r\n\t\t\t\tthis._pIndices = new Short3Attributes();\r\n\r\n\t\t\tthis._pIndices.set(values, offset);\r\n\t\t} else if (this._pIndices) {\r\n\t\t\tthis._pIndices.dispose();\r\n\t\t\tthis._pIndices = null;\r\n\r\n\t\t\tthis.notifyIndicesDispose();\r\n\t\t}\r\n\r\n\t\tif (this._pIndices) {\r\n\t\t\tthis._numElements = this._pIndices.count;\r\n\r\n\t\t\tthis.notifyIndicesUpdate();\r\n\t\t} else {\r\n\t\t\tthis._numElements = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateBounds()\r\n\t{\r\n\t\tif (this.parentGeometry)\r\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic parentGeometry:Geometry;\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():SubGeometryBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tprivate notifyIndicesUpdate()\r\n\t{\r\n\t\tif (!this._indicesUpdated)\r\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\r\n\r\n\t\tthis.dispatchEvent(this._indicesUpdated);\r\n\t}\r\n\r\n\tprivate notifyIndicesDispose()\r\n\t{\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\r\n\t}\r\n\r\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\r\n\t\t\treturn;\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = true;\r\n\r\n\t\tif (!this._verticesUpdated[attributesView.id])\r\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\r\n\r\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\r\n\t}\r\n\r\n\r\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView)\r\n\t\t\treturn;\r\n\r\n\t\tattributesView.dispose();\r\n\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = null;\r\n\t\tthis._verticesUpdated[attributesView.id] = null;\r\n\t}\r\n\r\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.push(subGeometryVO);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass SubMeshBase extends AssetBase\r\n{\r\n\tpublic _pParentMesh:Mesh;\r\n\tpublic _uvTransform:UVTransform;\r\n\tpublic _colorTransform:ColorTransform;\r\n\r\n\tpublic _iIndex:number = 0;\r\n\r\n\tpublic _material:MaterialBase;\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._pParentMesh.animator;\r\n\t}\r\n\r\n\t/**\r\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material || this._pParentMesh.material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The scene transform object that transforms from model to world space.\r\n\t */\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\r\n\t */\r\n\tpublic get parentMesh():Mesh\r\n\t{\r\n\t\treturn this._pParentMesh;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform || this._pParentMesh.globalColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t * Creates a new SubMeshBase object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param camera\r\n\t * @returns {away.geom.Matrix3D}\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometry()\r\n\t{\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _iGetExplicitMaterial():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n}\r\n\r\nexport = SubMeshBase;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The Transform class provides access to color adjustment properties and two-\r\n * or three-dimensional transformation objects that can be applied to a\r\n * display object. During the transformation, the color or the orientation and\r\n * position of a display object is adjusted(offset) from the current values\r\n * or coordinates to new values or coordinates. The Transform class also\r\n * collects data about color and two-dimensional matrix transformations that\r\n * are applied to a display object and all of its parent objects. You can\r\n * access these combined transformations through the\r\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\r\n * properties.\r\n *\r\n * <p>To apply color transformations: create a ColorTransform object, set the\r\n * color adjustments using the object's methods and properties, and then\r\n * assign the <code>colorTransformation</code> property of the\r\n * <code>transform</code> property of the display object to the new\r\n * ColorTransformation object.</p>\r\n *\r\n * <p>To apply two-dimensional transformations: create a Matrix object, set\r\n * the matrix's two-dimensional transformation, and then assign the\r\n * <code>transform.matrix</code> property of the display object to the new\r\n * Matrix object.</p>\r\n *\r\n * <p>To apply three-dimensional transformations: start with a\r\n * three-dimensional display object. A three-dimensional display object has a\r\n * <code>z</code> property value other than zero. You do not need to create\r\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\r\n * is created automatically when you assign a <code>z</code> value to a\r\n * display object. You can access the display object's Matrix3D object through\r\n * the display object's <code>transform</code> property. Using the methods of\r\n * the Matrix3D class, you can add to or modify the existing transformation\r\n * settings. Also, you can create a custom Matrix3D object, set the custom\r\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\r\n * object to the display object using the <code>transform.matrix</code>\r\n * property.</p>\r\n *\r\n * <p>To modify a perspective projection of the stage or root object: use the\r\n * <code>transform.matrix</code> property of the root display object to gain\r\n * access to the PerspectiveProjection object. Or, apply different perspective\r\n * projection properties to a display object by setting the perspective\r\n * projection properties of the display object's parent. The child display\r\n * object inherits the new properties. Specifically, create a\r\n * PerspectiveProjection object and set its properties, then assign the\r\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\r\n * property of the parent display object's <code>transform</code> property.\r\n * The specified projection transformation then applies to all the display\r\n * object's three-dimensional children.</p>\r\n *\r\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\r\n * perspective transformations, do not assign both to a display object at the\r\n * same time. Use the PerspectiveProjection object for focal length and\r\n * projection center changes. For more control over the perspective\r\n * transformation, create a perspective projection Matrix3D object.</p>\r\n */\r\nclass Transform\r\n{\r\n\tprivate _displayObject:DisplayObject;\r\n\tprivate _concatenatedColorTransform:ColorTransform;\r\n\tprivate _concatenatedMatrix:Matrix;\r\n\tprivate _pixelBounds:Rectangle;\r\n\tpublic _position:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A ColorTransform object containing values that universally adjust the\r\n\t * colors in the display object.\r\n\t * \r\n\t * @throws TypeError The colorTransform is null when being set\r\n\t */\r\n\tpublic colorTransform:ColorTransform;\r\n\r\n\t/**\r\n\t * A ColorTransform object representing the combined color transformations\r\n\t * applied to the display object and all of its parent objects, back to the\r\n\t * root level. If different color transformations have been applied at\r\n\t * different levels, all of those transformations are concatenated into one\r\n\t * ColorTransform object for this property.\r\n\t */\r\n\tpublic get concatenatedColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._concatenatedColorTransform; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object representing the combined transformation matrixes of the\r\n\t * display object and all of its parent objects, back to the root level. If\r\n\t * different transformation matrixes have been applied at different levels,\r\n\t * all of those matrixes are concatenated into one matrix for this property.\r\n\t * Also, for resizeable SWF content running in the browser, this property\r\n\t * factors in the difference between stage coordinates and window coordinates\r\n\t * due to window resizing. Thus, the property converts local coordinates to\r\n\t * window coordinates, which may not be the same coordinate space as that of\r\n\t * the Stage.\r\n\t */\r\n\tpublic get concatenatedMatrix():Matrix\r\n\t{\r\n\t\treturn this._concatenatedMatrix; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get downVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get forwardVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get leftVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object containing values that alter the scaling, rotation, and\r\n\t * translation of the display object.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t * \r\n\t * @throws TypeError The matrix is null when being set\r\n\t */\r\n\tpublic matrix:Matrix;\r\n\r\n\t/**\r\n\t * Provides access to the Matrix3D object of a three-dimensional display\r\n\t * object. The Matrix3D object represents a transformation matrix that\r\n\t * determines the display object's position and orientation. A Matrix3D\r\n\t * object can also perform perspective projection.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic get matrix3D():Matrix3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D;\r\n\t}\r\n\r\n\tpublic set matrix3D(val:Matrix3D)\r\n\t{\r\n\t\tthis._displayObject._iMatrix3D = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\r\n\t * display object. The PerspectiveProjection object can be used to modify the\r\n\t * perspective transformation of the stage or to assign a perspective\r\n\t * transformation to all the three-dimensional children of a display object.\r\n\t *\r\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\r\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\r\n\t */\r\n\tpublic perspectiveProjection:PerspectiveProjection;\r\n\r\n\t/**\r\n\t * A Rectangle object that defines the bounding rectangle of the display\r\n\t * object on the stage.\r\n\t */\r\n\tpublic get pixelBounds():Rectangle\r\n\t{\r\n\t\treturn this._pixelBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D.position\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.x = value.x;\r\n\t\tthis._displayObject.y = value.y;\r\n\t\tthis._displayObject.z = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get rightVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get rotation():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\r\n\t}\r\n\r\n\tpublic set rotation(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.rotationX = value.x;\r\n\t\tthis._displayObject.rotationY = value.y;\r\n\t\tthis._displayObject.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get scale():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\r\n\t}\r\n\r\n\tpublic set scale(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.scaleX = value.x;\r\n\t\tthis._displayObject.scaleY = value.y;\r\n\t\tthis._displayObject.scaleZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get upVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis._displayObject = displayObject;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Matrix3D object, which can transform the space of a specified\r\n\t * display object in relation to the current display object's space. You can\r\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\r\n\t * three-dimensional display object relative to another three-dimensional\r\n\t * display object.\r\n\t * \r\n\t * @param relativeTo The display object relative to which the transformation\r\n\t *                   occurs. To get a Matrix3D object relative to the stage,\r\n\t *                   set the parameter to the <code>root</code> or\r\n\t *                   <code>stage</code> object. To get the world-relative\r\n\t *                   matrix of the display object, set the parameter to a\r\n\t *                   display object that has a perspective transformation\r\n\t *                   applied to it.\r\n\t * @return A Matrix3D object that can be used to transform the space from the\r\n\t *         <code>relativeTo</code> display object to the current display\r\n\t *         object space.\r\n\t */\r\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(); //TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveForward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveBackward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\r\n\tpublic moveLeft(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveRight(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveUp(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveDown(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\r\n\t}\r\n}\r\n\r\nexport = Transform;\r\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass TriangleSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _faceNormalsDirty:boolean = true;\r\n\tprivate _faceTangentsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _normals:Float3Attributes;\r\n\tprivate _tangents:Float3Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\tprivate _secondaryUVs:Float2Attributes;\r\n\tprivate _jointIndices:AttributesView;\r\n\tprivate _jointWeights:AttributesView;\r\n\r\n\tprivate _useCondensedIndices:boolean;\r\n\tprivate _condensedIndexLookUp:Array<number>;\r\n\r\n\tprivate _jointsPerVertex:number;\r\n\r\n\tprivate _autoDeriveNormals:boolean = true;\r\n\tprivate _autoDeriveTangents:boolean = true;\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _faceNormals:Float4Attributes;\r\n\tprivate _faceTangents:Float3Attributes;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubGeometry.assetType;\r\n\t}\r\n\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\r\n\t * by condensing the number of joint index values required per mesh. Only applicable to\r\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\r\n\t */\r\n\tpublic get useCondensedIndices():boolean\r\n\t{\r\n\t\treturn this._useCondensedIndices;\r\n\t}\r\n\r\n\tpublic set useCondensedIndices(value:boolean)\r\n\t{\r\n\t\tif (this._useCondensedIndices == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useCondensedIndices = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointsPerVertex():number\r\n\t{\r\n\t\treturn this._jointsPerVertex;\r\n\t}\r\n\r\n\tpublic set jointsPerVertex(value:number)\r\n\t{\r\n\t\tif (this._jointsPerVertex == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._jointsPerVertex = value;\r\n\r\n\t\tif (this._jointIndices)\r\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\r\n\r\n\t\tif (this._jointWeights)\r\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveNormals():boolean\r\n\t{\r\n\t\treturn this._autoDeriveNormals;\r\n\t}\r\n\r\n\tpublic set autoDeriveNormals(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveNormals == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveNormals = value;\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveTangents():boolean\r\n\t{\r\n\t\treturn this._autoDeriveTangents;\r\n\t}\r\n\r\n\tpublic set autoDeriveTangents(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveTangents == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveTangents = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get normals():Float3Attributes\r\n\t{\r\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\r\n\t\t\tthis.setNormals(this._normals);\r\n\r\n\t\treturn this._normals;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get tangents():Float3Attributes\r\n\t{\r\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\r\n\t\t\tthis.setTangents(this._tangents);\r\n\r\n\t\treturn this._tangents;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceNormals():Float4Attributes\r\n\t{\r\n\t\tif (this._faceNormalsDirty)\r\n\t\t\tthis.updateFaceNormals();\r\n\r\n\t\treturn this._faceNormals;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceTangents():Float3Attributes\r\n\t{\r\n\t\tif (this._faceTangentsDirty)\r\n\t\t\tthis.updateFaceTangents();\r\n\r\n\t\treturn this._faceTangents;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get secondaryUVs():Float2Attributes\r\n\t{\r\n\t\treturn this._secondaryUVs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointIndices():AttributesView\r\n\t{\r\n\t\treturn this._jointIndices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointWeights():AttributesView\r\n\t{\r\n\t\treturn this._jointWeights;\r\n\t}\r\n\r\n\tpublic get condensedIndexLookUp():Array<number>\r\n\t{\r\n\t\treturn this._condensedIndexLookUp;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setNormals(array:Array<number>, offset?:number);\r\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\r\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setNormals(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveNormals) {\r\n\t\t\tif (values == this._normals)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._normals)\r\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._normals.set(values, offset);\r\n\t\t\t} else if (this._normals) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tthis._verticesDirty[this._normals.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex tangents based on the geometry.\r\n\t */\r\n\tpublic setTangents(array:Array<number>, offset?:number);\r\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\r\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setTangents(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveTangents) {\r\n\t\t\tif (values == this._tangents)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._tangents)\r\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._tangents.set(values, offset);\r\n\t\t\t} else if (this._tangents) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceTangentsDirty)\r\n\t\t\t\tthis.updateFaceTangents();\r\n\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis._verticesDirty[this._tangents.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the secondary uvs based on the geometry.\r\n\t */\r\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\r\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._secondaryUVs)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._secondaryUVs)\r\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tthis._secondaryUVs.set(values, offset);\r\n\t\t} else if (this._secondaryUVs) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\r\n\r\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint indices\r\n\t */\r\n\tpublic setJointIndices(array:Array<number>, offset?:number);\r\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointIndices)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointIndices)\r\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tif (this._useCondensedIndices) {\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar oldIndex:number;\r\n\t\t\t\tvar newIndex:number = 0;\r\n\t\t\t\tvar dic:Object = new Object();\r\n\r\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\toldIndex = values[i];\r\n\r\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\r\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\r\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\r\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//reset value to dictionary lookup\r\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._jointIndices.set(values, offset);\r\n\r\n\t\t} else if (this._jointIndices) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\r\n\r\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint weights.\r\n\t */\r\n\tpublic setJointWeights(array:Array<number>, offset?:number);\r\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointWeights(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointWeights)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointWeights)\r\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tthis._jointWeights.set(values, offset);\r\n\r\n\t\t} else if (this._jointWeights) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\r\n\r\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tif (this._normals) {\r\n\t\t\tthis._normals.dispose();\r\n\t\t\tthis._normals = null;\r\n\t\t}\r\n\r\n\t\tif (this._tangents) {\r\n\t\t\tthis._tangents.dispose();\r\n\t\t\tthis._tangents = null;\r\n\t\t}\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t\tif (this._secondaryUVs) {\r\n\t\t\tthis._secondaryUVs.dispose();\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointIndices) {\r\n\t\t\tthis._jointIndices.dispose();\r\n\t\t\tthis._jointIndices = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointWeights) {\r\n\t\t\tthis._jointWeights.dispose();\r\n\t\t\tthis._jointWeights = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceNormals) {\r\n\t\t\tthis._faceNormals.dispose();\r\n\t\t\tthis._faceNormals = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceTangents) {\r\n\t\t\tthis._faceTangents.dispose();\r\n\t\t\tthis._faceTangents = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tsuper.setIndices(values, offset);\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\t\tthis._faceTangentsDirty = true;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():TriangleSubGeometry\r\n\t{\r\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\t//temp disable auto derives\r\n\t\tclone.autoDeriveNormals = false;\r\n\t\tclone.autoDeriveTangents = false;\r\n\t\tclone.autoDeriveUVs = false;\r\n\r\n\t\tif (this.indices)\r\n\t\t\tclone.setIndices(this.indices.clone());\r\n\r\n\t\tif (this.normals)\r\n\t\t\tclone.setNormals(this.normals.clone());\r\n\r\n\t\tif (this.uvs)\r\n\t\t\tclone.setUVs(this.uvs.clone());\r\n\r\n\t\tif (this.tangents)\r\n\t\t\tclone.setTangents(this.tangents.clone());\r\n\r\n\t\tif (this.secondaryUVs)\r\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\r\n\r\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\r\n\r\n\t\tif (this.jointIndices)\r\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\r\n\r\n\t\tif (this.jointWeights)\r\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\r\n\r\n\t\t//return auto derives to cloned values\r\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\r\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\r\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the tangents for each face.\r\n\t */\r\n\tprivate updateFaceTangents()\r\n\t{\r\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\r\n\r\n\t\tthis._faceTangentsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the normals for each face.\r\n\t */\r\n\tprivate updateFaceNormals()\r\n\t{\r\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\r\n\r\n\t\tthis._faceNormalsDirty = false;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.TriangleSubMesh\r\n */\r\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\r\n\r\n\tprivate _subGeometry:TriangleSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t */\r\n\tpublic get subGeometry():TriangleSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new TriangleSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\r\n\t * @param material An optional material used to render this TriangleSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\n\r\n\r\n/**\r\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\r\n * This is useful for most meshes.\r\n */\r\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\r\n{\r\n\tpublic _box:Box;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\tprivate _depth:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _halfExtentsX:number = 0;\r\n\tprivate _halfExtentsY:number = 0;\r\n\tprivate _halfExtentsZ:number = 0;\r\n\tprivate _prefab:PrimitiveCubePrefab;\r\n\r\n\t/**\r\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\r\n\t */\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._x = this._y = this._z = 0;\r\n\t\tthis._width = this._height = this._depth = 0;\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar a:number = plane.a;\r\n\t\t\tvar b:number = plane.b;\r\n\t\t\tvar c:number = plane.c;\r\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\r\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\r\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\r\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\r\n\r\n\t\t\tif (projDist < 0)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\r\n\r\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._box = this._pEntity.getBox();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\t\tvar hx:number = this._box.width/2;\r\n\t\tvar hy:number = this._box.height/2;\r\n\t\tvar hz:number = this._box.depth/2;\r\n\t\tvar cx:number = this._box.x + hx;\r\n\t\tvar cy:number = this._box.y + hy;\r\n\t\tvar cz:number = this._box.z + hz;\r\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\r\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\r\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.width = this._box.width;\r\n\t\t\tthis._prefab.height = this._box.height;\r\n\t\t\tthis._prefab.depth = this._box.depth;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\r\n\t\tthis._width = this._halfExtentsX*2;\r\n\t\tthis._height = this._halfExtentsY*2;\r\n\t\tthis._depth = this._halfExtentsZ*2;\r\n\r\n\t\tthis._x = this._centerX - this._halfExtentsX;\r\n\t\tthis._y = this._centerY - this._halfExtentsY;\r\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveCubePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\n\r\nclass BoundingSphere extends BoundingVolumeBase\r\n{\r\n\tprivate _sphere:Sphere;\r\n\tprivate _radius:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _prefab:PrimitiveSpherePrefab;\r\n\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._radius = 0;\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\r\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\r\n\t\t\tif (projDist < 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar rr:Number = (a + b + c)*this._radius;\r\n\r\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._sphere = this._pEntity.getSphere();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\r\n\t\tvar cx:number = this._sphere.x;\r\n\t\tvar cy:number = this._sphere.y;\r\n\t\tvar cz:number = this._sphere.z;\r\n\t\tvar r:number = this._sphere.radius;\r\n\r\n\t\tvar raw:Array<number> = new Array<number>(16);\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tvar rx:number = m11 + m12 + m13;\r\n\t\tvar ry:number = m21 + m22 + m23;\r\n\t\tvar rz:number = m31 + m32 + m33;\r\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.radius = r;\r\n\t\t\tthis._pBoundsPrimitive.x = cx;\r\n\t\t\tthis._pBoundsPrimitive.y = cy;\r\n\t\t\tthis._pBoundsPrimitive.z = cz;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveSpherePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nclass BoundingVolumeBase\r\n{\r\n\tpublic _pEntity:IEntity;\r\n\tpublic _pBoundsPrimitive:Mesh;\r\n\tpublic _pInvalidated:boolean = true;\r\n\r\n\tconstructor(entity)\r\n\t{\r\n\t\tthis._pEntity = entity;\r\n\t}\r\n\r\n\tpublic get boundsPrimitive():IEntity\r\n\t{\r\n\t\tif (this._pBoundsPrimitive == null) {\r\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\r\n\r\n\t\t\tthis._pUpdate();\r\n\t\t}\r\n\r\n\t\treturn this._pBoundsPrimitive;\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tthis._pInvalidated = false;\r\n\t}\r\n\r\n\tpublic invalidate()\r\n\t{\r\n\t\tthis._pInvalidated = true;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = BoundingVolumeBase;",
    "/**\r\n *\r\n */\r\nclass BoundsType\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SPHERE:string = \"sphere\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static NULL:string = \"null\";\r\n}\r\n\r\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\n\r\n\r\nclass NullBounds extends BoundingVolumeBase\r\n{\r\n\tprivate _alwaysIn:boolean;\r\n\r\n\tconstructor(alwaysIn:boolean = true)\r\n\t{\r\n\t\tsuper(null);\r\n\r\n\t\tthis._alwaysIn = alwaysIn;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\treturn new NullBounds(this._alwaysIn);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn this._alwaysIn;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\treturn PlaneClassification.INTERSECT;\r\n\t}\r\n}\r\n\r\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\n\r\n/**\r\n * The DisplayObjectContainer class is the base class for all objects that can\r\n * serve as display object containers on the display list. The display list\r\n * manages all objects displayed in the Flash runtimes. Use the\r\n * DisplayObjectContainer class to arrange the display objects in the display\r\n * list. Each DisplayObjectContainer object has its own child list for\r\n * organizing the z-order of the objects. The z-order is the front-to-back\r\n * order that determines which object is drawn in front, which is behind, and\r\n * so on.\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception.</p>\r\n * The DisplayObjectContainer class is an abstract base class for all objects\r\n * that can contain child objects. It cannot be instantiated directly; calling\r\n * the <code>new DisplayObjectContainer()</code> constructor throws an\r\n * <code>ArgumentError</code> exception.\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n */\r\nclass DisplayObjectContainer extends DisplayObject implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\r\n\r\n\tprivate _mouseChildren:boolean = true;\r\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\r\n\tpublic _iIsRoot:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn DisplayObjectContainer.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not the children of the object are mouse, or user\r\n\t * input device, enabled. If an object is enabled, a user can interact with\r\n\t * it by using a mouse or user input device. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p>This property is useful when you create a button with an instance of\r\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\r\n\t * Sprite instance to create a button, you can choose to decorate the button\r\n\t * by using the <code>addChild()</code> method to add additional Sprite\r\n\t * instances. This process can cause unexpected behavior with mouse events\r\n\t * because the Sprite instances you add as children can become the target\r\n\t * object of a mouse event when you expect the parent instance to be the\r\n\t * target object. To ensure that the parent instance serves as the target\r\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\r\n\t * property of the parent instance to <code>false</code>.</p>\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseChildren():boolean\r\n\t{\r\n\t\treturn this._mouseChildren;\r\n\t}\r\n\r\n\tpublic set mouseChildren(value:boolean)\r\n\t{\r\n\t\tif (this._mouseChildren == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mouseChildren = value;\r\n\r\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent._pImplicitMouseEnabled : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of children of this object.\r\n\t */\r\n\tpublic get numChildren():number /*int*/\r\n\t{\r\n\t\treturn this._children.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the children of the object are tab enabled. Enables or\r\n\t * disables tabbing for the children of the object. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\r\n\t * Flex. Instead, use the\r\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\r\n\t *\r\n\t * @throws IllegalOperationError Calling this property of the Stage object\r\n\t *                               throws an exception. The Stage object does\r\n\t *                               not implement this property.\r\n\t */\r\n\tpublic tabChildren:boolean;\r\n\r\n\t/**\r\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\r\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\r\n\t * constructors for the following subclasses of DisplayObjectContainer:\r\n\t * <ul>\r\n\t *   <li><code>new Loader()</code></li>\r\n\t *   <li><code>new Sprite()</code></li>\r\n\t *   <li><code>new MovieClip()</code></li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added to the front(top) of all other children in\r\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\r\n\t * position, use the <code>addChildAt()</code> method.)\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\r\n\t * problems with a published SWF file, including security problems and\r\n\t * conflicts with other loaded SWF files. There is only one Stage within a\r\n\t * Flash runtime instance, no matter how many SWF files you load into the\r\n\t * runtime. So, generally, objects should not be added to the Stage,\r\n\t * directly, at all. The only object the Stage should contain is the root\r\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\r\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\r\n\t * to the Stage.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\r\n\r\n\t\t//if child already has a parent, remove it.\r\n\t\tif (child._pParent)\r\n\t\t\tchild._pParent.removeChildInternal(child);\r\n\r\n\t\tchild.iSetParent(this);\r\n\r\n\t\tthis._children.push(child);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added at the index position specified. An index of\r\n\t * 0 represents the back(bottom) of the display list for this\r\n\t * DisplayObjectContainer object.\r\n\t *\r\n\t * <p>For example, the following example shows three display objects, labeled\r\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @param index The index position to which the child is added. If you\r\n\t *              specify a currently occupied index position, the child object\r\n\t *              that exists at that position and all higher positions are\r\n\t *              moved up one position in the child list.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @throws RangeError    Throws if the index position does not exist in the\r\n\t *                       child list.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChildAt(child:DisplayObject, index:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn child;\r\n\t}\r\n\r\n\tpublic addChildren(...childarray:Array<DisplayObject>)\r\n\t{\r\n\t\tvar len:number = childarray.length;\r\n\t\tfor (var i:number = 0; i <  len; i++)\r\n\t\t\tthis.addChild(childarray[i]);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:DisplayObjectContainer = new DisplayObjectContainer();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.partition = this.partition;\r\n\t\tclone.name = this.name;\r\n\t\tclone.mouseEnabled = this.mouseEnabled;\r\n\t\tclone.mouseChildren = this.mouseChildren;\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addChild(this._children[i].clone());\r\n\r\n\t\t// todo: implement for all subtypes\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified display object is a child of the\r\n\t * DisplayObjectContainer instance or the instance itself. The search\r\n\t * includes the entire display list including this DisplayObjectContainer\r\n\t * instance. Grandchildren, great-grandchildren, and so on each return\r\n\t * <code>true</code>.\r\n\t *\r\n\t * @param child The child object to test.\r\n\t * @return <code>true</code> if the <code>child</code> object is a child of\r\n\t *         the DisplayObjectContainer or the container itself; otherwise\r\n\t *         <code>false</code>.\r\n\t */\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._children.indexOf(child) >= 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic disposeWithChildren()\r\n\t{\r\n\t\tthis.dispose();\r\n\r\n\t\twhile (this.numChildren > 0)\r\n\t\t\tthis.getChildAt(0).dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object instance that exists at the specified\r\n\t * index.\r\n\t *\r\n\t * @param index The index position of the child object.\r\n\t * @return The child display object at the specified index position.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic getChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children[index];\r\n\r\n\t\tif (child == null)\r\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object that exists with the specified name. If\r\n\t * more that one child display object has the specified name, the method\r\n\t * returns the first object in the child list.\r\n\t *\r\n\t * <p>The <code>getChildAt()</code> method is faster than the\r\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\r\n\t * accesses a child from a cached array, whereas the\r\n\t * <code>getChildByName()</code> method has to traverse a linked list to\r\n\t * access a child.</p>\r\n\t *\r\n\t * @param name The name of the child to return.\r\n\t * @return The child display object with the specified name.\r\n\t */\r\n\tpublic getChildByName(name:string):DisplayObject\r\n\t{\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tif (this._children[i].name == name)\r\n\t\t\t\treturn this._children[i];\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\r\n\t *\r\n\t * @param child The DisplayObject instance to identify.\r\n\t * @return The index position of the child display object to identify.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\r\n\t{\r\n\t\tvar childIndex:number = this._children.indexOf(child);\r\n\r\n\t\tif (childIndex == -1)\r\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\r\n\r\n\t\treturn childIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects that lie under the specified point and are\r\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\r\n\t * instance. Any child objects that are inaccessible for security reasons are\r\n\t * omitted from the returned array. To determine whether this security\r\n\t * restriction affects the returned array, call the\r\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\r\n\t *\r\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\r\n\t * Stage, which may differ from the coordinate space of the display object\r\n\t * container(unless the display object container is the Stage). You can use\r\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\r\n\t * methods to convert points between these coordinate spaces.</p>\r\n\t *\r\n\t * @param point The point under which to look.\r\n\t * @return An array of objects that lie under the specified point and are\r\n\t *         children(or grandchildren, and so on) of this\r\n\t *         DisplayObjectContainer instance.\r\n\t */\r\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\r\n\t{\r\n\t\treturn new Array<DisplayObject>();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified <code>child</code> DisplayObject instance from the\r\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\r\n\t * property of the removed child is set to <code>null</code> , and the object\r\n\t * is garbage collected if no other references to the child exist. The index\r\n\t * positions of any display objects above the child in the\r\n\t * DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to remove.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic removeChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\r\n\r\n\t\tthis.removeChildInternal(child);\r\n\r\n\t\tchild.iSetParent(null);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child DisplayObject from the specified <code>index</code>\r\n\t * position in the child list of the DisplayObjectContainer. The\r\n\t * <code>parent</code> property of the removed child is set to\r\n\t * <code>null</code>, and the object is garbage collected if no other\r\n\t * references to the child exist. The index positions of any display objects\r\n\t * above the child in the DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param index The child index of the DisplayObject to remove.\r\n\t * @return The DisplayObject instance that was removed.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t * @throws SecurityError This child display object belongs to a sandbox to\r\n\t *                       which the calling object does not have access. You\r\n\t *                       can avoid this situation by having the child movie\r\n\t *                       call the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this.removeChild(this._children[index]);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all <code>child</code> DisplayObject instances from the child list\r\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\r\n\t * of the removed children is set to <code>null</code>, and the objects are\r\n\t * garbage collected if no other references to the children exist.\r\n\t *\r\n\t * The garbage collector reallocates unused memory space. When a variable or\r\n\t * object is no longer actively referenced or stored somewhere, the garbage\r\n\t * collector sweeps through and wipes out the memory space it used to occupy\r\n\t * if no other references to it exist.\r\n\t *\r\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\r\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\r\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\r\n\t *                       not exist in the child list.\r\n\t */\r\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\r\n\t{\r\n\t\tif (beginIndex < 0)\r\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\r\n\r\n\t\tif (endIndex > this._children.length)\r\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\r\n\r\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\r\n\t\t\tthis.removeChild(this._children[i]);\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the position of an existing child in the display object container.\r\n\t * This affects the layering of child objects. For example, the following\r\n\t * example shows three display objects, labeled a, b, and c, at index\r\n\t * positions 0, 1, and 2, respectively:\r\n\t *\r\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\r\n\t * index position that is already occupied, the only positions that change\r\n\t * are those in between the display object's former and new position. All\r\n\t * others will stay the same. If a child is moved to an index LOWER than its\r\n\t * current index, all children in between will INCREASE by 1 for their index\r\n\t * reference. If a child is moved to an index HIGHER than its current index,\r\n\t * all children in between will DECREASE by 1 for their index reference. For\r\n\t * example, if the display object container in the previous example is named\r\n\t * <code>container</code>, you can swap the position of the display objects\r\n\t * labeled a and b by calling the following code:</p>\r\n\t *\r\n\t * <p>This code results in the following arrangement of objects:</p>\r\n\t *\r\n\t * @param child The child DisplayObject instance for which you want to change\r\n\t *              the index number.\r\n\t * @param index The resulting index number for the <code>child</code> display\r\n\t *              object.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order (front-to-back order) of the two specified child\r\n\t * objects. All other child objects in the display object container remain in\r\n\t * the same index positions.\r\n\t *\r\n\t * @param child1 The first child object.\r\n\t * @param child2 The second child object.\r\n\t * @throws ArgumentError Throws if either child parameter is not a child of\r\n\t *                       this object.\r\n\t */\r\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\r\n\t * specified index positions in the child list. All other child objects in\r\n\t * the display object container remain in the same index positions.\r\n\t *\r\n\t * @param index1 The index position of the first child object.\r\n\t * @param index2 The index position of the second child object.\r\n\t * @throws RangeError If either index does not exist in the child list.\r\n\t */\r\n\tpublic swapChildrenAt(index1:number /*int*/, index2:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar min:number;\r\n\t\tvar max:number;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\r\n\t\tvar box:Box;\r\n\t\tvar numChildren:number = this._children.length;\r\n\r\n\t\tif (numChildren > 0) {\r\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\r\n\t\t\t\tbox = this._children[i].getBox(this);\r\n\r\n\t\t\t\tif (i == 0) {\r\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\r\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\r\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmax = box.width + (min = box.x);\r\n\t\t\t\t\tif (min < minX)\r\n\t\t\t\t\t\tminX = min;\r\n\t\t\t\t\tif (max > maxX)\r\n\t\t\t\t\t\tmaxX = max;\r\n\r\n\t\t\t\t\tmax = box.height + (min = box.y);\r\n\t\t\t\t\tif (min < minY)\r\n\t\t\t\t\t\tminY = min;\r\n\t\t\t\t\tif (max > maxY)\r\n\t\t\t\t\t\tmaxY = max;\r\n\r\n\t\t\t\t\tmax = box.depth + (min = box.z);\r\n\t\t\t\t\tif (min < minZ)\r\n\t\t\t\t\t\tminZ = min;\r\n\t\t\t\t\tif (max > maxZ)\r\n\t\t\t\t\t\tmaxZ = max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t} else {\r\n\t\t\tthis._pBoxBounds.setEmpty();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i].pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren && this._pImplicitMouseEnabled);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitVisibility(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\r\n\t{\r\n\t\tsuper._pUpdateImplicitPartition(value, scene);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t *\r\n\t * @param child\r\n\t */\r\n\tprivate removeChildInternal(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tthis._children.splice(this.getChildIndex(child), 1);\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\r\n\t{\r\n\t\tif(this._iMaskID!==-1 && !masksFlag)return;\r\n\t\tif(this.visible==false)return;\r\n\t\tfor(var i:number = 0; i < this.numChildren; i++)\r\n\t\t{\r\n\t\t\tvar child:DisplayObject = this.getChildAt(i);\r\n\t\t\tvar childHit:boolean = child.hitTestPoint(x,y, shapeFlag, masksFlag);\r\n\t\t\tif(childHit) {\r\n\t\t\t\tvar all_masks:Array<DisplayObject> = this._iMasks;\r\n\t\t\t\tif(all_masks){\r\n\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++){\r\n\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\r\n\t\t\t\t\t\tif(mask_child.parent){\r\n\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x,y, shapeFlag, true);\r\n\t\t\t\t\t\t\tif(childHit) return true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n}\r\n\r\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\r\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\r\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\r\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\n\r\n/**\r\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\r\n * files. Use the <code>load()</code> method to initiate loading. The loaded\r\n * display object is added as a child of the Loader object.\r\n *\r\n * <p>Use the URLLoader class to load text or binary data.</p>\r\n *\r\n * <p>The Loader class overrides the following methods that it inherits,\r\n * because a Loader object can only have one child display object - the\r\n * display object that it loads. Calling the following methods throws an\r\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\r\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\r\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\r\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\r\n * child array. </p>\r\n *\r\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\r\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\r\n * them.</p>\r\n *\r\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\r\n * security model: </p>\r\n *\r\n * <ul>\r\n *   <li>You can load content from any accessible source. </li>\r\n *   <li>Loading is not allowed if the calling SWF file is in a network\r\n * sandbox and the file to be loaded is local. </li>\r\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\r\n * cannot be cross-scripted by a SWF file in another security sandbox unless\r\n * that cross-scripting arrangement was approved through a call to the\r\n * <code>System.allowDomain()</code> or the\r\n * <code>System.allowInsecureDomain()</code> method in the loaded content\r\n * file.</li>\r\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\r\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\r\n * ActionScript 3.0). However, you can communicate between the two SWF files\r\n * by using the LocalConnection class.</li>\r\n *   <li>If the loaded content is an image, its data cannot be accessed by a\r\n * SWF file outside of the security sandbox, unless the domain of that SWF\r\n * file was included in a URL policy file at the origin domain of the\r\n * image.</li>\r\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\r\n * clips in the local-with-networking sandbox, and the reverse is also\r\n * prevented. </li>\r\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\r\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\r\n * Developer's Guide</i>. </li>\r\n * </ul>\r\n *\r\n * <p>However, in AIR, content in the <code>application</code> security\r\n * sandbox(content installed with the AIR application) are not restricted by\r\n * these security limitations.</p>\r\n *\r\n * <p>For more information related to security, see the Flash Player Developer\r\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\r\n * scope=\"external\">Security</a>.</p>\r\n *\r\n * <p>When loading a SWF file from an untrusted source(such as a domain other\r\n * than that of the Loader object's root SWF file), you may want to define a\r\n * mask for the Loader object, to prevent the loaded content(which is a child\r\n * of the Loader object) from drawing to portions of the Stage outside of that\r\n * mask, as shown in the following code:</p>\r\n */\r\nclass Loader extends DisplayObjectContainer\r\n{\r\n\t/**\r\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\r\n\t * individual asset type (meshes, materials et c.)\r\n\t *\r\n\t * @eventType AssetEvent\r\n\t */\r\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\r\n\r\n\r\n\t/**\r\n\t * Dispatched when a full resource (including dependencies) finishes loading.\r\n\t *\r\n\t * @eventType LoaderEvent\r\n\t */\r\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\r\n\r\n\tprivate _loaderSession:LoaderSession;\r\n\tprivate _loaderSessionGarbage:LoaderSession;\r\n\tprivate _gcTimeoutIID:number;\r\n\tprivate _useAssetLib:boolean;\r\n\tprivate _assetLibId:string;\r\n\tprivate _onResourceCompleteDelegate:Function;\r\n\tprivate _onAssetCompleteDelegate:Function;\r\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\r\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\r\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\r\n\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentLoaderInfo:LoaderInfo;\r\n\r\n\t/**\r\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\r\n\t * GIF) file that was loaded by using the <code>load()</code> or\r\n\t * <code>loadBytes()</code> methods.\r\n\t *\r\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\r\n\t *                       security sandbox to which you do not have access.\r\n\t *                       For a loaded SWF file, you can avoid this situation\r\n\t *                       by having the file call the\r\n\t *                       <code>Security.allowDomain()</code> method or by\r\n\t *                       having the loading file specify a\r\n\t *                       <code>loaderContext</code> parameter with its\r\n\t *                       <code>securityDomain</code> property set to\r\n\t *                       <code>SecurityDomain.currentDomain</code> when you\r\n\t *                       call the <code>load()</code> or\r\n\t *                       <code>loadBytes()</code> method.\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\r\n\t * LoaderInfo objects are shared between the Loader object and the loaded\r\n\t * content object. The LoaderInfo object supplies loading progress\r\n\t * information and statistics about the loaded file.\r\n\t *\r\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\r\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\r\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\r\n\t * LoaderInfo object, even before the content is loaded, so that you can add\r\n\t * event listeners to the object prior to the load.</p>\r\n\t *\r\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\r\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\r\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\r\n\t */\r\n\tpublic get contentLoaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._contentLoaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\r\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\r\n\t * as a child of the Loader instance. You can then add the Loader object to\r\n\t * the display list(for instance, by using the <code>addChild()</code>\r\n\t * method of a DisplayObjectContainer instance). The asset appears on the\r\n\t * Stage as it loads.\r\n\t *\r\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\r\n\t * to a display object container on the display list. In this mode, the\r\n\t * Loader instance might be used to load a SWF file that contains additional\r\n\t * modules of an application. </p>\r\n\t *\r\n\t * <p>To detect when the SWF file is finished loading, you can use the events\r\n\t * of the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\r\n\t * point, the code in the module SWF file can be executed to initialize and\r\n\t * start the module. In the offlist mode, a Loader instance might also be\r\n\t * used to load a SWF file that contains components or media assets. Again,\r\n\t * you can use the LoaderInfo object event notifications to detect when the\r\n\t * components are finished loading. At that point, the application can start\r\n\t * using the components and media assets in the library of the SWF file by\r\n\t * instantiating the ActionScript 3.0 classes that represent those components\r\n\t * and assets.</p>\r\n\t *\r\n\t * <p>To determine the status of a Loader object, monitor the following\r\n\t * events that the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\r\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\r\n\t * dispatched if the file cannot be loaded or if an error occured during the\r\n\t * load process. </li>\r\n\t *   <li>The <code>progress</code> event fires continuously while the file is\r\n\t * being loaded.</li>\r\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\r\n\t * downloading, but before the loaded movie clip's methods and properties are\r\n\t * available. </li>\r\n\t *   <li>The <code>init</code> event is dispatched after the properties and\r\n\t * methods of the loaded SWF file are accessible, so you can begin\r\n\t * manipulating the loaded SWF file. This event is dispatched before the\r\n\t * <code>complete</code> handler. In streaming SWF files, the\r\n\t * <code>init</code> event can occur significantly earlier than the\r\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\r\n\t * handler.</li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\r\n\t{\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis._useAssetLib = useAssetLibrary;\r\n\t\tthis._assetLibId = assetLibraryId;\r\n\r\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\r\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\r\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels a <code>load()</code> method operation that is currently in\r\n\t * progress for the Loader instance.\r\n\t *\r\n\t */\r\n\tpublic close()\r\n\t{\r\n\t\tif (!this._loaderSession)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\r\n\t\t}\r\n\t\t\r\n\t\tthis._disposeLoaderSession();\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\r\n\t * object that is a child of this Loader object. If you load an animated GIF\r\n\t * file, only the first frame is displayed. As the Loader object can contain\r\n\t * only a single child, issuing a subsequent <code>load()</code> request\r\n\t * terminates the previous request, if still pending, and commences a new\r\n\t * load.\r\n\t *\r\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\r\n\t * loaded image is 8,191 pixels in width or height, and the total number of\r\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\r\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\r\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\r\n\t * and 2,880 pixels in width.</p>\r\n\t *\r\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\r\n\t * rotation, and scale properties of the parent display objects of the Loader\r\n\t * object. </p>\r\n\t *\r\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\r\n\t * with this method, or to cancel a load operation that is in progress.</p>\r\n\t *\r\n\t * <p>You can prevent a SWF file from using this method by setting the\r\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\r\n\t * <code>embed</code> tags in the HTML page that contains the SWF\r\n\t * content.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\r\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\r\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\r\n\t * body), the POST operation is subject to the security rules applied to\r\n\t * uploads:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The POST operation must be performed in response to a user-initiated\r\n\t * action, such as a mouse click or key press.</li>\r\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\r\n\t * same server as the SWF file that is sending the POST request), the target\r\n\t * server must provide a URL policy file that permits cross-domain\r\n\t * access.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\r\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\r\n\t * the POST operation is subject to the security rules applied to\r\n\t * uploads.</p>\r\n\t *\r\n\t * <p>For more information related to security, see the Flash Player\r\n\t * Developer Center Topic: <a\r\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t * scope=\"external\">Security</a>.</p>\r\n\t *\r\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\r\n\t *                file to be loaded. A relative path must be relative to the\r\n\t *                main SWF file. Absolute URLs must include the protocol\r\n\t *                reference, such as http:// or file:///. Filenames cannot\r\n\t *                include disk drive specifications.\r\n\t * @param context A LoaderContext object, which has properties that define\r\n\t *                the following:\r\n\t *                <ul>\r\n\t *                  <li>Whether or not to check for the existence of a policy\r\n\t *                file upon loading the object</li>\r\n\t *                  <li>The ApplicationDomain for the loaded object</li>\r\n\t *                  <li>The SecurityDomain for the loaded object</li>\r\n\t *                  <li>The ImageDecodingPolicy for the loaded image\r\n\t *                object</li>\r\n\t *                </ul>\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the loaded content remains in\r\n\t *                its own security domain.</p>\r\n\t *\r\n\t *                <p>For complete details, see the description of the\r\n\t *                properties in the <a\r\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\r\n\t *                class.</p>\r\n\t * @param ns      An optional namespace string under which the file is to be\r\n\t *                loaded, allowing the differentiation of two resources with\r\n\t *                identical assets.\r\n\t * @param parser  An optional parser object for translating the loaded data\r\n\t *                into a usable resource. If not provided, LoaderSession will\r\n\t *                attempt to auto-detect the file type.\r\n\t * @throws IOError               The <code>digest</code> property of the\r\n\t *                               <code>request</code> object is not\r\n\t *                               <code>null</code>. You should only set the\r\n\t *                               <code>digest</code> property of a URLRequest\r\n\t *                               object when calling the\r\n\t *                               <code>URLLoader.load()</code> method when\r\n\t *                               loading a SWZ file(an Adobe platform\r\n\t *                               component).\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         The value of\r\n\t *                               <code>LoaderContext.securityDomain</code>\r\n\t *                               must be either <code>null</code> or\r\n\t *                               <code>SecurityDomain.currentDomain</code>.\r\n\t *                               This reflects the fact that you can only\r\n\t *                               place the loaded media in its natural\r\n\t *                               security sandbox or your own(the latter\r\n\t *                               requires a policy file).\r\n\t * @throws SecurityError         Local SWF files may not set\r\n\t *                               LoaderContext.securityDomain to anything\r\n\t *                               other than <code>null</code>. It is not\r\n\t *                               permitted to import non-local media into a\r\n\t *                               local sandbox, or to place other local media\r\n\t *                               in anything other than its natural sandbox.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\r\n\t *                               <code>securityDomain</code> properties of\r\n\t *                               the <code>context</code> parameter are from\r\n\t *                               a disallowed domain.\r\n\t * @throws SecurityError         If a local SWF file is attempting to use the\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the file has completed loading. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a network request is made over HTTP and\r\n\t *                      Flash Player can detect the HTTP status code.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      SWF file are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when an input or output error occurs that\r\n\t *                      causes a load operation to fail.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the loading operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is received while load operation\r\n\t *                      progresses.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if a SWF file in the local-with-filesystem\r\n\t *                      sandbox attempts to load content in the\r\n\t *                      local-with-networking sandbox, or vice versa.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads from binary data stored in a ByteArray object.\r\n\t *\r\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\r\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\r\n\t *                any of the file formats supported by the Loader class: SWF,\r\n\t *                GIF, JPEG, or PNG.\r\n\t * @param context A LoaderContext object. Only the\r\n\t *                <code>applicationDomain</code> property of the\r\n\t *                LoaderContext object applies; the\r\n\t *                <code>checkPolicyFile</code> and\r\n\t *                <code>securityDomain</code> properties of the LoaderContext\r\n\t *                object do not apply.\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the content is loaded into the\r\n\t *                current security domain -  a process referred to as \"import\r\n\t *                loading\" in Flash Player security documentation.\r\n\t *                Specifically, if the loading SWF file trusts the remote SWF\r\n\t *                by incorporating the remote SWF into its code, then the\r\n\t *                loading SWF can import it directly into its own security\r\n\t *                domain.</p>\r\n\t *\r\n\t *                <p>For more information related to security, see the Flash\r\n\t *                Player Developer Center Topic: <a\r\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                scope=\"external\">Security</a>.</p>\r\n\t * @throws ArgumentError         If the <code>length</code> property of the\r\n\t *                               ByteArray object is not greater than 0.\r\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter are non-null.\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         If the provided\r\n\t *                               <code>applicationDomain</code> property of\r\n\t *                               the <code>context</code> property is from a\r\n\t *                               disallowed domain.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation is complete. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      data are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the runtime cannot parse the data in the\r\n\t *                      byte array.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is transfered in memory.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\r\n\t}\r\n\r\n\tprivate _getLoaderSession()\r\n\t{\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tthis._loaderSession = lib.getLoaderSession();\r\n\t\t} else {\r\n\t\t\tthis._loaderSession = new LoaderSession();\r\n\t\t}\r\n\r\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn this._loaderSession;\r\n\t}\r\n\r\n\tprivate _disposeLoaderSession()\r\n\t{\r\n\t\t// Add loader to garbage - for a collection sweep and kill\r\n\t\tthis._loaderSessionGarbage = this._loaderSession;\r\n\t\tdelete this._loaderSession;\r\n\t\tthis._loaderSession = null;\r\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Removes a child of this Loader object that was loaded by using the\r\n\t * <code>load()</code> method. The <code>property</code> of the associated\r\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\r\n\t * necessarily destroyed because other objects might have references to it;\r\n\t * however, it is no longer a child of the Loader object.\r\n\t *\r\n\t * <p>As a best practice, before you unload a child SWF file, you should\r\n\t * explicitly close any streams in the child SWF file's objects, such as\r\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\r\n\t * audio in the child SWF file might continue to play, even though the child\r\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\r\n\t * event listener to the child that listens for the <code>unload</code>\r\n\t * event. When the parent calls <code>Loader.unload()</code>, the\r\n\t * <code>unload</code> event is dispatched to the child. The following code\r\n\t * shows how you might do this:</p>\r\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\r\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\r\n\t * myLocalConnection.close(); }\r\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\r\n\t * closeAllStreams);</pre>\r\n\t *\r\n\t */\r\n\tpublic unload()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a specific parser.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClass The parser class to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParser(parserClass:Object)\r\n\t{\r\n\t\tLoaderSession.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a list of parsers.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClasses A Vector of parser classes to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParsers(parserClasses:Array<Object>)\r\n\t{\r\n\t\tLoaderSession.enableParsers(parserClasses);\r\n\t}\r\n\t\r\n\tprivate loaderSessionGC():void\r\n\t{\r\n\t\t//remove listeners\r\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\tif (!this._useAssetLib)\r\n\t\t\tthis._loaderSessionGarbage.stop();\r\n\r\n\t\tdelete this._loaderSessionGarbage;\r\n\t\tthis._loaderSessionGarbage = null;\r\n\r\n\t\tclearTimeout(this._gcTimeoutIID);\r\n\t\tthis._gcTimeoutIID = null;\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when an error occurs during loading\r\n\t */\r\n\tprivate onLoadError(event:IOErrorEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during parsing\r\n\t */\r\n\tprivate onParseError(event:ParserEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onTextureSizeError(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the resource and all of its dependencies was retrieved.\r\n\t */\r\n\tprivate onResourceComplete(event:LoaderEvent)\r\n\t{\r\n\t\tthis._content = <DisplayObject> event.content;\r\n\r\n\t\tif (this._content)\r\n\t\t\tthis.addChild(this._content);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\r\n\t\tthis._disposeLoaderSession();\r\n\t}\r\n}\r\n\r\nexport = Loader;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\nclass Scene extends EventDispatcher\r\n{\r\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partition:Partition;\r\n\r\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\r\n\tpublic _iCollectionMark = 0;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._partition = new Partition(new NodeBase());\r\n\r\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\r\n\r\n\t\tthis._iSceneGraphRoot._iSetScene(this);\r\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\r\n\t\tthis._iSceneGraphRoot.partition = this._partition;\r\n\t}\r\n\r\n\tpublic traversePartitions(traverser:CollectorBase)\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = this._partitions.length;\r\n\r\n\t\ttraverser.scene = this;\r\n\r\n\t\tthis._iCollectionMark++;\r\n\r\n\t\twhile (i < len)\r\n\t\t\tthis._partitions[i++].traverse(traverser);\r\n\t}\r\n\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.partition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.partition = value;\r\n\r\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\r\n\t}\r\n\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.contains(child);\r\n\t}\r\n\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.addChild(child);\r\n\t}\r\n\r\n\tpublic removeChild(child:DisplayObject)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChild(child);\r\n\t}\r\n\r\n\tpublic removeChildAt(index:number)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\r\n\t}\r\n\r\n\r\n\tpublic getChildAt(index:number):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\r\n\t}\r\n\r\n\tpublic get numChildren():number\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.numChildren;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.push(partition);\r\n\r\n\t\t//ensure duplicates are not found in partitions array\r\n\t\tif (this._partitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.push(partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\r\n\r\n\t\t//if no more partition references found, remove from partitions array\r\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\r\n\t}\r\n}\r\n\r\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\r\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\r\n\r\nclass View\r\n{\r\n\r\n\t/*\r\n\t *************************************************************************************************************************\r\n\t * Development Notes\r\n\t *************************************************************************************************************************\r\n\t *\r\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\r\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\r\n\t *\r\n\t * Background\r\n\t *                  - this is currently not being included in our tests and is currently disabled\r\n\t *\r\n\t **************************************************************************************************************************\r\n\t */\r\n\r\n\t// Protected\r\n\tpublic _pScene:Scene;\r\n\tpublic _pCamera:Camera;\r\n\tpublic _pEntityCollector:CollectorBase;\r\n\tpublic _pRenderer:IRenderer;\r\n\r\n\t// Private\r\n\tprivate _aspectRatio:number;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\r\n\tprivate _time:number = 0;\r\n\tprivate _deltaTime:number = 0;\r\n\tprivate _backgroundColor:number = 0x000000;\r\n\tprivate _backgroundAlpha:number = 1;\r\n\r\n\tprivate _viewportDirty:boolean = true;\r\n\tprivate _scissorDirty:boolean = true;\r\n\r\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\r\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\r\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _mouseManager:MouseManager;\r\n\tprivate _mousePicker:IPicker = new RaycastPicker();\r\n\r\n\tprivate _htmlElement:HTMLDivElement;\r\n\tprivate _shareContext:boolean;\r\n\tpublic _pMouseX:number;\r\n\tpublic _pMouseY:number;\r\n\r\n\t/*\r\n\t ***********************************************************************\r\n\t * Disabled / Not yet implemented\r\n\t ***********************************************************************\r\n\t *\r\n\t * private _background:away.textures.Texture2DBase;\r\n\t *\r\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\r\n\t *\r\n\t */\r\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\r\n\t{\r\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\r\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\r\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\r\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\r\n\r\n\t\tthis.scene = scene || new Scene();\r\n\t\tthis.camera = camera || new Camera();\r\n\t\tthis.renderer = renderer;\r\n\r\n\t\t//make sure document border is zero\r\n\t\tdocument.body.style.margin = \"0px\";\r\n\r\n\t\tthis._htmlElement = document.createElement(\"div\");\r\n\t\tthis._htmlElement.style.position = \"absolute\";\r\n\r\n\t\tdocument.body.appendChild(this._htmlElement);\r\n\r\n\t\tthis._mouseManager = MouseManager.getInstance();\r\n\t\tthis._mouseManager.registerView(this);\r\n\r\n//\t\t\tif (this._shareContext)\r\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param e\r\n\t */\r\n\tprivate onScenePartitionChanged(event:SceneEvent)\r\n\t{\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\r\n\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._pMouseX;\r\n\t}\r\n\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._pMouseY;\r\n\t}\r\n\r\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\r\n\t}\r\n\r\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get htmlElement():HTMLDivElement\r\n\t{\r\n\t\treturn this._htmlElement;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get renderer():IRenderer\r\n\t{\r\n\t\treturn this._pRenderer;\r\n\t}\r\n\r\n\tpublic set renderer(value:IRenderer)\r\n\t{\r\n\t\tif (this._pRenderer == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pRenderer) {\r\n\t\t\tthis._pRenderer.dispose();\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\t\t}\r\n\r\n\t\tthis._pRenderer = value;\r\n\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\r\n\t\t//reset entity collector\r\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\t//reset back buffer\r\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\r\n\t\tthis._pRenderer.width = this._width;\r\n\t\tthis._pRenderer.height = this._height;\r\n\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shareContext():boolean\r\n\t{\r\n\t\treturn this._shareContext;\r\n\t}\r\n\r\n\tpublic set shareContext(value:boolean)\r\n\t{\r\n\t\tif (this._shareContext == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._shareContext = value;\r\n\r\n\t\tif (this._pRenderer)\r\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backgroundColor():number\r\n\t{\r\n\t\treturn this._backgroundColor;\r\n\t}\r\n\r\n\tpublic set backgroundColor(value:number)\r\n\t{\r\n\t\tif (this._backgroundColor == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundColor = value;\r\n\r\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get backgroundAlpha():number\r\n\t{\r\n\t\treturn this._backgroundAlpha;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set backgroundAlpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._backgroundAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Camera3D}\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\t/**\r\n\t * Set camera that's used to render the scene for this viewport\r\n\t */\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tif (this._pCamera == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\r\n\t\tthis._pCamera = value;\r\n\r\n\t\tif (this._pEntityCollector)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\r\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {away.containers.Scene3D}\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the scene that's used to render for this viewport\r\n\t */\r\n\tpublic set scene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tthis._pScene = value;\r\n\r\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get deltaTime():number\r\n\t{\r\n\t\treturn this._deltaTime;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.width = value;\r\n\t\tthis._htmlElement.style.width = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.height = value;\r\n\t\tthis._htmlElement.style.height = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get mousePicker():IPicker\r\n\t{\r\n\t\treturn this._mousePicker;\r\n\t}\r\n\r\n\tpublic set mousePicker(value:IPicker)\r\n\t{\r\n\t\tif (this._mousePicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (value == null)\r\n\t\t\tthis._mousePicker = new RaycastPicker();\r\n\t\telse\r\n\t\t\tthis._mousePicker = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._pRenderer.x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.x == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.x == value;\r\n\t\tthis._htmlElement.style.left = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._pRenderer.y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.y == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.y == value;\r\n\t\tthis._htmlElement.style.top = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\r\n\t\t//TODO transfer visible property to associated context (if one exists)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get renderedFacesCount():number\r\n\t{\r\n\t\treturn 0; //TODO\r\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the view.\r\n\t */\r\n\tpublic render()\r\n\t{\r\n\t\tthis.pUpdateTime();\r\n\r\n\t\t//update view and size data\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\r\n\t\tif (this._scissorDirty) {\r\n\t\t\tthis._scissorDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\r\n\t\t}\r\n\r\n\t\tif (this._viewportDirty) {\r\n\t\t\tthis._viewportDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\r\n\t\t}\r\n\r\n\t\t// update picking\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\r\n\t\t\t//_touch3DManager.fireTouchEvents();\r\n\t\t}\r\n\t\t//_touch3DManager.updateCollider();\r\n\r\n\t\t//clear entity collector ready for collection\r\n\t\tthis._pEntityCollector.clear();\r\n\r\n\t\t// collect stuff to render\r\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\r\n\r\n\t\t//render the contents of the entity collector\r\n\t\tthis._pRenderer.render(this._pEntityCollector);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic pUpdateTime():void\r\n\t{\r\n\t\tvar time:number = getTimer();\r\n\r\n\t\tif (this._time == 0)\r\n\t\t\tthis._time = time;\r\n\r\n\t\tthis._deltaTime = time - this._time;\r\n\t\tthis._time = time;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pRenderer.dispose();\r\n\r\n\t\t// TODO: imeplement mouseManager / touch3DManager\r\n\t\tthis._mouseManager.unregisterView(this);\r\n\r\n\t\t//this._touch3DManager.disableTouchListeners(this);\r\n\t\t//this._touch3DManager.dispose();\r\n\r\n\t\tthis._mouseManager = null;\r\n\t\t//this._touch3DManager = null;\r\n\r\n\t\tthis._pRenderer = null;\r\n\t\tthis._pEntityCollector = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get iEntityCollector():CollectorBase\r\n\t{\r\n\t\treturn this._pEntityCollector;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onProjectionChanged(event:CameraEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onViewportUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onScissorUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t}\r\n\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\r\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\r\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\r\n\r\n\t}\r\n\r\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\r\n\t}\r\n\r\n\t/* TODO: implement Touch3DManager\r\n\t public get touchPicker():IPicker\r\n\t {\r\n\t return this._touch3DManager.touchPicker;\r\n\t }\r\n\t */\r\n\t/* TODO: implement Touch3DManager\r\n\t public set touchPicker( value:IPicker)\r\n\t {\r\n\t this._touch3DManager.touchPicker = value;\r\n\t }\r\n\t */\r\n\r\n\tpublic forceMouseMove:boolean;\r\n\r\n\t/*TODO: implement Background\r\n\t public get background():away.textures.Texture2DBase\r\n\t {\r\n\t return this._background;\r\n\t }\r\n\t */\r\n\t/*TODO: implement Background\r\n\t public set background( value:away.textures.Texture2DBase )\r\n\t {\r\n\t this._background = value;\r\n\t this._renderer.background = _background;\r\n\t }\r\n\t */\r\n\r\n\t// TODO: required dependency stageGL\r\n\tpublic updateCollider()\r\n\t{\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\t\t} else {\r\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass ControllerBase\r\n{\r\n\tpublic _pControllerDirty:boolean;\r\n\tpublic _pAutoUpdate:boolean = true;\r\n\tpublic _pTargetObject:DisplayObject;\r\n\r\n\tconstructor(targetObject:DisplayObject = null)\r\n\t{\r\n\t\tthis.targetObject = targetObject;\r\n\t}\r\n\r\n\tpublic pNotifyUpdate()\r\n\t{\r\n\t\tif (this._pTargetObject)\r\n\t\t\tthis._pTargetObject.invalidatePartition();\r\n\t}\r\n\r\n\tpublic get targetObject():DisplayObject\r\n\t{\r\n\t\treturn this._pTargetObject;\r\n\t}\r\n\r\n\tpublic set targetObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pTargetObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate)\r\n\t\t\tthis._pTargetObject._iController = null;\r\n\r\n\t\tthis._pTargetObject = val;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate)\r\n\t\t\tthis._pTargetObject._iController = this;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get autoUpdate():boolean\r\n\t{\r\n\t\treturn this._pAutoUpdate;\r\n\t}\r\n\r\n\tpublic set autoUpdate(val:boolean)\r\n\t{\r\n\t\tif (this._pAutoUpdate == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAutoUpdate = val;\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pAutoUpdate)\r\n\t\t\t\tthis._pTargetObject._iController = this;\r\n\t\t\telse\r\n\t\t\t\tthis._pTargetObject._iController = null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic updateController()\r\n\t{\r\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\r\n\t\t\tthis._pControllerDirty = false;\r\n\t\t\tthis.pNotifyUpdate();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\n\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FirstPersonController extends ControllerBase\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic  _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _walkIncrement:number = 0;\r\n\tprivate _strafeIncrement:number = 0;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\r\n\tpublic fly:boolean = false;\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis._pControllerDirty = true;\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\r\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\r\n\r\n\t\tif (this._walkIncrement) {\r\n\t\t\tif (this.fly) {\r\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\r\n\t\t\t} else {\r\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t}\r\n\t\t\tthis._walkIncrement = 0;\r\n\t\t}\r\n\r\n\t\tif (this._strafeIncrement) {\r\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\r\n\t\t\tthis._strafeIncrement = 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic incrementWalk(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._walkIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic incrementStrafe(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._strafeIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n}\r\n\r\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\r\n\r\n/**\r\n * Controller used to follow behind an object on the XZ plane, with an optional\r\n * elevation (tiltAngle).\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FollowController extends HoverController\r\n{\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (!this.lookAtObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away.containers.View\r\n */\r\nclass HoverController extends LookAtController\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _distance:number = 1000;\r\n\tprivate _minPanAngle:number = -Infinity;\r\n\tprivate _maxPanAngle:number = Infinity;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _yFactor:number = 2;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\tprivate _upAxis:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\r\n\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Distance between the camera and the specified target. Defaults to 1000.\r\n\t */\r\n\tpublic get distance():number\r\n\t{\r\n\t\treturn this._distance;\r\n\t}\r\n\r\n\tpublic set distance(val:number)\r\n\t{\r\n\t\tif (this._distance == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._distance = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get minPanAngle():number\r\n\t{\r\n\t\treturn this._minPanAngle;\r\n\t}\r\n\r\n\tpublic set minPanAngle(val:number)\r\n\t{\r\n\t\tif (this._minPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get maxPanAngle():number\r\n\t{\r\n\t\treturn this._maxPanAngle;\r\n\t}\r\n\r\n\tpublic set maxPanAngle(val:number)\r\n\t{\r\n\t\tif (this._maxPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\r\n\t *\r\n\t * @see    #distance\r\n\t */\r\n\tpublic get yFactor():number\r\n\t{\r\n\t\treturn this._yFactor;\r\n\t}\r\n\r\n\tpublic set yFactor(val:number)\r\n\t{\r\n\t\tif (this._yFactor == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._yFactor = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.distance = distance;\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\r\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.yFactor = yFactor;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis._pControllerDirty = true;\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\r\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\r\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\n\r\nclass LookAtController extends ControllerBase\r\n{\r\n\tpublic _pLookAtPosition:Vector3D;\r\n\tpublic _pLookAtObject:DisplayObject;\r\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\r\n\r\n\t\tif (lookAtObject)\r\n\t\t\tthis.lookAtObject = lookAtObject;\r\n\t\telse\r\n\t\t\tthis.lookAtPosition = new Vector3D();\r\n\t}\r\n\r\n\tpublic get lookAtPosition():Vector3D\r\n\t{\r\n\t\treturn this._pLookAtPosition;\r\n\t}\r\n\r\n\tpublic set lookAtPosition(val:Vector3D)\r\n\t{\r\n\t\tif (this._pLookAtObject) {\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\t\t\tthis._pLookAtObject = null;\r\n\t\t}\r\n\r\n\t\tthis._pLookAtPosition = val;\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get lookAtObject():DisplayObject\r\n\t{\r\n\t\treturn this._pLookAtObject;\r\n\t}\r\n\r\n\tpublic set lookAtObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pLookAtPosition)\r\n\t\t\tthis._pLookAtPosition = null;\r\n\r\n\t\tif (this._pLookAtObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis._pLookAtObject = val;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\r\n\t{\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n}\r\n\r\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Uses spring physics to animate the target object towards a position that is\r\n * defined as the lookAtTarget object's position plus the vector defined by the\r\n * positionOffset property.\r\n */\r\nclass SpringController extends LookAtController\r\n{\r\n\tprivate _velocity:Vector3D;\r\n\tprivate _dv:Vector3D;\r\n\tprivate _stretch:Vector3D;\r\n\tprivate _force:Vector3D;\r\n\tprivate _acceleration:Vector3D;\r\n\tprivate _desiredPosition:Vector3D;\r\n\r\n\t/**\r\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic stiffness:number;\r\n\r\n\t/**\r\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic damping:number;\r\n\r\n\t/**\r\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\r\n\t */\r\n\tpublic mass:number;\r\n\r\n\t/**\r\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\r\n\t */\r\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.stiffness = stiffness;\r\n\t\tthis.damping = damping;\r\n\t\tthis.mass = mass;\r\n\r\n\t\tthis._velocity = new Vector3D();\r\n\t\tthis._dv = new Vector3D();\r\n\t\tthis._stretch = new Vector3D();\r\n\t\tthis._force = new Vector3D();\r\n\t\tthis._acceleration = new Vector3D();\r\n\t\tthis._desiredPosition = new Vector3D();\r\n\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tvar offs:Vector3D;\r\n\r\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pControllerDirty = true;\r\n\r\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\r\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\r\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\r\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\r\n\r\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\r\n\t\tthis._stretch.scaleBy(-this.stiffness);\r\n\r\n\t\tthis._dv.copyFrom(this._velocity);\r\n\t\tthis._dv.scaleBy(this.damping);\r\n\r\n\t\tthis._force.x = this._stretch.x - this._dv.x;\r\n\t\tthis._force.y = this._stretch.y - this._dv.y;\r\n\t\tthis._force.z = this._stretch.z - this._dv.z;\r\n\r\n\t\tthis._acceleration.copyFrom(this._force);\r\n\t\tthis._acceleration.scaleBy(1/this.mass);\r\n\r\n\t\tthis._velocity.incrementBy(this._acceleration);\r\n\r\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\r\n\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = SpringController;",
    "/**\r\n * The CapsStyle class is an enumeration of constant values that specify the\r\n * caps style to use in drawing lines. The constants are provided for use as\r\n * values in the <code>caps</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\r\n * following three types of caps:\r\n */\r\nclass CapsStyle\r\n{\r\n\t/**\r\n\t * Used to specify round caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n\r\n\t/**\r\n\t * Used to specify no caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Used to specify square caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static SQUARE:string = \"square\";\r\n}\r\n\r\nexport = CapsStyle;",
    "/**\r\n * The GradientType class provides values for the <code>type</code> parameter\r\n * in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\r\n * class.\r\n */\r\nclass GradientType\r\n{\r\n\t/**\r\n\t * Value used to specify a linear gradient fill.\r\n\t */\r\n\tpublic static LINEAR:string = \"linear\";\r\n\r\n\t/**\r\n\t * Value used to specify a radial gradient fill.\r\n\t */\r\n\tpublic static RADIAL:string = \"radial\";\r\n}\r\n\r\nexport = GradientType;",
    "/**\r\n * The GraphicsPathWinding class provides values for the\r\n * <code>flash.display.GraphicsPath.winding</code> property and the\r\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\r\n * direction to draw a path. A clockwise path is positively wound, and a\r\n * counter-clockwise path is negatively wound:\r\n *\r\n * <p> When paths intersect or overlap, the winding direction determines the\r\n * rules for filling the areas created by the intersection or overlap:</p>\r\n */\r\nclass GraphicsPathWinding\r\n{\r\n\tpublic static EVEN_ODD:string = \"evenOdd\";\r\n\tpublic static NON_ZERO:string = \"nonZero\";\r\n}\r\n\r\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\n\r\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\r\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\r\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\r\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\r\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\r\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\r\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\r\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\r\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\r\n\r\n/**\r\n * The Graphics class contains a set of methods that you can use to create a\r\n * vector shape. Display objects that support drawing include Sprite and Shape\r\n * objects. Each of these classes includes a <code>graphics</code> property\r\n * that is a Graphics object. The following are among those helper functions\r\n * provided for ease of use: <code>drawRect()</code>,\r\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\r\n * <code>drawEllipse()</code>.\r\n *\r\n * <p>You cannot create a Graphics object directly from ActionScript code. If\r\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\r\n *\r\n * <p>The Graphics class is final; it cannot be subclassed.</p>\r\n */\r\nclass Graphics\r\n{\r\n\t/**\r\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\r\n\t * tiled to fill the area. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\r\n\t *               to be displayed.\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the bitmap. For\r\n\t *               example, you can use the following matrix to rotate a bitmap\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\r\n\t *               pattern. If <code>false</code>, the bitmap image does not\r\n\t *               repeat, and the edges of the bitmap are used for any fill\r\n\t *               area that extends beyond the bitmap.\r\n\t *\r\n\t *               <p>For example, consider the following bitmap(a 20 x\r\n\t *               20-pixel checkerboard pattern):</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\r\n\t *               in the following example), the bitmap fill repeats the\r\n\t *               bitmap:</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\r\n\t *               the bitmap fill uses the edge pixels for the fill area\r\n\t *               outside the bitmap:</p>\r\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\r\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\r\n\t *               <code>true</code>, upscaled bitmap images are rendered by\r\n\t *               using a bilinear algorithm. Rendering by using the nearest\r\n\t *               neighbor algorithm is faster.\r\n\t */\r\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\r\n\t * when drawing. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * @param color The color of the fill(0xRRGGBB).\r\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\r\n\t */\r\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\r\n\t * the object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use:\r\n\t *                            <code>GradientType.LINEAR</code> or\r\n\t *                            <code>GradientType.RADIAL</code>.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>beginGradientFill()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use, either:\r\n\t *                            <code>SpreadMethod.PAD</code>,\r\n\t *                            <code>SpreadMethod.REFLECT</code>, or\r\n\t *                            <code>SpreadMethod.REPEAT</code>.\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors:</p>\r\n\t *\r\n\t *                            <p>This example uses\r\n\t *                            <code>SpreadMethod.PAD</code> for the spread\r\n\t *                            method, and the gradient fill looks like the\r\n\t *                            following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use:\r\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\r\n\t *                            <code>InterpolationMethod.RGB</code>\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors(with the\r\n\t *                            <code>spreadMethod</code> parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows: </p>\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. 0 means that the\r\n\t *                            focal point is in the center. 1 means that the\r\n\t *                            focal point is at one border of the gradient\r\n\t *                            circle. -1 means that the focal point is at the\r\n\t *                            other border of the gradient circle. A value\r\n\t *                            less than -1 or greater than 1 is rounded to -1\r\n\t *                            or 1. For example, the following example shows\r\n\t *                            a <code>focalPointRatio</code> set to 0.75:\r\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\r\n\t */\r\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\r\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\r\n\t * object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\r\n\t * be colored cyan.</p>\r\n\t *\r\n\t * @param shader The shader to use for the fill. This Shader instance is not\r\n\t *               required to specify an image input. However, if an image\r\n\t *               input is specified in the shader, the input must be provided\r\n\t *               manually. To specify the input, set the <code>input</code>\r\n\t *               property of the corresponding ShaderInput property of the\r\n\t *               <code>Shader.data</code> property.\r\n\t *\r\n\t *               <p>When you pass a Shader instance as an argument the shader\r\n\t *               is copied internally. The drawing fill operation uses that\r\n\t *               internal copy, not a reference to the original shader. Any\r\n\t *               changes made to the shader, such as changing a parameter\r\n\t *               value, input, or bytecode, are not applied to the copied\r\n\t *               shader that's used for the fill.</p>\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the shader. For\r\n\t *               example, you can use the following matrix to rotate a shader\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t *\r\n\t *               <p>The coordinates received in the shader are based on the\r\n\t *               matrix that is specified for the <code>matrix</code>\r\n\t *               parameter. For a default(<code>null</code>) matrix, the\r\n\t *               coordinates in the shader are local pixel coordinates which\r\n\t *               can be used to sample an input.</p>\r\n\t * @throws ArgumentError When the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\r\n\t * @throws ArgumentError When the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\r\n\t *                       as an input and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput, or the specified values don't match\r\n\t *                       the amount of data in the input object. See the\r\n\t *                       <code>ShaderInput.input</code> property for more\r\n\t *                       information.\r\n\t */\r\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Clears the graphics that were drawn to this Graphics object, and resets\r\n\t * fill and line style settings.\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of drawing commands from the source Graphics object into the\r\n\t * calling Graphics object.\r\n\t *\r\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\r\n\t *                       commands.\r\n\t */\r\n\tpublic copyFrom(sourceGraphics:Graphics)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a cubic Bezier curve from the current drawing position to the\r\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\r\n\t * and two control points. The curve interpolates the two anchor points and\r\n\t * curves toward the two control points.\r\n\t *\r\n\t * The four points you use to draw a cubic Bezier curve with the\r\n\t * <code>cubicCurveTo()</code> method are as follows:\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The current drawing position is the first anchor point. </li>\r\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\r\n\t *   </li>\r\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\r\n\t *   specify the first control point.</li>\r\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\r\n\t *   specify the second control point.</li>\r\n\t * </ul>\r\n\t *\r\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\r\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\r\n\t *\r\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\r\n\t * the current drawing position to (<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\r\n\t * the current drawing position remains unchanged.\r\n\t *\r\n\t * If your movie clip contains content created with the Flash drawing tools,\r\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\r\n\t * underneath that content.\r\n\t *\r\n\t * @param controlX1 Specifies the horizontal position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY1 Specifies the vertical position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlX2 Specifies the horizontal position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY2 Specifies the vertical position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param anchorX   Specifies the horizontal position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t * @param anchorY   Specifies the vertical position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t */\r\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a curve using the current line style from the current drawing\r\n\t * position to(anchorX, anchorY) and using the control point that\r\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\r\n\t * drawing position is then set to(<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\r\n\t * content created with the Flash drawing tools, calls to the\r\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\r\n\t * call the <code>curveTo()</code> method before any calls to the\r\n\t * <code>moveTo()</code> method, the default of the current drawing position\r\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\r\n\t * current drawing position is not changed.\r\n\t *\r\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\r\n\t * consist of two anchor points and one control point. The curve interpolates\r\n\t * the two anchor points and curves toward the control point. </p>\r\n\t *\r\n\t * @param controlX A number that specifies the horizontal position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param controlY A number that specifies the vertical position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param anchorX  A number that specifies the horizontal position of the\r\n\t *                 next anchor point relative to the registration point of\r\n\t *                 the parent display object.\r\n\t * @param anchorY  A number that specifies the vertical position of the next\r\n\t *                 anchor point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t */\r\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a circle. Set the line style, fill, or both before you call the\r\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param y      The <i>y</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param radius The radius of the circle(in pixels).\r\n\t */\r\n\tpublic drawCircle(x:number, y:number, radius:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\r\n\t * <code>drawEllipse()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param width  The width of the ellipse(in pixels).\r\n\t * @param height The height of the ellipse(in pixels).\r\n\t */\r\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of IGraphicsData instances for drawing. This method\r\n\t * accepts a Vector containing objects including paths, fills, and strokes\r\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\r\n\t * instances can refer to a part of a shape, or a complex fully defined set\r\n\t * of data for rendering a complete shape.\r\n\t *\r\n\t * <p> Graphics paths can contain other graphics paths. If the\r\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\r\n\t * sub-paths are rendered during this operation. </p>\r\n\t *\r\n\t */\r\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\r\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\r\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\r\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\r\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\r\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\r\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\r\n\t * coordinate location. The drawing direction is a value from the\r\n\t * GraphicsPathWinding class.\r\n\t *\r\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\r\n\t * with a series of individual <code>lineTo()</code> and\r\n\t * <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\r\n\t * so rotation and scaling of shapes is more accurate and gives better\r\n\t * results. However, curves submitted using the <code>drawPath()</code>\r\n\t * method can have small sub-pixel alignment errors when used in conjunction\r\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\r\n\t * for filling and drawing lines. They are: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>When a fill is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\r\n\t * stroke rendering will still occur, consistent with the rules for strokes\r\n\t * below.)</li>\r\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\r\n\t * begin point) is implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t *   <li>When a stroke is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>The sub-paths can be composed of any number of points.</li>\r\n\t *   <li>The sub-path is never implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t * </ul>\r\n\t *\r\n\t * @param winding Specifies the winding rule using a value defined in the\r\n\t *                GraphicsPathWinding class.\r\n\t */\r\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\r\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      A number indicating the horizontal position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param y      A number indicating the vertical position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param width  The width of the rectangle(in pixels).\r\n\t * @param height The height of the rectangle(in pixels).\r\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\r\n\t *                       parameters are not a number\r\n\t *                      (<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRect(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\r\n\t * call the <code>drawRoundRect()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x             A number indicating the horizontal position relative\r\n\t *                      to the registration point of the parent display\r\n\t *                      object(in pixels).\r\n\t * @param y             A number indicating the vertical position relative to\r\n\t *                      the registration point of the parent display object\r\n\t *                     (in pixels).\r\n\t * @param width         The width of the round rectangle(in pixels).\r\n\t * @param height        The height of the round rectangle(in pixels).\r\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels).\r\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels). Optional; if no value is\r\n\t *                      specified, the default value matches that provided\r\n\t *                      for the <code>ellipseWidth</code> parameter.\r\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\r\n\t *                       <code>ellipseWidth</code> or\r\n\t *                       <code>ellipseHeight</code> parameters are not a\r\n\t *                       number(<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\r\n\t{\r\n\r\n\t}\r\n\r\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\r\n\r\n\t/**\r\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\r\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\r\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\r\n\t * set of(u,v) coordinates.\r\n\t *\r\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\r\n\t * that transform matrix is ignored. </p>\r\n\t *\r\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\r\n\t * bitmap fill is used. </p>\r\n\t *\r\n\t * @param culling Specifies whether to render triangles that face in a\r\n\t *                specified direction. This parameter prevents the rendering\r\n\t *                of triangles that cannot be seen in the current view. This\r\n\t *                parameter can be set to any value defined by the\r\n\t *                TriangleCulling class.\r\n\t */\r\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a fill to the lines and curves that were added since the last call\r\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\r\n\t * specified in the previous call to the <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method. If the current drawing position does not equal the previous\r\n\t * position specified in a <code>moveTo()</code> method and a fill is\r\n\t * defined, the path is closed with a line and then filled.\r\n\t *\r\n\t */\r\n\tpublic endFill()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param bitmap The bitmap to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\r\n\t * @param smooth Whether smoothing should be applied to the bitmap.\r\n\t */\r\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient to use for the stroke when drawing lines.\r\n\t *\r\n\t * <p>The gradient line style is used for subsequent calls to Graphics\r\n\t * methods such as the <code>lineTo()</code> methods or the\r\n\t * <code>drawCircle()</code> method. The line style remains in effect until\r\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\r\n\t * methods, or the <code>lineGradientStyle()</code> method again with\r\n\t * different parameters. </p>\r\n\t *\r\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\r\n\t * of drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use, either\r\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>lineGradientStyle()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use:\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use. For example,\r\n\t *                            consider a simple linear gradient between two\r\n\t *                            colors(with the <code>spreadMethod</code>\r\n\t *                            parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows:\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. The value 0 means\r\n\t *                            the focal point is in the center. The value 1\r\n\t *                            means the focal point is at one border of the\r\n\t *                            gradient circle. The value -1 means that the\r\n\t *                            focal point is at the other border of the\r\n\t *                            gradient circle. Values less than -1 or greater\r\n\t *                            than 1 are rounded to -1 or 1. The following\r\n\t *                            image shows a gradient with a\r\n\t *                            <code>focalPointRatio</code> of -0.75:\r\n\t */\r\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param shader The shader to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t */\r\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Specifies a line style used for subsequent calls to Graphics methods such\r\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineGradientStyle()</code> method, the\r\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\r\n\t * method with different parameters.\r\n\t *\r\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within the path.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\r\n\t * style back to <code>undefined</code>.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\r\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\r\n\t *\r\n\t * @param thickness    An integer that indicates the thickness of the line in\r\n\t *                     points; valid values are 0-255. If a number is not\r\n\t *                     specified, or if the parameter is undefined, a line is\r\n\t *                     not drawn. If a value of less than 0 is passed, the\r\n\t *                     default is 0. The value 0 indicates hairline\r\n\t *                     thickness; the maximum thickness is 255. If a value\r\n\t *                     greater than 255 is passed, the default is 255.\r\n\t * @param color        A hexadecimal color value of the line; for example,\r\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\r\n\t *                     value is not indicated, the default is 0x000000\r\n\t *                    (black). Optional.\r\n\t * @param alpha        A number that indicates the alpha value of the color\r\n\t *                     of the line; valid values are 0 to 1. If a value is\r\n\t *                     not indicated, the default is 1(solid). If the value\r\n\t *                     is less than 0, the default is 0. If the value is\r\n\t *                     greater than 1, the default is 1.\r\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\r\n\t *                     specifies whether to hint strokes to full pixels. This\r\n\t *                     affects both the position of anchors of a curve and\r\n\t *                     the line stroke size itself. With\r\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\r\n\t *                     line widths are adjusted to full pixel widths. With\r\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\r\n\t *                     disjoints can appear for curves and straight lines.\r\n\t *                     For example, the following illustrations show how\r\n\t *                     Flash Player or Adobe AIR renders two rounded\r\n\t *                     rectangles that are identical, except that the\r\n\t *                     <code>pixelHinting</code> parameter used in the\r\n\t *                     <code>lineStyle()</code> method is set differently\r\n\t *                    (the images are scaled by 200%, to emphasize the\r\n\t *                     difference):\r\n\t *\r\n\t *                     <p>If a value is not supplied, the line does not use\r\n\t *                     pixel hinting.</p>\r\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\r\n\t *                     LineScaleMode class that specifies which scale mode to\r\n\t *                     use:\r\n\t *                     <ul>\r\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\r\n\t *                     scale the line thickness when the object is scaled\r\n\t *                    (the default). </li>\r\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\r\n\t *                     the line thickness. </li>\r\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     vertically <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\r\n\t *                     left is scaled vertically only, and the circle on the\r\n\t *                     right is scaled both vertically and horizontally:\r\n\t *                     </li>\r\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     horizontally <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\r\n\t *                     the left is scaled horizontally only, and the circle\r\n\t *                     on the right is scaled both vertically and\r\n\t *                     horizontally:   </li>\r\n\t *                     </ul>\r\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\r\n\t *                     CapsStyle class that specifies the type of caps at the\r\n\t *                     end of lines. Valid values are:\r\n\t *                     <code>CapsStyle.NONE</code>,\r\n\t *                     <code>CapsStyle.ROUND</code>, and\r\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\r\n\t *                     indicated, Flash uses round caps.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>capsStyle</code> settings. For each\r\n\t *                     setting, the illustration shows a blue line with a\r\n\t *                     thickness of 30(for which the <code>capsStyle</code>\r\n\t *                     applies), and a superimposed black line with a\r\n\t *                     thickness of 1(for which no <code>capsStyle</code>\r\n\t *                     applies): </p>\r\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\r\n\t *                     JointStyle class that specifies the type of joint\r\n\t *                     appearance used at angles. Valid values are:\r\n\t *                     <code>JointStyle.BEVEL</code>,\r\n\t *                     <code>JointStyle.MITER</code>, and\r\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\r\n\t *                     indicated, Flash uses round joints.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>joints</code> settings. For each\r\n\t *                     setting, the illustration shows an angled blue line\r\n\t *                     with a thickness of 30(for which the\r\n\t *                     <code>jointStyle</code> applies), and a superimposed\r\n\t *                     angled black line with a thickness of 1(for which no\r\n\t *                     <code>jointStyle</code> applies): </p>\r\n\t *\r\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\r\n\t *                     <code>JointStyle.MITER</code>, you can use the\r\n\t *                     <code>miterLimit</code> parameter to limit the length\r\n\t *                     of the miter.</p>\r\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\r\n\t *                     indicates the limit at which a miter is cut off. Valid\r\n\t *                     values range from 1 to 255(and values outside that\r\n\t *                     range are rounded to 1 or 255). This value is only\r\n\t *                     used if the <code>jointStyle</code> is set to\r\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\r\n\t *                     value represents the length that a miter can extend\r\n\t *                     beyond the point at which the lines meet to form a\r\n\t *                     joint. The value expresses a factor of the line\r\n\t *                     <code>thickness</code>. For example, with a\r\n\t *                     <code>miterLimit</code> factor of 2.5 and a\r\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\r\n\t *                     off at 25 pixels.\r\n\t *\r\n\t *                     <p>For example, consider the following angled lines,\r\n\t *                     each drawn with a <code>thickness</code> of 20, but\r\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\r\n\t *                     Superimposed are black reference lines showing the\r\n\t *                     meeting points of the joints:</p>\r\n\t *\r\n\t *                     <p>Notice that a given <code>miterLimit</code> value\r\n\t *                     has a specific maximum angle for which the miter is\r\n\t *                     cut off. The following table lists some examples:</p>\r\n\t */\r\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a line using the current line style from the current drawing\r\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\r\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\r\n\t * which you are drawing contains content that was created with the Flash\r\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\r\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\r\n\t * to the <code>moveTo()</code> method, the default position for the current\r\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\r\n\t * method fails and the current drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic lineTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\r\n\t * any of the parameters are missing, this method fails and the current\r\n\t * drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic moveTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = Graphics;",
    "/**\r\n * The InterpolationMethod class provides values for the\r\n * <code>interpolationMethod</code> parameter in the\r\n * <code>Graphics.beginGradientFill()</code> and\r\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\r\n * determines the RGB space to use when rendering the gradient.\r\n */\r\nclass InterpolationMethod\r\n{\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static RGB:string = \"rgb\";\r\n}\r\n\r\nexport = InterpolationMethod;",
    "/**\r\n * The JointStyle class is an enumeration of constant values that specify the\r\n * joint style to use in drawing lines. These constants are provided for use\r\n * as values in the <code>joints</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\r\n * three types of joints: miter, round, and bevel, as the following example\r\n * shows:\r\n */\r\nclass JointStyle\r\n{\r\n\t/**\r\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static BEVEL:string = \"bevel\";\r\n\r\n\t/**\r\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static MITER:string = \"miter\";\r\n\r\n\t/**\r\n\t * Specifies round joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n}\r\n\r\nexport = JointStyle;",
    "/**\r\n * The LineScaleMode class provides values for the <code>scaleMode</code>\r\n * parameter in the <code>Graphics.lineStyle()</code> method.\r\n */\r\nclass LineScaleMode\r\n{\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\r\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\r\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\r\n\t * scaled only vertically, and the circle on the right is scaled both\r\n\t * vertically and horizontally.\r\n\t */\r\n\tpublic static HORIZONTAL:string = \"horizontal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\r\n\t * when the object is scaled(the default).\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> horizontally. For example, consider the following circles,\r\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\r\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\r\n\t * left is scaled only horizontally, and the circle on the right is scaled\r\n\t * both vertically and horizontally.\r\n\t */\r\n\tpublic static VERTICAL:string = \"vertical\";\r\n}\r\n\r\nexport = LineScaleMode;",
    "/**\r\n * The PixelSnapping class is an enumeration of constant values for setting\r\n * the pixel snapping options by using the <code>pixelSnapping</code> property\r\n * of a Bitmap object.\r\n */\r\nclass PixelSnapping\r\n{\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is always snapped to the\r\n\t * nearest pixel, independent of any transformation.\r\n\t */\r\n\tpublic static ALWAYS:string = \"always\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\r\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\r\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\r\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\r\n\t * setting allows the image to be drawn as fast as possible by using the\r\n\t * vector renderer.\r\n\t */\r\n\tpublic static AUTO:string = \"auto\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that no pixel snapping occurs.\r\n\t */\r\n\tpublic static NEVER:string = \"never\";\r\n}\r\n\r\nexport = PixelSnapping;",
    "/**\r\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\r\n * parameter in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the Graphics class.\r\n *\r\n * <p>The following example shows the same gradient fill using various spread\r\n * methods:</p>\r\n */\r\nclass SpreadMethod\r\n{\r\n\t/**\r\n\t * Specifies that the gradient use the <i>pad</i> spread method.\r\n\t */\r\n\tpublic static PAD:string = \"pad\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\r\n\t */\r\n\tpublic static REFLECT:string = \"reflect\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\r\n\t */\r\n\tpublic static REPEAT:string = \"repeat\";\r\n}\r\n\r\nexport = SpreadMethod;",
    "/**\r\n * Defines codes for culling algorithms that determine which triangles not to\r\n * render when drawing triangle paths.\r\n *\r\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\r\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\r\n * that is perpendicular to the surface of the triangle. </p>\r\n *\r\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\r\n * has a positive normal value. That is, its normal points in a positive\r\n * z-axis direction, away from the current view point. When the\r\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\r\n * positive normals are not rendered. Another term for this is backface\r\n * culling. </p>\r\n *\r\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\r\n * a negative normal value. That is, its normal points in a negative z-axis\r\n * direction, toward the current view point. When the\r\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\r\n * negative normals will not be rendered. </p>\r\n */\r\nclass TriangleCulling\r\n{\r\n\t/**\r\n\t * Specifies culling of all triangles facing toward the current view point.\r\n\t */\r\n\tpublic static NEGATIVE:string = \"negative\";\r\n\r\n\t/**\r\n\t * Specifies no culling. All triangles in the path are rendered.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies culling of all triangles facing away from the current view\r\n\t * point. This is also known as backface culling.\r\n\t */\r\n\tpublic static POSITIVE:string = \"positive\";\r\n}\r\n\r\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * The Billboard class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Billboard()</code> constructor.\r\n *\r\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\r\n * object that contains a reference to a Image2D object. After you create a\r\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Billboard object can share its Image2D reference among several Billboard\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Billboard objects that reference the same Image2D object,\r\n * multiple display objects can use the same complex Image2D object without\r\n * incurring the memory overhead of a Image2D object for each display\r\n * object instance.</p>\r\n *\r\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\r\n * of two ways: by using the default hardware renderer with a single hardware surface,\r\n * or by using the slower software renderer when 3D acceleration is not available.</p>\r\n *\r\n * <p>If you would prefer to perform a batch rendering command, rather than using a\r\n * single surface for each Billboard object, you can also draw to the screen using the\r\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\r\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\r\n * objects.</code></p>\r\n *\r\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\r\n * class, so it cannot dispatch mouse events. However, you can use the\r\n * <code>addEventListener()</code> method of the display object container that\r\n * contains the Billboard object.</p>\r\n */\r\n\r\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Billboard]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _billboardWidth:number;\r\n\tprivate _billboardHeight:number;\r\n\tprivate _billboardRect:Rectangle;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _parentColorTransform:ColorTransform;\r\n\r\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\r\n\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Billboard.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Image2D object being referenced.\r\n\t */\r\n\tpublic image2D:Image2D; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardRect():Rectangle\r\n\t{\r\n\t\treturn this._billboardRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardHeight():number\r\n\t{\r\n\t\treturn this._billboardHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardWidth():number\r\n\t{\r\n\t\treturn this._billboardWidth;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iRemoveOwner(this);\r\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iAddOwner(this);\r\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\r\n\t * This value is ignored in the native and HTML5 targets.\r\n\t * The PixelSnapping class includes possible values:\r\n\t * <ul>\r\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\r\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\r\n\t * the nearest pixel, independent of transformation.</li>\r\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\r\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\r\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\r\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\r\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\r\n\t * as possible using the internal vector renderer.</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic pixelSnapping:string; //TODO\r\n\r\n\t/**\r\n\t * Controls whether or not the bitmap is smoothed when scaled. If\r\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\r\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\r\n\t */\r\n\tpublic smoothing:boolean; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\t// outputs the concaneted color-transform\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// set this on the inheritet colorTransform\r\n\t\tthis.transform.colorTransform = value;\r\n\t\t// new calculate the concaneted transform\r\n\t\tthis._applyColorTransform();\r\n\r\n\t}\r\n\r\n\tpublic get parentColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._parentColorTransform;\r\n\t}\r\n\r\n\tpublic set parentColorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\r\n\t\tthis._parentColorTransform = value;\r\n\t\tthis._applyColorTransform();\r\n\t}\r\n\r\n\tprivate _applyColorTransform()\r\n\t{\r\n\t\tthis._colorTransform=new ColorTransform();\r\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\r\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this.transform.colorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this._parentColorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t\tthis._billboardHeight = material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\r\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Billboard = new Billboard(this.material);\r\n\t\treturn clone;\r\n\t}\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate onSizeChanged(event:MaterialEvent)\r\n\t{\r\n\t\tthis._billboardWidth = this._material.width;\r\n\t\tthis._billboardHeight = this._material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\n\r\n\r\nclass Camera extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Camera]\";\r\n\r\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\r\n\tprivate _viewProjectionDirty:Boolean = true;\r\n\tprivate _projection:IProjection;\r\n\tprivate _frustumPlanes:Array<Plane3D>;\r\n\tprivate _frustumPlanesDirty:Boolean = true;\r\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\r\n\r\n\tconstructor(projection:IProjection = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\r\n\r\n\t\tthis._projection = projection || new PerspectiveProjection();\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\r\n\t\tthis._frustumPlanes = [];\r\n\r\n\t\tfor (var i:number = 0; i < 6; ++i)\r\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\r\n\r\n\t\tthis.z = -1000;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Camera.assetType;\r\n\t}\r\n\r\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\r\n\t{\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic get frustumPlanes():Array<Plane3D>\r\n\t{\r\n\t\tif (this._frustumPlanesDirty)\r\n\t\t\tthis.updateFrustum();\r\n\r\n\t\treturn this._frustumPlanes;\r\n\t}\r\n\r\n\tprivate updateFrustum()\r\n\t{\r\n\t\tvar a:number, b:number, c:number;\r\n\t\t//var d : Number;\r\n\t\tvar c11:number, c12:number, c13:number, c14:number;\r\n\t\tvar c21:number, c22:number, c23:number, c24:number;\r\n\t\tvar c31:number, c32:number, c33:number, c34:number;\r\n\t\tvar c41:number, c42:number, c43:number, c44:number;\r\n\t\tvar p:Plane3D;\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\r\n\t\tvar invLen:number;\r\n\t\tthis.viewProjection.copyRawDataTo(raw);\r\n\r\n\t\tc11 = raw[0];\r\n\t\tc12 = raw[4];\r\n\t\tc13 = raw[8];\r\n\t\tc14 = raw[12];\r\n\t\tc21 = raw[1];\r\n\t\tc22 = raw[5];\r\n\t\tc23 = raw[9];\r\n\t\tc24 = raw[13];\r\n\t\tc31 = raw[2];\r\n\t\tc32 = raw[6];\r\n\t\tc33 = raw[10];\r\n\t\tc34 = raw[14];\r\n\t\tc41 = raw[3];\r\n\t\tc42 = raw[7];\r\n\t\tc43 = raw[11];\r\n\t\tc44 = raw[15];\r\n\r\n\t\t// left plane\r\n\t\tp = this._frustumPlanes[0];\r\n\t\ta = c41 + c11;\r\n\t\tb = c42 + c12;\r\n\t\tc = c43 + c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c14)*invLen;\r\n\r\n\t\t// right plane\r\n\t\tp = this._frustumPlanes[1];\r\n\t\ta = c41 - c11;\r\n\t\tb = c42 - c12;\r\n\t\tc = c43 - c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c14 - c44)*invLen;\r\n\r\n\t\t// bottom\r\n\t\tp = this._frustumPlanes[2];\r\n\t\ta = c41 + c21;\r\n\t\tb = c42 + c22;\r\n\t\tc = c43 + c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c24)*invLen;\r\n\r\n\t\t// top\r\n\t\tp = this._frustumPlanes[3];\r\n\t\ta = c41 - c21;\r\n\t\tb = c42 - c22;\r\n\t\tc = c43 - c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c24 - c44)*invLen;\r\n\r\n\t\t// near\r\n\t\tp = this._frustumPlanes[4];\r\n\t\ta = c31;\r\n\t\tb = c32;\r\n\t\tc = c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -c34*invLen;\r\n\r\n\t\t// far\r\n\t\tp = this._frustumPlanes[5];\r\n\t\ta = c41 - c31;\r\n\t\tb = c42 - c32;\r\n\t\tc = c43 - c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c34 - c44)*invLen;\r\n\r\n\t\tthis._frustumPlanesDirty = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get projection():IProjection\r\n\t{\r\n\t\treturn this._projection;\r\n\t}\r\n\r\n\tpublic set projection(value:IProjection)\r\n\t{\r\n\t\tif (this._projection == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!value)\r\n\t\t\tthrow new Error(\"Projection cannot be null!\");\r\n\r\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis._projection = value;\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get viewProjection():Matrix3D\r\n\t{\r\n\t\tif (this._viewProjectionDirty) {\r\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\r\n\t\t\tthis._viewProjection.append(this._projection.matrix);\r\n\t\t\tthis._viewProjectionDirty = false;\r\n\t\t}\r\n\r\n\t\treturn this._viewProjection;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\r\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\r\n\t */\r\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the normalised position in screen space of the given scene position.\r\n\t *\r\n\t * @param point3d the position vector of the scene coordinates to be projected.\r\n\t * @return The normalised screen position of the given scene coordinates.\r\n\t */\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the scene position of the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\r\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The scene position of the given screen coordinates.\r\n\t */\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterCamera(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterCamera(this);\r\n\t}\r\n}\r\n\r\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass DirectionalLight extends LightBase implements IEntity\r\n{\r\n\tprivate _direction:Vector3D;\r\n\tprivate _tmpLookAt:Vector3D;\r\n\tprivate _sceneDirection:Vector3D;\r\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\r\n\tprivate _projAABBPoints:Array<number>;\r\n\r\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\r\n\r\n\t\tthis._sceneDirection = new Vector3D();\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get sceneDirection():Vector3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._sceneDirection;\r\n\t}\r\n\r\n\tpublic get direction():Vector3D\r\n\t{\r\n\t\treturn this._direction;\r\n\t}\r\n\r\n\tpublic set direction(value:Vector3D)\r\n\t{\r\n\t\tthis._direction = value;\r\n\r\n\t\tif (!this._tmpLookAt)\r\n\t\t\tthis._tmpLookAt = new Vector3D();\r\n\r\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\r\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\r\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\r\n\r\n\t\tthis.lookAt(this._tmpLookAt);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tsuper.pUpdateSceneTransform();\r\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\r\n\t\tthis._sceneDirection.normalize();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\r\n\t{\r\n\t\treturn new DirectionalShadowMapper();\r\n\t}\r\n\r\n\t//override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tif (!this._projAABBPoints)\r\n\t\t\tthis._projAABBPoints = [];\r\n\r\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\r\n\r\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\r\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\r\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\r\n\t\tvar d:number;\r\n\t\tfor (var i:number = 0; i < 24;) {\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < xMin)\r\n\t\t\t\txMin = d;\r\n\r\n\t\t\tif (d > xMax)\r\n\t\t\t\txMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < yMin)\r\n\t\t\t\tyMin = d;\r\n\r\n\t\t\tif (d > yMax)\r\n\t\t\t\tyMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < zMin)\r\n\t\t\t\tzMin = d;\r\n\r\n\t\t\tif (d > zMax)\r\n\t\t\t\tzMax = d;\r\n\t\t}\r\n\r\n\t\tvar invXRange:number = 1/(xMax - xMin);\r\n\t\tvar invYRange:number = 1/(yMax - yMin);\r\n\t\tvar invZRange:number = 1/(zMax - zMin);\r\n\t\traw[0] = 2*invXRange;\r\n\t\traw[5] = 2*invYRange;\r\n\t\traw[10] = invZRange;\r\n\t\traw[12] = -(xMax + xMin)*invXRange;\r\n\t\traw[13] = -(yMax + yMin)*invYRange;\r\n\t\traw[14] = -zMin*invZRange;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterDirectionalLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterDirectionalLight(this);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\t//update points\r\n\t\tvar minX:number = this._pBoxBounds.x;\r\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\r\n\t\tvar minZ:number = this._pBoxBounds.z;\r\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\r\n\t\tvar maxY:number = this._pBoxBounds.y;\r\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\r\n\r\n\t\tthis._pAabbPoints[0] = minX;\r\n\t\tthis._pAabbPoints[1] = minY;\r\n\t\tthis._pAabbPoints[2] = minZ;\r\n\t\tthis._pAabbPoints[3] = maxX;\r\n\t\tthis._pAabbPoints[4] = minY;\r\n\t\tthis._pAabbPoints[5] = minZ;\r\n\t\tthis._pAabbPoints[6] = minX;\r\n\t\tthis._pAabbPoints[7] = maxY;\r\n\t\tthis._pAabbPoints[8] = minZ;\r\n\t\tthis._pAabbPoints[9] = maxX;\r\n\t\tthis._pAabbPoints[10] = maxY;\r\n\t\tthis._pAabbPoints[11] = minZ;\r\n\t\tthis._pAabbPoints[12] = minX;\r\n\t\tthis._pAabbPoints[13] = minY;\r\n\t\tthis._pAabbPoints[14] = maxZ;\r\n\t\tthis._pAabbPoints[15] = maxX;\r\n\t\tthis._pAabbPoints[16] = minY;\r\n\t\tthis._pAabbPoints[17] = maxZ;\r\n\t\tthis._pAabbPoints[18] = minX;\r\n\t\tthis._pAabbPoints[19] = maxY;\r\n\t\tthis._pAabbPoints[20] = maxZ;\r\n\t\tthis._pAabbPoints[21] = maxX;\r\n\t\tthis._pAabbPoints[22] = maxY;\r\n\t\tthis._pAabbPoints[23] = maxZ;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\nclass LightProbe extends LightBase implements IEntity\r\n{\r\n\tprivate _diffuseMap:ImageCube;\r\n\tprivate _specularMap:ImageCube;\r\n\r\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._diffuseMap = diffuseMap;\r\n\t\tthis._specularMap = specularMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get diffuseMap():ImageCube\r\n\t{\r\n\t\treturn this._diffuseMap;\r\n\t}\r\n\r\n\tpublic set diffuseMap(value:ImageCube)\r\n\t{\r\n\t\tthis._diffuseMap = value;\r\n\t}\r\n\r\n\tpublic get specularMap():ImageCube\r\n\t{\r\n\t\treturn this._specularMap;\r\n\t}\r\n\r\n\tpublic set specularMap(value:ImageCube)\r\n\t{\r\n\t\tthis._specularMap = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterLightProbe(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterLightProbe(this);\r\n\t}\r\n}\r\n\r\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A Line Segment primitive.\r\n */\r\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset LineSegment]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\r\n\tpublic _startPosition:Vector3D;\r\n\tpublic _endPosition:Vector3D;\r\n\tpublic _halfThickness:number;\r\n\r\n\t/**\r\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSegment.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startPostion():Vector3D\r\n\t{\r\n\t\treturn this._startPosition;\r\n\t}\r\n\r\n\tpublic set startPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._startPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._startPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endPosition():Vector3D\r\n\t{\r\n\t\treturn this._endPosition;\r\n\t}\r\n\r\n\tpublic set endPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._endPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._endPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():number\r\n\t{\r\n\t\treturn this._halfThickness*2;\r\n\t}\r\n\r\n\tpublic set thickness(value:number)\r\n\t{\r\n\t\tif (this._halfThickness == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._halfThickness = value*0.5;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a line segment\r\n\t *\r\n\t * @param startPosition Start position of the line segment\r\n\t * @param endPosition Ending position of the line segment\r\n\t * @param thickness Thickness of the line\r\n\t */\r\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._startPosition = startPosition;\r\n\t\tthis._endPosition = endPosition;\r\n\t\tthis._halfThickness = thickness*0.5;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._startPosition = null;\r\n\t\tthis._endPosition = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\r\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\r\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\r\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\r\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\r\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\r\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\r\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\r\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\r\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\r\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRenderableUpdate()\r\n\t{\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\r\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\r\n * of the geometry to be assigned different materials.\r\n */\r\nclass Mesh extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Mesh]\";\r\n\r\n\tprivate _uvTransform:UVTransform;\r\n\r\n\tprivate _subMeshes:Array<ISubMesh>;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _animator:IAnimator;\r\n\tprivate _castsShadows:boolean = true;\r\n\tprivate _shareAnimationGeometry:boolean = true;\r\n\r\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\tpublic set animator(value:IAnimator)\r\n\t{\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.removeOwner(this);\r\n\r\n\t\tthis._animator = value;\r\n\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\r\n\t\t\tif (subMesh.material) {\r\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\r\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\r\n\t\t\t}\r\n\r\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\r\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\r\n\t\t}\r\n\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.addOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Mesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\r\n\t */\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tthis._castsShadows = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The geometry used by the mesh that provides it with its shape.\r\n\t */\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\tpublic set geometry(value:Geometry)\r\n\t{\r\n\t\tvar i:number;\r\n\r\n\t\tif (this._geometry) {\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\r\n\t\t\t\tthis._subMeshes[i].dispose();\r\n\r\n\t\t\tthis._subMeshes.length = 0;\r\n\t\t}\r\n\r\n\t\tthis._geometry = value;\r\n\r\n\t\tif (this._geometry) {\r\n\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\r\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\r\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the Mesh.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tvar i:number;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iAddOwner(subMesh);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the mesh share the same animation geometry.\r\n\t */\r\n\tpublic get shareAnimationGeometry():boolean\r\n\t{\r\n\t\treturn this._shareAnimationGeometry;\r\n\t}\r\n\r\n\tpublic set shareAnimationGeometry(value:boolean)\r\n\t{\r\n\t\tthis._shareAnimationGeometry = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\r\n\t * material.\r\n\t */\r\n\tpublic get subMeshes():Array<ISubMesh>\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._subMeshes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._pColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tsuper._pSetColorTransform(value);\r\n\t}\r\n\t/**\r\n\t * Create a new Mesh object.\r\n\t *\r\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\r\n\t * @param material    [optional]        The material with which to render the Mesh.\r\n\t */\r\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._subMeshes = new Array<ISubMesh>();\r\n\r\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\r\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\r\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\r\n\r\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\r\n\t\tthis.geometry = geometry || new Geometry();\r\n\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic bakeTransformations()\r\n\t{\r\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\r\n\t\tthis._iMatrix3D.identity();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis.material = null;\r\n\t\tthis.geometry = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\r\n\t * @return\r\n\t */\r\n\tpublic disposeWithAnimatorAndChildren()\r\n\t{\r\n\t\tthis.disposeWithChildren();\r\n\r\n\t\t if (this._animator)\r\n\t\t\tthis._animator.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Clones this Mesh instance along with all it's children, while re-using the same\r\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\r\n\t * containing copies of all of it's children.\r\n\t *\r\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\r\n\t * geometry, and material. Properties that are cloned or created anew for the copy\r\n\t * include subMeshes, children of the mesh, and the animator.\r\n\t *\r\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\r\n\t * cloning it's children, the simplest way is to create a new mesh manually:\r\n\t *\r\n\t * <code>\r\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\r\n\t * </code>\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Mesh = new Mesh(null, null);\r\n\r\n        this._iCopyToMesh(clone);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n    public _iCopyToMesh(clone:Mesh):void\r\n    {\r\n        clone.geometry = this._geometry;\r\n        clone.material = this._material;\r\n        clone._iMatrix3D = this._iMatrix3D;\r\n        clone.pivot = this.pivot;\r\n        clone.partition = this.partition;\r\n        clone.boundsType = this.boundsType;\r\n\r\n\r\n        clone.name = this.name;\r\n        clone.castsShadows = this.castsShadows;\r\n        clone.shareAnimationGeometry = this.shareAnimationGeometry;\r\n        clone.mouseEnabled = this.mouseEnabled;\r\n        clone.mouseChildren = this.mouseChildren;\r\n        //this is of course no proper cloning\r\n        //maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\r\n        clone.extra = this.extra;\r\n\t\tclone._iMaskID = this._iMaskID;\r\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n        var len:number = this._subMeshes.length;\r\n        for (var i:number = 0; i < len; ++i)\r\n            clone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n\r\n        len = this.numChildren;\r\n        var obj:any;\r\n\r\n        for (i = 0; i < len; ++i) {\r\n            obj = this.getChildAt(i).clone();\r\n            clone.addChild(<DisplayObjectContainer> obj);\r\n        }\r\n\r\n        if (this._animator)\r\n            clone.animator = this._animator.clone();\r\n    }\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param subGeometry\r\n\t * @returns {SubMeshBase}\r\n\t */\r\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\r\n\t{\r\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\t\tvar tmp_maxZ:number, tmp_minZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\r\n\t\t\tif (this.numChildren) {\r\n\t\t\t\tmaxX = this._pBoxBounds.width + (minX = this._pBoxBounds.x);\r\n\t\t\t\tmaxY = this._pBoxBounds.height + (minY = this._pBoxBounds.y);\r\n\t\t\t\tmaxZ = this._pBoxBounds.depth + (minZ = this._pBoxBounds.z);\r\n\t\t\t\ttmp_maxZ = this._pBoxBounds.depth + (tmp_minZ = this._pBoxBounds.z);\r\n\t\t\t} else {\r\n\t\t\t\tminX = maxX = boundingPositions[i];\r\n\t\t\t\tminY = maxY = boundingPositions[i + 1];\r\n\t\t\t\tif(subGeom.isAsset(CurveSubGeometry)){\r\n\t\t\t\t\tminZ = maxZ = 0;\r\n\t\t\t\t\ttmp_minZ = tmp_maxZ = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\ttmp_minZ = tmp_maxZ = boundingPositions[i + 2];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\t\t\t\tfor (i = 0; i < len; i+=3) {\r\n\t\t\t\t\tp = boundingPositions[i];\r\n\t\t\t\t\tif (p < minX)\r\n\t\t\t\t\t\tminX = p;\r\n\t\t\t\t\telse if (p > maxX)\r\n\t\t\t\t\t\tmaxX = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 1];\r\n\r\n\t\t\t\t\tif (p < minY)\r\n\t\t\t\t\t\tminY = p;\r\n\t\t\t\t\telse if (p > maxY)\r\n\t\t\t\t\t\tmaxY = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 2];\r\n\r\n\t\t\t\t\tif (p < tmp_minZ)\r\n\t\t\t\t\t\ttmp_minZ = p;\r\n\t\t\t\t\telse if (p > tmp_maxZ)\r\n\t\t\t\t\t\ttmp_maxZ = p;\r\n\t\t\t\t}\r\n\t\t\t\tif(!(subGeom.isAsset(CurveSubGeometry))){\r\n\t\t\t\t\tminZ = tmp_minZ;\r\n\t\t\t\t\tmaxZ = tmp_maxZ;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tvar centerX:number = box.x + box.width/2;\r\n\t\tvar centerY:number = box.y + box.height/2;\r\n\t\tvar centerZ:number = box.z + box.depth/2;\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar maxRadiusSquared:number = 0;\r\n\t\tvar radiusSquared:number;\r\n\t\tvar distanceX:number;\r\n\t\tvar distanceY:number;\r\n\t\tvar distanceZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i += 3) {\r\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\r\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\r\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\r\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\r\n\r\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\r\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._pSphereBounds.x = centerX;\r\n\t\tthis._pSphereBounds.y = centerY;\r\n\t\tthis._pSphereBounds.z = centerZ;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\r\n\t{\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was added to the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryAdded(event:GeometryEvent)\r\n\t{\r\n\t\tthis.addSubMesh(event.subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was removed from the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\r\n\t{\r\n\t\tvar subMesh:ISubMesh;\r\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar i:number;\r\n\r\n\t\t// Important! This has to be done here, and not delayed until the\r\n\t\t// next render loop, since this may be caused by the geometry being\r\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\r\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry == subGeom) {\r\n\t\t\t\tsubMesh.dispose();\r\n\r\n\t\t\t\tthis._subMeshes.splice(i, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t--len;\r\n\t\tfor (; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iIndex = i;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a SubMeshBase wrapping a SubGeometry.\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\r\n\r\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\r\n\t\tvar len:number = this._subMeshes.length;\r\n\r\n\t\tsubMesh._iIndex = len;\r\n\r\n\t\tthis._subMeshes[len] = subMesh;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\r\n\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tvar len:number = this.subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this.subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\r\n\r\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\r\n\r\n\t\t\t\tif (!findClosest)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\r\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometries()\r\n\t{\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\r\n\t{\r\n\t\t// if this is a mask, directly return false\r\n\t\tif(this._iMaskID!==-1 && !masksFlag)return false;\r\n\r\n\t\t// if this is invisible, all children should be invisible too.\r\n\t\t// todo: is the above statement correct for awayjs visible-property ?\r\n\t\tif(this.visible==false)return false;\r\n\r\n\t\t// from this point out, we can not return false, without checking collision of childs.\r\n\t\t\r\n\t\tvar local:Point = this.globalToLocal(new Point(x,y));\r\n\r\n\t\tif(this.geometry) {\r\n\t\t\tif(this.getBox().contains(local.x, local.y, 0)){\r\n\t\t\t\tif (!shapeFlag)\r\n\t\t\t\t\treturn true;\r\n\r\n\t\t\t\tfor(var j:number = 0; j < this.geometry.subGeometries.length; j++) {\r\n\t\t\t\t\tif (this.geometry.subGeometries[j].hitTestPoint(local.x, local.y, 0)) {\r\n\r\n\t\t\t\t\t\t// if the mesh is masked, we need to check if 1 mask will collide\r\n\t\t\t\t\t\tvar all_masks:Array<DisplayObject> = this._iMasks;\r\n\t\t\t\t\t\tif (all_masks) {\r\n\t\t\t\t\t\t\tvar all_hir_masks:Array<DisplayObject> = this[\"hierarchicalMasks\"];\r\n\t\t\t\t\t\t\t//todo: check if there will be cases when no hirarchical masks have been collected and assigned yet.\r\n\t\t\t\t\t\t\tif (all_hir_masks){\r\n\t\t\t\t\t\t\t\tall_masks = all_hir_masks;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++) {\r\n\t\t\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\r\n\t\t\t\t\t\t\t\tif (mask_child.parent) {\r\n\t\t\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x, y, shapeFlag, true);\r\n\t\t\t\t\t\t\t\t\tif (childHit)return true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar hit:boolean = false;\r\n\t\thit = super.hitTestPoint(x, y, shapeFlag, masksFlag);\r\n\t\tif(hit)\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = Mesh;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\n\r\nclass PointLight extends LightBase implements IEntity\r\n{\r\n\tpublic _pRadius:number = 90000;\r\n\tpublic _pFallOff:number = 100000;\r\n\tpublic _pFallOffFactor:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.SPHERE;\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\r\n\t{\r\n\t\treturn new CubeMapShadowMapper();\r\n\t}\r\n\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pRadius = value;\r\n\r\n\t\tif (this._pRadius < 0) {\r\n\t\t\tthis._pRadius = 0;\r\n\t\t} else if (this._pRadius > this._pFallOff) {\r\n\t\t\tthis._pFallOff = this._pRadius;\r\n\t\t\tthis._pInvalidateBounds();\r\n\t\t}\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\r\n\t}\r\n\r\n\tpublic iFallOffFactor():number\r\n\t{\r\n\t\treturn this._pFallOffFactor;\r\n\t}\r\n\r\n\tpublic get fallOff():number\r\n\t{\r\n\t\treturn this._pFallOff;\r\n\t}\r\n\r\n\tpublic set fallOff(value:number)\r\n\t{\r\n\t\tthis._pFallOff = value;\r\n\r\n\t\tif (this._pFallOff < 0)\r\n\t\t\tthis._pFallOff = 0;\r\n\r\n\t\tif (this._pFallOff < this._pRadius)\r\n\t\t\tthis._pRadius = this._pFallOff;\r\n\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pSphereBounds.radius = this._pFallOff;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\t// todo: do not use lookAt on Light\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this._pParent.inverseSceneTransform);\r\n\t\tthis.lookAt(m.position);\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tvar box:Box = entity.getBox();\r\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\r\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\r\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\r\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\r\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\r\n\t\tvar zMin:number;\r\n\t\tvar zMax:number;\r\n\r\n\t\tvar z:number = m.rawData[14];\r\n\t\tzMin = z - d;\r\n\t\tzMax = z + d;\r\n\r\n\t\traw[5] = raw[0] = zMin/d;\r\n\t\traw[10] = zMax/(zMax - zMin);\r\n\t\traw[11] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\r\n\t\traw[14] = -zMin*raw[10];\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterPointLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterPointLight(this);\r\n\t}\r\n}\r\n\r\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\r\n\r\n/**\r\n * This class is used to create lightweight shapes using the ActionScript\r\n * drawing application program interface(API). The Shape class includes a\r\n * <code>graphics</code> property, which lets you access methods from the\r\n * Graphics class.\r\n *\r\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\r\n * includes other features not available to the Shape class. For example, a\r\n * Sprite object is a display object container, whereas a Shape object is not\r\n * (and cannot contain child display objects). For this reason, Shape objects\r\n * consume less memory than Sprite objects that contain the same graphics.\r\n * However, a Sprite object supports user input events, while a Shape object\r\n * does not.</p>\r\n */\r\nclass Shape extends DisplayObject\r\n{\r\n\tprivate _graphics:Graphics;\r\n\r\n\t/**\r\n\t * Specifies the Graphics object belonging to this Shape object, where vector\r\n\t * drawing commands can occur.\r\n\t */\r\n\tget graphics():Graphics\r\n\t{\r\n\t\treturn this._graphics;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Shape object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Shape = new Shape();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = name;\r\n\t\tclone._iMaskID = this._iMaskID;\r\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\t\tclone._graphics = this._graphics;\r\n\t\treturn clone;\r\n\t}\r\n}\r\n\r\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\n/**\r\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\r\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\r\n * the sky box is always as large as possible without being clipped.\r\n */\r\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Skybox]\";\r\n\r\n\tprivate _cubeMap:SingleCubeTexture;\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tprivate _animationSet:IAnimationSet;\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\tprivate _mipmap:boolean = false;\r\n\tprivate _smooth:boolean = true;\r\n\r\n\tprivate _animator:IAnimator;\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\t\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pIinvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t* The cube texture to use as the skybox.\r\n\t*/\r\n\tpublic get cubeMap():SingleCubeTexture\r\n\t{\r\n\t\treturn this._cubeMap;\r\n\t}\r\n\r\n\tpublic set cubeMap(value:SingleCubeTexture)\r\n\t{\r\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\r\n\t\tif (value && this._cubeMap)\r\n\t\t\tthis._pInvalidateRender();\r\n\r\n\t\tthis._cubeMap = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Skybox object.\r\n\t *\r\n\t * @param material\tThe material with which to render the Skybox.\r\n\t */\r\n\tconstructor(cubeMap:SingleCubeTexture = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\t\tthis._owners = new Array<IRenderableOwner>(this);\r\n\r\n\t\tthis.cubeMap = cubeMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Skybox.assetType;\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//skybox do not get collected in the standard entity list\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterSkybox(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterSkybox(this);\r\n\t}\r\n}\r\n\r\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\r\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\r\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\r\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\r\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\n\r\n/**\r\n * The TextField class is used to create display objects for text display and\r\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\r\n * perform low-level text rendering. However, in Flex, you typically use the\r\n * Label, Text, TextArea, and TextInput controls to process text. <ph\r\n * outputclass=\"flashonly\">You can give a text field an instance name in the\r\n * Property inspector and use the methods and properties of the TextField\r\n * class to manipulate it with ActionScript. TextField instance names are\r\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\r\n * the Actions panel.\r\n *\r\n * <p>To create a text field dynamically, use the <code>TextField()</code>\r\n * constructor.</p>\r\n *\r\n * <p>The methods of the TextField class let you set, select, and manipulate\r\n * text in a dynamic or input text field that you create during authoring or\r\n * at runtime. </p>\r\n *\r\n * <p>ActionScript provides several ways to format your text at runtime. The\r\n * TextFormat class lets you set character and paragraph formatting for\r\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\r\n * text fields by using the <code>TextField.styleSheet</code> property and the\r\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\r\n * formatting tags, or apply styles. You can assign HTML formatted text, which\r\n * optionally uses CSS styles, directly to a text field. HTML text that you\r\n * assign to a text field can contain embedded media(movie clips, SWF files,\r\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\r\n * media in the same way that a web browser wraps text around media embedded\r\n * in an HTML document. </p>\r\n *\r\n * <p>Flash Player supports a subset of HTML tags that you can use to format\r\n * text. See the list of supported HTML tags in the description of the\r\n * <code>htmlText</code> property.</p>\r\n * \r\n * @event change                    Dispatched after a control value is\r\n *                                  modified, unlike the\r\n *                                  <code>textInput</code> event, which is\r\n *                                  dispatched before the value is modified.\r\n *                                  Unlike the W3C DOM Event Model version of\r\n *                                  the <code>change</code> event, which\r\n *                                  dispatches the event only after the\r\n *                                  control loses focus, the ActionScript 3.0\r\n *                                  version of the <code>change</code> event\r\n *                                  is dispatched any time the control\r\n *                                  changes. For example, if a user types text\r\n *                                  into a text field, a <code>change</code>\r\n *                                  event is dispatched after every keystroke.\r\n * @event link                      Dispatched when a user clicks a hyperlink\r\n *                                  in an HTML-enabled text field, where the\r\n *                                  URL begins with \"event:\". The remainder of\r\n *                                  the URL after \"event:\" is placed in the\r\n *                                  text property of the LINK event.\r\n *\r\n *                                  <p><b>Note:</b> The default behavior,\r\n *                                  adding the text to the text field, occurs\r\n *                                  only when Flash Player generates the\r\n *                                  event, which in this case happens when a\r\n *                                  user attempts to input text. You cannot\r\n *                                  put text into a text field by sending it\r\n *                                  <code>textInput</code> events.</p>\r\n * @event scroll                    Dispatched by a TextField object\r\n *                                  <i>after</i> the user scrolls.\r\n * @event textInput                 Flash Player dispatches the\r\n *                                  <code>textInput</code> event when a user\r\n *                                  enters one or more characters of text.\r\n *                                  Various text input methods can generate\r\n *                                  this event, including standard keyboards,\r\n *                                  input method editors(IMEs), voice or\r\n *                                  speech recognition systems, and even the\r\n *                                  act of pasting plain text with no\r\n *                                  formatting or style information.\r\n * @event textInteractionModeChange Flash Player dispatches the\r\n *                                  <code>textInteractionModeChange</code>\r\n *                                  event when a user changes the interaction\r\n *                                  mode of a text field. for example on\r\n *                                  Android, one can toggle from NORMAL mode\r\n *                                  to SELECTION mode using context menu\r\n *                                  options\r\n */\r\nclass TextField extends Mesh\r\n{\r\n\tpublic static assetType:string = \"[asset TextField]\";\r\n\r\n\tprivate _bottomScrollV:number;\r\n\tprivate _caretIndex:number;\r\n\tprivate _length:number;\r\n\tprivate _maxScrollH:number;\r\n\tprivate _maxScrollV:number;\r\n\tprivate _numLines:number;\r\n\tprivate _selectionBeginIndex:number;\r\n\tprivate _selectionEndIndex:number;\r\n\tprivate _text:string = \"\";\r\n\tprivate _textHeight:number;\r\n\tprivate _textInteractionMode:TextInteractionMode;\r\n\tprivate _textWidth:number;\r\n\r\n\tprivate _charBoundaries:Rectangle;\r\n\tprivate _charIndexAtPoint:number;\r\n\tprivate _firstCharInParagraph:number;\r\n\tprivate _imageReference:DisplayObject\r\n\tprivate _lineIndexAtPoint:number;\r\n\tprivate _lineIndexOfChar:number;\r\n\tprivate _lineLength:number;\r\n\tprivate _lineMetrics:TextLineMetrics;\r\n\tprivate _lineOffset:number;\r\n\tprivate _lineText:string;\r\n\tprivate _paragraphLength:number;\r\n\tprivate _textFormat:TextFormat;\r\n\r\n\t/**\r\n\t * When set to <code>true</code> and the text field is not in focus, Flash\r\n\t * Player highlights the selection in the text field in gray. When set to\r\n\t * <code>false</code> and the text field is not in focus, Flash Player does\r\n\t * not highlight the selection in the text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic alwaysShowSelection:boolean\r\n\r\n\t/**\r\n\t * The type of anti-aliasing used for this text field. Use\r\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\r\n\t * control this setting only if the font is embedded(with the\r\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\r\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\r\n\t *\r\n\t * <p>To set values for this property, use the following string values:</p>\r\n\t */\r\n\tpublic antiAliasType:AntiAliasType;\r\n\r\n\t/**\r\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\r\n\t * for the <code>TextFieldAutoSize</code> constants:\r\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\r\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\r\n\t * and <code>TextFieldAutoSize.CENTER</code>.\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\r\n\t * (the default) no resizing occurs.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\r\n\t * the text is treated as left-justified text, meaning that the left margin\r\n\t * of the text field remains fixed and any resizing of a single line of the\r\n\t * text field is on the right margin. If the text includes a line break(for\r\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\r\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\r\n\t * to <code>true</code>, only the bottom of the text field is resized and the\r\n\t * right side remains fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\r\n\t * right-justified text, meaning that the right margin of the text field\r\n\t * remains fixed and any resizing of a single line of the text field is on\r\n\t * the left margin. If the text includes a line break(for example,\r\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\r\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\r\n\t * only the bottom of the text field is resized and the left side remains\r\n\t * fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\r\n\t * center-justified text, meaning that any resizing of a single line of the\r\n\t * text field is equally distributed to both the right and left margins. If\r\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\r\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\r\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\r\n\t * bottom of the text field is resized and the left and right sides remain\r\n\t * fixed.</p>\r\n\t * \r\n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\r\n\t *                       of flash.text.TextFieldAutoSize.\r\n\t */\r\n\tpublic autoSize:TextFieldAutoSize;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextField.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a background fill. If\r\n\t * <code>true</code>, the text field has a background fill. If\r\n\t * <code>false</code>, the text field has no background fill. Use the\r\n\t * <code>backgroundColor</code> property to set the background color of a\r\n\t * text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic background:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field background. The default value is\r\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\r\n\t * if there currently is no background, but the color is visible only if the\r\n\t * text field has the <code>background</code> property set to\r\n\t * <code>true</code>.\r\n\t */\r\n\tpublic backgroundColor:number /*int*/;\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a border. If <code>true</code>, the\r\n\t * text field has a border. If <code>false</code>, the text field has no\r\n\t * border. Use the <code>borderColor</code> property to set the border color.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic border:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field border. The default value is\r\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\r\n\t * if there currently is no border, but the color is visible only if the text\r\n\t * field has the <code>border</code> property set to <code>true</code>.\r\n\t */\r\n\tpublic borderColor:number /*int*/;\r\n\r\n\t/**\r\n\t * An integer(1-based index) that indicates the bottommost line that is\r\n\t * currently visible in the specified text field. Think of the text field as\r\n\t * a window onto a block of text. The <code>scrollV</code> property is the\r\n\t * 1-based index of the topmost visible line in the window.\r\n\t *\r\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\r\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\r\n\t */\r\n\tpublic get bottomScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._bottomScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * The index of the insertion point(caret) position. If no insertion point\r\n\t * is displayed, the value is the position the insertion point would be if\r\n\t * you restored focus to the field(typically where the insertion point last\r\n\t * was, or 0 if the field has not had focus).\r\n\t *\r\n\t * <p>Selection span indexes are zero-based(for example, the first position\r\n\t * is 0, the second position is 1, and so on).</p>\r\n\t */\r\n\tpublic get caretIndex():number /*int*/\r\n\t{\r\n\t\treturn this._caretIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that specifies whether extra white space(spaces, line\r\n\t * breaks, and so on) in a text field with HTML text is removed. The default\r\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\r\n\t * affects text set with the <code>htmlText</code> property, not the\r\n\t * <code>text</code> property. If you set text with the <code>text</code>\r\n\t * property, <code>condenseWhite</code> is ignored.\r\n\t *\r\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\r\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\r\n\t * breaks in the text field.</p>\r\n\t *\r\n\t * <p>Set the <code>condenseWhite</code> property before setting the\r\n\t * <code>htmlText</code> property.</p>\r\n\t */\r\n\tpublic condenseWhite:boolean;\r\n\r\n\t/**\r\n\t * Specifies the format applied to newly inserted text, such as text entered\r\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\r\n\t * method.\r\n\t *\r\n\t * <p><b>Note:</b> When selecting characters to be replaced with\r\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\r\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\r\n\t * selected up to and including the last character. Here is an example:</p>\r\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\r\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\r\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\r\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\r\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\r\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\r\n\t * </pre>\r\n\t *\r\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\r\n\t * returned TextFormat object has all of its properties defined. No property\r\n\t * is <code>null</code>.</p>\r\n\t *\r\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic defaultTextFormat:TextFormat;\r\n\r\n\t/**\r\n\t * Specifies whether the text field is a password text field. If the value of\r\n\t * this property is <code>true</code>, the text field is treated as a\r\n\t * password text field and hides the input characters using asterisks instead\r\n\t * of the actual characters. If <code>false</code>, the text field is not\r\n\t * treated as a password text field. When password mode is enabled, the Cut\r\n\t * and Copy commands and their corresponding keyboard shortcuts will not\r\n\t * function. This security mechanism prevents an unscrupulous user from using\r\n\t * the shortcuts to discover a password on an unattended computer.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic displayAsPassword:boolean;\r\n\r\n\t/**\r\n\t * Specifies whether to render by using embedded font outlines. If\r\n\t * <code>false</code>, Flash Player renders the text field by using device\r\n\t * fonts.\r\n\t *\r\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\r\n\t * for a text field, you must specify a font for that text by using the\r\n\t * <code>font</code> property of a TextFormat object applied to the text\r\n\t * field. If the specified font is not embedded in the SWF file, the text is\r\n\t * not displayed.</p>\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic embedFonts:boolean;\r\n\r\n\t/**\r\n\t * The type of grid fitting used for this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The type of grid fitting used determines whether Flash Player forces\r\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\r\n\t * or not at all.</p>\r\n\t *\r\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\r\n\t * following string values:</p>\r\n\t * \r\n\t * @default pixel\r\n\t */\r\n\tpublic gridFitType:GridFitType;\r\n\r\n\t/**\r\n\t * Contains the HTML representation of the text field contents.\r\n\t *\r\n\t * <p>Flash Player supports the following HTML tags:</p>\r\n\t *\r\n\t * <p>Flash Player and AIR also support explicit character codes, such as\r\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\r\n\t */\r\n\tpublic htmlText:string;\r\n\r\n\t/**\r\n\t * The number of characters in a text field. A character such as tab\r\n\t * (<code>\\t</code>) counts as one character.\r\n\t */\r\n\tpublic get length():number /*int*/\r\n\t{\r\n\t\treturn this._length;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum number of characters that the text field can contain, as\r\n\t * entered by a user. A script can insert more text than\r\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\r\n\t * only how much text a user can enter. If the value of this property is\r\n\t * <code>0</code>, a user can enter an unlimited amount of text.\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic maxChars:number /*int*/;\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollH</code>.\r\n\t */\r\n\tpublic maxScrollH():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollH;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollV</code>.\r\n\t */\r\n\tpublic maxScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\r\n\t * multiline text fields when the user clicks a text field and rolls the\r\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\r\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\r\n\t * implement your own text field scrolling.\r\n\t */\r\n\tpublic mouseWheelEnabled:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether field is a multiline text field. If the value is\r\n\t * <code>true</code>, the text field is multiline; if the value is\r\n\t * <code>false</code>, the text field is a single-line text field. In a field\r\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\r\n\t * determines whether the <code>Enter</code> key creates a new line(a value\r\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\r\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\r\n\t * value of <code>false</code>, newlines are stripped out of the text.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic multiline:boolean;\r\n\r\n\t/**\r\n\t * Defines the number of text lines in a multiline text field. If\r\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\r\n\t * lines increases when text wraps.\r\n\t */\r\n\tpublic get numLines():number /*int*/\r\n\t{\r\n\t\treturn this._numLines;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the set of characters that a user can enter into the text field.\r\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\r\n\t * you can enter any character. If the value of the <code>restrict</code>\r\n\t * property is an empty string, you cannot enter any character. If the value\r\n\t * of the <code>restrict</code> property is a string of characters, you can\r\n\t * enter only characters in the string into the text field. The string is\r\n\t * scanned from left to right. You can specify a range by using the hyphen\r\n\t * (-) character. Only user interaction is restricted; a script can put any\r\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\r\n\t * not synchronize with the Embed font options in the Property inspector.\r\n\t *\r\n\t * <p>If the string begins with a caret(^) character, all characters are\r\n\t * initially accepted and succeeding characters in the string are excluded\r\n\t * from the set of accepted characters. If the string does not begin with a\r\n\t * caret(^) character, no characters are initially accepted and succeeding\r\n\t * characters in the string are included in the set of accepted\r\n\t * characters.</p>\r\n\t *\r\n\t * <p>The following example allows only uppercase characters, spaces, and\r\n\t * numbers to be entered into a text field:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\r\n\t *\r\n\t * <p>The following example includes all characters, but excludes lowercase\r\n\t * letters:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\r\n\t *\r\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\r\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\r\n\t * character in the string, so when specified in ActionScript, a double\r\n\t * backslash must be used. For example, the following code includes only the\r\n\t * dash(-) and caret(^):</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\r\n\t *\r\n\t * <p>The ^ can be used anywhere in the string to toggle between including\r\n\t * characters and excluding characters. The following code includes only\r\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\r\n\t *\r\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\r\n\t * <code>restrict</code> strings. The following code includes only the\r\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\r\n\t * \r\n\t * @default null\r\n\t */\r\n\tpublic restrict:string;\r\n\r\n\t/**\r\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\r\n\t * property is 0, the text is not horizontally scrolled. This property value\r\n\t * is an integer that represents the horizontal position in pixels.\r\n\t *\r\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\r\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\r\n\t * because most fonts you typically use are proportionally spaced; that is,\r\n\t * the characters can have different widths. Flash Player performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\r\n\t * height of the line adjusts to fit the largest font in use.</p>\r\n\t *\r\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\r\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\r\n\t */\r\n\tpublic scrollH:number;\r\n\r\n\t/**\r\n\t * The vertical position of text in a text field. The <code>scrollV</code>\r\n\t * property is useful for directing users to a specific paragraph in a long\r\n\t * passage, or creating scrolling text fields.\r\n\t *\r\n\t * <p>The units of vertical scrolling are lines, whereas the units of\r\n\t * horizontal scrolling are pixels. If the first line displayed is the first\r\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\r\n\t * is measured in pixels because most fonts are proportionally spaced; that\r\n\t * is, the characters can have different widths. Flash performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if there are multiple fonts on a\r\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\r\n\t */\r\n\tpublic scrollV:number;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field is selectable. The\r\n\t * value <code>true</code> indicates that the text is selectable. The\r\n\t * <code>selectable</code> property controls whether a text field is\r\n\t * selectable, not whether a text field is editable. A dynamic text field can\r\n\t * be selectable even if it is not editable. If a dynamic text field is not\r\n\t * selectable, the user cannot select its text.\r\n\t *\r\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\r\n\t * the text field does not respond to selection commands from the mouse or\r\n\t * keyboard, and the text cannot be copied with the Copy command. If\r\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\r\n\t * field can be selected with the mouse or keyboard, and the text can be\r\n\t * copied with the Copy command. You can select text this way even if the\r\n\t * text field is a dynamic text field instead of an input text field. </p>\r\n\t * \r\n\t * @default true\r\n\t */\r\n\tpublic selectable:boolean;\r\n\r\n\t/**\r\n\t * The zero-based character index value of the first character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionBeginIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionBeginIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The zero-based character index value of the last character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionEndIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionEndIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The sharpness of the glyph edges in this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\r\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\r\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\r\n\t * property to the nearest value in the range(either -400 or 400).\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic sharpness:number;\r\n\r\n\t/**\r\n\t * Attaches a style sheet to the text field. For information on creating\r\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\r\n\t * Developer's Guide</i>.\r\n\t *\r\n\t * <p>You can change the style sheet associated with a text field at any\r\n\t * time. If you change the style sheet in use, the text field is redrawn with\r\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\r\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\r\n\t * use is removed, the text field is redrawn without a style sheet. </p>\r\n\t *\r\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\r\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\r\n\t * incorporate the formatting previously applied by the style sheet. To\r\n\t * preserve the original <code>TextField.htmlText</code> contents without the\r\n\t * formatting, save the value in a variable before removing the style\r\n\t * sheet.</p>\r\n\t */\r\n\tpublic styleSheet:StyleSheet;\r\n\r\n\t/**\r\n\t * A string that is the current text in the text field. Lines are separated\r\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\r\n\t * property contains unformatted text in the text field, without HTML tags.\r\n\t *\r\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\r\n\t * property.</p>\r\n\t */\r\n\tpublic get text():string\r\n\t{\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\tpublic set text(value:string)\r\n\t{\r\n\t\tif (this._text == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._text = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\tpublic get textFormat():TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\tpublic set textFormat(value:TextFormat)\r\n\t{\r\n\t\tif (this._textFormat == value)\r\n\t\t\treturn;\r\n\t\tthis._textFormat = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\r\n\t/**\r\n\t * The color of the text in a text field, in hexadecimal format. The\r\n\t * hexadecimal color system uses six digits to represent color values. Each\r\n\t * digit has 16 possible values or characters. The characters range from 0-9\r\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\r\n\t * <code>0xFFFFFF</code>.\r\n\t * \r\n\t * @default 0(0x000000)\r\n\t */\r\n\tpublic textColor:number /*int*/;\r\n\r\n\r\n\t/**\r\n\t * The interaction mode property, Default value is\r\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\r\n\t * that the text can be scrolled but not selected. One can switch to the\r\n\t * selectable mode through the in-built context menu on the text field. On\r\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\r\n\t * selection mode.\r\n\t */\r\n\tpublic get textInteractionMode():TextInteractionMode\r\n\t{\r\n\t\treturn this._textInteractionMode;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textWidth():number\r\n\t{\r\n\t\treturn this._textWidth;\r\n\t}\r\n\tpublic set textWidth(value:number)\r\n\t{\r\n\t\tthis._textWidth = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textHeight():number\r\n\t{\r\n\t\treturn this._textHeight;\r\n\t}\r\n\tpublic set textHeight(value:number)\r\n\t{\r\n\t\tthis._textHeight = value;\r\n\t}\r\n\t/**\r\n\t * The thickness of the glyph edges in this text field. This property applies\r\n\t * only when <code>AntiAliasType</code> is set to\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\r\n\t * you attempt to set <code>thickness</code> to a value outside that range,\r\n\t * the property is set to the nearest value in the range(either -200 or\r\n\t * 200).</p>\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic thickness:number;\r\n\r\n\t/**\r\n\t * The type of the text field. Either one of the following TextFieldType\r\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\r\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\r\n\t * which specifies an input text field, which a user can edit.\r\n\t * \r\n\t * @default dynamic\r\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\r\n\t *                       flash.text.TextFieldType.\r\n\t */\r\n\tpublic type:TextFieldType;\r\n\r\n\t/**\r\n\t * Specifies whether to copy and paste the text formatting along with the\r\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\r\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\r\n\t * between text fields. Both the origin and destination text fields for the\r\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\r\n\t * to <code>true</code>. The default value is <code>false</code>.\r\n\t */\r\n\tpublic useRichTextClipboard:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field has word wrap. If\r\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\r\n\t * has word wrap; if the value is <code>false</code>, the text field does not\r\n\t * have word wrap. The default value is <code>false</code>.\r\n\t */\r\n\tpublic wordWrap:boolean;\r\n\r\n\t/**\r\n\t * Creates a new TextField instance. After you create the TextField instance,\r\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\r\n\t * the parent DisplayObjectContainer object to add the TextField instance to\r\n\t * the display list.\r\n\t *\r\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(new Geometry());\r\n\t\tthis.type = TextFieldType.STATIC;\r\n\t}\r\n\r\n\t/**\r\n\t * Reconstructs the Geometry for this Text-field.\r\n\t */\r\n\tpublic reConstruct() {\r\n\r\n\r\n\t\tif(this._textFormat==null)\r\n\t\t\treturn;\r\n\r\n\r\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\r\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\r\n\r\n\t\tif(this._text==\"\")\r\n\t\t\treturn;\r\n\r\n\t\tvar vertices:Array<number> = new Array<number>();\r\n\r\n\r\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\r\n\t\tvar y_offset:number=0;\r\n\t\tvar prev_char:TesselatedFontChar = null;\r\n\t\tvar j:number = 0;\r\n\t\tvar k:number = 0;\r\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\r\");\r\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\r\n\t\t\tvar line_width:number=0;\r\n\t\t\tvar font_chars:Array<TesselatedFontChar> = [];\r\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\r\n\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(textlines[tl].charCodeAt(i).toString());\r\n\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\r\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tline_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\tline_width+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t\t\tline_width+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t}\r\n\t\t\t\tfont_chars.push(this_char);\r\n\t\t\t}\r\n\t\t\tvar x_offset:number=0;\r\n\t\t\tif(this._textFormat.align==\"center\"){\r\n\t\t\t\tx_offset=(this._textWidth-line_width)/2;\r\n\t\t\t}\r\n\t\t\telse if(this._textFormat.align==\"right\"){\r\n\t\t\t\tx_offset=(this._textWidth-line_width);\r\n\t\t\t}\r\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\r\n\t\t\t//console.log(\"this._width=\"+this._width);\r\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\r\n\t\t\t\tvar this_char:TesselatedFontChar = font_chars[i];\r\n\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\r\n\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\r\n\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\r\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\r\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\r\n\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\r\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\r\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\r\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\r\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\r\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ty_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t}\r\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\r\n\t\tattributesView.set(vertices);\r\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\r\n\t\tattributesView.dispose();\r\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\r\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\r\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\r\n\t\tthis.subMeshes[0].material=this._textFormat.material;\r\n\t}\r\n\t/**\r\n\t * Appends the string specified by the <code>newText</code> parameter to the\r\n\t * end of the text of the text field. This method is more efficient than an\r\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\r\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\r\n\t * text field that contains a significant amount of content.\r\n\t *\r\n\t * @param newText The string to append to the existing text.\r\n\t */\r\n\tpublic appendText(newText:string) {\r\n\t\tthis._text+=newText;\r\n\t}\r\n\r\n\t/**\r\n\t * *tells the Textfield that a paragraph is defined completly.\r\n\t * e.g. the textfield will start a new line for future added text.\r\n\t */\r\n\tpublic closeParagraph()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that is the bounding box of the character.\r\n\t * \r\n\t * @param charIndex The zero-based index value for the character(for\r\n\t *                  example, the first position is 0, the second position is\r\n\t *                  1, and so on).\r\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\r\n\t *         maximum values defining the bounding box of the character.\r\n\t */\r\n\tpublic getCharBoundaries(charIndex:number):Rectangle\r\n\t{\r\n\t\treturn this._charBoundaries;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the character at the point specified\r\n\t * by the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the character.\r\n\t * @param y The <i>y</i> coordinate of the character.\r\n\t * @return The zero-based index value of the character(for example, the\r\n\t *         first position is 0, the second position is 1, and so on). Returns\r\n\t *         -1 if the point is not over any character.\r\n\t */\r\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._charIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the index of the first character in the\r\n\t * same paragraph.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the first character in the same\r\n\t *         paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._firstCharInParagraph;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\r\n\t * image or SWF file that has been added to an HTML-formatted text field by\r\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\r\n\t * following format:\r\n\t *\r\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\r\n\t * 'instanceName' ></code></pre></p>\r\n\t * \r\n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\r\n\t *           of the <code><img></code> tag).\r\n\t * @return The display object corresponding to the image or SWF file with the\r\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\r\n\t *         of the text field. For media loaded from an external source, this\r\n\t *         object is a Loader object, and, once loaded, the media object is a\r\n\t *         child of that Loader object. For media embedded in the SWF file,\r\n\t *         it is the loaded object. If no <code><img></code> tag with the\r\n\t *         matching <code>id</code> exists, the method returns\r\n\t *         <code>null</code>.\r\n\t */\r\n\tpublic getImageReference(id:string):DisplayObject\r\n\t{\r\n\t\treturn this._imageReference;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line at the point specified by\r\n\t * the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the line.\r\n\t * @param y The <i>y</i> coordinate of the line.\r\n\t * @return The zero-based index value of the line(for example, the first\r\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\r\n\t *         point is not over any line.\r\n\t */\r\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line containing the character\r\n\t * specified by the <code>charIndex</code> parameter.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the line.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexOfChar;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of characters in a specific text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want the length.\r\n\t * @return The number of characters in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns metrics information about a given text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want metrics information.\r\n\t * @return A TextLineMetrics object.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\r\n\t{\r\n\t\treturn this._lineMetrics;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the character index of the first character in the line that the\r\n\t * <code>lineIndex</code> parameter specifies.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The zero-based index value of the first character in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the text of the line specified by the <code>lineIndex</code>\r\n\t * parameter.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The text string contained in the specified line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineText(lineIndex:number /*int*/):string\r\n\t{\r\n\t\treturn this._lineText;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the length of the paragraph containing\r\n\t * the given character. The length is relative to the first character in the\r\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\r\n\t * the character index passed in.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return Returns the number of characters in the paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._paragraphLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TextFormat object that contains formatting information for the\r\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\r\n\t * parameters specify. Only properties that are common to the entire text\r\n\t * specified are set in the resulting TextFormat object. Any property that is\r\n\t * <i>mixed</i>, meaning that it has different values at different points in\r\n\t * the text, has a value of <code>null</code>.\r\n\t *\r\n\t * <p>If you do not specify values for these parameters, this method is\r\n\t * applied to all the text in the text field. </p>\r\n\t *\r\n\t * <p>The following table describes three possible usages:</p>\r\n\t * \r\n\t * @return The TextFormat object that represents the formatting properties\r\n\t *         for the specified text.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the current selection with the contents of the <code>value</code>\r\n\t * parameter. The text is inserted at the position of the current selection,\r\n\t * using the current default character format and default paragraph format.\r\n\t * The text is not treated as HTML.\r\n\t *\r\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\r\n\t * delete text without disrupting the character and paragraph formatting of\r\n\t * the rest of the text.</p>\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param value The string to replace the currently selected text.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceSelectedText(value:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the range of characters that the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters specify with the contents of the\r\n\t * <code>newText</code> parameter. As designed, the text from\r\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param beginIndex The zero-based index value for the start position of the\r\n\t *                   replacement range.\r\n\t * @param endIndex   The zero-based index position of the first character\r\n\t *                   after the desired text span.\r\n\t * @param newText    The text to use to replace the specified range of\r\n\t *                   characters.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets as selected the text designated by the index values of the first and\r\n\t * last characters, which are specified with the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters. If the two parameter values are the\r\n\t * same, this method sets the insertion point, as if you set the\r\n\t * <code>caretIndex</code> property.\r\n\t * \r\n\t * @param beginIndex The zero-based index value of the first character in the\r\n\t *                   selection(for example, the first character is 0, the\r\n\t *                   second character is 1, and so on).\r\n\t * @param endIndex   The zero-based index value of the last character in the\r\n\t *                   selection.\r\n\t */\r\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the text formatting that the <code>format</code> parameter\r\n\t * specifies to the specified text in a text field. The value of\r\n\t * <code>format</code> must be a TextFormat object that specifies the desired\r\n\t * text formatting changes. Only the non-null properties of\r\n\t * <code>format</code> are applied to the text field. Any property of\r\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\r\n\t * default, all of the properties of a newly created TextFormat object are\r\n\t * set to <code>null</code>.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t *\r\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\r\n\t * applied to a range of characters or to the entire body of text in a text\r\n\t * field. To apply the properties of format to all text in the text field, do\r\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\r\n\t * To apply the properties of the format to a range of text, specify values\r\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\r\n\t * You can use the <code>length</code> property to determine the index\r\n\t * values.</p>\r\n\t *\r\n\t * <p>The two types of formatting information in a TextFormat object are\r\n\t * character level formatting and paragraph level formatting. Each character\r\n\t * in a text field can have its own character formatting settings, such as\r\n\t * font name, font size, bold, and italic.</p>\r\n\t *\r\n\t * <p>For paragraphs, the first character of the paragraph is examined for\r\n\t * the paragraph formatting settings for the entire paragraph. Examples of\r\n\t * paragraph formatting settings are left margin, right margin, and\r\n\t * indentation.</p>\r\n\t *\r\n\t * <p>Any text inserted manually by the user, or replaced by the\r\n\t * <code>replaceSelectedText()</code> method, receives the default text field\r\n\t * formatting for new text, and not the formatting specified for the text\r\n\t * insertion point. To set the default formatting for new text, use\r\n\t * <code>defaultTextFormat</code>.</p>\r\n\t * \r\n\t * @param format A TextFormat object that contains character and paragraph\r\n\t *               formatting information.\r\n\t * @throws Error      This method cannot be used on a text field with a style\r\n\t *                    sheet.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if an embedded font is available with the specified\r\n\t * <code>fontName</code> and <code>fontStyle</code> where\r\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\r\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\r\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\r\n\t * embedded fonts are only used with the flash.text.engine classes. The two\r\n\t * types are distinguished by the <code>fontType</code> property of the\r\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\r\n\t * function.\r\n\t *\r\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\r\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\r\n\t * available at run time with the specified name and style is of type\r\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\r\n\t * embedded font were available with the specified name and style.</p>\r\n\t *\r\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\r\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\r\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\r\n\t * \r\n\t * @param fontName  The name of the embedded font to check.\r\n\t * @param fontStyle Specifies the font style to check. Use\r\n\t *                  <code>flash.text.FontStyle</code>\r\n\t * @return <code>true</code> if a compatible embedded font is available,\r\n\t *         otherwise <code>false</code>.\r\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\r\n\t *                       of <code>flash.text.FontStyle</code>.\r\n\t */\r\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n    public clone() : DisplayObject\r\n    {\r\n        var clone = new TextField();\r\n        this._iCopyToTextField(clone);\r\n        return clone;\r\n    }\r\n\r\n    public _iCopyToTextField(clone:TextField):void\r\n    {\r\n\t\tclone.geometry = new Geometry();\r\n\t\t//clone.material = this._material;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone.partition = this.partition;\r\n\t\tclone.boundsType = this.boundsType;\r\n\r\n\r\n\t\tclone.name = this.name;\r\n\t\tclone.castsShadows = this.castsShadows;\r\n\t\tclone.shareAnimationGeometry = this.shareAnimationGeometry;\r\n\t\tclone.mouseEnabled = this.mouseEnabled;\r\n\t\tclone.mouseChildren = this.mouseChildren;\r\n\t\t//this is of course no proper cloning\r\n\t\t//maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\r\n\t\tclone.extra = this.extra;\r\n\t\tclone._iMaskID = this._iMaskID;\r\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n\t\t//var len:number = this._subMeshes.length;\r\n\t\t//for (var i:number = 0; i < len; ++i)\r\n\t\t//\tclone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n\r\n\t\tvar len = this.numChildren;\r\n\t\tvar obj:any;\r\n\t\tvar i;\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\tobj = this.getChildAt(i).clone();\r\n\t\t\tclone.addChild(<DisplayObjectContainer> obj);\r\n\t\t}\r\n\r\n\t\t//if (this._animator)\r\n\t\t//\tclone.animator = this._animator.clone();\r\n\t\tclone.textWidth=this.textWidth;\r\n\t\tclone.textHeight=this.textHeight;\r\n       \tclone.textFormat = this._textFormat;\r\n        //clone.textColor = clone.textColor;\r\n       \tclone.text = this._text;\r\n    }\r\n}\r\n\r\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass CastError extends Error\r\n{\r\n\tconstructor(message:string)\r\n\t{\r\n\t\tsuper(message);\r\n\t}\r\n}\r\n\r\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\n/**\r\n * @class away.events.CameraEvent\r\n */\r\nclass CameraEvent extends Event\r\n{\r\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\r\n\r\n\tprivate _camera:Camera;\r\n\r\n\tconstructor(type:string, camera:Camera)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._camera = camera;\r\n\t}\r\n\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._camera;\r\n\t}\r\n}\r\n\r\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass DisplayObjectEvent extends Event\r\n{\r\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\r\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\r\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\r\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\r\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\r\n\tpublic static SKEW_CHANGED:string = \"skewChanged\";\r\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\r\n    public static GLOBAL_COLOR_TRANSFORM_CHANGED:string = \"globalColorTransformChanged\";\r\n\r\n\tpublic object:DisplayObject;\r\n\r\n\tconstructor(type:string, object:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis.object = object;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n* Dispatched to notify changes in a geometry object's state.\r\n*\r\n* @class away.events.GeometryEvent\r\n* @see away3d.core.base.Geometry\r\n*/\r\nclass GeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\r\n\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\r\n\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\r\n\t */\r\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._subGeometry = subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\r\n\t */\r\n\tpublic get subGeometry():SubGeometryBase\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\r\n\t}\r\n}\r\n\r\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass LightEvent extends Event\r\n{\r\n\r\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new LightEvent(this.type);\r\n\t}\r\n}\r\n\r\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass MaterialEvent extends Event\r\n{\r\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\r\n * TODO: we don't have screenZ data, tho this should be easy to implement\r\n */\r\nclass MouseEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:MouseEvent;\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOver3d event object.\r\n\t */\r\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOut3d event object.\r\n\t */\r\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseUp3d event object.\r\n\t */\r\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseDown3d event object.\r\n\t */\r\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseMove3d event object.\r\n\t */\r\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOver3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOut3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a click3d event object.\r\n\t */\r\n\tpublic static CLICK:string = \"click3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a doubleClick3d event object.\r\n\t */\r\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseWheel3d event object.\r\n\t */\r\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\r\n\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\r\n\t */\r\n\tpublic delta:number;\r\n\r\n\t/**\r\n\t * Create a new MouseEvent object.\r\n\t * @param type The type of the MouseEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\tresult.delta = this.delta;\r\n\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\r\n\t\tresult._iParentEvent = this;\r\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.RenderableOwnerEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass RenderableOwnerEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a Renderable owners's render object owner has been updated.\r\n\t */\r\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\r\n\r\n\tprivate _renderOwner:IRenderOwner;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param dataType An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, renderOwner:IRenderOwner)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._renderOwner = renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * The renderobject owner of the renderable owner.\r\n\t */\r\n\tpublic get renderOwner():IRenderOwner\r\n\t{\r\n\t\treturn this._renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\r\n\t}\r\n}\r\n\r\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass RendererEvent extends Event\r\n{\r\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\r\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ResizeEvent extends Event\r\n{\r\n\tpublic static RESIZE:string = \"resize\";\r\n\r\n\tprivate _oldHeight:number;\r\n\tprivate _oldWidth:number;\r\n\r\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._oldHeight = oldHeight;\r\n\t\tthis._oldWidth = oldWidth;\r\n\t}\r\n\r\n\tpublic get oldHeight():number\r\n\t{\r\n\t\treturn this._oldHeight;\r\n\t}\r\n\r\n\tpublic get oldWidth():number\r\n\t{\r\n\t\treturn this._oldWidth;\r\n\t}\r\n}\r\n\r\nexport = ResizeEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass SceneEvent extends Event\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\tconstructor(type:string, displayObject:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n}\r\n\r\nexport = SceneEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.SubGeometryEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass SubGeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been updated.\r\n\t */\r\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been disposed.\r\n\t */\r\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\r\n\t\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been updated.\r\n\t */\r\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\r\n\t */\r\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\r\n\r\n\t\r\n\tprivate _attributesView:AttributesView;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param attributesView An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, attributesView:AttributesView)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._attributesView = attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * The attributes view of the vertex data.\r\n\t */\r\n\tpublic get attributesView():AttributesView\r\n\t{\r\n\t\treturn this._attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\r\n\t}\r\n}\r\n\r\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nclass TouchEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:TouchEvent;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\r\n\t\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\t\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\t\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\t\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\t\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\t\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\t\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\t\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\t\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\t\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\t\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\r\n\tpublic touchPointID:number;\r\n\t\r\n\t/**\r\n\t * Create a new TouchEvent object.\r\n\t * @param type The type of the TouchEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\t\t\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\t\t\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\t\t\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\t\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\t\t\r\n\t\tresult._iParentEvent = this;\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\t\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass DefaultMaterialManager\r\n{\r\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\r\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\r\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\r\n\tprivate static _defaultTextureMaterial:BasicMaterial;\r\n\tprivate static _defaultColorMaterial:BasicMaterial;\r\n\tprivate static _defaultTexture:Single2DTexture;\r\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\r\n\r\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\r\n\t\t}\r\n\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\r\n\t\t}\r\n\r\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\r\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\r\n\t}\r\n\r\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\r\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\r\n\t\t}\r\n\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTexture;\r\n\t}\r\n\r\n\tprivate static createDefaultTexture()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\r\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\r\n\t}\r\n\r\n\tprivate static createDefaultCubeTexture()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\r\n\r\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\r\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\r\n\t}\r\n\r\n\tprivate static createCheckeredBitmapImageCube()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\r\n\r\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\r\n\t}\r\n\r\n\tprivate static createCheckeredBitmapImage2D()\r\n\t{\r\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\r\n\r\n\t\t//create chekerboard\r\n\t\tvar i:number, j:number;\r\n\t\tfor (i = 0; i < 8; i++) {\r\n\t\t\tfor (j = 0; j < 8; j++) {\r\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\r\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\r\n\t}\r\n\r\n\tprivate static createDefaultTextureMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultCubeTextureMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultColorMaterial()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\r\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\r\n\t}\r\n}\r\n\r\nexport = DefaultMaterialManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\r\n\r\n/**\r\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\r\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\r\n */\r\nclass MouseManager\r\n{\r\n\tprivate static _instance:MouseManager;\r\n\r\n\tprivate _viewLookup:Array<View> = new Array<View>();\r\n\r\n\tpublic _iActiveDiv:HTMLDivElement;\r\n\tpublic _iUpdateDirty:boolean;\r\n\tpublic _iCollidingObject:PickingCollisionVO;\r\n\t\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\r\n\r\n\tprivate _mouseMoveEvent:MouseEvent;\r\n\r\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\r\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\r\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\r\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\r\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\r\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\r\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\r\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\r\n\r\n\tprivate onClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\r\n\r\n\t/**\r\n\t * Creates a new <code>MouseManager</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\r\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\r\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\r\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\r\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\r\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\r\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\r\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\r\n\t}\r\n\r\n\tpublic static getInstance():MouseManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new MouseManager());\r\n\t}\r\n\r\n\tpublic fireMouseEvents(forceMouseMove:boolean)\r\n\t{\r\n\t\t // If colliding object has changed, queue over/out events.\r\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\r\n\r\n\t\t\tif (this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\r\n\t\t}\r\n\r\n\t\t // Fire mouse move events here if forceMouseMove is on.\r\n\t\tif (forceMouseMove && this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\r\n\r\n\t\tvar event:AwayMouseEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\r\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\r\n\t\t\twhile (dispatcher) {\r\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\r\n\t\t\t\t\tdispatcher.dispatchEvent(event);\r\n\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._previousCollidingObject = this._iCollidingObject;\r\n\r\n\t\tthis._iUpdateDirty = false;\r\n\t}\r\n\r\n//\t\tpublic addViewLayer(view:View)\r\n//\t\t{\r\n//\t\t\tvar stg:Stage = view.stage;\r\n//\r\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\r\n//\t\t\tif (!view.stageGL.mouse3DManager)\r\n//\t\t\t\tview.stageGL.mouse3DManager = this;\r\n//\r\n//\t\t\tif (!hasKey(view))\r\n//\t\t\t\t_view3Ds[view] = 0;\r\n//\r\n//\t\t\t_childDepth = 0;\r\n//\t\t\ttraverseDisplayObjects(stg);\r\n//\t\t\t_viewCount = _childDepth;\r\n//\t\t}\r\n\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.push(view);\r\n\t}\r\n\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tif (sourceEvent) {\r\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\t\tevent.altKey = sourceEvent.altKey;\r\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\t\tevent.screenX = sourceEvent.clientX;\r\n\t\t\tevent.screenY = sourceEvent.clientY;\r\n\t\t}\r\n\r\n\t\tif (collider == null)\r\n\t\t\tcollider = this._iCollidingObject;\r\n\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Listeners.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate onMouseMove(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\r\n\t}\r\n\r\n\tprivate onMouseOut(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = null;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseOut, event);\r\n\t}\r\n\r\n\tprivate onMouseOver(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseOver, event);\r\n\t}\r\n\r\n\tprivate onClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseClick, event);\r\n\t}\r\n\r\n\tprivate onDoubleClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\r\n\t}\r\n\r\n\tprivate onMouseDown(event)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDown, event);\r\n\t}\r\n\r\n\tprivate onMouseUp(event)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseUp , event);\r\n\t}\r\n\r\n\tprivate onMouseWheel(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\r\n\t}\r\n\r\n\r\n\tprivate updateColliders(event)\r\n\t{\r\n\t\tif (this._iUpdateDirty)\r\n\t\t\treturn;\r\n\r\n\t\tvar view:View;\r\n\t\tvar bounds:ClientRect;\r\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\r\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\r\n\t\tvar len:number = this._viewLookup.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tview = this._viewLookup[i];\r\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\r\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\r\n\t\t\t\tview._pMouseX = null;\r\n\t\t\t\tview._pMouseY = null;\r\n\t\t\t} else {\r\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\r\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\r\n\t\t\t\tview.updateCollider();\r\n\r\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._iUpdateDirty = true;\r\n\t}\r\n}\r\n\r\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\r\n\r\nclass TouchManager\r\n{\r\n\tprivate static _instance:TouchManager;\r\n\r\n\tprivate _updateDirty:boolean = true;\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _numTouchPoints:number;\r\n\tprivate _touchPoint:TouchPoint;\r\n\tprivate _iCollidingObject:PickingCollisionVO;\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tpublic static _iCollidingObjectFromTouchId:Object;\r\n\tpublic static _previousCollidingObjectFromTouchId:Object;\r\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\r\n\t\r\n\tprivate _touchPoints:Array<TouchPoint>;\r\n\tprivate _touchPointFromId:Object;\r\n\t\r\n\tprivate _touchMoveEvent:TouchEvent;\r\n\r\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\r\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\r\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\r\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\r\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\r\n\r\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\r\n\t\r\n\tconstructor()\r\n\t{\r\n\t\tthis._touchPoints = new Array<TouchPoint>();\r\n\t\tthis._touchPointFromId = new Object();\r\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\r\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\r\n\r\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\r\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\r\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\r\n\t}\r\n\r\n\tpublic static getInstance():TouchManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new TouchManager());\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Interface.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tpublic updateCollider(forceTouchMove:boolean)\r\n\t{\r\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\r\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\r\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\r\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\r\n\t\t//\t}\r\n\t\t//}\r\n\t}\r\n\t\r\n\tpublic fireTouchEvents(forceTouchMove:boolean)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[i];\r\n\t\t\t// If colliding object has changed, queue over/out events.\r\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\r\n\t\t\t\tif (this._iCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t\t}\r\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\r\n\t\t\tif (forceTouchMove && this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t}\r\n\r\n\t\tvar event:AwayTouchEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\t\t\t\r\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t\r\n\t\t\tif (dispatcher)\r\n\t\t\t\tdispatcher.dispatchEvent(event);\r\n\t\t}\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._updateDirty = false;\r\n\t\t\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\tevent.altKey = sourceEvent.altKey;\r\n\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\tevent.screenX = touch.x;\r\n\t\tevent.screenY = touch.y;\r\n\t\tevent.touchPointID = touch.id;\r\n\t\t\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t\t// SubGeometryIndex.\r\n\t\t\tevent.subGeometryIndex = collider.index;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Event handlers.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate onTouchBegin(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\tvar touch:TouchPoint = new TouchPoint();\r\n\t\t//touch.id = event.touchPointID;\r\n\t\t//touch.x = event.stageX;\r\n\t\t//touch.y = event.stageY;\r\n\t\tthis._numTouchPoints++;\r\n\t\tthis._touchPoints.push(touch);\r\n\t\tthis._touchPointFromId[ touch.id ] = touch;\r\n\r\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\r\n\r\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\r\n\r\n\t\tthis._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchMove(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t////touch.x = event.stageX;\r\n\t\t////touch.y = event.stageY;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchEnd(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._touchPointFromId[ touch.id ] = null;\r\n\t\t//this._numTouchPoints--;\r\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n}\r\n\r\n\r\nexport = TouchManager;\r\n\r\nclass TouchPoint\r\n{\r\n\tpublic id:number;\r\n\tpublic x:number;\r\n\tpublic y:number;\r\n}\r\n\r\n\r\n/**\r\n * Classes for Touch Interfaces\r\n */\r\ninterface TouchEvent extends UIEvent {\r\n\ttouches: TouchList;\r\n\ttargetTouches: TouchList;\r\n\tchangedTouches: TouchList;\r\n\taltKey: boolean;\r\n\tmetaKey: boolean;\r\n\tctrlKey: boolean;\r\n\tshiftKey: boolean;\r\n\trotation: number;\r\n\tscale: number;\r\n\r\n\t// for iOS\r\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\r\n\r\n\t// for Android\r\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\r\n}\r\n\r\ndeclare var TouchEvent: {\r\n\tprototype: TouchEvent;\r\n\tnew (): TouchEvent;\r\n}\r\n\r\ninterface TouchList {\r\n\tlength: number;\r\n\t[index: number]: Touch;\r\n\titem: (index: number) => Touch;\r\n}\r\n\r\ninterface Touch {\r\n\tidentifier: number;\r\n\ttarget: EventTarget;\r\n\tscreenX: number;\r\n\tscreenY: number;\r\n\tclientX: number;\r\n\tclientY: number;\r\n\tpageX: number;\r\n\tpageY: number;\r\n}\r\n\r\ninterface Window {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface Document {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface HTMLElement {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ndeclare var ontouchstart: (ev: TouchEvent) => any;\r\ndeclare var ontouchmove: (ev: TouchEvent) => any;\r\ndeclare var ontouchend: (ev: TouchEvent) => any;\r\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\r\n\r\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n\r\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\n\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n/**\r\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass BasicMaterial extends MaterialBase\r\n{\r\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\r\n\r\n    private _preserveAlpha:boolean = false;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn BasicMaterial.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new BasicMaterial object.\r\n\t *\r\n\t * @param texture The texture used for the material's albedo color.\r\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\r\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\r\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\r\n\t */\r\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(color?:number, alpha?:number);\r\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (textureColor instanceof Image2D)\r\n\t\t\ttextureColor = new Single2DTexture(textureColor);\r\n\r\n\t\tif (textureColor instanceof TextureBase) {\r\n\t\t\tthis.texture = <TextureBase> textureColor;\r\n\r\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\r\n\t\t\tthis.repeat = repeat;\r\n\t\t\tthis.mipmap = mipmap;\r\n\t\t} else {\r\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\r\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\r\n\t\t}\r\n\t}\r\n    /**\r\n     * Indicates whether alpha should be preserved - defaults to false\r\n     */\r\n    public get preserveAlpha():boolean\r\n    {\r\n        return this._preserveAlpha;\r\n    }\r\n    public set preserveAlpha(value:boolean)\r\n    {\r\n        if (this._preserveAlpha == value)\r\n            return;\r\n        this._preserveAlpha = value;\r\n        this._pInvalidateRender();\r\n    }\r\n}\r\n\r\nexport = BasicMaterial;",
    "/**\r\n * Enumeration class for defining which lighting types affect the specific material\r\n * lighting component (diffuse and specular). This can be useful if, for example, you\r\n * want to use light probes for diffuse global lighting, but want specular reflections from\r\n * traditional light sources without those affecting the diffuse light.\r\n *\r\n * @see away.materials.ColorMaterial.diffuseLightSources\r\n * @see away.materials.ColorMaterial.specularLightSources\r\n * @see away.materials.TextureMaterial.diffuseLightSources\r\n * @see away.materials.TextureMaterial.specularLightSources\r\n */\r\nclass LightSources\r\n{\r\n\t/**\r\n\t * Defines normal lights are to be used as the source for the lighting\r\n\t * component.\r\n\t */\r\n\tpublic static LIGHTS:number = 0x01;\r\n\r\n\t/**\r\n\t * Defines that global lighting probes are to be used as the source for the\r\n\t * lighting component.\r\n\t */\r\n\tpublic static PROBES:number = 0x02;\r\n\r\n\t/**\r\n\t * Defines that both normal and global lighting probes  are to be used as the\r\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\r\n\t */\r\n\tpublic static ALL:number = 0x03;\r\n}\r\n\r\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n\r\n/**\r\n * MaterialBase forms an abstract base class for any material.\r\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\r\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\r\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\r\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\r\n *\r\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\r\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\r\n * shaders, or entire new material frameworks.\r\n */\r\nclass MaterialBase extends AssetBase implements IRenderOwner\r\n{\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _pUseColorTransform:boolean = false;\r\n\tprivate _frameRect:Rectangle;\r\n\tprivate _alphaBlending:boolean = false;\r\n\tprivate _alpha:number = 1;\r\n\t\r\n\tprivate _sizeChanged:MaterialEvent;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tpublic _pAnimateUVs:boolean = false;\r\n\tprivate _enableLightFallOff:boolean = true;\r\n\tprivate _specularLightSources:number = 0x01;\r\n\tprivate _diffuseLightSources:number = 0x03;\r\n\r\n\t/**\r\n\t * An object to contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\r\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\r\n\t * that the deferred renderer knows not to take the forward rendering path.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iClassification:string;\r\n\r\n\r\n\t/**\r\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iMaterialId:number = 0;\r\n\r\n\tpublic _iBaseScreenPassIndex:number = 0;\r\n\r\n\tprivate _bothSides:boolean = false; // update\r\n\tprivate _animationSet:IAnimationSet;\r\n\r\n\t/**\r\n\t * A list of material owners, renderables or custom Entities.\r\n\t */\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\r\n\tprivate _alphaPremultiplied:boolean;\r\n\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\r\n\tprivate _mipmap:boolean = true;\r\n\tprivate _smooth:boolean = true;\r\n\tprivate _repeat:boolean = false;\r\n\tprivate _color:number = 0xFFFFFF;\r\n\tpublic _pTexture:TextureBase;\r\n\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\r\n\tpublic _pHeight:number = 1;\r\n\tpublic _pWidth:number = 1;\r\n\r\n\tprivate _onLightChangeDelegate:(event:Event) => void;\r\n\r\n\t/**\r\n\t * Creates a new MaterialBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._iMaterialId = Number(this.id);\r\n\r\n\t\tthis._owners = new Array<IRenderableOwner>();\r\n\r\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\r\n\r\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\r\n\t}\r\n\r\n\t/**\r\n\t * The alpha of the surface.\r\n\t */\r\n\tpublic get alpha():number\r\n\t{\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tpublic set alpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._alpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alpha = value;\r\n\r\n\t\tif (this._colorTransform == null)\r\n\t\t\tthis._colorTransform = new ColorTransform();\r\n\r\n\t\tthis._colorTransform.alphaMultiplier = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\r\n\t * example when using textures of foliage, consider using alphaThreshold instead.\r\n\t */\r\n\tpublic get alphaBlending():boolean\r\n\t{\r\n\t\treturn this._alphaBlending;\r\n\t}\r\n\r\n\tpublic set alphaBlending(value:boolean)\r\n\t{\r\n\t\tif (this._alphaBlending == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaBlending = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic get frameRect():Rectangle\r\n\t{\r\n\t\treturn this._frameRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._pHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\tpublic set lightPicker(value:LightPickerBase)\r\n\t{\r\n\t\tif (this._pLightPicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pLightPicker = value;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\r\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\r\n\t */\r\n\tpublic get repeat():boolean\r\n\t{\r\n\t\treturn this._repeat;\r\n\t}\r\n\r\n\tpublic set repeat(value:boolean)\r\n\t{\r\n\t\tif (this._repeat == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._repeat = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The diffuse reflectivity color of the surface.\r\n\t */\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tif (this._color == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._color = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The texture object to use for the albedo colour.\r\n\t */\r\n\tpublic get texture():TextureBase\r\n\t{\r\n\t\treturn this._pTexture;\r\n\t}\r\n\r\n\tpublic set texture(value:TextureBase)\r\n\t{\r\n\t\tif (this._pTexture == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pTexture = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\r\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\r\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\r\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\r\n\r\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\r\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\r\n\t\t} else {\r\n\t\t\tthis._frameRect = null;\r\n\t\t\tthis._pHeight = 1;\r\n\t\t\tthis._pWidth = 1;\r\n\t\t}\r\n\r\n\r\n\t\tthis._pNotifySizeChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get animateUVs():boolean\r\n\t{\r\n\t\treturn this._pAnimateUVs;\r\n\t}\r\n\r\n\tpublic set animateUVs(value:boolean)\r\n\t{\r\n\t\tif (this._pAnimateUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAnimateUVs = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get useColorTransform():boolean\r\n\t{\r\n\t\treturn this._pUseColorTransform;\r\n\t}\r\n\r\n\tpublic set useColorTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pUseColorTransform == value)\r\n\t\t\treturn;\r\n\t\tthis._pUseColorTransform = value;\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\r\n\t * compatibility for constrained mode.\r\n\t */\r\n\tpublic get enableLightFallOff():boolean\r\n\t{\r\n\t\treturn this._enableLightFallOff;\r\n\t}\r\n\r\n\tpublic set enableLightFallOff(value:boolean)\r\n\t{\r\n\t\tif (this._enableLightFallOff == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._enableLightFallOff = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\r\n\t * and/or light probes for diffuse reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get diffuseLightSources():number\r\n\t{\r\n\t\treturn this._diffuseLightSources;\r\n\t}\r\n\r\n\tpublic set diffuseLightSources(value:number)\r\n\t{\r\n\t\tif (this._diffuseLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._diffuseLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\r\n\t * and/or light probes for specular reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get specularLightSources():number\r\n\t{\r\n\t\treturn this._specularLightSources;\r\n\t}\r\n\r\n\tpublic set specularLightSources(value:number)\r\n\t{\r\n\t\tif (this._specularLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._specularLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether or not the material should cull triangles facing away from the camera.\r\n\t */\r\n\tpublic get bothSides():boolean\r\n\t{\r\n\t\treturn this._bothSides;\r\n\t}\r\n\r\n\tpublic set bothSides(value:boolean)\r\n\t{\r\n\t\tif (this._bothSides = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._bothSides = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether visible textures (or other pixels) used by this material have\r\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\r\n\t * blended alpha edges.\r\n\t */\r\n\tpublic get alphaPremultiplied():boolean\r\n\t{\r\n\t\treturn this._alphaPremultiplied;\r\n\t}\r\n\r\n\tpublic set alphaPremultiplied(value:boolean)\r\n\t{\r\n\t\tif (this._alphaPremultiplied == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaPremultiplied = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._pWidth;\r\n\t}\r\n\r\n\t//\r\n\t// MATERIAL MANAGEMENT\r\n\t//\r\n\t/**\r\n\t * Mark an IRenderableOwner as owner of this material.\r\n\t * Assures we're not using the same material across renderables with different animations, since the\r\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\r\n\t *\r\n\t * @param owner The IRenderableOwner that had this material assigned\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iAddOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.push(owner);\r\n\r\n\t\tvar animationSet:IAnimationSet;\r\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\r\n\r\n\t\tif (animator)\r\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\r\n\r\n\t\tif (owner.animator) {\r\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\r\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\r\n\t\t\t} else {\r\n\t\t\t\tif (this._animationSet != animationSet) {\r\n\r\n\t\t\t\t\tthis._animationSet = animationSet;\r\n\r\n\t\t\t\t\tthis.invalidateAnimation();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an IRenderableOwner as owner.\r\n\t * @param owner\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\r\n\r\n\t\tif (this._owners.length == 0) {\r\n\t\t\tthis._animationSet = null;\r\n\r\n\t\t\tthis.invalidateAnimation();\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pInvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\tprivate invalidateAnimation()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateAnimation();\r\n\t}\r\n\t\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the light picker's configuration changed.\r\n\t */\r\n\tprivate onLightsChange(event:Event)\r\n\t{\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pNotifySizeChanged()\r\n\t{\r\n\t\tif (!this._sizeChanged)\r\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\r\n\r\n\t\tthis.dispatchEvent(this._sizeChanged);\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n}\r\n\r\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\n\r\n/**\r\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\r\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\r\n * extended to provide more application-specific dynamic selection of lights.\r\n *\r\n * @see StaticLightPicker\r\n */\r\nclass LightPickerBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset LightPicker]\";\r\n\r\n\tpublic _pNumPointLights:number = 0;\r\n\tpublic _pNumDirectionalLights:number = 0;\r\n\tpublic _pNumCastingPointLights:number = 0;\r\n\tpublic _pNumCastingDirectionalLights:number = 0;\r\n\tpublic _pNumLightProbes:number = 0;\r\n\r\n\tpublic _pAllPickedLights:Array<LightBase>;\r\n\tpublic _pPointLights:Array<PointLight>;\r\n\tpublic _pCastingPointLights:Array<PointLight>;\r\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pLightProbes:Array<LightProbe>;\r\n\tpublic _pLightProbeWeights:Array<number>;\r\n\r\n\t/**\r\n\t * Creates a new LightPickerBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes resources used by the light picker.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightPickerBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that will be provided.\r\n\t */\r\n\tpublic get numDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of point lights that will be provided.\r\n\t */\r\n\tpublic get numPointLights():number\r\n\t{\r\n\t\treturn this._pNumPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of point lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingPointLights():number\r\n\t{\r\n\t\treturn this._pNumCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of light probes that will be provided.\r\n\t */\r\n\tpublic get numLightProbes():number\r\n\t{\r\n\t\treturn this._pNumLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights to be used for shading.\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights to be used for shading.\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingPointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected light probes to be used for shading.\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._pLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The weights for each light probe, defining their influence on the object.\r\n\t */\r\n\tpublic get lightProbeWeights():Array<number>\r\n\t{\r\n\t\treturn this._pLightProbeWeights;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of all the collected lights.\r\n\t */\r\n\tpublic get allPickedLights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pAllPickedLights;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\r\n\t */\r\n\tpublic collectLights(renderable:IRenderable)\r\n\t{\r\n\t\tthis.updateProbeWeights(renderable);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\r\n\t * @param renderable The renderble for which to calculate the light probes' influence.\r\n\t */\r\n\tprivate updateProbeWeights(renderable:IRenderable)\r\n\t{\r\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\r\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\r\n\t\tvar lightPos:Vector3D;\r\n\r\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\r\n\t\tvar dx:number, dy:number, dz:number;\r\n\t\tvar w:number, total:number = 0;\r\n\t\tvar i:number;\r\n\r\n\t\t// calculates weights for probes\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\r\n\r\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\r\n\t\t\tdx = rx - lightPos.x;\r\n\t\t\tdy = ry - lightPos.y;\r\n\t\t\tdz = rz - lightPos.z;\r\n\t\t\t// weight is inversely proportional to square of distance\r\n\t\t\tw = dx*dx + dy*dy + dz*dz;\r\n\r\n\t\t\t// just... huge if at the same spot\r\n\t\t\tw = w > .00001? 1/w : 50000000;\r\n\t\t\tthis._pLightProbeWeights[i] = w;\r\n\t\t\ttotal += w;\r\n\t\t}\r\n\r\n\t\t// normalize\r\n\t\ttotal = 1/total;\r\n\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\r\n\t\t\tthis._pLightProbeWeights[i] *= total;\r\n\t}\r\n}\r\n\r\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\n\r\n/**\r\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\r\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\r\n * occur.\r\n */\r\nclass StaticLightPicker extends LightPickerBase\r\n{\r\n\tprivate _lights:Array<any>;\r\n\tprivate _onCastShadowChangeDelegate:Function;\r\n\r\n\t/**\r\n\t * Creates a new StaticLightPicker object.\r\n\t * @param lights The lights to be used for shading.\r\n\t */\r\n\tconstructor(lights)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\r\n\r\n\t\tthis.lights = lights;\r\n\t}\r\n\r\n\t/**\r\n\t * The lights used for shading.\r\n\t */\r\n\tpublic get lights()\r\n\t{\r\n\t\treturn this._lights;\r\n\t}\r\n\r\n\tpublic set lights(value:Array<any>)\r\n\t{\r\n\t\tvar numPointLights:number = 0;\r\n\t\tvar numDirectionalLights:number = 0;\r\n\t\tvar numCastingPointLights:number = 0;\r\n\t\tvar numCastingDirectionalLights:number = 0;\r\n\t\tvar numLightProbes:number = 0;\r\n\t\tvar light:LightBase;\r\n\r\n\t\tif (this._lights)\r\n\t\t\tthis.clearListeners();\r\n\r\n\t\tthis._lights = value;\r\n\t\tthis._pAllPickedLights = value;\r\n\t\tthis._pPointLights = new Array<PointLight>();\r\n\t\tthis._pCastingPointLights = new Array<PointLight>();\r\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pLightProbes = new Array<LightProbe>();\r\n\r\n\t\tvar len:number = value.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tlight = value[i];\r\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\r\n\t\t\tif (light instanceof PointLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\r\n\r\n\t\t\t} else if (light instanceof DirectionalLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\r\n\r\n\t\t\t} else if (light instanceof LightProbe) {\r\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\r\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\r\n\t\tthis._pNumPointLights = numPointLights;\r\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\r\n\t\tthis._pNumLightProbes = numLightProbes;\r\n\r\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\r\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\r\n\r\n\t\t// notify material lights have changed\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove configuration change listeners on the lights.\r\n\t */\r\n\tprivate clearListeners()\r\n\t{\r\n\t\tvar len:number = this._lights.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Notifies the material of a configuration change.\r\n\t */\r\n\tprivate onCastShadowChange(event:LightEvent)\r\n\t{\r\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\r\n\t\t// But keep seperated in multipass\r\n\r\n\t\tvar light:LightBase = <LightBase> event.target;\r\n\r\n\t\tif (light instanceof PointLight)\r\n\t\t\tthis.updatePointCasting(<PointLight> light);\r\n\t\telse if (light instanceof DirectionalLight)\r\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\r\n\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a directional light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updateDirectionalCasting(light:DirectionalLight)\r\n\t{\r\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumDirectionalLights;\r\n\t\t\t++this._pNumCastingDirectionalLights;\r\n\r\n\r\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pCastingDirectionalLights.push(light);\r\n\r\n\t\t} else {\r\n\t\t\t++this._pNumDirectionalLights;\r\n\t\t\t--this._pNumCastingDirectionalLights;\r\n\r\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pDirectionalLights.push(light);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a point light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updatePointCasting(light:PointLight)\r\n\t{\r\n\t\tvar pl:PointLight = <PointLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumPointLights;\r\n\t\t\t++this._pNumCastingPointLights;\r\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pCastingPointLights.push(light);\r\n\t\t} else {\r\n\t\t\t++this._pNumPointLights;\r\n\t\t\t--this._pNumCastingPointLights;\r\n\r\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pPointLights.push(light);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\r\n{\r\n\tpublic _pScissorRects:Rectangle[];\r\n\tprivate _pScissorRectsInvalid:boolean = true;\r\n\tprivate _splitRatios:number[];\r\n\r\n\tprivate _numCascades:number /*int*/;\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\r\n\r\n\tprivate _texOffsetsX:Array<number>;\r\n\tprivate _texOffsetsY:Array<number>;\r\n\r\n\tprivate _changeDispatcher:EventDispatcher;\r\n\tprivate _nearPlaneDistances:number[];\r\n\r\n\tconstructor(numCascades:number /*uint*/ = 3)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (numCascades < 1 || numCascades > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = numCascades;\r\n\t\tthis._changeDispatcher = new EventDispatcher(this);\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tpublic getSplitRatio(index:number /*uint*/):number\r\n\t{\r\n\t\treturn this._splitRatios[index];\r\n\t}\r\n\r\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (index >= this._numCascades)\r\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\r\n\r\n\t\tthis._splitRatios[index] = value;\r\n\t}\r\n\r\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\r\n\t{\r\n\t\treturn this._depthCameras[partition].viewProjection;\r\n\t}\r\n\r\n\tprivate init()\r\n\t{\r\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\r\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\r\n\r\n\t\tvar s:number = 1;\r\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\r\n\t\t\tthis._splitRatios[i] = s;\r\n\t\t\ts *= .4;\r\n\t\t}\r\n\r\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\r\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\r\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\r\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\r\n\t\tthis._depthCameras = new Array<Camera>();\r\n\r\n\t\tfor (i = 0; i < this._numCascades; ++i) {\r\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\r\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\r\n\t{\r\n\t\tsuper._pSetDepthMapSize(value);\r\n\r\n\t\tthis.invalidateScissorRects();\r\n\t}\r\n\r\n\tprivate invalidateScissorRects()\r\n\t{\r\n\t\tthis._pScissorRectsInvalid = true;\r\n\t}\r\n\r\n\tpublic get numCascades():number /*int*/\r\n\t{\r\n\t\treturn this._numCascades;\r\n\t}\r\n\r\n\tpublic set numCascades(value:number /*int*/)\r\n\t{\r\n\t\tif (value == this._numCascades)\r\n\t\t\treturn;\r\n\r\n\t\tif (value < 1 || value > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = value;\r\n\t\tthis.invalidateScissorRects();\r\n\t\tthis.init();\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tif (this._pScissorRectsInvalid)\r\n\t\t\tthis.updateScissorRects();\r\n\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\r\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\r\n\t}\r\n\r\n\tprivate updateScissorRects()\r\n\t{\r\n\t\tvar half:number = this._pDepthMapSize*.5;\r\n\r\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\r\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\r\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\r\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\r\n\r\n\t\tthis._pScissorRectsInvalid = false;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar matrix:Matrix3D;\r\n\t\tvar projection:IProjection = viewCamera.projection;\r\n\t\tvar projectionNear:number = projection.near;\r\n\t\tvar projectionRange:number = projection.far - projectionNear;\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\r\n\t\t\tmatrix = this._depthLenses[i].matrix;\r\n\r\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\r\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\r\n\r\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\r\n\r\n\t\t\tthis._depthLenses[i].matrix = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\r\n\t{\r\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar xN:number, yN:number, zN:number;\r\n\t\tvar xF:number, yF:number, zF:number;\r\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\r\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\r\n\t\twhile (i < 12) {\r\n\t\t\txN = this._pLocalFrustum[i];\r\n\t\t\tyN = this._pLocalFrustum[i + 1];\r\n\t\t\tzN = this._pLocalFrustum[i + 2];\r\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\r\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\r\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\r\n\t\t\tif (xN < minX)\r\n\t\t\t\tminX = xN;\r\n\t\t\tif (xN > maxX)\r\n\t\t\t\tmaxX = xN;\r\n\t\t\tif (yN < minY)\r\n\t\t\t\tminY = yN;\r\n\t\t\tif (yN > maxY)\r\n\t\t\t\tmaxY = yN;\r\n\t\t\tif (zN > maxZ)\r\n\t\t\t\tmaxZ = zN;\r\n\t\t\tif (xF < minX)\r\n\t\t\t\tminX = xF;\r\n\t\t\tif (xF > maxX)\r\n\t\t\t\tmaxX = xF;\r\n\t\t\tif (yF < minY)\r\n\t\t\t\tminY = yF;\r\n\t\t\tif (yF > maxY)\r\n\t\t\t\tmaxY = yF;\r\n\t\t\tif (zF > maxZ)\r\n\t\t\t\tmaxZ = zF;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tminZ = 1;\r\n\r\n\t\tvar w:number = (maxX - minX);\r\n\t\tvar h:number = (maxY - minY);\r\n\t\tvar d:number = 1/(maxZ - minZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\r\n\t\th = Math.floor(h/snap2 + 1)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -minZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t\tmatrix.appendScale(.96, .96, 1);\r\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\r\n\t\tmatrix.appendScale(.5, .5, 1);\r\n\t}\r\n\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.addEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic dispatchEvent(event:Event)\r\n\t{\r\n\t\treturn this._changeDispatcher.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic hasEventListener(type:string):boolean\r\n\t{\r\n\t\treturn this._changeDispatcher.hasEventListener(type);\r\n\t}\r\n\r\n\tget _iNearPlaneDistances():Array<number>\r\n\t{\r\n\t\treturn this._nearPlaneDistances;\r\n\t}\r\n}\r\n\r\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\nclass CubeMapShadowMapper extends ShadowMapperBase\r\n{\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _projections:Array<PerspectiveProjection>;\r\n\tprivate _needsRender:Array<boolean>;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pDepthMapSize = 512;\r\n\t\tthis._needsRender = new Array();\r\n\t\tthis.initCameras();\r\n\t}\r\n\r\n\tprivate initCameras()\r\n\t{\r\n\t\tthis._depthCameras = new Array();\r\n\t\tthis._projections = new Array();\r\n\r\n\t\t// posX, negX, posY, negY, posZ, negZ\r\n\t\tthis.addCamera(0, 90, 0);\r\n\t\tthis.addCamera(0, -90, 0);\r\n\t\tthis.addCamera(-90, 0, 0);\r\n\t\tthis.addCamera(90, 0, 0);\r\n\t\tthis.addCamera(0, 0, 0);\r\n\t\tthis.addCamera(0, 180, 0);\r\n\t}\r\n\r\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\r\n\t{\r\n\t\tvar cam:Camera = new Camera();\r\n\t\tcam.rotationX = rotationX;\r\n\t\tcam.rotationY = rotationY;\r\n\t\tcam.rotationZ = rotationZ;\r\n\t\tcam.projection.near = .01;\r\n\r\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\r\n\t\tprojection.fieldOfView = 90;\r\n\t\tthis._projections.push(projection);\r\n\t\tcam.projection._iAspectRatio = 1;\r\n\t\tthis._depthCameras.push(cam);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateDepthTexture():SingleCubeTexture\r\n\t{\r\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar light:PointLight = <PointLight>(this._pLight);\r\n\t\tvar maxDistance:number = light._pFallOff;\r\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\r\n\r\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tthis._projections[i].far = maxDistance;\r\n\t\t\tthis._depthCameras[i].transform.position = pos;\r\n\t\t\tthis._needsRender[i] = true;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tif (this._needsRender[i]) {\r\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\r\n\t\t\t\tthis._pCasterCollector.clear();\r\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass DirectionalShadowMapper extends ShadowMapperBase\r\n{\r\n\tpublic _pOverallDepthCamera:Camera;\r\n\tpublic _pLocalFrustum:Array<number>;\r\n\r\n\tpublic _pLightOffset:number = 10000;\r\n\tpublic _pMatrix:Matrix3D;\r\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\r\n\tpublic _pSnap:number = 64;\r\n\r\n\tpublic _pCullPlanes:Array<Plane3D>;\r\n\tpublic _pMinZ:number;\r\n\tpublic _pMaxZ:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pCullPlanes = [];\r\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\r\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\r\n\t\tthis._pLocalFrustum = [];\r\n\t\tthis._pMatrix = new Matrix3D();\r\n\t}\r\n\r\n\tpublic get snap():number\r\n\t{\r\n\t\treturn this._pSnap;\r\n\t}\r\n\r\n\tpublic set snap(value:number)\r\n\t{\r\n\t\tthis._pSnap = value;\r\n\t}\r\n\r\n\tpublic get lightOffset():number\r\n\t{\r\n\t\treturn this._pLightOffset;\r\n\t}\r\n\r\n\tpublic set lightOffset(value:number)\r\n\t{\r\n\t\tthis._pLightOffset = value;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get iDepthProjection():Matrix3D\r\n\t{\r\n\t\treturn this._pOverallDepthCamera.viewProjection;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._pMaxZ - this._pMinZ;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\r\n\t{\r\n\t\tif (this._depthMap == depthMap)\r\n\t\t\treturn;\r\n\r\n\t\tsuper.iSetDepthMap(depthMap);\r\n\r\n\t\tif (this._depthMap) {\r\n\t\t\tthis._explicitDepthMap = true;\r\n\t\t\tthis._pDepthMapSize = depthMap.width;\r\n\t\t} else {\r\n\t\t\tthis._explicitDepthMap = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():Single2DTexture\r\n\t{\r\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\r\n\t}\r\n\r\n\t//@protected\r\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\r\n\t{\r\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\r\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\r\n\t\tthis._pCullPlanes.length = 4;\r\n\r\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\r\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\r\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\r\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tvar dir:Vector3D = light.sceneDirection;\r\n\t\tvar dirX:number = dir.x;\r\n\t\tvar dirY:number = dir.y;\r\n\t\tvar dirZ:number = dir.z;\r\n\t\tvar j:number = 4;\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\r\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\r\n\t\t\t\tthis._pCullPlanes[j++] = plane;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\t}\r\n\r\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar dir:Vector3D;\r\n\t\tvar x:number, y:number, z:number;\r\n\t\tvar minX:number, minY:number;\r\n\t\tvar maxX:number, maxY:number;\r\n\t\tvar i:number;\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tdir = light.sceneDirection;\r\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\r\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tthis._pOverallDepthCamera.x = x;\r\n\t\tthis._pOverallDepthCamera.y = y;\r\n\t\tthis._pOverallDepthCamera.z = z;\r\n\r\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\r\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\r\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\r\n\r\n\t\tminX = maxX = this._pLocalFrustum[0];\r\n\t\tminY = maxY = this._pLocalFrustum[1];\r\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\r\n\r\n\t\ti = 3;\r\n\t\twhile (i < 24) {\r\n\t\t\tx = this._pLocalFrustum[i];\r\n\t\t\ty = this._pLocalFrustum[i + 1];\r\n\t\t\tz = this._pLocalFrustum[i + 2];\r\n\t\t\tif (x < minX)\r\n\t\t\t\tminX = x;\r\n\t\t\tif (x > maxX)\r\n\t\t\t\tmaxX = x;\r\n\t\t\tif (y < minY)\r\n\t\t\t\tminY = y;\r\n\t\t\tif (y > maxY)\r\n\t\t\t\tmaxY = y;\r\n\t\t\tif (z > this._pMaxZ)\r\n\t\t\t\tthis._pMaxZ = z;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tthis._pMinZ = 1;\r\n\r\n\t\tvar w:number = maxX - minX;\r\n\t\tvar h:number = maxY - minY;\r\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\r\n\t\th = Math.floor(h/snap2 + 2)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -this._pMinZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t}\r\n}\r\n\r\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\r\n{\r\n\tprivate _coverageRatio:number;\r\n\r\n\tconstructor(coverageRatio:number = .5)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.coverageRatio = coverageRatio;\r\n\t}\r\n\r\n\t/**\r\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\r\n\t */\r\n\tpublic get coverageRatio():number\r\n\t{\r\n\t\treturn this._coverageRatio;\r\n\t}\r\n\r\n\tpublic set coverageRatio(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1; else if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._coverageRatio = value;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\r\n\t\t\tvar v:number = corners[i];\r\n\t\t\tthis._pLocalFrustum[i] = v;\r\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\r\n\t\t}\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t}\r\n}\r\n\r\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass ShadowMapperBase\r\n{\r\n\r\n\tpublic _pCasterCollector:ShadowCasterCollector;\r\n\r\n\tpublic _depthMap:TextureBase;\r\n\tpublic _pDepthMapSize:number = 2048;\r\n\tpublic _pLight:LightBase;\r\n\tpublic _explicitDepthMap:boolean;\r\n\tprivate _autoUpdateShadows:boolean = true;\r\n\tpublic _iShadowsInvalid:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\r\n\t}\r\n\r\n\tpublic pCreateCasterCollector()\r\n\t{\r\n\t\treturn new ShadowCasterCollector();\r\n\t}\r\n\r\n\tpublic get autoUpdateShadows():boolean\r\n\t{\r\n\t\treturn this._autoUpdateShadows;\r\n\t}\r\n\r\n\tpublic set autoUpdateShadows(value:boolean)\r\n\t{\r\n\t\tthis._autoUpdateShadows = value;\r\n\t}\r\n\r\n\tpublic updateShadows()\r\n\t{\r\n\t\tthis._iShadowsInvalid = true;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:TextureBase)\r\n\t{\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = depthMap;\r\n\t}\r\n\r\n\tpublic get light():LightBase\r\n\t{\r\n\t\treturn this._pLight;\r\n\t}\r\n\r\n\tpublic set light(value:LightBase)\r\n\t{\r\n\t\tthis._pLight = value;\r\n\t}\r\n\r\n\tpublic get depthMap():TextureBase\r\n\t{\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\treturn this._depthMap;\r\n\t}\r\n\r\n\tpublic get depthMapSize():number\r\n\t{\r\n\t\treturn this._pDepthMapSize;\r\n\t}\r\n\r\n\tpublic set depthMapSize(value:number)\r\n\t{\r\n\t\tif (value == this._pDepthMapSize)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSetDepthMapSize(value);\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pCasterCollector = null;\r\n\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = null;\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():TextureBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\r\n\t{\r\n\t\tthis._iShadowsInvalid = false;\r\n\r\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\r\n\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value)\r\n\t{\r\n\t\tthis._pDepthMapSize = value;\r\n\r\n\t\tif (this._explicitDepthMap) {\r\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\r\n\t\t} else if (this._depthMap) {\r\n\t\t\tthis._depthMap.dispose();\r\n\t\t\tthis._depthMap = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ShadowMapperBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.CameraNode\r\n */\r\nclass CameraNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"cameraNode\";\r\n\r\n\tconstructor(pool:EntityNodePool, camera:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, camera, partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\r\n\t}\r\n}\r\n\r\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.DirectionalLightNode\r\n */\r\nclass DirectionalLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"directionalLightNode\";\r\n\r\n\tprivate _directionalLight:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param directionalLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, directionalLight:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, directionalLight, partition);\r\n\r\n\t\tthis._directionalLight = directionalLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\r\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.EntityNode\r\n */\r\nclass EntityNode extends NodeBase\r\n{\r\n\tpublic static id:string = \"entityNode\";\r\n\r\n\tprivate _pool:EntityNodePool;\r\n\tpublic _entity:IEntity;\r\n\tprivate _partition:Partition;\r\n\tpublic _bounds:BoundingVolumeBase;\r\n\tpublic _iUpdateQueueNext:EntityNode;\r\n\r\n\tconstructor(pool:EntityNodePool, entity:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._pool = pool;\r\n\t\tthis._entity = entity;\r\n\t\tthis._partition = partition;\r\n\t\tthis._iNumEntities = 1;\r\n\r\n\t\tthis.updateBounds();\r\n\r\n\t\tthis.debugVisible = this._entity.debugVisible;\r\n\t}\r\n\r\n\tpublic get entity():IEntity\r\n\t{\r\n\t\treturn this._entity;\r\n\t}\r\n\r\n\tpublic removeFromParent():void\r\n\t{\r\n\t\tif (this._iParent)\r\n\t\t\tthis._iParent.iRemoveNode(this);\r\n\r\n\t\tthis._iParent = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn this.entity.castsShadows;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\r\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\ttraverser.applyEntity(this._entity);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\r\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\r\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\r\n\r\n\t\tif (!pickingCollisionVO.localNormal)\r\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\r\n\r\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\r\n\r\n\t\tif (rayEntryDistance < 0)\r\n\t\t\treturn false;\r\n\r\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\r\n\t\tpickingCollisionVO.rayPosition = rayPosition;\r\n\t\tpickingCollisionVO.rayDirection = rayDirection;\r\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\treturn this._bounds.boundsPrimitive;\r\n\t}\r\n\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tthis._bounds.invalidate();\r\n\r\n\t\tthis._partition.iMarkForUpdate(this);\r\n\t}\r\n\r\n\tpublic updateBounds()\r\n\t{\r\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\r\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\r\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\r\n\t\t\tthis._bounds = new NullBounds();\r\n\r\n\t\tthis.updateDebugEntity();\r\n\t}\r\n}\r\n\r\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.LightProbeNode\r\n */\r\nclass LightProbeNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"lightProbeNode\";\r\n\r\n\tprivate _lightProbe:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param lightProbe\r\n\t */\r\n\tconstructor(pool:EntityNodePool, lightProbe:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, lightProbe, partition);\r\n\r\n\t\tthis._lightProbe = lightProbe;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = LightProbeNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.partition.NodeBase\r\n */\r\nclass NodeBase\r\n{\r\n\tprivate _debugChildrenVisible:boolean;\r\n\tprivate _explicitDebugVisible:boolean;\r\n\tpublic _pImplicitDebugVisible:boolean;\r\n\tpublic _iParent:NodeBase;\r\n\tpublic _pChildNodes:Array<NodeBase>;\r\n\tpublic _pNumChildNodes:number = 0;\r\n\r\n\tpublic _pDebugEntity:IEntity;\r\n\r\n\tpublic _iNumEntities:number = 0;\r\n\tpublic _iCollectionMark:number;// = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._explicitDebugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitDebugVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitDebugVisible = value;\r\n\r\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\r\n\r\n\t}\r\n\r\n\tpublic get debugChildrenVisible():boolean\r\n\t{\r\n\t\treturn this._debugChildrenVisible;\r\n\t}\r\n\r\n\tpublic set debugChildrenVisible(value:boolean)\r\n\t{\r\n\t\tif (this._debugChildrenVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugChildrenVisible = value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get parent():NodeBase\r\n\t{\r\n\t\treturn this._iParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic get _pNumEntities():number\r\n\t{\r\n\t\treturn this._iNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pChildNodes = new Array<NodeBase>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t * @internal\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param rayPosition\r\n\t * @param rayDirection\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t * @returns {away.partition.NodeBase}\r\n\t */\r\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\r\n\t{\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param traverser\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\tvar i:number = 0;\r\n\r\n\t\t\twhile (i < this._pNumChildNodes)\r\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic applyDebugEntity(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pDebugEntity == null)\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\r\n\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iAddNode(node:NodeBase)\r\n\t{\r\n\t\tnode._iParent = this;\r\n\t\tthis._iNumEntities += node._pNumEntities;\r\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._iNumEntities += numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveNode(node:NodeBase)\r\n\t{\r\n\t\tvar index:number = this._pChildNodes.indexOf(node);\r\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\r\n\t\tthis._pChildNodes.pop();\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(false);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._pNumEntities -= numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t} else {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = null;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tpublic updateDebugEntity()\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = NodeBase;",
    "/**\r\n * @class away.partition.NullNode\r\n */\r\nclass NullNode\r\n{\r\n\tconstructor()\r\n\t{\r\n\t}\r\n}\r\n\r\nexport = NullNode;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\r\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\r\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\r\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass Partition\r\n{\r\n\tprivate _cameraNodePool:EntityNodePool;\r\n\tprivate _directionalLightNodePool:EntityNodePool;\r\n\tprivate _entityNodePool:EntityNodePool;\r\n\tprivate _lightProbeNodePool:EntityNodePool;\r\n\tprivate _pointLightNodePool:EntityNodePool;\r\n\tprivate _skyboxNodePool:EntityNodePool;\r\n\r\n\tpublic _rootNode:NodeBase;\r\n\tprivate _updatesMade:Boolean = false;\r\n\tprivate _updateQueue:EntityNode;\r\n\r\n\tconstructor(rootNode:NodeBase)\r\n\t{\r\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\r\n\r\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\r\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\r\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\r\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\r\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\r\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\r\n\t}\r\n\r\n\tpublic get rootNode():NodeBase\r\n\t{\r\n\t\treturn this._rootNode;\r\n\t}\r\n\r\n\tpublic traverse(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._updatesMade) {\r\n\t\t\tvar t:EntityNode = this._updateQueue;\r\n\t\t\twhile (t) {\r\n\t\t\t\t//required for controllers with autoUpdate set to true and queued events\r\n\t\t\t\tt.entity._iInternalUpdate();\r\n\t\t\t\tt = t._iUpdateQueueNext;\r\n\t\t\t}\r\n\t\t\tthis.updateEntities();\r\n\t\t}\r\n\r\n\r\n\t\tthis._rootNode.acceptTraverser(traverser);\r\n\t}\r\n\r\n\tpublic iMarkForUpdate(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode = this._updateQueue;\r\n\r\n\t\twhile (t) {\r\n\t\t\tif (node == t)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tt = t._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = this._updateQueue;\r\n\r\n\t\tthis._updateQueue = node;\r\n\t\tthis._updatesMade = true;\r\n\t}\r\n\r\n\tpublic iRemoveEntity(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode;\r\n\r\n\t\tnode.removeFromParent();\r\n\r\n\t\tif (node == this._updateQueue) {\r\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\r\n\t\t} else {\r\n\t\t\tt = this._updateQueue;\r\n\t\t\twhile (t && t._iUpdateQueueNext != node)\r\n\t\t\t\tt = t._iUpdateQueueNext;\r\n\r\n\t\t\tif (t)\r\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\tif (!this._updateQueue)\r\n\t\t\tthis._updatesMade = false;\r\n\t}\r\n\r\n\tprivate updateEntities()\r\n\t{\r\n\t\tvar node:EntityNode = this._updateQueue;\r\n\t\tvar targetNode:NodeBase;\r\n\t\tvar t:EntityNode;\r\n\t\tthis._updateQueue = null;\r\n\t\tthis._updatesMade = false;\r\n\r\n\t\tdo {\r\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\r\n\r\n\t\t\tif (node.parent != targetNode) {\r\n\t\t\t\tif (node)\r\n\t\t\t\t\tnode.removeFromParent();\r\n\r\n\t\t\t\ttargetNode.iAddNode(node);\r\n\t\t\t}\r\n\r\n\t\t\tt = node._iUpdateQueueNext;\r\n\t\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\t} while ((node = t) != null);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._cameraNodePool.disposeItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.disposeItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.disposeItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._pointLightNodePool.disposeItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._skyboxNodePool.disposeItem(skybox));\r\n\t}\r\n}\r\n\r\nexport = Partition;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.PointLightNode\r\n */\r\nclass PointLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"pointLightNode\";\r\n\r\n\tprivate _pointLight:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param pointLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, pointLight:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, pointLight, partition);\r\n\r\n\t\tthis._pointLight = pointLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyPointLight(this._pointLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = PointLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\r\n *\r\n * @class away.partition.SkyboxNode\r\n */\r\nclass SkyboxNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"skyboxNode\";\r\n\r\n\tprivate _skyBox:IEntity;\r\n\r\n\t/**\r\n\t * Creates a new SkyboxNode object.\r\n\t * @param skyBox The Skybox to be contained in the node.\r\n\t */\r\n\tconstructor(pool:EntityNodePool, skyBox:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, skyBox, partition);\r\n\r\n\t\tthis._skyBox = skyBox;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(<NodeBase> this))\r\n\t\t\ttraverser.applySkybox(this._skyBox);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._skyBox._iIsVisible)\r\n\t\t\treturn false;\r\n\r\n\t\t//a skybox is always in view unless its visibility is set to false\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n\r\n/**\r\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\r\n *\r\n * @see away.base.DisplayObject#pickingCollider\r\n * @see away.pick.RaycastPicker\r\n *\r\n * @class away.pick.JSPickingCollider\r\n */\r\nclass JSPickingCollider implements IPickingCollider\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>JSPickingCollider</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param billboard The billboard instance to be tested.\r\n\t * @param pickingCollisionVO The collision object used to store the collision results\r\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\r\n\t * @param findClosest\r\n\t */\r\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\r\n\t{\r\n\t\tpickingCollisionVO.renderableOwner = null;\r\n\r\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t//\r\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\r\n\t\t//\r\n\t\t//\treturn true;\r\n\t\t//}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar t:number;\r\n\t\tvar i0:number, i1:number, i2:number;\r\n\t\tvar rx:number, ry:number, rz:number;\r\n\t\tvar nx:number, ny:number, nz:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar coeff:number, u:number, v:number, w:number;\r\n\t\tvar p0x:number, p0y:number, p0z:number;\r\n\t\tvar p1x:number, p1y:number, p1z:number;\r\n\t\tvar p2x:number, p2y:number, p2z:number;\r\n\t\tvar s0x:number, s0y:number, s0z:number;\r\n\t\tvar s1x:number, s1y:number, s1z:number;\r\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\r\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\r\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\r\n\t\tvar collisionTriangleIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\r\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\r\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\r\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\r\n\t\t\t// evaluate triangle indices\r\n\t\t\ti0 = indices[index]*posDim;\r\n\t\t\ti1 = indices[index + 1]*posDim;\r\n\t\t\ti2 = indices[index + 2]*posDim;\r\n\r\n\t\t\t// evaluate triangle positions\r\n\t\t\tp0x = positions[i0];\r\n\t\t\tp0y = positions[i0 + 1];\r\n\t\t\tp0z = positions[i0 + 2];\r\n\t\t\tp1x = positions[i1];\r\n\t\t\tp1y = positions[i1 + 1];\r\n\t\t\tp1z = positions[i1 + 2];\r\n\t\t\tp2x = positions[i2];\r\n\t\t\tp2y = positions[i2 + 1];\r\n\t\t\tp2z = positions[i2 + 2];\r\n\r\n\t\t\t// evaluate sides and triangle normal\r\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\r\n\t\t\ts0y = p1y - p0y;\r\n\t\t\ts0z = p1z - p0z;\r\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\r\n\t\t\ts1y = p2y - p0y;\r\n\t\t\ts1z = p2z - p0z;\r\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\r\n\t\t\tny = s0z*s1x - s0x*s1z;\r\n\t\t\tnz = s0x*s1y - s0y*s1x;\r\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\r\n\t\t\tnx *= nl;\r\n\t\t\tny *= nl;\r\n\t\t\tnz *= nl;\r\n\r\n\t\t\t// -- plane intersection test --\r\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\r\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\r\n\t\t\t\t// find collision t\r\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\r\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\r\n\t\t\t\tt = disToPlane/nDotV;\r\n\t\t\t\t// find collision point\r\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\r\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\r\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\r\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\r\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\r\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\r\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\r\n\t\t\t\trx = cx - p0x;\r\n\t\t\t\try = cy - p0y;\r\n\t\t\t\trz = cz - p0z;\r\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\r\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\r\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\r\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\r\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\r\n\t\t\t\tif (v < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif (w < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tu = 1 - v - w;\r\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\r\n\t\t\t\t\tshortestCollisionDistance = t;\r\n\t\t\t\t\tcollisionTriangleIndex = index/3;\r\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\r\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\r\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\r\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\t\tpickingCollisionVO.index = index;\r\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tif (collisionTriangleIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\r\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\r\n\t\t//this will only work while all points lie on the x/y plane\r\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\r\n\r\n\t\tvar result:Vector3D = new Vector3D();\r\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\r\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\r\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\r\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\r\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\r\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\r\n\t\trayDirection.scaleBy(t);\r\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\r\n\r\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\r\n\t\tvar collisionCurveIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\r\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\r\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\r\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\r\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\r\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\r\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\r\n\r\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\r\n\t\t{\r\n\t\t\tvar id0:number = indices[index];\r\n\t\t\tvar id1:number = indices[index + 1] * posDim;\r\n\t\t\tvar id2:number = indices[index + 2] * posDim;\r\n\r\n\t\t\tvar ax:number = positions[id0 * posDim];\r\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\r\n\t\t\tvar bx:number = positions[id1];\r\n\t\t\tvar by:number = positions[id1 + 1];\r\n\t\t\tvar cx:number = positions[id2];\r\n\t\t\tvar cy:number = positions[id2 + 1];\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - p.x;\r\n\t\t\tvar dy:number = ay - p.y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = bx - p.x;\r\n\t\t\tdy = by - p.y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = cx - p.x;\r\n\t\t\tdy = cy - p.y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t//check if not solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = p.x - ax;\r\n\t\t\t\tvar v2y:number = p.y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\tvar u:number = 1 - v - w;\r\n\r\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\r\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\r\n\t\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\r\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\r\n\t\t\tif (distance < shortestCollisionDistance) {\r\n\t\t\t\tshortestCollisionDistance = distance;\r\n\t\t\t\tcollisionCurveIndex = index/3;\r\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\r\n\t\t\t\tpickingCollisionVO.localPosition = p;\r\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\r\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\tpickingCollisionVO.index = index;\r\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (collisionCurveIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\r\n\t{\r\n\t\tvar uv:Point = new Point();\r\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\r\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\r\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\r\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\r\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\r\n\t\treturn uv;\r\n\t}\r\n}\r\n\r\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\n\r\n/**\r\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\r\n *\r\n * @see away.base.DisplayObject#pickingCollisionVO\r\n * @see away.core.pick.IPickingCollider\r\n *\r\n * @class away.pick.PickingCollisionVO\r\n */\r\nclass PickingCollisionVO\r\n{\r\n\t/**\r\n\t * The display object to which this collision object belongs.\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\t/**\r\n\t * The local position of the collision on the entity's surface.\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The local normal vector at the position of the collision.\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * The uv coordinate at the position of the collision.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took pl ace.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n//\t\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * Determines if the ray position is contained within the entity bounds.\r\n\t *\r\n\t * @see away3d.entities.Entity#bounds\r\n\t */\r\n\tpublic rayOriginIsInsideBounds:boolean;\r\n\r\n\t/**\r\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\r\n\t */\r\n\tpublic rayEntryDistance:number;\r\n\r\n\t/**\r\n\t * The material ownwer associated with a collision.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * Creates a new <code>PickingCollisionVO</code> object.\r\n\t *\r\n\t * @param entity The entity to which this collision object belongs.\r\n\t */\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n\r\n}\r\n\r\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * Picks a 3d object from a view or scene by 3D raycast calculations.\r\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\r\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\r\n *\r\n * @class away.pick.RaycastPicker\r\n */\r\nclass RaycastPicker implements IPicker\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\tprivate _raycastCollector:RaycastCollector;\r\n\tprivate _ignoredEntities = [];\r\n\tprivate _onlyMouseEnabled:boolean = true;\r\n\r\n\tprivate _entities:Array<IEntity>;\r\n\tprivate _numEntities:number = 0;\r\n\tprivate _hasCollisions:boolean;\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get onlyMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._onlyMouseEnabled;\r\n\t}\r\n\r\n\tpublic set onlyMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._onlyMouseEnabled = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>RaycastPicker</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\r\n\t * or simply returns the first collision encountered. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._raycastCollector = new RaycastCollector();\r\n\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t\tthis._entities = new Array<IEntity>();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\r\n\t{\r\n\t\t//update ray\r\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\r\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\r\n\r\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\r\n\t{\r\n\t\t//clear collector\r\n\t\tthis._raycastCollector.clear();\r\n\r\n\t\t//setup ray vectors\r\n\t\tthis._raycastCollector.rayPosition = rayPosition;\r\n\t\tthis._raycastCollector.rayDirection = rayDirection;\r\n\r\n\t\t// collect entities to test\r\n\t\tscene.traversePartitions(this._raycastCollector);\r\n\r\n\t\tthis._numEntities = 0;\r\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\r\n\t\tvar entity:IEntity;\r\n\r\n\t\twhile (node) {\r\n\t\t\tif (!this.isIgnored(entity = node.entity))\r\n\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n\r\n\t\t\tnode = node.next;\r\n\t\t}\r\n\r\n\t\t//early out if no collisions detected\r\n\t\tif (!this._numEntities)\r\n\t\t\treturn null;\r\n\r\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n\t}\r\n\r\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\r\n//\t\t{\r\n//\t\t\tthis._numEntities = 0;\r\n//\r\n//\t\t\tvar entity:IEntity;\r\n//\t\t\tvar l:number = entities.length;\r\n//\r\n//\t\t\tfor (var c:number = 0; c < l; c++) {\r\n//\t\t\t\tentity = entities[c];\r\n//\r\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\r\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n//\t\t\t}\r\n//\r\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n//\t\t}\r\n\r\n\tpublic setIgnoreList(entities)\r\n\t{\r\n\t\tthis._ignoredEntities = entities;\r\n\t}\r\n\r\n\tprivate isIgnored(entity:IEntity):boolean\r\n\t{\r\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\r\n\t\t\treturn true;\r\n\r\n\t\tvar len:number = this._ignoredEntities.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._ignoredEntities[i] == entity)\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\r\n\t{\r\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\r\n\t}\r\n\r\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\r\n\t{\r\n\t\t// trim before sorting\r\n\t\tthis._entities.length = this._numEntities;\r\n\r\n\t\t// Sort entities from closest to furthest.\r\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\r\n\r\n\t\t// ---------------------------------------------------------------------\r\n\t\t// Evaluate triangle collisions when needed.\r\n\t\t// Replaces collision data provided by bounds collider with more precise data.\r\n\t\t// ---------------------------------------------------------------------\r\n\r\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\r\n\t\tvar bestCollisionVO:PickingCollisionVO;\r\n\t\tvar pickingCollisionVO:PickingCollisionVO;\r\n\t\tvar entity:IEntity;\r\n\t\tvar i:number;\r\n\r\n\t\tfor (i = 0; i < this._numEntities; ++i) {\r\n\t\t\tentity = this._entities[i];\r\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\r\n\t\t\tif (entity.pickingCollider) {\r\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\r\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\r\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\r\n\t\t\t\t\tif (!this._findClosestCollision) {\r\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\r\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\r\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\r\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\r\n\t\t\t\t// if it has been established that there is NO triangle collider to test\r\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\r\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn bestCollisionVO;\r\n\t}\r\n\r\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\r\n\t{\r\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\r\n\r\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\r\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\r\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\r\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n}\r\n\r\nexport = RaycastPicker;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\n\r\n/**\r\n * @class away.pool.EntityListItemPool\r\n */\r\nclass EntityListItemPool\r\n{\r\n\tprivate _pool:Array<EntityListItem>;\r\n\tprivate _index:number = 0;\r\n\tprivate _poolSize:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pool = new Array<EntityListItem>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getItem():EntityListItem\r\n\t{\r\n\t\tvar item:EntityListItem;\r\n\t\tif (this._index == this._poolSize) {\r\n\t\t\titem = new EntityListItem();\r\n\t\t\tthis._pool[this._index++] = item;\r\n\t\t\t++this._poolSize;\r\n\t\t} else {\r\n\t\t\titem = this._pool[this._index++];\r\n\t\t}\r\n\t\treturn item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic freeAll()\r\n\t{\r\n\t\tthis._index = 0;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pool.length = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.pool.EntityListItem\r\n */\r\nclass EntityListItem\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic entity:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic next:EntityListItem;\r\n}\r\n\r\nexport = EntityListItem;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\r\n\r\n/**\r\n * @class away.pool.EntityNodePool\r\n */\r\nclass EntityNodePool\r\n{\r\n\tprivate _entityNodePool:Object = new Object();\r\n\tprivate _entityNodeClass:IEntityNodeClass;\r\n\tprivate _partition:Partition;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entityNodeClass\r\n\t */\r\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\r\n\t{\r\n\t\tthis._entityNodeClass = entityNodeClass;\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic disposeItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\tvar entityNode:EntityNode = this._entityNodePool[entity.id];\r\n\r\n\t\tif (entityNode) {\r\n\t\t\tentity._iRemoveEntityNode(entityNode);\r\n\r\n\t\t\tthis._entityNodePool[entity.id] = null;\r\n\t\t}\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n}\r\n\r\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\r\n\r\n/**\r\n * @class away.pool.SubMeshPool\r\n */\r\nclass SubMeshPool\r\n{\r\n\tprivate static classPool:Object = new Object();\r\n\r\n\t/**\r\n\t *\r\n\t * @param subMeshClass\r\n\t */\r\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\r\n\t{\r\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\r\n\t{\r\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\r\n\t}\r\n\r\n\tprivate static main = SubMeshPool.addDefaults();\r\n\r\n\tprivate static addDefaults()\r\n\t{\r\n\t\tSubMeshPool.registerClass(LineSubMesh);\r\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\r\n\t\tSubMeshPool.registerClass(CurveSubMesh);\r\n\t}\r\n}\r\n\r\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\r\n */\r\nclass PrefabBase extends AssetBase\r\n{\r\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\r\n\r\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\r\n\r\n\t/**\r\n\t * Creates a new PrefabBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a display object generated from this prefab\r\n\t */\r\n\tpublic getNewObject():DisplayObject\r\n\t{\r\n\t\tvar object:DisplayObject = this._pCreateObject();\r\n\r\n\t\tthis._pObjects.push(object);\r\n\r\n\t\treturn object;\r\n\t}\r\n\r\n//\t\tpublic getNewBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\r\n//\r\n//\t\t\tthis._pBatchObjects.push(object);\r\n//\r\n//\t\t\treturn object;\r\n//\t\t}\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\t// To be overridden when necessary\r\n\t}\r\n}\r\n\r\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Capsule primitive mesh.\r\n */\r\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _height:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the capsule.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the capsule.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Capsule object.\r\n\t * @param radius The radius of the capsule.\r\n\t * @param height The height of the capsule.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\r\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._height = height;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar triIndex:number = 0;\r\n\t\tvar index:number = 0;\r\n\t\tvar startIndex:number;\r\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\r\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tstartIndex = index;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\r\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\r\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\r\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\r\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// vertex\r\n\t\t\t\t\t\tpositions[index] = x;\r\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\r\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\r\n\t\t\t\t\t\t// normal\r\n\t\t\t\t\t\tnormals[index] = x*normLen;\r\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\r\n\t\t\t\t\t\t// tangent\r\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[index + 1] = t1;\r\n\t\t\t\t\t\ttangents[index + 2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV Cone primitive mesh.\r\n */\r\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cone.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cone object.\r\n\t * @param radius The radius of the bottom end of the cone\r\n\t * @param height The height of the cone\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cube primitive prefab.\r\n */\r\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _depth:number;\r\n\tprivate _tile6:boolean;\r\n\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _segmentsD:number;\r\n\r\n\t/**\r\n\t * Creates a new Cube object.\r\n\t * @param width The size of the cube along its X-axis.\r\n\t * @param height The size of the cube along its Y-axis.\r\n\t * @param depth The size of the cube along its Z-axis.\r\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\r\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\r\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._depth = depth;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._segmentsD = segmentsD;\r\n\t\tthis._tile6 = tile6;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its X-axis.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Y-axis.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Z-axis.\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._depth;\r\n\t}\r\n\r\n\tpublic set depth(value:number)\r\n\t{\r\n\t\tthis._depth = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\r\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\r\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\r\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\r\n\t * several shared edges (between the top, front, left and right faces) which simplifies\r\n\t * texture painting.\r\n\t */\r\n\tpublic get tile6():boolean\r\n\t{\r\n\t\treturn this._tile6;\r\n\t}\r\n\r\n\tpublic set tile6(value:boolean)\r\n\t{\r\n\t\tthis._tile6 = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsD():number\r\n\t{\r\n\t\treturn this._segmentsD;\r\n\t}\r\n\r\n\tpublic set segmentsD(value:number)\r\n\t{\r\n\t\tthis._segmentsD = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\t\t\r\n\t\tvar tl:number, tr:number, bl:number, br:number;\r\n\t\tvar i:number, j:number, inc:number = 0;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\t\tvar hw:number, hh:number, hd:number; // halves\r\n\t\tvar dw:number, dh:number, dd:number; // deltas\r\n\r\n\t\tvar outer_pos:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\t// half cube dimensions\r\n\t\thw = this._width/2;\r\n\t\thh = this._height/2;\r\n\t\thd = this._depth/2;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// Segment dimensions\r\n\t\t\tdw = this._width/this._segmentsW;\r\n\t\t\tdh = this._height/this._segmentsH;\r\n\t\t\tdd = this._depth/this._segmentsD;\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// front\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// back\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = 1;\r\n\t\t\t\t\ttangents[vidx] = -1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\t// top\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// bottom\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = -1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\touter_pos = hd - i*dd;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// left\r\n\t\t\t\t\tpositions[vidx] = -hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = -1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = -1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// right\r\n\t\t\t\t\tpositions[vidx] = hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = 1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = 1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\t\t\t\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t//front/back face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t//left/right face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\t//top/bottom face\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number, index:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tvar u_tile_dim:number, v_tile_dim:number;\r\n\t\tvar u_tile_step:number, v_tile_step:number;\r\n\t\tvar tl0u:number, tl0v:number;\r\n\t\tvar tl1u:number, tl1v:number;\r\n\t\tvar du:number, dv:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._tile6) {\r\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\r\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\r\n\t\t\t} else {\r\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\r\n\t\t\t\tu_tile_step = v_tile_step = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Create planes two and two, the same way that they were\r\n\t\t\t// constructed in the buildGeometry() function. First calculate\r\n\t\t\t// the top-left UV coordinate for both planes, and then loop\r\n\t\t\t// over the points, calculating the UVs from these numbers.\r\n\r\n\t\t\t// When tile6 is true, the layout is as follows:\r\n\t\t\t//       .-----.-----.-----. (1,1)\r\n\t\t\t//       | Bot |  T  | Bak |\r\n\t\t\t//       |-----+-----+-----|\r\n\t\t\t//       |  L  |  F  |  R  |\r\n\t\t\t// (0,0)'-----'-----'-----'\r\n\r\n\t\t\tindex = 0;\r\n\r\n\t\t\t// FRONT / BACK\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// TOP / BOTTOM\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 0*v_tile_step;\r\n\t\t\ttl1u = 0*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsD;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// LEFT / RIGHT\r\n\t\t\ttl0u = 0*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 1*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsD;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cylinder primitive mesh.\r\n */\r\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tpublic _pBottomRadius:number;\r\n\tpublic _pSegmentsW:number;\r\n\tpublic _pSegmentsH:number;\r\n\r\n\tprivate _topRadius:number;\r\n\tprivate _height:number;\r\n\r\n\tprivate _topClosed:boolean;\r\n\tprivate _bottomClosed:boolean;\r\n\tprivate _surfaceClosed:boolean;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get topRadius():number\r\n\t{\r\n\t\treturn this._topRadius;\r\n\t}\r\n\r\n\tpublic set topRadius(value:number)\r\n\t{\r\n\t\tthis._topRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cylinder.\r\n\t */\r\n\tpublic get bottomRadius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set bottomRadius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\tpublic setSegmentsW(value:number)\r\n\t{\r\n\t\tthis._pSegmentsW = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis.setSegmentsH(value)\r\n\r\n\t}\r\n\r\n\tpublic setSegmentsH(value:number)\r\n\t{\r\n\t\tthis._pSegmentsH = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the top end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get topClosed():boolean\r\n\t{\r\n\t\treturn this._topClosed;\r\n\t}\r\n\r\n\tpublic set topClosed(value:boolean)\r\n\t{\r\n\t\tthis._topClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get bottomClosed():boolean\r\n\t{\r\n\t\treturn this._bottomClosed;\r\n\t}\r\n\r\n\tpublic set bottomClosed(value:boolean)\r\n\t{\r\n\t\tthis._bottomClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cylinder object.\r\n\t * @param topRadius The radius of the top end of the cylinder.\r\n\t * @param bottomRadius The radius of the bottom end of the cylinder\r\n\t * @param height The radius of the bottom end of the cylinder\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\r\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._topRadius = topRadius;\r\n\t\tthis._pBottomRadius = bottomRadius;\r\n\t\tthis._height = height;\r\n\t\tthis._pSegmentsW = segmentsW;\r\n\t\tthis._pSegmentsH = segmentsH;\r\n\t\tthis._topClosed = topClosed;\r\n\t\tthis._bottomClosed = bottomClosed;\r\n\t\tthis._surfaceClosed = surfaceClosed;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\r\n\t\tvar radius:number;\r\n\t\tvar revolutionAngle:number;\r\n\r\n\t\tvar dr:number;\r\n\t\tvar latNormElev:number;\r\n\t\tvar latNormBase:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar startIndex:number = 0;\r\n\t\tvar nextVertexIndex:number = 0;\r\n\t\tvar centerVertexIndex:number = 0;\r\n\r\n\t\tvar t1:number;\r\n\t\tvar t2:number;\r\n\r\n\t\t// reset utility variables\r\n\t\tthis._numVertices = 0;\r\n\r\n\t\t// evaluate revolution steps\r\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\r\n\t\t\t}\r\n\t\t\tif (this._topClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\r\n\t\t\t}\r\n\t\t\tif (this._bottomClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\r\n\t\t\t\tnumIndices += this._pSegmentsW*3;\r\n\t\t\t}\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed && this._topRadius > 0) {\r\n\r\n\t\t\t\tz = -0.5*this._height;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = 1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = -1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\r\n\r\n\t\t\t\tz = 0.5*this._height;\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = -1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = 1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\r\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\r\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\r\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\r\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\r\n\t\t\tlatNormElev = dr/this._height;\r\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tvar a:number;\r\n\t\t\t\tvar b:number;\r\n\t\t\t\tvar c:number;\r\n\t\t\t\tvar d:number;\r\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\t\tt2 = -na0;\r\n\t\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\r\n\t\t\t\t\t\t\tnaComp2 = na1;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tt1 = -na0;\r\n\t\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t\t\tnaComp1 = na1;\r\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\r\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t\t// close triangle\r\n\t\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\r\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\t\t\tvar _radius = 50;\r\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\r\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar revolutionAngle:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\r\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Plane primitive mesh.\r\n */\r\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _doubleSided:boolean;\r\n\r\n\t/**\r\n\t * Creates a new Plane object.\r\n\t * @param width The width of the plane.\r\n\t * @param height The height of the plane.\r\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\r\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\r\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\r\n\t{\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._doubleSided = doubleSided;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\r\n\t * false, respectively. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\r\n\t */\r\n\tpublic get doubleSided():boolean\r\n\t{\r\n\t\treturn this._doubleSided;\r\n\t}\r\n\r\n\tpublic set doubleSided(value:boolean)\r\n\t{\r\n\t\tthis._doubleSided = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the plane.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the plane.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar x:number, y:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar base:number;\r\n\t\tvar tw:number = this._segmentsW + 1;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar xi:number;\r\n\t\tvar yi:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar normals:Float32Array;\r\n\t\t\tvar tangents:Float32Array;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumIndices *= 2;\r\n\r\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\r\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\r\n\r\n\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\r\n\t\t\t\t\t\tpositions[vidx + 2] = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx + 1] = y;\r\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\r\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\r\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\r\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\r\n\r\n\t\t\t\t\t\tbase = xi + yi*tw;\r\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\r\n\r\n\t\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\r\n\t\t\tvar hw:number = this._width/2;\r\n\t\t\tvar hh:number = this._height/2;\r\n\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar uvs:Float32Array;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t\tthis._pInvalidateGeometry()\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\tindex += 2;\r\n\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\t\tindex += 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV RegularPolygon primitive mesh.\r\n */\r\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the regular polygon.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of sides of the regular polygon.\r\n\t */\r\n\tpublic get sides():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set sides(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\t/**\r\n\t * The number of subdivisions from the edge to the center of the regular polygon.\r\n\t */\r\n\tpublic get subdivisions():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set subdivisions(value:number)\r\n\t{\r\n\t\tthis.setSegmentsH(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RegularPolygon disc object.\r\n\t * @param radius The radius of the regular polygon\r\n\t * @param sides Defines the number of sides of the regular polygon.\r\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\n/**\r\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\r\n */\r\nclass PrimitivePrefabBase extends PrefabBase\r\n{\r\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\r\n\r\n\tpublic _geomDirty:boolean = true;\r\n\tpublic _uvDirty:boolean = true;\r\n\tpublic _scaleU:number = 1;\r\n\tpublic _scaleV:number = 1;\r\n\r\n\tprivate _material:MaterialBase;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\tprivate _geometryType:string;\r\n\tprivate _geometryTypeDirty:boolean = true;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn PrimitivePrefabBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get geometryType():string\r\n\t{\r\n\t\treturn this._geometryType;\r\n\t}\r\n\t\r\n\tpublic set geometryType(value:string)\r\n\t{\r\n\t\tif (this._geometryType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._geometryType = value;\r\n\t\t\r\n\t\tthis.invalidateGeometryType();\r\n\t}\r\n\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tthis._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the primitive.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tvar len:number = this._pObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\r\n\t}\r\n\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\tpublic set scaleU(value:number)\r\n\t{\r\n\t\tif (this._scaleU = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleU = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\tpublic set scaleV(value:number)\r\n\t{\r\n\t\tif (this._scaleV = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleV = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates a new PrimitivePrefabBase object.\r\n\t *\r\n\t * @param material The material with which to render the object\r\n\t */\r\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._geometry = new Geometry();\r\n\t\tthis._material = material;\r\n\t\tthis._geometryType = geometryType;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\r\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\r\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\r\n\t */\r\n\tpublic invalidateGeometryType()\r\n\t{\r\n\t\tthis._geometryTypeDirty = true;\r\n\t\tthis._geomDirty = true;\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateGeometry()\r\n\t{\r\n\t\tthis._geomDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateUVs()\r\n\t{\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the subgeometry when invalid.\r\n\t */\r\n\tprivate updateGeometryType()\r\n\t{\r\n\t\t//remove any existing sub geometry\r\n\t\tif (this._subGeometry)\r\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\r\n\r\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\r\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\r\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\r\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\r\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\r\n\t\t\tthis._subGeometry = triangleGeometry;\r\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\r\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\r\n\t\t}\r\n\r\n\t\tthis._geometryTypeDirty = false;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Updates the geometry when invalid.\r\n\t */\r\n\tprivate updateGeometry()\r\n\t{\r\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._geomDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uv coordinates when invalid.\r\n\t */\r\n\tprivate updateUVs()\r\n\t{\r\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._uvDirty = false;\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\tif (this._geometryTypeDirty)\r\n\t\t\tthis.updateGeometryType();\r\n\t\t\r\n\t\tif (this._geomDirty)\r\n\t\t\tthis.updateGeometry();\r\n\r\n\t\tif (this._uvDirty)\r\n\t\t\tthis.updateUVs();\r\n\t}\r\n\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\r\n\t\tmesh._iSourcePrefab = this;\r\n\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\r\n//\t\tpublic _pCreateBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\r\n//\t\t\tbatch._iSourcePrefab = this;\r\n//\r\n//\t\t\treturn batch;\r\n//\t\t}\r\n}\r\n\r\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Sphere primitive mesh.\r\n */\r\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\r\n\t/**\r\n\t * The radius of the sphere.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Sphere object.\r\n\t *\r\n\t * @param radius The radius of the sphere.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\r\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar numVertices:number;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvar startIndex:number;\r\n\t\t\tvar t1:number;\r\n\t\t\tvar t2:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tstartIndex = vidx;\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\r\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\r\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Cylinder primitive mesh.\r\n */\r\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _tubeRadius:number;\r\n\tprivate _segmentsR:number;\r\n\tprivate _segmentsT:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the torus.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the inner tube of the torus.\r\n\t */\r\n\tpublic get tubeRadius():number\r\n\t{\r\n\t\treturn this._tubeRadius;\r\n\t}\r\n\r\n\tpublic set tubeRadius(value:number)\r\n\t{\r\n\t\tthis._tubeRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsR():number\r\n\t{\r\n\t\treturn this._segmentsR;\r\n\t}\r\n\r\n\tpublic set segmentsR(value:number)\r\n\t{\r\n\t\tthis._segmentsR = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\r\n\t */\r\n\tpublic get segmentsT():number\r\n\t{\r\n\t\treturn this._segmentsT;\r\n\t}\r\n\r\n\tpublic set segmentsT(value:number)\r\n\t{\r\n\t\tthis._segmentsT = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>Torus</code> object.\r\n\t * @param radius The radius of the torus.\r\n\t * @param tuebRadius The radius of the inner tube of the torus.\r\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\r\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\r\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._tubeRadius = tubeRadius;\r\n\t\tthis._segmentsR = segmentsR;\r\n\t\tthis._segmentsT = segmentsT;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\r\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\r\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\r\n\r\n\t\t\tvar comp1:number, comp2:number;\r\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\r\n\t\t\tvar startIndex:number = 0;\r\n\t\t\tvar nextVertexIndex:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\r\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\r\n\r\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\r\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\r\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\r\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\r\n\r\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\r\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\r\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tn1 = -nz;\r\n\t\t\t\t\t\tn2 = ny;\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tn1 = ny;\r\n\t\t\t\t\t\tn2 = nz;\r\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsR) {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = nx;\r\n\t\t\t\t\tnormals[vidx + 1] = n1;\r\n\t\t\t\t\tnormals[vidx + 2] = n2;\r\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\r\n\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// close triangle\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\r\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.RenderableMergeSort\r\n */\r\nclass RenderableMergeSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable;\r\n\t\tvar slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortBlendedRenderables(head);\r\n\t\theadB = this.sortBlendedRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB) {\r\n\t\t\tif (head.zIndex < headB.zIndex) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result)\r\n\t\t\t\tresult = l; else\r\n\t\t\t\tcurr.next = l;\r\n\r\n\t\t\tcurr = l;\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable, slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortOpaqueRenderables(head);\r\n\t\theadB = this.sortOpaqueRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\t\tvar cmp:number = 0;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB && head != null && headB != null) {\r\n\r\n\t\t\t// first sort per render order id (reduces program3D switches),\r\n\t\t\t// then on render object id (reduces setting props),\r\n\t\t\t// then on zIndex (reduces overdraw)\r\n\t\t\tvar aid:number = head.renderOrderId;\r\n\t\t\tvar bid:number = headB.renderOrderId;\r\n\r\n\t\t\tif (aid == bid) {\r\n\t\t\t\tvar ma:number = head.renderId;\r\n\t\t\t\tvar mb:number = headB.renderId;\r\n\r\n\t\t\t\tif (ma == mb) {\r\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\r\n\t\t\t\t\t\tcmp = 1; else\r\n\t\t\t\t\t\tcmp = -1;\r\n\t\t\t\t} else if (ma > mb) {\r\n\t\t\t\t\tcmp = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcmp = -1;\r\n\t\t\t\t}\r\n\t\t\t} else if (aid > bid) {\r\n\t\t\t\tcmp = 1;\r\n\t\t\t} else {\r\n\t\t\t\tcmp = -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (cmp < 0) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result) {\r\n\t\t\t\tresult = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t} else {\r\n\t\t\t\tcurr.next = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.NullSort\r\n */\r\nclass RenderableNullSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n}\r\n\r\nexport = RenderableNullSort;",
    "/**\r\n * The AntiAliasType class provides values for anti-aliasing in the\r\n * away.text.TextField class.\r\n */\r\nclass AntiAliasType\r\n{\r\n\t/**\r\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\r\n\t * allows font faces to be rendered at very high quality at small sizes. It\r\n\t * is best used with applications that have a lot of small text. Advanced\r\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\r\n\t * points). This constant is used for the <code>antiAliasType</code> property\r\n\t * in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t */\r\n\tpublic static ADVANCED:string = \"advanced\";\r\n\r\n\t/**\r\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\r\n\t * earlier. This setting is recommended for applications that do not have a\r\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\r\n\t * property in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.NORMAL</code>.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n}\r\n\r\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass Font extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Font]\";\r\n\r\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Font.assetType;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\t/**\r\n\t *Get a font-table for a specific name, or create one if it does not exists.\r\n\t */\r\n\tpublic get_font_table(style_name:string):FontTable\r\n\t{\r\n\t\tvar len:number = this._font_styles.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tif(this._font_styles[i].name==style_name)\r\n\t\t\t\treturn this._font_styles[i];\r\n\t\t}\r\n\t\tvar font_style:FontTable = new FontTable();\r\n\t\tfont_style.name=style_name;\r\n\t\tthis._font_styles.push(font_style);\r\n\t\treturn font_style;\r\n\t}\r\n\r\n}\r\n\r\nexport = Font;",
    "/**\r\n * The GridFitType class defines values for grid fitting in the TextField class.\r\n */\r\nclass GridFitType\r\n{\r\n\t/**\r\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\r\n\t * not forced to the pixel grid. This constant is used in setting the\r\n\t * <code>gridFitType</code> property of the TextField class. This is often a\r\n\t * good setting for animation or for large font sizes. Use the syntax\r\n\t * <code>GridFitType.NONE</code>.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\r\n\t * is used in setting the <code>gridFitType</code> property of the TextField\r\n\t * class. This setting only works for left-justified text fields and acts\r\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\r\n\t * setting generally provides the best readability for left-aligned text. Use\r\n\t * the syntax <code>GridFitType.PIXEL</code>.\r\n\t */\r\n\tpublic static PIXEL:string = \"pixel\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\r\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\r\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\r\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\r\n\t * constant is used in setting the <code>gridFitType</code> property of the\r\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\r\n\t */\r\n\tpublic static SUBPIXEL:string = \"subpixel\";\r\n}\r\n\r\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TesselatedFontChar\r\n{\r\n\r\n\t/**\r\n\t * The width of the char\r\n\t */\r\n\tpublic char_width:number;\r\n\r\n\t/**\r\n\t * SubGeometry for this char\r\n\t */\r\n\tpublic subgeom:CurveSubGeometry;\r\n\r\n\t/**\r\n\t * the char_codes that this geom has kerning set for\r\n\t */\r\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\r\n\t/**\r\n\t * the kerning values per char_code\r\n\t */\r\n\tpublic kerningValues:Array<number>=new Array<number>();\r\n\r\n\r\n\tconstructor(subgeom:CurveSubGeometry)\r\n\t{\r\n\t\tthis.char_width=0;\r\n\t\tthis.subgeom = subgeom;\r\n\t\tif (this.subgeom != null) {\r\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\r\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\r\n\t\t\t\tif(positions2[v*3]>this.char_width)\r\n\t\t\t\t\tthis.char_width=positions2[v*3];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontChar;",
    "\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass TesselatedFontTable extends AssetBase\r\n{\r\n\tprivate _font_chars:Array<TesselatedFontChar>;\r\n\tprivate _font_chars_dic:Object;\r\n\tprivate _font_em_size:number;\r\n\tprivate _whitespace_width:number;\r\n\tprivate _charDictDirty:Boolean;\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\r\n\t\tthis._font_chars_dic = new Object();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic get_font_chars():Array<TesselatedFontChar>\r\n\t{\r\n\t\treturn this._font_chars\r\n\t}\r\n\tpublic get_font_em_size():number\r\n\t{\r\n\t\treturn this._font_em_size\r\n\t}\r\n\tpublic set_whitespace_width(value:number):void\r\n\t{\r\n\t\tthis._whitespace_width=value;\r\n\t}\r\n\tpublic get_whitespace_width():number\r\n\t{\r\n\t\treturn this._whitespace_width\r\n\t}\r\n\tpublic set_font_em_size(font_em_size:number):void\r\n\t{\r\n\t\tthis._font_em_size=font_em_size;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\r\n\t{\r\n\t\treturn this._font_chars_dic[char];\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\r\n\t{\r\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\r\n\t\tsubgeo.name=char;\r\n\t\tthis._font_chars.push(tesselated_font_char);\r\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontTable;",
    "/**\r\n * The TextFieldAutoSize class is an enumeration of constant values used in\r\n * setting the <code>autoSize</code> property of the TextField class.\r\n */\r\nclass TextFieldAutoSize\r\n{\r\n\t/**\r\n\t * Specifies that the text is to be treated as center-justified text. Any\r\n\t * resizing of a single line of a text field is equally distributed to both\r\n\t * the right and left sides.\r\n\t */\r\n\tpublic static CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as left-justified text, meaning\r\n\t * that the left side of the text field remains fixed and any resizing of a\r\n\t * single line is on the right side.\r\n\t */\r\n\tpublic static LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Specifies that no resizing is to occur.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as right-justified text, meaning\r\n\t * that the right side of the text field remains fixed and any resizing of a\r\n\t * single line is on the left side.\r\n\t */\r\n\tpublic static RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFieldAutoSize;",
    "/**\r\n * The TextFieldType class is an enumeration of constant values used in setting the\r\n * <code>type</code> property of the TextField class.\r\n *\r\n * @see away.entities.TextField#type\r\n */\r\nclass TextFieldType\r\n{\r\n\t/**\r\n\t * Used to specify a <code>dynamic</code> TextField.\r\n\t */\r\n\tpublic static DYNAMIC:string = \"dynamic\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>input</code> TextField.\r\n\t */\r\n\tpublic static INPUT:string = \"input\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>static</code> TextField.\r\n\t */\r\n\tpublic static STATIC:string = \"input\";\r\n}\r\n\r\nexport = TextFieldType;",
    "/**\r\n * The TextFormatAlign class provides values for text alignment in the\r\n * TextFormat class.\r\n */\r\nclass TextFormatAlign\r\n{\r\n\t/**\r\n\t * Constant; centers the text in the text field. Use the syntax\r\n\t * <code>TextFormatAlign.CENTER</code>.\r\n\t */\r\n\tpublic CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Constant; justifies text within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.JUSTIFY</code>.\r\n\t */\r\n\tpublic JUSTIFY:string = \"justify\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the left within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.LEFT</code>.\r\n\t */\r\n\tpublic LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the right within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.RIGHT</code>.\r\n\t */\r\n\tpublic RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TextFormat extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset TextFormat]\";\r\n\r\n\t/**\r\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\r\n\t * constants.\r\n\t *\r\n\t * @default TextFormatAlign.LEFT\r\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\r\n\t *                       flash.text.TextFormatAlign.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic align:string;\r\n\r\n\r\n\t/**\r\n\t * Indicates the block indentation in pixels. Block indentation is applied to\r\n\t * an entire block of text; that is, to all lines of the text. In contrast,\r\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\r\n\t * line of each paragraph. If this property is <code>null</code>, the\r\n\t * TextFormat object does not specify block indentation(block indentation is\r\n\t * 0).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic blockIndent:number;\r\n\r\n\t/**\r\n\t * Specifies whether the text is boldface. The default value is\r\n\t * <code>null</code>, which means no boldface is used. If the value is\r\n\t * <code>true</code>, then the text is boldface.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\r\n\tpublic bold:boolean;\r\n\r\n\t/**\r\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\r\n\t * each paragraph of text is indented. To the left of the first line of each\r\n\t * paragraph, a bullet symbol is displayed. The default value is\r\n\t * <code>null</code>, which means no bulleted list is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\r\n\tpublic bullet:boolean;\r\n\r\n\t/**\r\n\t * Indicates the color of the text. A number containing three 8-bit RGB\r\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\r\n\t * default value is <code>null</code>, which means that Flash Player uses the\r\n\t * color black(0x000000).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\r\n\tpublic color:boolean;\r\n\r\n\r\n\t/**\r\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv-values of the colors in textureatlas.\r\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\r\n\t */\r\n\tpublic uv_values:Array<number>;\r\n\r\n\t/**\r\n\t * The name of the font for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\r\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\r\n\t */\r\n\tpublic font_name:string;\r\n\t/**\r\n\t * The name of the font-style for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-style can be used to get a Font-table, from a Font-object.\r\n\t */\r\n\tpublic font_style:string;\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic font_table:TesselatedFontTable;\r\n\r\n\t/**\r\n\t * Indicates the indentation from the left margin to the first character in\r\n\t * the paragraph. The default value is <code>null</code>, which indicates\r\n\t * that no indentation is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic indent:number;\r\n\r\n\t/**\r\n\t * Indicates whether text in this text format is italicized. The default\r\n\t * value is <code>null</code>, which means no italics are used.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\r\n\tpublic italic:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether kerning is enabled\r\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\r\n\t * pixels between certain character pairs to improve readability, and should\r\n\t * be used only when necessary, such as with headings in large fonts. Kerning\r\n\t * is supported for embedded fonts only.\r\n\t *\r\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\r\n\t * New, do not support kerning.</p>\r\n\t *\r\n\t * <p>The default value is <code>null</code>, which means that kerning is not\r\n\t * enabled.</p>\r\n\t */\r\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\r\n\tpublic kerning:boolean;\r\n\r\n\t/**\r\n\t * An integer representing the amount of vertical space(called\r\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\r\n\t * which indicates that the amount of leading used is 0.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The left margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leftMargin:number;\r\n\r\n\t/**\r\n\t * A number representing the amount of space that is uniformly distributed\r\n\t * between all characters. The value specifies the number of pixels that are\r\n\t * added to the advance after each character. The default value is\r\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\r\n\t * You can use decimal values such as <code>1.75</code>.\r\n\t */\r\n\tpublic letterSpacing:number;\r\n\r\n\t/**\r\n\t * The right margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic rightMargin:number;\r\n\r\n\t/**\r\n\t * The size in pixels of text in this text format. The default value is\r\n\t * <code>null</code>, which means that a size of 12 is used.\r\n\t */\r\n\tpublic size:number;\r\n\r\n\t/**\r\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\r\n\t * stop is specified in pixels. If custom tab stops are not specified\r\n\t * (<code>null</code>), the default tab stop is 4(average character width).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\r\n\r\n\t/**\r\n\t * Indicates the target window where the hyperlink is displayed. If the\r\n\t * target window is an empty string, the text is displayed in the default\r\n\t * target window <code>_self</code>. You can choose a custom name or one of\r\n\t * the following four names: <code>_self</code> specifies the current frame\r\n\t * in the current window, <code>_blank</code> specifies a new window,\r\n\t * <code>_parent</code> specifies the parent of the current frame, and\r\n\t * <code>_top</code> specifies the top-level frame in the current window. If\r\n\t * the <code>TextFormat.url</code> property is an empty string or\r\n\t * <code>null</code>, you can get or set this property, but the property will\r\n\t * have no effect.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic link_target:string;\r\n\r\n\t/**\r\n\t * Indicates whether the text that uses this text format is underlined\r\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\r\n\t * similar to that produced by the <code><U></code> tag, but the latter is\r\n\t * not true underlining, because it does not skip descenders correctly. The\r\n\t * default value is <code>null</code>, which indicates that underlining is\r\n\t * not used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic underline:boolean;\r\n\r\n\t/**\r\n\t * Indicates the target URL for the text in this text format. If the\r\n\t * <code>url</code> property is an empty string, the text does not have a\r\n\t * hyperlink. The default value is <code>null</code>, which indicates that\r\n\t * the text does not have a hyperlink.\r\n\t *\r\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\r\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic url:string;\r\n\r\n\t/**\r\n\t * Creates a TextFormat object with the specified properties. You can then\r\n\t * change the properties of the TextFormat object to change the formatting of\r\n\t * text fields.\r\n\t *\r\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\r\n\t * not defined. All of the parameters are optional; any omitted parameters\r\n\t * are treated as <code>null</code>.</p>\r\n\t *\r\n\t * @param font        The name of a font for text as a string.\r\n\t * @param size        An integer that indicates the size in pixels.\r\n\t * @param color       The color of text using this text format. A number\r\n\t *                    containing three 8-bit RGB components; for example,\r\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\r\n\t * @param bold        A Boolean value that indicates whether the text is\r\n\t *                    boldface.\r\n\t * @param italic      A Boolean value that indicates whether the text is\r\n\t *                    italicized.\r\n\t * @param underline   A Boolean value that indicates whether the text is\r\n\t *                    underlined.\r\n\t * @param url         The URL to which the text in this text format\r\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\r\n\t *                    text does not have a hyperlink.\r\n\t * @param target      The target window where the hyperlink is displayed. If\r\n\t *                    the target window is an empty string, the text is\r\n\t *                    displayed in the default target window\r\n\t *                    <code>_self</code>. If the <code>url</code> parameter\r\n\t *                    is set to an empty string or to the value\r\n\t *                    <code>null</code>, you can get or set this property,\r\n\t *                    but the property will have no effect.\r\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\r\n\t *                    value.\r\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\r\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\r\n\t * @param indent      An integer that indicates the indentation from the left\r\n\t *                    margin to the first character in the paragraph.\r\n\t * @param leading     A number that indicates the amount of leading vertical\r\n\t *                    space between lines.\r\n\t */\r\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.font_name = font;\r\n\t\tthis.size = size;\r\n\t\tthis.bold = bold;\r\n\t\tthis.italic = italic;\r\n\t\tthis.underline = underline;\r\n\t\tthis.url = url;\r\n\t\tthis.link_target = link_target;\r\n\t\tthis.align = align;\r\n\t\tthis.leftMargin = leftMargin;\r\n\t\tthis.rightMargin = rightMargin;\r\n\t\tthis.indent = indent;\r\n\t\tthis.leading = leading;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextFormat.assetType;\r\n\t}\r\n}\r\n\r\nexport = TextFormat;",
    "/**\r\n * A class that defines the Interactive mode of a text field object.\r\n *\r\n * @see away.entities.TextField#textInteractionMode\r\n */\r\nclass TextInteractionMode\r\n{\r\n\t/**\r\n\t * The text field's default interaction mode is NORMAL and it varies across\r\n\t * platform. On Desktop, the normal mode implies that the text field is in\r\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\r\n\t * implies that the text field can only be scrolled but the text can not be\r\n\t * selected.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * On mobile platforms like Android, the text field starts in normal mode\r\n\t * (which implies scroll and non-selectable mode). The user can switch to\r\n\t * selection mode through the in-built context menu of the text field object.\r\n\t */\r\n\tpublic static SELECTION:string = \"selection\";\r\n}\r\n\r\nexport = TextInteractionMode;",
    "/**\r\n * The TextLineMetrics class contains information about the text position and\r\n * measurements of a line of text within a text field. All measurements are in\r\n * pixels. Objects of this class are returned by the \r\n * <code>away.entities.TextField.getLineMetrics()</code> method.\r\n */\r\nclass TextLineMetrics\r\n{\r\n\t/**\r\n\t * The ascent value of the text is the length from the baseline to the top of\r\n\t * the line height in pixels.\r\n\t */\r\n\tpublic ascent:number;\r\n\r\n\t/**\r\n\t * The descent value of the text is the length from the baseline to the\r\n\t * bottom depth of the line in pixels.\r\n\t */\r\n\tpublic descent:number;\r\n\r\n\t/**\r\n\t * The height value of the text of the selected lines (not necessarily the\r\n\t * complete text) in pixels. The height of the text line does not include the\r\n\t * gutter height.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The leading value is the measurement of the vertical distance between the\r\n\t * lines of text.\r\n\t */\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The width value is the width of the text of the selected lines (not\r\n\t * necessarily the complete text) in pixels. The width of the text line is\r\n\t * not the same as the width of the text field. The width of the text line is\r\n\t * relative to the text field width, minus the gutter width of 4 pixels\r\n\t * (2 pixels on each side).\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The x value is the left position of the first character in pixels. This\r\n\t * value includes the margin, indent (if any), and gutter widths.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\r\n\t * information about the text metrics of a line of text in a text field.\r\n\t * Objects of this class are returned by the\r\n\t * away.entities.TextField.getLineMetrics() method.\r\n\t *\r\n\t * @param x           The left position of the first character in pixels.\r\n\t * @param width       The width of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param height      The height of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param ascent      The length from the baseline to the top of the line\r\n\t *                    height in pixels.\r\n\t * @param descent     The length from the baseline to the bottom depth of\r\n\t *                    the line in pixels.\r\n\t * @param leading     The measurement of the vertical distance between the\r\n\t *                    lines of text.\r\n\t */\r\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass Single2DTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\r\n\r\n\tprivate _sampler2D:Sampler2D;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Single2DTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Image2D}\r\n\t */\r\n\tpublic get sampler2D():Sampler2D\r\n\t{\r\n\t\treturn this._sampler2D;\r\n\t}\r\n\r\n\tpublic set sampler2D(value:Sampler2D)\r\n\t{\r\n\t\tif (this._sampler2D == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\r\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\r\n\r\n\t\tthis._sampler2D = value;\r\n\r\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:Sampler2D);\r\n\tconstructor(source:Image2D);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof Image2D)\r\n\t\t\tthis.sampler2D = new Sampler2D(source);\r\n\t\telse\r\n\t\t\tthis.sampler2D = source;\r\n\r\n\t}\r\n}\r\n\r\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\r\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n\r\nclass SingleCubeTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\r\n\r\n\tprivate _samplerCube:SamplerCube;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn SingleCubeTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {BitmapData}\r\n\t */\r\n\tpublic get samplerCube():SamplerCube\r\n\t{\r\n\t\treturn this._samplerCube;\r\n\t}\r\n\r\n\tpublic set samplerCube(value:SamplerCube)\r\n\t{\r\n\t\tif (this._samplerCube == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._samplerCube = value;\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:SamplerCube);\r\n\tconstructor(source:ImageCube);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof ImageCube)\r\n\t\t\tthis.samplerCube = new SamplerCube(source);\r\n\t\telse\r\n\t\t\tthis.samplerCube = source;\r\n\t}\r\n}\r\n\r\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\r\n\r\n/**\r\n *\r\n */\r\nclass TextureBase extends AssetBase implements IAsset\r\n{\r\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\r\n\r\n\tpublic _width:number = 1;\r\n\tpublic _height:number = 1;\r\n\r\n\tget width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tget height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateContent():void\r\n\t{\r\n\t\tvar len:number = this._textureVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._textureVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic invalidateSize():void\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\r\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.push(textureVO);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _setSize(width:number, height:number)\r\n\t{\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t}\r\n\r\n}\r\n\r\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.CSSEntityCollector\r\n */\r\nclass CSSEntityCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.traverse.CollectorBase\r\n */\r\nclass CollectorBase\r\n{\r\n\tpublic scene:Scene;\r\n\r\n\tpublic _pEntityHead:EntityListItem;\r\n\tpublic _pEntityListItemPool:EntityListItemPool;\r\n\tpublic _pCamera:Camera;\r\n\tprivate _customCullPlanes:Array<Plane3D>;\r\n\tprivate _cullPlanes:Array<Plane3D>;\r\n\tprivate _numCullPlanes:number = 0;\r\n\tpublic _pNumEntities:number = 0;\r\n\tpublic _pNumInteractiveEntities:number = 0;\r\n\r\n\tpublic isEntityCollector:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tthis._pCamera = value;\r\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get cullPlanes():Array<Plane3D>\r\n\t{\r\n\t\treturn this._customCullPlanes;\r\n\t}\r\n\r\n\tpublic set cullPlanes(value:Array<Plane3D>)\r\n\t{\r\n\t\tthis._customCullPlanes = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get entityHead():EntityListItem\r\n\t{\r\n\t\treturn this._pEntityHead;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numEntities():number\r\n\t{\r\n\t\treturn this._pNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numInteractiveEntities():number\r\n\t{\r\n\t\treturn this._pNumInteractiveEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\r\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\r\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\r\n\t\tthis._pEntityHead = null;\r\n\t\tthis._pEntityListItemPool.freeAll();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\r\n\r\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\treturn enter;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyEntity(entity:IEntity)\r\n\t{\r\n\t\tthis._pNumEntities++;\r\n\r\n\t\tif (entity._iIsMouseEnabled())\r\n\t\t\tthis._pNumInteractiveEntities++;\r\n\r\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\r\n\t\titem.entity = entity;\r\n\r\n\t\titem.next = this._pEntityHead;\r\n\t\tthis._pEntityHead = item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n}\r\n\r\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\n\r\n/**\r\n * @class away.traverse.EntityCollector\r\n */\r\nclass EntityCollector extends CollectorBase\r\n{\r\n\tpublic _pSkybox:Skybox;\r\n\tpublic _pLights:Array<LightBase>;\r\n\tprivate _directionalLights:Array<DirectionalLight>;\r\n\tprivate _pointLights:Array<PointLight>;\r\n\tprivate _lightProbes:Array<LightProbe>;\r\n\r\n\tpublic _pNumLights:number = 0;\r\n\r\n\tprivate _numDirectionalLights:number = 0;\r\n\tprivate _numPointLights:number = 0;\r\n\tprivate _numLightProbes:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._directionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._lightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pointLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get skyBox():Skybox\r\n\t{\r\n\t\treturn this._pSkybox;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pLights = new Array<LightBase>();\r\n\t\tthis._directionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pointLights = new Array<PointLight>();\r\n\t\tthis._lightProbes = new Array<LightProbe>();\r\n\r\n\t\tthis.isEntityCollector = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\tthis._pSkybox = <Skybox> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tsuper.clear();\r\n\r\n\t\tthis._pSkybox = null;\r\n\r\n\t\tif (this._pNumLights > 0)\r\n\t\t\tthis._pLights.length = this._pNumLights = 0;\r\n\r\n\t\tif (this._numDirectionalLights > 0)\r\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\r\n\r\n\t\tif (this._numPointLights > 0)\r\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\r\n\r\n\t\tif (this._numLightProbes > 0)\r\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\r\n * considered intersecting with the defined ray.\r\n *\r\n * @see away.partition.Partition\r\n * @see away.entities.IEntity\r\n *\r\n * @class away.traverse.RaycastCollector\r\n */\r\nclass RaycastCollector extends CollectorBase\r\n{\r\n\tprivate _rayPosition:Vector3D = new Vector3D();\r\n\tprivate _rayDirection:Vector3D = new Vector3D();\r\n\r\n\tpublic _iCollectionMark:number = 0;\r\n\r\n\t/**\r\n\t * Provides the starting position of the ray.\r\n\t */\r\n\tpublic get rayPosition():Vector3D\r\n\t{\r\n\t\treturn this._rayPosition;\r\n\t}\r\n\r\n\tpublic set rayPosition(value:Vector3D)\r\n\t{\r\n\t\tthis._rayPosition = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides the direction vector of the ray.\r\n\t */\r\n\tpublic get rayDirection():Vector3D\r\n\t{\r\n\t\treturn this._rayDirection;\r\n\t}\r\n\r\n\tpublic set rayDirection(value:Vector3D)\r\n\t{\r\n\t\tthis._rayDirection = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RaycastCollector object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\r\n\t *\r\n\t * @param node The Partition3DNode object to frustum-test.\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\r\n\t}\r\n}\r\n\r\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.ShadowCasterCollector\r\n */\r\nclass ShadowCasterCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\r\n\r\n\t\tif (!enter) {\r\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn super.enterNode(node);\r\n\t}\r\n}\r\n\r\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\r\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n/**\r\n * Helper class for casting assets to usable objects\r\n */\r\nclass Cast\r\n{\r\n\tprivate static _colorNames:Object;\r\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\r\n\r\n\tprivate static _notClasses:Object = new Object();\r\n\tprivate static _classes:Object = new Object();\r\n\r\n\tpublic static string(data:any):string\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\treturn data;\r\n\r\n\t\treturn <string> data;\r\n\t}\r\n\r\n\tpublic static byteArray(data:any):ByteArray\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (data instanceof ByteArray)\r\n\t\t\treturn data;\r\n\r\n\t\treturn <ByteArray> data;\r\n\t}\r\n\r\n\t//        public static xml(data:any):XML\r\n\t//        {\r\n\t//            if (typeof(data) == 'function')\r\n\t//                data = new data;\r\n\t//\r\n\t//            if (data is XML)\r\n\t//                return data;\r\n\t//\r\n\t//            return XML(data);\r\n\t//        }\r\n\r\n\tprivate static isHex(str:string):boolean\r\n\t{\r\n\t\tvar length:number /*int*/ = str.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\r\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static tryColor(data:any):number /*uint*/\r\n\t{\r\n\t\tif (typeof(data) == 'number' /*uint*/)\r\n\t\t\treturn Math.floor(<number> data);\r\n\r\n\t\tif (typeof(data) == 'string') {\r\n\t\t\tif (data == \"random\")\r\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\r\n\r\n\t\t\tif (this._colorNames == null) {\r\n\t\t\t\tthis._colorNames = new Object();\r\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\r\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\r\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\r\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\r\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\r\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\r\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\r\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\r\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\r\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\r\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\r\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\r\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\r\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\r\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\r\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\r\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\r\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\r\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\r\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\r\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\r\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\r\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\r\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\r\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\r\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\r\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\r\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\r\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\r\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\r\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\r\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\r\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\r\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\r\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\r\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\r\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\r\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\r\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\r\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\r\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\r\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\r\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\r\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\r\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\r\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\r\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\r\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\r\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\r\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\r\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\r\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\r\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\r\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\r\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\r\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\r\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\r\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\r\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\r\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\r\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\r\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\r\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\r\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\r\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\r\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\r\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\r\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\r\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\r\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\r\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\r\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\r\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\r\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\r\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\r\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\r\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\r\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\r\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\r\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\r\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\r\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\r\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\r\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\r\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\r\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\r\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\r\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\r\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\r\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\r\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\r\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\r\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\r\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\r\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\r\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\r\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\r\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\r\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\r\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\r\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\r\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\r\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\r\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\r\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\r\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\r\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\r\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\r\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\r\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\r\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\r\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\r\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\r\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\r\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\r\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\r\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\r\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\r\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\r\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\r\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\r\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\r\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\r\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\r\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\r\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\r\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\r\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\r\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\r\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\r\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\r\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\r\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\r\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\r\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\r\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\r\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._colorNames[data] != null)\r\n\t\t\t\treturn this._colorNames[data];\r\n\r\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\r\n\t\t\t\treturn parseInt(\"0x\" + data);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static color(data:any):number /*uint*/\r\n\t{\r\n\t\tvar result:number /*uint*/ = this.tryColor(data);\r\n\r\n\t\tif (result == null)\r\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static tryClass(name:string):any\r\n\t{\r\n\t\tif (this._notClasses[name])\r\n\t\t\treturn name;\r\n\r\n\t\tvar result:any = this._classes[name];\r\n\r\n\t\tif (result != null)\r\n\t\t\treturn result;\r\n\r\n\t\ttry {\r\n\t\t\tresult = window[name];\r\n\t\t\tthis._classes[name] = result;\r\n\t\t\treturn result;\r\n\t\t} catch (e /*ReferenceError*/) {\r\n\t\t}\r\n\r\n\t\tthis._notClasses[name] = true;\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic static image2D(data:any):Image2D\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Image2D)\r\n\t\t\treturn data;\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\r\n\r\n\t\tif (data instanceof Sampler2D)\r\n\t\t\treturn (<Sampler2D> data).image2D;\r\n\r\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\r\n\t}\r\n\r\n\tpublic static bitmapTexture(data:any):Single2DTexture\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\treturn data;\r\n\r\n\t\ttry {\r\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\r\n\t\t\treturn new Single2DTexture(bmd);\r\n\t\t} catch (e /*CastError*/) {\r\n\t\t}\r\n\r\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\r\n\t}\r\n}\r\n\r\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\r\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nclass SubGeometryUtils\r\n{\r\n\tprivate static LIMIT_VERTS:number = 0xffff;\r\n\r\n\tprivate static LIMIT_INDICES:number = 0xffffff;\r\n\t\r\n\tprivate static _indexSwap:Array<number> = new Array<number>();\r\n\r\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float4Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar index:number;\r\n\r\n\t\tvar x1:number, x2:number, x3:number;\r\n\t\tvar y1:number, y2:number, y3:number;\r\n\t\tvar z1:number, z2:number, z3:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar d:number;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx1 = positions[index];\r\n\t\t\ty1 = positions[index + 1];\r\n\t\t\tz1 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx2 = positions[index];\r\n\t\t\ty2 = positions[index + 1];\r\n\t\t\tz2 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx3 = positions[index];\r\n\t\t\ty3 = positions[index + 1];\r\n\t\t\tz3 = positions[index + 2];\r\n\t\t\tdx1 = x3 - x1;\r\n\t\t\tdy1 = y3 - y1;\r\n\t\t\tdz1 = z3 - z1;\r\n\t\t\tdx2 = x2 - x1;\r\n\t\t\tdy2 = y2 - y1;\r\n\t\t\tdz2 = z2 - z1;\r\n\t\t\tcx = dz1*dy2 - dy1*dz2;\r\n\t\t\tcy = dx1*dz2 - dz1*dx2;\r\n\t\t\tcz = dy1*dx2 - dx1*dy2;\r\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\t\t\t// length of cross product = 2*triangle area\r\n\r\n\t\t\tfaceNormals[j++] = cx;\r\n\t\t\tfaceNormals[j++] = cy;\r\n\t\t\tfaceNormals[j++] = cz;\r\n\t\t\tfaceNormals[j++] = d;\r\n\t\t}\r\n\r\n\t\toutput.set(faceNormals, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar normals:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear normal values\r\n\t\twhile (i < len) {\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\r\n\t\t//collect face normals\r\n\t\twhile (i < len) {\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tf1 += 4;\r\n\t\t\tf2 += 4;\r\n\t\t\tf3 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise normals collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = normals[i];\r\n\t\t\tvy = normals[i + 1];\r\n\t\t\tvz = normals[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\tnormals[i++] = vx*d;\r\n\t\t\tnormals[i++] = vy*d;\r\n\t\t\tnormals[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(normals);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\t\tvar uvDim:number = uvAttributes.dimensions;\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\r\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar index1:number;\r\n\t\tvar index2:number;\r\n\t\tvar index3:number;\r\n\t\tvar vi:number;\r\n\t\tvar v0:number;\r\n\t\tvar dv1:number;\r\n\t\tvar dv2:number;\r\n\t\tvar denom:number;\r\n\t\tvar x0:number, y0:number, z0:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex1 = indices[i];\r\n\t\t\tindex2 = indices[i + 1];\r\n\t\t\tindex3 = indices[i + 2];\r\n\r\n\t\t\tv0 = uvs[index1*uvDim + 1];\r\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\r\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\r\n\r\n\t\t\tvi = index1*positionDim;\r\n\t\t\tx0 = positions[vi];\r\n\t\t\ty0 = positions[vi + 1];\r\n\t\t\tz0 = positions[vi + 2];\r\n\t\t\tvi = index2*positionDim;\r\n\t\t\tdx1 = positions[vi] - x0;\r\n\t\t\tdy1 = positions[vi + 1] - y0;\r\n\t\t\tdz1 = positions[vi + 2] - z0;\r\n\t\t\tvi = index3*positionDim;\r\n\t\t\tdx2 = positions[vi] - x0;\r\n\t\t\tdy2 = positions[vi + 1] - y0;\r\n\t\t\tdz2 = positions[vi + 2] - z0;\r\n\r\n\t\t\tcx = dv2*dx1 - dv1*dx2;\r\n\t\t\tcy = dv2*dy1 - dv1*dy2;\r\n\t\t\tcz = dv2*dz1 - dv1*dz2;\r\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\r\n\t\t\tfaceTangents[i++] = denom*cx;\r\n\t\t\tfaceTangents[i++] = denom*cy;\r\n\t\t\tfaceTangents[i++] = denom*cz;\r\n\t\t}\r\n\r\n\t\toutput.set(faceTangents, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar tangents:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear tangent values\r\n\t\twhile (i < len) {\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t}\r\n\r\n\t\tvar weight:number;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\t\tvar f4:number = 3;\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\r\n\t\t//collect face tangents\r\n\t\twhile (i < len) {\r\n\t\t\tweight = faceNormals[f4];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tf1 += 3;\r\n\t\t\tf2 += 3;\r\n\t\t\tf3 += 3;\r\n\t\t\tf4 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise tangents collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = tangents[i];\r\n\t\t\tvy = tangents[i + 1];\r\n\t\t\tvz = tangents[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\ttangents[i++] = vx*d;\r\n\t\t\ttangents[i++] = vy*d;\r\n\t\t\ttangents[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(tangents);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\r\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] = j*.5;\r\n\t\t\tuvs[i++] = 1.0 - (j & 1);\r\n\r\n\t\t\tif (++j == 3)\r\n\t\t\t\tj = 0;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\r\n\r\n\t\tvar index:number = 0;\r\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\r\n\r\n\t\twhile (index < count*4) {\r\n\t\t\tif (index/4 & 1) {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t} else {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t}\r\n\r\n\t\t\tindex += 4;\r\n\t\t}\r\n\r\n\t\toutput.set(colors, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] *= scaleU;\r\n\t\t\tuvs[i++] *= scaleV;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\t}\r\n\r\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar positions:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t}\r\n\r\n\t\toutput.set(positions, offset);\r\n\t}\r\n\r\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar normals:Float32Array;\r\n\t\tvar normalDim:number;\r\n\r\n\t\tif (normalAttributes) {\r\n\t\t\tnormals = normalAttributes.get(count, offset);\r\n\t\t\tnormalDim = normalAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar tangents:Float32Array;\r\n\t\tvar tangentDim:number;\r\n\r\n\t\tif (tangentAttributes) {\r\n\t\t\ttangents = tangentAttributes.get(count, offset);\r\n\t\t\ttangentDim = tangentAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar i:number;\r\n\t\tvar i1:number;\r\n\t\tvar i2:number;\r\n\t\tvar vector:Vector3D = new Vector3D();\r\n\t\tvar invTranspose:Matrix3D;\r\n\r\n\t\tif (normalAttributes || tangentAttributes) {\r\n\t\t\tinvTranspose = transform.clone();\r\n\t\t\tinvTranspose.invert();\r\n\t\t\tinvTranspose.transpose();\r\n\t\t}\r\n\r\n\t\tvar vi0:number = 0;\r\n\t\tvar ni0:number = 0;\r\n\t\tvar ti0:number = 0;\r\n\r\n\t\tfor (i = 0; i < count; ++i) {\r\n\t\t\t// bake position\r\n\t\t\ti1 = vi0 + 1;\r\n\t\t\ti2 = vi0 + 2;\r\n\t\t\tvector.x = positions[vi0];\r\n\t\t\tvector.y = positions[i1];\r\n\t\t\tvector.z = positions[i2];\r\n\t\t\tvector = transform.transformVector(vector);\r\n\t\t\tpositions[vi0] = vector.x;\r\n\t\t\tpositions[i1] = vector.y;\r\n\t\t\tpositions[i2] = vector.z;\r\n\t\t\tvi0 += positionDim;\r\n\r\n\t\t\tif\t(normals) {\r\n\t\t\t\t// bake normal\r\n\t\t\t\ti1 = ni0 + 1;\r\n\t\t\t\ti2 = ni0 + 2;\r\n\t\t\t\tvector.x = normals[ni0];\r\n\t\t\t\tvector.y = normals[i1];\r\n\t\t\t\tvector.z = normals[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\tnormals[ni0] = vector.x;\r\n\t\t\t\tnormals[i1] = vector.y;\r\n\t\t\t\tnormals[i2] = vector.z;\r\n\t\t\t\tni0 += normalDim;\r\n\t\t\t}\r\n\r\n\t\t\tif (tangents) {\r\n\t\t\t\t// bake tangent\r\n\t\t\t\ti1 = ti0 + 1;\r\n\t\t\t\ti2 = ti0 + 2;\r\n\t\t\t\tvector.x = tangents[ti0];\r\n\t\t\t\tvector.y = tangents[i1];\r\n\t\t\t\tvector.z = tangents[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\ttangents[ti0] = vector.x;\r\n\t\t\t\ttangents[i1] = vector.y;\r\n\t\t\t\ttangents[i2] = vector.z;\r\n\t\t\t\tti0 += tangentDim;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpositionAttributes.set(positions, offset);\r\n\r\n\t\tif (normalAttributes)\r\n\t\t\tnormalAttributes.set(normals, offset);\r\n\r\n\t\tif (tangentAttributes)\r\n\t\t\ttangentAttributes.set(tangents, offset);\r\n\t}\r\n\r\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\r\n\t{\r\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\r\n\t\tvar numIndices:number = indexAttributes.length;\r\n\t\t\r\n\t\t//reset mappings\r\n\t\tindexMappings.length = 0;\r\n\r\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\r\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\r\n\t\t\treturn buffer;\r\n\r\n\t\tvar i:number;\r\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\r\n\t\tvar splitIndices:Array<number> = new Array<number>();\r\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\r\n\t\t\r\n\r\n\t\tindexSwap.length = numIndices;\r\n\t\tfor (i = 0; i < numIndices; i++)\r\n\t\t\tindexSwap[i] = -1;\r\n\r\n\t\tvar originalIndex:number;\r\n\t\tvar splitIndex:number;\r\n\t\tvar index:number = 0;\r\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\r\n\t\t\r\n\t\t// Loop over all triangles\r\n\t\t\r\n\t\ti = 0;\r\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\r\n\t\t\toriginalIndex = indices[i];\r\n\r\n\t\t\tif (indexSwap[originalIndex] >= 0) {\r\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\r\n\t\t\t} else {\r\n\t\t\t\t// This vertex does not yet exist in the split list and\r\n\t\t\t\t// needs to be copied from the long list.\r\n\t\t\t\tsplitIndex = index++;\r\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\r\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\r\n\t\t\t}\r\n\r\n\t\t\t// Store new index, which may have come from the swap look-up,\r\n\t\t\t// or from copying a new set of vertex data from the original vector\r\n\t\t\tsplitIndices[i++] = splitIndex;\r\n\t\t}\r\n\t\t\r\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\r\n\t\t\r\n\t\tindexAttributes = indexAttributes.clone(buffer);\r\n\t\tindexAttributes.set(splitIndices);\r\n\t\t\r\n\t\treturn buffer;\r\n\t}\r\n\r\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\r\n\t{\r\n\t\tif (!indexMappings.length)\r\n\t\t\treturn vertexBuffer;\r\n\r\n\t\tvar stride:number = vertexBuffer.stride;\r\n\r\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\r\n\r\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\r\n\t\tvar splitIndex:number;\r\n\t\tvar originalIndex:number;\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = indexMappings.length;\r\n\t\tfor (i = 0; i < len; i++) {\r\n\t\t\tsplitIndex = i*stride;\r\n\t\t\toriginalIndex = indexMappings[i]*stride;\r\n\r\n\t\t\tfor (j = 0; j < stride; j++)\r\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\r\n\t\t}\r\n\r\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\r\n\t\tvertexBuffer.bufferView = splitVerts;\r\n\r\n\t\treturn vertexBuffer;\r\n\t}\r\n}\r\n\r\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SceneEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/CSSMaterialBase.ts",
    "awayjs-display/lib/materials/CurveMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/NullNode.ts",
    "awayjs-display/lib/partition/Partition.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/CSSBillboardRenderable.ts",
    "awayjs-display/lib/pool/CSSLineSegmentRenderable.ts",
    "awayjs-display/lib/pool/CSSRenderableBase.ts",
    "awayjs-display/lib/pool/CSSSkyboxRenderable.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/render/CSSDefaultRenderer.ts",
    "awayjs-display/lib/render/CSSRendererBase.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/animators/IAnimationSet",
    "module",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubMesh",
    "CurveSubGeometry",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "material",
    "_pParentMesh",
    "_subGeometry",
    "_iCollectRenderable",
    "rendererPool",
    "applyCurveSubMesh",
    "geometryType",
    "awayjs-core/lib/data/CurveSubGeometry",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "AbstractMethodError",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "SceneEvent",
    "DisplayObject",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pSceneTransformDirty",
    "_matrix3D",
    "_matrix3DDirty",
    "_inverseSceneTransform",
    "_inverseSceneTransformDirty",
    "_scenePosition",
    "_scenePositionDirty",
    "_explicitVisibility",
    "_pImplicitVisibility",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_positionDirty",
    "_rotationDirty",
    "_scaleDirty",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_pScaleX",
    "_pScaleY",
    "_pScaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pivotDirty",
    "_pos",
    "_rot",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "Array",
    "_entityNodes",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "set",
    "value",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "val",
    "_depth",
    "invalidateScale",
    "x",
    "RADIANS_TO_DEGREES",
    "y",
    "z",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "height",
    "_height",
    "_pParent",
    "getChildIndex",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_pIsEntity",
    "_loaderInfo",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "_mouseX",
    "_mouseY",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "_pPickingCollider",
    "pivot",
    "clone",
    "invalidatePivot",
    "_root",
    "rotationX",
    "rotationY",
    "rotationZ",
    "_width",
    "transformVector",
    "copyColumnTo",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "width",
    "invalidatePosition",
    "addEventListener",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "_iMatrix3D",
    "name",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "globalToLocal3D",
    "position",
    "inverseSceneTransform",
    "hitTestObject",
    "obj",
    "hitTestPoint",
    "shapeFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal",
    "localToGlobal3D",
    "moveTo",
    "dx",
    "dy",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scale",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "removeEventListener",
    "hasEventListener",
    "translate",
    "distance",
    "Math",
    "sqrt",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_pUpdateMatrix3D",
    "elements",
    "_pPickingCollisionVO",
    "iSetParent",
    "isEntity",
    "invalidatePartition",
    "notifySceneTransformChange",
    "partition",
    "scene",
    "sceneChanged",
    "dispatchEvent",
    "REMOVED_FROM_SCENE",
    "_iUnregisterPartition",
    "_pUnregisterEntity",
    "_iRegisterPartition",
    "_pRegisterEntity",
    "ADDED_TO_SCENE",
    "notifySceneChange",
    "appendTranslation",
    "_iIsRoot",
    "prepend",
    "_iAddRenderable",
    "renderable",
    "push",
    "_iRemoveRenderable",
    "index",
    "indexOf",
    "splice",
    "_iTestCollision",
    "shortestCollisionDistance",
    "findClosest",
    "_iInternalUpdate",
    "_iController",
    "update",
    "_iIsMouseEnabled",
    "_iSetScene",
    "notifyPositionChanged",
    "_positionChanged",
    "notifyRotationChanged",
    "_rotationChanged",
    "notifyScaleChanged",
    "_scaleChanged",
    "_scenechanged",
    "_sceneTransformChanged",
    "invalidateMatrix3D",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/SceneEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IMaterialOwner",
    "awayjs-display/lib/base/IRenderObjectOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubGeometry",
    "LineSubMesh",
    "applyLineSubMesh",
    "awayjs-core/lib/data/LineSubGeometry",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "scaleX",
    "scaleY",
    "scaleZ",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubGeometry",
    "TriangleSubMesh",
    "applyTriangleSubMesh",
    "awayjs-core/lib/data/TriangleSubGeometry",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cx",
    "cy",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "transform",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "invalidate",
    "awayjs-display/lib/bounds/BoundsType",
    "BoundsType",
    "SPHERE",
    "AXIS_ALIGNED_BOX",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_children",
    "addChild",
    "child",
    "removeChildInternal",
    "addChildAt",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "disposeWithChildren",
    "numChildren",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "getObjectsUnderPoint",
    "removeChildAt",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "AssetLoader",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_this",
    "_loadingSessions",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "event",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_contentLoaderInfo",
    "close",
    "lib",
    "getInstance",
    "stopAllLoadingSessions",
    "removeListeners",
    "stop",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "token",
    "loader",
    "RESOURCE_COMPLETE",
    "ASSET_COMPLETE",
    "_iLoader",
    "_iAddErrorHandler",
    "onLoadError",
    "_iAddParseErrorHandler",
    "onParseError",
    "loadData",
    "data",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "dispatcher",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/AssetLoader",
    "awayjs-display/lib/containers/Scene",
    "NodeBase",
    "Partition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "_partition",
    "_iSceneGraphRoot",
    "traversePartitions",
    "traverser",
    "traverse",
    "PARTITION_CHANGED",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/Partition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "renderer",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onScenePartitionChangedDelegate",
    "onScenePartitionChanged",
    "_onProjectionChangedDelegate",
    "onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pCamera",
    "_iRegisterCamera",
    "_pMouseX",
    "_pMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "left",
    "top",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "clear",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "unproject",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "max",
    "min",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "pos",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "colors",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "indices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "thickness",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_animator",
    "SIZE_CHANGED",
    "testBillboardCollision",
    "_iCollectRenderables",
    "applyBillboard",
    "_iRegisterEntity",
    "_iUnregisterEntity",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "_iUnregisterCamera",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "_iRegisterDirectionalLight",
    "_iUnregisterDirectionalLight",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "_iRegisterLightProbe",
    "_iUnregisterLightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "applyLineSegment",
    "awayjs-display/lib/entities/Mesh",
    "Geometry",
    "GeometryEvent",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "BOUNDS_INVALID",
    "SUB_GEOMETRY_ADDED",
    "SUB_GEOMETRY_REMOVED",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "applyTransformation",
    "disposeWithAnimatorAndChildren",
    "boundsType",
    "shareAnimationGeometry",
    "mouseEnabled",
    "extra",
    "getSubMeshFromSubGeometry",
    "j",
    "subGeom",
    "boundingPositions",
    "numSubGeoms",
    "getBoundingPositions",
    "setEmpty",
    "box",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getSubMeshClass",
    "testMeshCollision",
    "_iInvalidateRenderableGeometries",
    "awayjs-core/lib/data/Geometry",
    "awayjs-core/lib/events/GeometryEvent",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "bottom",
    "front",
    "v2",
    "right",
    "back",
    "d1",
    "d2",
    "rawData",
    "_iRegisterPointLight",
    "_iUnregisterPointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renderObjects",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRenderObject",
    "invalidateRenderObject",
    "invalidatePasses",
    "_cubeMap",
    "format",
    "_iAddRenderObject",
    "renderObject",
    "_iRemoveRenderObject",
    "getRenderObject",
    "renderablePool",
    "getSkyboxRenderObject",
    "_iRegisterSkybox",
    "_iUnregisterSkybox",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextField",
    "_text",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "reConstruct",
    "_textFormat",
    "_textHeight",
    "_textInteractionMode",
    "_textWidth",
    "removeSubGeometry",
    "positions",
    "curveData",
    "uvs",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "tri_idx_offset",
    "tri_cnt",
    "x_offset",
    "y_offset",
    "prev_char",
    "text",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "toString",
    "this_subGeom",
    "subgeom",
    "indices2",
    "positions2",
    "curveData2",
    "curves",
    "uv_values",
    "kerning_value",
    "k",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "curve_sub_geom",
    "updateIndices",
    "updatePositions",
    "updateCurves",
    "updateUVs",
    "addSubGeometry",
    "subMeshes",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "id",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "Event",
    "_camera",
    "awayjs-core/lib/events/Event",
    "object",
    "VISIBLITY_UPDATED",
    "awayjs-display/lib/events/MouseEvent",
    "MouseEvent",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "renderableOwner",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_UP",
    "MOUSE_DOWN",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderObjectOwner",
    "_renderObjectOwner",
    "RENDER_OBJECT_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapData",
    "BitmapTexture",
    "BasicMaterial",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "isAsset",
    "_defaultLineMaterial",
    "createDefaultLineMaterial",
    "_defaultTriangleMaterial",
    "createDefaultTriangleMaterial",
    "getDefaultTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapData",
    "createCheckeredBitmapData",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapData",
    "awayjs-core/lib/textures/BitmapTexture",
    "awayjs-display/lib/materials/BasicMaterial",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_queuedEvents",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "queueDispatch",
    "_mouseMoveEvent",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "bounds",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "Texture2DBase",
    "MaterialBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "Number",
    "getMaterialRenderObject",
    "awayjs-core/lib/textures/Texture2DBase",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/materials/CSSMaterialBase",
    "ImageTexture",
    "CSSMaterialBase",
    "_iMaterialId",
    "_imageElement",
    "_imageStyle",
    "_pTexture",
    "htmlImageElement",
    "node",
    "getElementsByTagName",
    "sheet",
    "styleSheets",
    "insertRule",
    "cssRules",
    "backgroundImage",
    "src",
    "backgroundSize",
    "transformOrigin",
    "_pHeight",
    "_pWidth",
    "_pNotifySizeChanged",
    "awayjs-core/lib/textures/ImageTexture",
    "awayjs-display/lib/materials/CurveMaterial",
    "CurveMaterial",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "ColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_colorTransform",
    "alphaMultiplier",
    "CHANGE",
    "_pInvalidatePasses",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "w",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "Rectangle",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "init",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "floor",
    "snap2",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "PartialImplementationError",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "awayjs-core/lib/errors/PartialImplementationError",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "RenderTexture",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-core/lib/textures/RenderTexture",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_pool",
    "_entity",
    "_iNumEntities",
    "removeFromParent",
    "_iParent",
    "iRemoveNode",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "pickingCollisionVO",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_pNumChildNodes",
    "_pChildNodes",
    "_explicitDebugVisible",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "_debugChildrenVisible",
    "findPartitionForEntity",
    "_pNumEntities",
    "applyDebugEntity",
    "iAddNode",
    "numEntities",
    "pop",
    "awayjs-display/lib/partition/NullNode",
    "NullNode",
    "PointLightNode",
    "SkyboxNode",
    "EntityNodePool",
    "rootNode",
    "_updatesMade",
    "_rootNode",
    "_cameraNodePool",
    "_directionalLightNodePool",
    "_entityNodePool",
    "_lightProbeNodePool",
    "_pointLightNodePool",
    "_skyboxNodePool",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "targetNode",
    "getItem",
    "pointLight",
    "skybox",
    "disposeItem",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/pool/EntityNodePool",
    "_pointLight",
    "applyPointLight",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "RaycastCollector",
    "findClosestCollision",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_findClosestCollision",
    "_entities",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "pickingCollider",
    "updateLocalPosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/CSSBillboardRenderable",
    "CSSRenderableBase",
    "CSSBillboardRenderable",
    "billboard",
    "div",
    "onmousedown",
    "img",
    "className",
    "awayjs-display/lib/pool/CSSRenderableBase",
    "awayjs-display/lib/pool/CSSLineSegmentRenderable",
    "CSSLineSegmentRenderable",
    "lineSegment",
    "invalidateIndexData",
    "invalidateVertexData",
    "dataType",
    "awayjs-display/lib/pool/CSSSkyboxRenderable",
    "CSSSkyboxRenderable",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "entityNodeClass",
    "_entityNodeClass",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderObject",
    "awayjs-display/lib/pool/IRenderablePool",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRendererPool",
    "registerSubMeshClass",
    "subMeshClass",
    "subMeshClassPool",
    "addDefaults",
    "main",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_numVertices",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "normals",
    "tangents",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "numIndices",
    "triangleGeometry",
    "numVertices",
    "vertexNormals",
    "vertexTangents",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "offset",
    "normLen",
    "tanLen",
    "updateVertexNormals",
    "updateVertexTangents",
    "_pBuildUVs",
    "scaleU",
    "scaleV",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tl",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "startPositions",
    "endPositions",
    "updateThickness",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "autoDeriveUVs",
    "updateGeometry",
    "mesh",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "nx",
    "ny",
    "nz",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/render/CSSDefaultRenderer",
    "CoordinateSystem",
    "CSSRendererBase",
    "CSSEntityCollector",
    "CSSDefaultRenderer",
    "_contextMatrix",
    "_skyboxProjection",
    "_container",
    "overflow",
    "_context",
    "_contextStyle",
    "transformStyle",
    "_pBackBufferInvalid",
    "pUpdateBackBuffer",
    "pDraw",
    "coordinateSystem",
    "RIGHT_HANDED",
    "drawRenderables",
    "_renderableHead",
    "_activeMaterial",
    "clip",
    "drawSkybox",
    "renderSceneTransform",
    "awayjs-core/lib/projections/CoordinateSystem",
    "awayjs-display/lib/render/CSSRendererBase",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "renderToTexture",
    "forceSoftware",
    "profile",
    "_backgroundR",
    "_backgroundG",
    "_backgroundB",
    "_depthTextureInvalid",
    "_viewPort",
    "_scissorRect",
    "_localPos",
    "_globalPos",
    "window",
    "innerWidth",
    "innerHeight",
    "updateGlobalPos",
    "notifyViewportUpdate",
    "notifyScissorUpdate",
    "surfaceSelector",
    "pExecuteRender",
    "scissorRects",
    "cameras",
    "pCollectRenderables",
    "lineSubMesh",
    "triangleSubMesh",
    "_applyRenderable",
    "materialId",
    "cascaded",
    "_iEntryPoint",
    "zIndex",
    "zOffset",
    "dotProduct",
    "_pCameraForward",
    "_scissorUpdated",
    "_viewPortUpdated",
    "awayjs-display/lib/render/IRenderer",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderObjectId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "get_font_chars",
    "_font_em_size",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "awayjs-display/lib/text/TextFieldType",
    "TextFieldType",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "align",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "CollectorBase",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "str",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "bitmapData",
    "HTMLImageElement",
    "imageElement",
    "draw",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "import CurveSubGeometry\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\n\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport IRendererPool\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.CurveSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.CurveSubMesh\n */\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\n\n\tpublic static geometryType:string = CurveSubGeometry.assetType;\n\n\tprivate _subGeometry:CurveSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t */\n\tpublic get subGeometry():CurveSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new CurveSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\n\t * @param material An optional material used to render this CurveSubMesh.\n\t */\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\n\t{\n\t\trendererPool.applyCurveSubMesh(this);\n\t}\n}\n\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends AssetBase implements IBitmapDrawable\n{\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pSceneTransformDirty:boolean = true;\n\tpublic _pIsEntity:boolean;\n\n\tprivate _explicitPartition:Partition;\n\tpublic _pImplicitPartition:Partition;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _scenechanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean = true;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean = true;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean = true;\n\tprivate _explicitVisibility:boolean = true;\n\tpublic _pImplicitVisibility:boolean = true;\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _positionDirty:boolean = true;\n\tprivate _rotationDirty:boolean = true;\n\tprivate _scaleDirty:boolean = true;\n\n\tprivate _positionChanged:DisplayObjectEvent;\n\tprivate _rotationChanged:DisplayObjectEvent;\n\tprivate _scaleChanged:DisplayObjectEvent;\n\n\tprivate _rotationX:number = 0;\n\tprivate _rotationY:number = 0;\n\tprivate _rotationZ:number = 0;\n\tprivate _eulers:Vector3D = new Vector3D();\n\tprivate _flipY:Matrix3D = new Matrix3D();\n\n\tprivate _listenToPositionChanged:boolean;\n\tprivate _listenToRotationChanged:boolean;\n\tprivate _listenToScaleChanged:boolean;\n\tprivate _zOffset:number = 0;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tpublic _pScaleX:number = 1;\n\tpublic _pScaleY:number = 1;\n\tpublic _pScaleZ:number = 1;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _pivot:Vector3D = new Vector3D();\n\tprivate _pivotScale:Vector3D = new Vector3D();\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pivotZero:boolean = true;\n\tprivate _pivotDirty:boolean = true;\n\tprivate _pos:Vector3D = new Vector3D();\n\tprivate _rot:Vector3D = new Vector3D();\n\tprivate _sca:Vector3D = new Vector3D();\n\tprivate _transformComponents:Array<Vector3D>;\n\n\tpublic _pIgnoreTransform:boolean = false;\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _boundsType:string;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic alpha:number;\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].updateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this._pScaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._pScaleZ = val/this.getBox().depth;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tthis._eulers.x = this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis._eulers.y = this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis._eulers.z = this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis._rotationX = value.x*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationY = value.y*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationZ = value.z*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this._pScaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._pScaleY = val/this.getBox().height;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get ignoreTransform():boolean\n\t{\n\t\treturn this._pIgnoreTransform;\n\t}\n\n\tpublic set ignoreTransform(value:boolean)\n\t{\n\t\tif (this._pIgnoreTransform == value)\n\t\t\treturn;\n\n\t\tthis._pIgnoreTransform = value;\n\n\t\tif (value) {\n\t\t\tthis._pSceneTransform.identity();\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\n\t\t}\n\n\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic name:string;\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():Partition\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tthis._pivot = pivot.clone();\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\treturn this._pScaleX;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tif (this._pScaleX == val)\n\t\t\treturn;\n\n\t\tthis._pScaleX = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\treturn this._pScaleY;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tif (this._pScaleY == val)\n\t\t\treturn;\n\n\t\tthis._pScaleY = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\treturn this._pScaleZ;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tif (this._pScaleZ == val)\n\t\t\treturn;\n\n\t\tthis._pScaleZ = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._pScaleX, this._pivot.y*this._pScaleY, this._pivot.z*this._pScaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this._pScaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._pScaleX = val/this.getBox().width;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._x == val)\n\t\t\treturn;\n\n\t\tthis._x = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._y == val)\n\t\t\treturn;\n\n\t\tthis._y = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._z == val)\n\t\t\treturn;\n\n\t\tthis._z = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get zOffset():number\n\t{\n\t\treturn this._zOffset;\n\t}\n\n\tpublic set zOffset(value:number)\n\t{\n\t\tthis._zOffset = value;\n\t}\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n\t\tthis._transformComponents = new Array<Vector3D>(3);\n\n\t\tthis._transformComponents[0] = this._pos;\n\t\tthis._transformComponents[1] = this._rot;\n\t\tthis._transformComponents[2] = this._sca;\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform(this);\n\n\t\tthis._matrix3D.identity();\n\n\t\tthis._flipY.appendScale(1, -1, 1);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:DisplayObject = new DisplayObject();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = name;\n\n\t\t// todo: implement for all subtypes\n\t\treturn clone;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this.parent)\n\t\t\tthis.parent.removeChild(this);\n\n\t\twhile (this._pRenderables.length)\n\t\t\tthis._pRenderables[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeAsset()\n\t{\n\t\tthis.dispose();\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\tif (this._width != null) {\n\t\t\t\tthis._pScaleX = this._width/this._pBoxBounds.width;\n\t\t\t\tthis.invalidateScale();\n\t\t\t}\n\n\n\t\t\tif (this._height != null) {\n\t\t\t\tthis._pScaleY = this._height/this._pBoxBounds.height;\n\t\t\t\tthis.invalidateScale();\n\t\t\t}\n\n\n\t\t\tif (this._depth != null) {\n\t\t\t\tthis._pScaleZ = this._depth/this._pBoxBounds.depth;\n\t\t\t\tthis.invalidateScale();\n\t\t\t}\n\t\t}\n\n\n\t\treturn this._pBoxBounds;\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid) {\n\t\t\tthis._pUpdateSphereBounds();\n\t\t}\n\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point):Point\n\t{\n\t\treturn point; //TODO\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false):boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Array<number>;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis._rotationX = vec.x;\n\t\tthis._rotationY = vec.y;\n\t\tthis._rotationZ = vec.z;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point):Point\n\t{\n\t\treturn new Point(); //TODO\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\n\t\t\treturn;\n\n\t\tthis._x = dx;\n\t\tthis._y = dy;\n\t\tthis._z = dz;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._pivot == null)\n\t\t\tthis._pivot = new Vector3D();\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[2];\n\t\t\tcomps[0] = this.scenePosition;\n\t\t\tscale.x = this._pScaleX;\n\t\t\tscale.y = this._pScaleY;\n\t\t\tscale.z = this._pScaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this._pScaleX, -this._pivot.y/this._pScaleY, -this._pivot.z/this._pScaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.prependRotation(angle, axis);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis._rotationX += vec.x;\n\t\tthis._rotationY += vec.y;\n\t\tthis._rotationZ += vec.z;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tthis._rotationX = ax*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationY = ay*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationZ = az*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type, listener))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = false;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._x += x*len;\n\t\tthis._y += y*len;\n\t\tthis._z += z*len;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\n\n\t\tthis._x = this._pos.x;\n\t\tthis._y = this._pos.y;\n\t\tthis._z = this._pos.z;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():Partition\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @internal\n\t */\n\tpublic get _iMatrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._pUpdateMatrix3D();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set _iMatrix3D(val:Matrix3D)\n\t{\n\n\t\t// TODO: From AS3 - Do we still need this in JS ?\n\t\t//ridiculous matrix error\n\t\t/*\n\t\tif (!val.rawData[0]) {\n\n\t\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\t\tval.copyRawDataTo(raw);\n\t\t\traw[0] = this._smallestNumber;\n\t\t\tval.copyRawDataFrom(raw);\n\t\t}\n\t\t//*/\n\t\tvar elements:Array<Vector3D> = val.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[0];\n\n\t\tif (this._x != vec.x || this._y != vec.y || this._z != vec.z) {\n\t\t\tthis._x = vec.x;\n\t\t\tthis._y = vec.y;\n\t\t\tthis._z = vec.z;\n\n\t\t\tthis.invalidatePosition();\n\t\t}\n\n\t\tvec = elements[1];\n\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\n\t\t\tthis._rotationX = vec.x;\n\t\t\tthis._rotationY = vec.y;\n\t\t\tthis._rotationZ = vec.z;\n\n\t\t\tthis.invalidateRotation();\n\t\t}\n\n\t\tvec = elements[2];\n\n\t\tif (this._pScaleX != vec.x || this._pScaleY != vec.y || this._pScaleZ != vec.z) {\n\t\t\tthis._pScaleX = vec.x;\n\t\t\tthis._pScaleY = vec.y;\n\t\t\tthis._pScaleZ = vec.z;\n\n\t\t\tthis.invalidateScale();\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tthis._pParent = value;\n\n\t\tif (value) {\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren);\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\n\t\t} else {\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\n\t\t\tthis._pUpdateImplicitVisibility(true);\n\t\t\tthis._pUpdateImplicitPartition(null, null);\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._listenToSceneTransformChanged)\n\t\t\tthis.notifySceneTransformChange();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tthis._pImplicitMouseEnabled = this._explicitMouseEnabled && value;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (sceneChanged && this._pScene)\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tif (this._pIsEntity)\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tif (this._pIsEntity)\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\n\t\t}\n\n\t\tif (sceneChanged && this._pScene)\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\n\n\t\tif (sceneChanged) {\n\t\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\n\t\t\t\tthis.pInvalidateSceneTransform();\n\n\t\t\tif (this._listenToSceneChanged)\n\t\t\t\tthis.notifySceneChange();\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateMatrix3D()\n\t{\n\n\t\tthis._pos.x = this._x;\n\t\tthis._pos.y = this._y;\n\t\tthis._pos.z = this._z;\n\n\t\tthis._rot.x = this._rotationX;\n\t\tthis._rot.y = this._rotationY;\n\t\tthis._rot.z = this._rotationZ;\n\n\t\tthis._sca.x = this._pScaleX;\n\t\tthis._sca.y = this._pScaleY;\n\t\tthis._sca.z = this._pScaleZ;\n\n\t\tthis._matrix3D.recompose(this._transformComponents);\n\n\t\tif (!this._pivotZero) {\n\t\t\tthis._pivotScale.x = this._pivot.x/this._pScaleX;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._pScaleY;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._pScaleZ;\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\t\tthis._matrix3DDirty = false;\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._scaleDirty = false;\n\t\tthis._pivotDirty = false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\n\t\t} else {\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\n\t\t}\n\n\t\tthis._pSceneTransformDirty = false;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._pRenderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\n\n\t\tthis._pRenderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\treturn this._pImplicitMouseEnabled;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyPositionChanged()\n\t{\n\t\tif (!this._positionChanged)\n\t\t\tthis._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._positionChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRotationChanged()\n\t{\n\t\tif (!this._rotationChanged)\n\t\t\tthis._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._rotationChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScaleChanged()\n\t{\n\t\tif (!this._scaleChanged)\n\t\t\tthis._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._scaleChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifySceneChange()\n\t{\n\t\tif (!this._scenechanged)\n\t\t\tthis._scenechanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._scenechanged);\n}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifySceneTransformChange()\n\t{\n\t\tif (!this._sceneTransformChanged)\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._sceneTransformChanged);\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate invalidateMatrix3D():void\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidatePartition()\n\t{\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].invalidatePartition();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePivot()\n\t{\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\n\n\t\tif (this._pivotDirty)\n\t\t\treturn;\n\n\t\tthis._pivotDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePosition()\n\t{\n\t\tif (this._positionDirty)\n\t\t\treturn;\n\n\t\tthis._positionDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToPositionChanged)\n\t\t\tthis.notifyPositionChanged();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateRotation()\n\t{\n\t\tif (this._rotationDirty)\n\t\t\treturn;\n\n\t\tthis._rotationDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToRotationChanged)\n\t\t\tthis.notifyRotationChanged();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateScale()\n\t{\n\t\tif (this._scaleDirty)\n\t\t\treturn;\n\n\t\tthis._scaleDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToScaleChanged)\n\t\t\tthis.notifyScaleChanged();\n\t}\n\n\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\n\n\t\tthis._entityNodes.splice(index, 1);\n\n\t\treturn entityNode;\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\t}\n\t\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\t\t\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n}\n\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tpublic static assetType:string = \"[asset Light]\";\n\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn LightBase.assetType;\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "import LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\n\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport IRendererPool\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.LineSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.LineSubMesh\n */\nclass LineSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\n\n\tpublic static geometryType:string = LineSubGeometry.assetType;\n\n\tprivate _subGeometry:LineSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubMesh.assetType;\n\t}\n\n\t/**\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t */\n\tpublic get subGeometry():LineSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new LineSubMesh object\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\n\t * @param material An optional material used to render this LineSubMesh.\n\t */\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tsuper.dispose();\n\t}\n\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\n\t{\n\t\trendererPool.applyLineSubMesh(this);\n\t}\n}\n\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nclass LoaderInfo extends EventDispatcher\n{\n\tprivate _bytes:ByteArray;\n\tprivate _bytesLoaded:number;\n\tprivate _bytesTotal:number;\n\tprivate _content:DisplayObject;\n\tprivate _contentType:string;\n\tprivate _loader:Loader;\n\tprivate _url:string;\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get bytes():ByteArray\n\t{\n\t\treturn this._bytes;\n\t}\n\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic get bytesLoaded():number /*int*/\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic get bytesTotal():number /*int*/\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic get contentType():string\n\t{\n\t\treturn this._contentType;\n\t}\n\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get loader():Loader\n\t{\n\t\treturn this._loader;\n\t}\n\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n}\n\nexport = LoaderInfo;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass SubMeshBase extends AssetBase\n{\n\tpublic _pParentMesh:Mesh;\n\tpublic _uvTransform:UVTransform;\n\n\tpublic _iIndex:number = 0;\n\n\tpublic _material:MaterialBase;\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._pParentMesh.animator;\n\t}\n\n\t/**\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this._pParentMesh.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The scene transform object that transforms from model to world space.\n\t */\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\treturn this._pParentMesh.sceneTransform;\n\t}\n\n\t/**\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\n\t */\n\tpublic get parentMesh():Mesh\n\t{\n\t\treturn this._pParentMesh;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Creates a new SubMeshBase object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\t/**\n\t *\n\t * @param camera\n\t * @returns {away.geom.Matrix3D}\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _iInvalidateRenderableGeometry()\n\t{\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n}\n\nexport = SubMeshBase;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform\n{\n\tprivate _displayObject:DisplayObject;\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tpublic _position:Vector3D = new Vector3D();\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic colorTransform:ColorTransform;\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Stage.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\treturn this._displayObject._iMatrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tthis._displayObject._iMatrix3D = val;\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._displayObject._iMatrix3D.position\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._displayObject.x = value.x;\n\t\tthis._displayObject.y = value.y;\n\t\tthis._displayObject.z = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\n\t}\n\n\tpublic set rotation(value:Vector3D)\n\t{\n\t\tthis._displayObject.rotationX = value.x;\n\t\tthis._displayObject.rotationY = value.y;\n\t\tthis._displayObject.rotationZ = value.z;\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\n\t}\n\n\tpublic set scale(value:Vector3D)\n\t{\n\t\tthis._displayObject.scaleX = value.x;\n\t\tthis._displayObject.scaleY = value.y;\n\t\tthis._displayObject.scaleZ = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t}\n\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis._displayObject = displayObject;\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n}\n\nexport = Transform;\n",
    "import TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\n\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport IRendererPool\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.TriangleSubMesh\n */\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\n\n\tpublic static geometryType:string = TriangleSubGeometry.assetType;\n\n\tprivate _subGeometry:TriangleSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t */\n\tpublic get subGeometry():TriangleSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new TriangleSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\n\t * @param material An optional material used to render this TriangleSubMesh.\n\t */\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\n\t{\n\t\trendererPool.applyTriangleSubMesh(this);\n\t}\n}\n\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tprivate _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Array<number> = new Array<number>(16);\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Mesh;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pUpdate();\n\t\t}\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject implements IAsset\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _mouseChildren:boolean = true;\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\n\tpublic _iIsRoot:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\n\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildInternal(child);\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._children.push(child);\n\n\t\treturn child;\n\t}\n\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number /*int*/):DisplayObject\n\t{\n\t\treturn child;\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:DisplayObjectContainer = new DisplayObjectContainer();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.partition = this.partition;\n\t\tclone.name = name;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addChild(this._children[i].clone());\n\n\t\t// todo: implement for all subtypes\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeWithChildren()\n\t{\n\t\tthis.dispose();\n\n\t\twhile (this.numChildren > 0)\n\t\t\tthis.getChildAt(0).dispose();\n\t}\n\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildInternal(child);\n\n\t\tchild.iSetParent(null);\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChild(this._children[index]);\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number /*int*/, index2:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitVisibility(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\n\t{\n\t\tsuper._pUpdateImplicitPartition(value, scene);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tprivate removeChildInternal(child:DisplayObject):DisplayObject\n\t{\n\t\tthis._children.splice(this.getChildIndex(child), 1);\n\n\t\treturn child;\n\t}\n}\n\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport AssetLoader\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\nimport AssetLoaderContext\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\nimport AssetLoaderToken\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\n\n/**\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the Loader object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The Loader class overrides the following methods that it inherits,\n * because a Loader object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the Loader object's root SWF file), you may want to define a\n * mask for the Loader object, to prevent the loaded content(which is a child\n * of the Loader object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass Loader extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loadingSessions:Array<AssetLoader>;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onResourceCompleteDelegate:Function;\n\tprivate _onAssetCompleteDelegate:Function;\n\n\tprivate _content:DisplayObject;\n\tprivate _contentLoaderInfo:LoaderInfo;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\n\t * LoaderInfo objects are shared between the Loader object and the loaded\n\t * content object. The LoaderInfo object supplies loading progress\n\t * information and statistics about the loaded file.\n\t *\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\n\t * LoaderInfo object, even before the content is loaded, so that you can add\n\t * event listeners to the object prior to the load.</p>\n\t *\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n\t */\n\tpublic get contentLoaderInfo():LoaderInfo\n\t{\n\t\treturn this._contentLoaderInfo;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\n\t\tthis._loadingSessions = new Array<AssetLoader>();\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.stopAllLoadingSessions();\n\t\t\tthis._loadingSessions = null;\n\t\t\treturn\n\t\t}\n\t\tvar i:number /*int*/;\n\t\tvar length:number /*int*/ = this._loadingSessions.length;\n\t\tfor (i = 0; i < length; i++) {\n\t\t\tthis.removeListeners(this._loadingSessions[i]);\n\t\t\tthis._loadingSessions[i].stop();\n\t\t\tthis._loadingSessions[i] = null;\n\t\t}\n\t\tthis._loadingSessions = null;\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, AssetLoader will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tvar token:AssetLoaderToken;\n\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\ttoken = lib.load(request, context, ns, parser);\n\t\t} else {\n\t\t\tvar loader:AssetLoader = new AssetLoader();\n\t\t\tthis._loadingSessions.push(loader);\n\t\t\ttoken = loader.load(request, context, ns, parser);\n\t\t}\n\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\ttoken._iLoader._iAddErrorHandler(this.onLoadError);\n\t\ttoken._iLoader._iAddParseErrorHandler(this.onParseError);\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tvar token:AssetLoaderToken;\n\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\ttoken = lib.loadData(data, context, ns, parser);\n\t\t} else {\n\t\t\tvar loader:AssetLoader = new AssetLoader();\n\t\t\tthis._loadingSessions.push(loader);\n\t\t\ttoken = loader.loadData(data, '', context, ns, parser);\n\t\t}\n\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\ttoken._iLoader._iAddErrorHandler(this.onLoadError);\n\t\ttoken._iLoader._iAddParseErrorHandler(this.onParseError);\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tAssetLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tAssetLoader.enableParsers(parserClasses);\n\t}\n\n\n\tprivate removeListeners(dispatcher:EventDispatcher)\n\t{\n\t\tdispatcher.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tdispatcher.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:LoaderEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\t}\n}\n\nexport = Loader;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\nclass Scene extends EventDispatcher\n{\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\n\tprivate _partition:Partition;\n\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\n\tpublic _iCollectionMark = 0;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._partition = new Partition(new NodeBase());\n\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\n\n\t\tthis._iSceneGraphRoot._iSetScene(this);\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\n\t\tthis._iSceneGraphRoot.partition = this._partition;\n\t}\n\n\tpublic traversePartitions(traverser:CollectorBase)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\tthis._iCollectionMark++;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\tpublic get partition():Partition\n\t{\n\t\treturn this._iSceneGraphRoot.partition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tthis._iSceneGraphRoot.partition = value;\n\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\n\t}\n\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._iSceneGraphRoot.contains(child);\n\t}\n\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.addChild(child);\n\t}\n\n\tpublic removeChild(child:DisplayObject)\n\t{\n\t\tthis._iSceneGraphRoot.removeChild(child);\n\t}\n\n\tpublic removeChildAt(index:number)\n\t{\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\n\t}\n\n\n\tpublic getChildAt(index:number):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\n\t}\n\n\tpublic get numChildren():number\n\t{\n\t\treturn this._iSceneGraphRoot.numChildren;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport CSSRendererBase\t\t\t\t= require(\"awayjs-display/lib/render/CSSRendererBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:CollectorBase;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tdocument.body.style.margin = \"0px\";\n\n\t\tthis._htmlElement = document.createElement(\"div\");\n\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\tdocument.body.appendChild(this._htmlElement);\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate onScenePartitionChanged(event:SceneEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tthis._htmlElement.style.width = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tthis._htmlElement.style.height = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tthis._htmlElement.style.left = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tthis._htmlElement.style.top = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():CollectorBase\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass ControllerBase\n{\n\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject.invalidatePartition();\n\t\t}\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject._iController = this;\n\t\t}\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pTargetObject) {\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\t} else {\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis.pNotifyUpdate();\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tinterpolate = interpolate; // unused: prevents warning\n\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis.pNotifyUpdate();\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/data/BitmapData\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapData, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapData, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import BitmapData\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapData\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a BitmapData object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its BitmapData reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same BitmapData object,\n * multiple display objects can use the same complex BitmapData object without\n * incurring the memory overhead of a BitmapData object for each display\n * object instance.</p>\n *\n * <p>A BitmapData object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t * The BitmapData object being referenced.\n\t */\n\tpublic bitmapData:BitmapData; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\t}\n\n\t/**\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\tpublic pixelSnapping:string; //TODO\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\tpublic smoothing:boolean; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\n\n\t\tthis.material = material;\n\n\t\tthis._billboardWidth = material.width;\n\t\tthis._billboardHeight = material.height;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardWidth;\n\t\tthis._pBoxBounds.height = this._billboardHeight;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onSizeChanged(event:MaterialEvent)\n\t{\n\t\tthis._billboardWidth = this._material.width;\n\t\tthis._billboardHeight = this._material.height;\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tthis._iCollectRenderable(rendererPool);\n\t}\n\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\n\t{\n\t\trendererPool.applyBillboard(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:number[] = new Array<number>(16);\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\n\t\tvar invLen:number;\n\t\tthis.viewProjection.copyRawDataTo(raw);\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tthis._iCollectRenderable(rendererPool);\n\t}\n\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterCamera(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterCamera(this);\n\t}\n}\n\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterDirectionalLight(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterDirectionalLight(this);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeTextureBase\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tprivate _diffuseMap:CubeTextureBase;\n\tprivate _specularMap:CubeTextureBase;\n\n\tconstructor(diffuseMap:CubeTextureBase, specularMap:CubeTextureBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._diffuseMap = diffuseMap;\n\t\tthis._specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get diffuseMap():CubeTextureBase\n\t{\n\t\treturn this._diffuseMap;\n\t}\n\n\tpublic set diffuseMap(value:CubeTextureBase)\n\t{\n\t\tthis._diffuseMap = value;\n\t}\n\n\tpublic get specularMap():CubeTextureBase\n\t{\n\t\treturn this._specularMap;\n\t}\n\n\tpublic set specularMap(value:CubeTextureBase)\n\t{\n\t\tthis._specularMap = value;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterLightProbe(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterLightProbe(this);\n\t}\n}\n\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._startPosition = null;\n\t\tthis._endPosition = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRenderableUpdate()\n\t{\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tthis._iCollectRenderable(rendererPool);\n\t}\n\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\n\t{\n\t\trendererPool.applyLineSegment(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = LineSegment;",
    "﻿import Geometry\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-core/lib/events/GeometryEvent\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\n * of the geometry to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Mesh]\";\n\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _subMeshes:Array<ISubMesh>;\n\tprivate _geometry:Geometry;\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGeometry:boolean = true;\n\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._animator)\n\t\t\tthis._animator.removeOwner(this);\n\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (subMesh.material) {\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\n\t\t\t}\n\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tthis._animator.addOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Mesh.assetType;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\n\n\t\tthis._material = value;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iAddOwner(subMesh);\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation geometry.\n\t */\n\tpublic get shareAnimationGeometry():boolean\n\t{\n\t\treturn this._shareAnimationGeometry;\n\t}\n\n\tpublic set shareAnimationGeometry(value:boolean)\n\t{\n\t\tthis._shareAnimationGeometry = value;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._subMeshes = new Array<ISubMesh>();\n\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\n\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\n\t\tthis.geometry = geometry || new Geometry();\n\n\t\tthis.material = material;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\n\t\tthis._iMatrix3D.identity();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.material = null;\n\t\tthis.geometry = null;\n\t}\n\n\t/**\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\n\t * @return\n\t */\n\tpublic disposeWithAnimatorAndChildren()\n\t{\n\t\tthis.disposeWithChildren();\n\n\t\t if (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * geometry, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\n\t * </code>\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Mesh = new Mesh(this._geometry, this._material);\n\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.pivot = this.pivot;\n\t\tclone.partition = this.partition;\n\t\tclone.boundsType = this.boundsType;\n\n\n\t\tclone.name = this.name;\n\t\tclone.castsShadows = this.castsShadows;\n\t\tclone.shareAnimationGeometry = this.shareAnimationGeometry;\n\t\tclone.mouseEnabled = this.mouseEnabled;\n\t\tclone.mouseChildren = this.mouseChildren;\n\t\t//this is of course no proper cloning\n\t\t//maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\n\t\tclone.extra = this.extra;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n\n\t\tlen = this.numChildren;\n\t\tvar obj:any;\n\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tobj = this.getChildAt(i).clone();\n\t\t\tclone.addChild(<DisplayObjectContainer> obj);\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tclone.animator = this._animator.clone();\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @returns {SubMeshBase}\n\t */\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\n\t{\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Array<number>;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\tminX = maxX = boundingPositions[i];\n\t\t\tminY = maxY = boundingPositions[i + 1];\n\t\t\tminZ = maxZ = boundingPositions[i + 2];\n\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\n\t\t\t\tfor (i = 0; i < len; i+=3) {\n\t\t\t\t\tp = boundingPositions[i];\n\t\t\t\t\tif (p < minX)\n\t\t\t\t\t\tminX = p;\n\t\t\t\t\telse if (p > maxX)\n\t\t\t\t\t\tmaxX = p;\n\n\t\t\t\t\tp = boundingPositions[i + 1];\n\n\t\t\t\t\tif (p < minY)\n\t\t\t\t\t\tminY = p;\n\t\t\t\t\telse if (p > maxY)\n\t\t\t\t\t\tmaxY = p;\n\n\t\t\t\t\tp = boundingPositions[i + 2];\n\n\t\t\t\t\tif (p < minZ)\n\t\t\t\t\t\tminZ = p;\n\t\t\t\t\telse if (p > maxZ)\n\t\t\t\t\t\tmaxZ = p;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\t\tvar centerX:number = box.x + box.width/2;\n\t\tvar centerY:number = box.y + box.height/2;\n\t\tvar centerZ:number = box.z + box.depth/2;\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Array<number>;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\n\t\t\t\tfor (i = 0; i < len; i += 3) {\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._pSphereBounds.x = centerX;\n\t\tthis._pSphereBounds.y = centerY;\n\t\tthis._pSphereBounds.z = centerZ;\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * Called when a SubGeometry was added to the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryAdded(event:GeometryEvent)\n\t{\n\t\tthis.addSubMesh(event.subGeometry);\n\t}\n\n\t/**\n\t * Called when a SubGeometry was removed from the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\n\t{\n\t\tvar subMesh:ISubMesh;\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar i:number;\n\n\t\t// Important! This has to be done here, and not delayed until the\n\t\t// next render loop, since this may be caused by the geometry being\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry == subGeom) {\n\t\t\t\tsubMesh.dispose();\n\n\t\t\t\tthis._subMeshes.splice(i, 1);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t--len;\n\t\tfor (; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iIndex = i;\n\t}\n\n\t/**\n\t * Adds a SubMeshBase wrapping a SubGeometry.\n\t *\n\t * @param subGeometry\n\t */\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\n\t{\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getSubMeshClass(subGeometry);\n\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\n\t\tvar len:number = this._subMeshes.length;\n\n\t\tsubMesh._iIndex = len;\n\n\t\tthis._subMeshes[len] = subMesh;\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testMeshCollision(this, this._pPickingCollisionVO, shortestCollisionDistance, findClosest);\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\tthis._subMeshes[i]._iCollectRenderable(rendererPool);\n\t}\n\n\tpublic _iInvalidateRenderableGeometries()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = Mesh;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:number[] = new Array<number>(16);\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterPointLight(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterPointLight(this);\n\t}\n}\n\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport CubeTextureBase\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderObjectOwner\n{\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _cubeMap:CubeTextureBase;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _renderObjects:Array<IRenderObject> = new Array<IRenderObject>();\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _uvTransform:UVTransform;\n\tprivate _owners:Array<IRenderableOwner>;\n\tprivate _mipmap:boolean = false;\n\tprivate _smooth:boolean = true;\n\t\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\tpublic _pInvalidateRenderObject()\n\t{\n\t\tvar len:number = this._renderObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderObjects[i].invalidateRenderObject();\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pIinvalidatePasses()\n\t{\n\t\tvar len:number = this._renderObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderObjects[i].invalidatePasses();\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get cubeMap():CubeTextureBase\n\t{\n\t\treturn this._cubeMap;\n\t}\n\n\tpublic set cubeMap(value:CubeTextureBase)\n\t{\n\t\tif (value && this._cubeMap && (value.format != this._cubeMap.format))\n\t\t\tthis._pInvalidateRenderObject();\n\n\t\tthis._cubeMap = value;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(cubeMap:CubeTextureBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\t\tthis._owners = new Array<IRenderableOwner>(this);\n\n\t\tthis.cubeMap = cubeMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renderObjects.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renderObjects[i].dispose();\n\n\t\tthis._renderObjects = new Array<IRenderObject>();\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\n\t{\n\t\t//skybox do not get collected in the standard entity list\n\t}\n\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\n\t{\n\n\t}\n\n\tpublic _iAddRenderObject(renderObject:IRenderObject):IRenderObject\n\t{\n\t\tthis._renderObjects.push(renderObject);\n\n\t\treturn renderObject;\n\t}\n\n\tpublic _iRemoveRenderObject(renderObject:IRenderObject):IRenderObject\n\t{\n\t\tthis._renderObjects.splice(this._renderObjects.indexOf(renderObject), 1);\n\n\t\treturn renderObject;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic getRenderObject(renderablePool:IRenderablePool)\n\t{\n\t\treturn renderablePool.getSkyboxRenderObject(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterSkybox(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterSkybox(this);\n\t}\n}\n\nexport = Skybox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Mesh\n{\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\t\tthis.reConstruct();\n\t}\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\t\tthis._textFormat = value;\n\t\tthis.reConstruct();\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic textColor:number /*int*/;\n\n\t/**\n\t * The height of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(new Geometry());\n\t}\n\n\t/**\n\t * Reconstructs the Geometry for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\n\n\t\tif(this._textFormat==null){\n\t\t\treturn;\n\t\t}\n\t\tif(this._text==\"\"){\n\t\t\treturn;\n\t\t}\n\t\tvar indices:Array<number> = new Array<number>();\n\t\tvar positions:Array<number> = new Array<number>();\n\t\tvar curveData:Array<number> = new Array<number>();\n\t\tvar uvs:Array<number> = new Array<number>();\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar tri_idx_offset:number=0;\n\t\tvar tri_cnt:number=0;\n\t\tvar x_offset:number=0;\n\t\tvar y_offset:number=0;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tfor (var i = 0; i < this.text.length; i++) {\n\n\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(this._text.charCodeAt(i).toString());\n\t\t\tif(this_char!= null) {\n\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\ttri_cnt = 0;\n\t\t\t\t\tvar indices2:Array<number> = this_subGeom.indices;\n\t\t\t\t\tvar positions2:Array<number> = this_subGeom.positions;\n\t\t\t\t\tvar curveData2:Array<number> = this_subGeom.curves;\n\t\t\t\t\tfor (var v = 0; v < indices2.length; v++) {\n\t\t\t\t\t\tindices.push(indices2[v] + tri_idx_offset);\n\t\t\t\t\t\ttri_cnt++;\n\t\t\t\t\t}\n\t\t\t\t\ttri_idx_offset += tri_cnt;\n\t\t\t\t\tfor (v = 0; v < positions2.length / 3; v++) {\n\t\t\t\t\t\tpositions.push((positions2[v * 3] * char_scale) + x_offset);\n\t\t\t\t\t\tpositions.push((positions2[v * 3 + 1] * char_scale * -1) + y_offset);\n\t\t\t\t\t\tpositions.push(positions2[v * 3 + 2]);\n\t\t\t\t\t\tcurveData.push(curveData2[v * 2]);\n\t\t\t\t\t\tcurveData.push(curveData2[v * 2 + 1]);\n\t\t\t\t\t\tuvs.push(this._textFormat.uv_values[0]);\n\t\t\t\t\t\tuvs.push(this._textFormat.uv_values[1]);\n\t\t\t\t\t}\n\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\tvar kerning_value:number=0;\n\t\t\t\t\tif(prev_char!=null){\n\t\t\t\t\t\tfor(var k:number=0; k<prev_char.kerningCharCodes.length;k++){\n\t\t\t\t\t\t\tif(prev_char.kerningCharCodes[k]==this._text.charCodeAt(i)){\n\t\t\t\t\t\t\t\tkerning_value=prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tx_offset += ((this_char.char_width+kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\tx_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\tx_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t}\n\t\t}\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(true);\n\t\tcurve_sub_geom.updateIndices(indices);\n\t\tcurve_sub_geom.updatePositions(positions);\n\t\tcurve_sub_geom.updateCurves(curveData);\n\t\tcurve_sub_geom.updateUVs(uvs);\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\n\t\tthis.subMeshes[0].material=this._textFormat.material;\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass CastError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends Event\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n}\n\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass DisplayObjectEvent extends Event\n{\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\n\n\tpublic object:DisplayObject;\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis.object = object;\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LightEvent extends Event\n{\n\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():Event\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass MaterialEvent extends Event\n{\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableOwnerEvent\n * @see away.core.base.Geometry\n */\nclass RenderableOwnerEvent extends Event\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static RENDER_OBJECT_OWNER_UPDATED:string = \"renderObjectOwnerUpdated\";\n\n\tprivate _renderObjectOwner:IRenderObjectOwner;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderObjectOwner:IRenderObjectOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderObjectOwner = renderObjectOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderObjectOwner():IRenderObjectOwner\n\t{\n\t\treturn this._renderObjectOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new RenderableOwnerEvent(this.type, this._renderObjectOwner);\n\t}\n}\n\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass RendererEvent extends Event\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ResizeEvent extends Event\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n}\n\nexport = ResizeEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass SceneEvent extends Event\n{\n\t/**\n\t *\n\t */\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic displayObject:DisplayObject;\n\n\tconstructor(type:string, displayObject:DisplayObject)\n\t{\n\t\tsuper(type);\n\n\t\tthis.displayObject = displayObject;\n\t}\n}\n\nexport = SceneEvent;",
    "import BitmapData\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapData\");\nimport BitmapTexture\t\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultBitmapData:BitmapData;\n\tprivate static _defaultTriangleMaterial:BasicMaterial;\n\tprivate static _defaultLineMaterial:BasicMaterial;\n\tprivate static _defaultTexture:BitmapTexture;\n\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\n\t\t\tif (!DefaultMaterialManager._defaultLineMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultLineMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultLineMaterial;\n\t\t} else {\n\t\t\tif (!DefaultMaterialManager._defaultTriangleMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultTriangleMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultTriangleMaterial;\n\t\t}\n\t}\n\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):BitmapTexture\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tDefaultMaterialManager._defaultBitmapData = DefaultMaterialManager.createCheckeredBitmapData();\n\t\tDefaultMaterialManager._defaultTexture = new BitmapTexture(DefaultMaterialManager._defaultBitmapData);\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tpublic static createCheckeredBitmapData():BitmapData\n\t{\n\t\tvar b:BitmapData = new BitmapData(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\tfor (j = 0; j < 8; j++) {\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn b;\n\t}\n\n\tprivate static createDefaultTriangleMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTriangleMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\n\t\tDefaultMaterialManager._defaultTriangleMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultTriangleMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultTriangleMaterial.name = \"defaultTriangleMaterial\";\n\t}\n\n\tprivate static createDefaultLineMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultLineMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultLineMaterial.name = \"defaultLineMaterial\";\n\t}\n}\n\nexport = DefaultMaterialManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\tif (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t // Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a mouseChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.push(view);\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = sourceEvent.clientX;\n\t\t\tevent.screenY = sourceEvent.clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event:MouseEvent)\n\t{\n\t\tif (this._iUpdateDirty)\n\t\t\treturn;\n\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = event.clientX;\n\t\tvar mouseY:number = event.clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase implements IRenderObjectOwner\n{\n    private _preserveAlpha:boolean = false;\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Texture2DBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tif (textureColor instanceof Texture2DBase) {\n\t\t\tthis.texture = <Texture2DBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n        this._preserveAlpha = value;\n        this._pInvalidateRenderObject();\n    }\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic getRenderObject(renderablePool:IRenderablePool):IRenderObject\n\t{\n\t\treturn renderablePool.getMaterialRenderObject(this);\n\t}\n}\n\nexport = BasicMaterial;",
    "import MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ImageTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and MultiPassMaterialBase, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass CSSMaterialBase extends MaterialBase\n{\n\tprivate _imageElement:HTMLImageElement;\n\tprivate _imageStyle:MSStyleCSSProperties;\n\n\n\tpublic get imageElement():HTMLImageElement\n\t{\n\t\treturn this._imageElement;\n\t}\n\n\tpublic get imageStyle():MSStyleCSSProperties\n\t{\n\t\treturn this._imageStyle;\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tif (value instanceof ImageTexture) {\n\t\t\tthis._imageElement = (<ImageTexture> value).htmlImageElement;\n\n\t\t\tvar node:HTMLStyleElement = document.createElement(\"style\");\n\t\t\tnode.type = \"text/css\";\n\t\t\tdocument.getElementsByTagName(\"head\")[0].appendChild(node);\n\n\t\t\tvar sheet:CSSStyleSheet = <CSSStyleSheet> document.styleSheets[document.styleSheets.length - 1];\n\t\t\tsheet.insertRule(\".material\" + this.id + \"{ }\", 0);\n\t\t\tvar style:MSStyleCSSProperties = (<CSSStyleRule> sheet.cssRules[0]).style;\n\n\t\t\tstyle.backgroundImage = \"url(\" + this._imageElement.src + \")\";\n\t\t\tstyle.backgroundSize = \"100% 100%\";\n\t\t\tstyle.position = \"absolute\";\n\t\t\tstyle.width = this._imageElement.width + \"px\";\n\t\t\tstyle.height = this._imageElement.height + \"px\";\n\t\t\tstyle.transformOrigin\n\t\t\t\t= style[\"-webkit-transform-origin\"]\n\t\t\t\t= style[\"-moz-transform-origin\"]\n\t\t\t\t= style[\"-o-transform-origin\"]\n\t\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\t\tthis._pHeight = this._imageElement.height;\n\t\t\tthis._pWidth = this._imageElement.width;\n\n\t\t\tthis._pNotifySizeChanged();\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor(texture:Texture2DBase = null, smooth:boolean = true, repeat:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis.texture = texture;\n\n\t\tthis.smooth = smooth;\n\t\tthis.repeat = repeat;\n\t}\n}\n\nexport = CSSMaterialBase;",
    "import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass CurveMaterial extends MaterialBase implements IRenderObjectOwner\n{\n    private _preserveAlpha:boolean = false;\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Texture2DBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tif (textureColor instanceof Texture2DBase) {\n\t\t\tthis.texture = <Texture2DBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n        this._preserveAlpha = value;\n        this._pInvalidateRenderObject();\n    }\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic getRenderObject(renderablePool:IRenderablePool):IRenderObject\n\t{\n\t\treturn renderablePool.getMaterialRenderObject(this);\n\t}\n}\n\nexport = CurveMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\n\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends AssetBase implements IRenderObjectOwner\n{\n\tpublic static assetType:string = \"[asset Material]\";\n\n\tprivate _colorTransform:ColorTransform;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\t\n\tprivate _sizeChanged:MaterialEvent;\n\tprivate _renderObjects:Array<IRenderObject> = new Array<IRenderObject>();\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\n\t/**\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\n\t *\n\t * @private\n\t */\n\tpublic _iMaterialId:number = 0;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderableOwner>;\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _mipmap:boolean = true;\n\tprivate _smooth:boolean = true;\n\tprivate _repeat:boolean = false;\n\tprivate _color:number = 0xFFFFFF;\n\tpublic _pTexture:Texture2DBase;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tpublic _pHeight:number = 1;\n\tpublic _pWidth:number = 1;\n\n\tprivate _onLightChangeDelegate:(event:Event) => void;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn MaterialBase.assetType;\n\t}\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis._owners = new Array<IRenderableOwner>();\n\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tthis._pInvalidatePasses();\n\n\t\tthis._pHeight = this._pTexture.height;\n\t\tthis._pWidth = this._pTexture.width;\n\n\t\tthis._pNotifySizeChanged();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renderObjects.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renderObjects[i].dispose();\n\n\t\tthis._renderObjects = new Array<IRenderObject>();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderableOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderableOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OBJECT_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * Removes an IRenderableOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OBJECT_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pInvalidatePasses()\n\t{\n\t\tvar len:number = this._renderObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderObjects[i].invalidatePasses();\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tvar len:number = this._renderObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderObjects[i].invalidateAnimation();\n\t}\n\t\n\tpublic _pInvalidateRenderObject()\n\t{\n\t\tvar len:number = this._renderObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderObjects[i].invalidateRenderObject();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\tpublic _pNotifySizeChanged()\n\t{\n\t\tif (!this._sizeChanged)\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\n\n\t\tthis.dispatchEvent(this._sizeChanged);\n\t}\n\n\tpublic _iAddRenderObject(renderObject:IRenderObject):IRenderObject\n\t{\n\t\tthis._renderObjects.push(renderObject);\n\n\t\treturn renderObject;\n\t}\n\n\tpublic _iRemoveRenderObject(renderObject:IRenderObject):IRenderObject\n\t{\n\t\tthis._renderObjects.splice(this._renderObjects.indexOf(renderObject), 1);\n\n\t\treturn renderObject;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic getRenderObject(renderablePool:IRenderablePool):IRenderObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(renderable:IRenderable)\n\t{\n\t\tthis.updateProbeWeights(renderable);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(renderable:IRenderable)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:Function;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/TextureBase\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _changeDispatcher:EventDispatcher;\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis._changeDispatcher = new EventDispatcher(this);\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic pDrawDepthMap(target:RenderTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.addEventListener(type, listener);\n\t}\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\n\t}\n\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\treturn this._changeDispatcher.dispatchEvent(event);\n\t}\n\n\tpublic hasEventListener(type:string):boolean\n\t{\n\t\treturn this._changeDispatcher.hasEventListener(type);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/TextureBase\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new PartialImplementationError();\n\t\t/*\n\t\t return new RenderCubeTexture( this._depthMapSize );\n\t\t */\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:RenderTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/TextureBase\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/TextureBase\");\n\nclass ShadowMapperBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tprivate _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tprivate _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = this._depthMap.size;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\treturn new RenderTexture(this._pDepthMapSize, this._pDepthMapSize);\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\tpublic static id:string = \"cameraNode\";\n\n\tconstructor(pool:EntityNodePool, camera:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, camera, partition);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\tpublic static id:string = \"directionalLightNode\";\n\n\tprivate _directionalLight:IEntity;\n\n\t/**\n\t *\n\t * @param directionalLight\n\t */\n\tconstructor(pool:EntityNodePool, directionalLight:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, directionalLight, partition);\n\n\t\tthis._directionalLight = directionalLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends NodeBase\n{\n\tpublic static id:string = \"entityNode\";\n\n\tprivate _pool:EntityNodePool;\n\tprivate _entity:IEntity;\n\tprivate _partition:Partition;\n\tprivate _bounds:BoundingVolumeBase;\n\tpublic _iUpdateQueueNext:EntityNode;\n\n\tconstructor(pool:EntityNodePool, entity:IEntity, partition:Partition)\n\t{\n\t\tsuper();\n\t\tthis._pool = pool;\n\t\tthis._entity = entity;\n\t\tthis._partition = partition;\n\t\tthis._iNumEntities = 1;\n\n\t\tthis.updateBounds();\n\n\t\tthis.debugVisible = this._entity.debugVisible;\n\t}\n\n\tpublic get entity():IEntity\n\t{\n\t\treturn this._entity;\n\t}\n\n\tpublic removeFromParent():void\n\t{\n\t\tif (this._iParent)\n\t\t\tthis._iParent.iRemoveNode(this);\n\n\t\tthis._iParent = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this.entity.castsShadows;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this)) {\n\t\t\ttraverser.applyEntity(this._entity);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\treturn this._bounds.boundsPrimitive;\n\t}\n\n\tpublic invalidatePartition()\n\t{\n\t\tthis._bounds.invalidate();\n\n\t\tthis._partition.iMarkForUpdate(this);\n\t}\n\n\tpublic updateBounds()\n\t{\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis.updateDebugEntity();\n\t}\n}\n\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\tpublic static id:string = \"lightProbeNode\";\n\n\tprivate _lightProbe:IEntity;\n\n\t/**\n\t *\n\t * @param lightProbe\n\t */\n\tconstructor(pool:EntityNodePool, lightProbe:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, lightProbe, partition);\n\n\t\tthis._lightProbe = lightProbe;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase\n{\n\tprivate _debugChildrenVisible:boolean;\n\tprivate _explicitDebugVisible:boolean;\n\tpublic _pImplicitDebugVisible:boolean;\n\tpublic _iParent:NodeBase;\n\tpublic _pChildNodes:Array<NodeBase>;\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iNumEntities:number = 0;\n\tpublic _iCollectionMark:number;// = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._explicitDebugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (this._explicitDebugVisible == value)\n\t\t\treturn;\n\n\t\tthis._explicitDebugVisible = value;\n\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\n\n\t}\n\n\tpublic get debugChildrenVisible():boolean\n\t{\n\t\treturn this._debugChildrenVisible;\n\t}\n\n\tpublic set debugChildrenVisible(value:boolean)\n\t{\n\t\tif (this._debugChildrenVisible == value)\n\t\t\treturn;\n\n\t\tthis._debugChildrenVisible = value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get parent():NodeBase\n\t{\n\t\treturn this._iParent;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic get _pNumEntities():number\n\t{\n\t\treturn this._iNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pChildNodes = new Array<NodeBase>();\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\n\t{\n\t\treturn this;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tvar i:number = 0;\n\n\t\t\twhile (i < this._pNumChildNodes)\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic applyDebugEntity(traverser:CollectorBase)\n\t{\n\t\tif (this._pDebugEntity == null)\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\n\t\ttraverser.applyEntity(this._pDebugEntity);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:NodeBase)\n\t{\n\t\tnode._iParent = this;\n\t\tthis._iNumEntities += node._pNumEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._iNumEntities += numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:NodeBase)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tnode._iUpdateImplicitDebugVisible(false);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._pNumEntities -= numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\n\t{\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\n\t\t\treturn;\n\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t} else {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = null;\n\t\t}\n\t\t\n\t}\n\n\tpublic updateDebugEntity()\n\t{\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t}\n\t}\n\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = NodeBase;",
    "/**\n * @class away.partition.NullNode\n */\nclass NullNode\n{\n\tconstructor()\n\t{\n\t}\n}\n\nexport = NullNode;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.partition.Partition\n */\nclass Partition\n{\n\tprivate _cameraNodePool:EntityNodePool;\n\tprivate _directionalLightNodePool:EntityNodePool;\n\tprivate _entityNodePool:EntityNodePool;\n\tprivate _lightProbeNodePool:EntityNodePool;\n\tprivate _pointLightNodePool:EntityNodePool;\n\tprivate _skyboxNodePool:EntityNodePool;\n\n\tpublic _rootNode:NodeBase;\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:EntityNode;\n\n\tconstructor(rootNode:NodeBase)\n\t{\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\n\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\n\t}\n\n\tpublic get rootNode():NodeBase\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:EntityNode)\n\t{\n\t\tvar t:EntityNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:EntityNode)\n\t{\n\t\tvar t:EntityNode;\n\n\t\tnode.removeFromParent();\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:EntityNode = this._updateQueue;\n\t\tvar targetNode:NodeBase;\n\t\tvar t:EntityNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node)\n\t\t\t\t\tnode.removeFromParent();\n\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t\t//required for controllers with autoUpdate set to true\n\t\t\tnode.entity._iInternalUpdate();\n\n\t\t} while ((node = t) != null);\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterCamera(camera:Camera)\n\t{\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\n\t{\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(entity:IEntity)\n\t{\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\n\t{\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPointLight(pointLight:PointLight)\n\t{\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterSkybox(skybox:Skybox)\n\t{\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterCamera(camera:Camera)\n\t{\n\t\tthis.iRemoveEntity(this._cameraNodePool.disposeItem(camera));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\n\t{\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.disposeItem(directionalLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(entity:IEntity)\n\t{\n\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(entity));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\n\t{\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.disposeItem(lightProbe));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\n\t{\n\t\tthis.iRemoveEntity(this._pointLightNodePool.disposeItem(pointLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterSkybox(skybox:Skybox)\n\t{\n\t\tthis.iRemoveEntity(this._skyboxNodePool.disposeItem(skybox));\n\t}\n}\n\nexport = Partition;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\tpublic static id:string = \"pointLightNode\";\n\n\tprivate _pointLight:IEntity;\n\n\t/**\n\t *\n\t * @param pointLight\n\t */\n\tconstructor(pool:EntityNodePool, pointLight:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, pointLight, partition);\n\n\t\tthis._pointLight = pointLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._pointLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\tpublic static id:string = \"skyboxNode\";\n\n\tprivate _skyBox:IEntity;\n\n\t/**\n\t * Creates a new SkyboxNode object.\n\t * @param skyBox The Skybox to be contained in the node.\n\t */\n\tconstructor(pool:EntityNodePool, skyBox:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, skyBox, partition);\n\n\t\tthis._skyBox = skyBox;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applySkybox(this._skyBox);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._skyBox._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n//\t\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n}\n\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredEntities = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _entities:Array<IEntity>;\n\tprivate _numEntities:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._entities = new Array<IEntity>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numEntities = 0;\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\n\t\tvar entity:IEntity;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(entity = node.entity))\n\t\t\t\tthis._entities[this._numEntities++] = entity;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numEntities)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numEntities = 0;\n//\n//\t\t\tvar entity:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\tentity = entities[c];\n//\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredEntities.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._entities.length = this._numEntities;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar entity:IEntity;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numEntities; ++i) {\n\t\t\tentity = this._entities[i];\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\n\t\t\tif (entity.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;",
    "import CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass CSSBillboardRenderable extends CSSRenderableBase\n{\n\tpublic static id:string = \"billboard\";\n\n\tconstructor(pool:IRenderablePool, billboard:Billboard)\n\t{\n\t\tsuper(pool, billboard, billboard);\n\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\n\n\t\tthis.htmlElement = div;\n\n\t\tvar style:MSStyleCSSProperties = div.style;\n\n\t\tstyle.position = \"absolute\";\n\t\tstyle.transformOrigin\n\t\t\t= style[\"-webkit-transform-origin\"]\n\t\t\t= style[\"-moz-transform-origin\"]\n\t\t\t= style[\"-o-transform-origin\"]\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\tvar img:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\n\t\tdiv.appendChild(img);\n\n\t\timg.className = \"material\" + billboard.material.id;\n\t}\n}\n\nexport = CSSBillboardRenderable;",
    "import CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass CSSLineSegmentRenderable extends CSSRenderableBase\n{\n\tpublic static id:string = \"lineSegment\";\n\n\tconstructor(pool:IRenderablePool, lineSegment:LineSegment)\n\t{\n\t\tsuper(pool, lineSegment, lineSegment);\n\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\n\n\t\tthis.htmlElement = div;\n\n\t\tvar style:MSStyleCSSProperties = div.style;\n\n\t\tstyle.position = \"absolute\";\n\t\tstyle.transformOrigin\n\t\t\t= style[\"-webkit-transform-origin\"]\n\t\t\t= style[\"-moz-transform-origin\"]\n\t\t\t= style[\"-o-transform-origin\"]\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\tvar img:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\n\t\tdiv.appendChild(img);\n\n\t\timg.className = \"material\" + lineSegment.material.id;\n\t}\n}\n\nexport = CSSLineSegmentRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass CSSRenderableBase implements IRenderable\n{\n\t/**\n\t *\n\t */\n\tprivate _pool:IRenderablePool;\n\n\t/**\n\t *\n\t */\n\tpublic next:CSSRenderableBase;\n\n\t/**\n\t *\n\t */\n\tpublic materialId:number;\n\n\t/**\n\t *\n\t */\n\tpublic renderOrderId:number;\n\n\t/**\n\t *\n\t */\n\tpublic zIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic cascaded:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic renderSceneTransform:Matrix3D;\n\n\t/**\n\t *\n\t */\n\tpublic sourceEntity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic renderObjectId:number;\n\n\t/**\n\t *\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t *\n\t */\n\tpublic htmlElement:HTMLElement;\n\n\t/**\n\t *\n\t * @param sourceEntity\n\t * @param material\n\t * @param animator\n\t */\n\tconstructor(pool:IRenderablePool, sourceEntity:IEntity, renderableOwner:IRenderableOwner)\n\t{\n\t\t//store a reference to the pool for later disposal\n\t\tthis._pool = pool;\n\n\t\tthis.sourceEntity = sourceEntity;\n\n\t\tthis.renderableOwner = renderableOwner;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pool.disposeItem(this.renderableOwner);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateGeometry()\n\t{\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateIndexData()\n\t{\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateVertexData(dataType:string)\n\t{\n\n\t}\n}\n\nexport = CSSRenderableBase;",
    "import CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n\n/**\n * @class away.pool.CSSSkyboxRenderable\n */\nclass CSSSkyboxRenderable extends CSSRenderableBase\n{\n\tpublic static id:string = \"skybox\";\n\n\tconstructor(pool:IRenderablePool, skyBox:Skybox)\n\t{\n\t\tsuper(pool, skyBox, skyBox);\n\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\n\n\t\tthis.htmlElement = div;\n\n\t\tvar style:MSStyleCSSProperties = div.style;\n\t\tvar img:HTMLDivElement;\n\n\t\t//create the six images that make up the skybox\n\t\tstyle.position = \"absolute\";\n\t\tstyle.transformOrigin\n\t\t\t= style[\"-webkit-transform-origin\"]\n\t\t\t= style[\"-moz-transform-origin\"]\n\t\t\t= style[\"-o-transform-origin\"]\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\timg = <HTMLDivElement> document.createElement(\"div\");\n\n\t\tdiv.appendChild(img);\n\n\t\timg.className = \"material\" + skyBox.id;\n\t}\n}\n\nexport = CSSSkyboxRenderable;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\n\n/**\n * @class away.pool.EntityListItemPool\n */\nclass EntityListItemPool\n{\n\tprivate _pool:Array<EntityListItem>;\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pool = new Array<EntityListItem>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getItem():EntityListItem\n\t{\n\t\tvar item:EntityListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new EntityListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.EntityListItem\n */\nclass EntityListItem\n{\n\t/**\n\t *\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic next:EntityListItem;\n}\n\nexport = EntityListItem;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\n\n/**\n * @class away.pool.EntityNodePool\n */\nclass EntityNodePool\n{\n\tprivate _entityNodePool:Object = new Object();\n\tprivate _entityNodeClass:IEntityNodeClass;\n\tprivate _partition:Partition;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\n\t{\n\t\tthis._entityNodeClass = entityNodeClass;\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(entity:IEntity):EntityNode\n\t{\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(entity:IEntity):EntityNode\n\t{\n\t\tvar entityNode:EntityNode = this._entityNodePool[entity.id];\n\n\t\tif (entityNode) {\n\t\t\tentity._iRemoveEntityNode(entityNode);\n\n\t\t\tthis._entityNodePool[entity.id] = null;\n\t\t}\n\n\t\treturn entityNode;\n\t}\n}\n\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\n\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\n\n/**\n * @class away.pool.SubMeshPool\n */\nclass SubMeshPool\n{\n\tprivate static subMeshClassPool:Object = new Object();\n\n\t/**\n\t *\n\t * @param subMeshClass\n\t */\n\tpublic static registerSubMeshClass(subMeshClass:ISubMeshClass)\n\t{\n\t\tSubMeshPool.subMeshClassPool[subMeshClass.geometryType] = subMeshClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getSubMeshClass(subGeometry:SubGeometryBase):ISubMeshClass\n\t{\n\t\treturn SubMeshPool.subMeshClassPool[subGeometry.assetType];\n\t}\n\n\tpublic static main = SubMeshPool.addDefaults();\n\n\tpublic static addDefaults()\n\t{\n\t\tSubMeshPool.registerSubMeshClass(LineSubMesh);\n\t\tSubMeshPool.registerSubMeshClass(TriangleSubMesh);\n\t\tSubMeshPool.registerSubMeshClass(CurveSubMesh);\n\t}\n}\n\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices)\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:Array<number>;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\t\tvar numIndices:number;\n\t\tvar numVertices:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices);\n\t\t\t\tpositions = new Array<number>(numVertices*3);\n\t\t\t\tnormals = new Array<number>(numVertices*3);\n\t\t\t\ttangents = new Array<number>(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar startPositions:Array<number>;\n\t\t\tvar endPositions:Array<number>;\n\t\t\tvar thickness:Array<number>;\n\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\n\t\t\t\tstartPositions = lineGeometry.startPositions;\n\t\t\t\tendPositions = lineGeometry.endPositions;\n\t\t\t\tthickness = lineGeometry.thickness;\n\t\t\t} else {\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\n\t\t\t\tthickness = new Array<number>(numSegments);\n\t\t\t}\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = i*this._height/this._segmentsH - hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = i*this._height/this._segmentsH - hh\n\t\t\t\tendPositions[vidx + 2] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\n\t\t\t\tstartPositions[vidx + 2] = hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tstartPositions[vidx] = i*this._width/this._segmentsW - hw;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = i*this._width/this._segmentsW - hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = hw - i*this._width/this._segmentsW;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = hd;\n\n\t\t\t\tendPositions[vidx] = hw - i*this._width/this._segmentsW;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = i*this._height/this._segmentsH - hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = -hw;\n\t\t\t\tendPositions[vidx + 1] = i*this._height/this._segmentsH - hh\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = hw;\n\t\t\t\tstartPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tstartPositions[vidx] = hw\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tendPositions[vidx] = -hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = -hh;\n\t\t\t\tendPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = hh;\n\t\t\t\tstartPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tstartPositions[vidx] = hw - i*this._width/this._segmentsW;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = hw - i*this._width/this._segmentsW;\n\t\t\t\tendPositions[vidx + 1] = -hh;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = i*this._width/this._segmentsW - hw;\n\t\t\t\tstartPositions[vidx + 1] = hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = i*this._width/this._segmentsW - hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\n\t\t\tlineGeometry.updateThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:Array<number>;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGeometry() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices)\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._pSegmentsH + 1)*(this._pSegmentsW) + this._pSegmentsW;\n\t\t\tvar startPositions:Array<number>;\n\t\t\tvar endPositions:Array<number>;\n\t\t\tvar thickness:Array<number>;\n\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\n\t\t\t\tstartPositions = lineGeometry.startPositions;\n\t\t\t\tendPositions = lineGeometry.endPositions;\n\t\t\t\tthickness = lineGeometry.thickness;\n\t\t\t} else {\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\n\t\t\t\tthickness = new Array<number>(numSegments);\n\t\t\t}\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//horizonal lines\n\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = this._height*(j/this._pSegmentsH - 0.5);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tendPositions[vidx] = x;\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tstartPositions[vidx] = endPositions[vidx - this._pSegmentsW*6];\n\t\t\t\t\t\tstartPositions[vidx + 1] = endPositions[vidx + 1 - this._pSegmentsW*6];\n\t\t\t\t\t\tstartPositions[vidx + 2] = endPositions[vidx + 2 - this._pSegmentsW*6];\n\n\t\t\t\t\t\tendPositions[vidx] = x;\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\tvidx += 3;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tstartPositions[vidx] = x;\n\t\t\t\t\t\tstartPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tstartPositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\n\t\t\tlineGeometry.updateThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:Array<number>;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*triangleGeometry.scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*triangleGeometry.scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*triangleGeometry.scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*triangleGeometry.scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\t\tvar numVertices:number;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:Array<number>;\n\t\t\tvar normals:Array<number>;\n\t\t\tvar tangents:Array<number>;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tpositions = new Array<number>(numVertices*3);\n\t\t\t\tnormals = new Array<number>(numVertices*3);\n\t\t\t\ttangents = new Array<number>(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar startPositions:Array<number>;\n\t\t\tvar endPositions:Array<number>;\n\t\t\tvar thickness:Array<number>;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\n\t\t\t\tstartPositions = lineGeometry.startPositions;\n\t\t\t\tendPositions = lineGeometry.endPositions;\n\t\t\t\tthickness = lineGeometry.thickness;\n\t\t\t} else {\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\n\t\t\t\tthickness = new Array<number>(numSegments);\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = 0;\n\t\t\t\tstartPositions[vidx + 2] = yi*this._height - hh;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = 0;\n\t\t\t\tendPositions[vidx + 2] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tstartPositions[vidx] = xi*this._width - hw;\n\t\t\t\tstartPositions[vidx + 1] = 0;\n\t\t\t\tstartPositions[vidx + 2] = -hh;\n\n\t\t\t\tendPositions[vidx] = xi*this._width - hw;\n\t\t\t\tendPositions[vidx + 1] = 0;\n\t\t\t\tendPositions[vidx + 2] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\n\t\t\tlineGeometry.updateThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar uvs:Array<number>;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(numVertices*2);\n\t\t\t\tthis._pInvalidateGeometry()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*triangleGeometry.scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*triangleGeometry.scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*triangleGeometry.scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import Geometry\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _geomDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\n\tprivate _material:MaterialBase;\n\tprivate _geometry:Geometry;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryType:string;\n\tprivate _geometryTypeDirty:boolean = true;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get geometryType():string\n\t{\n\t\treturn this._geometryType;\n\t}\n\t\n\tpublic set geometryType(value:string)\n\t{\n\t\tif (this._geometryType == value)\n\t\t\treturn;\n\n\t\tthis._geometryType = value;\n\t\t\n\t\tthis.invalidateGeometryType();\n\t}\n\n\tpublic get geometry():Geometry\n\t{\n\t\tthis._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\n\t{\n\t\tsuper();\n\n\t\tthis._geometry = new Geometry();\n\t\tthis._material = material;\n\t\tthis._geometryType = geometryType;\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\n\t */\n\tpublic invalidateGeometryType()\n\t{\n\t\tthis._geometryTypeDirty = true;\n\t\tthis._geomDirty = true;\n\t\tthis._uvDirty = true;\n\t}\n\t\n\t/**\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidateGeometry()\n\t{\n\t\tthis._geomDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t/**\n\t * Updates the subgeometry when invalid.\n\t */\n\tprivate updateGeometryType()\n\t{\n\t\t//remove any existing sub geometry\n\t\tif (this._subGeometry)\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\n\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(true);\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\n\t\t\tthis._subGeometry = triangleGeometry;\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry());\n\t\t}\n\n\t\tthis._geometryTypeDirty = false;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGeometry()\n\t{\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\n\n\t\tthis._geomDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._geometryTypeDirty)\n\t\t\tthis.updateGeometryType();\n\t\t\n\t\tif (this._geomDirty)\n\t\t\tthis.updateGeometry();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Array<number>(numVertices*3);\n\t\t\t\tnormals = new Array<number>(numVertices*3);\n\t\t\t\ttangents = new Array<number>(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH - 1)*this._segmentsW*2;\n\t\t\tvar startPositions:Array<number>;\n\t\t\tvar endPositions:Array<number>;\n\t\t\tvar thickness:Array<number>;\n\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\n\t\t\t\tstartPositions = lineGeometry.startPositions;\n\t\t\t\tendPositions = lineGeometry.endPositions;\n\t\t\t\tthickness = lineGeometry.thickness;\n\t\t\t} else {\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\n\t\t\t\tthickness = new Array<number>(numSegments);\n\t\t\t}\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tif (j < this._segmentsH) {\n\t\t\t\t\t\t\tendPositions[vidx] = x;\n\t\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t\tvidx += 3;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tstartPositions[vidx] = endPositions[vidx - this._segmentsW*6];\n\t\t\t\t\t\tstartPositions[vidx + 1] = endPositions[vidx + 1 - this._segmentsW*6];\n\t\t\t\t\t\tstartPositions[vidx + 2] = endPositions[vidx + 2 - this._segmentsW*6];\n\n\t\t\t\t\t\tendPositions[vidx] = x;\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\tvidx += 3;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i < this._segmentsW && j > 0 && j < this._segmentsH) {\n\t\t\t\t\t\tstartPositions[vidx] = x;\n\t\t\t\t\t\tstartPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tstartPositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\n\t\t\tlineGeometry.updateThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:Array<number>;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices)\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:Array<number>;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport CoordinateSystem\t\t\t\t= require(\"awayjs-core/lib/projections/CoordinateSystem\");\n\nimport CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\nimport CSSRendererBase\t\t\t\t= require(\"awayjs-display/lib/render/CSSRendererBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport CSSEntityCollector\t\t\t= require(\"awayjs-display/lib/traverse/CSSEntityCollector\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport CSSMaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/CSSMaterialBase\");\n\n\n/**\n * The DefaultRenderer class provides the default rendering method. It renders the scene graph objects using the\n * materials assigned to them.\n *\n * @class away.render.DefaultRenderer\n */\nclass CSSDefaultRenderer extends CSSRendererBase implements IRenderer\n{\n\tprivate _container:HTMLDivElement;\n\tprivate _context:HTMLDivElement;\n\tprivate _contextStyle:MSStyleCSSProperties;\n\tprivate _contextMatrix:Matrix3D = new Matrix3D();\n\t\n\tprivate _activeMaterial:CSSMaterialBase;\n\tprivate _skyboxProjection:Matrix3D = new Matrix3D();\n\tprivate _transform:Matrix3D = new Matrix3D();\n\n\t/**\n\t * Creates a new CSSDefaultRenderer object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t//create container for the renderer\n\t\tthis._container = document.createElement(\"div\");\n\t\tthis._container.style.overflow = \"hidden\";\n\t\tthis._container.style.position = \"absolute\";\n\t\t\n\t\t//add container to body\n\t\tdocument.body.appendChild(this._container);\n\n\t\t//create conxtext for the renderer\n\t\tthis._context = document.createElement(\"div\");\n\t\tthis._contextStyle = this._context.style;\n\t\tthis._contextStyle.position = \"absolute\";\n\t\tthis._contextStyle.transformStyle\n\t\t\t= this._contextStyle[\"-webkit-transform-style\"]\n\t\t\t= this._contextStyle[\"-moz-transform-style\"]\n\t\t\t= this._contextStyle[\"-o-transform-style\"]\n\t\t\t= this._contextStyle[\"-ms-transform-style\"] = \"preserve-3d\";\n\t\tthis._contextStyle.transformOrigin\n\t\t\t= this._contextStyle[\"-webkit-transform-origin\"]\n\t\t\t= this._contextStyle[\"-moz-transform-origin\"]\n\t\t\t= this._contextStyle[\"-o-transform-origin\"]\n\t\t\t= this._contextStyle[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\t//add context to container\n\t\tthis._container.appendChild(this._context);\n\t}\n\n\t/**\n\t *\n\t * @param entityCollector\n\t */\n\tpublic render(entityCollector:CollectorBase)\n\t{\n\t\tsuper.render(entityCollector);\n\n\t\tif (this._pBackBufferInvalid)// reset or update render settings\n\t\t\tthis.pUpdateBackBuffer();\n\n\t\tthis._iRender(<EntityCollector> entityCollector);\n\n\t\tthis._pBackBufferInvalid = false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pDraw(entityCollector:EntityCollector)\n\t{\n//\t\t\tif (entityCollector.skyBox) {\n//\t\t\t\tif (this._activeMaterial)\n//\t\t\t\t\tthis._activeMaterial.iDeactivate(this._pStageGL);\n//\n//\t\t\t\tthis._activeMaterial = null;\n//\n//\t\t\t\tthis._pContext.setDepthTest(false, away.gl.ContextGLCompareMode.ALWAYS);\n//\t\t\t\tthis.drawSkybox(entityCollector);\n//\n//\t\t\t}\n//\n//\t\t\tvar which:number = target? DefaultRenderer.SCREEN_PASSES : DefaultRenderer.ALL_PASSES;\n\n\t\tvar sheet:CSSStyleSheet = <CSSStyleSheet> document.styleSheets[document.styleSheets.length - 1];\n\n\t\tfor (var i:number = 0; i < sheet.cssRules.length; i++) {\n\t\t\tvar style:MSStyleCSSProperties = (<CSSStyleRule> sheet.cssRules[i]).style;\n\t\t\tstyle.transform\n\t\t\t\t= style[\"-webkit-transform\"]\n\t\t\t\t= style[\"-moz-transform\"]\n\t\t\t\t= style[\"-o-transform\"]\n\t\t\t\t= style[\"-ms-transform\"] = (entityCollector.camera.projection.coordinateSystem == CoordinateSystem.RIGHT_HANDED)? \"\" : \"scale3d(1, -1, 1) translateY(-\" + style.height + \")\";\n\t\t}\n\n\t\tthis.drawRenderables(this._renderableHead, entityCollector);\n\n//\t\t\tif (this._activeMaterial)\n//\t\t\t\tthis._activeMaterial.iDeactivate(this._pStageGL);\n\n\t\tthis._activeMaterial = null;\n\t}\n\n\t/**\n\t * Updates the backbuffer properties.\n\t */\n\tpublic pUpdateBackBuffer()\n\t{\n\t\tthis._container.style.width = this._width + \"px\";\n\t\tthis._container.style.height = this._height + \"px\";\n\t\tthis._container.style.clip = \"rect(0px, \" + this._width + \"px, \" + this._height + \"px, 0px)\";\n\n\t\t//update context matrix\n\t\tthis._contextMatrix.rawData[0] = this._width/2;\n\t\tthis._contextMatrix.rawData[5] = -this._height/2;\n\t\tthis._contextMatrix.rawData[10] = -1; //fix for innaccurate z-sort\n\t\tthis._contextMatrix.rawData[12] = this._width/2;\n\t\tthis._contextMatrix.rawData[13] = this._height/2;\n\n\t\t//update context tranform\n\t\tthis._contextStyle.transform\n\t\t\t= this._contextStyle[\"-webkit-transform\"]\n\t\t\t= this._contextStyle[\"-moz-transform\"]\n\t\t\t= this._contextStyle[\"-o-transform\"]\n\t\t\t= this._contextStyle[\"-ms-transform\"] = this._contextMatrix.toString();\n\n\t\tthis._pBackBufferInvalid = false;\n\t}\n\n\t/**\n\t * Draw the skybox if present.\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tprivate drawSkybox(entityCollector:CSSEntityCollector)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Draw a list of renderables.\n\t * @param renderables The renderables to draw.\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tprivate drawRenderables(item:CSSRenderableBase, entityCollector:EntityCollector)\n\t{\n\t\tvar viewProjection:Matrix3D = entityCollector.camera.viewProjection.clone();\n\n\t\twhile (item) {\n\t\t\t//this._activeMaterial = <CSSMaterialBase> item.materialOwner.material;\n\n\t\t\t//serialise transform and apply to html element\n\t\t\tthis._transform.copyRawDataFrom(item.renderSceneTransform.rawData);\n\t\t\tthis._transform.append(viewProjection);\n\n\t\t\tvar style:MSStyleCSSProperties = item.htmlElement.style;\n\n\t\t\tstyle.transform\n\t\t\t\t= style[\"-webkit-transform\"]\n\t\t\t\t= style[\"-moz-transform\"]\n\t\t\t\t= style[\"-o-transform\"]\n\t\t\t\t= style[\"-ms-transform\"] = this._transform.toString();\n\n\t\t\tstyle.transformStyle\n\t\t\t\t= style[\"-webkit-transform-style\"]\n\t\t\t\t= style[\"-moz-transform-style\"]\n\t\t\t\t= style[\"-o-transform-style\"]\n\t\t\t\t= style[\"-ms-transform-style\"] = \"preserve-3d\";\n\n\t\t\t//check if child requires adding to the view\n\t\t\tif (!this._context.contains(item.htmlElement))\n\t\t\t\tthis._context.appendChild(item.htmlElement);\n\n\t\t\titem = item.next;\n\t\t}\n\n//\t\t\tvar numPasses:number;\n//\t\t\tvar j:number;\n//\t\t\tvar camera:away.entities.Camera = entityCollector.camera;\n//\t\t\tvar item2:away.render.CSSRenderableBase;\n//\n//\t\t\twhile (item) {\n//\t\t\t\tthis._activeMaterial = item.material;\n//\n//\t\t\t\tthis._activeMaterial.iUpdateMaterial(this._pContext);\n//\n//\t\t\t\tnumPasses = this._activeMaterial._iNumPasses;\n//\n//\t\t\t\tj = 0;\n//\n//\t\t\t\tdo {\n//\t\t\t\t\titem2 = item;\n//\n//\t\t\t\t\tvar rttMask:number = this._activeMaterial.iPassRendersToTexture(j)? 1 : 2;\n//\n//\t\t\t\t\tif ((rttMask & which) != 0) {\n//\t\t\t\t\t\tthis._activeMaterial.iActivatePass(j, this._pStageGL, camera);\n//\n//\t\t\t\t\t\tdo {\n//\t\t\t\t\t\t\tthis._activeMaterial.iRenderPass(j, item2, this._pStageGL, entityCollector);\n//\n//\t\t\t\t\t\t\titem2 = item2.next;\n//\n//\t\t\t\t\t\t} while (item2 && item2.material == this._activeMaterial);\n//\n//\t\t\t\t\t\tthis._activeMaterial.iDeactivatePass(j, this._pStageGL);\n//\n//\t\t\t\t\t} else {\n//\t\t\t\t\t\tdo {\n//\t\t\t\t\t\t\titem2 = item2.next;\n//\n//\t\t\t\t\t\t} while (item2 && item2.renderable.material == this._activeMaterial);\n//\t\t\t\t\t}\n//\t\t\t\t} while (++j < numPasses);\n//\n//\t\t\t\titem = item2;\n//\t\t\t}\n\t}\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\t//TODO\n\t}\n\n\n\tpublic _iCreateEntityCollector():CollectorBase\n\t{\n\t\treturn new CSSEntityCollector();\n\t}\n}\n\nexport = CSSDefaultRenderer;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CSSBillboardRenderable\t\t= require(\"awayjs-display/lib/pool/CSSBillboardRenderable\");\nimport CSSLineSegmentRenderable\t\t= require(\"awayjs-display/lib/pool/CSSLineSegmentRenderable\");\nimport CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\nimport CSSEntityCollector\t\t\t= require(\"awayjs-display/lib/traverse/CSSEntityCollector\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport CSSMaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/CSSMaterialBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/TextureBase\");\n\n/**\n * RendererBase forms an abstract base class for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.RendererBase\n */\nclass CSSRendererBase extends EventDispatcher\n{\n\tprivate _billboardRenderablePool:IRenderablePool;\n\tprivate _lineSegmentRenderablePool:IRenderablePool;\n\n\tpublic _pCamera:Camera;\n\tpublic _iEntryPoint:Vector3D;\n\tpublic _pCameraForward:Vector3D;\n\n\tprivate _backgroundR:number = 0;\n\tprivate _backgroundG:number = 0;\n\tprivate _backgroundB:number = 0;\n\tprivate _backgroundAlpha:number = 1;\n\tprivate _shareContext:boolean = false;\n\n\tpublic _pBackBufferInvalid:boolean = true;\n\tpublic _depthTextureInvalid:boolean = true;\n\n\tpublic _renderableHead:CSSRenderableBase;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\n\tprivate _viewPort:Rectangle = new Rectangle();\n\tprivate _viewportDirty:boolean;\n\tprivate _scissorRect:Rectangle = new Rectangle();\n\tprivate _scissorDirty:boolean;\n\n\tprivate _localPos:Point = new Point();\n\tprivate _globalPos:Point = new Point();\n\n\tprivate _scissorUpdated:RendererEvent;\n\tprivate _viewPortUpdated:RendererEvent;\n\n\t/**\n\t * A viewPort rectangle equivalent of the StageGL size and position.\n\t */\n\tpublic get viewPort():Rectangle\n\t{\n\t\treturn this._viewPort;\n\t}\n\n\t/**\n\t * A scissor rectangle equivalent of the view size and position.\n\t */\n\tpublic get scissorRect():Rectangle\n\t{\n\t\treturn this._scissorRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._localPos.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this.x == value)\n\t\t\treturn;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._localPos.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this.y == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.y = this._localPos.y = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._scissorRect.width = value;\n\t\tthis._viewPort.width = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._depthTextureInvalid = true;\n\n\t\tthis.notifyViewportUpdate();\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._scissorRect.height = value;\n\t\tthis._viewPort.height = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._depthTextureInvalid = true;\n\n\t\tthis.notifyViewportUpdate();\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic renderableSorter:IEntitySorter;\n\n\t/**\n\t * Creates a new RendererBase object.\n\t */\n\tconstructor(renderToTexture:boolean = false, forceSoftware:boolean = false, profile:string = \"baseline\")\n\t{\n\t\tsuper();\n\n\t\t//this._billboardRenderablePool = RenderablePool.getPool(CSSBillboardRenderable);\n\t\t//this._lineSegmentRenderablePool = RenderablePool.getPool(CSSLineSegmentRenderable);\n\n\t\tthis._viewPort = new Rectangle();\n\n\t\tif (this._width == 0)\n\t\t\tthis.width = window.innerWidth;\n\n\t\tif (this._height == 0)\n\t\t\tthis.height = window.innerHeight;\n\t}\n\n\t/**\n\t * The background color's red component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundR():number\n\t{\n\t\treturn this._backgroundR;\n\t}\n\n\tpublic set _iBackgroundR(value:number)\n\t{\n\t\tif (this._backgroundR == value)\n\t\t\treturn;\n\n\t\tthis._backgroundR = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's green component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundG():number\n\t{\n\t\treturn this._backgroundG;\n\t}\n\n\tpublic set _iBackgroundG(value:number)\n\t{\n\t\tif (this._backgroundG == value)\n\t\t\treturn;\n\n\t\tthis._backgroundG = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's blue component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundB():number\n\t{\n\t\treturn this._backgroundB;\n\t}\n\n\tpublic set _iBackgroundB(value:number)\n\t{\n\t\tif (this._backgroundB == value)\n\t\t\treturn;\n\n\t\tthis._backgroundB = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t * Disposes the resources used by the RendererBase.\n\t */\n\tpublic dispose()\n\t{\n\t\t/*\n\t\t if (_backgroundImageRenderer) {\n\t\t _backgroundImageRenderer.dispose();\n\t\t _backgroundImageRenderer = null;\n\t\t }\n\t\t */\n\t}\n\n\tpublic render(entityCollector:CollectorBase)\n\t{\n\t\tthis._viewportDirty = false;\n\t\tthis._scissorDirty = false;\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture.\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t * @param scissorRect\n\t */\n\tpublic _iRender(entityCollector:EntityCollector, target:TextureBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tif (!entityCollector.entityHead)\n\t\t\treturn;\n\n\t\tthis.pExecuteRender(entityCollector, scissorRect);\n\t}\n\n\tpublic _iRenderCascades(entityCollector:CollectorBase, target:TextureBase, numCascades:number, scissorRects:Array<Rectangle>, cameras:Array<Camera>)\n\t{\n\n\t}\n\tpublic pCollectRenderables(entityCollector:CollectorBase)\n\t{\n\t\t////reset head values\n\t\t//this._renderableHead = null;\n\t\t//\n\t\t////grab entity head\n\t\t//var item:EntityListItem = entityCollector.entityHead;\n\t\t//\n\t\t////set temp values for entry point and camera forward vector\n\t\t//this._pCamera = entityCollector.camera;\n\t\t//this._iEntryPoint = this._pCamera.scenePosition;\n\t\t//this._pCameraForward = this._pCamera.transform.forwardVector;\n\t\t//\n\t\t////iterate through all entities\n\t\t//while (item) {\n\t\t//\t//item.entity._iCollectRenderables(this);\n\t\t//\titem = item.next;\n\t\t//}\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture. Only executed if everything is set up.\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t * @param scissorRect\n\t */\n\tpublic pExecuteRender(entityCollector:CSSEntityCollector, scissorRect:Rectangle = null)\n\t{\n\t\tthis.pCollectRenderables(entityCollector);\n\n\t\tthis.pDraw(entityCollector);\n\t}\n\n\t/**\n\t * Performs the actual drawing of dom objects to the target.\n\t *\n\t * @param entityCollector The EntityCollector object containing the potentially visible dom objects.\n\t */\n\tpublic pDraw(entityCollector:CSSEntityCollector)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get _iBackgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\tpublic set _iBackgroundAlpha(value:number)\n\t{\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._backgroundAlpha = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t *\n\t * @param billboard\n\t */\n\tpublic applyBillboard(billboard:Billboard)\n\t{\n\t\t//this._applyRenderable(<CSSRenderableBase> this._billboardRenderablePool.getItem(billboard));\n\t}\n\n\t/**\n\t *\n\t * @param lineSubMesh\n\t */\n\tpublic applyLineSubMesh(lineSubMesh:LineSubMesh)\n\t{\n\t\t//this._applyRenderable(<CSSRenderableBase> this._billboardRenderablePool.getItem(lineSegment));\n\t}\n\n\t/**\n\t *\n\t * @param skybox\n\t */\n\tpublic applySkybox(skybox:Skybox)\n\t{\n\n\t}\n\n\t/**\n\t *\n\t * @param triangleSubMesh\n\t */\n\tpublic applyTriangleSubMesh(triangleSubMesh:TriangleSubMesh)\n\t{\n\n\t}\n\n\t/**\n\t *\n\t * @param renderable\n\t * @private\n\t */\n\tprivate _applyRenderable(renderable:CSSRenderableBase)\n\t{\n\t\tvar material:CSSMaterialBase;// = <CSSMaterialBase> renderable.renderableOwner.material;\n\t\tvar entity:IEntity = renderable.sourceEntity;\n\t\tvar position:Vector3D = entity.scenePosition;\n\n\t\tif (material) {\n\t\t\t//set ids for faster referencing\n\t\t\trenderable.materialId = material._iMaterialId;\n//\t\t\t\trenderable.renderOrderId = material._iRenderOrderId;\n\t\t\trenderable.cascaded = false;\n\n\t\t\t// project onto camera's z-axis\n\t\t\tposition = this._iEntryPoint.subtract(position);\n\t\t\trenderable.zIndex = entity.zOffset - position.dotProduct(this._pCameraForward);\n\n\t\t\t//store reference to scene transform\n\t\t\trenderable.renderSceneTransform = renderable.sourceEntity.getRenderSceneTransform(this._pCamera);\n\n\t\t\t//store reference to next item in list\n\t\t\trenderable.next = this._renderableHead;\n\t\t\tthis._renderableHead = renderable;\n\t\t}\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScissorUpdate()\n\t{\n\t\tif (this._scissorDirty)\n\t\t\treturn;\n\n\t\tthis._scissorDirty = true;\n\n\t\tif (!this._scissorUpdated)\n\t\t\tthis._scissorUpdated = new RendererEvent(RendererEvent.SCISSOR_UPDATED);\n\n\t\tthis.dispatchEvent(this._scissorUpdated);\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyViewportUpdate()\n\t{\n\t\tif (this._viewportDirty)\n\t\t\treturn;\n\n\t\tthis._viewportDirty = true;\n\n\t\tif (!this._viewPortUpdated)\n\t\t\tthis._viewPortUpdated = new RendererEvent(RendererEvent.VIEWPORT_UPDATED);\n\n\t\tthis.dispatchEvent(this._viewPortUpdated);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updateGlobalPos()\n\t{\n\t\tthis._viewPort.x = this._globalPos.x;\n\t\tthis._viewPort.y = this._globalPos.y;\n\n\t\tthis.notifyViewportUpdate();\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\n\tpublic _iCreateEntityCollector():CollectorBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = CSSRendererBase;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable;\n\t\tvar slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable, slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.renderObjectId;\n\t\t\t\tvar mb:number = headB.renderObjectId;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n}\n\nexport = RenderableNullSort;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass Font extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport = Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * SubGeometry for this char\n\t */\n\tpublic subgeom:CurveSubGeometry;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(subgeom:CurveSubGeometry)\n\t{\n\t\tthis.char_width=0;\n\t\tthis.subgeom = subgeom;\n\t\tif (this.subgeom != null) {\n\t\t\tvar positions2:Array<number> = this.subgeom.positions;\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\n\t\t\t\tif(positions2[v*3]>this.char_width)\n\t\t\t\t\tthis.char_width=positions2[v*3];\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport = TesselatedFontChar;",
    "\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport SubGeometryBase\t\t\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tprivate _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[char];\n\t}\n\t/**\n\t *\n\t */\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\n\t\tsubgeo.name=char;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\n\t}\n\n}\n\nexport = TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.CSSEntityCollector\n */\nclass CSSEntityCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase\n{\n\tpublic scene:Scene;\n\n\tpublic _pEntityHead:EntityListItem;\n\tpublic _pEntityListItemPool:EntityListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tpublic _pNumEntities:number = 0;\n\tpublic _pNumInteractiveEntities:number = 0;\n\n\tpublic isEntityCollector:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get entityHead():EntityListItem\n\t{\n\t\treturn this._pEntityHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numEntities():number\n\t{\n\t\treturn this._pNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numInteractiveEntities():number\n\t{\n\t\treturn this._pNumInteractiveEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pEntityHead = null;\n\t\tthis._pEntityListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._pNumEntities++;\n\n\t\tif (entity._iIsMouseEnabled())\n\t\t\tthis._pNumInteractiveEntities++;\n\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\n\t\titem.entity = entity;\n\n\t\titem.next = this._pEntityHead;\n\t\tthis._pEntityHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\n\t\tthis.isEntityCollector = true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/data/BitmapData\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport BitmapTexture\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\nimport ImageTexture\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static bitmapData(data:any):BitmapData\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof BitmapData)\n\t\t\treturn data;\n\n\t\tif (data instanceof ImageTexture)\n\t\t\tdata = (<ImageTexture> data).htmlImageElement;\n\n\t\tif (data instanceof HTMLImageElement) {\n\t\t\tvar imageElement:HTMLImageElement = <HTMLImageElement> data;\n\t\t\tvar bitmapData:BitmapData = new BitmapData(imageElement.width, imageElement.height, true, 0x0);\n\t\t\tbitmapData.draw(imageElement)\n\t\t\treturn bitmapData;\n\t\t}\n\n\t\t//            if (data is DisplayObject) {\n\t\t//                var ds:DisplayObject = data as DisplayObject;\n\t\t//                var bmd:BitmapData = new BitmapData(ds.width, ds.height, true, 0x00FFFFFF);\n\t\t//                var mat:Matrix = ds.transform.matrix.clone();\n\t\t//                mat.tx = 0;\n\t\t//                mat.ty = 0;\n\t\t//                bmd.draw(ds, mat, ds.transform.colorTransform, ds.blendMode, bmd.rect, true);\n\t\t//                return bmd;\n\t\t//            }\n\n\t\tthrow new CastError(\"Can't cast to BitmapData: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):BitmapTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof BitmapTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:BitmapData = Cast.bitmapData(data);\n\t\t\treturn new BitmapTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to BitmapTexture: \" + data);\n\t}\n}\n\nexport = Cast;"
  ],
  "sourceRoot": ""
}
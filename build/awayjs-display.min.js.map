{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "../index.ts",
    "lib/View.ts",
    "lib/animators/lib/animators/data/ParticleData.ts",
    "lib/animators/lib/animators/nodes/AnimationNodeBase.ts",
    "lib/animators.ts",
    "lib/lib/base/AlignmentMode.ts",
    "lib/lib/base/HierarchicalProperties.ts",
    "lib/lib/base/OrientationMode.ts",
    "lib/lib/base/Style.ts",
    "lib/lib/base/Timeline.ts",
    "lib/lib/base/TouchPoint.ts",
    "lib/lib/base/Transform.ts",
    "lib/base.ts",
    "lib/lib/bounds/AxisAlignedBoundingBox.ts",
    "lib/lib/bounds/BoundingSphere.ts",
    "lib/lib/bounds/BoundingVolumeBase.ts",
    "lib/lib/bounds/BoundsType.ts",
    "lib/lib/bounds/NullBounds.ts",
    "lib/bounds.ts",
    "lib/lib/controllers/ControllerBase.ts",
    "lib/lib/controllers/FirstPersonController.ts",
    "lib/lib/controllers/FollowController.ts",
    "lib/lib/controllers/HoverController.ts",
    "lib/lib/controllers/LookAtController.ts",
    "lib/lib/controllers/SpringController.ts",
    "lib/controllers.ts",
    "lib/lib/display/Billboard.ts",
    "lib/lib/display/Camera.ts",
    "lib/lib/display/DirectionalLight.ts",
    "lib/lib/display/DisplayObjectContainer.ts",
    "lib/lib/display/DisplayObject.ts",
    "lib/lib/display/LightBase.ts",
    "lib/lib/display/LightProbe.ts",
    "lib/lib/display/LineSegment.ts",
    "lib/lib/display/LoaderContainer.ts",
    "lib/lib/display/MovieClip.ts",
    "lib/lib/display/PointLight.ts",
    "lib/lib/display/Scene.ts",
    "lib/lib/display/Shape.ts",
    "lib/lib/display/Skybox.ts",
    "lib/lib/display/Sprite.ts",
    "lib/lib/display/TextField.ts",
    "lib/display.ts",
    "lib/lib/draw/CapsStyle.ts",
    "lib/lib/draw/GradientType.ts",
    "lib/lib/draw/GraphicsPathCommand.ts",
    "lib/lib/draw/GraphicsPathWinding.ts",
    "lib/lib/draw/GraphicsPath.ts",
    "lib/lib/draw/Graphics.ts",
    "lib/lib/draw/InterpolationMethod.ts",
    "lib/lib/draw/JointStyle.ts",
    "lib/lib/draw/LineScaleMode.ts",
    "lib/lib/draw/PixelSnapping.ts",
    "lib/lib/draw/SpreadMethod.ts",
    "lib/lib/draw/TriangleCulling.ts",
    "lib/draw.ts",
    "lib/lib/errors/CastError.ts",
    "lib/errors.ts",
    "lib/lib/events/CameraEvent.ts",
    "lib/lib/events/DisplayObjectEvent.ts",
    "lib/lib/events/ElementsEvent.ts",
    "lib/lib/events/LightEvent.ts",
    "lib/lib/events/MouseEvent.ts",
    "lib/lib/events/RenderableEvent.ts",
    "lib/lib/events/RendererEvent.ts",
    "lib/lib/events/ResizeEvent.ts",
    "lib/lib/events/StyleEvent.ts",
    "lib/lib/events/SurfaceEvent.ts",
    "lib/lib/events/TouchEvent.ts",
    "lib/lib/events/TransformEvent.ts",
    "lib/events.ts",
    "lib/lib/graphics/ElementsBase.ts",
    "lib/lib/graphics/ElementsType.ts",
    "lib/lib/graphics/Graphics.ts",
    "lib/lib/graphics/Graphic.ts",
    "lib/lib/graphics/LineElements.ts",
    "lib/lib/graphics/TriangleElements.ts",
    "lib/graphics.ts",
    "lib/lib/managers/DefaultMaterialManager.ts",
    "lib/lib/managers/FrameScriptManager.ts",
    "lib/lib/managers/MouseManager.ts",
    "lib/lib/managers/TouchManager.ts",
    "lib/managers.ts",
    "lib/lib/materials/BasicMaterial.ts",
    "lib/lib/materials/LightSources.ts",
    "lib/lib/materials/MaterialBase.ts",
    "lib/materials/lib/materials/lightpickers/LightPickerBase.ts",
    "lib/materials/lib/materials/lightpickers/StaticLightPicker.ts",
    "lib/materials/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "lib/materials/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "lib/materials/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "lib/materials/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "lib/materials/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "lib/materials.ts",
    "lib/lib/partition/BasicPartition.ts",
    "lib/lib/partition/CameraNode.ts",
    "lib/lib/partition/DirectionalLightNode.ts",
    "lib/lib/partition/DisplayObjectNode.ts",
    "lib/lib/partition/EntityNode.ts",
    "lib/lib/partition/LightProbeNode.ts",
    "lib/lib/partition/NodeBase.ts",
    "lib/lib/partition/PartitionBase.ts",
    "lib/lib/partition/PointLightNode.ts",
    "lib/lib/partition/SceneGraphNode.ts",
    "lib/lib/partition/SceneGraphPartition.ts",
    "lib/lib/partition/SkyboxNode.ts",
    "lib/partition.ts",
    "lib/lib/pick/JSPickingCollider.ts",
    "lib/lib/pick/PickingCollision.ts",
    "lib/lib/pick/RaycastPicker.ts",
    "lib/pick.ts",
    "lib/lib/prefabs/PrefabBase.ts",
    "lib/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "lib/lib/prefabs/PrimitiveConePrefab.ts",
    "lib/lib/prefabs/PrimitiveCubePrefab.ts",
    "lib/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "lib/lib/prefabs/PrimitivePlanePrefab.ts",
    "lib/lib/prefabs/PrimitivePolygonPrefab.ts",
    "lib/lib/prefabs/PrimitivePrefabBase.ts",
    "lib/lib/prefabs/PrimitiveSpherePrefab.ts",
    "lib/lib/prefabs/PrimitiveTorusPrefab.ts",
    "lib/prefabs.ts",
    "lib/lib/text/AntiAliasType.ts",
    "lib/lib/text/Font.ts",
    "lib/lib/text/GridFitType.ts",
    "lib/lib/text/TesselatedFontChar.ts",
    "lib/lib/text/TesselatedFontTable.ts",
    "lib/lib/text/TextFieldAutoSize.ts",
    "lib/lib/text/TextFieldType.ts",
    "lib/lib/text/TextFormatAlign.ts",
    "lib/lib/text/TextFormat.ts",
    "lib/lib/text/TextInteractionMode.ts",
    "lib/lib/text/TextLineMetrics.ts",
    "lib/text.ts",
    "lib/lib/textures/MappingMode.ts",
    "lib/lib/textures/Single2DTexture.ts",
    "lib/lib/textures/SingleCubeTexture.ts",
    "lib/lib/textures/TextureBase.ts",
    "lib/textures.ts",
    "lib/lib/utils/Cast.ts",
    "lib/lib/utils/ElementsUtils.ts",
    "lib/utils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    1,
    "module",
    "adapters",
    "animators",
    "base",
    "bounds",
    "controllers",
    "display",
    "draw",
    "errors",
    "events",
    "factories",
    "graphics",
    "managers",
    "materials",
    "partition",
    "pick",
    "prefabs",
    "text",
    "textures",
    "utils",
    "View_1",
    "View",
    "default",
    "PartitionBase",
    "registerAbstraction",
    "CameraNode",
    "Camera",
    "DirectionalLightNode",
    "DirectionalLight",
    "EntityNode",
    "Sprite",
    "Shape",
    "MovieClip",
    "Billboard",
    "LineSegment",
    "TextField",
    "LightProbeNode",
    "LightProbe",
    "PointLightNode",
    "PointLight",
    "SkyboxNode",
    "Skybox",
    "awayjs-display/lib/View",
    "awayjs-display/lib/adapters",
    "awayjs-display/lib/animators",
    "awayjs-display/lib/base",
    "awayjs-display/lib/bounds",
    "awayjs-display/lib/controllers",
    "awayjs-display/lib/display",
    "awayjs-display/lib/draw",
    "awayjs-display/lib/errors",
    "awayjs-display/lib/events",
    "awayjs-display/lib/factories",
    "awayjs-display/lib/graphics",
    "awayjs-display/lib/managers",
    "awayjs-display/lib/materials",
    "awayjs-display/lib/partition",
    "awayjs-display/lib/pick",
    "awayjs-display/lib/prefabs",
    "awayjs-display/lib/text",
    "awayjs-display/lib/textures",
    "awayjs-display/lib/utils",
    "awayjs-display/lib/IRenderer",
    "awayjs-display/lib/ITraverser",
    "getTimer_1",
    "TouchPoint_1",
    "Scene_1",
    "RaycastPicker_1",
    "Camera_1",
    "CameraEvent_1",
    "DisplayObjectEvent_1",
    "RendererEvent_1",
    "MouseManager_1",
    "renderer",
    "scene",
    "camera",
    "_this",
    "this",
    "_width",
    "_height",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_pTouchPoints",
    "Array",
    "_onPartitionChangedDelegate",
    "event",
    "_onPartitionChanged",
    "_onProjectionChangedDelegate",
    "_onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "_onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "_onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "position",
    "appendChild",
    "_mouseManager",
    "getInstance",
    "registerView",
    "Object",
    "defineProperty",
    "prototype",
    "get",
    "_pMouseX",
    "enumerable",
    "configurable",
    "_pMouseY",
    "getLocalMouseX",
    "displayObject",
    "inverseSceneTransform",
    "transformVector",
    "unproject",
    "x",
    "getLocalMouseY",
    "y",
    "getLocalTouchPoints",
    "localPosition",
    "localTouchPoints",
    "len",
    "push",
    "id",
    "_pRenderer",
    "set",
    "value",
    "dispose",
    "removeEventListener",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "addEventListener",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "width",
    "height",
    "shareContext",
    "_shareContext",
    "_pCamera",
    "PROJECTION_CHANGED",
    "_pScene",
    "_iRegisterEntity",
    "PARTITION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "left",
    "top",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollision",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "./base/TouchPoint",
    "./display/Camera",
    "./display/Scene",
    "./events/CameraEvent",
    "./events/DisplayObjectEvent",
    "./events/RendererEvent",
    "./managers/MouseManager",
    "./pick/RaycastPicker",
    "awayjs-core/lib/utils/getTimer",
    "undefined",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/data/ParticleData",
    "ParticleData",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "create",
    "AssetBase_1",
    "AnimationNodeBase",
    "_super",
    "_pStateClass",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "ParticleData_1",
    "AnimationNodeBase_1",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/HierarchicalProperties",
    "HierarchicalProperties",
    "MOUSE_ENABLED",
    "VISIBLE",
    "MASK_ID",
    "MASKS",
    "COLOR_TRANSFORM",
    "SCENE_TRANSFORM",
    "ALL",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderable",
    "awayjs-display/lib/base/ISurface",
    "awayjs-display/lib/base/OrientationMode",
    "OrientationMode",
    "DEFAULT",
    "CAMERA_PLANE",
    "CAMERA_POSITION",
    "awayjs-display/lib/base/Style",
    "EventDispatcher_1",
    "StyleEvent_1",
    "Style",
    "_samplers",
    "_images",
    "_color",
    "_sampler",
    "_invalidateProperties",
    "_image",
    "_uvMatrix",
    "getImageAt",
    "texture",
    "index",
    "getSamplerAt",
    "addImageAt",
    "image",
    "addSamplerAt",
    "sampler",
    "removeImageAt",
    "removeSamplerAt",
    "dispatchEvent",
    "INVALIDATE_PROPERTIES",
    "awayjs-core/lib/events/EventDispatcher",
    "awayjs-display/lib/events/StyleEvent",
    "awayjs-display/lib/base/Timeline",
    "HierarchicalProperties_1",
    "ColorTransform_1",
    "FrameScriptManager_1",
    "Timeline",
    "_functions",
    "_update_indices",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "update_mtx_all",
    "update_colortransform",
    "update_masks",
    "update_name",
    "update_button_name",
    "update_visibility",
    "update_mtx_scale_rot",
    "update_mtx_pos",
    "enable_maskmode",
    "remove_masks",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "frameScriptDebug",
    "functionname",
    "split",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "indexOf",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "scriptPass1",
    "adapter",
    "evalScript",
    "add_script_to_queue",
    "add_script_to_queue_pass2",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChildInstance",
    "this_clone",
    "clone",
    "name",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "skip_script",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "k",
    "numChildren",
    "_children",
    "_depthID",
    "removeChildAt",
    "resetSessionIDs",
    "depth_sessionIDs",
    "getSessionIDDepths",
    "pass1",
    "child",
    "_sessionID",
    "isBlockedByScript",
    "transform",
    "clearMatrix3D",
    "clearColorTransform",
    "masks",
    "maskMode",
    "isVisibilityByScript",
    "visible",
    "key",
    "add_child_stream",
    "_addTimelineChildAt",
    "Number",
    "pass2",
    "update_cnt",
    "start_index",
    "end_index",
    "frame_command_idx",
    "command_index_stream",
    "command_length_stream",
    "remove_child_stream",
    "update_childs",
    "queueScript",
    "frameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "getDepthIndexInternal",
    "idx",
    "props_start_idx",
    "props_end_index",
    "getChildAtSessionID",
    "update_child_stream",
    "_blocked",
    "Boolean",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "matrix3D",
    "rawData",
    "properties_stream_f32_mtx_all",
    "invalidateComponents",
    "new_ct",
    "colorTransform",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "alphaMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "invalidateColorTransform",
    "mask",
    "numMasks",
    "properties_stream_int",
    "m",
    "properties_stream_strings",
    "registerScriptObject",
    "target",
    "addButtonListeners",
    "properties_stream_f32_mtx_scale_rot",
    "pInvalidateHierarchicalProperties",
    "properties_stream_f32_mtx_pos",
    "invalidatePosition",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-display/lib/managers/FrameScriptManager",
    "awayjs-display/lib/base/TouchPoint",
    "TouchPoint",
    "awayjs-display/lib/base/Transform",
    "Matrix3D_1",
    "Matrix3DUtils_1",
    "Vector3D_1",
    "TransformEvent_1",
    "Transform",
    "_matrix3D",
    "_rotation",
    "_skew",
    "_scale",
    "_components",
    "director",
    "getForward",
    "negate",
    "_colorTransform",
    "val",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_matrix3DDirty",
    "_updateMatrix3D",
    "_pixelBounds",
    "_componentsDirty",
    "_updateComponents",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "z",
    "invalidateMatrix3D",
    "scaleTo",
    "sx",
    "sy",
    "sz",
    "skewTo",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "distance",
    "translateLocal",
    "Z_AXIS",
    "moveBackward",
    "moveLeft",
    "X_AXIS",
    "moveRight",
    "moveUp",
    "Y_AXIS",
    "moveDown",
    "moveTo",
    "dx",
    "dy",
    "dz",
    "pitch",
    "angle",
    "rotate",
    "roll",
    "yaw",
    "axis",
    "prependRotation",
    "translate",
    "Math",
    "sqrt",
    "appendTranslation",
    "prependTranslation",
    "identity",
    "clear",
    "INVALIDATE_MATRIX3D",
    "INVALIDATE_COLOR_TRANSFORM",
    "recompose",
    "elements",
    "decompose",
    "vec",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/events/TransformEvent",
    "AlignmentMode_1",
    "OrientationMode_1",
    "Style_1",
    "Timeline_1",
    "Transform_1",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification_1",
    "ElementsType_1",
    "BoundingVolumeBase_1",
    "PrimitiveCubePrefab_1",
    "AxisAlignedBoundingBox",
    "entity",
    "_x",
    "_y",
    "_z",
    "_depth",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "getBox",
    "matrix",
    "sceneTransform",
    "hx",
    "hy",
    "hz",
    "depth",
    "cx",
    "cy",
    "cz",
    "raw",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "_pCreateBoundsPrimitive",
    "LINE",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/graphics/ElementsType",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab_1",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "getSphere",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "AbstractMethodError_1",
    "BoundingVolumeBase",
    "invalidate",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-display/lib/bounds/BoundsType",
    "BoundsType",
    "SPHERE",
    "AXIS_ALIGNED_BOX",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "AxisAlignedBoundingBox_1",
    "BoundingSphere_1",
    "BoundsType_1",
    "NullBounds_1",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "invalidatePartitionBounds",
    "_iController",
    "update",
    "interpolate",
    "updateController",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "MathConsts_1",
    "ControllerBase_1",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "max",
    "min",
    "rotationX",
    "rotationY",
    "sin",
    "DEGREES_TO_RADIANS",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController_1",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController_1",
    "HoverController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "pos",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "lookAt",
    "scenePosition",
    "awayjs-display/lib/controllers/LookAtController",
    "LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "SCENETRANSFORM_CHANGED",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "copyFrom",
    "incrementBy",
    "FirstPersonController_1",
    "FollowController_1",
    "SpringController_1",
    "awayjs-display/lib/display/Billboard",
    "Rectangle_1",
    "DisplayObject_1",
    "RenderableEvent_1",
    "SurfaceEvent_1",
    "DefaultMaterialManager_1",
    "material",
    "pixelSnapping",
    "smoothing",
    "_pIsEntity",
    "onInvalidateTextureDelegate",
    "onInvalidateTexture",
    "_onInvalidatePropertiesDelegate",
    "_onInvalidateProperties",
    "_updateDimensions",
    "_boundsType",
    "_animator",
    "_billboardRect",
    "_billboardHeight",
    "_billboardWidth",
    "_material",
    "iRemoveOwner",
    "INVALIDATE_TEXTURE",
    "iAddOwner",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "_style",
    "_iTestCollision",
    "pickingCollision",
    "pickingCollider",
    "testBillboardCollision",
    "_acceptTraverser",
    "traverser",
    "applyRenderable",
    "getTextureAt",
    "getDefaultSampler",
    "imageRect",
    "rect",
    "frameRect",
    "_pInvalidateBounds",
    "INVALIDATE_ELEMENTS",
    "invalidateSurface",
    "INVALIDATE_RENDER_OWNER",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/display/DisplayObject",
    "awayjs-display/lib/events/RenderableEvent",
    "awayjs-display/lib/events/SurfaceEvent",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "awayjs-display/lib/display/Camera",
    "Plane3D_1",
    "ProjectionEvent_1",
    "PerspectiveProjection_1",
    "DisplayObjectContainer_1",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "viewProjection",
    "invLen",
    "bitFlag",
    "_hierarchicalPropsDirty",
    "append",
    "nX",
    "nY",
    "_applyRenderer",
    "_iSourcePrefab",
    "_iValidate",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/display/DisplayObjectContainer",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/display/DirectionalLight",
    "LightBase_1",
    "DirectionalShadowMapper_1",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "pUpdateSceneTransform",
    "_direction",
    "_tmpLookAt",
    "copyColumnTo",
    "normalize",
    "pCreateShadowMapper",
    "iGetObjectProjectionMatrix",
    "cameraTransform",
    "RAW_DATA_CONTAINER",
    "getRenderSceneTransform",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "copyRawDataFrom",
    "prepend",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "awayjs-display/lib/display/LightBase",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "ArgumentError_1",
    "RangeError_1",
    "DisplayObjectContainer",
    "_mouseChildren",
    "_depth_childs",
    "_nextHighestDepth",
    "_updateMouseEnabled",
    "addChild",
    "addChildAt",
    "addChildAtDepth",
    "replace",
    "_pParent",
    "removeChildAtInternal",
    "getChildIndex",
    "iSetParent",
    "_invalidateChildren",
    "getNextHighestDepth",
    "addChildren",
    "childarray",
    "_i",
    "arguments",
    "newInstance",
    "copyTo",
    "mouseChildren",
    "contains",
    "disposeValues",
    "removeChild",
    "getChildAtDepth",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "_nextHighestDepthDirty",
    "_updateNextHighestDepth",
    "getObjectsUnderPoint",
    "point",
    "removeChildAtDepth",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "box",
    "setEmpty",
    "_iSetScene",
    "splice",
    "_hitTestPointInternal",
    "shapeFlag",
    "masksFlag",
    "hitTestPoint",
    "_updateMaskMode",
    "_pIsContainer",
    "_pImplicitPartition",
    "_iUnregisterEntity",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/RangeError",
    "Box_1",
    "Sphere_1",
    "Point_1",
    "PickingCollision_1",
    "DisplayObject",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_explicitMaskId",
    "_pImplicitVisibility",
    "_pImplicitMaskId",
    "_pImplicitMaskIds",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_orientationMatrix",
    "_inheritColorTransform",
    "_maskMode",
    "_tempVector3D",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "zOffset",
    "_transform",
    "_onInvalidateMatrix3D",
    "_onInvalidateColorTransform",
    "_adapter",
    "scaleZ",
    "_setScaleZ",
    "_eulers",
    "rotationZ",
    "scaleY",
    "_setScaleY",
    "_inverseSceneTransformDirty",
    "invert",
    "_loaderInfo",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_iAssignedPartition",
    "_pivot",
    "pivot",
    "_pivotScale",
    "_root",
    "rotation",
    "RADIANS_TO_DEGREES",
    "scale",
    "_setScaleX",
    "skew",
    "skewX",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "_shaderPickingDetails",
    "_debugVisible",
    "_explicitMasks",
    "scaleX",
    "type",
    "listener",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "_listenToSceneTransformChanged",
    "boundsType",
    "mouseEnabled",
    "extra",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "transformBox",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "setTo",
    "globalToLocal3D",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "maskHit",
    "isMask",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "subtract",
    "crossProduct",
    "localToGlobal3D",
    "movePivot",
    "reset",
    "comps",
    "hasEventListener",
    "_pickingCollision",
    "propDirty",
    "newPropDirty",
    "isEntity",
    "queueDispatch",
    "_sceneTransformChanged",
    "sceneChanged",
    "_iUnregisterPartition",
    "_iRegisterPartition",
    "_sceneChanged",
    "_iIsRoot",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iInternalUpdate",
    "_iIsVisible",
    "_updateVisible",
    "_iAssignedMaskId",
    "_updateMaskId",
    "_iAssignedMasks",
    "_updateMasks",
    "_pImplicitMasks",
    "_iMasksConfig",
    "_iAssignedColorTransform",
    "_updateColorTransform",
    "_pImplicitColorTransform",
    "_iIsMouseEnabled",
    "collector",
    "concat",
    "numLayers",
    "implicitChildren",
    "implicitChildIds",
    "j",
    "INVALIDATE_PARTITION_BOUNDS",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-display/lib/pick/PickingCollision",
    "awayjs-display/lib/display/IEntity",
    "LightEvent_1",
    "LightBase",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_shadowsEnabled",
    "_shadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/display/LightProbe",
    "SamplerCube_1",
    "ErrorBase_1",
    "diffuseMap",
    "specularMap",
    "diffuseSampler",
    "specularSampler",
    "awayjs-core/lib/errors/ErrorBase",
    "awayjs-core/lib/image/SamplerCube",
    "awayjs-display/lib/display/LineSegment",
    "startPosition",
    "endPosition",
    "thickness",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "invalidateGraphics",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/display/LoaderContainer",
    "AssetLibraryBundle_1",
    "Loader_1",
    "AssetEvent_1",
    "URLLoaderEvent_1",
    "LoaderEvent_1",
    "ParserEvent_1",
    "LoaderContainer",
    "useAssetLibrary",
    "assetLibraryId",
    "_useAssetLib",
    "_assetLibId",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadCompleteDelegate",
    "onLoadComplete",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_content",
    "close",
    "_loader",
    "lib",
    "disposeLoader",
    "_disposeLoader",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoader",
    "loadData",
    "data",
    "getLoader",
    "LOAD_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "stop",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "LOAD_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/events/URLLoaderEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/Loader",
    "awayjs-display/lib/display/MovieClip",
    "Sprite_1",
    "TextField_1",
    "MouseEvent_1",
    "timeline",
    "_isButton",
    "_currentFrameIndex",
    "_isPlaying",
    "_isInit",
    "_potentialInstances",
    "_depth_sessionIDs",
    "_sessionID_childs",
    "loop",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "_movieClips",
    "reset_textclones",
    "isAsset",
    "numFrames",
    "freeFromScript",
    "_skipAdvance",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "sessionID",
    "unregisterScriptObject",
    "play",
    "advanceFrame",
    "execute_queue",
    "execute_intervals",
    "execute_dispose",
    "pop",
    "logHierarchy",
    "printHierarchyName",
    "console",
    "log",
    "instance",
    "add_child_to_dispose",
    "awayjs-display/lib/display/Sprite",
    "awayjs-display/lib/display/TextField",
    "awayjs-display/lib/events/MouseEvent",
    "awayjs-display/lib/display/PointLight",
    "CubeMapShadowMapper_1",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/display/Scene",
    "BasicPartition_1",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "traversePartitions",
    "traverse",
    "awayjs-display/lib/partition/BasicPartition",
    "awayjs-display/lib/display/Shape",
    "Graphics_1",
    "_tempPoint",
    "_onGraphicsInvalidateDelegate",
    "_onGraphicsInvalidate",
    "_graphics",
    "INVALIDATE",
    "animator",
    "removeOwner",
    "addOwner",
    "bakeTransformations",
    "applyTransformation",
    "_shapes",
    "shape",
    "union",
    "getBoxBounds",
    "_center",
    "getSphereBounds",
    "count",
    "acceptTraverser",
    "local",
    "awayjs-display/lib/graphics/Graphics",
    "awayjs-display/lib/display/Skybox",
    "BlendMode_1",
    "SingleCubeTexture_1",
    "_textures",
    "_pAlphaThreshold",
    "_pBlendMode",
    "NORMAL",
    "_curves",
    "_imageRect",
    "_onTextureInvalidateDelegate",
    "onTextureInvalidate",
    "_owners",
    "invalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_texture",
    "removeTexture",
    "addTexture",
    "getNumTextures",
    "INVALIDATE_PASSES",
    "awayjs-core/lib/image/BlendMode",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "_sprites",
    "sprite",
    "AttributesView_1",
    "Float2Attributes_1",
    "Byte4Attributes_1",
    "Matrix_1",
    "Sampler2D_1",
    "TextFieldType_1",
    "TriangleElements_1",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "toString",
    "_textGraphicsDirty",
    "_textFormat",
    "reConstruct",
    "_textColor",
    "color",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "_textElements",
    "_textFields",
    "_textGraphic",
    "numVertices",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "y_offset",
    "prev_char",
    "whitespace_width",
    "get_whitespace_width",
    "letterSpacing",
    "textlines",
    "final_lines_chars",
    "final_lines_char_scale",
    "final_lines_width",
    "final_lines_justify_bool",
    "final_lines_justify",
    "maxlineWidth",
    "textWidth",
    "leftMargin",
    "rightMargin",
    "indent",
    "tl",
    "words",
    "word_width",
    "word_chars",
    "word_chars_scale",
    "c_cnt",
    "w",
    "this_char",
    "getChar",
    "charCodeAt",
    "fallback_font_table",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "fw",
    "ascent",
    "vertices",
    "Float32Array",
    "x_offset",
    "justify_addion",
    "align",
    "buffer",
    "concatenatedBuffer",
    "descent",
    "leading",
    "attributesView",
    "vertexBuffer",
    "setPositions",
    "setCustomAttributes",
    "addGraphic",
    "uvMatrix",
    "uv_values",
    "animateUVs",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "textHeight",
    "textFormat",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/geom/Matrix",
    "awayjs-core/lib/image/Sampler2D",
    "awayjs-display/lib/graphics/TriangleElements",
    "awayjs-display/lib/text/TextFieldType",
    "Billboard_1",
    "DirectionalLight_1",
    "LightProbe_1",
    "LineSegment_1",
    "LoaderContainer_1",
    "MovieClip_1",
    "PointLight_1",
    "Shape_1",
    "Skybox_1",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathCommand",
    "GraphicsPathCommand",
    "NO_OP",
    "MOVE_TO",
    "LINE_TO",
    "CURVE_TO",
    "CURVE_TO_2",
    "WIDE_LINE_TO",
    "WIDE_MOVE_TO",
    "CUBIC_CURVE",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/GraphicsPath",
    "GraphicsPathWinding_1",
    "GraphicsPathCommand_1",
    "GraphicsPath",
    "commands",
    "winding",
    "_data",
    "_commands",
    "_draw_directions",
    "_contours_closed",
    "_startPoint",
    "_cur_point",
    "_tmp_point",
    "isFill",
    "_winding",
    "_isFill",
    "curveTo",
    "controlX",
    "controlY",
    "anchorX",
    "anchorY",
    "testpoint",
    "degree_anchor",
    "acos",
    "PI",
    "degree_control",
    "atan2",
    "lineTo",
    "finalizeContour",
    "wideLineTo",
    "wideMoveTo",
    "awayjs-display/lib/draw/Graphics",
    "GraphicsPath_1",
    "Float3Attributes_1",
    "PartialImplementationError_1",
    "Graphics",
    "_current_position",
    "_target",
    "_queued_fill_pathes",
    "_queued_stroke_pathes",
    "_active_fill_path",
    "_active_stroke_path",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "draw_fill",
    "beginFill",
    "alpha",
    "beginGradientFill",
    "colors",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "drawCircle",
    "radius2",
    "degree",
    "degree2",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "indices",
    "uvtData",
    "culling",
    "endFill",
    "draw_strokes",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "contour_commands",
    "contour_data",
    "contour_closed",
    "contours_closed",
    "vert_cnt",
    "data_cnt",
    "draw_started",
    "final_vert_list",
    "final_vert_cnt",
    "lastPoint",
    "start_point",
    "end_point",
    "start_left",
    "start_right",
    "ctr_left",
    "ctr_right",
    "ctr_left2",
    "ctr_right2",
    "end_left",
    "end_right",
    "tmp_point",
    "tmp_point2",
    "first_point",
    "first_point_set",
    "closed",
    "tessVerts",
    "_tess_obj",
    "newTess",
    "contour_points",
    "contour_types",
    "curve_direction",
    "control_x",
    "control_y",
    "end_x",
    "end_y",
    "con_length",
    "next_start_right",
    "next_start_left",
    "next_end_right",
    "next_end_left",
    "prevLeft",
    "prevRight",
    "nextIdx",
    "cur_vertical",
    "next_vertical",
    "cur_horizontal",
    "next_horizontal",
    "factor1",
    "offsetY1",
    "factor2",
    "offsetY2",
    "factor3",
    "offsetY3",
    "factor4",
    "offsetY4",
    "finished_curves",
    "finished_curves_types",
    "test_concave_curves",
    "test_convex_curves",
    "curve_sign",
    "getSign",
    "curve_sign2",
    "curve_sign3",
    "subdivided",
    "subdivided2",
    "subdivideCurve",
    "sc",
    "verticesF32",
    "addContour",
    "tesselate",
    "verts",
    "all_verts",
    "vertIndicess",
    "elems",
    "getVertices",
    "getElements",
    "numVerts",
    "numElems",
    "p1",
    "p2",
    "p3",
    "attributesBuffer",
    "setUVs",
    "getDefaultMaterial",
    "bothSides",
    "useColorTransform",
    "curves",
    "isClockWiseXY",
    "point1x",
    "point1y",
    "point2x",
    "point2y",
    "point3x",
    "point3y",
    "bx",
    "by",
    "pointInTri",
    "xx",
    "xy",
    "b1",
    "b2",
    "b3",
    "startx",
    "starty",
    "endx",
    "endy",
    "startx2",
    "starty2",
    "cx2",
    "cy2",
    "endx2",
    "endy2",
    "array_out",
    "array2_out",
    "contour_draw_directions",
    "draw_directions",
    "draw_direction",
    "contours_vertices",
    "curve_attr_1",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-core/lib/errors/PartialImplementationError",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "CapsStyle_1",
    "GradientType_1",
    "InterpolationMethod_1",
    "JointStyle_1",
    "LineScaleMode_1",
    "PixelSnapping_1",
    "SpreadMethod_1",
    "TriangleCulling_1",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "CastError_1",
    "EventBase_1",
    "CameraEvent",
    "_camera",
    "awayjs-core/lib/events/EventBase",
    "DisplayObjectEvent",
    "object",
    "_object",
    "VISIBLITY_UPDATED",
    "awayjs-display/lib/events/ElementsEvent",
    "ElementsEvent",
    "_attributesView",
    "INVALIDATE_INDICES",
    "CLEAR_INDICES",
    "INVALIDATE_VERTICES",
    "CLEAR_VERTICES",
    "LightEvent",
    "MouseEvent",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "renderable",
    "uv",
    "normal",
    "elementIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "RenderableEvent",
    "_renderable",
    "awayjs-display/lib/events/RendererEvent",
    "RendererEvent",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "StyleEvent",
    "SurfaceEvent",
    "surface",
    "_surface",
    "INVALIDATE_ANIMATION",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "TransformEvent",
    "ElementsEvent_1",
    "ResizeEvent_1",
    "TouchEvent_1",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/graphics/ElementsBase",
    "Short3Attributes_1",
    "ElementsBase",
    "_customAttributesNames",
    "_customAttributes",
    "_numElements",
    "_verticesDirty",
    "_invalidateVertices",
    "_concatenatedBuffer",
    "_indices",
    "getCustomAtributesNames",
    "getCustomAtributes",
    "setIndices",
    "values",
    "offset",
    "clearIndices",
    "invalidateIndicies",
    "clearVertices",
    "invalidateVertices",
    "scaleUV",
    "scaleU",
    "scaleV",
    "center",
    "_invalidateIndices",
    "awayjs-core/lib/attributes/Short3Attributes",
    "ElementsType",
    "TRIANGLE",
    "Graphic_1",
    "ElementsUtils_1",
    "_onInvalidateVerticesDelegate",
    "_onInvalidateVertices",
    "graphic",
    "invalidateElements",
    "_iInvalidateSurfaces",
    "_iGetExplicitMaterial",
    "_available",
    "_iIndex",
    "parent",
    "removeGraphic",
    "getGraphicAt",
    "particles",
    "numParticles",
    "_iGetExplicitStyle",
    "_boxBounds",
    "setBoundIdentity",
    "hitTestTriangleElements",
    "positions",
    "awayjs-display/lib/graphics/Graphic",
    "awayjs-display/lib/utils/ElementsUtils",
    "Graphic",
    "awayjs-display/lib/graphics/LineElements",
    "Float1Attributes_1",
    "ElementsBase_1",
    "LineElements",
    "_numVertices",
    "_positions",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "floor",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/Float1Attributes",
    "TriangleElements",
    "apply",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "cells",
    "lastCollisionIndex",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "dimensions",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_uvs",
    "_condensedIndexLookUp",
    "getTriangleGraphicsBoxBounds",
    "getTriangleGraphicsSphereBounds",
    "generateNormals",
    "faceNormals",
    "generateTangents",
    "faceTangents",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "uvs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "scaleUVs",
    "generateFaceTangents",
    "numElements",
    "generateFaceNormals",
    "testTriangleCollision",
    "LineElements_1",
    "BitmapImage2D_1",
    "BitmapImageCube_1",
    "BasicMaterial_1",
    "Single2DTexture_1",
    "DefaultMaterialManager",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "getDefaultImage2D",
    "_defaultBitmapImage2D",
    "createDefaultImage2D",
    "getDefaultImageCube",
    "_defaultBitmapImageCube",
    "createDefaultImageCube",
    "_defaultSampler2D",
    "createDefaultSampler2D",
    "setPixel",
    "awayjs-core/lib/image/BitmapImage2D",
    "awayjs-core/lib/image/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "FrameScriptManager",
    "setInterval",
    "func",
    "_intervalID",
    "_active_intervals",
    "clearInterval",
    "_queued_dispose",
    "mc",
    "script",
    "_queued_mcs_pass2",
    "_queued_mcs",
    "_queued_scripts",
    "_queued_scripts_pass2",
    "caller",
    "awayjs-display/lib/managers/MouseManager",
    "MouseManager",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collision",
    "altKey",
    "clientX",
    "changedTouches",
    "clientY",
    "preventDefault",
    "updateColliders",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "touches",
    "touch",
    "identifier",
    "awayjs-display/lib/managers/TouchManager",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollisionFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "collider",
    "touchPointID",
    "TouchManager_1",
    "Image2D_1",
    "MaterialBase_1",
    "BasicMaterial",
    "imageColor",
    "_preserveAlpha",
    "invalidateTexture",
    "awayjs-core/lib/image/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ImageBase_1",
    "MaterialBase",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "invalidateSurfaces",
    "addTextureAt",
    "awayjs-core/lib/image/ImageBase",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "LightPickerBase_1",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "shadowsEnabled",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection_1",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "cullPlanes",
    "_pCullPlanes",
    "_iRenderCascades",
    "_pOverallDepthCamera",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "appendScale",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube_1",
    "ShadowMapperBase_1",
    "CubeMapShadowMapper",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "imageCube",
    "awayjs-core/lib/image/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "DirectionalShadowMapper",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowMapperBase",
    "_autoUpdateShadows",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "StaticLightPicker_1",
    "CascadeShadowMapper_1",
    "NearDirectionalShadowMapper_1",
    "LightSources_1",
    "NodeBase_1",
    "PartitionBase_1",
    "BasicPartition",
    "_rootNode",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/PartitionBase",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode_1",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "enterNode",
    "applyDirectionalLight",
    "_displayObject",
    "isCastingShadow",
    "awayjs-display/lib/partition/DisplayObjectNode",
    "AbstractionBase_1",
    "DisplayObjectNode",
    "pool",
    "numEntities",
    "isSceneGraphNode",
    "_boundsDirty",
    "_onInvalidatePartitionBoundsDelegate",
    "_onInvalidatePartitionBounds",
    "debugVisible",
    "_updateBounds",
    "onClear",
    "onInvalidate",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "awayjs-core/lib/library/AbstractionBase",
    "DisplayObjectNode_1",
    "_maskPosition",
    "_partition",
    "globalRayPosition",
    "globalRayDirection",
    "isIntersectingMasks",
    "_iPickingCollision",
    "rayOriginIsInsideBounds",
    "applyEntity",
    "iMarkForUpdate",
    "children",
    "layerHit",
    "awayjs-display/lib/partition/IContainerNode",
    "awayjs-display/lib/partition/IDisplayObjectNode",
    "awayjs-display/lib/partition/IEntityNodeClass",
    "awayjs-display/lib/partition/INode",
    "awayjs-display/lib/partition/LightProbeNode",
    "applyLightProbe",
    "NodeBase",
    "_pChildNodes",
    "_pNumChildNodes",
    "iAddNode",
    "node",
    "iRemoveNode",
    "_abstractionPool",
    "_updatesMade",
    "getAbstraction",
    "_abstractionClassPool",
    "clearAbstraction",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "findParentForNode",
    "targetNode",
    "entityNodeClass",
    "assetClass",
    "awayjs-display/lib/partition/PointLightNode",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphNode",
    "SceneGraphNode",
    "_childDepths",
    "_childMasks",
    "awayjs-display/lib/partition/SceneGraphPartition",
    "SceneGraphNode_1",
    "SceneGraphPartition",
    "_sceneGraphNodePool",
    "SceneGraphNodePool",
    "isContainer",
    "displayObjectContainer",
    "awayjs-display/lib/partition/SkyboxNode",
    "applySkybox",
    "CameraNode_1",
    "DirectionalLightNode_1",
    "LightProbeNode_1",
    "PointLightNode_1",
    "SceneGraphPartition_1",
    "SkyboxNode_1",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleElements",
    "i0",
    "i1",
    "i2",
    "nx",
    "ny",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "collisionTriangleIndex",
    "posDim",
    "uvDim",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "lineElements",
    "PickingCollision",
    "awayjs-display/lib/pick/RaycastPicker",
    "RaycastPicker",
    "_entities",
    "onlyMouseEnabled",
    "_rayPosition",
    "_rayDirection",
    "_view",
    "getSceneCollision",
    "getPickingCollision",
    "setIgnoreList",
    "entities",
    "_ignoredEntities",
    "isIgnored",
    "sortOnNearT",
    "entity1",
    "entity2",
    "sort",
    "_bestCollision",
    "_testCollision",
    "_testCollider",
    "MAX_VALUE",
    "updatePosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "JSPickingCollider_1",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase_1",
    "PrimitiveCapsulePrefab",
    "elementsType",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidatePrimitive",
    "_pInvalidateUVs",
    "_pBuildGraphics",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "numIndices",
    "triangleGraphics",
    "horangle",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "_scaleU",
    "_scaleV",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab_1",
    "PrimitiveConePrefab",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "PrimitiveCubePrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGraphics",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "PrimitiveCylinderPrefab",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer_1",
    "PrefabBase_1",
    "PrimitivePrefabBase",
    "_primitiveDirty",
    "_uvDirty",
    "_elementsType",
    "_elements",
    "updateGraphics",
    "updateUVs",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "PrimitiveSpherePrefab",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "PrimitiveCapsulePrefab_1",
    "PrimitiveConePrefab_1",
    "PrimitivePlanePrefab_1",
    "PrimitivePolygonPrefab_1",
    "PrimitiveTorusPrefab_1",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "TesselatedFontTable_1",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontChar_1",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "_ascent",
    "_descent",
    "_offset_x",
    "_offset_y",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "setChar",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "TextFieldType",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "AntiAliasType_1",
    "Font_1",
    "GridFitType_1",
    "TextFieldAutoSize_1",
    "TextFormat_1",
    "TextFormatAlign_1",
    "TextInteractionMode_1",
    "TextLineMetrics_1",
    "awayjs-display/lib/textures/MappingMode",
    "MappingMode",
    "LINEAR_GRADIENT",
    "RADIAL_GRADIENT",
    "ImageUtils_1",
    "MappingMode_1",
    "TextureBase_1",
    "Single2DTexture",
    "setNumImages",
    "_mappingMode",
    "setSamplerAt",
    "isImage2DValid",
    "setImageAt",
    "awayjs-core/lib/utils/ImageUtils",
    "awayjs-display/lib/textures/TextureBase",
    "SingleCubeTexture",
    "TextureBase",
    "_numImages",
    "getNumImages",
    "awayjs-display/lib/utils/Cast",
    "ByteArray_1",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes_1",
    "ElementsUtils",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "index3",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "stride",
    "bufferView",
    "splitVerts",
    "boundingBox",
    "curveAttributes",
    "curveDim",
    "id0",
    "id1",
    "id2",
    "precheck",
    "dot",
    "curvey0",
    "curvey1",
    "curvey2",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "uu",
    "vv",
    "divisions",
    "conversionX",
    "conversionY",
    "minx",
    "miny",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "nodes",
    "index_x",
    "index_y",
    "nodeCount",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "tempFloat32x4",
    "awayjs-core/lib/attributes/Float4Attributes",
    "Cast_1"
  ],
  "mappings": "AAAAA,QAAA,QAAAC,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,SAAAR,UAAA,YAAAA,OAAA,KAAAO,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAG,EAAA,MAAAA,GAAAH,GAAA,EAAA,IAAAI,GAAA,GAAAC,OAAA,uBAAAL,EAAA,IAAA,MAAAI,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAV,EAAAG,IAAAQ,WAAAZ,GAAAI,GAAA,GAAAS,KAAAF,EAAAC,QAAA,SAAAb,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAC,QAAAb,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAQ,QAAA,GAAAL,SAAAT,UAAA,YAAAA,OAAA,KAAA,GAAAM,GAAA,EAAAA,EAAAF,EAAAY,OAAAV,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAY,GAAA,SAAAjB,EAAAkB,EAAAJ,GCCA,YCDA,IAAYK,GAAQnB,EAAS,8BAoC5Bc,GAAAK,SAAQA,CAnCT,IAAYC,GAASpB,EAAS,+BAoC7Bc,GAAAM,UAASA,CAnCV,IAAYC,GAAIrB,EAAU,0BAoCzBc,GAAAO,KAAIA,CAnCL,IAAYC,GAAMtB,EAAU,4BAoC3Bc,GAAAQ,OAAMA,CAnCP,IAAYC,GAAWvB,EAAS,iCAoC/Bc,GAAAS,YAAWA,CAnCZ,IAAYC,GAAOxB,EAAU,6BAoC5Bc,GAAAU,QAAOA,CAnCR,IAAYC,GAAIzB,EAAU,0BAoCzBc,GAAAW,KAAIA,CAnCL,IAAYC,GAAM1B,EAAU,4BAoC3Bc,GAAAY,OAAMA,CAnCP,IAAYC,GAAM3B,EAAU,4BAoC3Bc,GAAAa,OAAMA,CAnCP,IAAYC,GAAS5B,EAAS,+BAoC7Bc,GAAAc,UAASA,CAnCV,IAAYC,GAAQ7B,EAAS,8BAoC5Bc,GAAAe,SAAQA,CAnCT,IAAYC,GAAQ9B,EAAS,8BAoC5Bc,GAAAgB,SAAQA,CAnCT,IAAYC,GAAS/B,EAAS,+BAoC7Bc,GAAAiB,UAASA,CAnCV,IAAYC,GAAShC,EAAS,+BAoC7Bc,GAAAkB,UAASA,CAnCV,IAAYC,GAAIjC,EAAU,0BAoCzBc,GAAAmB,KAAIA,CAnCL,IAAYC,GAAOlC,EAAU,6BAoC5Bc,GAAAoB,QAAOA,CAnCR,IAAYC,GAAInC,EAAU,0BAoCzBc,GAAAqB,KAAIA,CAnCL,IAAYC,GAAQpC,EAAS,8BAoC5Bc,GAAAsB,SAAQA,CAnCT,IAAYC,GAAKrC,EAAU,2BAoC1Bc,GAAAuB,MAAKA,CAjCN,IAAAC,GAAAtC,EAAuB,0BAoCtBc,GAAAyB,KAAID,EAAAE,OAlCLR,GAAUS,cAAcC,oBAAoBV,EAAUW,WAAYnB,EAAQoB,OAC1EZ,GAAUS,cAAcC,oBAAoBV,EAAUa,qBAAsBrB,EAAQsB,iBACpFd,GAAUS,cAAcC,oBAAoBV,EAAUe,WAAYvB,EAAQwB,OAC1EhB,GAAUS,cAAcC,oBAAoBV,EAAUe,WAAYvB,EAAQyB,MAC1EjB,GAAUS,cAAcC,oBAAoBV,EAAUe,WAAYvB,EAAQ0B,UAC1ElB,GAAUS,cAAcC,oBAAoBV,EAAUe,WAAYvB,EAAQ2B,UAC1EnB,GAAUS,cAAcC,oBAAoBV,EAAUe,WAAYvB,EAAQ4B,YAC1EpB,GAAUS,cAAcC,oBAAoBV,EAAUe,WAAYvB,EAAQ6B,UAC1ErB,GAAUS,cAAcC,oBAAoBV,EAAUsB,eAAgB9B,EAAQ+B,WAC9EvB,GAAUS,cAAcC,oBAAoBV,EAAUwB,eAAgBhC,EAAQiC,WAC9EzB,GAAUS,cAAcC,oBAAoBV,EAAU0B,WAAYlC,EAAQmC,UDqBvEC,0BAA0B,0BAA0BC,8BAA8B,8BAA8BC,+BAA+B,+BAA+BC,0BAA0B,0BAA0BC,4BAA4B,4BAA4BC,iCAAiC,iCAAiCC,6BAA6B,6BAA6BC,0BAA0B,0BAA0BC,4BAA4B,4BAA4BC,4BAA4B,4BAA4BC,+BAA+B,+BAA+BC,8BAA8B,8BAA8BC,8BAA8B,8BAA8BC,+BAA+B,+BAA+BC,+BAA+B,+BAA+BC,0BAA0B,0BAA0BC,6BAA6B,6BAA6BC,0BAA0B,0BAA0BC,8BAA8B,8BAA8BC,2BAA2B,6BAA6BC,gCAAgC,SAAShF,EAAQkB,EAAOJ,GAC7rC,kBAEMmE,iCAAiC,SAASjF,EAAQkB,EAAOJ,GAC/D,kBAEM8C,2BAA2B,SAAS5D,EAAQkB,EAAOJ,GACzD,YE5DA,IAAAoE,GAAAlF,EAA0B,iCAI1B,IAAAmF,GAAAnF,EAA2B,oBAC3B,IAAAoF,GAAApF,EAAuB,kBAGvB,IAAAqF,GAAArF,EAA6B,uBAC7B,IAAAsF,GAAAtF,EAAwB,mBACxB,IAAAuF,GAAAvF,EAA4B,uBAC5B,IAAAwF,GAAAxF,EAAiC,8BACjC,IAAAyF,GAAAzF,EAA6B,yBAC7B,IAAA0F,GAAA1F,EAA6B,0BAE7B,IAAAuC,GAAA,WA0DC,QAAAA,GAAYoD,EAAoBC,EAAoBC,GA1DrD,GAAAC,GAAAC,IA0DiC,IAAAH,QAAA,GAAkB,CAAlBA,EAAA,KAAoB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,KAlC5CE,KAAAC,OAAgB,CAChBD,MAAAE,QAAiB,CAEjBF,MAAAG,MAAe,CACfH,MAAAI,WAAoB,CACpBJ,MAAAK,iBAA0B,CAC1BL,MAAAM,iBAA0B,CAE1BN,MAAAO,eAAyB,IACzBP,MAAAQ,cAAwB,IAOxBR,MAAAS,aAAuB,GAAInB,GAAA7C,OAM5BuD,MAAAU,cAAkC,GAAIC,MAc5CX,MAAKY,4BAA8B,SAACC,GAA6B,MAAAd,GAAKe,oBAAoBD,GAC1Fb,MAAKe,6BAA+B,SAACF,GAAsB,MAAAd,GAAKiB,qBAAqBH,GACrFb,MAAKiB,2BAA6B,SAACJ,GAAwB,MAAAd,GAAKmB,mBAAmBL,GACnFb,MAAKmB,0BAA4B,SAACN,GAAwB,MAAAd,GAAKqB,kBAAkBP,GAEjFb,MAAKH,MAAQA,GAAS,GAAIR,GAAA5C,OAC1BuD,MAAKF,OAASA,GAAU,GAAIP,GAAA9C,OAC5BuD,MAAKJ,SAAWA,CAGhB,IAAGyB,SAAU,CACZA,SAASC,KAAKC,MAAMC,OAAS,KAE7BxB,MAAKyB,aAAeJ,SAASK,cAAc,MAC3C1B,MAAKyB,aAAaF,MAAMI,SAAW,UAEnCN,UAASC,KAAKM,YAAY5B,KAAKyB,cAGhCzB,KAAK6B,cAAgBlC,EAAAlD,QAAaqF,aAClC9B,MAAK6B,cAAcE,aAAa/B,MAQjCgC,OAAAC,eAAWzF,EAAA0F,UAAA,UFYJC,IEZP,WAEC,MAAOnC,MAAKoC,UFaNC,WAAY,KACZC,aAAc,MEXrBN,QAAAC,eAAWzF,EAAA0F,UAAA,UFcJC,IEdP,WAEC,MAAOnC,MAAKuC,UFeNF,WAAY,KACZC,aAAc,MEbrBN,QAAAC,eAAIzF,EAAA0F,UAAA,eFgBGC,IEhBP,WAEC,MAAOnC,MAAKU,eFiBN2B,WAAY,KACZC,aAAc,MEfd9F,GAAA0F,UAAAM,eAAP,SAAsBC,GAErB,MAAOA,GAAcC,sBAAsBC,gBAAgB3C,KAAK4C,UAAU5C,KAAKoC,SAAUpC,KAAKuC,SAAU,MAAOM,EAGzGrG,GAAA0F,UAAAY,eAAP,SAAsBL,GAErB,MAAOA,GAAcC,sBAAsBC,gBAAgB3C,KAAK4C,UAAU5C,KAAKoC,SAAUpC,KAAKuC,SAAU,MAAOQ,EAGzGvG,GAAA0F,UAAAc,oBAAP,SAA2BP,GAE1B,GAAIQ,EACJ,IAAIC,GAAqC,GAAIvC,MAE7C,IAAIwC,GAAanD,KAAKU,cAAczF,MACpC,KAAK,GAAIP,GAAW,EAAGA,EAAIyI,EAAKzI,IAAK,CACpCuI,EAAgBR,EAAcC,sBAAsBC,gBAAgB3C,KAAK4C,UAAU5C,KAAKU,cAAchG,GAAGmI,EAAG7C,KAAKU,cAAchG,GAAGqI,EAAG,KACrIG,GAAiBE,KAAK,GAAIhE,GAAA3C,QAAWwG,EAAcJ,EAAGI,EAAcF,EAAG/C,KAAKU,cAAchG,GAAG2I,KAG9F,MAAOH,GAMRlB,QAAAC,eAAWzF,EAAA0F,UAAA,eFUJC,IEVP,WAEC,MAAOnC,MAAKyB,cFWNY,WAAY,KACZC,aAAc,MEPrBN,QAAAC,eAAWzF,EAAA0F,UAAA,YFaJC,IEbP,WAEC,MAAOnC,MAAKsD,YFcNC,IEXP,SAAoBC,GAEnB,GAAIxD,KAAKsD,YAAcE,EACtB,MAED,IAAIxD,KAAKsD,WAAY,CACpBtD,KAAKsD,WAAWG,SAChBzD,MAAKsD,WAAWI,oBAAoBhE,EAAAjD,QAAckH,iBAAkB3D,KAAKiB,2BACzEjB,MAAKsD,WAAWI,oBAAoBhE,EAAAjD,QAAcmH,gBAAiB5D,KAAKmB,2BAGzEnB,KAAKsD,WAAaE,CAElBxD,MAAKsD,WAAWO,iBAAiBnE,EAAAjD,QAAckH,iBAAkB3D,KAAKiB,2BACtEjB,MAAKsD,WAAWO,iBAAiBnE,EAAAjD,QAAcmH,gBAAiB5D,KAAKmB,0BAGrEnB,MAAKsD,WAAWQ,eAAkB9D,KAAKK,kBAAoB,GAAM,KAAM,GACvEL,MAAKsD,WAAWS,eAAkB/D,KAAKK,kBAAoB,EAAK,KAAM,GACtEL,MAAKsD,WAAWU,eAAiBhE,KAAKK,iBAAmB,KAAM,GAC/DL,MAAKsD,WAAWW,kBAAoBjE,KAAKM,gBACzCN,MAAKsD,WAAWY,MAAQlE,KAAKC,MAC7BD,MAAKsD,WAAWa,OAASnE,KAAKE,OAC9BF,MAAKsD,WAAWc,aAAepE,KAAKqE,eFQ9BhC,WAAY,KACZC,aAAc,MEHrBN,QAAAC,eAAWzF,EAAA0F,UAAA,gBFSJC,IETP,WAEC,MAAOnC,MAAKqE,eFUNd,IEPP,SAAwBC,GAEvB,GAAIxD,KAAKqE,eAAiBb,EACzB,MAEDxD,MAAKqE,cAAgBb,CAErB,IAAIxD,KAAKsD,WACRtD,KAAKsD,WAAWc,aAAepE,KAAKqE,eFM/BhC,WAAY,KACZC,aAAc,MEDrBN,QAAAC,eAAWzF,EAAA0F,UAAA,mBFOJC,IEPP,WAEC,MAAOnC,MAAKK,kBFQNkD,IELP,SAA2BC,GAE1B,GAAIxD,KAAKK,kBAAoBmD,EAC5B,MAEDxD,MAAKK,iBAAmBmD,CAExBxD,MAAKsD,WAAWQ,eAAkBN,GAAS,GAAM,KAAM,GACvDxD,MAAKsD,WAAWS,eAAkBP,GAAS,EAAK,KAAM,GACtDxD,MAAKsD,WAAWU,eAAiBR,EAAQ,KAAM,KFIzCnB,WAAY,KACZC,aAAc,MEErBN,QAAAC,eAAWzF,EAAA0F,UAAA,mBFKJC,IELP,WAEC,MAAOnC,MAAKM,kBFUNiD,IEHP,SAA2BC,GAE1B,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAIxD,KAAKM,kBAAoBkD,EAC5B,MAEDxD,MAAKsD,WAAWW,kBAAoBjE,KAAKM,iBAAmBkD,GFEtDnB,WAAY,KACZC,aAAc,MEIrBN,QAAAC,eAAWzF,EAAA0F,UAAA,UFGJC,IEHP,WAEC,MAAOnC,MAAKsE,UFONf,IEDP,SAAkBC,GAEjB,GAAIxD,KAAKsE,UAAYd,EACpB,MAED,IAAIxD,KAAKsE,SACRtE,KAAKsE,SAASZ,oBAAoBlE,EAAA/C,QAAY8H,mBAAoBvE,KAAKe,6BAExEf,MAAKsE,SAAWd,CAEhB,IAAIxD,KAAKwE,QACRxE,KAAKwE,QAAQvI,UAAUwI,iBAAiBzE,KAAKsE,SAE9CtE,MAAKsE,SAAST,iBAAiBrE,EAAA/C,QAAY8H,mBAAoBvE,KAAKe,6BACpEf,MAAKQ,cAAgB,IACrBR,MAAKO,eAAiB,MFFhB8B,WAAY,KACZC,aAAc,MEQrBN,QAAAC,eAAWzF,EAAA0F,UAAA,SFDJC,IECP,WAEC,MAAOnC,MAAKwE,SFGNjB,IEGP,SAAiBC,GAEhB,GAAIxD,KAAKwE,SAAWhB,EACnB,MAED,IAAIxD,KAAKwE,QACRxE,KAAKwE,QAAQd,oBAAoBjE,EAAAhD,QAAmBiI,kBAAmB1E,KAAKY,4BAE7EZ,MAAKwE,QAAUhB,CAEfxD,MAAKwE,QAAQX,iBAAiBpE,EAAAhD,QAAmBiI,kBAAmB1E,KAAKY,4BAEzE,IAAIZ,KAAKsE,SACRtE,KAAKwE,QAAQvI,UAAUwI,iBAAiBzE,KAAKsE,WFNxCjC,WAAY,KACZC,aAAc,MEYrBN,QAAAC,eAAWzF,EAAA0F,UAAA,aFLJC,IEKP,WAEC,MAAOnC,MAAKI,YFJNiC,WAAY,KACZC,aAAc,MESrBN,QAAAC,eAAWzF,EAAA0F,UAAA,SFHJC,IEGP,WAEC,MAAOnC,MAAKC,QFFNsD,IEKP,SAAiBC,GAEhB,GAAIxD,KAAKC,QAAUuD,EAClB,MAEDxD,MAAKC,OAASuD,CACdxD,MAAK2E,aAAe3E,KAAKC,OAAOD,KAAKE,OACrCF,MAAKsE,SAASM,WAAWC,cAAgB7E,KAAK2E,YAC9C3E,MAAKsD,WAAWY,MAAQV,CACxB,IAAGxD,KAAKyB,aAAc,CACrBzB,KAAKyB,aAAaF,MAAM2C,MAAQV,EAAQ,OFJnCnB,WAAY,KACZC,aAAc,MEUrBN,QAAAC,eAAWzF,EAAA0F,UAAA,UFJJC,IEIP,WAEC,MAAOnC,MAAKE,SFHNqD,IEMP,SAAkBC,GAEjB,GAAIxD,KAAKE,SAAWsD,EACnB,MAEDxD,MAAKE,QAAUsD,CACfxD,MAAK2E,aAAe3E,KAAKC,OAAOD,KAAKE,OACrCF,MAAKsE,SAASM,WAAWC,cAAgB7E,KAAK2E,YAC9C3E,MAAKsD,WAAWa,OAASX,CACzB,IAAGxD,KAAKyB,aAAc,CACrBzB,KAAKyB,aAAaF,MAAM4C,OAASX,EAAQ,OFLpCnB,WAAY,KACZC,aAAc,MEWrBN,QAAAC,eAAWzF,EAAA0F,UAAA,eFLJC,IEKP,WAEC,MAAOnC,MAAKS,cFJN8C,IEOP,SAAuBC,GAEtB,GAAIxD,KAAKS,cAAgB+C,EACxB,MAED,IAAIA,GAAS,KACZxD,KAAKS,aAAe,GAAInB,GAAA7C,YAExBuD,MAAKS,aAAe+C,GFPfnB,WAAY,KACZC,aAAc,MEYrBN,QAAAC,eAAWzF,EAAA0F,UAAA,KFNJC,IEMP,WAEC,MAAOnC,MAAKsD,WAAWT,GFLjBU,IEQP,SAAaC,GAEZ,GAAIxD,KAAKsD,WAAWT,GAAKW,EACxB,MAEDxD,MAAKsD,WAAWT,GAAKW,CACrB,IAAGxD,KAAKyB,aAAc,CACrBzB,KAAKyB,aAAaF,MAAMuD,KAAOtB,EAAQ,OFPlCnB,WAAY,KACZC,aAAc,MEarBN,QAAAC,eAAWzF,EAAA0F,UAAA,KFPJC,IEOP,WAEC,MAAOnC,MAAKsD,WAAWP,GFNjBQ,IESP,SAAaC,GAEZ,GAAIxD,KAAKsD,WAAWP,GAAKS,EACxB,MAEDxD,MAAKsD,WAAWP,GAAKS,CACrB,IAAGxD,KAAKyB,aAAc,CACrBzB,KAAKyB,aAAaF,MAAMwD,IAAMvB,EAAQ,OFRjCnB,WAAY,KACZC,aAAc,MEcrBN,QAAAC,eAAWzF,EAAA0F,UAAA,WFRJC,IEQP,WAEC,MAAQnC,MAAKyB,cAAgBzB,KAAKyB,aAAaF,MAAMyD,YAAc,WFP7DzB,IEUP,SAAmBC,GAElB,GAAGxD,KAAKyB,aAAc,CACrBzB,KAAKyB,aAAaF,MAAMyD,WAAaxB,EAAO,UAAY,WFPnDnB,WAAY,KACZC,aAAc,MEerBN,QAAAC,eAAWzF,EAAA0F,UAAA,sBFRJC,IEQP,WAEC,MAAO,IFNDE,WAAY,KACZC,aAAc,MEYd9F,GAAA0F,UAAA+C,OAAP,WAECjF,KAAKkF,aAGLlF,MAAKsE,SAASM,WAAWC,cAAgB7E,KAAK2E,YAE9C,IAAI3E,KAAKQ,cAAe,CACvBR,KAAKQ,cAAgB,KACrBR,MAAKsE,SAASM,WAAWO,oBAAoBnF,KAAKsD,WAAW8B,YAAYvC,EAAG7C,KAAKsD,WAAW8B,YAAYrC,EAAG/C,KAAKsD,WAAW8B,YAAYlB,MAAOlE,KAAKsD,WAAW8B,YAAYjB,QAG3K,GAAInE,KAAKO,eAAgB,CACxBP,KAAKO,eAAiB,KACtBP,MAAKsE,SAASM,WAAWS,iBAAiBrF,KAAKsD,WAAWgC,SAASzC,EAAG7C,KAAKsD,WAAWgC,SAASvC,EAAG/C,KAAKsD,WAAWgC,SAASpB,MAAOlE,KAAKsD,WAAWgC,SAASnB,QAI5J,IAAKnE,KAAKqE,cAAe,CACxB,GAAIrE,KAAKuF,gBAAkBvF,KAAKyB,cAAgBzB,KAAK6B,cAAc2D,cAAgBxF,KAAK6B,cAAc4D,cACrGzF,KAAK6B,cAAc6D,YAAc1F,KAAK2F,YAAYC,iBAAiB5F,KAAKoC,SAAUpC,KAAKuC,SAAUvC,KAElGA,MAAK6B,cAAcgE,gBAAgB7F,KAAKuF,gBAMzCvF,KAAKsD,WAAW2B,OAAOjF,KAAKsE,SAAUtE,KAAKwE,SAMrChI,GAAA0F,UAAAgD,YAAP,WAEC,GAAIY,GAAc3G,EAAA1C,SAElB,IAAIuD,KAAKG,OAAS,EACjBH,KAAKG,MAAQ2F,CAEd9F,MAAKI,WAAa0F,EAAO9F,KAAKG,KAC9BH,MAAKG,MAAQ2F,EAMPtJ,GAAA0F,UAAAuB,QAAP,WAECzD,KAAKsD,WAAWG,SAGhBzD,MAAK6B,cAAckE,eAAe/F,KAKlCA,MAAK6B,cAAgB,IAGrB7B,MAAKsD,WAAa,KAOX9G,GAAA0F,UAAApB,oBAAR,SAA4BD,GAE3B,GAAIb,KAAKsE,SACRtE,KAAKwE,QAAQvI,UAAUwI,iBAAiBzE,KAAKsE,UAMvC9H,GAAA0F,UAAAlB,qBAAR,SAA6BH,GAE5Bb,KAAKQ,cAAgB,IACrBR,MAAKO,eAAiB,KAMf/D,GAAA0F,UAAAhB,mBAAR,SAA2BL,GAE1Bb,KAAKO,eAAiB,KAMf/D,GAAA0F,UAAAd,kBAAR,SAA0BP,GAEzBb,KAAKQ,cAAgB,KAGfhE,GAAA0F,UAAA8D,QAAP,SAAeC,GAEd,GAAIC,GAAalG,KAAKsE,SAAS0B,QAAQC,EACvCC,GAAErD,EAAIqD,EAAErD,EAAE7C,KAAKsD,WAAWgC,SAASpB,MAAM,EAAIlE,KAAKC,OAAOD,KAAKsE,SAASM,WAAWuB,OAClFD,GAAEnD,EAAImD,EAAEnD,EAAE/C,KAAKsD,WAAWgC,SAASnB,OAAO,EAAInE,KAAKE,QAAQF,KAAKsE,SAASM,WAAWwB,OAEpF,OAAOF,GAGD1J,GAAA0F,UAAAU,UAAP,SAAiByD,EAAWC,EAAWC,GAEtC,MAAOvG,MAAKsE,SAAS1B,UAAU,GAAGyD,EAAKrG,KAAKC,OAAOD,KAAKsE,SAASM,WAAWuB,SAASnG,KAAKsD,WAAWgC,SAASpB,MAAO,GAAGoC,EAAKtG,KAAKE,QAAQF,KAAKsE,SAASM,WAAWwB,SAASpG,KAAKsD,WAAWgC,SAASnB,OAAQoC,GAIvM/J,GAAA0F,UAAAsE,OAAP,SAAcH,EAAWC,EAAWC,GAEnC,MAAOvG,MAAKsE,SAASkC,QAAQH,EAAG,EAAIrG,KAAKC,QAAQD,KAAKC,QAASqG,EAAG,EAAItG,KAAKE,SAASF,KAAKE,QAASqG,GAiC5F/J,GAAA0F,UAAAuE,eAAP,WAEC,IAAKzG,KAAKqE,cAAe,CACxB,GAAIrE,KAAKyB,cAAgBzB,KAAK6B,cAAc2D,YAC3CxF,KAAK6B,cAAc6D,YAAc1F,KAAK2F,YAAYC,iBAAiB5F,KAAKoC,SAAUpC,KAAKuC,SAAUvC,UAC5F,CACN,GAAI0G,GAAmC1G,KAAK2F,YAAYC,iBAAiB5F,KAAKoC,SAAUpC,KAAKuC,SAAUvC,KAEvG,IAAIA,KAAK2G,aAAe3G,KAAK6B,cAAc6D,aAAe,MAAQgB,EAAgBE,iBAAmB5G,KAAK6B,cAAc6D,YAAYkB,iBACnI5G,KAAK6B,cAAc6D,YAAcgB,GAGrC,OAAAlK,KAEAwF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MF1DAzI,GAAQ0B,QE0DOD,IFxDZqK,oBAAoB,qCAAqCC,mBAAmB,oCAAoCC,kBAAkB,mCAAmCC,uBAAuB,wCAAwCC,8BAA8B,+CAA+CC,yBAAyB,0CAA0CC,0BAA0B,2CAA2CC,uBAAuB,wCAAwCC,iCAAiCC,YAAYC,qDAAqD,SAAStN,EAAQkB,EAAOJ,GACrnB,kBAEMyM,iDAAiD,SAASvN,EAAQkB,EAAOJ,GAC/E,kBAEM+C,+BAA+B,SAAS7D,EAAQkB,EAAOJ,GAC7D,kBAEM0M,8CAA8C,SAASxN,EAAQkB,EAAOJ,GAC5E,kBAEM2M,0CAA0C,SAASzN,EAAQkB,EAAOJ,GACxE,kBAEM4M,kDAAkD,SAAS1N,EAAQkB,EAAOJ,GAChF,YGvjBA,IAAA6M,GAAA,WAAA,QAAAA,MAMA,MAAAA,KAEA5F,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MHsjBAzI,GAAQ0B,QGtjBOmL,OHwjBTC,wDAAwD,SAAS5N,EAAQkB,EAAOJ,GACtF,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IIvkBnF,IAAAG,GAAArO,EAAyB,oCAKzB,IAAAsO,GAAA,SAAAC,GAAgCV,EAAAS,EAAAC,EAc/B,SAAAD,KAECC,EAAAxN,KAAAgF,MAVDgC,OAAAC,eAAWsG,EAAArG,UAAA,cJ2kBJC,II3kBP,WAEC,MAAOnC,MAAKyI,cJ4kBNpG,WAAY,KACZC,aAAc,MI/jBdiG,GAAArG,UAAAuB,QAAP,YAOAzB,QAAAC,eAAWsG,EAAArG,UAAA,aJmkBJC,IInkBP,WAEC,MAAOoG,GAAkBG,WJokBnBrG,WAAY,KACZC,aAAc,MIlmBPiG,GAAAG,UAAmB,2BA+BlC,OAAAH,IAjCgCD,EAAA7L,QAmChCuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MJukBAzI,GAAQ0B,QIvkBO8L,IJykBZI,oCAAoCrB,YAAYvJ,gCAAgC,SAAS9D,EAAQkB,EAAOJ,GAC3G,YKlnBA,IAAA6N,GAAA3O,EAA0C,iDAAlCc,GAAA6M,aAAAgB,EAAAnM,OACR,IAAAoM,GAAA5O,EAA8C,uDAAtCc,GAAAwN,kBAAAM,EAAApM,ULunBLkL,iDAAiD,iDAAiDE,uDAAuD,yDAAyDiB,yCAAyC,SAAS7O,EAAQkB,EAAOJ,GACtR,YMtnBA,IAAAgO,GAAA,WAAA,QAAAA,MAKeA,EAAAC,mBAA4B,mBAK5BD,GAAAE,YAAqB,OACpC,OAAAF,KAEA/G,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MN2nBAzI,GAAQ0B,QM3nBOsM,ON6nBTG,kDAAkD,SAASjP,EAAQkB,EAAOJ,GAChF,YO3oBA,IAAAoO,GAAA,WAAA,QAAAA,MAKeA,EAAAC,cAAuB,CAKvBD,GAAAE,QAAiB,CAKjBF,GAAAG,QAAiB,CAKjBH,GAAAI,MAAe,CAKfJ,GAAAK,gBAAyB,EAKzBL,GAAAM,gBAAyB,EAKzBN,GAAAO,IAAa,EAC5B,OAAAP,KAEAnH,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MP2oBAzI,GAAQ0B,QO3oBO0M,OP6oBTQ,2CAA2C,SAAS1P,EAAQkB,EAAOJ,GACzE,kBAEM6O,uCAAuC,SAAS3P,EAAQkB,EAAOJ,GACrE,kBAEM8O,oCAAoC,SAAS5P,EAAQkB,EAAOJ,GAClE,kBAEM+O,2CAA2C,SAAS7P,EAAQkB,EAAOJ,GACzE,YQhsBA,IAAAgP,GAAA,WAAA,QAAAA,MAKeA,EAAAC,QAAiB,SAKjBD,GAAAE,aAAsB,aAKtBF,GAAAG,gBAAyB,gBACxC,OAAAH,KAEA/H,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MRisBAzI,GAAQ0B,QQjsBOsN,ORmsBTI,iCAAiC,SAASlQ,EAAQkB,EAAOJ,GAC/D,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,ISttBnF,IAAAiC,GAAAnQ,EAA+B,yCAC/B,IAAAoQ,GAAApQ,EAA2B,uCAM3B,IAAAqQ,GAAA,SAAA9B,GAAoBV,EAAAwC,EAAA9B,EAwEnB,SAAA8B,KAEC9B,EAAAxN,KAAAgF,KAvEOA,MAAAuK,UAAmB,GAAIvI,OAEvBhC,MAAAwK,QAAiB,GAAIxI,OAErBhC,MAAAyK,OAAgB,SAExBzI,OAAAC,eAAWqI,EAAApI,UAAA,WTstBJC,ISttBP,WAEC,MAAOnC,MAAK0K,UTutBNnH,ISptBP,SAAmBC,GAElB,GAAIxD,KAAK0K,UAAYlH,EACpB,MAEDxD,MAAK0K,SAAWlH,CAEhBxD,MAAK2K,yBTmtBCtI,WAAY,KACZC,aAAc,MSjtBrBN,QAAAC,eAAWqI,EAAApI,UAAA,STotBJC,ISptBP,WAEC,MAAOnC,MAAK4K,QTqtBNrH,ISltBP,SAAiBC,GAEhB,GAAIxD,KAAK4K,QAAUpH,EAClB,MAEDxD,MAAK4K,OAASpH,CAEdxD,MAAK2K,yBTitBCtI,WAAY,KACZC,aAAc,MS/sBrBN,QAAAC,eAAWqI,EAAApI,UAAA,YTktBJC,ISltBP,WAEC,MAAOnC,MAAK6K,WTmtBNtH,IShtBP,SAAoBC,GAEnB,GAAIxD,KAAK6K,WAAarH,EACrB,MAEDxD,MAAK6K,UAAYrH,CAEjBxD,MAAK2K,yBT+sBCtI,WAAY,KACZC,aAAc,MS1sBrBN,QAAAC,eAAWqI,EAAApI,UAAA,STgtBJC,IShtBP,WAEC,MAAOnC,MAAKyK,QTitBNlH,IS9sBP,SAAiBC,GAEhB,GAAIxD,KAAKyK,QAAUjH,EAClB,MAEDxD,MAAKyK,OAASjH,CAEdxD,MAAK2K,yBT6sBCtI,WAAY,KACZC,aAAc,MStsBdgI,GAAApI,UAAA4I,WAAP,SAAkBC,EAAqBC,GAAA,GAAAA,QAAA,GAAgB,CAAhBA,EAAA,EAEtC,OAAQhL,KAAKwK,QAAQO,EAAQ1H,IAAKrD,KAAKwK,QAAQO,EAAQ1H,IAAI2H,GAAS,OAAShL,KAAK4K,OAG5EN,GAAApI,UAAA+I,aAAP,SAAoBF,EAAqBC,GAAA,GAAAA,QAAA,GAAgB,CAAhBA,EAAA,EAExC,OAAQhL,KAAKuK,UAAUQ,EAAQ1H,IAAKrD,KAAKuK,UAAUQ,EAAQ1H,IAAI2H,GAAS,OAAShL,KAAK0K,SAGhFJ,GAAApI,UAAAgJ,WAAP,SAAkBC,EAAiBJ,EAAqBC,GAAA,GAAAA,QAAA,GAAgB,CAAhBA,EAAA,EAEvD,IAAKhL,KAAKwK,QAAQO,EAAQ1H,IACzBrD,KAAKwK,QAAQO,EAAQ1H,IAAM,GAAI1C,MAEhCX,MAAKwK,QAAQO,EAAQ1H,IAAI2H,GAASG,EAG5Bb,GAAApI,UAAAkJ,aAAP,SAAoBC,EAAqBN,EAAqBC,GAAA,GAAAA,QAAA,GAAgB,CAAhBA,EAAA,EAE7D,IAAKhL,KAAKuK,UAAUQ,EAAQ1H,IAC3BrD,KAAKuK,UAAUQ,EAAQ1H,IAAM,GAAI1C,MAElCX,MAAKuK,UAAUQ,EAAQ1H,IAAI2H,GAASK,CAEpCrL,MAAK2K,wBAICL,GAAApI,UAAAoJ,cAAP,SAAqBP,EAAqBC,GAAA,GAAAA,QAAA,GAAgB,CAAhBA,EAAA,EAEzC,IAAKhL,KAAKwK,QAAQO,EAAQ1H,IACzB,MAEDrD,MAAKwK,QAAQO,EAAQ1H,IAAI2H,GAAS,IAElChL,MAAK2K,wBAGCL,GAAApI,UAAAqJ,gBAAP,SAAuBR,EAAqBC,GAAA,GAAAA,QAAA,GAAgB,CAAhBA,EAAA,EAE3C,IAAKhL,KAAKuK,UAAUQ,EAAQ1H,IAC3B,MAEDrD,MAAKuK,UAAUQ,EAAQ1H,IAAI2H,GAAS,IAEpChL,MAAK2K,wBAGEL,GAAApI,UAAAyI,sBAAR,WAEC3K,KAAKwL,cAAc,GAAInB,GAAA5N,QAAW4N,EAAA5N,QAAWgP,sBAAuBzL,OAEtE,OAAAsK,IAlIoBF,EAAA3N,QAoIpBuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MT0rBAzI,GAAQ0B,QS1rBO6N,IT4rBZoB,yCAAyCpE,UAAUqE,uCAAuC,yCAAyCC,oCAAoC,SAAS3R,EAAQkB,EAAOJ,GAClM,YU50BA,IAAA8Q,GAAA5R,EAAqC,iDAGrC,IAAA6R,GAAA7R,EAA+B,sCAE/B,IAAA8R,GAAA9R,EAAkC,iDAGlC,IAAA+R,GAAA,WA8CC,QAAAA,KA5CQhM,KAAAiM,aAEDjM,MAAAkM,kBAwCAlM,MAAAmM,aAAoB,CAI1BnM,MAAKoM,mBAELpM,MAAKqM,uBACLrM,MAAKsM,UACLtM,MAAKuM,gBACLvM,MAAKwM,2BAGLxM,MAAKiM,WAAW,GAAKjM,KAAKyM,cAC1BzM,MAAKiM,WAAW,GAAKjM,KAAK0M,qBAC1B1M,MAAKiM,WAAW,GAAKjM,KAAK2M,YAC1B3M,MAAKiM,WAAW,GAAKjM,KAAK4M,WAC1B5M,MAAKiM,WAAW,GAAKjM,KAAK6M,kBAC1B7M,MAAKiM,WAAW,GAAKjM,KAAK8M,iBAC1B9M,MAAKiM,WAAW,IAAMjM,KAAK+M,oBAC3B/M,MAAKiM,WAAW,IAAMjM,KAAKgN,cAC3BhN,MAAKiM,WAAW,KAAOjM,KAAKiN,eAC5BjN,MAAKiM,WAAW,KAAOjM,KAAKkN,aAItBlB,EAAA9J,UAAAiL,KAAP,WAEC,GAAInN,KAAKoN,uBAAyB,MAAQpN,KAAKqN,cAAgB,MAAQrN,KAAKsN,oBAAsB,KACjG,MAEDtN,MAAKuN,uBACLvN,MAAKwN,2BACL,IAAIC,GAAY,CAChB,IAAIC,GAAK,CACT,IAAIC,GAAM,CACV,IAAIC,GAAe,CACnB,IAAIC,GAAuB,CAC3B,KAAIH,EAAK,EAAGA,EAAK1N,KAAKmM,aAAcuB,IAAK,CACxC,GAAII,GAAS9N,KAAKsN,mBAAmB,EAErC,IAAGtN,KAAKqN,aAAaK,GAAM,EAC1BG,EAAuBD,CAExB5N,MAAKuN,qBAAqBK,GAAgBH,CAC1CzN,MAAKwN,yBAAyBI,KAAkBC,CAEhD,KAAIF,EAAM,EAAGA,EAAMG,EAAUH,IAC5B3N,KAAKoM,iBAAiBqB,KAAeC,GAIjC1B,GAAA9J,UAAA6L,gBAAP,SAAuBC,GAEtB,GAAGhO,KAAKuM,cAAcyB,IAAmB,KACxC,MAAO,EAER,UAAWhO,MAAKuM,cAAcyB,IAAmB,SAChD,MAAOhO,MAAKuM,cAAcyB,OACvB,CACH,KAAM,IAAIpT,OAAM,qDAGXoR,GAAA9J,UAAA+L,gBAAP,SAAuBzK,EAAcwK,GAEpC,GAAGjC,EAAAtP,QAAmByR,iBAAiB,CAItC,GAAIC,GAAe3K,EAAM4K,MAAM,YAAY,GAAGA,MAAM,MAAM,EAC1D,IAAGrC,EAAAtP,QAAmByR,iBAAiBC,GAAc,CACpDnO,KAAKuM,cAAcyB,GAAkBjC,EAAAtP,QAAmByR,iBAAiBC,EACzEnO,MAAKwM,yBAAyBwB,GAAgB,IAC9C,YAEG,CACH,KAAM,IAAIpT,OAAM,2KAA2KuT,EAAa,UAG1MnO,KAAKuM,cAAcyB,GAAkBxK,EAG9BwI,GAAA9J,UAAAmM,aAAR,SAAqBC,EAAcC,EAAgBC,GAClD,GAAIC,GAAUH,EAAII,UAAUF,GAAY,GAAGG,OAAOJ,EAClD,OAAQE,IAAW,EAAMA,GAAWD,GAAY,GAAMC,EAIhDzC,GAAA9J,UAAA0M,4BAAP,SAAmCC,EAAqBC,EAAqBC,GAAA,GAAAA,QAAA,GAAyB,CAAzBA,EAAA,MAE5E,GAAG/O,KAAKuM,cAAcuC,IAAe,KAAK,CACzC,GAAG9O,KAAKwM,yBAAyBsC,IAAe,KAAK,CACpD9O,KAAKuM,cAAcuC,GAAgBD,EAAUG,QAAQC,WAAWjP,KAAKuM,cAAcuC,GACnF9O,MAAKwM,yBAAyBsC,GAAc,KAE7C,GAAGC,EACFhD,EAAAtP,QAAmByS,oBAAoBL,EAAW7O,KAAKuM,cAAcuC,QAErE/C,GAAAtP,QAAmB0S,0BAA0BN,EAAW7O,KAAKuM,cAAcuC,KAK9E9M,QAAAC,eAAW+J,EAAA9J,UAAA,aV4wBJC,IU5wBP,WAEC,MAAOnC,MAAKoM,iBAAiBnR,QV6wBvBoH,WAAY,KACZC,aAAc,MU1wBd0J,GAAA9J,UAAAkN,2BAAP,SAAkC/L,GAEjC,MAAOrD,MAAKqM,qBAAqBhJ,GAG3B2I,GAAA9J,UAAAmN,8BAAP,SAAqCC,GAEpC,MAAOtP,MAAKoM,iBAAiBkD,GAGvBtD,GAAA9J,UAAAqN,0BAAP,SAAiClM,GAEhC,GAAImM,GAA2BxP,KAAKqM,qBAAqBhJ,GAAIoM,OAC7DD,GAAWE,KAAO,EAClB,OAAOF,GAGDxD,GAAA9J,UAAAyN,uBAAP,SAA8BzN,GAE7B,GAAImB,GAAKrD,KAAKqM,qBAAqBpR,MACnC+E,MAAKqM,qBAAqBhJ,GAAMnB,EAG1B8J,GAAA9J,UAAA0N,YAAP,SAAmBf,EAAqBgB,GAEvC,GAAIC,GAAyB9P,KAAKsM,QAAQuD,EAC1C,IAAGC,GAAmB,EACrBjB,EAAUkB,kBAAoB/P,KAAKuN,qBAAqBuC,GAGnD9D,GAAA9J,UAAA8N,UAAP,SAAiBnB,EAAqBrL,EAAcyM,GAAA,GAAAA,QAAA,GAA2B,CAA3BA,EAAA,MAEnD,GAAIC,GAA8BrB,EAAUsB,wBAC5C,IAAIC,GAA6BpQ,KAAKoM,iBAAiB5I,EAEvD,IAAI0M,GAAwBE,EAC3B,MAED,IAAIF,EAAuB,GAAKE,EAAqB,CACpDpQ,KAAKqQ,mBAAmBxB,GAAYoB,EAAa,KACjD,QAGD,GAAIK,GAAyBtQ,KAAKwN,yBAAyB4C,EAI3D,IAAIG,GAAwBH,EAAsBF,CAClD,IAAIM,GAAoBF,EAAkBJ,CAI1C,IAAIO,GAA8BF,IAAiBC,EAAWN,EAAuB,EAAII,CAEzF,IAAI5V,EACJ,IAAIgW,EAEJ,IAAIF,EACH,IAAK9V,EAAImU,EAAU8B,YAAc,EAAGjW,GAAK,EAAGA,IAC3C,GAAImU,EAAU+B,UAAUlW,GAAGmW,SAAW,EACrChC,EAAUiC,cAAcpW,EAG3B,KAAK6V,EACJ1B,EAAUkC,iBAGX,IAAIC,GAA0BnC,EAAUoC,oBAGxCjR,MAAKkR,MAAMT,EAAqBL,EAAqBY,EAKrD,IAAIG,EACJ,KAAKzW,EAAImU,EAAU8B,YAAc,EAAGjW,GAAK,EAAGA,IAAK,CAChDyW,EAAQtC,EAAU+B,UAAUlW,EAC5B,IAAIyW,EAAMN,SAAW,EAAG,CACvB,GAAIG,EAAiBG,EAAMN,WAAaM,EAAMC,WAAY,CACzDvC,EAAUiC,cAAcpW,OAClB,KAAK6V,EAAc,CACzB,GAAGY,EAAMnC,QAAS,CACjB,IAAKmC,EAAMnC,QAAQqC,oBAAqB,CACvCF,EAAMG,UAAUC,eAChBJ,GAAMG,UAAUE,qBAEhBL,GAAMM,MAAQ,IACdN,GAAMO,SAAW,MAElB,IAAKP,EAAMnC,QAAQ2C,uBAAwB,CAC1CR,EAAMS,QAAU,SAUrB,IAAK,GAAIC,KAAOb,GAAkB,CACjCG,EAAQtC,EAAUU,0BAA0BvP,KAAK8R,iBAAiBd,EAAiBa,GAAK,GACxF,IAAIV,EAAMC,aAAe,EACxBvC,EAAUkD,oBAAoBZ,EAAOa,OAAOH,GAAMb,EAAiBa,IAGrE,IAAK5B,GAAejQ,KAAKuN,qBAAqB6C,IAAwB5M,EACrExD,KAAK4O,4BAA4BC,EAAWuB,EAAqB,KAIlEpQ,MAAKiS,MAAMpD,EAEXA,GAAUsB,yBAA2BC,EAG/BpE,GAAA9J,UAAAgP,MAAP,SAAaT,EAA4BL,EAA4BY,GAEpE,GAAItW,EACJ,IAAIgW,EAEJ1Q,MAAKkM,gBAAgBjR,OAAS,CAC9B,IAAIiX,GAAa,CACjB,IAAIC,EACJ,IAAIC,EACJ,KAAK1B,EAAID,EAAqBC,GAAKN,EAAqBM,IAAK,CAC5D,GAAI2B,GAA2BrS,KAAKoN,sBAAsBsD,EAC1D,IAAIrD,GAAsBrN,KAAKqN,aAAaqD,EAE5C,IAAIrD,EAAe,EAAG,CAErB8E,EAAcnS,KAAKsS,qBAAqBD,EACxCD,GAAYD,EAAcnS,KAAKuS,sBAAsBF,IACrD,KAAK3X,EAAIyX,EAAazX,EAAI0X,EAAW1X,UAC7BsW,GAAiBhR,KAAKwS,oBAAoB9X,GAAK,OAGxD,GAAI2S,EAAe,EAAG,CACrB8E,EAAcnS,KAAKsS,qBAAqBD,EACxCD,GAAYD,EAAcnS,KAAKuS,sBAAsBF,IAGrD,KAAK3X,EAAI0X,EAAY,EAAG1X,GAAKyX,EAAazX,IACzCsW,EAAiBhR,KAAK8R,iBAAiBpX,EAAE,EAAI,GAAK,OAASA,EAG7D,GAAI2S,EAAe,EAClBrN,KAAKkM,gBAAgBgG,KAAgBG,GAIjCrG,GAAA9J,UAAA+P,MAAP,SAAapD,GAEZ,GAAI6B,EACJ,IAAIvN,GAAanD,KAAKkM,gBAAgBjR,MACtC,KAAKyV,EAAI,EAAGA,EAAIvN,EAAKuN,IACpB1Q,KAAKyS,cAAc5D,EAAW7O,KAAKkM,gBAAgBwE,IAG9C1E,GAAA9J,UAAAmO,mBAAP,SAA0BxB,EAAqB6D,EAA4B3D,GAA5B,GAAA2D,QAAA,GAA0B,CAA1BA,EAAA,KAA4B,GAAA3D,QAAA,GAA2B,CAA3BA,EAAA,MAE1E,GAAI4D,GAAoB9D,EAAUkB,iBAClC,IAAI6C,GAA2B5S,KAAKoM,iBAAiBuG,EAErD,IAAGD,GAAe1S,KAAKuN,qBAAqBqF,IAAsBD,EACjE3S,KAAK4O,4BAA4BC,EAAW+D,EAAmB7D,EAEhE,IAAGF,EAAUsB,0BAA4ByC,EAAmB,CAC3D/D,EAAUsB,yBAA2ByC,CAErC,IAAIP,GAAoBrS,KAAKoN,sBAAsBwF,EACnD,IAAIvF,GAAerN,KAAKqN,aAAauF,EAErC,IAAGvF,EAAe,EAAG,CACpB,IAAK,GAAI3S,GAAWmU,EAAU8B,YAAc,EAAGjW,GAAK,EAAGA,IACtD,GAAImU,EAAU+B,UAAUlW,GAAGmW,SAAW,EACrChC,EAAUiC,cAAcpW,OACpB,IAAI2S,EAAe,EAAG,CAC5BrN,KAAK6S,wBAAwBhE,EAAWwD,KAGzC,GAAGhF,EAAe,EACjBrN,KAAK8S,qBAAqBjE,EAAWwD,IAEtC,IAAGhF,EAAe,EACjBrN,KAAKyS,cAAc5D,EAAWwD,MAM1BrG,GAAA9J,UAAA2Q,wBAAP,SAA+BE,EAA2BV,GAEzD,GAAIF,GAAqBnS,KAAKsS,qBAAqBD,EACnD,IAAID,GAAmBD,EAAcnS,KAAKuS,sBAAsBF,EAChE,KAAI,GAAI3X,GAAWyX,EAAazX,EAAI0X,EAAW1X,IAC9CqY,EAAgBjC,cAAciC,EAAgBC,sBAAsBhT,KAAKwS,oBAAoB9X,GAAK,QAK7FsR,GAAA9J,UAAA4Q,qBAAP,SAA4BC,EAA2BV,GAItD,GAAIY,EACJ,IAAId,GAAqBnS,KAAKsS,qBAAqBD,EACnD,IAAID,GAAmBD,EAAcnS,KAAKuS,sBAAsBF,EAChE,KAAK,GAAI3X,GAAW0X,EAAY,EAAG1X,GAAKyX,EAAazX,IAAK,CACzDuY,EAAMvY,EAAE,CACRqY,GAAgBhB,oBAAoBgB,EAAgBxD,0BAA0BvP,KAAK8R,iBAAiBmB,IAAOjT,KAAK8R,iBAAiBmB,EAAM,GAAK,MAAOvY,IAI9IsR,GAAA9J,UAAAuQ,cAAP,SAAqB5D,EAAqBwD,GAEzC,GAAIpK,EACJ,IAAIiL,EACJ,IAAIC,EACJ,IAAIhB,GAAqBnS,KAAKsS,qBAAqBD,EACnD,IAAID,GAAmBD,EAAcnS,KAAKuS,sBAAsBF,EAChE,IAAIlB,EACJ,KAAI,GAAIzW,GAAWyX,EAAazX,EAAI0X,EAAW1X,IAAK,CACnDyW,EAAQtC,EAAUuE,oBAAoBpT,KAAKqT,oBAAoB3Y,GAC/D,IAAIyW,EAAO,CAEVnR,KAAKsT,SAAWC,QAAQpC,EAAMnC,SAAWmC,EAAMnC,QAAQqC,oBAEvD6B,GAAkBlT,KAAKwT,kCAAkC9Y,EACzDyY,GAAkBD,EAAkBlT,KAAKyT,iCAAiC/Y,EAC1E,KAAIuN,EAAIiL,EAAiBjL,EAAIkL,EAAiBlL,IAC7CjI,KAAKiM,WAAWjM,KAAK0T,qBAAqBzL,IAAIjN,KAAKgF,KAAMmR,EAAOtC,EAAW7O,KAAK2T,sBAAsB1L,MAKnG+D,GAAA9J,UAAAuK,eAAP,SAAsB0E,EAAqBtC,EAAqBnU,GAE/D,GAAIsF,KAAKsT,SACR,MAED5Y,IAAK,CACL,IAAIkZ,GAAsBzC,EAAMG,UAAUuC,QAC1CD,GAAWE,QAAQ,GAAK9T,KAAK+T,8BAA8BrZ,IAC3DkZ,GAAWE,QAAQ,GAAK9T,KAAK+T,8BAA8BrZ,IAC3DkZ,GAAWE,QAAQ,GAAK9T,KAAK+T,8BAA8BrZ,IAC3DkZ,GAAWE,QAAQ,GAAK9T,KAAK+T,8BAA8BrZ,IAC3DkZ,GAAWE,QAAQ,IAAM9T,KAAK+T,8BAA8BrZ,IAC5DkZ,GAAWE,QAAQ,IAAM9T,KAAK+T,8BAA8BrZ,EAE5DyW,GAAMG,UAAU0C,uBAGVhI,GAAA9J,UAAAwK,sBAAP,SAA6ByE,EAAqBtC,EAAqBnU,GAEtE,GAAIsF,KAAKsT,SACR,MAED5Y,IAAK,CACL,IAAIuZ,GAAwB9C,EAAMG,UAAU4C,iBAAmB/C,EAAMG,UAAU4C,eAAiB,GAAIpI,GAAArP,QACpGwX,GAAOE,cAAgBnU,KAAKoU,yBAAyB1Z,IACrDuZ,GAAOI,gBAAkBrU,KAAKoU,yBAAyB1Z,IACvDuZ,GAAOK,eAAiBtU,KAAKoU,yBAAyB1Z,IACtDuZ,GAAOM,gBAAkBvU,KAAKoU,yBAAyB1Z,IACvDuZ,GAAOO,UAAYxU,KAAKoU,yBAAyB1Z,IACjDuZ,GAAOQ,YAAczU,KAAKoU,yBAAyB1Z,IACnDuZ,GAAOS,WAAa1U,KAAKoU,yBAAyB1Z,IAClDuZ,GAAOU,YAAc3U,KAAKoU,yBAAyB1Z,EAEnDyW,GAAMG,UAAUsD,2BAGV5I,GAAA9J,UAAAyK,aAAP,SAAoBwE,EAAqBtC,EAAqBnU,GAK7D,GAAIma,EACJ,IAAIpD,GAA6B,GAAI9Q,MACrC,IAAImU,GAAkB9U,KAAK+U,sBAAsBra,IAIjD,KAAI,GAAIsa,GAAW,EAAGA,EAAIF,EAAUE,IACnC,GAAIH,EAAOhG,EAAUuE,oBAAoBpT,KAAK+U,sBAAsBra,MACnE+W,EAAMrO,KAAKyR,EAGb1D,GAAMM,MAAQA,EAGRzF,GAAA9J,UAAA0K,YAAP,SAAmBuE,EAAqBtC,EAAqBnU,GAE5DyW,EAAMzB,KAAO1P,KAAKiV,0BAA0Bva,EAC5CmU,GAAUG,QAAQkG,qBAAqB/D,GAGjCnF,GAAA9J,UAAA2K,mBAAP,SAA0BsI,EAAsBpC,EAA2BrY,GAE1Eya,EAAOzF,KAAO1P,KAAKiV,0BAA0Bva,EAEhCya,GAAQC,oBACrBrC,GAAgB/D,QAAQkG,qBAAqBC,GAGvCnJ,GAAA9J,UAAA4K,kBAAP,SAAyBqE,EAAqBtC,EAAqBnU,GAElE,IAAKyW,EAAMnC,UAAYmC,EAAMnC,QAAQ2C,uBACpCR,EAAMS,QAAU2B,QAAQ7Y,GAGnBsR,GAAA9J,UAAA6K,qBAAP,SAA4BoE,EAAqBtC,EAAqBnU,GAErE,GAAIsF,KAAKsT,SACR,MAED5Y,IAAK,CAEL,IAAIkZ,GAAsBzC,EAAMG,UAAUuC,QAC1CD,GAAWE,QAAQ,GAAK9T,KAAKqV,oCAAoC3a,IACjEkZ,GAAWE,QAAQ,GAAK9T,KAAKqV,oCAAoC3a,IACjEkZ,GAAWE,QAAQ,GAAK9T,KAAKqV,oCAAoC3a,IACjEkZ,GAAWE,QAAQ,GAAK9T,KAAKqV,oCAAoC3a,EAEjEyW,GAAMG,UAAU0C,sBAEhB7C,GAAMmE,kCAAkCzJ,EAAApP,QAAuBgN,iBAGzDuC,GAAA9J,UAAA8K,eAAP,SAAsBmE,EAAqBtC,EAAqBnU,GAE/D,GAAIsF,KAAKsT,SACR,MAED5Y,IAAK,CAEL,IAAIkZ,GAAsBzC,EAAMG,UAAUuC,QAC1CD,GAAWE,QAAQ,IAAM9T,KAAKuV,8BAA8B7a,IAC5DkZ,GAAWE,QAAQ,IAAM9T,KAAKuV,8BAA8B7a,EAE5DyW,GAAMG,UAAUkE,qBAGVxJ,GAAA9J,UAAA+K,gBAAP,SAAuBkE,EAAqBtC,EAAqBnU,GAEhEyW,EAAMO,SAAW,KAGX1F,GAAA9J,UAAAgL,aAAP,SAAoBiE,EAAqBtC,EAAqBnU,GAE7DyW,EAAMM,MAAQ,KAEhB,OAAAzF,KAEAhK,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MV0rBAzI,GAAQ0B,QU1rBOuP,IV4rBZyJ,sCAAsCnO,UAAU4B,iDAAiD,iDAAiDwM,iDAAiD,mDAAmDC,sCAAsC,SAAS1b,EAAQkB,EAAOJ,GACvT,YW7rCA,IAAA6a,GAAA,WAQC,QAAAA,GAAY/S,EAAUE,EAAUM,GAE/BrD,KAAK6C,EAAIA,CACT7C,MAAK+C,EAAIA,CACT/C,MAAKqD,GAAKA,EAEZ,MAAAuS,KAEA5T,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MX0rCAzI,GAAQ0B,QW1rCOmZ,OX4rCTC,qCAAqC,SAAS5b,EAAQkB,EAAOJ,GACnE,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IYptCnF,IAAAiC,GAAAnQ,EAA+B,yCAG/B,IAAA6b,GAAA7b,EAA0B,gCAC1B,IAAA8b,GAAA9b,EAA6B,qCAE7B,IAAA+b,GAAA/b,EAA0B,gCAK1B,IAAAgc,GAAAhc,EAA8B,2CAwD9B,IAAAic,GAAA,SAAA1N,GAAwBV,EAAAoO,EAAA1N,EA2QvB,SAAA0N,KAEC1N,EAAAxN,KAAAgF,KAvQOA,MAAAmW,UAAqB,GAAIL,GAAArZ,OAEzBuD,MAAAoW,UAAqB,GAAIJ,GAAAvZ,OACzBuD,MAAAqW,MAAiB,GAAIL,GAAAvZ,OACrBuD,MAAAsW,OAAkB,GAAIN,GAAAvZ,QAAS,EAAG,EAAG,EAwQ5CuD,MAAKuW,YAAc,GAAI5V,OAAgB,EAEvCX,MAAKuW,YAAY,GAAKvW,KAAKoW,SAC3BpW,MAAKuW,YAAY,GAAKvW,KAAKqW,KAC3BrW,MAAKuW,YAAY,GAAKvW,KAAKsW,OArQ5BtU,OAAAC,eAAWiU,EAAAhU,UAAA,cZgtCJC,IYhtCP,WAEC,GAAIqU,GAAoBT,EAAAtZ,QAAcga,WAAWzW,KAAKmW,UACtDK,GAASE,QAET,OAAOF,IZgtCDnU,WAAY,KACZC,aAAc,MYxsCrBN,QAAAC,eAAWiU,EAAAhU,UAAA,kBZitCJC,IYjtCP,WAEC,MAAOnC,MAAK2W,iBZktCNpT,IY/sCP,SAA0BqT,GAEzB,GAAI5W,KAAK2W,iBAAmBC,EAC3B,MAED5W,MAAK2W,gBAAkBC,CAEvB5W,MAAK4U,4BZ8sCCvS,WAAY,KACZC,aAAc,MYrsCrBN,QAAAC,eAAWiU,EAAAhU,UAAA,8BZ+sCJC,IY/sCP,WAEC,MAAOnC,MAAK6W,6BZgtCNxU,WAAY,KACZC,aAAc,MYnsCrBN,QAAAC,eAAWiU,EAAAhU,UAAA,sBZitCJC,IYjtCP,WAEC,MAAOnC,MAAK8W,qBZktCNzU,WAAY,KACZC,aAAc,MY7sCrBN,QAAAC,eAAWiU,EAAAhU,UAAA,cZmtCJC,IYntCP,WAEC,GAAIqU,GAAoBT,EAAAtZ,QAAcsa,MAAM/W,KAAKmW,UACjDK,GAASE,QAET,OAAOF,IZmtCDnU,WAAY,KACZC,aAAc,MY9sCrBN,QAAAC,eAAWiU,EAAAhU,UAAA,iBZotCJC,IYptCP,WAEC,MAAO4T,GAAAtZ,QAAcga,WAAWzW,KAAKmW,YZqtC/B9T,WAAY,KACZC,aAAc,MYhtCrBN,QAAAC,eAAWiU,EAAAhU,UAAA,cZstCJC,IYttCP,WAEC,GAAIqU,GAAoBT,EAAAtZ,QAAcua,SAAShX,KAAKmW,UACpDK,GAASE,QAET,OAAOF,IZstCDnU,WAAY,KACZC,aAAc,MY1rCrBN,QAAAC,eAAWiU,EAAAhU,UAAA,YZysCJC,IYzsCP,WAEC,GAAInC,KAAKiX,eACRjX,KAAKkX,iBAEN,OAAOlX,MAAKmW,WZysCN5S,IYtsCP,SAAoBqT,GAEnB,IAAK,GAAIlc,GAAW,EAAGA,EAAI,GAAIA,IAC9BsF,KAAKmW,UAAUrC,QAAQpZ,GAAKkc,EAAI9C,QAAQpZ,EAEzCsF,MAAKgU,wBZssCC3R,WAAY,KACZC,aAAc,MYrrCrBN,QAAAC,eAAWiU,EAAAhU,UAAA,eZ4rCJC,IY5rCP,WAEC,MAAOnC,MAAKmX,cZ6rCN9U,WAAY,KACZC,aAAc,MYxrCrBN,QAAAC,eAAWiU,EAAAhU,UAAA,YZ8rCJC,IY9rCP,WAEC,MAAOnC,MAAKmW,UAAUxU,UZ+rChBU,WAAY,KACZC,aAAc,MY1rCrBN,QAAAC,eAAWiU,EAAAhU,UAAA,eZgsCJC,IYhsCP,WAEC,MAAO4T,GAAAtZ,QAAcua,SAAShX,KAAK6T,WZisC7BxR,WAAY,KACZC,aAAc,MY5rCrBN,QAAAC,eAAWiU,EAAAhU,UAAA,YZksCJC,IYlsCP,WAEC,GAAInC,KAAKoX,iBACRpX,KAAKqX,mBAEN,OAAOrX,MAAKoW,WZksCN/T,WAAY,KACZC,aAAc,MYzrCd4T,GAAAhU,UAAAoV,SAAP,SAAgBC,EAAWC,EAAWC,GAErC,GAAIzX,KAAKoX,iBACRpX,KAAKqX,mBAENrX,MAAKoW,UAAUvT,EAAI0U,CACnBvX,MAAKoW,UAAUrT,EAAIyU,CACnBxX,MAAKoW,UAAUsB,EAAID,CAEnBzX,MAAK2X,qBAMN3V,QAAAC,eAAWiU,EAAAhU,UAAA,SZ+rCJC,IY/rCP,WAEC,GAAInC,KAAKoX,iBACRpX,KAAKqX,mBAEN,OAAOrX,MAAKsW,QZ+rCNjU,WAAY,KACZC,aAAc,MY7rCd4T,GAAAhU,UAAA0V,QAAP,SAAeC,EAAWC,EAAWC,GAEpC,GAAI/X,KAAKoX,iBACRpX,KAAKqX,mBAENrX,MAAKsW,OAAOzT,EAAIgV,CAChB7X,MAAKsW,OAAOvT,EAAI+U,CAChB9X,MAAKsW,OAAOoB,EAAIK,CAEhB/X,MAAK2X,qBAMN3V,QAAAC,eAAWiU,EAAAhU,UAAA,QZ4rCJC,IY5rCP,WAEC,GAAInC,KAAKoX,iBACRpX,KAAKqX,mBAEN,OAAOrX,MAAKqW,OZ4rCNhU,WAAY,KACZC,aAAc,MY1rCd4T,GAAAhU,UAAA8V,OAAP,SAAcH,EAAWC,EAAWC,GAEnC,GAAI/X,KAAKoX,iBACRpX,KAAKqX,mBAENrX,MAAKqW,MAAMxT,EAAIgV,CACf7X,MAAKqW,MAAMtT,EAAI+U,CACf9X,MAAKqW,MAAMqB,EAAIK;AAEf/X,KAAK2X,qBAON3V,QAAAC,eAAWiU,EAAAhU,UAAA,YZwrCJC,IYxrCP,WAEC,MAAO4T,GAAAtZ,QAAcsa,MAAM/W,KAAK6T,WZyrC1BxR,WAAY,KACZC,aAAc,MYzqCd4T,GAAAhU,UAAAuB,QAAP,YAuBOyS,GAAAhU,UAAA+V,oBAAP,SAA2BC,GAE1B,MAAO,IAAIpC,GAAArZ,QASLyZ,GAAAhU,UAAAiW,YAAP,SAAmBC,GAElBpY,KAAKqY,eAAerC,EAAAvZ,QAAS6b,OAAQF,GAQ/BlC,GAAAhU,UAAAqW,aAAP,SAAoBH,GAEnBpY,KAAKqY,eAAerC,EAAAvZ,QAAS6b,QAASF,GAShClC,GAAAhU,UAAAsW,SAAP,SAAgBJ,GAEfpY,KAAKqY,eAAerC,EAAAvZ,QAASgc,QAASL,GAQhClC,GAAAhU,UAAAwW,UAAP,SAAiBN,GAEhBpY,KAAKqY,eAAerC,EAAAvZ,QAASgc,OAAQL,GAQ/BlC,GAAAhU,UAAAyW,OAAP,SAAcP,GAEbpY,KAAKqY,eAAerC,EAAAvZ,QAASmc,OAAQR,GAQ/BlC,GAAAhU,UAAA2W,SAAP,SAAgBT,GAEfpY,KAAKqY,eAAerC,EAAAvZ,QAASmc,QAASR,GAWhClC,GAAAhU,UAAA4W,OAAP,SAAcC,EAAWC,EAAWC,GAEnCjZ,KAAKmW,UAAUrC,QAAQ,IAAMiF,CAC7B/Y,MAAKmW,UAAUrC,QAAQ,IAAMkF,CAC7BhZ,MAAKmW,UAAUrC,QAAQ,IAAMmF,CAE7BjZ,MAAKwV,qBAQCU,GAAAhU,UAAAgX,MAAP,SAAaC,GAEZnZ,KAAKoZ,OAAOpD,EAAAvZ,QAASgc,OAAQU,GAQvBjD,GAAAhU,UAAAmX,KAAP,SAAYF,GAEXnZ,KAAKoZ,OAAOpD,EAAAvZ,QAAS6b,OAAQa,GAQvBjD,GAAAhU,UAAAoX,IAAP,SAAWH,GAEVnZ,KAAKoZ,OAAOpD,EAAAvZ,QAASmc,OAAQO,GASvBjD,GAAAhU,UAAAkX,OAAP,SAAcG,EAAeJ,GAE5BnZ,KAAK6T,SAAS2F,gBAAgBL,EAAOI,EAErCvZ,MAAKgU,uBASCkC,GAAAhU,UAAAuX,UAAP,SAAiBF,EAAenB,GAE/B,GAAIvV,GAAW0W,EAAK1W,EAAGE,EAAWwW,EAAKxW,EAAG2U,EAAW6B,EAAK7B,CAC1D,IAAIvU,GAAaiV,EAASsB,KAAKC,KAAK9W,EAAEA,EAAIE,EAAEA,EAAI2U,EAAEA,EAElD1X,MAAK6T,SAAS+F,kBAAkB/W,EAAEM,EAAKJ,EAAEI,EAAKuU,EAAEvU,EAEhDnD,MAAKwV,qBASCU,GAAAhU,UAAAmW,eAAP,SAAsBkB,EAAenB,GAEpC,GAAIvV,GAAW0W,EAAK1W,EAAGE,EAAWwW,EAAKxW,EAAG2U,EAAW6B,EAAK7B,CAC1D,IAAIvU,GAAaiV,EAASsB,KAAKC,KAAK9W,EAAEA,EAAIE,EAAEA,EAAI2U,EAAEA,EAElD1X,MAAK6T,SAASgG,mBAAmBhX,EAAEM,EAAKJ,EAAEI,EAAKuU,EAAEvU,EAEjDnD,MAAKwV,qBAGCU,GAAAhU,UAAAqP,cAAP,WAECvR,KAAKmW,UAAU2D,UACf9Z,MAAKgU,uBAGCkC,GAAAhU,UAAAsP,oBAAP,WAEC,IAAKxR,KAAK2W,gBACT,MAED3W,MAAK2W,gBAAgBoD,OACrB/Z,MAAK4U,2BAQCsB,GAAAhU,UAAAyV,mBAAP,WAEC3X,KAAKiX,eAAiB,IAEtBjX,MAAKwL,cAAc,GAAIyK,GAAAxZ,QAAewZ,EAAAxZ,QAAeud,oBAAqBha,OAGpEkW,GAAAhU,UAAA8R,qBAAP,WAEChU,KAAKwV,oBAELxV,MAAKoX,iBAAmB,KAMlBlB,GAAAhU,UAAAsT,mBAAP,WAECxV,KAAKmW,UAAUX,oBAEfxV,MAAKwL,cAAc,GAAIyK,GAAAxZ,QAAewZ,EAAAxZ,QAAeud,oBAAqBha,OAGpEkW,GAAAhU,UAAA0S,yBAAP,WAEC5U,KAAKwL,cAAc,GAAIyK,GAAAxZ,QAAewZ,EAAAxZ,QAAewd,2BAA4Bja,OAM1EkW,GAAAhU,UAAAgV,gBAAR,WAEClX,KAAKmW,UAAU+D,UAAUla,KAAKuW,YAE9BvW,MAAKiX,eAAiB,MAIff,GAAAhU,UAAAmV,kBAAR,WAEC,GAAI8C,GAA2Bna,KAAKmW,UAAUiE,WAC9C,IAAIC,EAEJA,GAAMF,EAAS,EAEfna,MAAKoW,UAAUvT,EAAIwX,EAAIxX,CACvB7C,MAAKoW,UAAUrT,EAAIsX,EAAItX,CACvB/C,MAAKoW,UAAUsB,EAAI2C,EAAI3C,CAEvB2C,GAAMF,EAAS,EAEfna,MAAKqW,MAAMxT,EAAIwX,EAAIxX,CACnB7C,MAAKqW,MAAMtT,EAAIsX,EAAItX,CACnB/C,MAAKqW,MAAMqB,EAAI2C,EAAI3C,CAEnB2C,GAAMF,EAAS,EAEfna,MAAKsW,OAAOzT,EAAIwX,EAAIxX,CACpB7C,MAAKsW,OAAOvT,EAAIsX,EAAItX,CACpB/C,MAAKsW,OAAOoB,EAAI2C,EAAI3C,CAEpB1X,MAAKoX,iBAAmB,MAE1B,OAAAlB,IApiBwB9L,EAAA3N,QAsiBxBuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MZwmCAzI,GAAQ0B,QYxmCOyZ,IZ0mCZxK,yCAAyCpE,UAAUgT,gCAAgChT,UAAUiT,qCAAqCjT,UAAUkT,gCAAgClT,UAAUmT,2CAA2C,6CAA6Czc,2BAA2B,SAAS/D,EAAQkB,EAAOJ,GACpU,YaptDA,IAAA2f,GAAAzgB,EAA2C,wCAAnCc,GAAAgO,cAAA2R,EAAAje,OACR,IAAAoP,GAAA5R,EAAkD,iDAA1Cc,GAAAoO,uBAAA0C,EAAApP,OAIR,IAAAke,GAAA1gB,EAA6C,0CAArCc,GAAAgP,gBAAA4Q,EAAAle,OACR,IAAAme,GAAA3gB,EAAqC,gCAA7Bc,GAAAuP,MAAAsQ,EAAAne,OACR,IAAAoe,GAAA5gB,EAAuC,mCAA/Bc,GAAAiR,SAAA6O,EAAApe,OACR,IAAA2C,GAAAnF,EAAyC,qCAAjCc,GAAA6a,WAAAxW,EAAA3C,OACR,IAAAqe,GAAA7gB,EAAwC,oCAAhCc,GAAAmb,UAAA4E,EAAAre,Ub2tDLqM,wCAAwC,wCAAwCI,iDAAiD,iDAAiDY,0CAA0C,0CAA0CK,gCAAgC,gCAAgCyB,mCAAmC,mCAAmC+J,qCAAqC,qCAAqCE,oCAAoC,sCAAsCkF,oDAAoD,SAAS9gB,EAAQkB,EAAOJ,GAC/mB,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IcvuDnF,IAAA6S,GAAA/gB,EAAkC,2CAIlC,IAAAghB,GAAAhhB,EAA6B,2CAC7B,IAAAihB,GAAAjhB,EAAiC,+CAGjC,IAAAkhB,GAAAlhB,EAAkC,iDAOlC,IAAAmhB,GAAA,SAAA5S,GAAqCV,EAAAsT,EAAA5S,EAoBpC,SAAA4S,GAAYC,GAEX7S,EAAAxN,KAAAgF,KAAMqb,EAnBCrb,MAAAsb,GAAY,CACZtb,MAAAub,GAAY,CACZvb,MAAAwb,GAAY,CACZxb,MAAAC,OAAgB,CAChBD,MAAAE,QAAiB,CACjBF,MAAAyb,OAAgB,CAChBzb,MAAA0b,SAAkB,CAClB1b,MAAA2b,SAAkB,CAClB3b,MAAA4b,SAAkB,CAClB5b,MAAA6b,cAAuB,CACvB7b,MAAA8b,cAAuB,CACvB9b,MAAA+b,cAAuB,EAcxBX,EAAAlZ,UAAA8Z,QAAP,WAEChc,KAAKsb,GAAKtb,KAAKub,GAAKvb,KAAKwb,GAAK,CAC9Bxb,MAAKC,OAASD,KAAKE,QAAUF,KAAKyb,OAAS,CAC3Czb,MAAK0b,SAAW1b,KAAK2b,SAAW3b,KAAK4b,SAAW,CAChD5b,MAAK6b,cAAgB7b,KAAK8b,cAAgB9b,KAAK+b,cAAgB,EAMzDX,GAAAlZ,UAAA+Z,YAAP,SAAmBC,EAAuBC,GAEzC,GAAGnc,KAAKoc,cACPpc,KAAKqc,UAEN,KAAK,GAAI3hB,GAAW,EAAGA,EAAIyhB,IAAazhB,EAAG,CAE1C,GAAI4hB,GAAgBJ,EAAOxhB,EAC3B,IAAID,GAAW6hB,EAAM7hB,CACrB,IAAIuN,GAAWsU,EAAMtU,CACrB,IAAIuU,GAAWD,EAAMC,CACrB,IAAIC,GAAwB/hB,EAAI,GAAIuF,KAAK6b,cAAgB7b,KAAK6b,aAC9D,IAAIY,GAAwBzU,EAAI,GAAIhI,KAAK8b,cAAgB9b,KAAK8b,aAC9D,IAAIY,GAAwBH,EAAI,GAAIvc,KAAK+b,cAAgB/b,KAAK+b,aAC9D,IAAIY,GAAkBliB,GAAGuF,KAAK0b,SAAWc,GAAkBxU,GAAGhI,KAAK2b,SAAWc,GAAkBF,GAAGvc,KAAK4b,SAAWc,GAAkBJ,EAAMvU,CAE3I,IAAI4U,EAAW,EACd,MAAO,OAGT,MAAO,MAGDvB,GAAAlZ,UAAA0a,gBAAP,SAAuBjb,EAAmBkb,EAAoBC,GAE7D,GAAG9c,KAAKoc,cACPpc,KAAKqc,UAEN,OAAOrc,MAAK+c,KAAKH,gBAAgBjb,EAAUkb,EAAWC,GAKhD1B,GAAAlZ,UAAA8a,gBAAP,SAAuBV,GAEtB,GAAI7hB,GAAW6hB,EAAM7hB,CACrB,IAAIuN,GAAWsU,EAAMtU,CACrB,IAAIuU,GAAWD,EAAMC,CACrB,IAAIU,GAAwBxiB,EAAEuF,KAAK0b,SAAW1T,EAAEhI,KAAK2b,SAAWY,EAAEvc,KAAK4b,SAAWU,EAAMvU,CAExF,IAAItN,EAAI,EACPA,GAAKA,CAEN,IAAIuN,EAAI,EACPA,GAAKA,CAEN,IAAIuU,EAAI,EACPA,GAAKA,CAEN,IAAIW,GAAqBziB,EAAEuF,KAAK6b,cAAgB7T,EAAEhI,KAAK8b,cAAgBS,EAAEvc,KAAK+b,aAE9E,OAAOkB,GAAiBC,EAAalC,EAAAve,QAAoB0gB,MAAQF,GAAkBC,EAAalC,EAAAve,QAAoB2gB,KAAOpC,EAAAve,QAAoB4gB,UAGzIjC,GAAAlZ,UAAAma,SAAP,WAEC7T,EAAAtG,UAAMma,SAAQrhB,KAAAgF,KAEdA,MAAK+c,KAAO/c,KAAKsd,SAASC,QAC1B,IAAIC,GAAkBxd,KAAKsd,SAASG,cACpC,IAAIC,GAAY1d,KAAK+c,KAAK7Y,MAAM,CAChC,IAAIyZ,GAAY3d,KAAK+c,KAAK5Y,OAAO,CACjC,IAAIyZ,GAAY5d,KAAK+c,KAAKc,MAAM,CAChC,IAAIC,GAAY9d,KAAK+c,KAAKla,EAAI6a,CAC9B,IAAIK,GAAY/d,KAAK+c,KAAKha,EAAI4a,CAC9B,IAAIK,GAAYhe,KAAK+c,KAAKrF,EAAIkG,CAC9B,IAAIK,GAAmBT,EAAO1J,OAE9B,IAAIoK,GAAaD,EAAI,GAAIE,EAAaF,EAAI,GAAIG,EAAaH,EAAI,GAAII,EAAaJ,EAAI,GACpF,IAAIK,GAAaL,EAAI,GAAIM,EAAaN,EAAI,GAAIO,EAAaP,EAAI,GAAIQ,EAAaR,EAAI,GACpF,IAAIS,GAAaT,EAAI,GAAIU,EAAaV,EAAI,GAAIW,EAAaX,EAAI,IAAKY,EAAaZ,EAAI,GAErFje,MAAK0b,SAAWoC,EAAGI,EAAMH,EAAGI,EAAMH,EAAGI,EAAMC,CAC3Cre,MAAK2b,SAAWmC,EAAGQ,EAAMP,EAAGQ,EAAMP,EAAGQ,EAAMC,CAC3Cze,MAAK4b,SAAWkC,EAAGY,EAAMX,EAAGY,EAAMX,EAAGY,EAAMC,CAE3C7e,MAAK6b,cAAgBnC,KAAKoF,IAAIpB,EAAGQ,EAAMP,EAAGQ,EAAMP,EAAGQ,EACnDpe,MAAK8b,cAAgBpC,KAAKoF,IAAIpB,EAAGY,EAAMX,EAAGY,EAAMX,EAAGY,EACnDxe,MAAK+b,cAAgBrC,KAAKoF,IAAIpB,EAAGgB,EAAMf,EAAGgB,EAAMf,EAAGgB,EAEnD,IAAI5e,KAAK+e,QAAS,CACjB/e,KAAK+e,QAAQ7a,MAAQlE,KAAK+c,KAAK7Y,KAC/BlE,MAAK+e,QAAQ5a,OAASnE,KAAK+c,KAAK5Y,MAChCnE,MAAK+e,QAAQlB,MAAQ7d,KAAK+c,KAAKc,KAC/B7d,MAAKgf,kBAAkB1N,UAAUuC,SAAW2J,EAG7Cxd,KAAKC,OAASD,KAAK6b,cAAc,CACjC7b,MAAKE,QAAUF,KAAK8b,cAAc,CAClC9b,MAAKyb,OAASzb,KAAK+b,cAAc,CAEjC/b,MAAKsb,GAAKtb,KAAK0b,SAAW1b,KAAK6b,aAC/B7b,MAAKub,GAAKvb,KAAK2b,SAAW3b,KAAK8b,aAC/B9b,MAAKwb,GAAKxb,KAAK4b,SAAW5b,KAAK+b,cAGzBX,GAAAlZ,UAAA+c,wBAAP,WAECjf,KAAK+e,QAAU,GAAI5D,GAAA1e,QAAoB,KAAMwe,EAAAxe,QAAayiB,KAE1D,OAAgBlf,MAAK+e,QAAQI,eAE/B,OAAA/D,IA7IqCF,EAAAze,QA+IrCuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,Md+rDAzI,GAAQ0B,Qc/rDO2e,IdisDZgE,2CAA2C9X,UAAU+X,+CAA+C,+CAA+CC,2CAA2C,2CAA2CC,iDAAiD,mDAAmDC,4CAA4C,SAASvlB,EAAQkB,EAAOJ,GACpZ,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,Ier2DnF,IAAA6S,GAAA/gB,EAAkC,2CAKlC,IAAAghB,GAAAhhB,EAA6B,2CAC7B,IAAAihB,GAAAjhB,EAAiC,+CAGjC,IAAAwlB,GAAAxlB,EAAmC,mDAEnC,IAAAylB,GAAA,SAAAlX,GAA6BV,EAAA4X,EAAAlX,EAS5B,SAAAkX,GAAYrE,GAEX7S,EAAAxN,KAAAgF,KAAMqb,EARCrb,MAAA2f,QAAiB,CACjB3f,MAAA0b,SAAkB,CAClB1b,MAAA2b,SAAkB,CAClB3b,MAAA4b,SAAkB,EAQnB8D,EAAAxd,UAAA8Z,QAAP,WAEChc,KAAK0b,SAAW1b,KAAK2b,SAAW3b,KAAK4b,SAAW,CAChD5b,MAAK2f,QAAU,EAGTD,GAAAxd,UAAA+Z,YAAP,SAAmBC,EAAuBC,GAEzC,GAAGnc,KAAKoc,cACPpc,KAAKqc,UAEN,KAAK,GAAI3hB,GAAW,EAAGA,EAAIyhB,IAAazhB,EAAG,CAC1C,GAAI4hB,GAAgBJ,EAAOxhB,EAC3B,IAAI8hB,GAAwBF,EAAM7hB,EAAI,GAAIuF,KAAK2f,QAAU3f,KAAK2f,OAC9D,IAAIlD,GAAwBH,EAAMtU,EAAI,GAAIhI,KAAK2f,QAAU3f,KAAK2f,OAC9D,IAAIjD,GAAwBJ,EAAMC,EAAI,GAAIvc,KAAK2f,QAAU3f,KAAK2f,OAC9D,IAAIhD,GAAkBL,EAAM7hB,GAAIuF,KAAK0b,SAAWc,GAAmBF,EAAMtU,GAAIhI,KAAK2b,SAAWc,GAAkBH,EAAMC,GAAIvc,KAAK4b,SAAWc,GAAmBJ,EAAMvU,CAClK,IAAI4U,EAAW,EAAG,CACjB,MAAO,QAGT,MAAO,MAGD+C,GAAAxd,UAAA0a,gBAAP,SAAuBjb,EAAmBkb,EAAoBC,GAE7D,GAAG9c,KAAKoc,cACPpc,KAAKqc,UAEN,OAAOrc,MAAK4f,QAAQhD,gBAAgBjb,EAAUkb,EAAWC,GAInD4C,GAAAxd,UAAA8a,gBAAP,SAAuBV,GAEtB,GAAI7hB,GAAW6hB,EAAM7hB,CACrB,IAAIuN,GAAWsU,EAAMtU,CACrB,IAAIuU,GAAWD,EAAMC,CACrB,IAAIsD,GAAYplB,EAAEuF,KAAK0b,SAAW1T,EAAEhI,KAAK2b,SAAWY,EAAEvc,KAAK4b,SAAWU,EAAMvU,CAE5E,IAAItN,EAAI,EACPA,GAAKA,CAEN,IAAIuN,EAAI,EACPA,GAAKA,CAEN,IAAIuU,EAAI,EACPA,GAAKA,CAEN,IAAIuD,IAAarlB,EAAIuN,EAAIuU,GAAGvc,KAAK2f,OAEjC,OAAOE,GAAKC,EAAI9E,EAAAve,QAAoB0gB,MAAQ0C,GAAMC,EAAI9E,EAAAve,QAAoB2gB,KAAOpC,EAAAve,QAAoB4gB,UAG/FqC,GAAAxd,UAAAma,SAAP,WAEC7T,EAAAtG,UAAMma,SAAQrhB,KAAAgF,KAEdA,MAAK4f,QAAU5f,KAAKsd,SAASyC,WAC7B,IAAIvC,GAAkBxd,KAAKsd,SAASG,cAEpC,IAAIK,GAAY9d,KAAK4f,QAAQ/c,CAC7B,IAAIkb,GAAY/d,KAAK4f,QAAQ7c,CAC7B,IAAIib,GAAYhe,KAAK4f,QAAQlI,CAC7B,IAAIrd,GAAW2F,KAAK4f,QAAQI,MAE5B,IAAI/B,GAAmBT,EAAO1J,OAE9B,IAAIoK,GAAaD,EAAI,GAAIE,EAAaF,EAAI,GAAIG,EAAaH,EAAI,GAAII,EAAaJ,EAAI,GACpF,IAAIK,GAAaL,EAAI,GAAIM,EAAaN,EAAI,GAAIO,EAAaP,EAAI,GAAIQ,EAAaR,EAAI,GACpF,IAAIS,GAAaT,EAAI,GAAIU,EAAaV,EAAI,GAAIW,EAAaX,EAAI,IAAKY,EAAaZ,EAAI,GAErFje,MAAK0b,SAAWoC,EAAGI,EAAMH,EAAGI,EAAMH,EAAGI,EAAMC,CAC3Cre,MAAK2b,SAAWmC,EAAGQ,EAAMP,EAAGQ,EAAMP,EAAGQ,EAAMC,CAC3Cze,MAAK4b,SAAWkC,EAAGY,EAAMX,EAAGY,EAAMX,EAAGY,EAAMC,CAE3C,IAAIoB,GAAY/B,EAAMC,EAAMC,CAC5B,IAAI8B,GAAY5B,EAAMC,EAAMC,CAC5B,IAAI2B,GAAYzB,EAAMC,EAAMC,CAC5B5e,MAAK2f,QAAUtlB,EAAEqf,KAAKC,MAAMsG,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,GAAI,EAEnD,IAAIngB,KAAK+e,QAAS,CACjB/e,KAAK+e,QAAQiB,OAAS3lB,CACtB2F,MAAKgf,kBAAkBnc,EAAIib,CAC3B9d,MAAKgf,kBAAkBjc,EAAIgb,CAC3B/d,MAAKgf,kBAAkBtH,EAAIsG,CAC3Bhe,MAAKgf,kBAAkB1N,UAAUuC,SAAW2J,GAIvCkC,GAAAxd,UAAA+c,wBAAP,WAECjf,KAAK+e,QAAU,GAAIU,GAAAhjB,QAAsB,KAAMwe,EAAAxe,QAAayiB,KAE5D,OAAgBlf,MAAK+e,QAAQI,eAE/B,OAAAO,IA9G6BxE,EAAAze,QAgH7BuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,Mfk0DAzI,GAAQ0B,Qel0DOijB,Ifo0DZN,2CAA2C9X,UAAU+X,+CAA+C,+CAA+CC,2CAA2C,2CAA2Cc,mDAAmD,qDAAqDf,gDAAgD,SAASplB,EAAQkB,EAAOJ,GAC5Z,YgB77DA,IAAAslB,GAAApmB,EAAkC,6CAKlC,IAAAqmB,GAAA,WAMC,QAAAA,GAAYjF,GAFLrb,KAAAoc,cAAwB,IAI9Bpc,MAAKsd,SAAWjC,EAGViF,EAAApe,UAAAuB,QAAP,WAECzD,KAAKsd,SAAW,IAChBtd,MAAKgf,kBAAoB,KAG1Bhd,QAAAC,eAAWqe,EAAApe,UAAA,mBhBm7DJC,IgBn7DP,WAEC,GAAInC,KAAKgf,mBAAqB,KAAM,CACnChf,KAAKgf,kBAAoBhf,KAAKif,yBAE9Bjf,MAAKoc,cAAgB,KAGtB,GAAGpc,KAAKoc,cACPpc,KAAKqc,UAEN,OAAOrc,MAAKgf,mBhBi7DN3c,WAAY,KACZC,aAAc,MgB/6Ddge,GAAApe,UAAA8Z,QAAP,WAEC,KAAM,IAAIqE,GAAA5jB,QAGJ6jB,GAAApe,UAAA+Z,YAAP,SAAmBC,EAAuBC,GAEzC,KAAM,IAAIkE,GAAA5jB,QAGJ6jB,GAAApe,UAAAuN,MAAP,WAEC,KAAM,IAAI4Q,GAAA5jB,QAGJ6jB,GAAApe,UAAA0a,gBAAP,SAAuBjb,EAAmBkb,EAAoBC,GAE7D,OAAQ,EAGFwD,GAAApe,UAAA8a,gBAAP,SAAuBV,GAEtB,KAAM,IAAI+D,GAAA5jB,QAGJ6jB,GAAApe,UAAAma,SAAP,WAECrc,KAAKoc,cAAgB,MAGfkE,GAAApe,UAAAqe,WAAP,WAECvgB,KAAKoc,cAAgB,KAGfkE,GAAApe,UAAA+c,wBAAP,WAEC,KAAM,IAAIoB,GAAA5jB,QAEZ,OAAA6jB,KAEAte,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MhBm6DAzI,GAAQ0B,QgBn6DO6jB,IhBq6DZE,6CAA6ClZ,YAAYmZ,wCAAwC,SAASxmB,EAAQkB,EAAOJ,GAC5H,YiBp/DA,IAAA2lB,GAAA,WAAA,QAAAA,MAKeA,EAAAC,OAAgB,QAKhBD,GAAAE,iBAA0B,gBAK1BF,GAAAG,KAAc,MAC7B,OAAAH,KAEA1e,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MjBw/DAzI,GAAQ0B,QiBx/DOikB,OjB0/DTI,wCAAwC,SAAS7mB,EAAQkB,EAAOJ,GACtE,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IkBphEnF,IAAA6S,GAAA/gB,EAAkC,2CAGlC,IAAAihB,GAAAjhB,EAAiC,+CAGjC,IAAA8mB,GAAA,SAAAvY,GAAyBV,EAAAiZ,EAAAvY,EAIxB,SAAAuY,GAAYC,GAAA,GAAAA,QAAA,GAAuB,CAAvBA,EAAA,KAEXxY,EAAAxN,KAAAgF,KAAM,KAENA,MAAKihB,UAAYD,EAIXD,EAAA7e,UAAAuN,MAAP,WAEC,MAAO,IAAIsR,GAAW/gB,KAAKihB,WAIrBF,GAAA7e,UAAA+Z,YAAP,SAAmBC,EAAuBC,GAEzC,MAAOnc,MAAKihB,UAGNF,GAAA7e,UAAA8a,gBAAP,SAAuBV,GAEtB,MAAOtB,GAAAve,QAAoB4gB,UAE7B,OAAA0D,IA3ByB7F,EAAAze,QA6BzBuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MlB0gEAzI,GAAQ0B,QkB1gEOskB,IlB4gEZ3B,2CAA2C9X,UAAU+X,+CAA+C,iDAAiDphB,6BAA6B,SAAShE,EAAQkB,EAAOJ,GAC7M,YmBhjEA,IAAAmmB,GAAAjnB,EAAkD,mDAA1Cc,GAAAqgB,uBAAA8F,EAAAzkB,OACR,IAAA0kB,GAAAlnB,EAA4C,2CAApCc,GAAA2kB,eAAAyB,EAAA1kB,OACR,IAAAye,GAAAjhB,EAA+C,+CAAvCc,GAAAulB,mBAAApF,EAAAze,OACR,IAAA2kB,GAAAnnB,EAAyC,uCAAjCc,GAAA2lB,WAAAU,EAAA3kB,OACR,IAAA4kB,GAAApnB,EAAyC,uCAAjCc,GAAAgmB,WAAAM,EAAA5kB,UnBwjELse,mDAAmD,mDAAmDyE,2CAA2C,2CAA2CH,+CAA+C,+CAA+CoB,uCAAuC,uCAAuCK,uCAAuC,yCAAyCQ,iDAAiD,SAASrnB,EAAQkB,EAAOJ,GACpgB,YoB7jEA,IAAAslB,GAAApmB,EAAiC,6CAIjC,IAAAsnB,GAAA,WAMC,QAAAA,GAAYC,GAAA,GAAAA,QAAA,GAAiC,CAAjCA,EAAA,KAHLxhB,KAAAyhB,aAAuB,IAK7BzhB,MAAKwhB,aAAeA,EAGdD,EAAArf,UAAAwf,cAAP,WAEC,GAAI1hB,KAAK2hB,eACR3hB,KAAK2hB,eAAeC,4BAGtB5f,QAAAC,eAAWsf,EAAArf,UAAA,gBpBqjEJC,IoBrjEP,WAEC,MAAOnC,MAAK2hB,gBpBsjENpe,IoBnjEP,SAAwBqT,GAEvB,GAAI5W,KAAK2hB,gBAAkB/K,EAC1B,MAED,IAAI5W,KAAK2hB,gBAAkB3hB,KAAKyhB,aAC/BzhB,KAAK2hB,eAAeE,aAAe,IAEpC7hB,MAAK2hB,eAAiB/K,CAEtB,IAAI5W,KAAK2hB,gBAAkB3hB,KAAKyhB,aAC/BzhB,KAAK2hB,eAAeE,aAAe7hB,IAEpCA,MAAK0hB,iBpBgjECrf,WAAY,KACZC,aAAc,MoB9iErBN,QAAAC,eAAWsf,EAAArf,UAAA,cpBijEJC,IoBjjEP,WAEC,MAAOnC,MAAKyhB,cpBkjENle,IoB/iEP,SAAsBqT,GAErB,GAAI5W,KAAKyhB,cAAgB7K,EACxB,MAED5W,MAAKyhB,aAAe7K,CAEpB,IAAI5W,KAAK2hB,eAAgB,CACxB,GAAI3hB,KAAKyhB,aACRzhB,KAAK2hB,eAAeE,aAAe7hB,SAEnCA,MAAK2hB,eAAeE,aAAe,OpB+iE/Bxf,WAAY,KACZC,aAAc,MoB5iEdif,GAAArf,UAAA4f,OAAP,SAAcC,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,KAAM,IAAI1B,GAAA5jB,QAGJ8kB,GAAArf,UAAA8f,iBAAP,WAEC,GAAIhiB,KAAKiiB,mBAAqBjiB,KAAKyhB,aAAc,CAChDzhB,KAAKiiB,kBAAoB,KACzBjiB,MAAK0hB,iBAGR,OAAAH,KAEAvf,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MpB6iEAzI,GAAQ0B,QoB7iEO8kB,IpB+iEZf,6CAA6ClZ,YAAY4a,wDAAwD,SAASjoB,EAAQkB,EAAOJ,GAC5I,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IqBhoEnF,IAAAga,GAAAloB,EAA0B,kCAE1B,IAAAmoB,GAAAnoB,EAA6B,gDAQ7B,IAAAooB,GAAA,SAAA7Z,GAAoCV,EAAAua,EAAA7Z,EA6InC,SAAA6Z,GAAYb,EAAmCc,EAAqBC,EAAuBC,EAA2BC,EAA0BC,EAAkBC,GAAtJ,GAAAnB,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAc,QAAA,GAAmB,CAAnBA,EAAA,EAAqB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAyB,CAAzBA,GAAuB,GAAI,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,GAA0B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAC,QAAA,GAA4B,CAA5BA,EAAA,MAEjKna,EAAAxN,KAAAgF,KAAMwhB,EA7IAxhB,MAAA4iB,kBAA2B,CAC1B5iB,MAAA6iB,mBAA4B,EAE5B7iB,MAAA8iB,UAAmB,CACnB9iB,MAAA+iB,WAAoB,EACpB/iB,MAAAgjB,eAAwB,EACxBhjB,MAAAijB,cAAuB,EACvBjjB,MAAAkjB,OAAgB,CAChBljB,MAAAmjB,eAAwB,CACxBnjB,MAAAojB,iBAA0B,CAC1BpjB,MAAAqjB,cAAwB,KAEzBrjB,MAAAsjB,IAAc,KAmIpBtjB,MAAKsiB,SAAWA,CAChBtiB,MAAKuiB,UAAYA,CACjBviB,MAAKwiB,aAAeA,CACpBxiB,MAAKyiB,aAAeA,CACpBziB,MAAK0iB,MAAQA,CACb1iB,MAAK2iB,aAAeA,CAGpB3iB,MAAK4iB,kBAAoB5iB,KAAK8iB,SAC9B9iB,MAAK6iB,mBAAqB7iB,KAAK+iB,WAlIhC/gB,OAAAC,eAAWogB,EAAAngB,UAAA,SrBmpEJC,IqBnpEP,WAEC,MAAOnC,MAAKkjB,QrBopEN3f,IqBjpEP,SAAiBqT,GAEhBA,EAAOA,EAAM,EAAI,EAAIA,CAErB,IAAI5W,KAAKkjB,QAAUtM,EAClB,MAED5W,MAAKkjB,OAAStM,CAEd5W,MAAK0hB,iBrB+oECrf,WAAY,KACZC,aAAc,MqB1oErBN,QAAAC,eAAWogB,EAAAngB,UAAA,YrBgpEJC,IqBhpEP,WAEC,MAAOnC,MAAK8iB,WrBipENvf,IqB9oEP,SAAoBqT,GAEnB,GAAI5W,KAAK8iB,WAAalM,EACrB,MAED5W,MAAK8iB,UAAYlM,CAEjB5W,MAAK0hB,iBrB6oECrf,WAAY,KACZC,aAAc,MqBxoErBN,QAAAC,eAAWogB,EAAAngB,UAAA,arB8oEJC,IqB9oEP,WAEC,MAAOnC,MAAK+iB,YrB+oENxf,IqB5oEP,SAAqBqT,GAEpBA,EAAM8C,KAAK6J,IAAIvjB,KAAKgjB,cAAetJ,KAAK8J,IAAIxjB,KAAKijB,cAAerM,GAEhE,IAAI5W,KAAK+iB,YAAcnM,EACtB,MAED5W,MAAK+iB,WAAanM,CAElB5W,MAAK0hB,iBrB0oECrf,WAAY,KACZC,aAAc,MqBnoErBN,QAAAC,eAAWogB,EAAAngB,UAAA,gBrB2oEJC,IqB3oEP,WAEC,MAAOnC,MAAKgjB,erB4oENzf,IqBzoEP,SAAwBqT,GAEvB,GAAI5W,KAAKgjB,eAAiBpM,EACzB,MAED5W,MAAKgjB,cAAgBpM,CAErB5W,MAAKuiB,UAAY7I,KAAK6J,IAAIvjB,KAAKgjB,cAAetJ,KAAK8J,IAAIxjB,KAAKijB,cAAejjB,KAAK+iB,crBwoE1E1gB,WAAY,KACZC,aAAc,MqBjoErBN,QAAAC,eAAWogB,EAAAngB,UAAA,gBrByoEJC,IqBzoEP,WAEC,MAAOnC,MAAKijB,erB0oEN1f,IqBvoEP,SAAwBqT,GAEvB,GAAI5W,KAAKijB,eAAiBrM,EACzB,MAED5W,MAAKijB,cAAgBrM,CAErB5W,MAAKuiB,UAAY7I,KAAK6J,IAAIvjB,KAAKgjB,cAAetJ,KAAK8J,IAAIxjB,KAAKijB,cAAejjB,KAAK+iB,crBsoE1E1gB,WAAY,KACZC,aAAc,MqBhoErBN,QAAAC,eAAWogB,EAAAngB,UAAA,gBrBsoEJC,IqBtoEP,WAEC,MAAOnC,MAAKqjB,erBuoEN9f,IqBpoEP,SAAwBqT,GAEvB,GAAI5W,KAAKqjB,eAAiBzM,EACzB,MAED5W,MAAKqjB,cAAgBzM,CAErB5W,MAAK0hB,iBrBmoECrf,WAAY,KACZC,aAAc,MqBnmEd+f,GAAAngB,UAAA4f,OAAP,SAAcC,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,GAAI/hB,KAAK+iB,YAAc/iB,KAAK6iB,oBAAsB7iB,KAAK8iB,WAAa9iB,KAAK4iB,kBAAmB,CAE3F5iB,KAAKiiB,kBAAoB,IAEzB,IAAIjiB,KAAKqjB,cAAe,CACvB,GAAIrjB,KAAK8iB,UAAY,EAAG,CACvB9iB,KAAK4iB,mBAAqB5iB,KAAK8iB,UAAU,IAAM,IAAM9iB,KAAK8iB,SAC1D9iB,MAAK8iB,UAAY9iB,KAAK8iB,UAAU,IAAM,QAChC,CACN9iB,KAAK4iB,mBAAqB5iB,KAAK8iB,UAAU,IAAM9iB,KAAK8iB,SACpD9iB,MAAK8iB,UAAY9iB,KAAK8iB,UAAU,IAGjC,MAAO9iB,KAAK8iB,UAAY9iB,KAAK4iB,mBAAqB,IACjD5iB,KAAK4iB,mBAAqB,GAE3B,OAAO5iB,KAAK8iB,UAAY9iB,KAAK4iB,kBAAoB,IAChD5iB,KAAK4iB,mBAAqB,IAG5B,GAAIb,EAAa,CAChB/hB,KAAK6iB,qBAAuB7iB,KAAK+iB,WAAa/iB,KAAK6iB,qBAAqB7iB,KAAK0iB,MAAQ,EACrF1iB,MAAK4iB,oBAAsB5iB,KAAK8iB,UAAY9iB,KAAK4iB,oBAAoB5iB,KAAK0iB,MAAQ,OAC5E,CACN1iB,KAAK6iB,mBAAqB7iB,KAAK+iB,UAC/B/iB,MAAK4iB,kBAAoB5iB,KAAK8iB,UAI/B,GAAKpJ,KAAKoF,IAAI9e,KAAKuiB,UAAYviB,KAAK6iB,oBAAsB,KAAUnJ,KAAKoF,IAAI9e,KAAK8iB,UAAY9iB,KAAK4iB,mBAAqB,IAAO,CAC9H5iB,KAAK6iB,mBAAqB7iB,KAAK+iB,UAC/B/iB,MAAK4iB,kBAAoB5iB,KAAK8iB,WAIhC9iB,KAAKwhB,aAAaiC,UAAYzjB,KAAK6iB,kBACnC7iB,MAAKwhB,aAAakC,UAAY1jB,KAAK4iB,iBAEnC,IAAI5iB,KAAKmjB,eAAgB,CACxB,GAAInjB,KAAKsjB,IAAK,CACbtjB,KAAKwhB,aAAalQ,UAAU6G,YAAYnY,KAAKmjB,oBACvC,CACNnjB,KAAKwhB,aAAa3e,GAAK7C,KAAKmjB,eAAezJ,KAAKiK,IAAI3jB,KAAK8iB,UAAUX,EAAA1lB,QAAWmnB,mBAC9E5jB,MAAKwhB,aAAa9J,GAAK1X,KAAKmjB,eAAezJ,KAAKmK,IAAI7jB,KAAK8iB,UAAUX,EAAA1lB,QAAWmnB,oBAE/E5jB,KAAKmjB,eAAiB,EAGvB,GAAInjB,KAAKojB,iBAAkB,CAC1BpjB,KAAKwhB,aAAalQ,UAAUoH,UAAU1Y,KAAKojB,iBAC3CpjB,MAAKojB,iBAAmB,GAKnBf,GAAAngB,UAAA4hB,cAAP,SAAqBlN,GAEpB,GAAIA,GAAO,EACV,MAED5W,MAAKmjB,gBAAkBvM,CAEvB5W,MAAK0hB,gBAGCW,GAAAngB,UAAA6hB,gBAAP,SAAuBnN,GAEtB,GAAIA,GAAO,EACV,MAED5W,MAAKojB,kBAAoBxM,CAEzB5W,MAAK0hB,gBAGP,OAAAW,IArPoCD,EAAA3lB,QAuPpCuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MrBimEAzI,GAAQ0B,QqBjmEO4lB,IrBmmEZ2B,kCAAkC1c,UAAUga,gDAAgD,kDAAkD2C,mDAAmD,SAAShqB,EAAQkB,EAAOJ,GAC5N,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IsBx2EnF,IAAA+b,GAAAjqB,EAA8B,iDAQ9B,IAAAkqB,GAAA,SAAA3b,GAA+BV,EAAAqc,EAAA3b,EAE9B,SAAA2b,GAAY3C,EAAmC4C,EAAmC7B,EAAuBnK,GAA7F,GAAAoJ,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAA4C,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAA7B,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAnK,QAAA,GAAqB,CAArBA,EAAA,IAExG5P,EAAAxN,KAAAgF,KAAMwhB,EAAc4C,EAAc,EAAG7B,EAAWnK,GAG1C+L,EAAAjiB,UAAA4f,OAAP,SAAcC,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,IAAK/hB,KAAKokB,aACT,MAEDpkB,MAAKsiB,SAAWtiB,KAAKqkB,eAAeX,UAAY,GAChDlb,GAAAtG,UAAM4f,OAAM9mB,KAAAgF,MAEd,OAAAmkB,IAf+BD,EAAAznB,QAiB/BuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MtB22EAzI,GAAQ0B,QsB32EO0nB,ItB62EZG,iDAAiD,mDAAmDA,kDAAkD,SAASrqB,EAAQkB,EAAOJ,GACjL,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IuB54EnF,IAAAga,GAAAloB,EAA0B,kCAC1B,IAAA+b,GAAA/b,EAAyB,gCAGzB,IAAAsqB,GAAAtqB,EAA+B,kDAO/B,IAAAuqB,GAAA,SAAAhc,GAA8BV,EAAA0c,EAAAhc,EA6N7B,SAAAgc,GAAYhD,EAAmC4C,EAAmC9B,EAAqBC,EAAuBnK,EAAwBoK,EAA2BC,EAA0BgC,EAA2BC,EAA2BhC,EAAkBiC,EAAoBhC,GAA3R,GAAAnB,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAA4C,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAA9B,QAAA,GAAmB,CAAnBA,EAAA,EAAqB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAnK,QAAA,GAAsB,CAAtBA,EAAA,IAAwB,GAAAoK,QAAA,GAAyB,CAAzBA,GAAuB,GAAI,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,GAA0B,GAAAgC,QAAA,GAAyB,CAAzBA,EAAA,KAA2B,GAAAC,QAAA,GAAyB,CAAzBA,EAAA,KAA2B,GAAAhC,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAiC,QAAA,GAAkB,CAAlBA,EAAA,EAAoB,GAAAhC,QAAA,GAA4B,CAA5BA,EAAA,MAEtSna,EAAAxN,KAAAgF,KAAMwhB,EAAc4C,EA7NdpkB,MAAA4iB,kBAA2B,CAC3B5iB,MAAA6iB,mBAA4B,EAE3B7iB,MAAA8iB,UAAmB,CACnB9iB,MAAA+iB,WAAoB,EACpB/iB,MAAA4kB,UAAmB,GACnB5kB,MAAA6kB,cAAuBC,QACvB9kB,MAAA+kB,aAAsBD,QACtB9kB,MAAAgjB,eAAwB,EACxBhjB,MAAAijB,cAAuB,EACvBjjB,MAAAkjB,OAAgB,CAChBljB,MAAAglB,SAAkB,CAClBhlB,MAAAqjB,cAAwB,KACxBrjB,MAAAilB,QAAmB,GAAIjP,GAAAvZ,OAkN9BuD,MAAKoY,SAAWA,CAChBpY,MAAKsiB,SAAWA,CAChBtiB,MAAKuiB,UAAYA,CACjBviB,MAAKykB,YAAgBA,GAAe,KAAQA,GAAeK,QAC3D9kB,MAAK0kB,YAAgBA,GAAe,KAAQA,EAAcI,QAC1D9kB,MAAKwiB,aAAeA,CACpBxiB,MAAKyiB,aAAeA,CACpBziB,MAAK0iB,MAAQA,CACb1iB,MAAK2kB,QAAUA,CACf3kB,MAAK2iB,aAAeA,CAGpB3iB,MAAK4iB,kBAAoB5iB,KAAK8iB,SAC9B9iB,MAAK6iB,mBAAqB7iB,KAAK+iB,WArNhC/gB,OAAAC,eAAWuiB,EAAAtiB,UAAA,SvBy6EJC,IuBz6EP,WAEC,MAAOnC,MAAKkjB,QvB06EN3f,IuBv6EP,SAAiBqT,GAEhBA,EAAOA,EAAM,EAAI,EAAIA,CAErB,IAAI5W,KAAKkjB,QAAUtM,EAClB,MAED5W,MAAKkjB,OAAStM,CAEd5W,MAAK0hB,iBvBq6ECrf,WAAY,KACZC,aAAc,MuBh6ErBN,QAAAC,eAAWuiB,EAAAtiB,UAAA,YvBs6EJC,IuBt6EP,WAEC,MAAOnC,MAAK8iB,WvBu6ENvf,IuBp6EP,SAAoBqT,GAEnBA,EAAM8C,KAAK6J,IAAIvjB,KAAK6kB,aAAcnL,KAAK8J,IAAIxjB,KAAK+kB,aAAcnO,GAE9D,IAAI5W,KAAK8iB,WAAalM,EACrB,MAED5W,MAAK8iB,UAAYlM,CAEjB5W,MAAK0hB,iBvBk6ECrf,WAAY,KACZC,aAAc,MuB75ErBN,QAAAC,eAAWuiB,EAAAtiB,UAAA,avBm6EJC,IuBn6EP,WAEC,MAAOnC,MAAK+iB,YvBo6ENxf,IuBj6EP,SAAqBqT,GAEpBA,EAAM8C,KAAK6J,IAAIvjB,KAAKgjB,cAAetJ,KAAK8J,IAAIxjB,KAAKijB,cAAerM,GAEhE,IAAI5W,KAAK+iB,YAAcnM,EACtB,MAED5W,MAAK+iB,WAAanM,CAElB5W,MAAK0hB,iBvB+5ECrf,WAAY,KACZC,aAAc,MuB15ErBN,QAAAC,eAAWuiB,EAAAtiB,UAAA,YvBg6EJC,IuBh6EP,WAEC,MAAOnC,MAAK4kB,WvBi6ENrhB,IuB95EP,SAAoBqT,GAEnB,GAAI5W,KAAK4kB,WAAahO,EACrB,MAED5W,MAAK4kB,UAAYhO,CAEjB5W,MAAK0hB,iBvB65ECrf,WAAY,KACZC,aAAc,MuBt5ErBN,QAAAC,eAAWuiB,EAAAtiB,UAAA,evB85EJC,IuB95EP,WAEC,MAAOnC,MAAK6kB,cvB+5ENthB,IuB55EP,SAAuBqT,GAEtB,GAAI5W,KAAK6kB,cAAgBjO,EACxB,MAED5W,MAAK6kB,aAAejO,CAEpB5W,MAAKsiB,SAAW5I,KAAK6J,IAAIvjB,KAAK6kB,aAAcnL,KAAK8J,IAAIxjB,KAAK+kB,aAAc/kB,KAAK8iB,avB25EvEzgB,WAAY,KACZC,aAAc,MuBp5ErBN,QAAAC,eAAWuiB,EAAAtiB,UAAA,evB45EJC,IuB55EP,WAEC,MAAOnC,MAAK+kB,cvB65ENxhB,IuB15EP,SAAuBqT,GAEtB,GAAI5W,KAAK+kB,cAAgBnO,EACxB,MAED5W,MAAK+kB,aAAenO,CAEpB5W,MAAKsiB,SAAW5I,KAAK6J,IAAIvjB,KAAK6kB,aAAcnL,KAAK8J,IAAIxjB,KAAK+kB,aAAc/kB,KAAK8iB,avBy5EvEzgB,WAAY,KACZC,aAAc,MuBl5ErBN,QAAAC,eAAWuiB,EAAAtiB,UAAA,gBvB05EJC,IuB15EP,WAEC,MAAOnC,MAAKgjB,evB25ENzf,IuBx5EP,SAAwBqT,GAEvB,GAAI5W,KAAKgjB,eAAiBpM,EACzB,MAED5W,MAAKgjB,cAAgBpM,CAErB5W,MAAKuiB,UAAY7I,KAAK6J,IAAIvjB,KAAKgjB,cAAetJ,KAAK8J,IAAIxjB,KAAKijB,cAAejjB,KAAK+iB,cvBu5E1E1gB,WAAY,KACZC,aAAc,MuBh5ErBN,QAAAC,eAAWuiB,EAAAtiB,UAAA,gBvBw5EJC,IuBx5EP,WAEC,MAAOnC,MAAKijB,evBy5EN1f,IuBt5EP,SAAwBqT,GAEvB,GAAI5W,KAAKijB,eAAiBrM,EACzB,MAED5W,MAAKijB,cAAgBrM,CAErB5W,MAAKuiB,UAAY7I,KAAK6J,IAAIvjB,KAAKgjB,cAAetJ,KAAK8J,IAAIxjB,KAAKijB,cAAejjB,KAAK+iB,cvBq5E1E1gB,WAAY,KACZC,aAAc,MuB94ErBN,QAAAC,eAAWuiB,EAAAtiB,UAAA,WvBs5EJC,IuBt5EP,WAEC,MAAOnC,MAAKglB,UvBu5ENzhB,IuBp5EP,SAAmBqT,GAElB,GAAI5W,KAAKglB,UAAYpO,EACpB,MAED5W,MAAKglB,SAAWpO,CAEhB5W,MAAK0hB,iBvBm5ECrf,WAAY,KACZC,aAAc,MuB94ErBN,QAAAC,eAAWuiB,EAAAtiB,UAAA,gBvBo5EJC,IuBp5EP,WAEC,MAAOnC,MAAKqjB,evBq5EN9f,IuBl5EP,SAAwBqT,GAEvB,GAAI5W,KAAKqjB,eAAiBzM,EACzB,MAED5W,MAAKqjB,cAAgBzM,CAErB5W,MAAK0hB,iBvBi5ECrf,WAAY,KACZC,aAAc,MuB72EdkiB,GAAAtiB,UAAA4f,OAAP,SAAcC,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,GAAI/hB,KAAK+iB,YAAc/iB,KAAK6iB,oBAAsB7iB,KAAK8iB,WAAa9iB,KAAK4iB,kBAAmB,CAE3F5iB,KAAKiiB,kBAAoB,IAEzB,IAAIjiB,KAAKqjB,cAAe,CACvB,GAAIrjB,KAAK8iB,UAAY,EAAG,CACvB9iB,KAAK4iB,mBAAqB5iB,KAAK8iB,UAAU,IAAM,IAAM9iB,KAAK8iB,SAC1D9iB,MAAK8iB,UAAY9iB,KAAK8iB,UAAU,IAAM,QAChC,CACN9iB,KAAK4iB,mBAAqB5iB,KAAK8iB,UAAU,IAAM9iB,KAAK8iB,SACpD9iB,MAAK8iB,UAAY9iB,KAAK8iB,UAAU,IAGjC,MAAO9iB,KAAK8iB,UAAY9iB,KAAK4iB,mBAAqB,IACjD5iB,KAAK4iB,mBAAqB,GAE3B,OAAO5iB,KAAK8iB,UAAY9iB,KAAK4iB,kBAAoB,IAChD5iB,KAAK4iB,mBAAqB,IAG5B,GAAIb,EAAa,CAChB/hB,KAAK6iB,qBAAuB7iB,KAAK+iB,WAAa/iB,KAAK6iB,qBAAqB7iB,KAAK0iB,MAAQ,EACrF1iB,MAAK4iB,oBAAsB5iB,KAAK8iB,UAAY9iB,KAAK4iB,oBAAoB5iB,KAAK0iB,MAAQ,OAC5E,CACN1iB,KAAK4iB,kBAAoB5iB,KAAK8iB,SAC9B9iB,MAAK6iB,mBAAqB7iB,KAAK+iB,WAIhC,GAAKrJ,KAAKoF,IAAI9e,KAAKuiB,UAAYviB,KAAK6iB,oBAAsB,KAAUnJ,KAAKoF,IAAI9e,KAAK8iB,UAAY9iB,KAAK4iB,mBAAqB,IAAO,CAC9H5iB,KAAK6iB,mBAAqB7iB,KAAK+iB,UAC/B/iB,MAAK4iB,kBAAoB5iB,KAAK8iB,WAIhC,GAAIoC,GAAgBllB,KAAiB,aAAGA,KAAKokB,aAAa9S,UAAU3P,SAAY3B,KAAmB,eAAGA,KAAKmlB,eAAiBnlB,KAAKolB,QACjIplB,MAAKwhB,aAAa3e,EAAIqiB,EAAIriB,EAAI7C,KAAKoY,SAASsB,KAAKiK,IAAI3jB,KAAK4iB,kBAAkBT,EAAA1lB,QAAWmnB,oBAAoBlK,KAAKmK,IAAI7jB,KAAK6iB,mBAAmBV,EAAA1lB,QAAWmnB,mBACvJ5jB,MAAKwhB,aAAaze,EAAImiB,EAAIniB,EAAI/C,KAAKoY,SAASsB,KAAKiK,IAAI3jB,KAAK6iB,mBAAmBV,EAAA1lB,QAAWmnB,oBAAoB5jB,KAAK2kB,OACjH3kB,MAAKwhB,aAAa9J,EAAIwN,EAAIxN,EAAI1X,KAAKoY,SAASsB,KAAKmK,IAAI7jB,KAAK4iB,kBAAkBT,EAAA1lB,QAAWmnB,oBAAoBlK,KAAKmK,IAAI7jB,KAAK6iB,mBAAmBV,EAAA1lB,QAAWmnB,mBAEvJ5jB,MAAKilB,QAAQpiB,GAAK6W,KAAKiK,IAAI3jB,KAAK4iB,kBAAkBT,EAAA1lB,QAAWmnB,oBAAoBlK,KAAKiK,IAAI3jB,KAAK6iB,mBAAmBV,EAAA1lB,QAAWmnB,mBAC7H5jB,MAAKilB,QAAQliB,EAAI2W,KAAKmK,IAAI7jB,KAAK6iB,mBAAmBV,EAAA1lB,QAAWmnB,mBAC7D5jB,MAAKilB,QAAQvN,GAAKgC,KAAKmK,IAAI7jB,KAAK4iB,kBAAkBT,EAAA1lB,QAAWmnB,oBAAoBlK,KAAKiK,IAAI3jB,KAAK6iB,mBAAmBV,EAAA1lB,QAAWmnB,mBAE7H,IAAI5jB,KAAK2hB,eAAgB,CACxB,GAAI3hB,KAAKqlB,iBACRrlB,KAAK2hB,eAAe2D,OAAOtlB,KAAKqlB,iBAAkBrlB,KAAKilB,aACnD,IAAIjlB,KAAKqkB,eACbrkB,KAAK2hB,eAAe2D,OAAOtlB,KAAKqkB,eAAexkB,MAAOG,KAAKqkB,eAAekB,cAAgBvlB,KAAKqkB,eAAe/S,UAAU3P,SAAU3B,KAAKilB,UAG3I,OAAAT,IAjT8BD,EAAA9nB,QAmT9BuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MvBo3EAzI,GAAQ0B,QuBp3EO+nB,IvBs3EZR,kCAAkC1c,UAAUkT,gCAAgClT,UAAUke,kDAAkD,oDAAoDA,mDAAmD,SAASvrB,EAAQkB,EAAOJ,GAC1Q,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IwBzrFnF,IAAA6N,GAAA/b,EAAyB,gCAGzB,IAAAmoB,GAAAnoB,EAA6B,gDAC7B,IAAAwF,GAAAxF,EAAgC,+CAEhC,IAAAwrB,GAAA,SAAAjd,GAA+BV,EAAA2d,EAAAjd,EAQ9B,SAAAid,GAAYjE,EAAmC4C,GARhD,GAAArkB,GAAAC,IAQa,IAAAwhB,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAA4C,QAAA,GAAiC,CAAjCA,EAAA,KAE9C5b,EAAAxN,KAAAgF,KAAMwhB,EANAxhB,MAAAolB,SAAoB,GAAIpP,GAAAvZ,QAAS,EAAK,EAAK,EAQjDuD,MAAK0lB,+BAAiC,SAAC7kB,GAA6B,MAAAd,GAAK4lB,sBAAsB9kB,GAE/F,IAAIujB,EACHpkB,KAAKokB,aAAeA,MAEpBpkB,MAAKmlB,eAAiB,GAAInP,GAAAvZ,QAG5BuF,OAAAC,eAAWwjB,EAAAvjB,UAAA,kBxBmrFJC,IwBnrFP,WAEC,MAAOnC,MAAKqlB,kBxBorFN9hB,IwBjrFP,SAA0BqT,GAEzB,GAAI5W,KAAKqkB,eAAgB,CACxBrkB,KAAKqkB,eAAe3gB,oBAAoBjE,EAAAhD,QAAmBmpB,uBAAwB5lB,KAAK0lB,+BACxF1lB,MAAKqkB,eAAiB,KAGvBrkB,KAAKqlB,iBAAmBzO,CACxB5W,MAAK0hB,iBxBirFCrf,WAAY,KACZC,aAAc,MwB/qFrBN,QAAAC,eAAWwjB,EAAAvjB,UAAA,gBxBkrFJC,IwBlrFP,WAEC,MAAOnC,MAAKqkB,gBxBmrFN9gB,IwBhrFP,SAAwBqT,GAEvB,GAAI5W,KAAKqlB,iBACRrlB,KAAKqlB,iBAAmB,IAEzB,IAAIrlB,KAAKqkB,gBAAkBzN,EAC1B,MAED,IAAI5W,KAAKqkB,eACRrkB,KAAKqkB,eAAe3gB,oBAAoBjE,EAAAhD,QAAmBmpB,uBAAwB5lB,KAAK0lB,+BAEzF1lB,MAAKqkB,eAAiBzN,CAEtB,IAAI5W,KAAKqkB,eACRrkB,KAAKqkB,eAAexgB,iBAAiBpE,EAAAhD,QAAmBmpB,uBAAwB5lB,KAAK0lB,+BAEtF1lB,MAAK0hB,iBxB4qFCrf,WAAY,KACZC,aAAc,MwBzqFdmjB,GAAAvjB,UAAA4f,OAAP,SAAcC,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,GAAI/hB,KAAK2hB,eAAgB,CACxB,GAAI3hB,KAAKqlB,iBACRrlB,KAAK2hB,eAAe2D,OAAOtlB,KAAKqlB,sBAC5B,IAAIrlB,KAAKqkB,eACbrkB,KAAK2hB,eAAe2D,OAAOtlB,KAAKqkB,eAAexkB,MAAOG,KAAKqkB,eAAekB,cAAgBvlB,KAAKqkB,eAAe/S,UAAU3P,WAInH8jB,GAAAvjB,UAAAyjB,sBAAR,SAA8B9kB,GAE7Bb,KAAK0hB,gBAEP,OAAA+D,IA3E+BrD,EAAA3lB,QA6E/BuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MxB2qFAzI,GAAQ0B,QwB3qFOgpB,IxB6qFZjL,gCAAgClT,UAAUga,gDAAgD,gDAAgDuE,+CAA+C,iDAAiDC,mDAAmD,SAAS7rB,EAAQkB,EAAOJ,GACxT,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IyBrwFnF,IAAA6N,GAAA/b,EAAyB,gCAGzB,IAAAsqB,GAAAtqB,EAA+B,kDAO/B,IAAA8rB,GAAA,SAAAvd,GAA+BV,EAAAie,EAAAvd,EA+B9B,SAAAud,GAAYvE,EAAmC4C,EAAmC4B,EAAsBC,EAAkBC,GAA9G,GAAA1E,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAA4C,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAA4B,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,GAAkB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,EAEzH1d,EAAAxN,KAAAgF,KAAMwhB,EAAc4C,EAJdpkB,MAAAmmB,eAA0B,GAAInQ,GAAAvZ,QAAS,EAAG,KAAM,IAMtDuD,MAAKgmB,UAAYA,CACjBhmB,MAAKkmB,QAAUA,CACflmB,MAAKimB,KAAOA,CAEZjmB,MAAKomB,UAAY,GAAIpQ,GAAAvZ,OACrBuD,MAAKqmB,IAAM,GAAIrQ,GAAAvZ,OACfuD,MAAKsmB,SAAW,GAAItQ,GAAAvZ,OACpBuD,MAAKumB,OAAS,GAAIvQ,GAAAvZ,OAClBuD,MAAKwmB,cAAgB,GAAIxQ,GAAAvZ,OACzBuD,MAAKymB,iBAAmB,GAAIzQ,GAAAvZ,QAItBspB,EAAA7jB,UAAA4f,OAAP,SAAcC,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,GAAI2E,EAEJ,KAAK1mB,KAAKqkB,iBAAmBrkB,KAAK2hB,eACjC,MAED3hB,MAAKiiB,kBAAoB,IAEzByE,GAAO1mB,KAAKqkB,eAAe/S,UAAUuC,SAAS8S,qBAAqB3mB,KAAKmmB,eACxEnmB,MAAKymB,iBAAiB5jB,EAAI7C,KAAKqkB,eAAexhB,EAAI6jB,EAAK7jB,CACvD7C,MAAKymB,iBAAiB1jB,EAAI/C,KAAKqkB,eAAethB,EAAI2jB,EAAK3jB,CACvD/C,MAAKymB,iBAAiB/O,EAAI1X,KAAKqkB,eAAe3M,EAAIgP,EAAKhP,CAEvD1X,MAAKsmB,SAAWtmB,KAAK2hB,eAAerQ,UAAU3P,SAASilB,IAAI5mB,KAAKymB,iBAChEzmB,MAAKsmB,SAASO,SAAS7mB,KAAKgmB,UAE5BhmB,MAAKqmB,IAAIS,SAAS9mB,KAAKomB,UACvBpmB,MAAKqmB,IAAIQ,QAAQ7mB,KAAKkmB,QAEtBlmB,MAAKumB,OAAO1jB,EAAI7C,KAAKsmB,SAASzjB,EAAI7C,KAAKqmB,IAAIxjB,CAC3C7C,MAAKumB,OAAOxjB,EAAI/C,KAAKsmB,SAASvjB,EAAI/C,KAAKqmB,IAAItjB,CAC3C/C,MAAKumB,OAAO7O,EAAI1X,KAAKsmB,SAAS5O,EAAI1X,KAAKqmB,IAAI3O,CAE3C1X,MAAKwmB,cAAcM,SAAS9mB,KAAKumB,OACjCvmB,MAAKwmB,cAAcK,QAAQ,EAAE7mB,KAAKimB,KAElCjmB,MAAKomB,UAAUW,YAAY/mB,KAAKwmB,cAEhC,IAAI7kB,GAAoB3B,KAAK2hB,eAAerQ,UAAU3P,SAASilB,IAAI5mB,KAAKomB,UACxEpmB,MAAK2hB,eAAerQ,UAAUwH,OAAOnX,EAASkB,EAAGlB,EAASoB,EAAGpB,EAAS+V,EAEtElP,GAAAtG,UAAM4f,OAAM9mB,KAAAgF,MAEd,OAAA+lB,IAlF+BxB,EAAA9nB,QAoF/BuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MzBkuFAzI,GAAQ0B,QyBluFOspB,IzBouFZvL,gCAAgClT,UAAUke,kDAAkD,oDAAoDtnB,kCAAkC,SAASjE,EAAQkB,EAAOJ,GAC7M,Y0Bn0FA,IAAAqnB,GAAAnoB,EAA4C,gDAApCc,GAAAwmB,eAAAa,EAAA3lB,OACR,IAAAuqB,GAAA/sB,EAAiD,uDAAzCc,GAAAsnB,sBAAA2E,EAAAvqB,OACR,IAAAwqB,GAAAhtB,EAA6C,kDAArCc,GAAAopB,iBAAA8C,EAAAxqB,OACR,IAAAynB,GAAAjqB,EAA6C,iDAArCc,GAAAypB,gBAAAN,EAAAznB,OACR,IAAA8nB,GAAAtqB,EAA6C,kDAArCc,GAAA0qB,iBAAAlB,EAAA9nB,OACR,IAAAyqB,GAAAjtB,EAA6C,kDAArCc,GAAAgrB,iBAAAmB,EAAAzqB,U1B40FL6kB,gDAAgD,gDAAgDY,uDAAuD,uDAAuD+B,kDAAkD,kDAAkDK,iDAAiD,iDAAiDkB,kDAAkD,kDAAkDM,kDAAkD,oDAAoDqB,wCAAwC,SAASltB,EAAQkB,EAAOJ,GACjqB,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,I2Bp1FnF,IAAAif,GAAAntB,EAA0B,iCAI1B,IAAAotB,GAAAptB,EAA6B,2CAE7B,IAAAmnB,GAAAnnB,EAA2B;AAE3B,GAAAqtB,GAAArtB,EAA+B,4CAC/B,IAAAstB,GAAAttB,EAA6B,yCAC7B,IAAAutB,GAAAvtB,EAAoC,qDAIpC,IAAAoQ,GAAApQ,EAA2B,uCAuC3B,IAAAmD,GAAA,SAAAoL,GAAwBV,EAAA1K,EAAAoL,EAkFvB,SAAApL,GAAYqqB,EAAuBC,EAA+BC,GAlFnE,GAAA5nB,GAAAC,IAkFoC,IAAA0nB,QAAA,GAA6B,CAA7BA,EAAA,OAA+B,GAAAC,QAAA,GAAyB,CAAzBA,EAAA,MAEjEnf,EAAAxN,KAAAgF,KAEAA,MAAK4nB,WAAa,IAElB5nB,MAAK6nB,4BAA8B,SAAChnB,GAAuB,MAAAd,GAAK+nB,oBAAoBjnB,GACpFb,MAAK+nB,gCAAkC,SAAClnB,GAAqB,MAAAd,GAAKioB,wBAAwBnnB,GAE1Fb,MAAKynB,SAAWA,CAEhBznB,MAAKioB,mBAGLjoB,MAAKkoB,YAAc9G,EAAA3kB,QAAWmkB,iBA9E/B5e,OAAAC,eAAW7E,EAAA8E,UAAA,Y3B20FJC,I2B30FP,WAEC,MAAOnC,MAAKmoB,W3B40FN9lB,WAAY,KACZC,aAAc,M2Bv0FrBN,QAAAC,eAAW7E,EAAA8E,UAAA,a3B60FJC,I2B70FP,WAEC,MAAO/E,GAAUsL,W3B80FXrG,WAAY,KACZC,aAAc,M2Bz0FrBN,QAAAC,eAAW7E,EAAA8E,UAAA,iB3B+0FJC,I2B/0FP,WAEC,MAAOnC,MAAKooB,gB3Bg1FN/lB,WAAY,KACZC,aAAc,M2B30FrBN,QAAAC,eAAW7E,EAAA8E,UAAA,mB3Bi1FJC,I2Bj1FP,WAEC,MAAOnC,MAAKqoB,kB3Bk1FNhmB,WAAY,KACZC,aAAc,M2B70FrBN,QAAAC,eAAW7E,EAAA8E,UAAA,kB3Bm1FJC,I2Bn1FP,WAEC,MAAOnC,MAAKsoB,iB3Bo1FNjmB,WAAY,KACZC,aAAc,M2B/0FrBN,QAAAC,eAAW7E,EAAA8E,UAAA,Y3Bq1FJC,I2Br1FP,WAEC,MAAOnC,MAAKuoB,W3Bs1FNhlB,I2Bn1FP,SAAoBC,GAEnB,GAAIA,GAASxD,KAAKuoB,UACjB,MAED,IAAIvoB,KAAKuoB,UAAW,CACnBvoB,KAAKuoB,UAAUC,aAAaxoB,KAC5BA,MAAKuoB,UAAU7kB,oBAAoB6jB,EAAA9qB,QAAagsB,mBAAoBzoB,KAAK6nB,6BAI1E7nB,KAAKuoB,UAAY/kB,CAEjB,IAAIxD,KAAKuoB,UAAW,CACnBvoB,KAAKuoB,UAAUG,UAAU1oB,KACzBA,MAAKuoB,UAAU1kB,iBAAiB0jB,EAAA9qB,QAAagsB,mBAAoBzoB,KAAK6nB,+B3Bi1FjExlB,WAAY,KACZC,aAAc,M2B1zFdlF,GAAA8E,UAAAymB,kBAAP,WAECngB,EAAAtG,UAAMymB,kBAAiB3tB,KAAAgF,KAEvBA,MAAK4oB,YAAY1kB,MAAQlE,KAAKooB,eAAelkB,KAC7ClE,MAAK4oB,YAAYzkB,OAASnE,KAAKooB,eAAejkB,OAGxC/G,GAAA8E,UAAAuN,MAAP,WAEC,GAAIA,GAAkB,GAAIrS,GAAU4C,KAAKynB,SACzC,OAAOhY,GAMRzN,QAAAC,eAAW7E,EAAA8E,UAAA,S3B2zFJC,I2B3zFP,WAEC,MAAOnC,MAAK6oB,Q3B4zFNtlB,I2BzzFP,SAAiBC,GAEhB,GAAIxD,KAAK6oB,QAAUrlB,EAClB,MAED,IAAIxD,KAAK6oB,OACR7oB,KAAK6oB,OAAOnlB,oBAAoB2G,EAAA5N,QAAWgP,sBAAuBzL,KAAK+nB,gCAExE/nB,MAAK6oB,OAASrlB,CAEd,IAAIxD,KAAK6oB,OACR7oB,KAAK6oB,OAAOhlB,iBAAiBwG,EAAA5N,QAAWgP,sBAAuBzL,KAAK+nB,gCAErE/nB,MAAKgoB,2B3BszFC3lB,WAAY,KACZC,aAAc,M2B5yFdlF,GAAA8E,UAAA4mB,gBAAP,SAAuBC,EAAmCC,GAEzD,MAAOA,GAAgBC,uBAAuBjpB,KAAMA,KAAKynB,SAAUsB,GAM5D3rB,GAAA8E,UAAA4lB,oBAAR,SAA4BjnB,GAE3Bb,KAAKioB,oBAGC7qB,GAAA8E,UAAAgnB,iBAAP,SAAwBC,GAEvBA,EAAUC,gBAAgBppB,MAGnB5C,GAAA8E,UAAA+lB,kBAAR,WAEC,GAAIld,GAAsB/K,KAAKynB,SAAS4B,aAAa,EAErD,IAAIle,GAAgBJ,GAAqB/K,KAAK6oB,OAAQ7oB,KAAK6oB,OAAO/d,WAAWC,GAAW,QAAU/K,KAAKynB,SAASlmB,MAAOvB,KAAKynB,SAASlmB,MAAMuJ,WAAWC,GAAW,OAASA,EAAQD,WAAW,GAAM,IAEnM,IAAIK,EAAO,CACV,GAAIE,IAAkCrL,KAAK6oB,OAAQ7oB,KAAK6oB,OAAO5d,aAAaF,GAAW,QAAU/K,KAAKynB,SAASlmB,MAAOvB,KAAKynB,SAASlmB,MAAM0J,aAAaF,GAAW,OAASA,EAAQE,aAAa,IAAMuc,EAAA/qB,QAAuB6sB,mBAC7N,IAAIje,EAAQke,UAAW,CACtBvpB,KAAKsoB,gBAAkBjd,EAAQke,UAAUrlB,MAAMiH,EAAMjH,KACrDlE,MAAKqoB,iBAAmBhd,EAAQke,UAAUplB,OAAOgH,EAAMhH,WACjD,CACNnE,KAAKsoB,gBAAkBnd,EAAMqe,KAAKtlB,KAClClE,MAAKqoB,iBAAmBld,EAAMqe,KAAKrlB,OAGpCnE,KAAKooB,eAAiB/c,EAAQoe,WAAa,GAAIrC,GAAA3qB,QAAU,EAAG,EAAGuD,KAAKsoB,gBAAiBtoB,KAAKqoB,sBACpF,CACNroB,KAAKsoB,gBAAkB,CACvBtoB,MAAKqoB,iBAAmB,CACxBroB,MAAKooB,eAAiB,GAAIhB,GAAA3qB,QAAU,EAAG,EAAG,EAAG,GAG9CuD,KAAK0pB,oBAEL1pB,MAAKwL,cAAc,GAAI8b,GAAA7qB,QAAgB6qB,EAAA7qB,QAAgBktB,oBAAqB3pB,OAItE5C,GAAA8E,UAAA0nB,kBAAP,WAEC5pB,KAAKwL,cAAc,GAAI8b,GAAA7qB,QAAgB6qB,EAAA7qB,QAAgBotB,wBAAyB7pB,OAGzE5C,GAAA8E,UAAA8lB,wBAAR,SAAgCnnB,GAAA,GAAAA,QAAA,GAAuB,CAAvBA,EAAA,KAE/Bb,KAAK4pB,mBAEL5pB,MAAKioB,oBA1MQ7qB,GAAAsL,UAAmB,mBA4MlC,OAAAtL,IA9MwBiqB,EAAA5qB,QAgNxBuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M3ByyFAzI,GAAQ0B,Q2BzyFOW,I3B2yFZ0sB,iCAAiCxiB,UAAUmZ,uCAAuC,uCAAuCsJ,2CAA2C,2CAA2CC,4CAA4C,4CAA4Cre,uCAAuC,uCAAuCse,yCAAyC,yCAAyCC,qDAAqD,uDAAuDC,qCAAqC,SAASlwB,EAAQkB,EAAOJ,GACnnB,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,I4BvjGnF,IAAA2N,GAAA7b,EAA0B,gCAC1B,IAAAmwB,GAAAnwB,EAAyB,+BAEzB,IAAAowB,GAAApwB,EAA+B,yCAE/B,IAAAqwB,GAAArwB,EAAmC,oDAEnC,IAAA4R,GAAA5R,EAAoC,iDAEpC,IAAAmnB,GAAAnnB,EAA2B,uCAC3B,IAAAswB,GAAAtwB,EAAoC,oDAEpC,IAAAuF,GAAAvF,EAA4B,wCAG5B,IAAA4C,GAAA,SAAA2L,GAAqBV,EAAAjL,EAAA2L,EAWpB,SAAA3L,GAAY+H,GAXb,GAAA7E,GAAAC,IAWa,IAAA4E,QAAA,GAA6B,CAA7BA,EAAA,KAEX4D,EAAAxN,KAAAgF,KATOA,MAAAwqB,gBAA2B,GAAI1U,GAAArZ,OAC/BuD,MAAAyqB,qBAA+B,IAG/BzqB,MAAA0qB,oBAA8B,IAOrC1qB,MAAK4nB,WAAa,IAElB5nB,MAAK2qB,mCAAqC,SAAC9pB,GAA0B,MAAAd,GAAK6qB,0BAA0B/pB,GAEpGb,MAAK6qB,YAAcjmB,GAAc,GAAI0lB,GAAA7tB,OACrCuD,MAAK6qB,YAAYhnB,iBAAiBwmB,EAAA5tB,QAAgBquB,eAAgB9qB,KAAK2qB,mCAEvE3qB,MAAK+qB,iBAEL,KAAK,GAAIrwB,GAAW,EAAGA,EAAI,IAAKA,EAC/BsF,KAAK+qB,eAAerwB,GAAK,GAAI0vB,GAAA3tB,OAE9BuD,MAAK0X,GAAK,GAGV1X,MAAKkoB,YAAc9G,EAAA3kB,QAAWokB,KAI/B7e,OAAAC,eAAWpF,EAAAqF,UAAA,a5BsiGJC,I4BtiGP,WAEC,MAAOtF,GAAO6L,W5BuiGRrG,WAAY,KACZC,aAAc,M4BriGbzF,GAAAqF,UAAA0oB,0BAAR,SAAkC/pB,GAEjCb,KAAKyqB,qBAAuB,IAC5BzqB,MAAK0qB,oBAAsB,IAC3B1qB,MAAKwL,cAAc3K,GAGpBmB,QAAAC,eAAWpF,EAAAqF,UAAA,iB5BsiGJC,I4BtiGP,WAEC,GAAInC,KAAK0qB,oBACR1qB,KAAKgrB,eAEN,OAAOhrB,MAAK+qB,gB5BsiGN1oB,WAAY,KACZC,aAAc,M4BpiGbzF,GAAAqF,UAAA8oB,cAAR,WAEC,GAAIvwB,GAAUuN,EAAUuU,CAExB,IAAI0O,GAAYC,EAAYC,EAAYC,CACxC,IAAIC,GAAYC,EAAYC,EAAYC,CACxC,IAAIC,GAAYC,EAAYC,EAAYC,CACxC,IAAIC,GAAYC,EAAYC,EAAYC,CACxC,IAAI/jB,EACJ,IAAIgW,GAAmBje,KAAKisB,eAAenY,OAC3C,IAAIoY,EAEJjB,GAAMhN,EAAI,EACViN,GAAMjN,EAAI,EACVkN,GAAMlN,EAAI,EACVmN,GAAMnN,EAAI,GACVoN,GAAMpN,EAAI,EACVqN,GAAMrN,EAAI,EACVsN,GAAMtN,EAAI,EACVuN,GAAMvN,EAAI,GACVwN,GAAMxN,EAAI,EACVyN,GAAMzN,EAAI,EACV0N,GAAM1N,EAAI,GACV2N,GAAM3N,EAAI,GACV4N,GAAM5N,EAAI,EACV6N,GAAM7N,EAAI,EACV8N,GAAM9N,EAAI,GACV+N,GAAM/N,EAAI,GAGVhW,GAAIjI,KAAK+qB,eAAe,EACxBtwB,GAAIoxB,EAAMZ,CACVjjB,GAAI8jB,EAAMZ,CACV3O,GAAIwP,EAAMZ,CACVe,GAAS,EAAExS,KAAKC,KAAKlf,EAAEA,EAAIuN,EAAEA,EAAIuU,EAAEA,EACnCtU,GAAExN,EAAIA,EAAEyxB,CACRjkB,GAAED,EAAIA,EAAEkkB,CACRjkB,GAAEsU,EAAIA,EAAE2P,CACRjkB,GAAEF,IAAMikB,EAAMZ,GAAKc,CAGnBjkB,GAAIjI,KAAK+qB,eAAe,EACxBtwB,GAAIoxB,EAAMZ,CACVjjB,GAAI8jB,EAAMZ,CACV3O,GAAIwP,EAAMZ,CACVe,GAAS,EAAExS,KAAKC,KAAKlf,EAAEA,EAAIuN,EAAEA,EAAIuU,EAAEA,EACnCtU,GAAExN,EAAIA,EAAEyxB,CACRjkB,GAAED,EAAIA,EAAEkkB,CACRjkB,GAAEsU,EAAIA,EAAE2P,CACRjkB,GAAEF,GAAKqjB,EAAMY,GAAKE,CAGlBjkB,GAAIjI,KAAK+qB,eAAe,EACxBtwB,GAAIoxB,EAAMR,CACVrjB,GAAI8jB,EAAMR,CACV/O,GAAIwP,EAAMR,CACVW,GAAS,EAAExS,KAAKC,KAAKlf,EAAEA,EAAIuN,EAAEA,EAAIuU,EAAEA,EACnCtU,GAAExN,EAAIA,EAAEyxB,CACRjkB,GAAED,EAAIA,EAAEkkB,CACRjkB,GAAEsU,EAAIA,EAAE2P,CACRjkB,GAAEF,IAAMikB,EAAMR,GAAKU,CAGnBjkB,GAAIjI,KAAK+qB,eAAe,EACxBtwB,GAAIoxB,EAAMR,CACVrjB,GAAI8jB,EAAMR,CACV/O,GAAIwP,EAAMR,CACVW,GAAS,EAAExS,KAAKC,KAAKlf,EAAEA,EAAIuN,EAAEA,EAAIuU,EAAEA,EACnCtU,GAAExN,EAAIA,EAAEyxB,CACRjkB,GAAED,EAAIA,EAAEkkB,CACRjkB,GAAEsU,EAAIA,EAAE2P,CACRjkB,GAAEF,GAAKyjB,EAAMQ,GAAKE,CAGlBjkB,GAAIjI,KAAK+qB,eAAe,EACxBtwB,GAAIgxB,CACJzjB,GAAI0jB,CACJnP,GAAIoP,CACJO,GAAS,EAAExS,KAAKC,KAAKlf,EAAEA,EAAIuN,EAAEA,EAAIuU,EAAEA,EACnCtU,GAAExN,EAAIA,EAAEyxB,CACRjkB,GAAED,EAAIA,EAAEkkB,CACRjkB,GAAEsU,EAAIA,EAAE2P,CACRjkB,GAAEF,GAAK6jB,EAAIM,CAGXjkB,GAAIjI,KAAK+qB,eAAe,EACxBtwB,GAAIoxB,EAAMJ,CACVzjB,GAAI8jB,EAAMJ,CACVnP,GAAIwP,EAAMJ,CACVO,GAAS,EAAExS,KAAKC,KAAKlf,EAAEA,EAAIuN,EAAEA,EAAIuU,EAAEA,EACnCtU,GAAExN,EAAIA,EAAEyxB,CACRjkB,GAAED,EAAIA,EAAEkkB,CACRjkB,GAAEsU,EAAIA,EAAE2P,CACRjkB,GAAEF,GAAK6jB,EAAMI,GAAKE,CAElBlsB,MAAK0qB,oBAAsB,MAIrB7tB,GAAAqF,UAAAoT,kCAAP,SAAyC6W,GAExC,GAAI3jB,EAAAtG,UAAMoT,kCAAiCta,KAAAgF,KAACmsB,GAC3C,MAAO,KAER,IAAInsB,KAAKosB,wBAA0BvgB,EAAApP,QAAuBgN,gBAAiB,CAC1EzJ,KAAKyqB,qBAAuB,IAC5BzqB,MAAK0qB,oBAAsB,KAG5B,MAAO,OAMR1oB,QAAAC,eAAWpF,EAAAqF,UAAA,c5BwhGJC,I4BxhGP,WAEC,MAAOnC,MAAK6qB,a5ByhGNtnB,I4BthGP,SAAsBC,GAErB,GAAIxD,KAAK6qB,aAAernB,EACvB,MAED,KAAKA,EACJ,KAAM,IAAI5I,OAAM,6BAEjBoF,MAAK6qB,YAAYnnB,oBAAoB2mB,EAAA5tB,QAAgBquB,eAAgB9qB,KAAK2qB,mCAC1E3qB,MAAK6qB,YAAcrnB,CACnBxD,MAAK6qB,YAAYhnB,iBAAiBwmB,EAAA5tB,QAAgBquB,eAAgB9qB,KAAK2qB,mCACvE3qB,MAAKwL,cAAc,GAAIhM,GAAA/C,QAAY+C,EAAA/C,QAAY8H,mBAAoBvE,Q5BqhG7DqC,WAAY,KACZC,aAAc,M4BhhGrBN,QAAAC,eAAWpF,EAAAqF,UAAA,kB5BshGJC,I4BthGP,WAEC,GAAInC,KAAKyqB,qBAAsB,CAC9BzqB,KAAKwqB,gBAAgB1D,SAAS9mB,KAAK0C,sBACnC1C,MAAKwqB,gBAAgB6B,OAAOrsB,KAAK6qB,YAAYrN,OAC7Cxd,MAAKyqB,qBAAuB,MAG7B,MAAOzqB,MAAKwqB,iB5BshGNnoB,WAAY,KACZC,aAAc,M4B5gGdzF,GAAAqF,UAAAsE,OAAP,SAAc8lB,EAAWC,EAAWhmB,GAEnC,MAAOvG,MAAKyd,eAAekJ,qBAAqB3mB,KAAK6qB,YAAYjoB,UAAU0pB,EAAIC,EAAIhmB,IAS7E1J,GAAAqF,UAAA8D,QAAP,SAAeC,GAEd,MAAOjG,MAAK6qB,YAAY7kB,QAAQhG,KAAK0C,sBAAsBC,gBAAgBsD,IAWrEpJ,GAAAqF,UAAAU,UAAP,SAAiB0pB,EAAWC,EAAWhmB,GAEtC,MAAOvG,MAAKyd,eAAe9a,gBAAgB3C,KAAK6qB,YAAYjoB,UAAU0pB,EAAIC,EAAIhmB,IAGxE1J,GAAAqF,UAAAsqB,eAAP,SAAsB5sB,GAKrB,GAAII,KAAKysB,eACRzsB,KAAKysB,eAAeC,aAnPR7vB,GAAA6L,UAAmB,gBAuPlC,OAAA7L,IAzPqB0tB,EAAA9tB,QA2PrBuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M5BghGAzI,GAAQ0B,Q4BhhGOI,I5BkhGZ8vB,yCAAyCrlB,UAAUgT,gCAAgChT,UAAUslB,+BAA+BtlB,UAAUulB,oDAAoDvlB,UAAU4B,iDAAiD,iDAAiDuX,uCAAuC,uCAAuCqM,oDAAoD,oDAAoDC,wCAAwC,0CAA0CC,+CAA+C,SAAS/yB,EAAQkB,EAAOJ,GACxnB,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,I6BjyGnF,IAAA4N,GAAA9b,EAA6B,qCAC7B,IAAA6b,GAAA7b,EAA0B,gCAC1B,IAAA+b,GAAA/b,EAA0B,gCAE1B,IAAAgzB,GAAAhzB,EAA0B,uCAC1B,IAAA4R,GAAA5R,EAAoC,iDACpC,IAAAmnB,GAAAnnB,EAA2B,uCAE3B,IAAAizB,GAAAjzB,EAAqC,qEAErC,IAAA8C,GAAA,SAAAyL,GAA+BV,EAAA/K,EAAAyL,EAU9B,SAAAzL,GAAYowB,EAAiBC,EAAkBC,GAAnC,GAAAF,QAAA,GAAe,CAAfA,EAAA,EAAiB,GAAAC,QAAA,GAAgB,CAAhBA,GAAe,EAAG,GAAAC,QAAA,GAAe,CAAfA,EAAA,EAE9C7kB,EAAAxN,KAAAgF,KALOA,MAAAstB,aAA6B,GAAI3sB,OAAc,GAOtDX,MAAK4nB,WAAa,IAElB5nB,MAAK6c,UAAY,GAAI7G,GAAAvZ,QAAS0wB,EAAMC,EAAMC,EAE1CrtB,MAAKutB,gBAAkB,GAAIvX,GAAAvZ,OAG3BuD,MAAKkoB,YAAc9G,EAAA3kB,QAAWokB,KAG/B7e,OAAAC,eAAWlF,EAAAmF,UAAA,a7BuxGJC,I6BvxGP,WAEC,MAAOpF,GAAiB2L,W7BwxGlBrG,WAAY,KACZC,aAAc,M6BtxGrBN,QAAAC,eAAWlF,EAAAmF,UAAA,kB7ByxGJC,I6BzxGP,WAEC,GAAInC,KAAKosB,wBAA0BvgB,EAAApP,QAAuBgN,gBACzDzJ,KAAKwtB,uBAEN,OAAOxtB,MAAKutB,iB7ByxGNlrB,WAAY,KACZC,aAAc,M6BvxGrBN,QAAAC,eAAWlF,EAAAmF,UAAA,a7B0xGJC,I6B1xGP,WAEC,MAAOnC,MAAKytB,Y7B2xGNlqB,I6BxxGP,SAAqBC,GAEpBxD,KAAKytB,WAAajqB,CAElB,KAAKxD,KAAK0tB,WACT1tB,KAAK0tB,WAAa,GAAI1X,GAAAvZ,OAEvBuD,MAAK0tB,WAAW7qB,EAAI7C,KAAK6C,EAAI7C,KAAKytB,WAAW5qB,CAC7C7C,MAAK0tB,WAAW3qB,EAAI/C,KAAK+C,EAAI/C,KAAKytB,WAAW1qB,CAC7C/C,MAAK0tB,WAAWhW,EAAI1X,KAAK0X,EAAI1X,KAAKytB,WAAW/V,CAE7C1X,MAAKslB,OAAOtlB,KAAK0tB,a7BsxGXrrB,WAAY,KACZC,aAAc,M6BnxGdvF,GAAAmF,UAAAsrB,sBAAP,WAEChlB,EAAAtG,UAAMsrB,sBAAqBxyB,KAAAgF,KAE3BA,MAAKyd,eAAekQ,aAAa,EAAG3tB,KAAKutB,gBAEzCvtB,MAAKutB,gBAAgBK,YAIf7wB,GAAAmF,UAAA2rB,oBAAP,WAEC,MAAO,IAAIX,GAAAzwB,QAILM,GAAAmF,UAAA4rB,2BAAP,SAAkCzS,EAAgB0S,EAA0B5Y,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAE3E,GAAI8I,GAAmBlI,EAAAtZ,QAAcuxB,kBACrC,IAAIhZ,GAAa,GAAIc,GAAArZ,OAErBuY,GAAE8R,SAASzL,EAAO4S,wBAAwBF,GAC1C/Y,GAAEqX,OAAOrsB,KAAK0C,sBAEd,KAAK1C,KAAKkuB,gBACTluB,KAAKkuB,kBAENlZ,GAAEmZ,iBAAiBnuB,KAAKstB,aAActtB,KAAKkuB,gBAE3C,IAAIE,GAActJ,SAAUuJ,GAAevJ,QAC3C,IAAIwJ,GAAcxJ,SAAUyJ,GAAezJ,QAC3C,IAAI0J,GAAc1J,SAAU2J,GAAe3J,QAC3C,IAAI/c,EACJ,KAAK,GAAIrN,GAAW,EAAGA,EAAI,IAAK,CAC/BqN,EAAI/H,KAAKkuB,gBAAgBxzB,IAEzB,IAAIqN,EAAIqmB,EACPA,EAAOrmB,CAER,IAAIA,EAAIsmB,EACPA,EAAOtmB,CAERA,GAAI/H,KAAKkuB,gBAAgBxzB,IAEzB,IAAIqN,EAAIumB,EACPA,EAAOvmB,CAER,IAAIA,EAAIwmB,EACPA,EAAOxmB,CAERA,GAAI/H,KAAKkuB,gBAAgBxzB,IAEzB,IAAIqN,EAAIymB,EACPA,EAAOzmB,CAER,IAAIA,EAAI0mB,EACPA,EAAO1mB,EAGT,GAAI2mB,GAAmB,GAAGL,EAAOD,EACjC,IAAIO,GAAmB,GAAGJ,EAAOD,EACjC,IAAIM,GAAmB,GAAGH,EAAOD,EACjCvQ,GAAI,GAAK,EAAEyQ,CACXzQ,GAAI,GAAK,EAAE0Q,CACX1Q,GAAI,IAAM2Q,CACV3Q,GAAI,MAAQoQ,EAAOD,GAAMM,CACzBzQ,GAAI,MAAQsQ,EAAOD,GAAMK,CACzB1Q,GAAI,KAAOuQ,EAAKI,CAChB3Q,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,CAClFA,GAAI,IAAM,CAEV,KAAK9I,EACJA,EAAS,GAAIW,GAAArZ,OAEd0Y,GAAO0Z,gBAAgB5Q,EACvB9I,GAAO2Z,QAAQ9Z,EAEf,OAAOG,GAQDpY,GAAAmF,UAAAymB,kBAAP,WAECngB,EAAAtG,UAAMymB,kBAAiB3tB,KAAAgF,KAGvB,IAAI+uB,GAAc/uB,KAAK4oB,YAAY/lB,CACnC,IAAImsB,GAAchvB,KAAK4oB,YAAY7lB,EAAI/C,KAAK4oB,YAAYzkB,MACxD,IAAI8qB,GAAcjvB,KAAK4oB,YAAYlR,CACnC,IAAIwX,GAAclvB,KAAK4oB,YAAY/lB,EAAI7C,KAAK4oB,YAAY1kB,KACxD,IAAIirB,GAAcnvB,KAAK4oB,YAAY7lB,CACnC,IAAIqsB,GAAcpvB,KAAK4oB,YAAYlR,EAAI1X,KAAK4oB,YAAY/K,KAExD7d,MAAKstB,aAAa,GAAKyB,CACvB/uB,MAAKstB,aAAa,GAAK0B,CACvBhvB,MAAKstB,aAAa,GAAK2B,CACvBjvB,MAAKstB,aAAa,GAAK4B,CACvBlvB,MAAKstB,aAAa,GAAK0B,CACvBhvB,MAAKstB,aAAa,GAAK2B,CACvBjvB,MAAKstB,aAAa,GAAKyB,CACvB/uB,MAAKstB,aAAa,GAAK6B,CACvBnvB,MAAKstB,aAAa,GAAK2B,CACvBjvB,MAAKstB,aAAa,GAAK4B,CACvBlvB,MAAKstB,aAAa,IAAM6B,CACxBnvB,MAAKstB,aAAa,IAAM2B,CACxBjvB,MAAKstB,aAAa,IAAMyB,CACxB/uB,MAAKstB,aAAa,IAAM0B,CACxBhvB,MAAKstB,aAAa,IAAM8B,CACxBpvB,MAAKstB,aAAa,IAAM4B,CACxBlvB,MAAKstB,aAAa,IAAM0B,CACxBhvB,MAAKstB,aAAa,IAAM8B,CACxBpvB,MAAKstB,aAAa,IAAMyB,CACxB/uB,MAAKstB,aAAa,IAAM6B,CACxBnvB,MAAKstB,aAAa,IAAM8B,CACxBpvB,MAAKstB,aAAa,IAAM4B,CACxBlvB,MAAKstB,aAAa,IAAM6B,CACxBnvB,MAAKstB,aAAa,IAAM8B,EA/KXryB,GAAA2L,UAAmB,0BAiLlC,OAAA3L,IAnL+BkwB,EAAAxwB,QAqL/BuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M7B8vGAzI,GAAQ0B,Q6B9vGOM,I7BgwGZud,gCAAgChT,UAAUiT,qCAAqCjT,UAAUkT,gCAAgClT,UAAU4B,iDAAiD,iDAAiDuX,uCAAuC,uCAAuC4O,uCAAuC,uCAAuCC,qEAAqE,uEAAuExC,qDAAqD,SAAS7yB,EAAQkB,EAAOJ,GAC7lB,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,I8Bl8GnF,IAAAonB,GAAAt1B,EAA6B,uCAC7B,IAAAu1B,GAAAv1B,EAA2B,oCAG3B,IAAAotB,GAAAptB,EAA6B,2CAC7B,IAAA4R,GAAA5R,EAAoC,iDAyBpC,IAAAw1B,GAAA,SAAAjnB,GAAqCV,EAAA2nB,EAAAjnB,EA0FpC,SAAAinB,KAECjnB,EAAAxN,KAAAgF,KAxFOA,MAAA0vB,eAAyB,IACzB1vB,MAAA2vB,gBACA3vB,MAAA4vB,kBAA2B,CAE5B5vB,MAAA4Q,UAAiC,GAAIjQ,OAK5CqB,OAAAC,eAAWwtB,EAAAvtB,UAAA,a9By8GJC,I8Bz8GP,WAEC,MAAOstB,GAAuB/mB,W9B08GxBrG,WAAY,KACZC,aAAc,M8Bn7GrBN,QAAAC,eAAWwtB,EAAAvtB,UAAA,iB9B28GJC,I8B38GP,WAEC,GAAInC,KAAKosB,wBAA0BvgB,EAAApP,QAAuB2M,cACzDpJ,KAAK6vB,qBAEN,OAAO7vB,MAAK0vB,gB9B28GNnsB,I8Bx8GP,SAAyBC,GAExB,GAAIxD,KAAK0vB,gBAAkBlsB,EAC1B,MAEDxD,MAAK0vB,eAAiBlsB,CAEtBxD,MAAKsV,kCAAkCzJ,EAAApP,QAAuB2M,gB9Bu8GxD/G,WAAY,KACZC,aAAc,M8Bl8GrBN,QAAAC,eAAWwtB,EAAAvtB,UAAA,e9Bw8GJC,I8Bx8GP,WAEC,MAAOnC,MAAK4Q,UAAU3V,Q9By8GhBoH,WAAY,KACZC,aAAc,M8B34GdmtB,GAAAvtB,UAAA4tB,SAAP,SAAgB3e,GAEf,MAAOnR,MAAK+vB,WAAW5e,EAAOnR,KAAK4Q,UAAU3V,QAGvCw0B,GAAAvtB,UAAA8tB,gBAAP,SAAuB7e,EAAqB0M,EAAcoS,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEzD,GAAI9e,GAAS,KACZ,KAAM,IAAIoe,GAAA9yB,QAAc,kCAGzB,IAAI0U,EAAM+e,SACT/e,EAAM+e,SAASC,sBAAsBhf,EAAM+e,SAASE,cAAcjf,GAGnE,IAAInG,GAAQhL,KAAKgT,sBAAsB6K,EAEvC,IAAI7S,IAAU,EAAG,CAChB,GAAIilB,EAAS,CACZjwB,KAAK8Q,cAAc9F,OACb,CAENhL,KAAKgwB,gBAAgBhwB,KAAK4Q,UAAU5F,GAAQ6S,EAAQ,EAAG,QAIzD,GAAI7d,KAAK4vB,kBAAoB/R,EAAQ,EACpC7d,KAAK4vB,kBAAoB/R,EAAQ,CAElC7d,MAAK2vB,cAAc9R,GAAS1M,CAC5BnR,MAAK4Q,UAAUxN,KAAK+N,EAEpBA,GAAMN,SAAWgN,CAEjB1M,GAAMkf,WAAWrwB,KAEjBA,MAAKswB,qBAEL,OAAOnf,GAgCDse,GAAAvtB,UAAA6tB,WAAP,SAAkB5e,EAAqBnG,GAEtC,MAAOhL,MAAKgwB,gBAAgB7e,EAAQnG,EAAQhL,KAAK4Q,UAAU3V,OAAS+E,KAAK4Q,UAAU5F,GAAO6F,SAAW7Q,KAAKuwB,sBAAuB,OAG3Hd,GAAAvtB,UAAAsuB,YAAP,WAAmB,GAAAC,K9B+5GZ,K8B/5GY,GAAAC,GAAA,EAAAA,EAAAC,UAAA11B,OAAAy1B,IAAkC,CAAlCD,EAAAC,EAAA,GAAAC,UAAAD,GAElB,GAAIvtB,GAAastB,EAAWx1B,MAC5B,KAAK,GAAIP,GAAW,EAAGA,EAAKyI,EAAKzI,IAChCsF,KAAK8vB,SAASW,EAAW/1B,IAMpB+0B,GAAAvtB,UAAAuN,MAAP,WAEC,GAAImhB,GAAqC,GAAInB,EAE7CzvB,MAAK6wB,OAAOD,EAEZ,OAAOA,GAGDnB,GAAAvtB,UAAA2uB,OAAP,SAAcD,GAEbpoB,EAAAtG,UAAM2uB,OAAM71B,KAAAgF,KAAC4wB,EAEbA,GAAYE,cAAgB9wB,KAAK0vB,cAEjC,IAAIvsB,GAAanD,KAAK4Q,UAAU3V,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIyI,IAAOzI,EACjCk2B,EAAYd,SAAS9vB,KAAK4Q,UAAUlW,GAAG+U,SAelCggB,GAAAvtB,UAAA6uB,SAAP,SAAgB5f,GAEf,MAAOnR,MAAK4Q,UAAUnC,QAAQ0C,IAAU,EAMlCse,GAAAvtB,UAAA8uB,cAAP,WAEC,IAAK,GAAIt2B,GAAWsF,KAAK4Q,UAAU3V,OAAS,EAAGP,GAAK,EAAGA,IACtDsF,KAAKixB,YAAYjxB,KAAK4Q,UAAUlW,GAEjC8N,GAAAtG,UAAM8uB,cAAah2B,KAAAgF,MAGbyvB,GAAAvtB,UAAAgvB,gBAAP,SAAuBrT,GAEtB,MAAO7d,MAAK2vB,cAAc9R,GAYpB4R,GAAAvtB,UAAAivB,WAAP,SAAkBnmB,GAEjB,GAAImG,GAAsBnR,KAAK4Q,UAAU5F,EAEzC,IAAImG,GAAS,KACZ,KAAM,IAAIqe,GAAA/yB,QAAW,uDAEtB,OAAO0U,GAiBDse,GAAAvtB,UAAAkvB,eAAP,SAAsB1hB,GAErB,GAAIvM,GAAanD,KAAK4Q,UAAU3V,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIyI,IAAOzI,EACjC,GAAIsF,KAAK4Q,UAAUlW,GAAGgV,MAAQA,EAC7B,MAAO1P,MAAK4Q,UAAUlW,EAExB,OAAO,MAWD+0B,GAAAvtB,UAAAkuB,cAAP,SAAqBjf,GAEpB,GAAIkgB,GAAoBrxB,KAAK4Q,UAAUnC,QAAQ0C,EAE/C,IAAIkgB,IAAe,EAClB,KAAM,IAAI9B,GAAA9yB,QAAc,+CAEzB,OAAO40B,GAGD5B,GAAAvtB,UAAAquB,oBAAP,WAEC,GAAIvwB,KAAKsxB,uBACRtxB,KAAKuxB,yBAEN,OAAOvxB,MAAK4vB,kBAsBNH,GAAAvtB,UAAAsvB,qBAAP,SAA4BC,GAE3B,MAAO,IAAI9wB,OAsBL8uB,GAAAvtB,UAAA+uB,YAAP,SAAmB9f,GAElB,GAAIA,GAAS,KACZ,KAAM,IAAIoe,GAAA9yB,QAAc,iCAEzBuD,MAAK8Q,cAAc9Q,KAAKowB,cAAcjf,GAEtC,OAAOA,GAGDse,GAAAvtB,UAAAwvB,mBAAP,SAA0B7T,GAEzB,MAAO7d,MAAK8Q,cAAc9Q,KAAKgT,sBAAsB6K,IAyB/C4R,GAAAvtB,UAAA4O,cAAP,SAAqB9F,GAEpB,GAAImG,GAAsBnR,KAAKmwB,sBAAsBnlB,EAErDmG,GAAMkf,WAAW,KAEjBrwB,MAAKswB,qBAEL,OAAOnf,GAmBDse,GAAAvtB,UAAAyvB,eAAP,SAAsBC,EAA+BC,GAA/B,GAAAD,QAAA,GAA6B,CAA7BA,EAAA,EAA+B,GAAAC,QAAA,GAAoC,CAApCA,EAAA,WAEpD,GAAID,EAAa,EAChB,KAAM,IAAIpC,GAAA/yB,QAAW,+CAEtB,IAAIo1B,EAAW7xB,KAAK4Q,UAAU3V,OAC7B,KAAM,IAAIu0B,GAAA/yB,QAAW,6CAEtB,KAAI,GAAI/B,GAAoBk3B,EAAYl3B,EAAIm3B,EAAUn3B,IACrDsF,KAAKixB,YAAYjxB,KAAK4Q,UAAUlW,IA+B3B+0B,GAAAvtB,UAAA4vB,cAAP,SAAqB3gB,EAAqBnG,IAenCykB,GAAAvtB,UAAA6vB,aAAP,SAAoBC,EAAsBC,GAEzCjyB,KAAKkyB,eAAelyB,KAAKowB,cAAc4B,GAAShyB,KAAKowB,cAAc6B,IAY7DxC,GAAAvtB,UAAAgwB,eAAP,SAAsBC,EAAeC,GAEpC,GAAIvU,GAAe7d,KAAK4Q,UAAUwhB,GAAQvhB,QAC1C,IAAIM,GAAsBnR,KAAK4Q,UAAUuhB,EAEzCnyB,MAAKgwB,gBAAgBhwB,KAAK4Q,UAAUwhB,GAASpyB,KAAK4Q,UAAUuhB,GAAQthB,SACpE7Q,MAAKgwB,gBAAgB7e,EAAO0M,GAStB4R,GAAAvtB,UAAAymB,kBAAP,WAECngB,EAAAtG,UAAMymB,kBAAiB3tB,KAAAgF,KAEvB,IAAIqyB,EACJ,IAAI1hB,GAAqB3Q,KAAK4Q,UAAU3V,MAExC,IAAI0V,EAAc,EAAG,CACpB,GAAI6S,EACJ,IAAID,EACJ,IAAIwL,GAAaC,EAAaC,CAC9B,IAAIC,GAAaC,EAAaC,CAE9B,KAAK,GAAI10B,GAAW,EAAGA,EAAIiW,IAAejW,EAAG,CAC5C23B,EAAMryB,KAAK4Q,UAAUlW,GAAG6iB,OAAOvd,KAE/B,IAAItF,GAAK,EAAG,CACXw0B,EAAOmD,EAAInuB,OAAS6qB,EAAOsD,EAAIxvB,EAC/BssB,GAAOkD,EAAIluB,QAAU6qB,EAAOqD,EAAItvB,EAChCqsB,GAAOiD,EAAIxU,OAASoR,EAAOoD,EAAI3a,OACzB,CACN6L,EAAM8O,EAAInuB,OAASsf,EAAM6O,EAAIxvB,EAC7B,IAAI2gB,EAAMuL,EACTA,EAAOvL,CACR,IAAID,EAAM2L,EACTA,EAAO3L,CAERA,GAAM8O,EAAIluB,QAAUqf,EAAM6O,EAAItvB,EAC9B,IAAIygB,EAAMwL,EACTA,EAAOxL,CACR,IAAID,EAAM4L,EACTA,EAAO5L,CAERA,GAAM8O,EAAIxU,OAAS2F,EAAM6O,EAAI3a,EAC7B,IAAI8L,EAAMyL,EACTA,EAAOzL,CACR,IAAID,EAAM6L,EACTA,EAAO7L,GAIVvjB,KAAK4oB,YAAY1kB,MAAQgrB,GAAQlvB,KAAK4oB,YAAY/lB,EAAIksB,EACtD/uB,MAAK4oB,YAAYzkB,OAASgrB,GAAQnvB,KAAK4oB,YAAY7lB,EAAIisB,EACvDhvB,MAAK4oB,YAAY/K,MAAQuR,GAAQpvB,KAAK4oB,YAAYlR,EAAIuX,OAChD,CACNjvB,KAAK4oB,YAAY0J,YAOZ7C,GAAAvtB,UAAAoT,kCAAP,SAAyC6W,GAExC,GAAI3jB,EAAAtG,UAAMoT,kCAAiCta,KAAAgF,KAACmsB,GAC3C,MAAO,KAER,IAAIhpB,GAAanD,KAAK4Q,UAAU3V,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIyI,IAAOzI,EACjCsF,KAAK4Q,UAAUlW,GAAG4a,kCAAkC6W,EAErD,OAAO,OAODsD,GAAAvtB,UAAAqwB,WAAP,SAAkB/uB,EAAavH,GAE9BuM,EAAAtG,UAAMqwB,WAAUv3B,KAAAgF,KAACwD,EAAOvH,EAExB,IAAIkH,GAAanD,KAAK4Q,UAAU3V,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIyI,IAAOzI,EACjCsF,KAAK4Q,UAAUlW,GAAG63B,WAAW/uB,EAAOvH,GAQ/BwzB,GAAAvtB,UAAAiuB,sBAAP,SAA6BnlB,GAE5B,GAAImG,GAAsBnR,KAAK4Q,UAAU4hB,OAAOxnB,EAAO,GAAG,EAG1D,IAAIhL,KAAK4vB,mBAAqBze,EAAMN,SAAW,EAC9C7Q,KAAKsxB,uBAAyB,WAExBtxB,MAAK2vB,cAAcxe,EAAMN,SAEhCM,GAAMN,UAAY,KAElB,OAAOM,GAGDse,GAAAvtB,UAAA8Q,sBAAP,SAA6B6K,GAE5B,IAAK7d,KAAK2vB,cAAc9R,GACvB,OAAQ,CAET,OAAO7d,MAAK4Q,UAAUnC,QAAQzO,KAAK2vB,cAAc9R,IAG1C4R,GAAAvtB,UAAAqvB,wBAAR,WAECvxB,KAAKsxB,uBAAyB,KAE9BtxB,MAAK4vB,kBAAoB,CACzB,IAAIzsB,GAAanD,KAAK4Q,UAAU3V,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIyI,EAAKzI,IAC/B,GAAIsF,KAAK4vB,kBAAoB5vB,KAAK4Q,UAAUlW,GAAGmW,SAC9C7Q,KAAK4vB,kBAAoB5vB,KAAK4Q,UAAUlW,GAAGmW,QAE7C7Q,MAAK4vB,mBAAqB,EAGpBH,GAAAvtB,UAAAuwB,sBAAP,SAA6B5vB,EAAUE,EAAU2vB,EAAmBC,GAEnE,GAAIhiB,GAAqB3Q,KAAK4Q,UAAU3V,MACxC,KAAI,GAAIP,GAAW,EAAGA,EAAIiW,EAAajW,IACtC,GAAGsF,KAAK4Q,UAAUlW,GAAGk4B,aAAa/vB,EAAEE,EAAG2vB,EAAWC,GACjD,MAAO,KAET,OAAO,OAGDlD,GAAAvtB,UAAA2wB,gBAAP,WAEC,GAAI7yB,KAAK0R,SACR1R,KAAK8wB,cAAgB,KAEtBtoB,GAAAtG,UAAM2wB,gBAAe73B,KAAAgF,MAGdyvB,GAAAvtB,UAAAouB,oBAAR,WAEC,GAAItwB,KAAK8yB,eAAiBvf,QAAQvT,KAAK4Q,UAAU3V,QAAS,CACzD,GAAI+E,KAAK+yB,oBACR/yB,KAAK+yB,oBAAoBC,mBAAmBhzB,KAE7CA,MAAK8yB,cAAgBvf,QAAQvT,KAAK4Q,UAAU3V,OAE5C,IAAI+E,KAAK+yB,oBACR/yB,KAAK+yB,oBAAoBtuB,iBAAiBzE,MAG5CA,KAAK0pB,qBA7pBQ+F,GAAA/mB,UAAmB,gCA+pBlC,OAAA+mB,IAjqBqCpI,EAAA5qB,QAmqBrCuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M9Bu0GAzI,GAAQ0B,Q8Bv0GOgzB,I9By0GZwD,uCAAuC3rB,UAAU4rB,oCAAoC5rB,UAAU4B,iDAAiD,iDAAiD6gB,2CAA2C,6CAA6CA,4CAA4C,SAAS9vB,EAAQkB,EAAOJ,GAChW,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,I+BhhInF,IAAAgrB,GAAAl5B,EAAsB,2BACtB,IAAA6R,GAAA7R,EAA8B,sCAC9B,IAAAm5B,GAAAn5B,EAAwB,8BACxB,IAAAkoB,GAAAloB,EAA2B,kCAC3B,IAAA6b,GAAA7b,EAA0B,gCAC1B,IAAA8b,GAAA9b,EAA6B,qCAC7B,IAAAo5B,GAAAp5B,EAAuB,6BAEvB,IAAA+b,GAAA/b,EAA0B,gCAC1B,IAAAqO,GAAArO,EAA0B,oCAM1B,IAAA4R,GAAA5R,EAAoC,iDACpC,IAAAmnB,GAAAnnB,EAA2B,uCAI3B,IAAAygB,GAAAzgB,EAA6B,wCAC7B,IAAA0gB,GAAA1gB,EAA+B,0CAE/B,IAAA6gB,GAAA7gB,EAA0B,oCAG1B,IAAAq5B,GAAAr5B,EAAgC,2CAGhC,IAAAwF,GAAAxF,EAAiC,+CACjC,IAAAgc,GAAAhc,EAA8B,2CAqI9B,IAAAs5B,GAAA,SAAA/qB,GAA4BV,EAAAyrB,EAAA/qB,EAgtC3B,SAAA+qB,KAhtCD,GAAAxzB,GAAAC,IAktCEwI,GAAAxN,KAAAgF,KA9sCOA,MAAAwzB,cAAiC,GAAI7yB,MAOrCX,MAAAyzB,kBAA4B,IAE5BzzB,MAAA0zB,qBAA+B,IAMhC1zB,MAAA2zB,iBAA4B,GAAI7d,GAAArZ,OAChCuD,MAAA4nB,WAAqB,KACrB5nB,MAAA8yB,cAAwB,KACxB9yB,MAAAoR,YAAqB,CACrBpR,MAAA6Q,UAAmB,KASlB7Q,MAAA4zB,uBAAkC,GAAI9d,GAAArZ,OAEtCuD,MAAA6zB,eAA0B,GAAI7d,GAAAvZ,OAE9BuD,MAAA8zB,oBAA8B,IAC9B9zB,MAAA+zB,iBAA0B,CAE3B/zB,MAAAg0B,qBAA+B,IAC/Bh0B,MAAAi0B,kBAA2B,CAE3Bj0B,MAAAk0B,kBAAyC,GAAIvzB,MAC5CX,MAAAm0B,sBAAgC,IACjCn0B,MAAAo0B,uBAAiC,IAmBhCp0B,MAAAq0B,mBAA8B,GAAIve,GAAArZ,OAS/BuD,MAAAs0B,uBAAiC,KACpCt0B,MAAAu0B,UAAoB,KAKpBv0B,MAAAw0B,cAAyB,GAAIxe,GAAAvZ,OAkC9BuD,MAAAy0B,cAAuB/Z,EAAAje,QAAcuM,kBAiIrChJ,MAAA00B,aAAuB,IA6VvB10B,MAAA20B,gBAAyBha,EAAAle,QAAgBuN,OA6nBzChK,MAAA40B,QAAiB,CAUvB50B,MAAK60B,WAAa,GAAI/Z,GAAAre,OAGtBuD,MAAK60B,WAAWhxB,iBAAiBoS,EAAAxZ,QAAeud,oBAAqB,SAACnZ,GAAyB,MAAAd,GAAK+0B,sBAAsBj0B,IAC1Hb,MAAK60B,WAAWhxB,iBAAiBoS,EAAAxZ,QAAewd,2BAA4B,SAACpZ,GAAyB,MAAAd,GAAKg1B,4BAA4Bl0B,IAGvIb,MAAKkoB,YAAc9G,EAAA3kB,QAAWmkB,iBAxoC/B5e,OAAAC,eAAWsxB,EAAArxB,UAAA,W/Bw+HJC,I+Bx+HP,WAEC,MAAOnC,MAAKg1B,U/By+HNzxB,I+Bt+HP,SAAmBC,GAElBxD,KAAKg1B,SAAWxxB,G/Bu+HVnB,WAAY,KACZC,aAAc,M+Br+HlBN,QAAAC,eAAWsxB,EAAArxB,UAAA,yB/Bw+HPC,I+Bx+HJ,WAEI,MAAOnC,MAAKs0B,wB/By+HZ/wB,I+Bt+HJ,SAAiCC,GAEnC,GAAIxD,KAAKs0B,wBAA0B9wB,EAClC,MAEKxD,MAAKs0B,uBAAyB9wB,CAEpCxD,MAAKsV,kCAAkCzJ,EAAApP,QAAuB+M,kB/Bq+HxDnH,WAAY,KACZC,aAAc,M+Bx9HrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,S/Bi+HJC,I+Bj+HP,WAEO,MAAOnC,MAAK60B,WAAW3gB,eAAgBlU,KAAK60B,WAAW3gB,eAAeK,gBAAkB,G/Bk+HxFhR,I+B/9HJ,SAAiBC,GAEnB,IAAKxD,KAAK60B,WAAW3gB,eACpBlU,KAAK60B,WAAW3gB,eAAiB,GAAIpI,GAAArP,OAEhCuD,MAAK60B,WAAW3gB,eAAeK,gBAAkB/Q,G/B+9HjDnB,WAAY,KACZC,aAAc,M+Bh8HrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,c/Bs8HJC,I+Bt8HP,WAEC,MAAOnC,MAAKkoB,a/Bu8HN3kB,I+Bp8HP,SAAsBC,GAErB,GAAIxD,KAAKkoB,aAAe1kB,EACvB,MAEDxD,MAAKkoB,YAAc1kB,CAEnBxD,MAAKugB,YAELvgB,MAAK0pB,sB/Bk8HCrnB,WAAY,KACZC,aAAc,M+Bt3HrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,S/Bm4HJC,I+Bn4HP,WAEC,MAAOnC,MAAKud,SAASM,MAAM7d,KAAKi1B,Q/Bo4H1B1xB,I+Bj4HP,SAAiBqT,GAEhB,GAAI5W,KAAKyb,QAAU7E,EAClB,MAED5W,MAAKyb,OAAS7E,CAEd5W,MAAKk1B,WAAWte,EAAI5W,KAAKud,SAASM,Q/Bg4H5Bxb,WAAY,KACZC,aAAc,M+B33HrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,U/Bi4HJC,I+Bj4HP,WAEC,IAAKnC,KAAKm1B,QACTn1B,KAAKm1B,QAAU,GAAInf,GAAAvZ,OAEpBuD,MAAKm1B,QAAQtyB,EAAI7C,KAAKyjB,SACtBzjB,MAAKm1B,QAAQpyB,EAAI/C,KAAK0jB,SACtB1jB,MAAKm1B,QAAQzd,EAAI1X,KAAKo1B,SAEtB,OAAOp1B,MAAKm1B,S/Bg4HN5xB,I+B73HP,SAAkBC,GAEjBxD,KAAKyjB,UAAYjgB,EAAMX,CACvB7C,MAAK0jB,UAAYlgB,EAAMT,CACvB/C,MAAKo1B,UAAY5xB,EAAMkU,G/B83HjBrV,WAAY,KACZC,aAAc,M+B5xHrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,U/By3HJC,I+Bz3HP,WAEC,MAAOnC,MAAKud,SAASpZ,OAAOnE,KAAKq1B,Q/B03H3B9xB,I+Bv3HP,SAAkBqT,GAEjB,GAAI5W,KAAKE,SAAW0W,EACnB,MAED5W,MAAKE,QAAU0W,CAEf5W,MAAKs1B,WAAW1e,EAAI5W,KAAKud,SAASpZ,S/Bs3H5B9B,WAAY,KACZC,aAAc,M+B52HrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,S/Bu3HJC,I+Bv3HP,WAEC,GAAInC,KAAKkwB,SACR,MAAOlwB,MAAKkwB,SAASE,cAAcpwB,KAEpC,OAAO,I/Bu3HDqC,WAAY,KACZC,aAAc,M+Bl3HrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,yB/Bw3HJC,I+Bx3HP,WAEC,GAAInC,KAAKu1B,4BAA6B,CACrCv1B,KAAK4zB,uBAAuB9M,SAAS9mB,KAAKyd,eAC1Czd,MAAK4zB,uBAAuB4B,QAC5Bx1B,MAAKu1B,4BAA8B,MAEpC,MAAOv1B,MAAK4zB,wB/By3HNvxB,WAAY,KACZC,aAAc,M+Bp3HrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,Y/B03HJC,I+B13HP,WAEC,MAAOnC,MAAK4nB,Y/B23HNvlB,WAAY,KACZC,aAAc,M+Bt3HrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,e/B43HJC,I+B53HP,WAEC,MAAOnC,MAAK8yB,e/B63HNzwB,WAAY,KACZC,aAAc,M+B92HrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,c/B83HJC,I+B93HP,WAEC,MAAOnC,MAAKy1B,a/B+3HNpzB,WAAY,KACZC,aAAc,M+B51HrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,Y/B+1HJC,I+B/1HP,WAEC,MAAOnC,MAAKu0B,W/Bg2HNhxB,I+B71HP,SAAoBC,GAEnB,GAAIxD,KAAKu0B,WAAa/wB,EACrB,MAEDxD,MAAKu0B,UAAY/wB,CAEjBxD,MAAK+zB,gBAAkBvwB,EAAOxD,KAAKqD,IAAM,CAEzCrD,MAAK6yB,mB/B21HCxwB,WAAY,KACZC,aAAc,M+B10HrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,gB/B61HJC,I+B71HP,WAEC,MAAOnC,MAAKm0B,uB/B81HN5wB,I+B31HP,SAAwBC,GAEvB,GAAIxD,KAAKm0B,uBAAyB3wB,EACjC,MAEDxD,MAAKm0B,sBAAwB3wB,G/B21HvBnB,WAAY,KACZC,aAAc,M+Bj1HrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,U/B21HJC,I+B31HP,WAEC,MAAOnC,MAAK01B,S/B41HNrzB,WAAY,KACZC,aAAc,M+Bn1HrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,U/B61HJC,I+B71HP,WAEC,MAAOnC,MAAK21B,S/B81HNtzB,WAAY,KACZC,aAAc,M+Bl1HrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,Q/B+1HJC,I+B/1HP,WAEO,MAAOnC,MAAK41B,Q/Bg2HZryB,I+B71HJ,SAAgBC,GAEZxD,KAAK41B,OAASpyB,G/B81HdnB,WAAY,KACZC,aAAc,M+Bz0HrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,U/B01HJC,I+B11HP,WAEC,MAAOnC,MAAKkwB,U/B21HN7tB,WAAY,KACZC,aAAc,M+Bt1HrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,a/B41HJC,I+B51HP,WAEC,MAAOnC,MAAK61B,oB/B61HNtyB,I+B11HP,SAAqBC,GAEpB,GAAIxD,KAAK61B,oBAAsBryB,EAC9B,MAEDxD,MAAK61B,mBAAqBryB,CAE1BxD,MAAKuyB,WAAWvyB,KAAKwE,QAASxE,KAAKkwB,SAAUlwB,KAAKkwB,SAAS4F,oBAAsB,KAEjF91B,MAAKwL,cAAc,GAAI/L,GAAAhD,QAAmBgD,EAAAhD,QAAmBiI,kBAAmB1E,Q/Bw1H1EqC,WAAY,KACZC,aAAc,M+B70HrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,S/Bm1HJC,I+Bn1HP,WAEC,MAAOnC,MAAK+1B,Q/Bo1HNxyB,I+Bh1HP,SAAiByyB,GAEhB,GAAIh2B,KAAK+1B,QAAU/1B,KAAK+1B,OAAOlzB,GAAKmzB,EAAMnzB,GAAK7C,KAAK+1B,OAAOhzB,GAAKizB,EAAMjzB,GAAK/C,KAAK+1B,OAAOre,GAAKse,EAAMte,EACjG,MAED,KAAKse,EAAO,CACXh2B,KAAK+1B,OAAS,IACd/1B,MAAKi2B,YAAc,SACb,CACN,IAAKj2B,KAAK+1B,OACT/1B,KAAK+1B,OAAS,GAAI/f,GAAAvZ,OAEnBuD,MAAK+1B,OAAOlzB,EAAImzB,EAAMnzB,CACtB7C,MAAK+1B,OAAOhzB,EAAIizB,EAAMjzB,CACtB/C,MAAK+1B,OAAOre,EAAIse,EAAMte,EAGvB1X,KAAKsV,kCAAkCzJ,EAAApP,QAAuBgN,kB/B+0HxDpH,WAAY,KACZC,aAAc,M+BnzHrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,Q/Bg1HJC,I+Bh1HP,WAEC,MAAOnC,MAAKk2B,O/Bi1HN7zB,WAAY,KACZC,aAAc,M+B9zHrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,a/Bw0HJC,I+Bx0HP,WAEC,MAAOnC,MAAK60B,WAAWsB,SAAStzB,EAAEsf,EAAA1lB,QAAW25B,oB/By0HvC7yB,I+Bt0HP,SAAqBqT,GAEpB,GAAI5W,KAAKyjB,WAAa7M,EACrB,MAED5W,MAAK60B,WAAWsB,SAAStzB,EAAI+T,EAAIuL,EAAA1lB,QAAWmnB,kBAE5C5jB,MAAK60B,WAAWld,sB/Bq0HVtV,WAAY,KACZC,aAAc,M+B5zHrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,a/Bs0HJC,I+Bt0HP,WAEC,MAAOnC,MAAK60B,WAAWsB,SAASpzB,EAAEof,EAAA1lB,QAAW25B,oB/Bu0HvC7yB,I+Bp0HP,SAAqBqT,GAEpB,GAAI5W,KAAK0jB,WAAa9M,EACrB,MAED5W,MAAK60B,WAAWsB,SAASpzB,EAAI6T,EAAIuL,EAAA1lB,QAAWmnB,kBAE5C5jB,MAAK60B,WAAWld,sB/Bm0HVtV,WAAY,KACZC,aAAc,M+B1zHrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,a/Bo0HJC,I+Bp0HP,WAEC,MAAOnC,MAAK60B,WAAWsB,SAASze,EAAEyK,EAAA1lB,QAAW25B,oB/Bq0HvC7yB,I+Bl0HP,SAAqBqT,GAEpB,GAAI5W,KAAKo1B,WAAaxe,EACrB,MAED5W,MAAK60B,WAAWsB,SAASze,EAAId,EAAIuL,EAAA1lB,QAAWmnB,kBAE5C5jB,MAAK60B,WAAWld,sB/Bi0HVtV,WAAY,KACZC,aAAc,M+BnwHrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,U/B8wHJC,I+B9wHP,WAEC,MAAOnC,MAAK60B,WAAWwB,MAAMxzB,G/B+wHvBU,I+B5wHP,SAAkBqT,GAGjB5W,KAAKC,OAAS,IAEdD,MAAKs2B,WAAW1f,I/B4wHVvU,WAAY,KACZC,aAAc,M+BlwHrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,U/B6wHJC,I+B7wHP,WAEC,MAAOnC,MAAK60B,WAAWwB,MAAMtzB,G/B8wHvBQ,I+B3wHP,SAAkBqT,GAGjB5W,KAAKE,QAAU,IAEfF,MAAKs1B,WAAW1e,I/B2wHVvU,WAAY,KACZC,aAAc,M+BhwHrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,U/B4wHJC,I+B5wHP,WAEC,MAAOnC,MAAK60B,WAAWwB,MAAM3e,G/B6wHvBnU,I+B1wHP,SAAkBqT,GAGjB5W,KAAKyb,OAAS,IAEdzb,MAAKk1B,WAAWte,I/B0wHVvU,WAAY,KACZC,aAAc,M+BpwHrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,S/B2wHJC,I+B3wHP,WAEC,MAAOnC,MAAK60B,WAAW0B,KAAK1zB,G/B4wHtBU,I+BzwHP,SAAiBqT,GAEhB,GAAI5W,KAAKw2B,OAAS5f,EACjB,MAED5W,MAAK60B,WAAW0B,KAAK1zB,EAAI+T,CAEzB5W,MAAK60B,WAAWld,sB/BwwHVtV,WAAY,KACZC,aAAc,M+BlwHrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,S/BywHJC,I+BzwHP,WAEC,MAAOnC,MAAK60B,WAAW0B,KAAKxzB,G/B0wHtBQ,I+BvwHP,SAAiBqT,GAEhB,GAAI5W,KAAKy2B,OAAS7f,EACjB,MAED5W,MAAK60B,WAAW0B,KAAKxzB,EAAI6T,CAEzB5W,MAAK60B,WAAWld,sB/BswHVtV,WAAY,KACZC,aAAc,M+BhwHrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,S/BuwHJC,I+BvwHP,WAEC,MAAOnC,MAAK60B,WAAW0B,KAAK7e,G/BwwHtBnU,I+BrwHP,SAAiBqT,GAEhB,GAAI5W,KAAK02B,OAAS9f,EACjB,MAED5W,MAAK60B,WAAW0B,KAAK7e,EAAId,CAEzB5W,MAAK60B,WAAWld,sB/BowHVtV,WAAY,KACZC,aAAc,M+B/vHrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,S/BqwHJC,I+BrwHP,WAEC,MAAOnC,MAAKwE,S/BswHNnC,WAAY,KACZC,aAAc,M+BjwHrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,iB/BuwHJC,I+BvwHP,WAEC,GAAInC,KAAK22B,oBAAqB,CAC7B,GAAI32B,KAAK+1B,QAAU/1B,KAAKy0B,eAAiB/Z,EAAAje,QAAcwM,YAAa,CACnEjJ,KAAK6zB,eAAiB7zB,KAAKyd,eAAe9a,gBAAgB3C,KAAKi2B,iBAEzD,CACNj2B,KAAKyd,eAAekQ,aAAa,EAAG3tB,KAAK6zB,gBAG1C7zB,KAAK22B,oBAAsB,MAE5B,MAAO32B,MAAK6zB,gB/BuwHNxxB,WAAY,KACZC,aAAc,M+BrwHrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,kB/BwwHJC,I+BxwHP,WAEC,GAAInC,KAAKosB,wBAA0BvgB,EAAApP,QAAuBgN,gBACzDzJ,KAAKwtB,uBAEN,OAAOxtB,MAAK2zB,kB/BwwHNtxB,WAAY,KACZC,aAAc,M+B3uHrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,wB/BivHJC,I+BjvHP,WAEC,MAAOnC,MAAK42B,uB/BkvHNv0B,WAAY,KACZC,aAAc,M+B7uHrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,gB/BmvHJC,I+BnvHP,WAEC,MAAOnC,MAAK62B,e/BovHNtzB,I+BjvHP,SAAwBC,GAEvB,GAAIA,GAASxD,KAAK62B,cACjB,MAED72B,MAAK62B,cAAgBrzB,CAErBxD,MAAKugB,c/BgvHCle,WAAY,KACZC,aAAc,M+BxsHrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,a/BivHJC,I+BjvHP,WAEC,MAAOnC,MAAK60B,Y/BkvHNxyB,WAAY,KACZC,aAAc,M+B3uHrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,W/BmvHJC,I+BnvHP,WAEC,MAAOnC,MAAK8zB,qB/BovHNvwB,I+BjvHP,SAAmBC,GAElB,GAAIxD,KAAK8zB,qBAAuBtwB,EAC/B,MAEDxD,MAAK8zB,oBAAsBtwB,CAE3BxD,MAAKsV,kCAAkCzJ,EAAApP,QAAuB4M,U/BgvHxDhH,WAAY,KACZC,aAAc,M+B9uHrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,S/BivHJC,I+BjvHP,WAEC,MAAOnC,MAAK82B,gB/BkvHNvzB,I+B/uHP,SAAiBC,GAEhB,GAAIxD,KAAK82B,gBAAkBtzB,EAC1B,MAEDxD,MAAK82B,eAAiBtzB,CAGtB,IAAIA,GAAS,MAAQA,EAAMvI,OAAQ,CAClC,GAAIkI,GAAaK,EAAMvI,MACvB,KAAK,GAAIP,GAAW,EAAGA,EAAIyI,EAAKzI,IAC/B8I,EAAM9I,GAAGgX,SAAW,KAGtB1R,KAAKsV,kCAAkCzJ,EAAApP,QAAuB8M,Q/B6uHxDlH,WAAY,KACZC,aAAc,M+BjuHrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,S/B8uHJC,I+B9uHP,WAEC,MAAOnC,MAAKud,SAASrZ,MAAMlE,KAAK+2B,Q/B+uH1BxzB,I+B5uHP,SAAiBqT,GAEhB,GAAI5W,KAAKC,QAAU2W,EAClB,MAED5W,MAAKC,OAAS2W,CAEd5W,MAAKs2B,WAAW1f,EAAI5W,KAAKud,SAASrZ,Q/B2uH5B7B,WAAY,KACZC,aAAc,M+B/tHrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,K/B4uHJC,I+B5uHP,WAEC,MAAOnC,MAAK60B,WAAWlzB,SAASkB,G/B6uH1BU,I+B1uHP,SAAaqT,GAEZ,GAAI5W,KAAK60B,WAAWlzB,SAASkB,GAAK+T,EACjC,MAED5W,MAAK60B,WAAWhhB,SAASC,QAAQ,IAAM8C,CAEvC5W,MAAK60B,WAAWrf,sB/ByuHVnT,WAAY,KACZC,aAAc,M+B7tHrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,K/B0uHJC,I+B1uHP,WAEC,MAAOnC,MAAK60B,WAAWlzB,SAASoB,G/B2uH1BQ,I+BxuHP,SAAaqT,GAEZ,GAAI5W,KAAK60B,WAAWlzB,SAASoB,GAAK6T,EACjC,MAED5W,MAAK60B,WAAWhhB,SAASC,QAAQ,IAAM8C,CAEvC5W,MAAK60B,WAAWrf,sB/BuuHVnT,WAAY,KACZC,aAAc,M+BltHrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,K/BwuHJC,I+BxuHP,WAEC,MAAOnC,MAAK60B,WAAWlzB,SAAS+V,G/ByuH1BnU,I+BtuHP,SAAaqT,GAEZ,GAAI5W,KAAK60B,WAAWlzB,SAAS+V,GAAKd,EACjC,MAED5W,MAAK60B,WAAWhhB,SAASC,QAAQ,IAAM8C,CAEvC5W,MAAK60B,WAAWrf,sB/BquHVnT,WAAY,KACZC,aAAc,M+BzsHdixB,GAAArxB,UAAA2B,iBAAP,SAAwBmzB,EAAaC;AAEpCzuB,EAAAtG,UAAM2B,iBAAgB7I,KAAAgF,KAACg3B,EAAMC,EAE7B,QAAQD,GACP,IAAKv3B,GAAAhD,QAAmBy6B,cACvBl3B,KAAKm3B,sBAAwB,IAC7B,MACD,KAAK13B,GAAAhD,QAAmBmpB,uBACvB5lB,KAAKo3B,+BAAiC,IACtC,QAOI7D,GAAArxB,UAAAuN,MAAP,WAEC,GAAImhB,GAA4B,GAAI2C,EAEpCvzB,MAAK6wB,OAAOD,EAEZ,OAAOA,GAGD2C,GAAArxB,UAAA2uB,OAAP,SAAcD,GAEbA,EAAY30B,UAAY+D,KAAK61B,kBAC7BjF,GAAYyG,WAAar3B,KAAKkoB,WAC9B0I,GAAYoF,MAAQh2B,KAAK+1B,MACzBnF,GAAYlhB,KAAO1P,KAAK41B,MACxBhF,GAAY0G,aAAet3B,KAAKm0B,qBAChCvD,GAAY2G,MAAQv3B,KAAKu3B,KACzB3G,GAAYlf,SAAW1R,KAAKu0B,SAC5B3D,GAAY8D,aAAe10B,KAAK00B,YAEhC,IAAI10B,KAAK82B,eACRlG,EAAYnf,MAAQzR,KAAK82B,cAE1B,IAAI92B,KAAKg1B,SACRpE,EAAY5hB,QAAUhP,KAAKg1B,SAASvlB,MAAMmhB,EAE3CA,GAAYiE,WAAWhhB,SAAW7T,KAAK60B,WAAWhhB,QAElD,IAAI7T,KAAK60B,WAAW3gB,eACnB0c,EAAYtf,UAAU4C,eAAiBlU,KAAK60B,WAAW3gB,eAAezE,QAMjE8jB,GAAArxB,UAAAuB,QAAP,WAECzD,KAAKgxB,gBAGCuC,GAAArxB,UAAA8uB,cAAP,WAEC,GAAIhxB,KAAKkwB,SACRlwB,KAAKkwB,SAASe,YAAYjxB,KAmB3BA,MAAK82B,eAAiB,KA2BhBvD,GAAArxB,UAAAs1B,UAAP,SAAiBC,GAEhB,MAAOz3B,MAAK03B,QAqBNnE,GAAArxB,UAAAy1B,QAAP,SAAeF,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEd,MAAOz3B,MAAK03B,QAGNnE,GAAArxB,UAAAqb,OAAP,SAAcka,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEb,GAAIz3B,KAAKysB,eACRzsB,KAAKysB,eAAeC,YAGrB,IAAI1sB,KAAKyzB,kBAAmB,CAC3BzzB,KAAK2oB,mBAGL,IAAI3oB,KAAKC,QAAU,KAClBD,KAAKs2B,WAAWt2B,KAAKC,OAAOD,KAAK4oB,YAAY1kB,MAE9C,IAAIlE,KAAKE,SAAW,KACnBF,KAAKs1B,WAAWt1B,KAAKE,QAAQF,KAAK4oB,YAAYzkB,OAE/C,IAAInE,KAAKyb,QAAU,KAClBzb,KAAKk1B,WAAWl1B,KAAKyb,OAAOzb,KAAK4oB,YAAY/K,OAG/C,GAAI4Z,GAAyB,MAAQA,GAAyBz3B,KAC7D,MAAOA,MAAK4oB,WAEb,IAAI6O,GAAyBz3B,KAAKkwB,SACjC,MAAOlwB,MAAK60B,WAAWhhB,SAAS+jB,aAAa53B,KAAK4oB,iBAElD,OAAO6O,GAAsB/0B,sBAAsBk1B,aAAa53B,KAAKyd,eAAema,aAAa53B,KAAK4oB,cAGjG2K,GAAArxB,UAAA6d,UAAP,SAAiB0X,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEhB,GAAIz3B,KAAKysB,eACRzsB,KAAKysB,eAAeC,YAErB,IAAI1sB,KAAK0zB,qBACR1zB,KAAK63B,sBAEN,OAAO73B,MAAK83B,eAoBNvE,GAAArxB,UAAA61B,cAAP,SAAqBtG,EAAatc,GAAA,GAAAA,QAAA,GAAmB,CAAnBA,EAAA,KAEjCnV,KAAKw0B,cAAcwD,MAAMvG,EAAM5uB,EAAG4uB,EAAM1uB,EAAG,EAC3C,IAAImiB,GAAellB,KAAK0C,sBAAsBC,gBAAgB3C,KAAKw0B,cAAex0B,KAAKw0B,cAEvF,KAAKrf,EACJA,EAAS,GAAIke,GAAA52B,OAEd0Y,GAAOtS,EAAIqiB,EAAIriB,CACfsS,GAAOpS,EAAImiB,EAAIniB,CAEf,OAAOoS,GAqBDoe,GAAArxB,UAAA+1B,gBAAP,SAAuBt2B,GAEtB,MAAO3B,MAAK0C,sBAAsBC,gBAAgBhB,GAW5C4xB,GAAArxB,UAAAg2B,cAAP,SAAqBC,GAEpB,GAAIC,GAAaD,EAAI5a,QACrB,KAAI6a,EAAQ,MAAO,MACnB,IAAIC,GAAgB,GAAIhF,GAAA52B,QAAM27B,EAAOv1B,EAAEu1B,EAAOr1B,EAC9C,IAAIu1B,GAAmB,GAAIjF,GAAA52B,QAAM27B,EAAOv1B,EAAEu1B,EAAOr1B,EAAEq1B,EAAOj0B,OAC1D,IAAIo0B,GAAiB,GAAIlF,GAAA52B,QAAM27B,EAAOv1B,EAAEu1B,EAAOl0B,MAAMk0B,EAAOr1B,EAC5D,IAAIy1B,GAAoB,GAAInF,GAAA52B,QAAM27B,EAAOv1B,EAAEu1B,EAAOl0B,MAAMk0B,EAAOr1B,EAAEq1B,EAAOj0B,OAExEk0B,GAAUr4B,KAAK+3B,cAAcI,EAAIM,cAAcJ,GAC/CC,GAAat4B,KAAK+3B,cAAcI,EAAIM,cAAcH,GAClDC,GAAWv4B,KAAK+3B,cAAcI,EAAIM,cAAcF,GAChDC,GAAcx4B,KAAK+3B,cAAcI,EAAIM,cAAcD,GAEnD,IAAInG,GAAUryB,KAAKud,QACnB,KAAI8U,EAAK,MAAO,MAGhB,IAAGgG,EAAQx1B,GAAKwvB,EAAIvtB,MAAQuzB,EAAQx1B,GAAKwvB,EAAIvtB,MAAQuzB,EAAQt1B,GAAKsvB,EAAIttB,KAAOszB,EAAQt1B,GAAKsvB,EAAIqG,OAAQ,MAAO,KAC7G,IAAGJ,EAAWz1B,GAAKwvB,EAAIvtB,MAAQwzB,EAAWz1B,GAAKwvB,EAAIvtB,MAAQwzB,EAAWv1B,GAAKsvB,EAAIttB,KAAOuzB,EAAWv1B,GAAKsvB,EAAIqG,OAAQ,MAAO,KACzH,IAAGH,EAAS11B,GAAKwvB,EAAIvtB,MAAQyzB,EAAS11B,GAAKwvB,EAAIvtB,MAAQyzB,EAASx1B,GAAKsvB,EAAIttB,KAAOwzB,EAASx1B,GAAKsvB,EAAIqG,OAAQ,MAAO,KACjH,IAAGF,EAAY31B,GAAKwvB,EAAIvtB,MAAQ0zB,EAAY31B,GAAKwvB,EAAIvtB,MAAQ0zB,EAAYz1B,GAAKsvB,EAAIttB,KAAOyzB,EAAYz1B,GAAKsvB,EAAIqG,OAAQ,MAAO,KAG7H,IAAIC,GAAaJ,EAASx1B,EAAIs1B,EAAQt1B,CACtC,IAAI61B,KAAeL,EAAS11B,EAAIw1B,EAAQx1B,EAExC,IAAIg2B,GAAaL,EAAYz1B,EAAIw1B,EAASx1B,CAC1C,IAAI+1B,KAAeN,EAAY31B,EAAI01B,EAAS11B,EAE5C,IAAIk2B,GAAaT,EAAWv1B,EAAIy1B,EAAYz1B,CAC5C,IAAIi2B,KAAeV,EAAWz1B,EAAI21B,EAAY31B,EAE9C,IAAIo2B,GAAaZ,EAAQt1B,EAAIu1B,EAAWv1B,CACxC,IAAIm2B,KAAeb,EAAQx1B,EAAIy1B,EAAWz1B,EAE1C,IAAIs2B,GAAa9G,EAAIvtB,KAAOuzB,EAAQx1B,CACpC,IAAIu2B,GAAa/G,EAAIttB,IAAMszB,EAAQt1B,CACnC,IAAIs2B,GAAahH,EAAIvtB,KAAOyzB,EAAS11B,CACrC,IAAIy2B,GAAajH,EAAIttB,IAAMwzB,EAASx1B,CACpC,IAAIw2B,GAAalH,EAAIvtB,KAAO0zB,EAAY31B,CACxC,IAAI22B,GAAanH,EAAIttB,IAAMyzB,EAAYz1B,CACvC,IAAI02B,GAAapH,EAAIvtB,KAAOwzB,EAAWz1B,CACvC,IAAI62B,GAAarH,EAAIttB,IAAMuzB,EAAWv1B,CAEtC,IAAI42B,GAAehB,EAAIQ,EAAMP,EAAIQ,CACjC,IAAIQ,GAAef,EAAIQ,EAAMP,EAAIQ,CACjC,IAAIO,GAAed,EAAIQ,EAAMP,EAAIQ,CACjC,IAAIM,GAAeb,EAAIQ,EAAMP,EAAIQ,CAGjC,IAAGC,EAAO,GAAKC,EAAO,GAAKC,EAAO,GAAKC,EAAO,EAAG,MAAO,KAExDX,GAAM9G,EAAI0H,MAAQ1B,EAAQx1B,CAC1Bu2B,GAAM/G,EAAIttB,IAAMszB,EAAQt1B,CACxBs2B,GAAMhH,EAAI0H,MAAQxB,EAAS11B,CAC3By2B,GAAMjH,EAAIttB,IAAMwzB,EAASx1B,CACzBw2B,GAAMlH,EAAI0H,MAAQvB,EAAY31B,CAC9B22B,GAAMnH,EAAIttB,IAAMyzB,EAAYz1B,CAC5B02B,GAAMpH,EAAI0H,MAAQzB,EAAWz1B,CAC7B62B,GAAMrH,EAAIttB,IAAMuzB,EAAWv1B,CAE3B42B,GAAQhB,EAAIQ,EAAMP,EAAIQ,CACtBQ,GAAQf,EAAIQ,EAAMP,EAAIQ,CACtBO,GAAQd,EAAIQ,EAAMP,EAAIQ,CACtBM,GAAQb,EAAIQ,EAAMP,EAAIQ,CAGtB,IAAGC,EAAO,GAAKC,EAAO,GAAKC,EAAO,GAAKC,EAAO,EAAG,MAAO,KAExDX,GAAM9G,EAAIvtB,KAAOuzB,EAAQx1B,CACzBu2B,GAAM/G,EAAIqG,OAASL,EAAQt1B,CAC3Bs2B,GAAMhH,EAAIvtB,KAAOyzB,EAAS11B,CAC1By2B,GAAMjH,EAAIqG,OAASH,EAASx1B,CAC5Bw2B,GAAMlH,EAAIvtB,KAAO0zB,EAAY31B,CAC7B22B,GAAMnH,EAAIqG,OAASF,EAAYz1B,CAC/B02B,GAAMpH,EAAIvtB,KAAOwzB,EAAWz1B,CAC5B62B,GAAMrH,EAAIqG,OAASJ,EAAWv1B,CAE9B42B,GAAQhB,EAAIQ,EAAMP,EAAIQ,CACtBQ,GAAQf,EAAIQ,EAAMP,EAAIQ,CACtBO,GAAQd,EAAIQ,EAAMP,EAAIQ,CACtBM,GAAQb,EAAIQ,EAAMP,EAAIQ,CAGtB,IAAGC,EAAO,GAAKC,EAAO,GAAKC,EAAO,GAAKC,EAAO,EAAG,MAAO,KAExDX,GAAM9G,EAAI0H,MAAQ1B,EAAQx1B,CAC1Bu2B,GAAM/G,EAAIqG,OAASL,EAAQt1B,CAC3Bs2B,GAAMhH,EAAI0H,MAAQxB,EAAS11B,CAC3By2B,GAAMjH,EAAIqG,OAASH,EAASx1B,CAC5Bw2B,GAAMlH,EAAI0H,MAAQvB,EAAY31B,CAC9B22B,GAAMnH,EAAIqG,OAASF,EAAYz1B,CAC/B02B,GAAMpH,EAAI0H,MAAQzB,EAAWz1B,CAC7B62B,GAAMrH,EAAIqG,OAASJ,EAAWv1B,CAE9B42B,GAAQhB,EAAIQ,EAAMP,EAAIQ,CACtBQ,GAAQf,EAAIQ,EAAMP,EAAIQ,CACtBO,GAAQd,EAAIQ,EAAMP,EAAIQ,CACtBM,GAAQb,EAAIQ,EAAMP,EAAIQ,CAGtB,IAAGC,EAAO,GAAKC,EAAO,GAAKC,EAAO,GAAKC,EAAO,EAAG,MAAO,KAExD,OAAO,OAqBDvG,GAAArxB,UAAA0wB,aAAP,SAAoB/vB,EAAUE,EAAU2vB,EAA2BC,GAA3B,GAAAD,QAAA,GAAyB,CAAzBA,EAAA,MAA2B,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,MAElE,IAAI3yB,KAAKg0B,qBACR,MAED,IAAGh0B,KAAKi0B,mBAAqB,IAAMtB,EAClC,MAED,IAAI3yB,KAAK82B,eAAgB,CACxB,GAAIhiB,GAAkB9U,KAAK82B,eAAe77B,MAC1C,IAAI++B,GAAkB,KACtB,KAAK,GAAIt/B,GAAW,EAAGA,EAAIoa,EAAUpa,IAAK,CACzC,GAAIsF,KAAK82B,eAAep8B,GAAGk4B,aAAa/vB,EAAGE,EAAG2vB,EAAW,MAAO,CAC/DsH,EAAU,IACV,QAIF,IAAKA,EACJ,MAAO,OAGT,MAAOh6B,MAAKyyB,sBAAsB5vB,EAAGE,EAAG2vB,EAAWC,GAG7CY,GAAArxB,UAAA+3B,OAAP,WAEC,MAAOj6B,MAAK+zB,kBAAoB,EAS1BR,GAAArxB,UAAAojB,OAAP,SAAcnQ,EAAiB+kB,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAG9B,GAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIpc,EAEJ,IAAIic,GAAU,KACbA,EAASlkB,EAAAvZ,QAASmc,WAElBshB,GAAOtM,WAERwM,GAAQjlB,EAAOmlB,SAASt6B,KAAK60B,WAAWlzB,SACxCy4B,GAAMxM,WAENyM,GAAQH,EAAOK,aAAaH,EAC5BC,GAAMzM,WAEN,IAAIyM,EAAMp/B,OAAS,IAAM,CACxBo/B,EAAMx3B,EAAIq3B,EAAOn3B,CACjBs3B,GAAMt3B,EAAIm3B,EAAOr3B,CACjBw3B,GAAM3iB,EAAI,CACV2iB,GAAMzM,YAGPuM,EAAQC,EAAMG,aAAaF,EAE3Bpc,GAAMlI,EAAAtZ,QAAcuxB,kBAEpB/P,GAAI,GAAKoc,EAAMx3B,CACfob,GAAI,GAAKoc,EAAMt3B,CACfkb,GAAI,GAAKoc,EAAM3iB,CACfuG,GAAI,GAAK,CAETA,GAAI,GAAKkc,EAAMt3B,CACfob,GAAI,GAAKkc,EAAMp3B,CACfkb,GAAI,GAAKkc,EAAMziB,CACfuG,GAAI,GAAK,CAETA,GAAI,GAAKmc,EAAMv3B,CACfob,GAAI,GAAKmc,EAAMr3B,CACfkb,GAAI,IAAMmc,EAAM1iB,CAChBuG,GAAI,IAAM,CAEV,IAAIjJ,GAAa,GAAIc,GAAArZ,OACrBuY,GAAE6Z,gBAAgB5Q,EAElB,IAAI5D,GAAerF,EAAEoF,YAAY,EAEjCpa,MAAKyjB,UAAYpJ,EAAIxX,EAAEsf,EAAA1lB,QAAW25B,kBAClCp2B,MAAK0jB,UAAYrJ,EAAItX,EAAEof,EAAA1lB,QAAW25B,kBAClCp2B,MAAKo1B,UAAY/a,EAAI3C,EAAEyK,EAAA1lB,QAAW25B,mBA0B5B7C,GAAArxB,UAAAu2B,cAAP,SAAqBhH,EAAatc,GAAA,GAAAA,QAAA,GAAmB,CAAnBA,EAAA,KAEjCnV,KAAKw0B,cAAcwD,MAAMvG,EAAM5uB,EAAG4uB,EAAM1uB,EAAG,EAC3C,IAAImiB,GAAellB,KAAKyd,eAAe9a,gBAAgB3C,KAAKw0B,cAAex0B,KAAKw0B,cAEhF,KAAKrf,EACJA,EAAS,GAAIke,GAAA52B,OAEd0Y,GAAOtS,EAAIqiB,EAAIriB,CACfsS,GAAOpS,EAAImiB,EAAIniB,CAEf,OAAOoS,GA4BDoe,GAAArxB,UAAAs4B,gBAAP,SAAuB74B,GAEtB,MAAO3B,MAAKyd,eAAe9a,gBAAgBhB,GAUrC4xB,GAAArxB,UAAAu4B,UAAP,SAAiB1hB,EAAWC,EAAWC,GAEtC,GAAIF,GAAM,GAAKC,GAAM,GAAKC,GAAM,EAC/B,MAEDjZ,MAAK+1B,OAAOlzB,GAAKkW,CACjB/Y,MAAK+1B,OAAOhzB,GAAKiW,CACjBhZ,MAAK+1B,OAAOre,GAAKuB,CAEjBjZ,MAAKsV,kCAAkCzJ,EAAApP,QAAuBgN,iBAGxD8pB,GAAArxB,UAAAw4B,MAAP,WAEC16B,KAAK4R,QAAU,IAEf,IAAG5R,KAAK60B,WAAWhhB,SAClB7T,KAAK60B,WAAWtjB,eAEjB,IAAGvR,KAAK60B,WAAW3gB,eAClBlU,KAAK60B,WAAWrjB,qBAGjBxR,MAAKyR,MAAQ,IAEbzR,MAAK0R,SAAW,MAKV6hB,GAAArxB,UAAA+rB,wBAAP,SAA+BF,GAE9B,GAAI/tB,KAAK20B,iBAAmBha,EAAAle,QAAgBwN,aAAc,CACzD,GAAI0wB,GAAwB5M,EAAgB3T,WAC5C,IAAIic,GAAiBsE,EAAM,EAC3BA,GAAM,GAAG7T,SAAS9mB,KAAKulB,cACvB8Q,GAAMxzB,EAAI7C,KAAK+2B,MACfV,GAAMtzB,EAAI/C,KAAKq1B,MACfgB,GAAM3e,EAAI1X,KAAKi1B,MACfj1B,MAAKq0B,mBAAmBna,UAAUygB,EAGlC,IAAI36B,KAAK+1B,QAAU/1B,KAAKy0B,eAAiB/Z,EAAAje,QAAcwM,YACtDjJ,KAAKq0B,mBAAmBxa,oBAAoB7Z,KAAK+1B,OAAOlzB,EAAE7C,KAAK+2B,QAAS/2B,KAAK+1B,OAAOhzB,EAAE/C,KAAKq1B,QAASr1B,KAAK+1B,OAAOre,EAAE1X,KAAKi1B,OAExH,OAAOj1B,MAAKq0B,mBAGb,MAAOr0B,MAAKyd,eAMN8V,GAAArxB,UAAAwB,oBAAP,SAA2BszB,EAAaC,GAEvCzuB,EAAAtG,UAAMwB,oBAAmB1I,KAAAgF,KAACg3B,EAAMC,EAEhC,IAAIj3B,KAAK46B,iBAAiB5D,GACzB,MAED,QAAQA,GACP,IAAKv3B,GAAAhD,QAAmBy6B,cACvBl3B,KAAKm3B,sBAAwB,KAC7B,MACD,KAAK13B,GAAAhD,QAAmBmpB,uBACvB5lB,KAAKo3B,+BAAiC,IACtC,QAYHp1B,QAAAC,eAAWsxB,EAAArxB,UAAA,uB/B2mHJC,I+B3mHP,WAEC,MAAOnC,MAAK+yB,qB/B4mHN1wB,WAAY,KACZC,aAAc,M+BvmHrBN,QAAAC,eAAWsxB,EAAArxB,UAAA,sB/B6mHJC,I+B7mHP,WAEC,IAAKnC,KAAK66B,kBACT76B,KAAK66B,kBAAoB,GAAIvH,GAAA72B,QAAiBuD,KAE/C,OAAOA,MAAK66B,mB/B6mHNx4B,WAAY,KACZC,aAAc,M+BxmHdixB,GAAArxB,UAAAmuB,WAAP,SAAkB7sB,GAEjBxD,KAAKkwB,SAAW1sB,CAEV,IAAIA,EACTxD,KAAKuyB,WAAW/uB,EAAMgB,QAAShB,EAAMsyB,yBAErC91B,MAAKuyB,WAAW,KAAM,KAEvBvyB,MAAKsV,kCAAkCzJ,EAAApP,QAAuBiN,KAGxD6pB,GAAArxB,UAAAoT,kCAAP,SAAyCwlB,GAExC,GAAIC,IAAuB/6B,KAAKosB,wBAA0B0O,GAAaA,CACvE,KAAKC,EACJ,MAAO,KAER/6B,MAAKosB,yBAA2B0O,CAEhC,IAAIC,EAAelvB,EAAApP,QAAuBgN,gBAAiB,CAC1DzJ,KAAKu1B,4BAA8B,IACnCv1B,MAAK22B,oBAAsB,IAE3B,IAAI32B,KAAKg7B,SACRh7B,KAAK4hB,2BAEN,IAAI5hB,KAAKkwB,SACRlwB,KAAKkwB,SAASxG,oBAEf,IAAI1pB,KAAKo3B,+BACRp3B,KAAKi7B,cAAcj7B,KAAKk7B,yBAA2Bl7B,KAAKk7B,uBAAyB,GAAIz7B,GAAAhD,QAAmBgD,EAAAhD,QAAmBmpB,uBAAwB5lB,QAGrJ,MAAO,OAMDuzB,GAAArxB,UAAAqwB,WAAP,SAAkB1yB,EAAa5D,GAE9B,GAAIk/B,GAAuBn7B,KAAKwE,SAAW3E,CAE3C,IAAIG,KAAKwE,SAAWxE,KAAK+yB,oBAAqB,CAE7C/yB,KAAKwE,QAAQ42B,sBAAsBp7B,KAAK+yB,oBAGxC/yB,MAAK+yB,oBAAoBC,mBAAmBhzB,KAG5CA,MAAK+Z,QAIN/Z,KAAK+yB,oBAAsB/yB,KAAK61B,oBAAsB55B,CAGtD,IAAIk/B,EACHn7B,KAAKwE,QAAU3E,CAEhB,IAAIG,KAAKwE,SAAWxE,KAAK+yB,oBAAqB,CAE7C/yB,KAAKwE,QAAQ62B,oBAAoBr7B,KAAK+yB,oBAGtC/yB,MAAK+yB,oBAAoBtuB,iBAAiBzE,MAG3C,GAAIm7B,GAAgBn7B,KAAKm3B,sBACxBn3B,KAAKi7B,cAAcj7B,KAAKs7B,gBAAkBt7B,KAAKs7B,cAAgB,GAAI77B,GAAAhD,QAAmBgD,EAAAhD,QAAmBy6B,cAAel3B,QAMnHuzB,GAAArxB,UAAAsrB,sBAAP,WAEC,GAAIxtB,KAAK6hB,aACR7hB,KAAK6hB,aAAaG,kBAEnBhiB,MAAK2zB,iBAAiB7M,SAAS9mB,KAAK60B,WAAWhhB,SAE/C,IAAI7T,KAAK+1B,OAAQ,CAChB,IAAK/1B,KAAKi2B,YACTj2B,KAAKi2B,YAAc,GAAIjgB,GAAAvZ,OAExBuD,MAAKi2B,YAAYpzB,EAAI7C,KAAK+1B,OAAOlzB,EAAE7C,KAAK60B,WAAWwB,MAAMxzB,CACzD7C,MAAKi2B,YAAYlzB,EAAI/C,KAAK+1B,OAAOhzB,EAAE/C,KAAK60B,WAAWwB,MAAMtzB,CACzD/C,MAAKi2B,YAAYve,EAAI1X,KAAK+1B,OAAOre,EAAE1X,KAAK60B,WAAWwB,MAAM3e,CACzD1X,MAAK2zB,iBAAiB9Z,oBAAoB7Z,KAAKi2B,YAAYpzB,GAAI7C,KAAKi2B,YAAYlzB,GAAI/C,KAAKi2B,YAAYve,EACrG,IAAI1X,KAAKy0B,eAAiB/Z,EAAAje,QAAcwM,YACvCjJ,KAAK2zB,iBAAiB/Z,kBAAkB5Z,KAAK+1B,OAAOlzB,EAAG7C,KAAK+1B,OAAOhzB,EAAG/C,KAAK+1B,OAAOre,GAIpF,GAAI1X,KAAKkwB,WAAalwB,KAAKkwB,SAASqL,SACnCv7B,KAAK2zB,iBAAiBtH,OAAOrsB,KAAKkwB,SAASzS,eAE5Czd,MAAKiX,eAAiB,KACtBjX,MAAKw7B,eAAiB,KACtBx7B,MAAKy7B,eAAiB,KACtBz7B,MAAK07B,WAAa,KAClB17B,MAAK27B,YAAc,KAEnB37B,MAAKosB,yBAA2BvgB,EAAApP,QAAuBgN,gBAMjD8pB,GAAArxB,UAAA05B,iBAAP,WAEC,GAAI57B,KAAK6hB,aACR7hB,KAAK6hB,aAAaC,QAGnB,IAAI3e,GAAanD,KAAKwzB,cAAcv4B,MACpC,KAAK,GAAIP,GAAW,EAAGA,EAAIyI,IAAOzI,EACjCsF,KAAKwL,cAAcxL,KAAKwzB,cAAc94B,GAEvCsF,MAAKwzB,cAAcv4B,OAAS,EAMtBs4B,GAAArxB,UAAA25B,YAAP,WAEC,GAAI77B,KAAKosB,wBAA0BvgB,EAAApP,QAAuB4M,QACzDrJ,KAAK87B,gBAEN,OAAO97B,MAAKg0B,qBAMNT,GAAArxB,UAAA65B,iBAAP,WAEC,GAAI/7B,KAAKosB,wBAA0BvgB,EAAApP,QAAuB6M,QACzDtJ,KAAKg8B,eAEN,OAAOh8B,MAAKi0B,iBAMNV,GAAArxB,UAAA+5B,gBAAP,WAEC,GAAIj8B,KAAKosB,wBAA0BvgB,EAAApP,QAAuB8M,MACzDvJ,KAAKk8B,cAEN,OAAOl8B,MAAKm8B,gBAGN5I,GAAArxB,UAAAk6B,cAAP,WAEC,GAAIp8B,KAAKosB,wBAA0BvgB,EAAApP,QAAuB8M,MACzDvJ,KAAKk8B,cAEN,OAAOl8B,MAAKk0B,kBAGNX,GAAArxB,UAAAm6B,yBAAP,WAEC,GAAIr8B,KAAKosB,wBAA0BvgB,EAAApP,QAAuB+M,gBACzDxJ,KAAKs8B,uBAEN,OAAOt8B,MAAKu8B,yBAONhJ,GAAArxB,UAAAs6B,iBAAP,WAEC,GAAIx8B,KAAKosB,wBAA0BvgB,EAAApP,QAAuB2M,cACzDpJ,KAAK6vB,qBAEN,OAAO7vB,MAAKo0B,wBAA0Bp0B,KAAKm0B,sBAGrCZ,GAAArxB,UAAAgnB,iBAAP,SAAwBuT,IAUhBlJ,GAAArxB,UAAA4yB,sBAAR,SAA8Bj0B,GAE7B,GAAIb,KAAKiX,eACR,MAEDjX,MAAKiX,eAAiB,IAEtBjX,MAAKsV,kCAAkCzJ,EAAApP,QAAuBgN,iBAMvD8pB,GAAArxB,UAAA6yB,4BAAR,SAAoCl0B,GAEnCb,KAAKsV,kCAAkCzJ,EAAApP,QAAuB+M,iBAGxD+pB,GAAArxB,UAAAwnB,mBAAP,WAEC1pB,KAAKyzB,kBAAoB,IACzBzzB,MAAK0zB,qBAAuB,IAE5B,IAAI1zB,KAAKg7B,SACRh7B,KAAK4hB,2BAEN,IAAI5hB,KAAKkwB,SACRlwB,KAAKkwB,SAASxG,qBAGT6J,GAAArxB,UAAAymB,kBAAP,WAEC3oB,KAAKyzB,kBAAoB,KAEzB,IAAIzzB,KAAK4oB,aAAe,KACvB5oB,KAAK4oB,YAAc,GAAIuK,GAAA12B,QAGlB82B,GAAArxB,UAAA21B,qBAAP,WAEC73B,KAAK0zB,qBAAuB,KAE5B,IAAI1zB,KAAK83B,gBAAkB,KAC1B93B,KAAK83B,eAAiB,GAAI1E,GAAA32B,QAGpB82B,GAAArxB,UAAA+4B,cAAR,SAAsBp6B,GAGrBb,KAAKwzB,cAAcpwB,KAAKvC,GAGjB0yB,GAAArxB,UAAAo0B,WAAR,SAAmB1f,GAElB,GAAI5W,KAAK+2B,QAAUngB,EAClB,MAED5W,MAAK60B,WAAWwB,MAAMxzB,EAAI+T,CAE1B5W,MAAK60B,WAAWld,qBAGT4b,GAAArxB,UAAAozB,WAAR,SAAmB1e,GAElB,GAAI5W,KAAKq1B,QAAUze,EAClB,MAED5W,MAAK60B,WAAWwB,MAAMtzB,EAAI6T,CAE1B5W,MAAK60B,WAAWld,qBAGT4b,GAAArxB,UAAAgzB,WAAR,SAAmBte,GAElB,GAAI5W,KAAKi1B,QAAUre,EAClB,MAED5W,MAAK60B,WAAWwB,MAAM3e,EAAId,CAE1B5W,MAAK60B,WAAWld,qBAGV4b,GAAArxB,UAAA2tB,oBAAP,WAEC7vB,KAAKo0B,uBAA0Bp0B,KAAa,SAAGA,KAAKkwB,SAASY,eAAiB9wB,KAAKkwB,SAASkE,uBAAyB,IAGrH,IAAIp0B,KAAKo0B,wBAA0Bp0B,KAAKkwB,WAAalwB,KAAKgpB,gBACzDhpB,KAAKgpB,gBAAmBhpB,KAAKkwB,SAASlH,eAEvChpB,MAAKosB,yBAA2BvgB,EAAApP,QAAuB2M,cAGhDmqB,GAAArxB,UAAA45B,eAAR,WAEC97B,KAAKg0B,qBAAwBh0B,KAAa,SAAGA,KAAK8zB,qBAAuB9zB,KAAKkwB,SAAS2L,cAAgB77B,KAAK8zB,mBAE5G9zB,MAAKosB,yBAA2BvgB,EAAApP,QAAuB4M,QAGhDkqB,GAAArxB,UAAA85B,cAAR,WAECh8B,KAAKi0B,iBAAoBj0B,KAAKkwB,UAAYlwB,KAAKkwB,SAAS6L,qBAAuB,EAAI/7B,KAAKkwB,SAAS6L,mBAAqB/7B,KAAK+zB,eAE3H/zB,MAAKosB,yBAA2BvgB,EAAApP,QAAuB6M,QAGhDiqB,GAAArxB,UAAAg6B,aAAR,WAECl8B,KAAKm8B,gBAAmBn8B,KAAKkwB,UAAYlwB,KAAKkwB,SAAS+L,kBAAqBj8B,KAAK82B,gBAAkB,KAAO92B,KAAKkwB,SAAS+L,kBAAkBS,QAAQ18B,KAAK82B,iBAAmB92B,KAAKkwB,SAAS+L,kBAAkBS,SAAY18B,KAAK82B,gBAAkB,MAAQ92B,KAAK82B,gBAAkB,IAE5Q92B,MAAKk0B,kBAAkBj5B,OAAS,CAEhC,IAAI+E,KAAKm8B,iBAAmBn8B,KAAKm8B,gBAAgBlhC,OAAQ,CACxD,GAAI0hC,GAAmB38B,KAAKm8B,gBAAgBlhC,MAC5C,IAAI0V,EACJ,IAAIisB,EACJ,IAAIC,EACJ,KAAK,GAAIniC,GAAW,EAAGA,EAAIiiC,EAAWjiC,IAAK,CAC1CkiC,EAAmB58B,KAAKm8B,gBAAgBzhC,EACxCiW,GAAcisB,EAAiB3hC,MAC/B4hC,GAAmB,GAAIl8B,MACvB,KAAK,GAAIm8B,GAAW,EAAGA,EAAInsB,EAAamsB,IACvCD,EAAiBz5B,KAAKw5B,EAAiBE,GAAGz5B,GAE3CrD,MAAKk0B,kBAAkB9wB,KAAKy5B,IAI9B78B,KAAKosB,yBAA2BvgB,EAAApP,QAAuB8M,MAGhDgqB,GAAArxB,UAAAo6B,sBAAR,WAEC,IAAKt8B,KAAKu8B,yBACTv8B,KAAKu8B,yBAA2B,GAAIzwB,GAAArP,OAErC,IAAIuD,KAAKs0B,wBAA0Bt0B,KAAKkwB,UAAYlwB,KAAKkwB,SAASmM,2BAA4B,CAC7Fr8B,KAAKu8B,yBAAyBzV,SAAS9mB,KAAKkwB,SAASmM,2BAErD,IAAIr8B,KAAK60B,WAAW3gB,eACnBlU,KAAKu8B,yBAAyBzN,QAAQ9uB,KAAK60B,WAAW3gB,oBACjD,CACN,GAAIlU,KAAK60B,WAAW3gB,eACnBlU,KAAKu8B,yBAAyBzV,SAAS9mB,KAAK60B,WAAW3gB,oBAEvDlU,MAAKu8B,yBAAyBxiB,QAGhC/Z,KAAKosB,yBAA2BvgB,EAAApP,QAAuB+M,gBAGjD+pB,GAAArxB,UAAA2wB,gBAAP,WAEC,GAAI7yB,KAAK0R,SACR1R,KAAKs3B,aAAe,KAErBt3B,MAAKsV,kCAAkCzJ,EAAApP,QAAuB6M,SAGxDiqB,GAAArxB,UAAA6X,MAAP,WAECvR,EAAAtG,UAAM6X,MAAK/e,KAAAgF,KAEX,IAAItF,EAEJsF,MAAKu8B,yBAA2B,IAChCv8B,MAAKm8B,gBAAkB,KAGjB5I,GAAArxB,UAAA0f,0BAAP,WAEC5hB,KAAKwL,cAAc,GAAI/L,GAAAhD,QAAmBgD,EAAAhD,QAAmBsgC,4BAA6B/8B,OAGpFuzB,GAAArxB,UAAAuwB,sBAAP,SAA6B5vB,EAAUE,EAAU2vB,EAAmBC,GAEnE,MAAO,OAET,OAAAY,IAzsE4BjrB,EAAA7L,QA2sE5BuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M/B0/GAzI,GAAQ0B,Q+B1/GO82B,I/B4/GZyJ,2BAA2B11B,UAAUmO,sCAAsCnO,UAAU0c,kCAAkC1c,UAAUgT,gCAAgChT,UAAUiT,qCAAqCjT,UAAU21B,6BAA6B31B,UAAU41B,8BAA8B51B,UAAUkT,gCAAgClT,UAAUqB,oCAAoCrB,UAAUwB,wCAAwC,wCAAwCI,iDAAiD,iDAAiDY,0CAA0C,0CAA0C+L,oCAAoC,oCAAoC4K,uCAAuC,uCAAuCoF,+CAA+C,+CAA+CpL,2CAA2C,2CAA2C0iB,2CAA2C,6CAA6CC,sCAAsC,SAASnjC,EAAQkB,EAAOJ,GAC1mC,kBAEMs0B,wCAAwC,SAASp1B,EAAQkB,EAAOJ,GACtE,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IgCl3LnF,IAAAkY,GAAApmB,EAAiC,6CAEjC,IAAAswB,GAAAtwB,EAAmC,oDAGnC,IAAAojC,GAAApjC,EAA0B,uCAG1B,IAAAqjC,GAAA,SAAA90B,GAAwBV,EAAAw1B,EAAA90B,EA2BvB,SAAA80B,KAEC90B,EAAAxN,KAAAgF,KA3BOA,MAAAyK,OAAgB,QAChBzK,MAAAu9B,QAAiB,CACjBv9B,MAAAw9B,QAAiB,CACjBx9B,MAAAy9B,QAAiB,CAEjBz9B,MAAA09B,cAAuB,QACvB19B,MAAA29B,SAAkB,CACnB39B,MAAA49B,WAAoB,CACpB59B,MAAA69B,WAAoB,CACpB79B,MAAA89B,WAAoB,CAEnB99B,MAAA+9B,UAAmB,CACpB/9B,MAAAg+B,YAAqB,CACrBh+B,MAAAi+B,YAAqB,CACrBj+B,MAAAk+B,YAAqB,CAEpBl+B,MAAAm+B,SAAkB,CACnBn+B,MAAAo+B,WAAoB,CACpBp+B,MAAAq+B,WAAoB,CACpBr+B,MAAAs+B,WAAoB,CAEnBt+B,MAAAu+B,gBAA0B,MASlCv8B,OAAAC,eAAWq7B,EAAAp7B,UAAA,kBhCu2LJC,IgCv2LP,WAEC,MAAOnC,MAAKu+B,iBhCw2LNh7B,IgCr2LP,SAA0BC,GAEzB,GAAIxD,KAAKu+B,iBAAmB/6B,EAC3B,MAEDxD,MAAKu+B,gBAAkB/6B,CAEvB,IAAIA,EAAO,CACV,GAAIxD,KAAKw+B,eAAiB,KACzBx+B,KAAKw+B,cAAgBx+B,KAAK6tB,qBAE3B7tB,MAAKw+B,cAAcC,MAAQz+B,SACrB,CACNA,KAAKw+B,cAAc/6B,SACnBzD,MAAKw+B,cAAgB,KAGtBx+B,KAAKwL,cAAc,GAAI6xB,GAAA5gC,QAAW4gC,EAAA5gC,QAAWiiC,uBhCo2LvCr8B,WAAY,KACZC,aAAc,MgCl2Ldg7B,GAAAp7B,UAAA2rB,oBAAP,WAEC,KAAM,IAAIxN,GAAA5jB,QAGXuF,QAAAC,eAAWq7B,EAAAp7B,UAAA,YhCm2LJC,IgCn2LP,WAEC,MAAOnC,MAAK+9B,WhCo2LNx6B,IgCj2LP,SAAoBC,GAEnB,GAAIA,EAAQ,EACXA,EAAQ,CAETxD,MAAK+9B,UAAYv6B,CACjBxD,MAAK2+B,kBhCi2LCt8B,WAAY,KACZC,aAAc,MgC/1LrBN,QAAAC,eAAWq7B,EAAAp7B,UAAA,WhCk2LJC,IgCl2LP,WAEC,MAAOnC,MAAKm+B,UhCm2LN56B,IgCh2LP,SAAmBC,GAElB,GAAIA,EAAQ,EACXA,EAAQ,CAETxD,MAAKm+B,SAAW36B,CAChBxD,MAAK4+B,iBhCg2LCv8B,WAAY,KACZC,aAAc,MgC91LrBN,QAAAC,eAAWq7B,EAAAp7B,UAAA,ShCi2LJC,IgCj2LP,WAEC,MAAOnC,MAAKyK,QhCk2LNlH,IgC/1LP,SAAiBC,GAEhBxD,KAAKyK,OAASjH,CACdxD,MAAKu9B,SAAYv9B,KAAKyK,QAAU,GAAM,KAAM,GAC5CzK,MAAKw9B,SAAYx9B,KAAKyK,QAAU,EAAK,KAAM,GAC3CzK,MAAKy9B,SAAWz9B,KAAKyK,OAAS,KAAM,GAEpCzK,MAAK4+B,eACL5+B,MAAK2+B,kBhC+1LCt8B,WAAY,KACZC,aAAc,MgC71LrBN,QAAAC,eAAWq7B,EAAAp7B,UAAA,WhCg2LJC,IgCh2LP,WAEC,MAAOnC,MAAK29B,UhCi2LNp6B,IgC91LP,SAAmBC,GAElB,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAETxD,MAAK29B,SAAWn6B,CAChBxD,MAAK6+B,iBhC81LCx8B,WAAY,KACZC,aAAc,MgC51LrBN,QAAAC,eAAWq7B,EAAAp7B,UAAA,gBhC+1LJC,IgC/1LP,WAEC,MAAOnC,MAAK09B,ehCg2LNn6B,IgC71LP,SAAwBC,GAEvBxD,KAAK09B,cAAgBl6B,CACrBxD,MAAK6+B,iBhC81LCx8B,WAAY,KACZC,aAAc,MgC51Lbg7B,GAAAp7B,UAAA28B,cAAR,WAEC7+B,KAAK49B,YAAe59B,KAAK09B,eAAiB,GAAM,KAAM,IAAK19B,KAAK29B,QAChE39B,MAAK69B,YAAe79B,KAAK09B,eAAiB,EAAK,KAAM,IAAK19B,KAAK29B,QAC/D39B,MAAK89B,YAAc99B,KAAK09B,cAAgB,KAAM,IAAK19B,KAAK29B,SAGlDL,GAAAp7B,UAAA4rB,2BAAP,SAAkCzS,EAAgB0S,EAA0B5Y,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAE3E,KAAM,IAAIkL,GAAA5jB,QAGH6gC,GAAAp7B,UAAAy8B,eAAR,WAEC3+B,KAAKg+B,YAAch+B,KAAKu9B,QAAQv9B,KAAK+9B,SACrC/9B,MAAKi+B,YAAcj+B,KAAKw9B,QAAQx9B,KAAK+9B,SACrC/9B,MAAKk+B,YAAcl+B,KAAKy9B,QAAQz9B,KAAK+9B,UAG9BT,GAAAp7B,UAAA08B,cAAR,WAEC5+B,KAAKo+B,WAAap+B,KAAKu9B,QAAQv9B,KAAKm+B,QACpCn+B,MAAKq+B,WAAar+B,KAAKw9B,QAAQx9B,KAAKm+B,QACpCn+B,MAAKs+B,WAAat+B,KAAKy9B,QAAQz9B,KAAKm+B,SAGrCn8B,QAAAC,eAAWq7B,EAAAp7B,UAAA,gBhCw1LJC,IgCx1LP,WAEC,MAAOnC,MAAKw+B,ehCy1LNj7B,IgCt1LP,SAAwBC,GAEvBxD,KAAKw+B,cAAgBh7B,CACrBxD,MAAKw+B,cAAcC,MAAQz+B,MhCu1LrBqC,WAAY,KACZC,aAAc,MgCt1LtB,OAAAg7B,IAzKwB/S,EAAA9tB,QA2KxBuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MhCy1LAzI,GAAQ0B,QgCz1LO6gC,IhC21LZ9c,6CAA6ClZ,UAAUwlB,oDAAoD,oDAAoDgS,uCAAuC,yCAAyCC,yCAAyC,SAAS9kC,EAAQkB,EAAOJ,GACnT,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IiCnhMnF,IAAA62B,GAAA/kC,EAA4B,oCAG5B,IAAAglC,GAAAhlC,EAA0B,mCAE1B,IAAAgzB,GAAAhzB,EAA0B,uCAC1B,IAAAmnB,GAAAnnB,EAA2B,uCAI3B,IAAAuD,GAAA,SAAAgL,GAAyBV,EAAAtK,EAAAgL,EAYxB,SAAAhL,GAAY0hC,EAAsBC,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAEjC32B,EAAAxN,KAAAgF,KARMA,MAAAo/B,eAA6B,GAAIJ,GAAAviC,OAIjCuD,MAAAq/B,gBAA8B,GAAIL,GAAAviC,OAMxCuD,MAAK4nB,WAAa,IAElB5nB,MAAKk/B,WAAaA,CAClBl/B,MAAKm/B,YAAcA,CAGnBn/B,MAAKkoB,YAAc9G,EAAA3kB,QAAWokB,KAG/B7e,OAAAC,eAAWzE,EAAA0E,UAAA,ajCogMJC,IiCpgMP,WAEC,MAAO3E,GAAWkL,WjCqgMZrG,WAAY,KACZC,aAAc,MiClgMd9E,GAAA0E,UAAA4rB,2BAAP,SAAkCzS,EAAgB0S,EAA0B5Y,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAE3E,KAAM,IAAI8pB,GAAAxiC,QAAU,wEA/BPe,GAAAkL,UAAmB,oBAiClC,OAAAlL,IAnCyByvB,EAAAxwB,QAqCzBuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MjCugMAzI,GAAQ0B,QiCvgMOe,IjCygMZ8hC,mCAAmCh4B,UAAUi4B,oCAAoCj4B,UAAUmZ,uCAAuC,uCAAuC4O,uCAAuC,yCAAyCmQ,0CAA0C,SAASvlC,EAAQkB,EAAOJ,GAC9T,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IkC1jMnF,IAAAkf,GAAAptB,EAA6B,2CAE7B,IAAAmnB,GAAAnnB,EAA2B,uCAC3B,IAAAqtB,GAAArtB,EAA+B,4CAI/B,IAAAoQ,GAAApQ,EAA2B,uCAO3B,IAAAoD,GAAA,SAAAmL,GAA0BV,EAAAzK,EAAAmL,EA8GzB,SAAAnL,GAAYoqB,EAAuBgY,EAAwBC,EAAsBC,GA9GlF,GAAA5/B,GAAAC,IA8GkF,IAAA2/B,QAAA,GAAoB,CAApBA,EAAA,EAEhFn3B,EAAAxN,KAAAgF,KAEAA,MAAK+nB,gCAAkC,SAAClnB,GAAqB,MAAAd,GAAKioB,wBAAwBnnB,GAE1Fb,MAAK4nB,WAAa,IAElB5nB,MAAKynB,SAAWA,CAEhBznB,MAAK4/B,eAAiBH,CACtBz/B,MAAK6/B,aAAeH,CACpB1/B,MAAK8/B,eAAiBH,EAAU,EAGhC3/B,MAAKkoB,YAAc9G,EAAA3kB,QAAWmkB,iBA5G/B5e,OAAAC,eAAW5E,EAAA6E,UAAA,YlC8jMJC,IkC9jMP,WAEC,MAAOnC,MAAKmoB,WlC+jMN9lB,WAAY,KACZC,aAAc,MkC1jMrBN,QAAAC,eAAW5E,EAAA6E,UAAA,alCgkMJC,IkChkMP,WAEC,MAAO9E,GAAYqL,WlCikMbrG,WAAY,KACZC,aAAc,MkC5jMrBN,QAAAC,eAAW5E,EAAA6E,UAAA,gBlCkkMJC,IkClkMP,WAEC,MAAOnC,MAAK4/B,gBlCmkMNv9B,WAAY,KACZC,aAAc,MkCjkMrBN,QAAAC,eAAW5E,EAAA6E,UAAA,iBlCokMJqB,IkCpkMP,SAAyBC,GAExB,GAAIxD,KAAK4/B,gBAAkBp8B,EAC1B,MAEDxD,MAAK4/B,eAAiBp8B,CAEtBxD,MAAK+/B,sBlCmkMC19B,WAAY,KACZC,aAAc,MkC9jMrBN,QAAAC,eAAW5E,EAAA6E,UAAA,elCokMJC,IkCpkMP,WAEC,MAAOnC,MAAK6/B,clCqkMNt8B,IkClkMP,SAAuBC,GAEtB,GAAIxD,KAAK6/B,cAAgBr8B,EACxB,MAEDxD,MAAK6/B,aAAer8B,CAEpBxD,MAAK+/B,sBlCikMC19B,WAAY,KACZC,aAAc,MkC5jMrBN,QAAAC,eAAW5E,EAAA6E,UAAA,YlCkkMJC,IkClkMP,WAEC,MAAOnC,MAAKuoB,WlCmkMNhlB,IkChkMP,SAAoBC,GAEnB,GAAIxD,KAAKynB,SACRznB,KAAKynB,SAASe,aAAaxoB,KAE5BA,MAAKuoB,UAAY/kB,CAEjB,IAAIxD,KAAKynB,SACRznB,KAAKynB,SAASiB,UAAU1oB,OlC+jMnBqC,WAAY,KACZC,aAAc,MkC1jMrBN,QAAAC,eAAW5E,EAAA6E,UAAA,alCgkMJC,IkChkMP,WAEC,MAAOnC,MAAK8/B,eAAe,GlCikMrBv8B,IkC9jMP,SAAqBC,GAEpB,GAAIxD,KAAK8/B,gBAAkBt8B,EAC1B,MAEDxD,MAAK8/B,eAAiBt8B,EAAM,EAE5BxD,MAAK+/B,sBlC6jMC19B,WAAY,KACZC,aAAc,MkC/hMrBN,QAAAC,eAAW5E,EAAA6E,UAAA,SlCqiMJC,IkCriMP,WAEC,MAAOnC,MAAK6oB,QlCsiMNtlB,IkCniMP,SAAiBC,GAEhB,GAAIxD,KAAK6oB,QAAUrlB,EAClB,MAED,IAAIxD,KAAK6oB,OACR7oB,KAAK6oB,OAAOnlB,oBAAoB2G,EAAA5N,QAAWgP,sBAAuBzL,KAAK+nB,gCAExE/nB,MAAK6oB,OAASrlB,CAEd,IAAIxD,KAAK6oB,OACR7oB,KAAK6oB,OAAOhlB,iBAAiBwG,EAAA5N,QAAWgP,sBAAuBzL,KAAK+nB,gCAErE/nB,MAAK4pB,qBlCgiMCvnB,WAAY,KACZC,aAAc,MkC1hMdjF,GAAA6E,UAAAymB,kBAAP,WAECngB,EAAAtG,UAAMymB,kBAAiB3tB,KAAAgF,KAEvBA,MAAK4oB,YAAY/lB,EAAI6W,KAAK8J,IAAIxjB,KAAK4/B,eAAe/8B,EAAG7C,KAAK6/B,aAAah9B,EACvE7C,MAAK4oB,YAAY7lB,EAAI2W,KAAK8J,IAAIxjB,KAAK4/B,eAAe78B,EAAG/C,KAAK6/B,aAAa98B,EACvE/C,MAAK4oB,YAAYlR,EAAIgC,KAAK8J,IAAIxjB,KAAK4/B,eAAeloB,EAAG1X,KAAK6/B,aAAanoB,EACvE1X,MAAK4oB,YAAY1kB,MAAQwV,KAAKoF,IAAI9e,KAAK4/B,eAAe/8B,EAAI7C,KAAK6/B,aAAah9B,EAC5E7C,MAAK4oB,YAAYzkB,OAASuV,KAAKoF,IAAI9e,KAAK4/B,eAAe78B,EAAI/C,KAAK6/B,aAAa98B,EAC7E/C,MAAK4oB,YAAY/K,MAAQnE,KAAKoF,IAAI9e,KAAK4/B,eAAeloB,EAAI1X,KAAK6/B,aAAanoB,GAGtEra,GAAA6E,UAAA21B,qBAAP,WAECrvB,EAAAtG,UAAM21B,qBAAoB78B,KAAAgF,KAE1BA,MAAK2oB,mBAEL,IAAIqX,IAAoBhgC,KAAK6/B,aAAah9B,EAAI7C,KAAK4/B,eAAe/8B,GAAG,CACrE,IAAIo9B,IAAqBjgC,KAAK6/B,aAAa98B,EAAI/C,KAAK4/B,eAAe78B,GAAG,CACtE,IAAIm9B,IAAoBlgC,KAAK6/B,aAAanoB,EAAI1X,KAAK4/B,eAAeloB,GAAG,CACrE1X,MAAK83B,eAAej1B,EAAI7C,KAAK4/B,eAAe/8B,EAAIm9B,CAChDhgC,MAAK83B,eAAe/0B,EAAI/C,KAAK4/B,eAAe78B,EAAIk9B,CAChDjgC,MAAK83B,eAAepgB,EAAI1X,KAAK4/B,eAAeloB,EAAIwoB,CAChDlgC,MAAK83B,eAAe9X,OAAStG,KAAKC,KAAKqmB,EAAUA,EAAYC,EAAWA,EAAaC,EAAUA,GAMxF7iC,GAAA6E,UAAA69B,mBAAR,WAEC//B,KAAKwL,cAAc,GAAI8b,GAAA7qB,QAAgB6qB,EAAA7qB,QAAgBktB,oBAAqB3pB,OAGtE3C,GAAA6E,UAAA0nB,kBAAP,WAEC5pB,KAAKwL,cAAc,GAAI8b,GAAA7qB,QAAgB6qB,EAAA7qB,QAAgBotB,wBAAyB7pB,OAGzE3C,GAAA6E,UAAA8lB,wBAAR,SAAgCnnB,GAE/Bb,KAAK4pB,oBAYCvsB,GAAA6E,UAAA4mB,gBAAP,SAAuBC,EAAmCC,GAEzD,MAAO,OAGD3rB,GAAA6E,UAAAgnB,iBAAP,SAAwBC,GAEvBA,EAAUC,gBAAgBppB,MApNb3C,GAAAqL,UAAmB,qBAsNlC,OAAArL,IA3N0BgqB,EAAA5qB,QA6N1BuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MlCihMAzI,GAAQ0B,QkCjhMOY,IlCmhMZojB,uCAAuC,uCAAuCsJ,2CAA2C,2CAA2CC,4CAA4C,4CAA4Cre,uCAAuC,yCAAyCw0B,8CAA8C,SAASlmC,EAAQkB,EAAOJ,GACrZ,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,ImCvwMnF,IAAAi4B,GAAAnmC,EAAiC,6CACjC,IAAAomC,GAAApmC,EAAwB,iCAGxB,IAAAqmC,GAAArmC,EAA2B,oCAE3B,IAAAsmC,GAAAtmC,EAA8B,wCAC9B,IAAAumC,GAAAvmC,EAA4B,qCAC5B,IAAAwmC,GAAAxmC,EAA4B,qCAG5B,IAAAswB,GAAAtwB,EAAoC,oDAkEpC,IAAAymC,GAAA,SAAAl4B,GAA8BV,EAAA44B,EAAAl4B,EAmG7B,SAAAk4B,GAAYC,EAAgCC,GAnG7C,GAAA7gC,GAAAC,IAmGa,IAAA2gC,QAAA,GAA8B,CAA9BA,EAAA,KAAgC,GAAAC,QAAA,GAA4B,CAA5BA,EAAA,KAE3Cp4B,EAAAxN,KAAAgF,KAEAA,MAAK6gC,aAAeF,CACpB3gC,MAAK8gC,YAAcF,CAEnB5gC,MAAK+gC,yBAA2B,SAAClgC,GAAqB,MAAAd,GAAKihC,gBAAgBngC,GAC3Eb,MAAKihC,4BAA8B,SAACpgC,GAAqB,MAAAd,GAAKmhC,mBAAmBrgC,GACjFb,MAAKmhC,wBAA0B,SAACtgC,GAAsB,MAAAd,GAAKqhC,eAAevgC,GAC1Eb,MAAKqhC,qBAAuB,SAACxgC,GAAyB,MAAAd,GAAKuhC,YAAYzgC,GACvEb,MAAKuhC,sBAAwB,SAAC1gC,GAAsB,MAAAd,GAAKyhC,aAAa3gC,IAhEvEmB,OAAAC,eAAWy+B,EAAAx+B,UAAA,WnCqyMJC,ImCryMP,WAEC,MAAOnC,MAAKyhC,UnCsyMNp/B,WAAY,KACZC,aAAc,MmCjuMdo+B,GAAAx+B,UAAAw/B,MAAP,WAEC,IAAK1hC,KAAK2hC,QACT,MAED,IAAI3hC,KAAK6gC,aAAc,CACtB,GAAIe,EACJA,GAAMxB,EAAA3jC,QAAmBqF,YAAY9B,KAAK8gC,YAC1Cc,GAAIC,cAAc7hC,KAAK2hC,SAGxB3hC,KAAK8hC,iBA0KCpB,GAAAx+B,UAAA6/B,KAAP,SAAYC,EAAoBC,EAA8BC,EAAkBC,GAAhD,GAAAF,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,KAE/EniC,KAAKoiC,aAAaL,KAAKC,EAASC,EAASC,EAAIC,GAyFvCzB,GAAAx+B,UAAAmgC,SAAP,SAAgBC,EAAUL,EAA8BC,EAAkBC,GAAhD,GAAAF,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,KAEzEniC,KAAKoiC,aAAaC,SAASC,EAAM,GAAIL,EAASC,EAAIC,GAG3CzB,GAAAx+B,UAAAkgC,WAAR,WAEC,GAAIpiC,KAAK6gC,aAAc,CACtB,GAAIe,GAAyBxB,EAAA3jC,QAAmBqF,YAAY9B,KAAK8gC,YACjE9gC,MAAK2hC,QAAUC,EAAIW,gBACb,CACNviC,KAAK2hC,QAAU,GAAItB,GAAA5jC,QAGpBuD,KAAK2hC,QAAQ99B,iBAAiB28B,EAAA/jC,QAAY+lC,cAAexiC,KAAKmhC,wBAC9DnhC,MAAK2hC,QAAQ99B,iBAAiBy8B,EAAA7jC,QAAWgmC,mBAAoBziC,KAAKihC,4BAClEjhC,MAAK2hC,QAAQ99B,iBAAiBy8B,EAAA7jC,QAAWimC,eAAgB1iC,KAAK+gC,yBAG9D/gC,MAAK2hC,QAAQgB,kBAAkB3iC,KAAKqhC,qBACpCrhC,MAAK2hC,QAAQiB,uBAAuB5iC,KAAKuhC,sBAEzC,OAAOvhC,MAAK2hC,QAGLjB,GAAAx+B,UAAA4/B,eAAR,WAEC9hC,KAAK2hC,QAAQj+B,oBAAoB88B,EAAA/jC,QAAY+lC,cAAexiC,KAAKmhC,wBACjEnhC,MAAK2hC,QAAQj+B,oBAAoB48B,EAAA7jC,QAAWgmC,mBAAoBziC,KAAKihC,4BACrEjhC,MAAK2hC,QAAQj+B,oBAAoB48B,EAAA7jC,QAAWimC,eAAgB1iC,KAAK+gC,yBAEjE,KAAK/gC,KAAK6gC,aACT7gC,KAAK2hC,QAAQkB,MAEd7iC,MAAK2hC,QAAU,KA0BTjB,GAAAx+B,UAAA4gC,OAAP,YAccpC,GAAAqC,aAAd,SAA2BC,GAE1B3C,EAAA5jC,QAAOsmC,aAAaC,GAYPtC,GAAAuC,cAAd,SAA4BC,GAE3B7C,EAAA5jC,QAAOwmC,cAAcC,GAGdxC,GAAAx+B,UAAA8+B,gBAAR,SAAwBngC,GAEvBb,KAAKwL,cAAc3K,GAMZ6/B,GAAAx+B,UAAAo/B,YAAR,SAAoBzgC,GAEnB,GAAIb,KAAK46B,iBAAiB2F,EAAA9jC,QAAe0mC,YAAa,CACrDnjC,KAAKwL,cAAc3K,EACnB,OAAO,UACD,CACN,MAAO,QAOD6/B,GAAAx+B,UAAAs/B,aAAR,SAAqB3gC,GAEpB,GAAIb,KAAK46B,iBAAiB6F,EAAAhkC,QAAY2mC,aAAc,CACnDpjC,KAAKwL,cAAc3K,EACnB,OAAO,UACD,CACN,MAAO,QAID6/B,GAAAx+B,UAAAg/B,mBAAR,SAA2BrgC,GAE1Bb,KAAKwL,cAAc3K,GAMZ6/B,GAAAx+B,UAAAk/B,eAAR,SAAuBvgC,GAEtBb,KAAKyhC,SAA2B5gC,EAAMwiC,OAEtC,IAAIrjC,KAAKyhC,SACRzhC,KAAK8vB,SAAS9vB,KAAKyhC,SAEpBzhC,MAAKwL,cAAc3K,EAEnBb,MAAK8hC,iBAEP,OAAApB,IArhB8BnW,EAAA9tB,QAuhB9BuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MnC+sMAzI,GAAQ0B,QmC/sMOikC,InCitMZ4C,oCAAoCh8B,UAAUi8B,qCAAqCj8B,UAAUk8B,qCAAqCl8B,UAAUm8B,wCAAwCn8B,UAAUo8B,6CAA6Cp8B,UAAUq8B,iCAAiCr8B,UAAUwlB,oDAAoD,sDAAsD8W,wCAAwC,SAAS3pC,EAAQkB,EAAOJ,GAC7c,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IoC1zNnF,IAAAm4B,GAAArmC,EAAyC,oCAGzC,IAAA4pC,GAAA5pC,EAAyC,oCACzC,IAAA6pC,GAAA7pC,EAAyC,uCACzC,IAAA8pC,GAAA9pC,EAAyC,uCAEzC,IAAA4gB,GAAA5gB,EAAyC,mCACzC,IAAA8R,GAAA9R,EAAyC,iDAEzC,IAAAkD,GAAA,SAAAqL,GAAwBV,EAAA3K,EAAAqL,EA4CvB,SAAArL,GAAY6mC,GA5Cb,GAAAjkC,GAAAC,IA4Ca,IAAAgkC,QAAA,GAAwB,CAAxBA,EAAA,KAEXx7B,EAAAxN,KAAAgF,KApCOA,MAAAikC,UAAoB,KAMpBjkC,MAAAG,MAAe,CACfH,MAAAkkC,oBAA6B,CAE7BlkC,MAAAmkC,WAAqB,IAKrBnkC,MAAAokC,QAAkB,IAElBpkC,MAAAqkC,sBACArkC,MAAAskC,oBACAtkC,MAAAukC,oBAqFDvkC,MAAAwkC,KAAe,IAgBfxkC,MAAAmQ,0BAAmC,CAjFzCnQ,MAAKykC,YAAc,GAAInE,GAAA7jC,QAAW6jC,EAAA7jC,QAAWioC,YAAa1kC,KAE1DA,MAAK2kC,sBAAwB,IAE7B3kC,MAAK4kC,aAAe,SAAC/jC,GAAqB,MAAAd,GAAKgQ,kBAAoB,EACnE/P,MAAK6kC,YAAc,SAAChkC,GAAqB,MAAAd,GAAKgQ,kBAAoB,EAClE/P,MAAK8kC,aAAe,SAACjkC,GAAqB,MAAAd,GAAKgQ,kBAAoB,EACnE/P,MAAK+kC,WAAa,SAAClkC,GAAqB,MAAAd,GAAKgQ,kBAAoBhQ,EAAKgQ,mBAAqB,EAAG,EAAI,EAElG/P,MAAKglC,UAAYhB,GAAY,GAAInpB,GAAApe,QAvBlCuF,OAAAC,eAAW9E,EAAA+E,UAAA,WpCyzNJC,IoCzzNP,WAEC,MAA2BnC,MAAKg1B,UpC0zN1BzxB,IoCvzNP,SAAmBC,GAElBxD,KAAKg1B,SAAWxxB,GpCwzNVnB,WAAY,KACZC,aAAc,MoCtyNdnF,GAAA+E,UAAAuB,QAAP,WAECzD,KAAKgxB,eAEL7zB,GAAU8nC,YAAY7hC,KAAKpD,MAGrB7C,GAAA+E,UAAA8uB,cAAP,WAECxoB,EAAAtG,UAAM8uB,cAAah2B,KAAAgF,KAEnBA,MAAKqkC,sBACLrkC,MAAKskC,oBACLtkC,MAAKukC,qBAGCpnC,GAAA+E,UAAAgjC,iBAAP,WAEC,GAAGllC,KAAKgkC,SAAU,CACjB,GAAI7gC,GAAanD,KAAKqkC,oBAAoBppC,MAC1C,KAAK,GAAIP,GAAW,EAAGA,EAAGyI,EAAKzI,IAAK,CACnC,GAAIsF,KAAKqkC,oBAAoB3pC,IAAM,KAAM,CACxC,GAAIsF,KAAKqkC,oBAAoB3pC,GAAGyqC,QAAQrB,EAAArnC,SAC3BuD,KAAKqkC,oBAAoB3pC,GAAI0B,KAAmB4D,KAAKgkC,SAAS50B,2BAA2B1U,GAAI0B,SACrG,IAAI4D,KAAKqkC,oBAAoB3pC,GAAGyqC,QAAQhoC,GAChC6C,KAAKqkC,oBAAoB3pC,GAAIwqC,sBAM9CljC,QAAAC,eAAW9E,EAAA+E,UAAA,UpCiyNJC,IoCjyNP,WAEC,MAAOnC,MAAKokC,SpCkyNN7gC,IoChyNP,SAAkBC,GAEjBxD,KAAKokC,QAAU5gC,GpCiyNTnB,WAAY,KACZC,aAAc,MoC/xNrBN,QAAAC,eAAW9E,EAAA+E,UAAA,YpCkyNJC,IoClyNP,WAEC,MAAOnC,MAAKglC,WpCmyNNzhC,IoChyNP,SAAoBC,GAEnBxD,KAAKglC,UAAYxhC,GpCiyNXnB,WAAY,KACZC,aAAc,MoC1xNrBN,QAAAC,eAAW9E,EAAA+E,UAAA,apC6xNJC,IoC7xNP,WAEC,MAAOnC,MAAKglC,UAAUI,WpC8xNhB/iC,WAAY,KACZC,aAAc,MoC5xNdnF,GAAA+E,UAAA0N,YAAP,SAAmBC,GAGlB7P,KAAKglC,UAAUp1B,YAAY5P,KAAM6P,GAQ3B1S,GAAA+E,UAAAw4B,MAAP,WAEClyB,EAAAtG,UAAMw4B,MAAK1/B,KAAAgF,KAGXA,MAAKG,MAAQ,CAEb,IAAGH,KAAKgP,QACPhP,KAAKgP,QAAQq2B,gBAEdrlC,MAAKmQ,0BAA4B,CACjC,KAAK,GAAIzV,GAAWsF,KAAK2Q,YAAc,EAAGjW,GAAK,EAAGA,IACjDsF,KAAK8Q,cAAcpW,EAEpBsF,MAAKslC,aAAenoC,EAAUmoC,YAE9B,IAAIF,GAAmBplC,KAAKglC,UAAU54B,iBAAiBnR,MACvD+E,MAAKmkC,WAAa5wB,QAAQ6xB,EAAY,EACtC,IAAIA,EAAW,CACdplC,KAAKkkC,mBAAqB,CAC1BlkC,MAAKglC,UAAU30B,mBAAmBrQ,KAAM,KAAM,UACxC,CACNA,KAAKkkC,oBAAsB,GAKtB/mC,GAAA+E,UAAA6O,gBAAP,WAEC/Q,KAAKskC,qBAMNtiC,QAAAC,eAAW9E,EAAA+E,UAAA,qBpC+wNJC,IoC/wNP,WAEC,MAAOnC,MAAKkkC,oBpCgxNN3gC,IoC7wNP,SAA6BC,GAM5B,GAAIyM,GAAsB,KAE1B,IAAIm1B,GAAmBplC,KAAKglC,UAAU54B,iBAAiBnR,MAEvD,KAAKmqC,EACJ,MAED,IAAI5hC,EAAQ,EAAG,CACdA,EAAQ,MACF,IAAIA,GAAS4hC,EAAW,CAC9B5hC,EAAQ4hC,EAAY,CACpBn1B,GAAc,KAGf,GAAIjQ,KAAKkkC,oBAAsB1gC,EAC9B,MAEDxD,MAAKkkC,mBAAqB1gC,CAK1BxD,MAAKslC,aAAenoC,EAAUmoC,YAE9BtlC,MAAKglC,UAAUh1B,UAAUhQ,KAAMwD,EAAOyM,IpCwwNhC5N,WAAY,KACZC,aAAc,MoCtwNdnF,GAAA+E,UAAAkT,mBAAP,WAECpV,KAAKikC,UAAY,IAEjBjkC,MAAK6iC,MAEL7iC,MAAK6D,iBAAiBkgC,EAAAtnC,QAAW8oC,WAAYvlC,KAAK4kC,aAClD5kC,MAAK6D,iBAAiBkgC,EAAAtnC,QAAW+oC,UAAWxlC,KAAK6kC,YACjD7kC,MAAK6D,iBAAiBkgC,EAAAtnC,QAAWgpC,WAAYzlC,KAAK8kC,aAClD9kC,MAAK6D,iBAAiBkgC,EAAAtnC,QAAWipC,SAAU1lC,KAAK+kC,YAG1C5nC,GAAA+E,UAAAyjC,sBAAP,WAEC3lC,KAAK0D,oBAAoBqgC,EAAAtnC,QAAW8oC,WAAYvlC,KAAK4kC,aACrD5kC,MAAK0D,oBAAoBqgC,EAAAtnC,QAAW+oC,UAAWxlC,KAAK6kC,YACpD7kC,MAAK0D,oBAAoBqgC,EAAAtnC,QAAWgpC,WAAYzlC,KAAK8kC,aACrD9kC,MAAK0D,oBAAoBqgC,EAAAtnC,QAAWipC,SAAU1lC,KAAK+kC;CAI7C5nC,GAAA+E,UAAAkR,oBAAP,SAA2BwyB,GAE1B,MAAO5lC,MAAKukC,kBAAkBqB,GAGxBzoC,GAAA+E,UAAA+O,mBAAP,WAEC,MAAOjR,MAAKskC,kBAGNnnC,GAAA+E,UAAA8tB,gBAAP,SAAuB7e,EAAqB0M,EAAcoS,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAGzD9e,EAAMwzB,sBAAwB,IAE9BxzB,GAAMupB,OAEN,OAAOlyB,GAAAtG,UAAM8tB,gBAAeh1B,KAAAgF,KAACmR,EAAO0M,EAAOoS,GAGrC9yB,GAAA+E,UAAA6P,oBAAP,SAA2BZ,EAAqB0M,EAAc+nB,GAE7D5lC,KAAKskC,kBAAkBzmB,GAAS1M,EAAMC,WAAaw0B,CAEnD5lC,MAAKukC,kBAAkBqB,GAAaz0B,CAEpC,OAAOnR,MAAKgwB,gBAAgB7e,EAAO0M,GAG7B1gB,GAAA+E,UAAAiuB,sBAAP,SAA6BnlB,GAE5B,GAAImG,GAAsBnR,KAAK4Q,UAAU5F,EAEzC,IAAGmG,EAAMnC,QACRmC,EAAMnC,QAAQq2B,gBAEfrlC,MAAKgP,QAAQ62B,uBAAuB10B,EAGpC,IAAInR,KAAKskC,kBAAkBnzB,EAAMN,WAAaM,EAAMC,iBAC5CpR,MAAKskC,kBAAkBnzB,EAAMN,gBAE9B7Q,MAAKukC,kBAAkBpzB,EAAMC,WAEpCD,GAAMC,YAAc,CAEpB,OAAO5I,GAAAtG,UAAMiuB,sBAAqBn1B,KAAAgF,KAACgL,GAGpChJ,QAAAC,eAAW9E,EAAA+E,UAAA,apC+uNJC,IoC/uNP,WAEC,MAAOhF,GAAUuL,WpCgvNXrG,WAAY,KACZC,aAAc,MoC3uNdnF,GAAA+E,UAAA4jC,KAAP,WAEC,GAAI9lC,KAAKglC,UAAU54B,iBAAiBnR,OAAS,EAC5C+E,KAAKmkC,WAAa,KAMbhnC,GAAA+E,UAAA4f,OAAP,WAEC3kB,EAAUmoC,aAAe,IAEzBtlC,MAAK+lC,cAEL5oC,GAAUmoC,aAAe,KAGzBv5B,GAAAtP,QAAmBupC,eAGnBhmC,MAAKwL,cAAcxL,KAAKykC,YAGxB14B,GAAAtP,QAAmBupC,eAGnBj6B,GAAAtP,QAAmBwpC,mBAGnBl6B,GAAAtP,QAAmBupC,eAGnBj6B,GAAAtP,QAAmBypC,kBAGb/oC,GAAA+E,UAAAqN,0BAAP,SAAiClM,GAEhC,IAAKrD,KAAKqkC,oBAAoBhhC,GAC7BrD,KAAKqkC,oBAAoBhhC,GAAMrD,KAAKglC,UAAUz1B,0BAA0BlM,EAEzE,OAAOrD,MAAKqkC,oBAAoBhhC,GAO1BlG,GAAA+E,UAAA2gC,KAAP,WAEC7iC,KAAKmkC,WAAa,MAGZhnC,GAAA+E,UAAAuN,MAAP,WAEC,GAAImhB,GAAyBzzB,EAAU8nC,YAAkB,OAAG9nC,EAAU8nC,YAAYkB,MAAQ,GAAIhpC,GAAU6C,KAAKglC,UAE7GhlC,MAAK6wB,OAAOD,EAEZ,OAAOA,GAGDzzB,GAAA+E,UAAA2uB,OAAP,SAAcD,GAEbpoB,EAAAtG,UAAM2uB,OAAM71B,KAAAgF,KAAC4wB,EAEbA,GAAYoT,SAAWhkC,KAAKglC,SAC5BpU,GAAY4T,KAAOxkC,KAAKwkC,KAGlBrnC,GAAA+E,UAAA6jC,aAAP,WAEC,GAAI/lC,KAAKmkC,aAAenkC,KAAKslC,aAAc,CAC1C,GAAItlC,KAAKkkC,oBAAsBlkC,KAAKglC,UAAU54B,iBAAiBnR,OAAS,EAAG,CAC1E,GAAI+E,KAAKwkC,KACRxkC,KAAK+P,kBAAoB,MAEzB/P,MAAKmkC,WAAa,UACb,CACNnkC,KAAKkkC,oBACLlkC,MAAKglC,UAAU30B,mBAAmBrQ,OAIpC,GAAImD,GAAanD,KAAK4Q,UAAU3V,MAChC,IAAIkW,EACJ,KAAK,GAAIzW,GAAW,EAAGA,EAAKyI,IAAOzI,EAAG,CACrCyW,EAAQnR,KAAK4Q,UAAUlW,EAEvB,IAAIyW,EAAMg0B,QAAQhoC,GACJgU,EAAO40B,eAGtB/lC,KAAKslC,aAAe,MAIrBnoC,GAAA+E,UAAAkkC,aAAA,SAAavoB,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEZ7d,KAAKqmC,mBAAmBxoB,EAAO7d,KAE/B,IAAImD,GAAMnD,KAAK4Q,UAAU3V,MACzB,IAAIkW,EACJ,KAAK,GAAIzW,GAAW,EAAGA,EAAIyI,EAAKzI,IAAK,CACpCyW,EAAQnR,KAAK4Q,UAAUlW,EAEvB,IAAIyW,EAAMg0B,QAAQhoC,GACJgU,EAAOi1B,aAAavoB,EAAQ,OAEzC7d,MAAKqmC,mBAAmBxoB,EAAQ,EAAG1M,IAItChU,GAAA+E,UAAAmkC,mBAAA,SAAmBxoB,EAAc1I,GAEhC,GAAI7G,GAAM,EACV,KAAK,GAAI5T,GAAI,EAAGA,EAAImjB,IAASnjB,EAC5B4T,GAAO,IAERA,IAAO,IAAM6G,EAAOzF,KAAO,MAAQyF,EAAO9R,EAC1CijC,SAAQC,IAAIj4B,GAGNnR,GAAA+E,UAAA6X,MAAP,WAGC,GAAI5W,GAAanD,KAAKqkC,oBAAoBppC,MAC1C,KAAK,GAAIP,GAAW,EAAGA,EAAIyI,EAAKzI,IAAK,CACpC,GAAI8rC,GAAyBxmC,KAAKqkC,oBAAoB3pC,EAGtD,IAAI8rC,GAAYA,EAAS92B,MAAQ,GAAI,CACpC3D,EAAAtP,QAAmBgqC,qBAAqBD,SACjCxmC,MAAKqkC,oBAAoB3pC,IAIlC8N,EAAAtG,UAAM6X,MAAK/e,KAAAgF,MA/ZG7C,GAAA8nC,YAA+B,GAAItkC,MAEpCxD,GAAAuL,UAAmB,mBA+ZlC,OAAAvL,IArawB0mC,EAAApnC,QAsaxBuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MpC8sNAzI,GAAQ0B,QoC9sNOU,IpCgtNZmmC,oCAAoCh8B,UAAUsE,mCAAmC,mCAAmC86B,oCAAoC,oCAAoCC,uCAAuC,uCAAuCC,uCAAuC,uCAAuClxB,iDAAiD,mDAAmDmxB,yCAAyC,SAAS5sC,EAAQkB,EAAOJ,GAChgB,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IqCpoOnF,IAAA2N,GAAA7b,EAA0B,gCAC1B,IAAA8b,GAAA9b,EAA6B,qCAC7B,IAAA+b,GAAA/b,EAA0B,gCAE1B,IAAAgzB,GAAAhzB,EAA0B,uCAC1B,IAAAmnB,GAAAnnB,EAA2B,uCAG3B,IAAA6sC,GAAA7sC,EAAkC,iEAElC,IAAAyD,GAAA,SAAA8K,GAAyBV,EAAApK,EAAA8K,EAQxB,SAAA9K,KAEC8K,EAAAxN,KAAAgF,KANMA,MAAA+mC,SAAkB,GAClB/mC,MAAAgnC,UAAmB,GAOzBhnC,MAAK4nB,WAAa,IAElB5nB,MAAKinC,gBAAkB,GAAGjnC,KAAKgnC,UAAUhnC,KAAKgnC,UAAYhnC,KAAK+mC,SAAS/mC,KAAK+mC,SAG7E/mC,MAAKkoB,YAAc9G,EAAA3kB,QAAWkkB,OAI/B3e,OAAAC,eAAWvE,EAAAwE,UAAA,arCynOJC,IqCznOP,WAEC,MAAOzE,GAAWgL,WrC0nOZrG,WAAY,KACZC,aAAc,MqCxnOd5E,GAAAwE,UAAA2rB,oBAAP,WAEC,MAAO,IAAIiZ,GAAArqC,QAGZuF,QAAAC,eAAWvE,EAAAwE,UAAA,UrCynOJC,IqCznOP,WAEC,MAAOnC,MAAK+mC,UrC0nONxjC,IqCvnOP,SAAkBC,GAEjBxD,KAAK+mC,SAAWvjC,CAEhB,IAAIxD,KAAK+mC,SAAW,EAAG,CACtB/mC,KAAK+mC,SAAW,MACV,IAAI/mC,KAAK+mC,SAAW/mC,KAAKgnC,UAAW,CAC1ChnC,KAAKgnC,UAAYhnC,KAAK+mC,QACtB/mC,MAAK0pB,qBAEN1pB,KAAKinC,gBAAkB,GAAIjnC,KAAKgnC,UAAUhnC,KAAKgnC,UAAYhnC,KAAK+mC,SAAS/mC,KAAK+mC,WrCwnOxE1kC,WAAY,KACZC,aAAc,MqCtnOd5E,GAAAwE,UAAAglC,eAAP,WAEC,MAAOlnC,MAAKinC,gBAGbjlC,QAAAC,eAAWvE,EAAAwE,UAAA,WrCunOJC,IqCvnOP,WAEC,MAAOnC,MAAKgnC,WrCwnONzjC,IqCrnOP,SAAmBC,GAElBxD,KAAKgnC,UAAYxjC,CAEjB,IAAIxD,KAAKgnC,UAAY,EACpBhnC,KAAKgnC,UAAY,CAElB,IAAIhnC,KAAKgnC,UAAYhnC,KAAK+mC,SACzB/mC,KAAK+mC,SAAW/mC,KAAKgnC,SAEtBhnC,MAAKinC,gBAAkB,GAAIjnC,KAAKgnC,UAAUhnC,KAAKgnC,UAAYhnC,KAAK+mC,SAAS/mC,KAAK+mC,SAC9E/mC,MAAK0pB,sBrCmnOCrnB,WAAY,KACZC,aAAc,MqCjnOd5E,GAAAwE,UAAA21B,qBAAP,WAECrvB,EAAAtG,UAAM21B,qBAAoB78B,KAAAgF,KAE1BA,MAAK83B,eAAe9X,OAAShgB,KAAKgnC,UAG5BtpC,GAAAwE,UAAA4rB,2BAAP,SAAkCzS,EAAgB0S,EAA0B5Y,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAE3E,GAAI8I,GAAmBlI,EAAAtZ,QAAcuxB,kBACrC,IAAIhZ,GAAa,GAAIc,GAAArZ,OAGrBuY,GAAE8R,SAASzL,EAAO4S,wBAAwBF,GAC1C/Y,GAAEqX,OAAOrsB,KAAKkwB,SAASxtB,sBACvB1C,MAAKslB,OAAOtQ,EAAErT,SAEdqT,GAAE8R,SAASzL,EAAO4S,wBAAwBF,GAC1C/Y,GAAEqX,OAAOrsB,KAAK0C,sBAEd,IAAI2vB,GAAUhX,EAAOkC,QACrB,IAAI4pB,GAAcnyB,EAAE2R,qBAAqB,GAAI3Q,GAAAvZ,QAAS41B,EAAIvtB,KAAMutB,EAAIqG,OAAQrG,EAAI+U,OAChF,IAAIC,GAAcryB,EAAE2R,qBAAqB,GAAI3Q,GAAAvZ,QAAS41B,EAAI0H,MAAO1H,EAAIttB,IAAKstB,EAAIiV,MAC9E,IAAIC,GAAYJ,EAAGtkC,EAAEskC,EAAGtkC,EAAIskC,EAAGpkC,EAAEokC,EAAGpkC,EAAIokC,EAAGzvB,EAAEyvB,EAAGzvB,CAChD,IAAI8vB,GAAYH,EAAGxkC,EAAEwkC,EAAGxkC,EAAIwkC,EAAGtkC,EAAEskC,EAAGtkC,EAAIskC,EAAG3vB,EAAE2vB,EAAG3vB,CAChD,IAAI3P,GAAW2R,KAAKC,KAAK4tB,EAAKC,EAAID,EAAKC,EACvC,IAAIhZ,EACJ,IAAIC,EAEJ,IAAI/W,GAAW1C,EAAElB,QAAQ,GACzB0a,GAAO9W,EAAI3P,CACX0mB,GAAO/W,EAAI3P,CAEXkW,GAAI,GAAKA,EAAI,GAAKuQ,EAAKzmB,CACvBkW,GAAI,IAAMwQ,GAAMA,EAAOD,EACvBvQ,GAAI,IAAM,CACVA,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAAM,CACtGA,GAAI,KAAOuQ,EAAKvQ,EAAI,GAEpB,KAAK9I,EACJA,EAAS,GAAIW,GAAArZ,OAEd0Y,GAAO0Z,gBAAgB5Q,EACvB9I,GAAO2Z,QAAQ9Z,EAEf,OAAOG,GApHMzX,GAAAgL,UAAmB,oBAsHlC,OAAAhL,IAxHyBuvB,EAAAxwB,QA0HzBuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MrC0mOAzI,GAAQ0B,QqC1mOOiB,IrC4mOZ4c,gCAAgChT,UAAUiT,qCAAqCjT,UAAUkT,gCAAgClT,UAAUmZ,uCAAuC,uCAAuC4O,uCAAuC,uCAAuCoY,iEAAiE,mEAAmEC,oCAAoC,SAASztC,EAAQkB,EAAOJ,GACle,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IsCpvOnF,IAAAoiB,GAAAtwB,EAAoC,oDACpC,IAAA0tC,GAAA1tC,EAA8B,8CAG9B,IAAA2tC,GAAA,SAAAp/B,GAAoBV,EAAA8/B,EAAAp/B,EAOnB,SAAAo/B,GAAY3rC,GAAA,GAAAA,QAAA,GAA8B,CAA9BA,EAAA,KAEXuM,EAAAxN,KAAAgF,KAPOA,MAAA6nC,oBAA2C,GAAIlnC,MAC/CX,MAAA8nC,YAAmC,GAAInnC,MAExCX,MAAA+nC,iBAAmB,CAMzB/nC,MAAK/D,UAAYA,GAAa,GAAI0rC,GAAAlrC,OAElCuD,MAAKu7B,SAAW,IAChBv7B,MAAKwE,QAAUxE,KAGT4nC,EAAA1lC,UAAA8lC,mBAAP,SAA0B7e,GAEzB,GAAIzuB,GAAW,CACf,IAAIyI,GAAanD,KAAK8nC,YAAY7sC,MAElC,OAAOP,EAAIyI,EACVnD,KAAK8nC,YAAYptC,KAAKutC,SAAS9e,GAM1Bye,GAAA1lC,UAAAm5B,oBAAP,SAA2Bp/B,GAE1B+D,KAAK6nC,oBAAoBzkC,KAAKnH,EAG9B,IAAI+D,KAAK8nC,YAAYr5B,QAAQxS,KAAe,EAC3C+D,KAAK8nC,YAAY1kC,KAAKnH,GAMjB2rC,GAAA1lC,UAAAk5B,sBAAP,SAA6Bn/B,GAE5B+D,KAAK6nC,oBAAoBrV,OAAOxyB,KAAK6nC,oBAAoBp5B,QAAQxS,GAAY,EAG7E,IAAI+D,KAAK6nC,oBAAoBp5B,QAAQxS,KAAe,EACnD+D,KAAK8nC,YAAYtV,OAAOxyB,KAAK8nC,YAAYr5B,QAAQxS,GAAY,GAEhE,OAAA2rC,IAjDoBrd,EAAA9tB,QAmDpBuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MtCwuOAzI,GAAQ0B,QsCxuOOmrC,ItC0uOZ9a,oDAAoD,oDAAoDob,8CAA8C,gDAAgDC,oCAAoC,SAASluC,EAAQkB,EAAOJ,GACrQ,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IuCxyOnF,IAAAm4B,GAAArmC,EAA2B,oCAE3B,IAAAo5B,GAAAp5B,EAAuB,6BACvB,IAAA+b,GAAA/b,EAA0B,gCAI1B,IAAAotB,GAAAptB,EAA6B,2CAC7B,IAAAmuC,GAAAnuC,EAA0B,uCAuB1B,IAAAiD,GAAA,SAAAsL,GAAoBV,EAAA5K,EAAAsL,EAmFnB,SAAAtL,GAAYuqB,GAnFb,GAAA1nB,GAAAC,IAmFa,IAAAynB,QAAA,GAA4B,CAA5BA,EAAA,KAEXjf,EAAAxN,KAAAgF,KA1EOA,MAAAqoC,WAAmB,GAAIhV,GAAA52B,OA4E9BuD,MAAKsoC,8BAAgC,SAACznC,GAAqB,MAAAd,GAAKwoC,sBAAsB1nC,GAEtFb,MAAKwoC,UAAY,GAAIJ,GAAA3rC,OACrBuD,MAAKwoC,UAAU3kC,iBAAiBy8B,EAAA7jC,QAAWgsC,WAAYzoC,KAAKsoC,8BAE5DtoC,MAAKynB,SAAWA,EA5EjBzlB,OAAAC,eAAW/E,EAAAgF,UAAA,avCoyOJC,IuCpyOP,WAEC,MAAOjF,GAAMwL,WvCqyOPrG,WAAY,KACZC,aAAc,MuC/xOrBN,QAAAC,eAAW/E,EAAAgF,UAAA,YvCsyOJC,IuCtyOP,WAEC,GAAInC,KAAKysB,eACRzsB,KAAKysB,eAAeC,YAErB,OAAO1sB,MAAKwoC,WvCsyONnmC,WAAY,KACZC,aAAc,MuCjyOrBN,QAAAC,eAAW/E,EAAAgF,UAAA,YvCuyOJC,IuCvyOP,WAEC,MAAOnC,MAAKwoC,UAAUE,UvCwyOhBnlC,IuCryOP,SAAoBC,GAEnB,GAAIxD,KAAKwoC,UAAUE,SAClB1oC,KAAKwoC,UAAUE,SAASC,YAAY3oC,KAErCA,MAAKwoC,UAAUE,SAAWllC,CAE1B,IAAIxD,KAAKwoC,UAAUE,SAClB1oC,KAAKwoC,UAAUE,SAASE,SAAS5oC,OvCoyO5BqC,WAAY,KACZC,aAAc,MuC/xOrBN,QAAAC,eAAW/E,EAAAgF,UAAA,YvCqyOJC,IuCryOP,WAEC,MAAOnC,MAAKwoC,UAAU/gB,UvCsyOhBlkB,IuCnyOP,SAAoBC,GAEnBxD,KAAKwoC,UAAU/gB,SAAWjkB,GvCoyOpBnB,WAAY,KACZC,aAAc,MuC/xOrBN,QAAAC,eAAW/E,EAAAgF,UAAA,SvCqyOJC,IuCryOP,WAEC,MAAOnC,MAAKwoC,UAAUjnC,OvCsyOhBgC,IuCnyOP,SAAiBC,GAEhBxD,KAAKwoC,UAAUjnC,MAAQiC,GvCoyOjBnB,WAAY,KACZC,aAAc,MuC9wOdpF,GAAAgF,UAAA2mC,oBAAP,WAEC7oC,KAAKwoC,UAAUM,oBAAoB9oC,KAAKsR,UAAUuC,SAClD7T,MAAKsR,UAAUC,gBAMTrU,GAAAgF,UAAAuB,QAAP,WAECzD,KAAKgxB,eAEL9zB,GAAM6rC,QAAQ3lC,KAAKpD,MAMb9C,GAAAgF,UAAA8uB,cAAP,WAECxoB,EAAAtG,UAAM8uB,cAAah2B,KAAAgF,KAEnBA,MAAKwoC,UAAU/kC,UAmBTvG,GAAAgF,UAAAuN,MAAP,WAEC,GAAImhB,GAAqB1zB,EAAM6rC,QAAc,OAAG7rC,EAAM6rC,QAAQ5C,MAAQ,GAAIjpC,EAE1E8C,MAAK6wB,OAAOD,EAEZ,OAAOA,GAGD1zB,GAAAgF,UAAA2uB,OAAP,SAAcmY,GAEbxgC,EAAAtG,UAAM2uB,OAAM71B,KAAAgF,KAACgpC,EAEbhpC,MAAKwoC,UAAU3X,OAAOmY,EAAMltC,UAQtBoB,GAAAgF,UAAAymB,kBAAP,WAECngB,EAAAtG,UAAMymB,kBAAiB3tB,KAAAgF,KAEvBA,MAAK4oB,YAAYqgB,MAAMjpC,KAAKwoC,UAAUU,eAAgBlpC,KAAK4oB,aAIrD1rB,GAAAgF,UAAA21B,qBAAP,WAECrvB,EAAAtG,UAAM21B,qBAAoB78B,KAAAgF,KAE1B,IAAIqyB,GAAUryB,KAAKud,QAEnB,KAAKvd,KAAKmpC,QACTnpC,KAAKmpC,QAAU,GAAInzB,GAAAvZ,OAEpBuD,MAAKmpC,QAAQtmC,EAAIwvB,EAAIxvB,EAAIwvB,EAAInuB,MAAM,CACnClE,MAAKmpC,QAAQpmC,EAAIsvB,EAAItvB,EAAIsvB,EAAIluB,OAAO,CACpCnE,MAAKmpC,QAAQzxB,EAAI2a,EAAI3a,EAAI2a,EAAIxU,MAAM,CAEnC7d,MAAK83B,eAAiB93B,KAAKwoC,UAAUY,gBAAgBppC,KAAKmpC,QAASnpC,KAAK83B,gBAQjE56B,GAAAgF,UAAAqmC,sBAAR,SAA8B1nC,GAE7B,GAAIb,KAAK4nB,YAAcrU,QAAQvT,KAAKwoC,UAAUa,OAAQ,CACrD,GAAIrpC,KAAK+yB,oBACR/yB,KAAK+yB,oBAAoBC,mBAAmBhzB,KAE7CA,MAAK4nB,WAAarU,QAAQvT,KAAKwoC,UAAUa,MAEzC,IAAIrpC,KAAK+yB,oBACR/yB,KAAK+yB,oBAAoBtuB,iBAAiBzE,MAG5CA,KAAK0pB,qBASCxsB,GAAAgF,UAAAgnB,iBAAP,SAAwBC,GAEvBnpB,KAAKlE,SAASwtC,gBAAgBngB,GAGxBjsB,GAAAgF,UAAAuwB,sBAAP,SAA6B5vB,EAAUE,EAAU2vB,EAAmBC,GAEnE,GAAG3yB,KAAKwoC,UAAUa,MAAO,CACxBrpC,KAAKqoC,WAAWrQ,MAAMn1B,EAAEE,EACxB,IAAIwmC,GAAcvpC,KAAK+3B,cAAc/3B,KAAKqoC,WAAYroC,KAAKqoC,WAC3D,IAAIhW,EAGJ,MAAKA,EAAMryB,KAAKud,UAAUwT,SAASwY,EAAM1mC,EAAG0mC,EAAMxmC,EAAG,GACpD,MAAO,MAGR,KAAK2vB,EACJ,MAAO,KAGR,IAAI1yB,KAAKwoC,UAAU/V,sBAAsB8W,EAAM1mC,EAAG0mC,EAAMxmC,GACvD,MAAO,MAGT,MAAO,OAGD7F,GAAAgF,UAAA6X,MAAP,WAECvR,EAAAtG,UAAM6X,MAAK/e,KAAAgF,KAEXA,MAAKwoC,UAAUzuB,QAjPD7c,GAAA6rC,QAAuB,GAAIpoC,MAE5BzD,GAAAwL,UAAmB,eAiPlC,OAAAxL,IArPoBmqB,EAAA5qB,QAuPpBuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MvC8uOAzI,GAAQ0B,QuC9uOOS,IvCgvOZomC,oCAAoCh8B,UAAU21B,6BAA6B31B,UAAUkT,gCAAgClT,UAAUyiB,2CAA2C,2CAA2Cyf,uCAAuC,yCAAyCC,qCAAqC,SAASxvC,EAAQkB,EAAOJ,GACrW,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IwC3gPnF,IAAAm4B,GAAArmC,EAA2B,oCAC3B,IAAAyvC,GAAAzvC,EAA0B,kCAS1B,IAAAotB,GAAAptB,EAA6B,2CAG7B,IAAAmnB,GAAAnnB,EAA2B,uCAE3B,IAAAqtB,GAAArtB,EAA+B,4CAC/B,IAAAstB,GAAAttB,EAA6B,yCAG7B,IAAA0vC,GAAA1vC,EAAgC,gDAEhC,IAAA2gB,GAAA3gB,EAAuB,gCACvB,IAAAoQ,GAAApQ,EAA2B,uCAS3B,IAAA2D,GAAA,SAAA4K,GAAqBV,EAAAlK,EAAA4K,EA6LpB,SAAA5K,GAAYuN,GA7Lb,GAAApL,GAAAC,IA6La,IAAAmL,QAAA,GAAsB,CAAtBA,EAAA,KAEX3C,EAAAxN,KAAAgF,KA7LOA,MAAA4pC,UAA+B,GAAIjpC,MAKpCX,MAAA6pC,iBAA0B,CAG1B7pC,MAAA8pC,YAAqBJ,EAAAjtC,QAAUstC,MAE9B/pC,MAAAgqC,QAAkB,KAClBhqC,MAAAiqC,WAAqB,KAErBjqC,MAAA6oB,OAAe,GAAIjO,GAAAne,OAkL1BuD,MAAKkqC,6BAA+B,SAACrpC,GAAqB,MAAAd,GAAKoqC,oBAAoBtpC,GACnFb,MAAK+nB,gCAAkC,SAAClnB,GAAqB,MAAAd,GAAKioB,wBAAwBnnB,GAC1Fb,MAAK6oB,OAAOhlB,iBAAiBwG,EAAA5N,QAAWgP,sBAAuBzL,KAAK+nB,gCAEpE/nB,MAAK4nB,WAAa,IAElB5nB,MAAKoqC,QAAU,GAAIzpC,OAAmBX,KAEtCA,MAAK6oB,OAAO1d,MAAQA,CACpBnL,MAAK+K,QAAW,GAAI4+B,GAAAltC,OAGpBuD,MAAKkoB,YAAc9G,EAAA3kB,QAAWokB,KAnL/B7e,OAAAC,eAAWrE,EAAAsE,UAAA,kBxCmgPJC,IwCngPP,WAEC,MAAOnC,MAAK6pC,kBxCogPNtmC,IwCjgPP,SAA0BC,GAEzB,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAIxD,KAAK6pC,kBAAoBrmC,EAC5B,MAEDxD,MAAK6pC,iBAAmBrmC,CAExBxD,MAAKqqC,oBxC+/OChoC,WAAY,KACZC,aAAc,MwC1/OrBN,QAAAC,eAAWrE,EAAAsE,UAAA,UxCggPJC,IwChgPP,WAEC,MAAOnC,MAAKgqC,SxCigPNzmC,IwC9/OP,SAAkBC,GAEjB,GAAIxD,KAAKgqC,SAAWxmC,EACnB,MAEDxD,MAAKgqC,QAAUxmC,CAEfxD,MAAKqqC,oBxC6/OChoC,WAAY,KACZC,aAAc,MwCx/OrBN,QAAAC,eAAWrE,EAAAsE,UAAA,axC8/OJC,IwC9/OP,WAEC,MAAOnC,MAAKiqC,YxC+/ON1mC,IwC5/OP,SAAqBC,GAEpB,GAAIxD,KAAKiqC,YAAczmC,EACtB,MAEDxD,MAAKiqC,WAAazmC,CAElBxD,MAAKqqC,oBxC2/OChoC,WAAY,KACZC,aAAc,MwCn/OrBN,QAAAC,eAAWrE,EAAAsE,UAAA,exC4/OJC,IwC5/OP,WAEC,MAAOnC,MAAKsqC,exC6/ONjoC,WAAY,KACZC,aAAc,MwCx/OrBN,QAAAC,eAAWrE,EAAAsE,UAAA,gBxC8/OJC,IwC9/OP,WAEC,MAAOnC,MAAKuqC,exC+/ONloC,WAAY,KACZC,aAAc,MwCn/OrBN,QAAAC,eAAWrE,EAAAsE,UAAA,axCggPJC,IwChgPP,WAEC,MAAOnC,MAAK8pC,axCigPNvmC,IwC9/OP,SAAqBC,GAEpB,GAAIxD,KAAK8pC,aAAetmC,EACvB,MAEDxD,MAAK8pC,YAActmC,CAEnBxD,MAAKugB,cxC6/OCle,WAAY,KACZC,aAAc,MwCr/OrBN,QAAAC,eAAWrE,EAAAsE,UAAA,WxC6/OJC,IwC7/OP,WAEC,MAAOnC,MAAKoqC,SxC8/ON/nC,WAAY,KACZC,aAAc,MwC5/OrBN,QAAAC,eAAWrE,EAAAsE,UAAA,YxC+/OJC,IwC//OP,WAEC,MAAOnC,MAAKmoB,WxCggPN9lB,WAAY,KACZC,aAAc,MwC3/OrBN,QAAAC,eAAWrE,EAAAsE,UAAA,WxCigPJC,IwCjgPP,WAEC,MAAOnC,MAAKwqC,UxCkgPNjnC,IwC//OP,SAAmBC,GAElB,GAAIxD,KAAKwqC,UAAYhnC,EACpB,MAED,IAAIxD,KAAKwqC,SACRxqC,KAAKyqC,cAAczqC,KAAKwqC,SAEzBxqC,MAAKwqC,SAAWhnC,CAEhB,IAAIxD,KAAKwqC,SACRxqC,KAAK0qC,WAAW1qC,KAAKwqC,SAEtBxqC,MAAKqqC,oBxC4/OChoC,WAAY,KACZC,aAAc,MwC1/Od1E,GAAAsE,UAAAyoC,eAAP,WAEC,MAAO3qC,MAAK4pC,UAAU3uC,OAGhB2C,GAAAsE,UAAAmnB,aAAP,SAAoBre,GAEnB,MAAOhL,MAAK4pC,UAAU5+B,GAMvBhJ,QAAAC,eAAWrE,EAAAsE,UAAA,SxCy/OJC,IwCz/OP,WAEC,MAAOnC,MAAK6oB,QxC0/ONxmB,WAAY,KACZC,aAAc,MwCh+OrBN,QAAAC,eAAWrE,EAAAsE,UAAA,axCm+OJC,IwCn+OP,WAEC,MAAOvE,GAAO8K,WxCo+ORrG,WAAY,KACZC,aAAc,MwC79Od1E,GAAAsE,UAAAmoC,iBAAP,WAECrqC,KAAKwL,cAAc,GAAI+b,GAAA9qB,QAAa8qB,EAAA9qB,QAAamuC,kBAAmB5qC,OAG9DpC,GAAAsE,UAAA0nB,kBAAP,WAEC5pB,KAAKwL,cAAc,GAAI8b,GAAA7qB,QAAgB6qB,EAAA7qB,QAAgBotB,wBAAyB7pB,OAG1EpC,GAAAsE,UAAAwoC,WAAP,SAAkB3/B,GAEjB/K,KAAK4pC,UAAUxmC,KAAK2H,EAEpBA,GAAQlH,iBAAiBy8B,EAAA7jC,QAAWgsC,WAAYzoC,KAAKkqC,6BAErDlqC,MAAKmqC,sBAGCvsC,GAAAsE,UAAAuoC,cAAP,SAAqB1/B,GAEpB/K,KAAK4pC,UAAUpX,OAAOxyB,KAAK4pC,UAAUn7B,QAAQ1D,GAAU,EAEvDA,GAAQrH,oBAAoB48B,EAAA7jC,QAAWgsC,WAAYzoC,KAAKkqC,6BAExDlqC,MAAKmqC,sBAGEvsC,GAAAsE,UAAAioC,oBAAR,SAA4BtpC,GAAA,GAAAA,QAAA,GAAuB,CAAvBA,EAAA,KAE3Bb,KAAKugB,aAGE3iB,GAAAsE,UAAA8lB,wBAAR,SAAgCnnB,GAE/Bb,KAAKqqC,mBAYCzsC,GAAAsE,UAAA4mB,gBAAP,SAAuBC,EAAmCC,GAEzD,MAAO,OAvQMprB,GAAA8K,UAAmB,gBAyQlC,OAAA9K,IA7QqBypB,EAAA5qB,QA+QrBuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MxCq9OAzI,GAAQ0B,QwCr9OOmB,IxCu9OZ0lC,oCAAoCh8B,UAAUujC,kCAAkCvjC,UAAU6C,gCAAgC,gCAAgCsW,uCAAuC,uCAAuCsJ,2CAA2C,2CAA2CC,4CAA4C,4CAA4Cre,uCAAuC,uCAAuCse,yCAAyC,yCAAyC6gB,gDAAgD,kDAAkDpE,qCAAqC,SAASzsC,EAAQkB,EAAOJ,GACxtB,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IyC1wPjF,IAAAm4B,GAAArmC,EAA2B,oCAE7B,IAAAo5B,GAAAp5B,EAAuB,6BACvB,IAAA+b,GAAA/b,EAA0B,gCAK1B,IAAAmuC,GAAAnuC,EAA0B,uCAE1B,IAAAswB,GAAAtwB,EAAoC,oDAYpC,IAAAgD,GAAA,SAAAuL,GAAqBV,EAAA7K,EAAAuL,EAmFpB,SAAAvL,GAAYwqB,GAnFb,GAAA1nB,GAAAC,IAmFa,IAAAynB,QAAA,GAA4B,CAA5BA,EAAA,KAEXjf,EAAAxN,KAAAgF,KA1EOA,MAAAqoC,WAAmB,GAAIhV,GAAA52B,OA4E9BuD,MAAKsoC,8BAAgC,SAACznC,GAAqB,MAAAd,GAAKwoC,sBAAsB1nC,GAEtFb,MAAKwoC,UAAY,GAAIJ,GAAA3rC,OACrBuD,MAAKwoC,UAAU3kC,iBAAiBy8B,EAAA7jC,QAAWgsC,WAAYzoC,KAAKsoC,8BAE5DtoC,MAAKynB,SAAWA,EA5EjBzlB,OAAAC,eAAWhF,EAAAiF,UAAA,azCswPJC,IyCtwPP,WAEC,MAAOlF,GAAOyL,WzCuwPRrG,WAAY,KACZC,aAAc,MyCjwPrBN,QAAAC,eAAWhF,EAAAiF,UAAA,YzCwwPJC,IyCxwPP,WAEC,GAAInC,KAAKysB,eACRzsB,KAAKysB,eAAeC,YAErB,OAAO1sB,MAAKwoC,WzCwwPNnmC,WAAY,KACZC,aAAc,MyCnwPrBN,QAAAC,eAAWhF,EAAAiF,UAAA,YzCywPJC,IyCzwPP,WAEC,MAAOnC,MAAKwoC,UAAUE,UzC0wPhBnlC,IyCvwPP,SAAoBC,GAEnB,GAAIxD,KAAKwoC,UAAUE,SAClB1oC,KAAKwoC,UAAUE,SAASC,YAAY3oC,KAErCA,MAAKwoC,UAAUE,SAAWllC,CAE1B,IAAIxD,KAAKwoC,UAAUE,SAClB1oC,KAAKwoC,UAAUE,SAASE,SAAS5oC,OzCswP5BqC,WAAY,KACZC,aAAc,MyCjwPrBN,QAAAC,eAAWhF,EAAAiF,UAAA,YzCuwPJC,IyCvwPP,WAEC,MAAOnC,MAAKwoC,UAAU/gB,UzCwwPhBlkB,IyCrwPP,SAAoBC,GAEnBxD,KAAKwoC,UAAU/gB,SAAWjkB,GzCswPpBnB,WAAY,KACZC,aAAc,MyCjwPrBN,QAAAC,eAAWhF,EAAAiF,UAAA,SzCuwPJC,IyCvwPP,WAEC,MAAOnC,MAAKwoC,UAAUjnC,OzCwwPhBgC,IyCrwPP,SAAiBC,GAEhBxD,KAAKwoC,UAAUjnC,MAAQiC,GzCswPjBnB,WAAY,KACZC,aAAc,MyChvPdrF,GAAAiF,UAAA2mC,oBAAP,WAEC7oC,KAAKwoC,UAAUM,oBAAoB9oC,KAAKsR,UAAUuC,SAClD7T,MAAKsR,UAAUC,gBAMTtU,GAAAiF,UAAAuB,QAAP,WAECzD,KAAKgxB,eAEL/zB,GAAO8tC,SAAS3nC,KAAKpD,MAMf/C,GAAAiF,UAAA8uB,cAAP,WAECxoB,EAAAtG,UAAM8uB,cAAah2B,KAAAgF,KAEnBA,MAAKwoC,UAAU/kC,UAmBTxG,GAAAiF,UAAAuN,MAAP,WAEC,GAAImhB,GAAsB3zB,EAAO8tC,SAAe,OAAG9tC,EAAO8tC,SAAS5E,MAAQ,GAAIlpC,EAE/E+C,MAAK6wB,OAAOD,EAEZ,OAAOA,GAGD3zB,GAAAiF,UAAA2uB,OAAP,SAAcma,GAEbxiC,EAAAtG,UAAM2uB,OAAM71B,KAAAgF,KAACgrC,EAEbhrC,MAAKwoC,UAAU3X,OAAOma,EAAOlvC,UAQvBmB,GAAAiF,UAAAymB,kBAAP,WAECngB,EAAAtG,UAAMymB,kBAAiB3tB,KAAAgF,KAEvBA,MAAK4oB,YAAYqgB,MAAMjpC,KAAKwoC,UAAUU,eAAgBlpC,KAAK4oB,aAIrD3rB,GAAAiF,UAAA21B,qBAAP,WAECrvB,EAAAtG,UAAM21B,qBAAoB78B,KAAAgF,KAE1B,IAAIqyB,GAAUryB,KAAKud,QAEnB,KAAKvd,KAAKmpC,QACTnpC,KAAKmpC,QAAU,GAAInzB,GAAAvZ,OAEpBuD,MAAKmpC,QAAQtmC,EAAIwvB,EAAIxvB,EAAIwvB,EAAInuB,MAAM,CACnClE,MAAKmpC,QAAQpmC,EAAIsvB,EAAItvB,EAAIsvB,EAAIluB,OAAO,CACpCnE,MAAKmpC,QAAQzxB,EAAI2a,EAAI3a,EAAI2a,EAAIxU,MAAM,CAEnC7d,MAAK83B,eAAiB93B,KAAKwoC,UAAUY,gBAAgBppC,KAAKmpC,QAASnpC,KAAK83B,gBAQjE76B,GAAAiF,UAAAqmC,sBAAR,SAA8B1nC,GAE7B,GAAIb,KAAK4nB,YAAcrU,QAAQvT,KAAKwoC,UAAUa,OAAQ,CACrD,GAAIrpC,KAAK+yB,oBACR/yB,KAAK+yB,oBAAoBC,mBAAmBhzB,KAE7CA,MAAK4nB,WAAarU,QAAQvT,KAAKwoC,UAAUa,MAEzC,IAAIrpC,KAAK+yB,oBACR/yB,KAAK+yB,oBAAoBtuB,iBAAiBzE,MAG5CA,KAAK0pB,qBASCzsB,GAAAiF,UAAAgnB,iBAAP,SAAwBC,GAEvBnpB,KAAKlE,SAASwtC,gBAAgBngB,GAGxBlsB,GAAAiF,UAAAuwB,sBAAP,SAA6B5vB,EAAUE,EAAU2vB,EAAmBC,GAEnE,GAAG3yB,KAAKwoC,UAAUa,MAAO,CACxBrpC,KAAKqoC,WAAWrQ,MAAMn1B,EAAEE,EACxB,IAAIwmC,GAAcvpC,KAAK+3B,cAAc/3B,KAAKqoC,WAAYroC,KAAKqoC,WAC3D,IAAIhW,EAGJ,MAAKA,EAAMryB,KAAKud,UAAUwT,SAASwY,EAAM1mC,EAAG0mC,EAAMxmC,EAAG,GACpD,MAAO,MAGR,KAAK2vB,EACJ,MAAO,KAGR,IAAI1yB,KAAKwoC,UAAU/V,sBAAsB8W,EAAM1mC,EAAG0mC,EAAMxmC,GACvD,MAAO,MAGT,MAAOyF,GAAAtG,UAAMuwB,sBAAqBz3B,KAAAgF,KAAC6C,EAAGE,EAAG2vB,EAAWC,GAG9C11B,GAAAiF,UAAA6X,MAAP,WAECvR,EAAAtG,UAAM6X,MAAK/e,KAAAgF,KAEXA,MAAKwoC,UAAUzuB,QAjPD9c,GAAA8tC,SAAyB,GAAIpqC,MAE9B1D,GAAAyL,UAAmB,gBAiPlC,OAAAzL,IArPqBstB,EAAA9tB,QAuPrBuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MzCgtPAzI,GAAQ0B,QyChtPOQ,IzCktPZqmC,oCAAoCh8B,UAAU21B,6BAA6B31B,UAAUkT,gCAAgClT,UAAUwlB,oDAAoD,oDAAoD0c,uCAAuC,yCAAyC7C,wCAAwC,SAAS1sC,EAAQkB,EAAOJ,GAC1X,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,I0Cn+PnF,IAAA8iC,GAAAhxC,EAA8B,4CAC9B,IAAAixC,GAAAjxC,EAAgC,8CAChC,IAAAkxC,GAAAlxC,EAA+B,6CAE/B,IAAAmxC,GAAAnxC,EAAwB,8BACxB,IAAA6R,GAAA7R,EAA8B,sCAG9B,IAAAoxC,GAAApxC,EAA0B,kCAE1B,IAAA4R,GAAA5R,EAAoC,iDACpC,IAAA2gB,GAAA3gB,EAAwB,gCAKxB,IAAAqxC,GAAArxC,EAA6B,wCAI7B,IAAA4pC,GAAA5pC,EAAwB,oCAIxB,IAAAsxC,GAAAtxC,EAAgC,+CAoFhC,IAAAqD,GAAA,SAAAkL,GAAwBV,EAAAxK,EAAAkL,EAqqBvB,SAAAlL,KAECkL,EAAAxN,KAAAgF,KAxpBOA,MAAAwrC,MAAe,EA0pBtBxrC,MAAKg3B,KAAOsU,EAAA7uC,QAAcgvC,OAjkB3BzpC,OAAAC,eAAW3E,EAAA4E,UAAA,a1C+3PJC,I0C/3PP,WAEC,MAAO7E,GAAUoL,W1Cg4PXrG,WAAY,KACZC,aAAc,M0Ch1PrBN,QAAAC,eAAW3E,EAAA4E,UAAA,iB1C41PJC,I0C51PP,WAEC,MAAOnC,MAAK0rC,gB1C61PNrpC,WAAY,KACZC,aAAc,M0Cl1PrBN,QAAAC,eAAW3E,EAAA4E,UAAA,c1C81PJC,I0C91PP,WAEC,MAAOnC,MAAK2rC,a1C+1PNtpC,WAAY,KACZC,aAAc,M0CpvPrBN,QAAAC,eAAW3E,EAAA4E,UAAA,U1C2vPJC,I0C3vPP,WAEC,MAAOnC,MAAK4rC,S1C4vPNvpC,WAAY,KACZC,aAAc,M0C5uPdhF,GAAA4E,UAAA2pC,WAAP,WAEC,MAAO7rC,MAAK8rC,YAMNxuC,GAAA4E,UAAA6pC,WAAP,WAEC,MAAO/rC,MAAKgsC,YA+BbhqC,QAAAC,eAAW3E,EAAA4E,UAAA,Y1CutPJC,I0CvtPP,WAEC,MAAOnC,MAAKisC,W1CwtPN5pC,WAAY,KACZC,aAAc,M0C1mPrBN,QAAAC,eAAW3E,EAAA4E,UAAA,uB1CmnPJC,I0CnnPP,WAEC,MAAOnC,MAAKksC,sB1ConPN7pC,WAAY,KACZC,aAAc,M0C5mPrBN,QAAAC,eAAW3E,EAAA4E,UAAA,qB1CqnPJC,I0CrnPP,WAEC,MAAOnC,MAAKmsC,oB1CsnPN9pC,WAAY,KACZC,aAAc,M0C5kPrBN,QAAAC,eAAW3E,EAAA4E,UAAA,Q1CulPJC,I0CvlPP,WAEC,MAAOnC,MAAKwrC,O1CwlPNjoC,I0CrlPP,SAAgBC,GAEfA,EAAQA,EAAM4oC,UAEd,IAAIpsC,KAAKwrC,OAAShoC,EACjB,MAEDxD,MAAKwrC,MAAQhoC,CAEbxD,MAAKqsC,mBAAqB,M1CmlPpBhqC,WAAY,KACZC,aAAc,M0CjlPrBN,QAAAC,eAAW3E,EAAA4E,UAAA,c1ColPJC,I0CplPP,WAEC,MAAOnC,MAAKssC,a1CqlPN/oC,I0CllPP,SAAsBC,GAErB,GAAIxD,KAAKssC,aAAe9oC,EACvB,MAEDxD,MAAKssC,YAAc9oC,CAEnBxD,MAAKqsC,mBAAqB,M1CilPpBhqC,WAAY,KACZC,aAAc,M0C3kPrBN,QAAAC,eAAW3E,EAAA4E,UAAA,Y1CilPJC,I0CjlPP,WAEC,GAAInC,KAAKqsC,mBACRrsC,KAAKusC,aAEN,OAAOvsC,MAAKwoC,W1CilPNnmC,WAAY,KACZC,aAAc,M0CpkPrBN,QAAAC,eAAW3E,EAAA4E,UAAA,a1CukPJC,I0CvkPP,WAEC,MAAOnC,MAAKwsC,Y1CwkPNjpC,I0CrkPP,SAAqBC,GAEpBxD,KAAKwsC,WAAahpC,CAClB,KAAIxD,KAAKsR,UAAU4C,eAClBlU,KAAKsR,UAAU4C,eAAiB,GAAIpI,GAAArP,OAErCuD,MAAKsR,UAAU4C,eAAeu4B,MAAQjpC,CACtCxD,MAAKsV,kCAAkCzJ,EAAApP,QAAuB+M,kB1CqkPxDnH,WAAY,KACZC,aAAc,M0C3jPrBN,QAAAC,eAAW3E,EAAA4E,UAAA,uB1CskPJC,I0CtkPP,WAEC,MAAOnC,MAAK0sC,sB1CukPNrqC,WAAY,KACZC,aAAc,M0ClkPrBN,QAAAC,eAAW3E,EAAA4E,UAAA,a1CwkPJC,I0CxkPP,WAEC,MAAOnC,MAAK2sC,Y1CykPNppC,I0CtkPP,SAAqBC,GAEpBxD,KAAK2sC,WAAanpC,G1CukPZnB,WAAY,KACZC,aAAc,M0ClkPrBN,QAAAC,eAAW3E,EAAA4E,UAAA,c1CwkPJC,I0CxkPP,WAEC,MAAOnC,MAAK4sC,a1CykPNrpC,I0CtkPP,SAAsBC,GAErBxD,KAAK4sC,YAAcppC,G1CukPbnB,WAAY,KACZC,aAAc,M0CthPrBN,QAAAC,eAAW3E,EAAA4E,UAAA,Y1C4hPJC,I0C5hPP,WAEC,MAAO,O1C6hPDE,WAAY,KACZC,aAAc,M0C5gPdhF,GAAA4E,UAAA6X,MAAP,WAECvR,EAAAtG,UAAM6X,MAAK/e,KAAAgF,KAEX,IAAIA,KAAK6sC,cACR7sC,KAAK6sC,cAAc9yB,QAMdzc,GAAA4E,UAAAuB,QAAP,WAECzD,KAAKgxB,eAEL1zB,GAAUwvC,YAAY1pC,KAAKpD,MAMrB1C,GAAA4E,UAAA8uB,cAAP,WAECxoB,EAAAtG,UAAM8uB,cAAah2B,KAAAgF,KAEnBA,MAAKssC,YAAc,IACnBtsC,MAAK+sC,aAAe,IAEpB,IAAI/sC,KAAK6sC,cAAe,CACvB7sC,KAAK6sC,cAAcppC,SACnBzD,MAAK6sC,cAAgB,MAOhBvvC,GAAA4E,UAAAqqC,YAAP,WAECvsC,KAAKqsC,mBAAqB,KAE1B,IAAGrsC,KAAKssC,aAAe,KACtB,MAGD,IAAItsC,KAAK+sC,aAAc,CACtB/sC,KAAK+sC,aAAatpC,SAClBzD,MAAK+sC,aAAe,IAEpB/sC,MAAK6sC,cAAc9yB,OACnB/Z,MAAK6sC,cAAcppC,SACnBzD,MAAK6sC,cAAgB,KAItB,GAAG7sC,KAAKwrC,OAAS,GAChB,MAED,IAAIwB,GAAqB,CACzB,IAAI7yB,EAEJ,IAAI8yB,GAAkBjtC,KAAKssC,YAAYY,KAAKltC,KAAKssC,YAAYa,WAAWC,kBACxE,IAAIC,GAAgB,CACpB,IAAIC,GAA+B,IACnC,IAAIxQ,GAAW,CACf,IAAIpsB,GAAW,CACf,IAAI68B,GAAkBvtC,KAAKssC,YAAYa,WAAWK,uBAAyBP,EAAYjtC,KAAKssC,YAAYmB,aACxG,IAAIC,GAA0B1tC,KAAK5D,KAAKgwC,WAAWh+B,MAAM,MACzD,IAAIu/B,KACJ,IAAIC,KACJ,IAAIC,KACJ,IAAIC,KACJ,IAAIC,KACJ,IAAIC,GAAoBhuC,KAAKiuC,WAAa,EAAIjuC,KAAKssC,YAAY4B,WAAaluC,KAAKssC,YAAY6B,YAAcnuC,KAAKssC,YAAY8B,OAC5H,KAAK,GAAIC,GAAK,EAAGA,EAAKX,EAAUzyC,OAAQozC,IAAM,CAE7CV,EAAkBvqC,QAClBwqC,GAAuBxqC,QACvByqC,GAAkBzqC,KAAK,EACvB2qC,GAAoB3qC,KAAK,EACzB0qC,GAAyB1qC,KAAK,MAG9B,IAAIkrC,GAAsBZ,EAAUW,GAAIjgC,MAAM,IAC9C,KAAK,GAAI1T,GAAI,EAAGA,EAAI4zC,EAAMrzC,OAAQP,IAAK,CACtC,GAAI6zC,GAAoB,CACxB,IAAIC,KACJ,IAAIC,KACJ,IAAIC,GAAe,CACnB,KAAK,GAAIC,GAAI,EAAGA,EAAIL,EAAM5zC,GAAGO,OAAQ0zC,IAAK,CACzC1B,EAAajtC,KAAKssC,YAAYY,KAAOltC,KAAKssC,YAAYa,WAAWC,kBACjE,IAAIwB,GAAoD5uC,KAAKssC,YAAYa,WAAW0B,QAAQP,EAAM5zC,GAAGo0C,WAAWH,GAAGvC,WACnH,IAAIwC,GAAa,KAAM,CACtB,GAAI5uC,KAAKssC,YAAYyC,oBAAqB,CACzC9B,EAAajtC,KAAKssC,YAAYY,KAAOltC,KAAKssC,YAAYyC,oBAAoB3B,kBAC1EwB,GAAY5uC,KAAKssC,YAAYyC,oBAAoBF,QAAQP,EAAM5zC,GAAGo0C,WAAWH,GAAGvC,aAGlF,GAAIwC,GAAa,KAAM,CACtBz0B,EAAWy0B,EAAUz0B,QACrB,IAAIA,GAAY,KAAM,CACrB6yB,GAAe7yB,EAAS6yB,WAExB,IAAIgC,GAAuB,CAC3B,IAAI1B,GAAa,KAAM,CACtB,IAAK,GAAI58B,GAAW,EAAGA,EAAI48B,EAAU2B,iBAAiBh0C,OAAQyV,IAAK,CAClE,GAAI48B,EAAU2B,iBAAiBv+B,IAAM49B,EAAM5zC,GAAGo0C,WAAWH,GAAI,CAC5DK,EAAgB1B,EAAU4B,cAAcx+B,EACxC,SAIH69B,IAAgB,EAAIK,EAAUO,WAAaH,GAAiB/B,EAAcjtC,KAAKssC,YAAYmB,kBAEvF,CAEJc,GAAchB,OAGX,CAGJgB,GAAchB,EAEfkB,EAAiBC,GAASzB,CAC1BuB,GAAWE,KAAWE,EAGvB,GAAMf,EAAkBA,EAAkB5yC,OAAS,GAAKszC,GAAeP,GAAgBL,EAAkBA,EAAkB1yC,OAAS,GAAGA,QAAQ,EAAI,CAElJ,IAAK,GAAIm0C,GAAY,EAAGA,EAAKX,EAAiBxzC,OAAQm0C,IAAM,CAC3DzB,EAAkBA,EAAkB1yC,OAAS,GAAGmI,KAAKorC,EAAWY,GAChExB,GAAuBA,EAAuB3yC,OAAS,GAAGmI,KAAKqrC,EAAiBW,IAEjFvB,EAAkBA,EAAkB5yC,OAAS,IAAMszC,MAE/C,CAIJ,GAAGZ,EAAkBA,EAAkB1yC,OAAS,GAAG0yC,EAAkBA,EAAkB1yC,OAAS,GAAGA,OAAO,IAAI,KAAK,CAClH0yC,EAAkBA,EAAkB1yC,OAAS,GAAGkrC,KAChDyH,GAAuBA,EAAuB3yC,OAAS,GAAGkrC,KAC1D0H,GAAkBA,EAAkB5yC,OAAS,IAAMsyC,CACnDQ,GAAoBA,EAAoB9yC,OAAS,IAAI,EAEtD6yC,EAAyBA,EAAyB7yC,OAAS,GAAG,IAC9D0yC,GAAkBvqC,QAClBwqC,GAAuBxqC,QACvByqC,GAAkBzqC,KAAK,EACvB2qC,GAAoB3qC,KAAK,EACzB0qC,GAAyB1qC,KAAK,MAC9B,KAAK,GAAIgsC,GAAY,EAAGA,EAAKX,EAAiBxzC,OAAQm0C,IAAM,CAC3DzB,EAAkBA,EAAkB1yC,OAAS,GAAGmI,KAAKorC,EAAWY,GAChExB,GAAuBA,EAAuB3yC,OAAS,GAAGmI,KAAKqrC,EAAiBW,IAEjFvB,EAAkBA,EAAkB5yC,OAAS,GAAKszC,EAEnD,GAAI7zC,EAAK4zC,EAAMrzC,OAAS,EAAI,CAC3B,GAAK4yC,EAAkBA,EAAkB5yC,OAAS,IAAO+yC,EAAc,CACtEL,EAAkBA,EAAkB1yC,OAAS,GAAGmI,KAAK,KACrDwqC,GAAuBA,EAAuB3yC,OAAS,GAAGmI,KAAK6pC,EAC/DY,GAAkBA,EAAkB5yC,OAAS,IAAMsyC,CACnDQ,GAAoBA,EAAoB9yC,OAAS,IAAI,KAOzDoyC,EAAS,GAAGrtC,KAAKssC,YAAYa,WAAWkC,OAAOrvC,KAAKssC,YAAYa,WAAWC,oBAAoBH,CAE/F,IAAIqC,GAAwB,GAAIC,cAAavC,EAAY,EAEzD,KAAK,GAAItyC,GAAI,EAAGA,EAAIizC,EAAkB1yC,OAAQP,IAAK,CAElD,GAAI80C,GAAiB,EAAIxvC,KAAKssC,YAAY4B,WAAaluC,KAAKssC,YAAY8B,MACxE,IAAIqB,GAAsB,CAC1B,IAAGzvC,KAAKssC,YAAYoD,OAAO,SAAS,CACnCF,EAAS,EAAIxvC,KAAKssC,YAAY4B,WAAaluC,KAAKssC,YAAY8B,QAAQJ,EAAaH,EAAkBnzC,IAAI,MAEnG,IAAGsF,KAAKssC,YAAYoD,OAAO,UAAU,CACzC,GAAG5B,EAAyBpzC,GAAG,CAC9B+0C,GAAgB,EAAe5B,EAAkBnzC,IAAIqzC,EAAoBrzC,QAGtE,IAAGsF,KAAKssC,YAAYoD,OAAO,QAAQ,CACvCF,EAAUxvC,KAAK2sC,WAAWkB,EAAkBnzC,IAAK,EAAIsF,KAAKssC,YAAY6B,aAIvE,IAAK,GAAIh0C,GAAI,EAAGA,EAAIwzC,EAAkBjzC,GAAGO,OAAQd,IAAK,CACrD,GAAIy0C,GAA+BjB,EAAkBjzC,GAAGP,EACxD8yC,GAAaW,EAAuBlzC,GAAGP,EACvC,IAAIy0C,GAAa,KAAM,CACtBz0B,EAAWy0B,EAAUz0B,QACrB,IAAIA,GAAY,KAAM,CACrB,GAAIw1B,GAAsB,GAAIJ,cAAap1B,EAASy1B,mBAAmBD,OACvE,KAAK,GAAIzpC,GAAW,EAAGA,EAAIiU,EAAS6yB,YAAa9mC,IAAK,CACrDopC,EAASxS,KAAO6S,EAAOzpC,EAAE,GAAG+mC,EAAauC,CACzCF,GAASxS,KAAO6S,EAAOzpC,EAAE,EAAI,GAAG+mC,EAAaI,CAC7CiC,GAASxS,KAAO6S,EAAOzpC,EAAE,EAAI,GAG9B,GAAI8oC,GAAuB,CAC3B,IAAI1B,GAAa,KAAM,CACtB,IAAK,GAAI58B,GAAW,EAAGA,EAAI48B,EAAU2B,iBAAiBh0C,OAAQyV,IAAK,CAClE,GAAI48B,EAAU2B,iBAAiBv+B,IAAM1Q,KAAKwrC,MAAMsD,WAAWp0C,GAAI,CAC9Ds0C,EAAgB1B,EAAU4B,cAAcx+B,EACxC,SAIH8+B,IAAcZ,EAAUO,WAAaH,GAAiB/B,EAAcjtC,KAAKssC,YAAYmB,kBAGjF,CAEJ+B,GAAUjC,EAAiBkC,OAGzB,CACHD,GAAUjC,EAAiBkC,GAK7BpC,IAAWrtC,KAAKssC,YAAYa,WAAWkC,OAASrvC,KAAKssC,YAAYa,WAAW0C,SAAS5C,CAErFI,IAAWrtC,KAAKssC,YAAYwD,QAM7B,GAAIC,GAAgC,GAAI9E,GAAAxuC,QAAe8yC,aAAc,EACrEQ,GAAexsC,IAAI+rC,EACnB,IAAIU,GAAgCD,EAAeJ,MACnDI,GAAetsC,SAEfzD,MAAK6sC,cAAgB,GAAItB,GAAA9uC,QAAiBuzC,EAC1ChwC,MAAK6sC,cAAcoD,aAAa,GAAI/E,GAAAzuC,QAAiBuzC,GACrDhwC,MAAK6sC,cAAcqD,oBAAoB,SAAU,GAAI/E,GAAA1uC,QAAgBuzC,EAAc,OAEnFhwC,MAAK+sC,aAAe/sC,KAAKwoC,UAAU2H,WAAWnwC,KAAK6sC,cAEnD7sC,MAAKynB,SAAWznB,KAAKssC,YAAY7kB,QACjC,IAAIpc,GAAoB,GAAIggC,GAAA5uC,OAC5BuD,MAAKuB,MAAQ,GAAIqZ,GAAAne,OACjBuD,MAAKuB,MAAM6J,aAAaC,EAASrL,KAAKynB,SAAS4B,aAAa,GAC5DrpB,MAAKuB,MAAM6uC,SAAW,GAAIhF,GAAA3uC,QAAO,EAAE,EAAE,EAAE,EAAGuD,KAAKssC,YAAY+D,UAAU,GAAIrwC,KAAKssC,YAAY+D,UAAU,GACpGrwC,MAAKynB,SAAS6oB,WAAa,KAWrBhzC,GAAA4E,UAAAquC,WAAP,SAAkBC,GACjBxwC,KAAKwrC,OAAOgF,EAONlzC,GAAA4E,UAAAuuC,eAAP,YAcOnzC,GAAA4E,UAAAwuC,kBAAP,SAAyBC,GAExB,MAAO3wC,MAAK4wC,gBAaNtzC,GAAA4E,UAAA2uC,oBAAP,SAA2BhuC,EAAUE,GAEpC,MAAO/C,MAAK8wC,kBAcNxzC,GAAA4E,UAAA6uC,wBAAP,SAA+BJ,GAE9B,MAAO3wC,MAAKgxC,sBAuBN1zC,GAAA4E,UAAA+uC,kBAAP,SAAyB5tC,GAExB,MAAOrD,MAAKkxC,gBAaN5zC,GAAA4E,UAAAivC,oBAAP,SAA2BtuC,EAAUE,GAEpC,MAAO/C,MAAKoxC,kBAaN9zC,GAAA4E,UAAAmvC,mBAAP,SAA0BV,GAEzB,MAAO3wC,MAAKsxC,iBAUNh0C,GAAA4E,UAAAqvC,cAAP,SAAqBC,GAEpB,MAAOxxC,MAAKyxC,YAUNn0C,GAAA4E,UAAAwvC,eAAP,SAAsBF,GAErB,MAAOxxC,MAAK2xC,aAYNr0C,GAAA4E,UAAA0vC,cAAP,SAAqBJ,GAEpB,MAAOxxC,MAAK6xC,YAYNv0C,GAAA4E,UAAA4vC,YAAP,SAAmBN,GAElB,MAAOxxC,MAAK+xC,UAeNz0C,GAAA4E,UAAA8vC,mBAAP,SAA0BrB,GAEzB,MAAO3wC,MAAKiyC,iBAqBN30C,GAAA4E,UAAAgwC,cAAP,SAAqBtgB,EAAgCC,GAAhC,GAAAD,QAAA,GAA8B,CAA9BA,GAA6B,EAAG,GAAAC,QAAA,GAA4B,CAA5BA,GAA2B,EAE/E,MAAO7xB,MAAKssC,YAoBNhvC,GAAA4E,UAAAiwC,oBAAP,SAA2B3uC,IAuBpBlG,GAAA4E,UAAAkwC,YAAP,SAAmBxgB,EAA2BC,EAAyB2e,IAkBhElzC,GAAA4E,UAAAmwC,aAAP,SAAoBzgB,EAA2BC,IAkDxCv0B,GAAA4E,UAAAowC,cAAP,SAAqBC,EAAmB3gB,EAAgCC,GAAhC,GAAAD,QAAA,GAA8B,CAA9BA,GAA6B,EAAG,GAAAC,QAAA,GAA4B,CAA5BA,GAA2B,GAkCrFv0B,GAAAk1C,iBAAd,SAA+BC,EAAiBC,GAE/C,MAAO,OAGEp1C,GAAA4E,UAAAuN,MAAP,WAEF,GAAImhB,GAAyBtzB,EAAUwvC,YAAkB,OAAGxvC,EAAUwvC,YAAY3G,MAAQ,GAAI7oC,EAE9F0C,MAAK6wB,OAAOD,EAEZ,OAAOA,GAIDtzB,GAAA4E,UAAA2uB,OAAP,SAAcD,GAEbpoB,EAAAtG,UAAM2uB,OAAM71B,KAAAgF,KAAC4wB,EAEbA,GAAYqd,UAAYjuC,KAAK2sC,UAC7B/b,GAAY+hB,WAAa3yC,KAAK4sC,WAC9Bhc,GAAYgiB,WAAa5yC,KAAKssC,WAE9B1b,GAAYx0B,KAAO4D,KAAKwrC,MAlyCVluC,GAAAwvC,YAA+B,GAAInsC,MAEpCrD,GAAAoL,UAAmB,mBAkyClC,OAAApL,IAtyCwBumC,EAAApnC,QAwyCxBuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M1Cg8OAzI,GAAQ0B,Q0Ch8OOa,I1Ck8OZu1C,4CAA4CvrC,UAAUwrC,6CAA6CxrC,UAAUyrC,8CAA8CzrC,UAAUmO,sCAAsCnO,UAAU0rC,8BAA8B1rC,UAAU2rC,kCAAkC3rC,UAAU4B,iDAAiD,iDAAiDiB,gCAAgC,gCAAgCu8B,oCAAoC,oCAAoCwM,+CAA+C,+CAA+CC,wCAAwC,0CAA0Ch1C,8BAA8B,SAASlE,EAAQkB,EAAOJ,GAC5vB,Y2Cx1RA,IAAAq4C,GAAAn5C,EAAwC,uCAAhCc,GAAAqC,UAAAg2C,EAAA32C,OACR,IAAA8C,GAAAtF,EAAsC,oCAA9Bc,GAAA8B,OAAA0C,EAAA9C,OACR,IAAA42C,GAAAp5C,EAA6C,8CAArCc,GAAAgC,iBAAAs2C,EAAA52C,OACR,IAAA4qB,GAAAptB,EAA2C,2CAAnCc,GAAAw4B,cAAAlM,EAAA5qB,OACR,IAAA8tB,GAAAtwB,EAAkD,oDAA1Cc,GAAA00B,uBAAAlF,EAAA9tB,OAER,IAAAwwB,GAAAhzB,EAAwC,uCAAhCc,GAAAuiC,UAAArQ,EAAAxwB,OACR,IAAA62C,GAAAr5C,EAAyC,wCAAjCc,GAAAyC,WAAA81C,EAAA72C,OACR,IAAA82C,GAAAt5C,EAA0C,yCAAlCc,GAAAsC,YAAAk2C,EAAA92C,OACR,IAAA+2C,GAAAv5C,EAA6C,6CAArCc,GAAA2lC,gBAAA8S,EAAA/2C,OACR,IAAAg3C,GAAAx5C,EAAwC,uCAAhCc,GAAAoC,UAAAs2C,EAAAh3C,OACR,IAAAi3C,GAAAz5C,EAAyC,wCAAjCc,GAAA2C,WAAAg2C,EAAAj3C,OACR,IAAA4C,GAAApF,EAAqC,mCAA7Bc,GAAA6sC,MAAAvoC,EAAA5C,OACR,IAAAk3C,GAAA15C,EAAqC,mCAA7Bc,GAAAmC,MAAAy2C,EAAAl3C,OACR,IAAAm3C,GAAA35C,EAAsC,oCAA9Bc,GAAA6C,OAAAg2C,EAAAn3C,OACR,IAAAonC,GAAA5pC,EAAsC,oCAA9Bc,GAAAkC,OAAA4mC,EAAApnC,OACR,IAAAqnC,GAAA7pC,EAAwC,uCAAhCc,GAAAuC,UAAAwmC,EAAArnC,U3C02RL0qB,uCAAuC;AAAuCgD,oCAAoC,oCAAoC6C,8CAA8C,8CAA8CjD,2CAA2C,2CAA2C+C,oDAAoD,oDAAoDuC,uCAAuC,uCAAuC0P,wCAAwC,wCAAwCS,yCAAyC,yCAAyCW,6CAA6C,6CAA6CyD,uCAAuC,uCAAuCiD,wCAAwC,wCAAwCa,mCAAmC,mCAAmCS,mCAAmC,mCAAmCsB,oCAAoC,oCAAoC/C,oCAAoC,oCAAoCC,uCAAuC,yCAAyCkN,qCAAqC,SAAS55C,EAAQkB,EAAOJ,GACp0C,Y4Cp3RA,IAAA+4C,GAAA,WAAA,QAAAA,MAMeA,EAAAC,MAAe,OAMfD,GAAAE,KAAc,MAMdF,GAAAG,OAAgB,QAC/B,OAAAH,KAEA9xC,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M5C43RAzI,GAAQ0B,Q4C53ROq3C,O5C83RTI,wCAAwC,SAASj6C,EAAQkB,EAAOJ,GACtE,Y6Cr5RA,IAAAo5C,GAAA,WAAA,QAAAA,MAKeA,EAAAC,OAAgB,QAKhBD,GAAAE,OAAgB,QAC/B,OAAAF,KAEAnyC,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M7C65RAzI,GAAQ0B,Q6C75RO03C,O7C+5RTG,+CAA+C,SAASr6C,EAAQkB,EAAOJ,GAC7E,Y8C96RA,IAAAw5C,GAAA,WAAA,QAAAA,MAKeA,EAAAC,MAAe,CAKfD,GAAAE,QAAiB,CAMjBF,GAAAG,QAAiB,CAMjBH,GAAAI,SAAkB,CAKlBJ,GAAAK,WAAoB,EAMpBL,GAAAM,aAAsB,CAMtBN,GAAAO,aAAsB,CAMtBP,GAAAQ,YAAqB,CACpC,OAAAR,KAEAvyC,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M9Ci7RAzI,GAAQ0B,Q8Cj7RO83C,O9Cm7RTS,+CAA+C,SAAS/6C,EAAQkB,EAAOJ,GAC7E,Y+C/9RA,IAAAk6C,GAAA,WAAA,QAAAA,MAEeA,EAAAC,SAAkB,SAClBD,GAAAE,SAAkB,SACjC,OAAAF,KAEAjzC,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M/C4+RAzI,GAAQ0B,Q+C5+ROw4C,O/C8+RTG,wCAAwC,SAASn7C,EAAQkB,EAAOJ,GACtE,YgD//RA,IAAAs6C,GAAAp7C,EAAiC,8CACjC,IAAAq7C,GAAAr7C,EAAiC,8CACjC,IAAAo5B,GAAAp5B,EAAsB,6BAOtB,IAAAs7C,GAAA,WAyBI,QAAAA,GAAYC,EAA+BlT,EAA2BmT,GAA1D,GAAAD,QAAA,GAA6B,CAA7BA,EAAA,KAA+B,GAAAlT,QAAA,GAAyB,CAAzBA,EAAA,KAA2B,GAAAmT,QAAA,GAA6C,CAA7CA,EAAiBJ,EAAA54C,QAAoBy4C,SAEvGl1C,KAAK01C,QACL11C,MAAK21C,YACL31C,MAAK41C,kBAAkB,EACvB51C,MAAK61C,kBAAkB,MAEvB,IAAGL,GAAU,MAAQlT,GAAM,KAAK,CAC5BtiC,KAAK01C,MAAM,GAAGpT,CACdtiC,MAAK21C,UAAU,GAAGH,MAElB,CACAx1C,KAAK01C,MAAM,KACX11C,MAAK21C,UAAU,MAInB31C,KAAKytB,WAAW,GAAI4F,GAAA52B,QAAM,GAAI,EAC9BuD,MAAK81C,YAAY,GAAIziB,GAAA52B,OACrBuD,MAAK+1C,WAAW,GAAI1iB,GAAA52B,OACpBuD,MAAKg2C,WAAW,GAAI3iB,GAAA52B,OACpBuD,MAAKi2C,OAAO,KACZj2C,MAAKk2C,SAAST,EAGlBzzC,OAAAC,eAAWszC,EAAArzC,UAAA,mBhDu+RPC,IgDv+RJ,WAEI,MAAOnC,MAAK41C,kBhDw+RZvzC,WAAY,KACZC,aAAc,MgDv+RlBN,QAAAC,eAAWszC,EAAArzC,UAAA,mBhD0+RPC,IgD1+RJ,WAEI,MAAOnC,MAAK61C,kBhD2+RZxzC,WAAY,KACZC,aAAc,MgDz+RlBN,QAAAC,eAAWszC,EAAArzC,UAAA,UhD4+RPC,IgD5+RJ,WAEI,MAAOnC,MAAKm2C,ShD6+RZ5yC,IgD3+RJ,SAAkBC,GAEdxD,KAAKm2C,QAAQ3yC,GhD4+RbnB,WAAY,KACZC,aAAc,MgD3+RlBN,QAAAC,eAAWszC,EAAArzC,UAAA,YhD8+RPC,IgD9+RJ,WAEI,MAAOnC,MAAK21C,WhD++RZtzC,WAAY,KACZC,aAAc,MgD7+RlBN,QAAAC,eAAWszC,EAAArzC,UAAA,QhDg/RPC,IgDh/RJ,WAEI,MAAOnC,MAAK01C,OhDi/RZrzC,WAAY,KACZC,aAAc,MgD/+RXizC,GAAArzC,UAAAk0C,QAAP,SAAeC,EAAiBC,EAAiBC,EAAgBC,GAE7D,GAAGx2C,KAAK21C,UAAU31C,KAAK21C,UAAU16C,OAAO,GAAGA,QAAQ,EAAE,CAEjD+E,KAAK21C,UAAU31C,KAAK21C,UAAU16C,OAAO,GAAGmI,KAAKkyC,EAAA74C,QAAoBg4C,QACjEz0C,MAAK01C,MAAM11C,KAAK01C,MAAMz6C,OAAO,GAAGmI,KAAKpD,KAAK+1C,WAAWlzC,EACrD7C,MAAK01C,MAAM11C,KAAK01C,MAAMz6C,OAAO,GAAGmI,KAAKpD,KAAK+1C,WAAWhzC,GAEzD/C,KAAK21C,UAAU31C,KAAK21C,UAAU16C,OAAO,GAAGmI,KAAKkyC,EAAA74C,QAAoBk4C,SAEjE,IAAG30C,KAAKi2C,OAAO,CACXj2C,KAAKg2C,WAAWnzC,EAAE0zC,EAAQv2C,KAAK+1C,WAAWlzC,CAC1C7C,MAAKg2C,WAAWjzC,EAAEyzC,EAAQx2C,KAAK+1C,WAAWhzC,CAC1C/C,MAAKg2C,WAAWpoB,WAEhB,IAAI6oB,GAAgB,GAAIpjB,GAAA52B,QAAMuD,KAAKg2C,WAAWnzC,EAAG7C,KAAKg2C,WAAWjzC,EACjE0zC,GAAU7oB,WACV,IAAI8oB,GAAqBh9B,KAAKi9B,KAAK32C,KAAKg2C,WAAWnzC,EAAI7C,KAAKytB,WAAW5qB,EAAI7C,KAAKg2C,WAAWjzC,EAAI/C,KAAKytB,WAAW1qB,GAAK,IAAM2W,KAAKk9B,EAC/H,IAAGF,EAAc,IAAIA,GAAe,GAEpC12C,MAAK41C,iBAAiB51C,KAAK41C,iBAAiB36C,OAAO,IAAIy7C,CACvD12C,MAAKg2C,WAAWnzC,EAAEwzC,EAASr2C,KAAK+1C,WAAWlzC,CAC3C7C,MAAKg2C,WAAWjzC,EAAEuzC,EAASt2C,KAAK+1C,WAAWhzC,CAC3C/C,MAAKg2C,WAAWpoB,WAEhB,IAAIipB,GAAuBn9B,KAAKo9B,MAAM92C,KAAKg2C,WAAWnzC,EAAG4zC,EAAU1zC,EAAI/C,KAAKg2C,WAAWjzC,EAAG0zC,EAAU5zC,EAAG7C,KAAKg2C,WAAWnzC,EAAG4zC,EAAU5zC,EAAI7C,KAAKg2C,WAAWjzC,EAAG0zC,EAAU1zC,EACrK,IAAG8zC,EAAe,IAAIA,GAAgB,GAEtCvQ,SAAQC,IAAI,kBAAkBsQ,EAC9BvQ,SAAQC,IAAI,iBAAiBmQ,EAC7BpQ,SAAQC,IAAI,yDAAyDvmC,KAAK41C,iBAAiB51C,KAAK41C,iBAAiB36C,OAAO,GACxH+E,MAAKytB,WAAW5qB,EAAE4zC,EAAU5zC,CAC5B7C,MAAKytB,WAAW1qB,EAAE0zC,EAAU1zC,CAC5B,IAAG,EAAiB,EAChB/C,KAAK01C,MAAM11C,KAAK01C,MAAMz6C,OAAO,GAAGmI,KAAK,OAErCpD,MAAK01C,MAAM11C,KAAK01C,MAAMz6C,OAAO,GAAGmI,KAAK,OAGzC,CACApD,KAAK01C,MAAM11C,KAAK01C,MAAMz6C,OAAO,GAAGmI,KAAK,GAEzCpD,KAAK+1C,WAAWlzC,EAAE0zC,CAClBv2C,MAAK+1C,WAAWhzC,EAAEyzC,CAClBx2C,MAAK01C,MAAM11C,KAAK01C,MAAMz6C,OAAO,GAAGmI,KAAKizC,EACrCr2C,MAAK01C,MAAM11C,KAAK01C,MAAMz6C,OAAO,GAAGmI,KAAKkzC,EACrCt2C,MAAK01C,MAAM11C,KAAK01C,MAAMz6C,OAAO,GAAGmI,KAAKmzC,EACrCv2C,MAAK01C,MAAM11C,KAAK01C,MAAMz6C,OAAO,GAAGmI,KAAKozC,GAIlCjB,GAAArzC,UAAA60C,OAAP,SAAcl0C,EAAUE,GAEpB,GAAG/C,KAAK21C,UAAU31C,KAAK21C,UAAU16C,OAAO,GAAGA,QAAQ,EAAE,CAEjD+E,KAAK21C,UAAU31C,KAAK21C,UAAU16C,OAAO,GAAGmI,KAAKkyC,EAAA74C,QAAoBg4C,QACjEz0C,MAAK01C,MAAM11C,KAAK01C,MAAMz6C,OAAO,GAAGmI,KAAKpD,KAAK+1C,WAAWlzC,EACrD7C,MAAK01C,MAAM11C,KAAK01C,MAAMz6C,OAAO,GAAGmI,KAAKpD,KAAK+1C,WAAWhzC,GAEzD/C,KAAK21C,UAAU31C,KAAK21C,UAAU16C,OAAO,GAAGmI,KAAKkyC,EAAA74C,QAAoBi4C,QACjE10C,MAAK01C,MAAM11C,KAAK01C,MAAMz6C,OAAO,GAAGmI,KAAKP,EACrC7C,MAAK01C,MAAM11C,KAAK01C,MAAMz6C,OAAO,GAAGmI,KAAKL,EACrC,IAAG/C,KAAKi2C,OAAQ,CACZj2C,KAAKg2C,WAAWnzC,EAAIA,EAAI7C,KAAK+1C,WAAWlzC,CACxC7C,MAAKg2C,WAAWjzC,EAAIA,EAAI/C,KAAK+1C,WAAWhzC,CACxC/C,MAAKg2C,WAAWpoB,WAChB5tB,MAAKytB,WAAW5qB,EAAE7C,KAAKg2C,WAAWnzC,CAClC7C,MAAKytB,WAAW1qB,EAAE/C,KAAKg2C,WAAWjzC,CAClC,IAAI2zC,GAAuBh9B,KAAKo9B,MAAM92C,KAAKg2C,WAAWnzC,EAAG7C,KAAKg2C,WAAWjzC,GAAK,IAAM2W,KAAKk9B,EACzF52C,MAAK41C,iBAAiB51C,KAAK41C,iBAAiB36C,OAAO,IAAIy7C,EAE3D12C,KAAK+1C,WAAWlzC,EAAEA,CAClB7C,MAAK+1C,WAAWhzC,EAAEA,EAGfwyC,GAAArzC,UAAA4W,OAAP,SAAcjW,EAAUE,GAEpB,GAAG/C,KAAK21C,UAAU31C,KAAK21C,UAAU16C,OAAO,GAAGA,OAAO,EAAE,CAChD+E,KAAKg3C,iBACLh3C,MAAK41C,iBAAiBxyC,KAAK,EAC3BpD,MAAK61C,iBAAiBzyC,KAAK,MAC3BpD,MAAK21C,UAAUvyC,QACfpD,MAAK01C,MAAMtyC,SAEfpD,KAAK81C,YAAYjzC,EAAIA,CACrB7C,MAAK81C,YAAY/yC,EAAIA,CACrB/C,MAAK+1C,WAAWlzC,EAAIA,CACpB7C,MAAK+1C,WAAWhzC,EAAIA,EAGjBwyC,GAAArzC,UAAA80C,gBAAP,WAEI,GAAIh3C,KAAK81C,YAAYjzC,GAAK7C,KAAK+1C,WAAWlzC,GAAO7C,KAAK81C,YAAY/yC,GAAK/C,KAAK+1C,WAAWhzC,EAAG,CACtF,GAAG/C,KAAKi2C,OAAQ,CACZj2C,KAAK+2C,OAAO/2C,KAAK81C,YAAYjzC,EAAG7C,KAAK81C,YAAY/yC,QAGrD,CACA/C,KAAK61C,iBAAiB71C,KAAK61C,iBAAiB56C,OAAO,GAAG,MAIvDs6C,GAAArzC,UAAA+0C,WAAP,SAAkBp0C,EAAUE,IAYrBwyC,GAAArzC,UAAAg1C,WAAP,SAAkBr0C,EAAUE,IAYhC,OAAAwyC,KAEAvzC,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MhDo+RAzI,GAAQ0B,QgDp+RO84C,IhDs+RZtY,6BAA6B31B,UAAUgtC,8CAA8C,8CAA8CU,8CAA8C,gDAAgDmC,oCAAoC,SAASl9C,EAAQkB,EAAOJ,GAChS,YiDhrSA,IAAAq8C,GAAAn9C,EAA4B,uCAC5B,IAAAq7C,GAAAr7C,EAAiC,8CACjC,IAAAutB,GAAAvtB,EAAmC,qDAEnC,IAAAo5B,GAAAp5B,EAAsB,6BAEtB,IAAAgxC,GAAAhxC,EAA6B,4CAE7B,IAAAo9C,GAAAp9C,EAA+B,8CAC/B,IAAAixC,GAAAjxC,EAA+B,8CAG/B,IAAAq9C,GAAAr9C,EAAwC,oDACxC,IAAAsxC,GAAAtxC,EAA6B,+CAgB7B,IAAAs9C,GAAA,WAcC,QAAAA,GAAYpiC,GAFJnV,KAAAw3C,kBAAwB,GAAInkB,GAAA52B,OAGnCuD,MAAKy3C,QAAQtiC,CACbnV,MAAK03C,sBACL13C,MAAK23C,wBACL33C,MAAK43C,kBAAkB,IACvB53C,MAAK63C,oBAAoB,IACzB73C,MAAKw3C,kBAAkB,GAAInkB,GAAA52B,QAuCrB86C,EAAAr1C,UAAA41C,gBAAP,SAAuBC,EAAsBv6B,EAAsBw6B,EAAuBC,GAA7C,GAAAz6B,QAAA,GAAoB,CAApBA,EAAA,KAAsB,GAAAw6B,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,MAEzFj4C,KAAKk4C,WAELl4C,MAAK43C,kBAAkB,GAAIR,GAAA36C,OAC3BuD,MAAK43C,kBAAkB3B,OAAO,IAC9B,IAAGj2C,KAAKw3C,kBAAkB30C,GAAG,GAAK7C,KAAKw3C,kBAAkBz0C,GAAG,EAC3D/C,KAAK43C,kBAAkB9+B,OAAO9Y,KAAKw3C,kBAAkB30C,EAAG7C,KAAKw3C,kBAAkBz0C,EAChF/C,MAAK03C,oBAAoBt0C,KAAKpD,KAAK43C,mBAiB7BL,GAAAr1C,UAAAi2C,UAAP,SAAiB1L,EAAsB2L,GAAA,GAAAA,QAAA,GAAgB,CAAhBA,EAAA,EAEtCp4C,KAAKk4C,WAELl4C,MAAK43C,kBAAkB,GAAIR,GAAA36C,OAC3BuD,MAAK43C,kBAAkB3B,OAAO,IAC9B,IAAGj2C,KAAKw3C,kBAAkB30C,GAAG,GAAK7C,KAAKw3C,kBAAkBz0C,GAAG,EAC3D/C,KAAK43C,kBAAkB9+B,OAAO9Y,KAAKw3C,kBAAkB30C,EAAG7C,KAAKw3C,kBAAkBz0C,EAChF/C,MAAK03C,oBAAoBt0C,KAAKpD,KAAK43C,mBAuF7BL,GAAAr1C,UAAAm2C,kBAAP,SAAyBrhB,EAAmBshB,EAA8BC,EAAsBC,EAA8Bh7B,EAAsBi7B,EAA6BC,EAAoCC,GAAvF,GAAAn7B,QAAA,GAAoB,CAApBA,EAAA,KAAsB,GAAAi7B,QAAA,GAA2B,CAA3BA,EAAA,MAA6B,GAAAC,QAAA,GAAkC,CAAlCA,EAAA,MAAoC,GAAAC,QAAA,GAA0B,CAA1BA,EAAA,EAEpN34C,KAAKk4C,WAELl4C,MAAK43C,kBAAkB,GAAIR,GAAA36C,OAC3BuD,MAAK43C,kBAAkB3B,OAAO,IAC9B,IAAGj2C,KAAKw3C,kBAAkB30C,GAAG,GAAK7C,KAAKw3C,kBAAkBz0C,GAAG,EAC3D/C,KAAK43C,kBAAkB9+B,OAAO9Y,KAAKw3C,kBAAkB30C,EAAG7C,KAAKw3C,kBAAkBz0C,EAChF/C,MAAK03C,oBAAoBt0C,KAAKpD,KAAK43C,mBAgE7BL,GAAAr1C,UAAA6X,MAAP,WAGC/Z,KAAKy3C,QAAQ37C,SAAS2H,UAUhB8zC,GAAAr1C,UAAA4kB,SAAP,SAAgB8xB,GAEfA,EAAenB,QAAQ37C,SAAS+0B,OAAO7wB,KAAKy3C,QAAQ37C,UAqD9Cy7C,GAAAr1C,UAAA22C,aAAP,SAAoBC,EAAkBC,EAAkBC,EAAkBC,EAAkB1C,EAAgBC,GAG3G,KAAM,IAAIc,GAAA76C,QAA2B,gBAmD/B86C,GAAAr1C,UAAAk0C,QAAP,SAAeC,EAAiBC,EAAiBC,EAAgBC,GAGhE,GAAGx2C,KAAK43C,mBAAmB,KAAK,CAC/B53C,KAAK43C,kBAAkBxB,QAAQC,EAAUC,EAAUC,EAASC,GAE7D,GAAGx2C,KAAK63C,qBAAqB,KAAK,CACjC73C,KAAK63C,oBAAoBzB,QAAQC,EAAUC,EAAUC,EAASC,GAE/Dx2C,KAAKw3C,kBAAkB30C,EAAE0zC,CACzBv2C,MAAKw3C,kBAAkBz0C,EAAEyzC,EAyBnBe,GAAAr1C,UAAAg3C,WAAP,SAAkBr2C,EAAUE,EAAUid,GAErC,GAAIm5B,GAAQn5B,EAAO,KACnB,IAAGhgB,KAAK43C,mBAAmB,KAAK,CAC/B53C,KAAK43C,kBAAkB9+B,OAAOjW,EAAEmd,EAAQjd,EACxC,KAAI,GAAIrI,GAAE,EAAGA,GAAG,EAAEA,IAAI,CAErB,GAAI0+C,GAAS,GAAM,IAAI,GAAG1/B,KAAKk9B,GAAG,GAClC,IAAIyC,GAAUD,EAAW,IAAI,GAAI1/B,KAAKk9B,GAAG,GACzC52C,MAAK43C,kBAAkBxB,QAAQvzC,EAAG6W,KAAKmK,IAAIw1B,GAASF,EAAUp2C,EAAG2W,KAAKiK,IAAI01B,GAASF,EAASt2C,EAAG6W,KAAKmK,IAAIu1B,GAAQp5B,EAASjd,EAAG2W,KAAKiK,IAAIy1B,GAAQp5B,IAG/I,GAAGhgB,KAAK63C,qBAAqB,KAAK,CACjC73C,KAAK63C,oBAAoB/+B,OAAOjW,EAAGE,EAAEid,EACrC,IAAIm5B,GAAQn5B,EAAO,GACnBhgB,MAAK63C,oBAAoBzB,QAAQvzC,EAAE,EAAWE,EAAE,EAAWF,EAAEmd,EAAQjd,EACrE/C,MAAK63C,oBAAoBzB,QAAQvzC,EAAE,EAAWE,EAAE,EAAWF,EAAGE,EAAEid,EAChEhgB,MAAK63C,oBAAoBzB,QAAQvzC,EAAE,EAAWE,EAAE,EAAWF,EAAEmd,EAAQjd,EACrE/C,MAAK63C,oBAAoBzB,QAAQvzC,EAAE,EAAWE,EAAE,EAAWF,EAAGE,EAAEid,IAoB3Du3B,GAAAr1C,UAAAo3C,YAAP,SAAmBz2C,EAAUE,EAAUmB,EAAcC,GAEpDD,GAAO,CACPC,IAAQ,CACR,IAAGnE,KAAK43C,mBAAmB,KAAK,CAE/B53C,KAAK43C,kBAAkB9+B,OAAOjW,EAAGE,EAAEoB,EACnCnE,MAAK43C,kBAAkBxB,QAAQvzC,EAAE,EAASE,EAAE,EAAUF,EAAEqB,EAAOnB,EAC/D/C,MAAK43C,kBAAkBxB,QAAQvzC,EAAE,EAASE,EAAE,EAAUF,EAAGE,EAAEoB,EAC3DnE,MAAK43C,kBAAkBxB,QAAQvzC,EAAE,EAASE,EAAE,EAAUF,EAAEqB,EAAOnB,EAC/D/C,MAAK43C,kBAAkBxB,QAAQvzC,EAAE,EAASE,EAAE,EAAUF,EAAGE,EAAEoB,GAE5D,GAAGnE,KAAK63C,qBAAqB,KAAK,CACjC73C,KAAK63C,oBAAoB/+B,OAAOjW,EAAGE,EAAEoB,EACrCnE,MAAK63C,oBAAoBzB,QAAQvzC,EAAE,EAASE,EAAE,EAAUF,EAAEqB,EAAOnB,EACjE/C,MAAK63C,oBAAoBzB,QAAQvzC,EAAE,EAASE,EAAE,EAAUF,EAAGE,EAAEoB,EAC7DnE,MAAK63C,oBAAoBzB,QAAQvzC,EAAE,EAASE,EAAE,EAAUF,EAAEqB,EAAOnB,EACjE/C,MAAK63C,oBAAoBzB,QAAQvzC,EAAE,EAASE,EAAE,EAAUF,EAAGE,EAAEoB,IAiBxDozC,GAAAr1C,UAAAq3C,iBAAP,SAAwBC,IAqEjBjC,GAAAr1C,UAAAu3C,SAAP,SAAgBjE,EAAgClT,EAAoBmT,IAiC7D8B,GAAAr1C,UAAAw3C,SAAP,SAAgB72C,EAAUE,EAAUmB,EAAcC,GAEjD,GAAGnE,KAAK43C,mBAAmB,KAAK,CAC/B53C,KAAK43C,kBAAkB9+B,OAAOjW,EAAGE,EACjC/C,MAAK43C,kBAAkBb,OAAOl0C,EAAEqB,EAAOnB,EACvC/C,MAAK43C,kBAAkBb,OAAOl0C,EAAEqB,EAAOnB,EAAEoB,EACzCnE,MAAK43C,kBAAkBb,OAAOl0C,EAAGE,EAAEoB,EACnCnE,MAAK43C,kBAAkBb,OAAOl0C,EAAGE,GAElC,GAAG/C,KAAK63C,qBAAqB,KAAK,CACjC73C,KAAK63C,oBAAoB/+B,OAAOjW,EAAGE,EACnC/C,MAAK63C,oBAAoBd,OAAOl0C,EAAEqB,EAAOnB,EACzC/C,MAAK63C,oBAAoBd,OAAOl0C,EAAEqB,EAAOnB,EAAEoB,EAC3CnE,MAAK63C,oBAAoBd,OAAOl0C,EAAGE,EAAEoB,EACrCnE,MAAK63C,oBAAoBd,OAAOl0C,EAAGE,IA8B9Bw0C,GAAAr1C,UAAAy3C,cAAP,SAAqB92C,EAAUE,EAAUmB,EAAcC,EAAey1C,EAAqBC,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAAC,IAG1F,IAAID,EAAc,CACjBA,EAAcD,EAEf,GAAG55C,KAAK43C,mBAAmB,KAAK,CAC/B53C,KAAK43C,kBAAkB9+B,OAAOjW,EAAE+2C,EAAc72C,EAC9C/C,MAAK43C,kBAAkBb,OAAOl0C,EAAEqB,EAAM01C,EAAc72C,EACpD/C,MAAK43C,kBAAkBxB,QAAQvzC,EAAEqB,EAAOnB,EAAGF,EAAEqB,EAAOnB,EAAE82C,EACtD75C,MAAK43C,kBAAkBb,OAAOl0C,EAAEqB,EAAOnB,EAAEoB,EAAO01C,EAChD75C,MAAK43C,kBAAkBxB,QAAQvzC,EAAEqB,EAAOnB,EAAEoB,EAAQtB,EAAEqB,EAAM01C,EAAc72C,EAAEoB,EAC1EnE,MAAK43C,kBAAkBb,OAAOl0C,EAAE+2C,EAAc72C,EAAEoB,EAChDnE,MAAK43C,kBAAkBxB,QAAQvzC,EAAGE,EAAEoB,EAAQtB,EAAGE,EAAEoB,EAAO01C,EACxD75C,MAAK43C,kBAAkBb,OAAOl0C,EAAGE,EAAE82C,EACnC75C,MAAK43C,kBAAkBxB,QAAQvzC,EAAGE,EAAGF,EAAE+2C,EAAc72C,GAEtD,GAAG/C,KAAK63C,qBAAqB,KAAK,CACjC73C,KAAK63C,oBAAoB/+B,OAAOjW,EAAE+2C,EAAc72C,EAChD/C,MAAK63C,oBAAoBd,OAAOl0C,EAAEqB,EAAM01C,EAAc72C,EACtD/C,MAAK63C,oBAAoBzB,QAAQvzC,EAAEqB,EAAOnB,EAAGF,EAAEqB,EAAOnB,EAAE82C,EACxD75C,MAAK63C,oBAAoBd,OAAOl0C,EAAEqB,EAAOnB,EAAEoB,EAAO01C,EAClD75C,MAAK63C,oBAAoBzB,QAAQvzC,EAAEqB,EAAOnB,EAAEoB,EAAQtB,EAAEqB,EAAM01C,EAAc72C,EAAEoB,EAC5EnE,MAAK63C,oBAAoBd,OAAOl0C,EAAE+2C,EAAc72C,EAAEoB,EAClDnE,MAAK63C,oBAAoBzB,QAAQvzC,EAAGE,EAAEoB,EAAQtB,EAAGE,EAAEoB,EAAO01C,EAC1D75C,MAAK63C,oBAAoBd,OAAOl0C,EAAGE,EAAE82C,EACrC75C,MAAK63C,oBAAoBzB,QAAQvzC,EAAGE,EAAGF,EAAE+2C,EAAc72C,IAwBlDw0C,GAAAr1C,UAAA63C,cAAP,SAAqBzK,EAAwB0K,EAAsCC,EAA8BC,GAApE,GAAAF,QAAA,GAAoC,CAApCA,EAAA,KAAsC,GAAAC,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAC,QAAA,GAA8B,CAA9BA,EAAA,KAEhH,GAAGl6C,KAAK43C,mBAAmB,KAAK,EAGhC,GAAG53C,KAAK63C,qBAAqB,KAAK,GAiB5BN,GAAAr1C,UAAAi4C,QAAP,WAECn6C,KAAKo6C,cACLp6C,MAAKk4C,WACLl4C,MAAK43C,kBAAkB,IACvB53C,MAAK63C,oBAAoB,KAiCnBN,GAAAr1C,UAAAm4C,gBAAP,SAAuBtC,EAAsBv6B,EAAsBw6B,EAAuBC,GAA7C,GAAAz6B,QAAA,GAAoB,CAApBA,EAAA,KAAsB,GAAAw6B,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,MAGzFj4C,KAAK63C,oBAAoB,GAAIT,GAAA36C,OAC7B,IAAGuD,KAAKw3C,kBAAkB30C,GAAG,GAAK7C,KAAKw3C,kBAAkBz0C,GAAG,EAC3D/C,KAAK63C,oBAAoB/+B,OAAO9Y,KAAKw3C,kBAAkB30C,EAAG7C,KAAKw3C,kBAAkBz0C,EAClF/C,MAAK23C,sBAAsBv0C,KAAKpD,KAAK63C,qBA0E/BN,GAAAr1C,UAAAo4C,kBAAP,SAAyBtjB,EAAmBshB,EAA8BC,EAAsBC,EAAsBh7B,EAAsBi7B,EAAkCC,EAAgDC,GAAxG,GAAAn7B,QAAA,GAAoB,CAApBA,EAAA,KAAsB,GAAAi7B,QAAA,GAAgC,CAAhCA,EAAA,KAAkC,GAAAC,QAAA,GAA8C,CAA9CA,EAAA,KAAgD,GAAAC,QAAA,GAA0B,CAA1BA,EAAA,EAG7N34C,KAAK63C,oBAAoB,GAAIT,GAAA36C,OAC7B,IAAGuD,KAAKw3C,kBAAkB30C,GAAG,GAAK7C,KAAKw3C,kBAAkBz0C,GAAG,EAC3D/C,KAAK63C,oBAAoB/+B,OAAO9Y,KAAKw3C,kBAAkB30C,EAAG7C,KAAKw3C,kBAAkBz0C,EAClF/C,MAAK23C,sBAAsBv0C,KAAKpD,KAAK63C,qBA+K/BN,GAAAr1C,UAAAq4C,UAAP,SAAiB5a,EAAsB8M,EAA0B2L,EAAkBoC,EAA8BC,EAAgCC,EAAuBC,EAA0BC,GAAjL,GAAAjb,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAA8M,QAAA,GAAwB,CAAxBA,EAAA,EAA0B,GAAA2L,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAoC,QAAA,GAA4B,CAA5BA,EAAA,MAA8B,GAAAC,QAAA,GAA8B,CAA9BA,EAAA,KAAgC,GAAAC,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,KAA0B,GAAAC,QAAA,GAAqB,CAArBA,EAAA,EAIjM56C,KAAK63C,oBAAoB,GAAIT,GAAA36C,OAC7B,IAAGuD,KAAKw3C,kBAAkB30C,GAAG,GAAK7C,KAAKw3C,kBAAkBz0C,GAAG,EAC3D/C,KAAK63C,oBAAoB/+B,OAAO9Y,KAAKw3C,kBAAkB30C,EAAG7C,KAAKw3C,kBAAkBz0C,EAClF/C,MAAK23C,sBAAsBv0C,KAAKpD,KAAK63C,qBAmB/BN,GAAAr1C,UAAA60C,OAAP,SAAcl0C,EAAUE,GAEvB,GAAG/C,KAAK43C,mBAAmB,KAAK,CAC/B53C,KAAK43C,kBAAkBb,OAAOl0C,EAAGE,GAElC,GAAG/C,KAAK63C,qBAAqB,KAAK,CACjC73C,KAAK63C,oBAAoBd,OAAOl0C,EAAGE,GAEpC/C,KAAKw3C,kBAAkB30C,EAAEA,CACzB7C,MAAKw3C,kBAAkBz0C,EAAEA,EAcnBw0C,GAAAr1C,UAAA4W,OAAP,SAAcjW,EAAUE,GAGvB,GAAG/C,KAAK43C,mBAAmB,KAAK,CAC/B53C,KAAK43C,kBAAkB9+B,OAAOjW,EAAGE,GAElC,GAAG/C,KAAK63C,qBAAqB,KAAK,CACjC73C,KAAK63C,oBAAoB/+B,OAAOjW,EAAGE,GAEpC/C,KAAKw3C,kBAAkB30C,EAAEA,CACzB7C,MAAKw3C,kBAAkBz0C,EAAEA,EAGnBw0C,GAAAr1C,UAAAk4C,aAAP,WACC,GAAGp6C,KAAK63C,qBAAqB,KAAK,MAClC73C,MAAK63C,oBAAoBb,iBACzB,IAAI6D,GAAuC76C,KAAK63C,oBAAoBrC,QACpE,IAAIsF,GAAmC96C,KAAK63C,oBAAoBvV,IAChE,IAAIyY,GAA+B/6C,KAAK63C,oBAAoBmD,eAE5D,IAAIxF,EACJ,IAAIlT,EACJ,IAAI5nC,GAAS,CACb,IAAIgW,GAAS,CACb,IAAIuqC,GAAgB,CACpB,IAAIC,GAAgB,CACpB,IAAIC,GAAqB,KACzB,IAAIC,KACJ,IAAIC,GAAsB,CAC1B,IAAIC,GAAgB,GAAIjoB,GAAA52B,OACxB,IAAI8+C,GAAkB,GAAIloB,GAAA52B,OAC1B,IAAI++C,GAAgB,GAAInoB,GAAA52B,OACxB,IAAIg/C,GAAiB,GAAIpoB,GAAA52B,OACzB,IAAIi/C,GAAkB,GAAIroB,GAAA52B,OAC1B,IAAIk/C,GAAe,GAAItoB,GAAA52B,OACvB,IAAIm/C,GAAgB,GAAIvoB,GAAA52B,OACxB,IAAIo/C,GAAgB,GAAIxoB,GAAA52B,OACxB,IAAIq/C,GAAiB,GAAIzoB,GAAA52B,OACzB,IAAIs/C,GAAe,GAAI1oB,GAAA52B,OACvB,IAAIu/C,GAAgB,GAAI3oB,GAAA52B,OACxB,IAAIw/C,GAAgB,GAAI5oB,GAAA52B,OACxB,IAAIy/C,GAAiB,GAAI7oB,GAAA52B,OACzB,IAAI0/C,GAAkB,GAAI9oB,GAAA52B,OAC1B,IAAI2/C,GAAwB,KAC5B,IAAIC,GAAe,KACnB,IAAI1c,GAAiB,CACrB,IAAI2c,KAEJ/E,GAASgF,UAAUC,QAAQ,KAAO,IAClC,KAAI9rC,EAAE,EAAGA,EAAEmqC,EAAiB5/C,OAAQyV,IAAK,CACxC,GAAI+rC,KACJ,IAAIC,KACJlH,GAAWqF,EAAiBnqC,EAC5B4xB,GAAOwY,EAAapqC,EACpB2rC,GAAOtB,EAAerqC,EACtBuqC,GAAW,CACXC,GAAW,CACXC,GAAa,KACbiB,GAAgB,KAChB,KAAK1hD,EAAI,EAAGA,EAAI86C,EAASv6C,OAAQP,IAAK,CACrC,OAAQ86C,EAAS96C,IAChB,IAAK46C,GAAA74C,QAAoBg4C,QACxB6G,EAAUz4C,EAAIy/B,EAAK4Y,IACnBI,GAAUv4C,EAAIu/B,EAAK4Y,IACnB,MAED,KAAK5F,GAAA74C,QAAoBi4C,QACxBgI,EAAct5C,KAAKkyC,EAAA74C,QAAoBi4C,QACvC8G,GAAU34C,EAAIy/B,EAAK4Y,IACnBM,GAAUz4C,EAAIu/B,EAAK4Y,IAEnBe,GAAUp5C,GAAK,GAAG24C,EAAUz4C,EAAEu4C,EAAUv4C,EACxCk5C,GAAUl5C,EAAIy4C,EAAU34C,EAAEy4C,EAAUz4C,CACpCo5C,GAAUruB,WAGV6tB,GAAW54C,EAAKy4C,EAAUz4C,EAAKo5C,EAAUp5C,EAAI88B,CAC7C8b,GAAW14C,EAAKu4C,EAAUv4C,EAAKk5C,EAAUl5C,EAAI48B,CAC7C+b,GAAY74C,EAAIy4C,EAAUz4C,EAAKo5C,EAAUp5C,EAAI88B,CAC7C+b,GAAY34C,EAAIu4C,EAAUv4C,EAAKk5C,EAAUl5C,EAAI48B,CAE7Coc,GAASl5C,EAAK24C,EAAU34C,EAAKo5C,EAAUp5C,EAAI88B,CAC3Coc,GAASh5C,EAAKy4C,EAAUz4C,EAAKk5C,EAAUl5C,EAAI48B,CAC3Cqc,GAAUn5C,EAAI24C,EAAU34C,EAAKo5C,EAAUp5C,EAAI88B,CAC3Cqc,GAAUj5C,EAAIy4C,EAAUz4C,EAAKk5C,EAAUl5C,EAAI48B,CAE3C2b,GAAUz4C,EAAE24C,EAAU34C,CACtBy4C,GAAUv4C,EAAEy4C,EAAUz4C,CAEtB05C,GAAer5C,KAAK,GAAIiwB,GAAA52B,QAAMi/C,EAAY74C,EAAG64C,EAAY34C,GACzD05C,GAAer5C,KAAK,GAAIiwB,GAAA52B,QAAMg/C,EAAW54C,EAAG44C,EAAW14C,GACvD05C,GAAer5C,KAAK,GAAIiwB,GAAA52B,QAAMu/C,EAAUn5C,EAAGm5C,EAAUj5C,GACrD05C,GAAer5C,KAAK,GAAIiwB,GAAA52B,QAAMs/C,EAASl5C,EAAGk5C,EAASh5C,GAEnD,MACD,KAAKuyC,GAAA74C,QAAoBk4C,SACxB+H,EAAct5C,KAAKkyC,EAAA74C,QAAoBk4C,SACvC+H,GAAct5C,KAAKkyC,EAAA74C,QAAoBm4C,WACvC,IAAI+H,GAAyBra,EAAK4Y,IAClC,IAAI0B,GAAmBta,EAAK4Y,IAC5B,IAAI2B,GAAmBva,EAAK4Y,IAC5B,IAAI4B,GAAexa,EAAK4Y,IACxB,IAAI6B,GAAeza,EAAK4Y,IAGxBe,GAAUp5C,GAAK,GAAGg6C,EAAUvB,EAAUv4C,EACtCk5C,GAAUl5C,EAAI65C,EAAUtB,EAAUz4C,CAClCo5C,GAAUruB,WAGV6tB,GAAW54C,EAAKy4C,EAAUz4C,EAAKo5C,EAAUp5C,EAAI88B,CAC7C8b,GAAW14C,EAAKu4C,EAAUv4C,EAAKk5C,EAAUl5C,EAAI48B,CAC7C+b,GAAY74C,EAAIy4C,EAAUz4C,EAAKo5C,EAAUp5C,EAAI88B,CAC7C+b,GAAY34C,EAAIu4C,EAAUv4C,EAAKk5C,EAAUl5C,EAAI48B,CAE7Cgc,GAAS94C,EAAK+5C,EAAaX,EAAUp5C,EAAI88B,CACzCgc,GAAS54C,EAAK85C,EAAaZ,EAAUl5C,EAAI48B,CACzCic,GAAU/4C,EAAI+5C,EAAaX,EAAUp5C,EAAI88B,CACzCic,GAAU74C,EAAI85C,EAAaZ,EAAUl5C,EAAI48B,CAEzC8c,GAAer5C,KAAK,GAAIiwB,GAAA52B,QAAMi/C,EAAY74C,EAAG64C,EAAY34C,GACzD05C,GAAer5C,KAAK,GAAIiwB,GAAA52B,QAAMg/C,EAAW54C,EAAG44C,EAAW14C,GACvD05C,GAAer5C,KAAK,GAAIiwB,GAAA52B,QAAMm/C,EAAU/4C,EAAG+4C,EAAU74C,GACrD05C,GAAer5C,KAAK,GAAIiwB,GAAA52B,QAAMk/C,EAAS94C,EAAG84C,EAAS54C,GAEnDk5C,GAAUp5C,GAAK,GAAGk6C,EAAMF,EACxBZ,GAAUl5C,EAAI+5C,EAAMF,CACpBX,GAAUruB,WAEViuB,GAAUh5C,EAAK+5C,EAAaX,EAAUp5C,EAAI88B,CAC1Ckc,GAAU94C,EAAK85C,EAAaZ,EAAUl5C,EAAI48B,CAC1Cmc,GAAWj5C,EAAI+5C,EAAaX,EAAUp5C,EAAI88B,CAC1Cmc,GAAW/4C,EAAI85C,EAAaZ,EAAUl5C,EAAI48B,CAE1Coc,GAASl5C,EAAKi6C,EAASb,EAAUp5C,EAAI88B,CACrCoc,GAASh5C,EAAKg6C,EAASd,EAAUl5C,EAAI48B,CACrCqc,GAAUn5C,EAAIi6C,EAASb,EAAUp5C,EAAI88B,CACrCqc,GAAUj5C,EAAIg6C,EAASd,EAAUl5C,EAAI48B,CAErC8c,GAAer5C,KAAK,GAAIiwB,GAAA52B,QAAMq/C,EAAWj5C,EAAGi5C,EAAW/4C,GACvD05C,GAAer5C,KAAK,GAAIiwB,GAAA52B,QAAMo/C,EAAUh5C,EAAGg5C,EAAU94C,GACrD05C,GAAer5C,KAAK,GAAIiwB,GAAA52B,QAAMu/C,EAAUn5C,EAAGm5C,EAAUj5C,GACrD05C,GAAer5C,KAAK,GAAIiwB,GAAA52B,QAAMs/C,EAASl5C,EAAGk5C,EAASh5C,GAEnDu4C,GAAUz4C,EAAEi6C,CACZxB,GAAUv4C,EAAEg6C,CACZ,QAGH,GAAIC,GAAkBP,EAAexhD,OAAO,CAC5C,IAAIgiD,GAAuB,GAAI5pB,GAAA52B,OAC/B,IAAIygD,GAAsB,GAAI7pB,GAAA52B,OAC9B,IAAI0gD,GAAqB,GAAI9pB,GAAA52B,OAC7B,IAAI2gD,GAAoB,GAAI/pB,GAAA52B,OAC5B,IAAI4gD,EACJ,IAAIC,EACJ,KAAK5iD,EAAI,EAAGA,EAAIsiD,EAAYtiD,IAAK,CAChCghD,EAAce,EAAe/hD,EAAI,EACjC+gD,GAAagB,EAAe/hD,EAAI,EAAI,EACpCshD,GAAYS,EAAe/hD,EAAI,EAAI,EACnCqhD,GAAWU,EAAe/hD,EAAI,EAAI,EAClC,IAAI6iD,GAAiB7iD,EAAI,CACzB,IAAIA,GAAKsiD,EAAa,EAAG,CAExB,GAAIX,EAAQ,CACXkB,EAAU,MAEN,CACJA,GAAW,GAGb,GAAIA,GAAW,EAAG,CACjBN,EAAmBR,EAAec,EAAU,EAC5CL,GAAkBT,EAAec,EAAU,EAAI,EAC/CJ,GAAiBV,EAAec,EAAU,EAAI,EAC9CH,GAAgBX,EAAec,EAAU,EAAI,EAE7C,IAAIC,GAAuB,KAC3B,IAAIC,IAAwB,KAC5B,IAAIC,IAAyB,KAC7B,IAAIC,IAA0B,KAE9B1B,GAAUp5C,EAAIm5C,EAAUn5C,EAAI64C,EAAY74C,CACxCo5C,GAAUl5C,EAAIi5C,EAAUj5C,EAAI24C,EAAY34C,CACxC,IAAI66C,IAAe,CACnB,IAAIC,IAAgB,CACpB,IAAI5B,EAAUp5C,GAAK,EAAE26C,EAAe,SAC/B,IAAIvB,EAAUl5C,GAAK,EAAE26C,GAAiB,SACtC,CACJE,GAAU3B,EAAUl5C,EAAIk5C,EAAUp5C,CAClCg7C,MAAaD,GAAUlC,EAAY74C,EAAI64C,EAAY34C,GAGpDk5C,EAAUp5C,EAAIs6C,EAAet6C,EAAIo6C,EAAiBp6C,CAClDo5C,GAAUl5C,EAAIo6C,EAAep6C,EAAIk6C,EAAiBl6C,CAClD,IAAI+6C,IAAe,CACnB,IAAIC,IAAgB,CACpB,IAAI9B,EAAUp5C,GAAK,EAAE46C,GAAgB,SAChC,IAAIxB,EAAUl5C,GAAK,EAAE46C,GAAkB,SACvC,CACJG,GAAU7B,EAAUl5C,EAAIk5C,EAAUp5C,CAClCk7C,MAAaD,GAAUb,EAAiBp6C,EAAIo6C,EAAiBl6C,GAI9Dk5C,EAAUp5C,EAAIk5C,EAASl5C,EAAI44C,EAAW54C,CACtCo5C,GAAUl5C,EAAIg5C,EAASh5C,EAAI04C,EAAW14C,CACtC,IAAIi7C,IAAe,CACnB,IAAIC,IAAgB,CACpB,IAAIhC,EAAUp5C,GAAK,EAAE26C,EAAe,SAC/B,IAAIvB,EAAUl5C,GAAK,EAAE26C,GAAiB,SACtC,CACJM,GAAU/B,EAAUl5C,EAAIk5C,EAAUp5C,CAClCo7C,MAAaD,GAAUvC,EAAW54C,EAAI44C,EAAW14C,GAGlDk5C,EAAUp5C,EAAIu6C,EAAcv6C,EAAIq6C,EAAgBr6C,CAChDo5C,GAAUl5C,EAAIq6C,EAAcr6C,EAAIm6C,EAAgBn6C,CAChD,IAAIm7C,IAAe,CACnB,IAAIC,IAAgB,CACpB,IAAIlC,EAAUp5C,GAAK,EAAE46C,GAAgB,SAChC,IAAIxB,EAAUl5C,GAAK,EAAE46C,GAAkB,SACvC,CACJO,GAAUjC,EAAUl5C,EAAIk5C,EAAUp5C,CAClCs7C,MAAaD,GAAUhB,EAAgBr6C,EAAIq6C,EAAgBn6C,GAE5D,GAAKy6C,GAAgBE,IAAkBC,IAAmBF,GAAgBnX,QAAQC,IAAI,QACtF,IAAIqX,IAASE,IAAWE,IAASE,GAAU,CAC1C5X,QAAQC,IAAI,4BACZD,SAAQC,IAAI,YAAaqX,GACzBtX,SAAQC,IAAI,YAAauX,GACzBxX,SAAQC,IAAI,YAAayX,GACzB1X,SAAQC,IAAI,YAAa2X,IAG1B,GAAKR,IAAkBC,IAAmBH,GAAgBC,GAAgBnX,QAAQC,IAAI,qBACjF,CACJ,GAAI,GAAgB,GAAmB,CACtCD,QAAQC,IAAI,oCACZ0W,GAAiBp6C,EAAIm5C,EAAUn5C,CAC/Bm5C,GAAUj5C,EAAIk6C,EAAiBl6C,CAC/Bm6C,GAAgBr6C,EAAIk5C,EAASl5C,CAC7Bk5C,GAASh5C,EAAIm6C,EAAgBn6C,MAEzB,IAAI,IAAkB46C,GAAkB,CAC5CrX,QAAQC,IAAI,qCACZ0W,GAAiBp6C,EAAIm5C,EAAUn5C,EAAI64C,EAAY74C,CAC/Co6C,GAAiBl6C,EAAIi5C,EAAUj5C,EAAI+6C,GAAUpC,EAAY74C,EAAIk7C,EAC7Db,GAAgBr6C,EAAIk5C,EAASl5C,EAAI44C,EAAW54C,CAC5Cq6C,GAAgBn6C,EAAIg5C,EAASh5C,EAAIm7C,GAAUzC,EAAW54C,EAAIs7C,OAEtD,KAAMX,GAAe,GAAmB,CAC5ClX,QAAQC,IAAI,qCACZ0W,GAAiBl6C,EAAIi5C,EAAUj5C,EAAIk6C,EAAiBl6C,CACpDk6C,GAAiBp6C,EAAIm5C,EAAUn5C,GAAKo6C,EAAiBl6C,EAAI86C,IAAUD,EACnEV,GAAgBn6C,EAAIg5C,EAASh5C,EAAIm6C,EAAgBn6C,CACjDm6C,GAAgBr6C,EAAIk5C,EAASl5C,GAAKq6C,EAAgBn6C,EAAIk7C,IAAUD,OAE5D,IAAI,IAAiB,GAAkB,CAC3C1X,QAAQC,IAAI,oCACZyV,GAAUn5C,EAAIo6C,EAAiBp6C,CAC/Bo6C,GAAiBl6C,EAAIi5C,EAAUj5C,CAC/Bg5C,GAASl5C,EAAIq6C,EAAgBr6C,CAC7Bq6C,GAAgBn6C,EAAIg5C,EAASh5C,MAEzB,IAAI,KAAmB26C,GAAiB,CAC5CpX,QAAQC,IAAI,qCACZ0W,GAAiBp6C,EAAIm5C,EAAUn5C,EAAIo6C,EAAiBp6C,CACpDo6C,GAAiBl6C,EAAIi5C,EAAUj5C,EAAI66C,GAAUX,EAAiBp6C,EAAIg7C,EAClEX,GAAgBr6C,EAAIk5C,EAASl5C,EAAIq6C,EAAgBr6C,CACjDq6C,GAAgBn6C,EAAIg5C,EAASh5C,EAAIi7C,GAAUd,EAAgBr6C,EAAIo7C,OAG3D,KAAMR,IAAgB,GAAkB,CAC5CnX,QAAQC,IAAI,sCACZ0W,GAAiBl6C,EAAIi5C,EAAUj5C,CAC/Bk6C,GAAiBp6C,EAAIm5C,EAAUn5C,GAAKm5C,EAAUj5C,EAAIg7C,IAAUD,EAC5DZ,GAAgBn6C,EAAIg5C,EAASh5C,CAC7Bm6C,GAAgBr6C,EAAIk5C,EAASl5C,GAAKk5C,EAASh5C,EAAIo7C,IAAUD,OAGrD,CACJ5X,QAAQC,IAAI,OACZD,SAAQC,IAAI,sBAAsBqX,GAAUE,IAC5CxX,SAAQC,IAAI,wBAAwBsX,GAAWE,IAC/CzX,SAAQC,IAAI,sBAAsByX,GAAUE,IAC5C5X,SAAQC,IAAI,wBAAwB0X,GAAWE,IAE/ClB,GAAiBp6C,EAAIm5C,EAAUn5C,KAAOg7C,GAAWE,KAAaH,GAAUE,IACxEb,GAAiBl6C,EAAIi5C,EAAUj5C,EAAI66C,GAAU5B,EAAUn5C,EAAIg7C,EAC3DX,GAAgBr6C,EAAIk5C,EAASl5C,KAAOo7C,GAAWE,KAAaH,GAAUE,IACtEhB,GAAgBn6C,EAAIg5C,EAASh5C,EAAIi7C,GAAUjC,EAASl5C,EAAIo7C,IAI1DhB,EAAiBp6C,EAAIm5C,EAAUn5C,CAC/Bo6C,GAAiBl6C,EAAIi5C,EAAUj5C,CAC/Bm6C,GAAgBr6C,EAAIk5C,EAASl5C,CAC7Bq6C,GAAgBn6C,EAAIg5C,EAASh5C,GAO/B,IAAKrI,EAAI,EAAGA,EAAIsiD,EAAYtiD,IAAK,CAChC,GAAGgiD,EAAchiD,IAAI46C,EAAA74C,QAAoBm4C,WACxC,QACD8G,GAAce,EAAe/hD,EAAI,EACjC+gD,GAAagB,EAAe/hD,EAAI,EAAI,EACpC,IAAGgiD,EAAchiD,IAAI46C,EAAA74C,QAAoBk4C,SAAU,CAClDj6C,GACAkhD,GAAYa,EAAe/hD,EAAI,EAC/BihD,GAAWc,EAAe/hD,EAAI,EAAI,EAClCshD,GAAYS,EAAe/hD,EAAI,EAAI,EACnCqhD,GAAWU,EAAe/hD,EAAI,EAAI,EAElC,IAAI0jD,MACJ,IAAIC,MACJ,IAAIC,MACJ,IAAIC,MACJ,IAAIC,IAAmBx+C,KAAKy+C,QAAQ/C,EAAY74C,EAAG64C,EAAY34C,EAAI64C,EAAU/4C,EAAG+4C,EAAU74C,EAAGi5C,EAAUn5C,EAAGm5C,EAAUj5C,GAAI,CACxH,IAAI27C,KAAoB,CACxB,IAAIC,IAAmB,CACvBrC,GAAUrhD,OAAO,CACjB,IAAGujD,GAAW,CACb,GAAII,MACJ,IAAIC,MACJ7+C,MAAK8+C,eAAepD,EAAY74C,EAAG64C,EAAY34C,EAAG64C,EAAU/4C,EAAG+4C,EAAU74C,EAAGi5C,EAAUn5C,EAAGm5C,EAAUj5C,EAAG04C,EAAW54C,EAAG44C,EAAW14C,EAAG44C,EAAS94C,EAAG84C,EAAS54C,EAAGg5C,EAASl5C,EAAGk5C,EAASh5C,EAAG67C,GAAYC,GAC9L,KAAI,GAAIE,IAAU,EAAGA,GAAGH,GAAW3jD,OAAO,EAAG8jD,KAAM,CAClDX,GAAgBh7C,KAAK,GAAIiwB,GAAA52B,QAAMmiD,GAAWG,GAAK,GAAIH,GAAWG,GAAK,EAAI,IACvEX,IAAgBh7C,KAAK,GAAIiwB,GAAA52B,QAAMmiD,GAAWG,GAAK,EAAI,GAAIH,GAAWG,GAAK,EAAI,IAC3EX,IAAgBh7C,KAAK,GAAIiwB,GAAA52B,QAAMmiD,GAAWG,GAAK,EAAI,GAAIH,GAAWG,GAAK,EAAI,IAC3EV,IAAsBj7C,MAAM,EAC5Bk5C,GAAUl5C,KAAKw7C,GAAWG,GAAK,GAAIH,GAAWG,GAAK,EAAI,GACvDzC,GAAUl5C,KAAKw7C,GAAWG,GAAK,EAAI,GAAIH,GAAWG,GAAK,EAAI,IAE5D,IAAI,GAAIA,IAAWF,GAAY5jD,OAAO,EAAG,EAAG8jD,IAAI,EAAGA,KAAM,CACxDX,GAAgBh7C,KAAK,GAAIiwB,GAAA52B,QAAMoiD,GAAYE,GAAK,EAAI,GAAIF,GAAYE,GAAK,EAAI,IAC7EX,IAAgBh7C,KAAK,GAAIiwB,GAAA52B,QAAMoiD,GAAYE,GAAK,EAAI,GAAIF,GAAYE,GAAK,EAAI,IAC7EX,IAAgBh7C,KAAK,GAAIiwB,GAAA52B,QAAMoiD,GAAYE,GAAK,GAAIF,GAAYE,GAAK,EAAI,IACzEV,IAAsBj7C,KAAK,EAC3Bk5C,GAAUl5C,KAAKy7C,GAAYE,GAAK,EAAI,GAAIF,GAAYE,GAAK,EAAI,GAC7DzC,GAAUl5C,KAAKy7C,GAAYE,GAAK,EAAI,GAAIF,GAAYE,GAAK,EAAI,GAC7DzC,GAAUl5C,KAAKy7C,GAAYE,GAAK,GAAIF,GAAYE,GAAK,EAAI,SAGvD,CACH,GAAIH,MACJ,IAAIC,MACJ7+C,MAAK8+C,eAAerD,EAAW54C,EAAG44C,EAAW14C,EAAG44C,EAAS94C,EAAG84C,EAAS54C,EAAGg5C,EAASl5C,EAAGk5C,EAASh5C,EAAG24C,EAAY74C,EAAG64C,EAAY34C,EAAG64C,EAAU/4C,EAAG+4C,EAAU74C,EAAGi5C,EAAUn5C,EAAGm5C,EAAUj5C,EAAE67C,GAAYC,GAC7L,KAAI,GAAIE,IAAU,EAAGA,GAAGH,GAAW3jD,OAAO,EAAG8jD,KAAM,CAClDX,GAAgBh7C,KAAK,GAAIiwB,GAAA52B,QAAMmiD,GAAWG,GAAK,GAAIH,GAAWG,GAAK,EAAI,IACvEX,IAAgBh7C,KAAK,GAAIiwB,GAAA52B,QAAMmiD,GAAWG,GAAK,EAAI,GAAIH,GAAWG,GAAK,EAAI,IAC3EX,IAAgBh7C,KAAK,GAAIiwB,GAAA52B,QAAMmiD,GAAWG,GAAK,EAAI,GAAIH,GAAWG,GAAK,EAAI,IAC3EV,IAAsBj7C,MAAM,EAC5Bk5C,GAAUl5C,KAAKw7C,GAAWG,GAAK,GAAIH,GAAWG,GAAK,EAAI,GACvDzC,GAAUl5C,KAAKw7C,GAAWG,GAAK,EAAI,GAAIH,GAAWG,GAAK,EAAI,IAE5D,IAAI,GAAIA,IAAWF,GAAY5jD,OAAO,EAAG,EAAG8jD,IAAI,EAAGA,KAAM,CACxDX,GAAgBh7C,KAAK,GAAIiwB,GAAA52B,QAAMoiD,GAAYE,GAAK,EAAI,GAAIF,GAAYE,GAAK,EAAI,IAC7EX,IAAgBh7C,KAAK,GAAIiwB,GAAA52B,QAAMoiD,GAAYE,GAAK,EAAI,GAAIF,GAAYE,GAAK,EAAI,IAC7EX,IAAgBh7C,KAAK,GAAIiwB,GAAA52B,QAAMoiD,GAAYE,GAAK,GAAIF,GAAYE,GAAK,EAAI,IACzEV,IAAsBj7C,KAAK,EAC3Bk5C,GAAUl5C,KAAKy7C,GAAYE,GAAK,EAAI,GAAIF,GAAYE,GAAK,EAAI,GAC7DzC,GAAUl5C,KAAKy7C,GAAYE,GAAK,EAAI,GAAIF,GAAYE,GAAK,EAAI,GAC7DzC,GAAUl5C,KAAKy7C,GAAYE,GAAK,GAAIF,GAAYE,GAAK,EAAI,KAG3D,GAAGzC,EAAUrhD,OAAO,EAAE,CAErB,GAAI+jD,IAAc,GAAIzP,cAAa+M,EACnC,IAAI/E,EAASgF,WAAa,KAAM,CAC/BjW,QAAQC,IAAI,4FACZ,QAEDgR,EAASgF,UAAU0C,WAAWD,GAAa,EAAG,EAAG1C,EAAUrhD,OAAS,GAErE,GAAId,IAAS,CACb,KAAIA,GAAE,EAAGA,GAAEkkD,GAAsBpjD,OAAOd,KAAI,CAE1CihD,EAAgBC,KAAoB+C,GAAgBjkD,GAAE,GAAG0I,CACzDu4C,GAAgBC,KAAoB+C,GAAgBjkD,GAAE,GAAG4I,CACzDq4C,GAAgBC,KAAoBgD,GAAsBlkD,GAC1DihD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB+C,GAAgBjkD,GAAE,EAAE,GAAG0I,CAC3Du4C,GAAgBC,KAAoB+C,GAAgBjkD,GAAE,EAAE,GAAG4I,CAC3Dq4C,GAAgBC,KAAoBgD,GAAsBlkD,GAC1DihD,GAAgBC,KAAoB,EACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB+C,GAAgBjkD,GAAE,EAAE,GAAG0I,CAC3Du4C,GAAgBC,KAAoB+C,GAAgBjkD,GAAE,EAAE,GAAG4I,CAC3Dq4C,GAAgBC,KAAoBgD,GAAsBlkD,GAC1DihD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,OAInC,CACHW,EAAYS,EAAe/hD,EAAI,EAAI,EACnCqhD,GAAWU,EAAe/hD,EAAI,EAAI,EAClC0gD,GAAgBC,KAAoBK,EAAY74C,CAChDu4C,GAAgBC,KAAoBK,EAAY34C,CAChDq4C,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoBI,EAAW54C,CAC/Cu4C,GAAgBC,KAAoBI,EAAW14C,CAC/Cq4C,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoBU,EAASl5C,CAC7Cu4C,GAAgBC,KAAoBU,EAASh5C,CAC7Cq4C,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CAEpCD,GAAgBC,KAAoBK,EAAY74C,CAChDu4C,GAAgBC,KAAoBK,EAAY34C,CAChDq4C,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoBU,EAASl5C,CAC7Cu4C,GAAgBC,KAAoBU,EAASh5C,CAC7Cq4C,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoBW,EAAUn5C,CAC9Cu4C,GAAgBC,KAAoBW,EAAUj5C,CAC9Cq4C,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,IASvC9D,EAASgF,UAAU2C,UAAU,EAAuB,EAA4B,EAAG,EAAG,KAEtF,IAAIC,MACJ,IAAIC,MACJ,IAAIC,MACJ,IAAIC,MACJH,IAAQ5H,EAASgF,UAAUgD,aAC3BD,IAAQ/H,EAASgF,UAAUiD,aAG3B,IAAIC,IAAkBN,GAAMlkD,OAAS,CACrC,IAAIykD,IAAkBJ,GAAMrkD,OAAS,CACrC,KAAKP,EAAI,EAAGA,EAAI+kD,KAAY/kD,EAC3B0kD,GAAUh8C,KAAK,GAAIiwB,GAAA52B,QAAM0iD,GAAMzkD,EAAI,GAAIykD,GAAMzkD,EAAI,EAAI,IAEtD,KAAKA,EAAI,EAAGA,EAAIglD,KAAYhlD,EAAG,CAC9B,GAAIilD,IAAKL,GAAM5kD,EAAI,EACnB,IAAIklD,IAAKN,GAAM5kD,EAAI,EAAI,EACvB,IAAImlD,IAAKP,GAAM5kD,EAAI,EAAI,EAEvB0gD,GAAgBC,KAAoB+D,GAAUS,IAAIh9C,CAClDu4C,GAAgBC,KAAoB+D,GAAUS,IAAI98C,CAClDq4C,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB+D,GAAUQ,IAAI/8C,CAClDu4C,GAAgBC,KAAoB+D,GAAUQ,IAAI78C,CAClDq4C,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB+D,GAAUO,IAAI98C,CAClDu4C,GAAgBC,KAAoB+D,GAAUO,IAAI58C,CAClDq4C,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,EAMrC,GAAItL,IAAgC,GAAI9E,GAAAxuC,QAAe8yC,aAAc,EACrEQ,IAAexsC,IAAI63C,EACnB,IAAI0E,IAAoC/P,GAAeJ,MACvDI,IAAetsC,SACf,IAAI0W,IAA4B,GAAIoxB,GAAA9uC,QAAiBqjD,GACrD3lC,IAAS81B,aAAa,GAAI/E,GAAAzuC,QAAiBqjD,IAC3C3lC,IAAS+1B,oBAAoB,SAAU,GAAImH,GAAA56C,QAAiBqjD,IAC5D3lC,IAAS4lC,OAAO,GAAI7U,GAAAzuC,QAAiBqjD,IACrC,IAAIr4B,IAAwBD,EAAA/qB,QAAuBujD,oBACnDv4B,IAASw4B,UAAY,IACrBx4B,IAASy4B,kBAAoB,IAC7Bz4B,IAAS04B,OAAS,IAClBngD,MAAKy3C,QAAQ37C,SAASq0C,WAAWh2B,GAAUsN,GAC3CznB,MAAK63C,oBAAoB,KAGnBN,GAAAr1C,UAAAk+C,cAAP,SAAqBC,EAAgBC,EAAgBC,EAAgBC,EAAgBC,EAAgBC,GAEpG,OAASL,EAAUE,IAAYG,EAAUF,IAAYF,EAAUE,IAAYC,EAAUF,GAAW,EAG1FhJ,GAAAr1C,UAAAu8C,QAAP,SAAelnC,EAAWC,EAAWsG,EAAWC,EAAW4iC,EAAWC,GAKrE,OAAQrpC,EAAKopC,IAAO5iC,EAAK6iC,IAAOppC,EAAKopC,IAAO9iC,EAAK6iC,GAI3CpJ,GAAAr1C,UAAA2+C,WAAP,SAAkBtpC,EAAWC,EAAWmpC,EAAWC,EAAW9iC,EAAWC,EAAW+iC,EAAWC,GAE9F,GAAIC,GAAahhD,KAAKy+C,QAAQlnC,EAAIC,EAAIspC,EAAIC,EAAIJ,EAAIC,GAAM,CACxD,IAAIK,GAAajhD,KAAKy+C,QAAQkC,EAAIC,EAAIE,EAAIC,EAAIjjC,EAAIC,GAAM,CACxD,IAAImjC,GAAalhD,KAAKy+C,QAAQ3gC,EAAIC,EAAI+iC,EAAIC,EAAIxpC,EAAIC,GAAM,CACxD,OAASwpC,IAAMC,GAAQA,GAAMC,EAEvB3J,GAAAr1C,UAAA48C,eAAP,SAAsBqC,EAAeC,EAAetjC,EAAWC,EAAWsjC,EAAaC,EAAaC,EAAgBC,EAAgBC,EAAYC,EAAYC,EAAcC,EAAcC,EAAyBC,GAMhND,EAAUz+C,KAAK+9C,EAAQC,EAAQtjC,EAAIC,EAAKsjC,EAAMC,EAC9CQ,GAAW1+C,KAAKm+C,EAASC,EAASC,EAAKC,EAAKC,EAAOC,EACnD,QA8BMrK,GAAAr1C,UAAAg2C,UAAP,WACC,GAAGl4C,KAAK43C,mBAAmB,KAAK,MAChC53C,MAAK43C,kBAAkBZ,iBAEvB,IAAI6D,GAAuC76C,KAAK43C,kBAAkBpC,QAClE,IAAIsF,GAAmC96C,KAAK43C,kBAAkBtV,IAC9D,IAAIyf,GAAsC/hD,KAAK43C,kBAAkBoK,eACjE,IAAIxM,EACJ,IAAIlT,EACJ,IAAI5nC,GAAS,CACb,IAAIgW,GAAS,CACb,IAAIuqC,GAAgB,CACpB,IAAIC,GAAgB,CACpB,IAAI+G,GAAsB,CAC1B,IAAIC,OACJ,IAAI9G,KACJ,IAAIC,GAAsB,CAC1B,IAAIC,GAAgB,GAAIjoB,GAAA52B,OACxB,KAAIiU,EAAE,EAAGA,EAAEmqC,EAAiB5/C,OAAQyV,IAAK,CACxCwxC,EAAkB9+C,QAClB63C,GAAW,CACXC,GAAW,CACX1F,GAASqF,EAAiBnqC,EAC1B4xB,GAAKwY,EAAapqC,EAClBuxC,GAAeF,EAAwBrxC,EACvC,KAAKhW,EAAI,EAAGA,EAAI86C,EAASv6C,OAAQP,IAAK,CACrC,OAAQ86C,EAAS96C,IAChB,IAAK46C,GAAA74C,QAAoBg4C,QACxB6G,EAAUz4C,EAAIy/B,EAAK4Y,IACnBI,GAAUv4C,EAAIu/B,EAAK4Y,IACnBgH,GAAkBA,EAAkBjnD,OAAS,GAAGggD,KAAcK,EAAUz4C,CACxEq/C,GAAkBA,EAAkBjnD,OAAS,GAAGggD,KAAcK,EAAUv4C,CACxE,MACD,KAAKuyC,GAAA74C,QAAoBi4C,QACxB4G,EAAUz4C,EAAIy/B,EAAK4Y,IACnBI,GAAUv4C,EAAIu/B,EAAK4Y,IACnBgH,GAAkBA,EAAkBjnD,OAAS,GAAGggD,KAAcK,EAAUz4C,CACxEq/C,GAAkBA,EAAkBjnD,OAAS,GAAGggD,KAAcK,EAAUv4C,CACxE,MACD,KAAKuyC,GAAA74C,QAAoBk4C,SACxB,GAAIgI,GAAyBra,EAAK4Y,IAClC,IAAI0B,GAAmBta,EAAK4Y,IAC5B,IAAI2B,GAAmBva,EAAK4Y,IAC5B,IAAI4B,GAAexa,EAAK4Y,IACxB,IAAI6B,GAAeza,EAAK4Y,IACxB,IAAIiH,IAAgB,CACpB,IAAIF,EAAiB,EAAG,CACvB,GAAItF,GAAmB,EAAG,CAGzBwF,EAAe,CACfD,GAAkBA,EAAkBjnD,OAAS,GAAGggD,KAAc2B,CAC9DsF,GAAkBA,EAAkBjnD,OAAS,GAAGggD,KAAc4B,EAE/DqF,EAAkBA,EAAkBjnD,OAAS,GAAGggD,KAAc6B,CAC9DoF,GAAkBA,EAAkBjnD,OAAS,GAAGggD,KAAc8B,MAE1D,CACJ,GAAIJ,GAAmB,EAAG,CAGzBwF,EAAe,CACfD,GAAkBA,EAAkBjnD,OAAS,GAAGggD,KAAc2B,CAC9DsF,GAAkBA,EAAkBjnD,OAAS,GAAGggD,KAAc4B,EAE/DqF,EAAkBA,EAAkBjnD,OAAS,GAAGggD,KAAc6B,CAC9DoF,GAAkBA,EAAkBjnD,OAAS,GAAGggD,KAAc8B,EAG/D,IAAI/8C,KAAKogD,cAActD,EAAOC,EAAOH,EAAWC,EAAWvB,EAAUz4C,EAAGy4C,EAAUv4C,GAAG,CACpFq4C,EAAgBC,KAAoByB,CACpC1B,GAAgBC,KAAoB0B,CACpC3B,GAAgBC,KAAoB8G,CACpC/G,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoBuB,CACpCxB,GAAgBC,KAAoBwB,CACpCzB,GAAgBC,KAAoB8G,CACpC/G,GAAgBC,KAAoB,EACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoBC,EAAUz4C,CAC9Cu4C,GAAgBC,KAAoBC,EAAUv4C,CAC9Cq4C,GAAgBC,KAAoB8G,CACpC/G,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,MAEjC,CACHD,EAAgBC,KAAoBC,EAAUz4C,CAC9Cu4C,GAAgBC,KAAoBC,EAAUv4C,CAC9Cq4C,GAAgBC,KAAoB8G,CACpC/G,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoBuB,CACpCxB,GAAgBC,KAAoBwB,CACpCzB,GAAgBC,KAAoB8G,CACpC/G,GAAgBC,KAAoB,EACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoByB,CACpC1B,GAAgBC,KAAoB0B,CACpC3B,GAAgBC,KAAoB8G,CACpC/G,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,EAGrCC,EAAUz4C,EAAIi6C,CACdxB,GAAUv4C,EAAIg6C,CAEd,MACD,KAAKzH,GAAA74C,QAAoBs4C,YAExB,QAIJ,GAAIoK,KACJ,IAAIC,KACJ,IAAIC,KACJ,IAAIC,KACJ/H,GAASgF,UAAUC,QAAQ,KAAO,IAClC,KAAI9rC,EAAE,EAAGA,EAAEwxC,EAAkBjnD,OAAQyV,IAAK,CACzC,GAAI4+B,GAAS4S,EAAkBxxC,EAK/B,IAAIsuC,GAAc,GAAIzP,cAAaD,EAInC,IAAIiI,EAASgF,WAAa,KAAM,CAC/BjW,QAAQC,IAAI,4FACZ,QAEDgR,EAASgF,UAAU0C,WAAWD,EAAa,EAAG,EAAG1P,EAASr0C,OAAS,GAGpEs8C,EAASgF,UAAU2C,UAAU,EAAuB,EAA4B,EAAG,EAAG,KAGtFC,GAAQ5H,EAASgF,UAAUgD,aAC3BD,GAAQ/H,EAASgF,UAAUiD,aAI3B,IAAIC,GAAkBN,EAAMlkD,OAAS,CACrC,IAAIykD,GAAkBJ,EAAMrkD,OAAS,CACrC,KAAKP,EAAI,EAAGA,EAAI+kD,IAAY/kD,EAC3B0kD,EAAUh8C,KAAK,GAAIiwB,GAAA52B,QAAM0iD,EAAMzkD,EAAI,GAAIykD,EAAMzkD,EAAI,EAAI,IAEtD,KAAKA,EAAI,EAAGA,EAAIglD,IAAYhlD,EAAG,CAC9B,GAAIilD,GAAKL,EAAM5kD,EAAI,EACnB,IAAIklD,GAAKN,EAAM5kD,EAAI,EAAI,EACvB,IAAImlD,GAAKP,EAAM5kD,EAAI,EAAI,EAEvB0gD,GAAgBC,KAAoB+D,EAAUS,GAAIh9C,CAClDu4C,GAAgBC,KAAoB+D,EAAUS,GAAI98C,CAClDq4C,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB+D,EAAUQ,GAAI/8C,CAClDu4C,GAAgBC,KAAoB+D,EAAUQ,GAAI78C,CAClDq4C,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB+D,EAAUO,GAAI98C,CAClDu4C,GAAgBC,KAAoB+D,EAAUO,GAAI58C,CAClDq4C,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,CACpCD,GAAgBC,KAAoB,EAKrC,GAAItL,GAAgC,GAAI9E,GAAAxuC,QAAe8yC,aAAc,EACrEQ,GAAexsC,IAAI63C,EACnB,IAAI0E,GAAoC/P,EAAeJ,MACvDI,GAAetsC,SACf,IAAI0W,GAA4B,GAAIoxB,GAAA9uC,QAAiBqjD,EACrD3lC,GAAS81B,aAAa,GAAI/E,GAAAzuC,QAAiBqjD,GAC3C3lC,GAAS+1B,oBAAoB,SAAU,GAAImH,GAAA56C,QAAiBqjD,GAC5D3lC,GAAS4lC,OAAO,GAAI7U,GAAAzuC,QAAiBqjD,GACrC,IAAIr4B,GAAwBD,EAAA/qB,QAAuBujD,oBACnDv4B,GAASw4B,UAAY,IACrBx4B,GAASy4B,kBAAoB,IAC7Bz4B,GAAS04B,OAAS,IAClBngD,MAAKy3C,QAAQ37C,SAASq0C,WAAWh2B,EAAUsN,EAC3CznB,MAAK43C,kBAAkB,KAEzB,OAAAL,KAEAv1C,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MjDwkSAzI,GAAQ0B,QiDxkSO86C,IjD0kSZ1E,4CAA4CvrC,UAAUyrC,8CAA8CzrC,UAAU86C,8CAA8C96C,UAAU+6C,oDAAoD/6C,UAAU21B,6BAA6B31B,UAAU8tC,uCAAuC,uCAAuCd,8CAA8C,8CAA8CpB,+CAA+C,+CAA+ChpB,qDAAqD,uDAAuDo4B,yCAAyC,SAASroD,EAAQkB,EAAOJ,GACnsB,kBAEMwnD,+CAA+C,SAAStoD,EAAQkB,EAAOJ,GAC7E,YkD35VA,IAAAynD,GAAA,WAAA,QAAAA,MAeeA,EAAAC,WAAoB,WAcpBD,GAAAE,IAAa,KAC5B,OAAAF,KAEAxgD,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MlDm6VAzI,GAAQ0B,QkDn6VO+lD,OlDq6VTG,sCAAsC,SAAS1oD,EAAQkB,EAAOJ,GACpE,YmDr8VA,IAAA6nD,GAAA,WAAA,QAAAA,MAMeA,EAAAC,MAAe,OAMfD,GAAAE,MAAe,OAMfF,GAAA7O,MAAe,OAC9B,OAAA6O,KAEA5gD,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MnD88VAzI,GAAQ0B,QmD98VOmmD,OnDg9VTG,yCAAyC,SAAS9oD,EAAQkB,EAAOJ,GACvE,YoD1+VA,IAAAioD,GAAA,WAAA,QAAAA,MAWeA,EAAAC,WAAoB,YAMpBD,GAAAhP,KAAc,MAOdgP,GAAAjZ,OAAgB,QAWhBiZ,GAAAE,SAAkB,UACjC,OAAAF,KAEAhhD,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MpD8+VAzI,GAAQ0B,QoD9+VOumD,OpDg/VTG,yCAAyC,SAASlpD,EAAQkB,EAAOJ,GACvE,YqDthWA,IAAAqoD,GAAA,WAAA,QAAAA,MAOeA,EAAAC,OAAgB,QAWhBD,GAAAE,KAAc,MAMdF,GAAAG,MAAe,OAC9B,OAAAH,KAEAphD,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MrD4hWAzI,GAAQ0B,QqD5hWO2mD,OrD8hWTI,wCAAwC,SAASvpD,EAAQkB,EAAOJ,GACtE,YsDvjWA,IAAA0oD,GAAA,WAAA,QAAAA,MAKeA,EAAAC,IAAa,KAKbD,GAAAE,QAAiB,SAKjBF,GAAAG,OAAgB,QAC/B,OAAAH,KAEAzhD,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MtDgkWAzI,GAAQ0B,QsDhkWOgnD,OtDkkWTI,2CAA2C,SAAS5pD,EAAQkB,EAAOJ,GACzE,YuDxkWA,IAAA+oD,GAAA,WAAA,QAAAA,MAKeA,EAAAC,SAAkB,UAKlBD,GAAA9P,KAAc,MAMd8P,GAAAE,SAAkB,UACjC,OAAAF,KAEA9hD,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MvD8lWAzI,GAAQ0B,QuD9lWOqnD,OvDgmWT1lD,2BAA2B,SAASnE,EAAQkB,EAAOJ,GACzD,YwDzoWA,IAAAkpD,GAAAhqD,EAAwC,oCAAhCc,GAAA+4C,UAAAmQ,EAAAxnD,OACR,IAAAynD,GAAAjqD,EAA0C,uCAAlCc,GAAAo5C,aAAA+P,EAAAznD,OACR,IAAA2rC,GAAAnuC,EAAuC,mCAA/Bc,GAAAw8C,SAAAnP,EAAA3rC,OACR,IAAA26C,GAAAn9C,EAA0C,uCAAlCc,GAAAw6C,aAAA6B,EAAA36C,OACR,IAAA64C,GAAAr7C,EAAgD,8CAAxCc,GAAAw5C,oBAAAe,EAAA74C,OACR,IAAA44C,GAAAp7C,EAAgD,8CAAxCc,GAAAk6C,oBAAAI,EAAA54C,OAER,IAAA0nD,GAAAlqD,EAAgD,8CAAxCc,GAAAynD,oBAAA2B,EAAA1nD,OACR,IAAA2nD,GAAAnqD,EAAyC,qCAAjCc,GAAA6nD,WAAAwB,EAAA3nD,OACR,IAAA4nD,GAAApqD,EAA2C,wCAAnCc,GAAAioD,cAAAqB,EAAA5nD,OACR,IAAA6nD,GAAArqD,EAA2C,wCAAnCc,GAAAqoD,cAAAkB,EAAA7nD,OACR,IAAA8nD,GAAAtqD,EAA0C,uCAAlCc,GAAA0oD,aAAAc,EAAA9nD,OACR,IAAA+nD,GAAAvqD,EAA6C,0CAArCc,GAAA+oD,gBAAAU,EAAA/nD,UxDupWLo3C,oCAAoC,oCAAoCK,uCAAuC,uCAAuCiD,mCAAmC,mCAAmC/B,uCAAuC,uCAAuCd,8CAA8C,8CAA8CU,8CAA8C,8CAA8CuN,8CAA8C,8CAA8CI,qCAAqC,qCAAqCI,wCAAwC,wCAAwCI,wCAAwC,wCAAwCK,uCAAuC,uCAAuCK,0CAA0C,4CAA4CY,uCAAuC,SAASxqD,EAAQkB,EAAOJ,GAC9gC,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IyDxqWnF,IAAA82B,GAAAhlC,EAAyB,mCAEzB,IAAAyqD,GAAA,SAAAl8C,GAAwBV,EAAA48C,EAAAl8C,EAEvB,SAAAk8C,GAAYC,GAEXn8C,EAAAxN,KAAAgF,KAAM2kD,GAER,MAAAD,IANwBzlB,EAAAxiC,QAQxBuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MzDyqWAzI,GAAQ0B,QyDzqWOioD,IzD2qWZplB,mCAAmCh4B,YAAYjJ,6BAA6B,SAASpE,EAAQkB,EAAOJ,GACvG,Y0DtrWA,IAAA6pD,GAAA3qD,EAAwC,sCAAhCc,GAAA2pD,UAAAE,EAAAnoD,U1D0rWLgoD,sCAAsC,wCAAwC13B,yCAAyC,SAAS9yB,EAAQkB,EAAOJ,GAClJ,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,I2D/rWnF,IAAA08C,GAAA5qD,EAAyB,mCAOzB,IAAA6qD,GAAA,SAAAt8C,GAA0BV,EAAAg9C,EAAAt8C,EAMzB,SAAAs8C,GAAY9tB,EAAal3B,GAExB0I,EAAAxN,KAAAgF,KAAMg3B,EAENh3B,MAAK+kD,QAAUjlD,EAGhBkC,OAAAC,eAAW6iD,EAAA5iD,UAAA,U3DwrWJC,I2DxrWP,WAEC,MAAOnC,MAAK+kD,S3DyrWN1iD,WAAY,KACZC,aAAc,M2DnrWdwiD,GAAA5iD,UAAAuN,MAAP,WAEC,MAAO,IAAIq1C,GAAY9kD,KAAKg3B,KAAMh3B,KAAK+kD,SAtB1BD,GAAAvgD,mBAA4B,mBAwB3C,OAAAugD,IA1B0BD,EAAApoD,QA4B1BuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M3D0rWAzI,GAAQ0B,Q2D1rWOqoD,I3D4rWZE,mCAAmC19C,YAAYue,gDAAgD,SAAS5rB,EAAQkB,EAAOJ,GAC1H,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,I4DpuWnF,IAAA08C,GAAA5qD,EAAyB,mCAIzB,IAAAgrD,GAAA,SAAAz8C,GAAiCV,EAAAm9C,EAAAz8C,EAkChC,SAAAy8C,GAAYjuB,EAAakuB,GAExB18C,EAAAxN,KAAAgF,KAAMg3B,EACNh3B,MAAKmlD,QAAUD,EARhBljD,OAAAC,eAAWgjD,EAAA/iD,UAAA,U5D6sWJC,I4D7sWP,WAEC,MAAOnC,MAAKmlD,S5D8sWN9iD,WAAY,KACZC,aAAc,M4DlsWd2iD,GAAA/iD,UAAAuN,MAAP,WAEC,MAAO,IAAIw1C,GAAmBjlD,KAAKg3B,KAAMh3B,KAAKmlD,SAzCjCF,GAAAG,kBAA2B,kBAK3BH,GAAAr/B,uBAAgC,uBAKhCq/B,GAAA/tB,cAAuB,cAKvB+tB,GAAAvgD,kBAA2B,kBAK3BugD,GAAAloB,4BAAqC,2BAuBpD,OAAAkoB,IAhDiCJ,EAAApoD,QAkDjCuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M5D4tWAzI,GAAQ0B,Q4D5tWOwoD,I5D8tWZD,mCAAmC19C,YAAY+9C,2CAA2C,SAASprD,EAAQkB,EAAOJ,GACrH,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,I6DxxWnF,IAAA08C,GAAA5qD,EAAyB,mCAQzB,IAAAqrD,GAAA,SAAA98C,GAA4BV,EAAAw9C,EAAA98C,EA8B3B,SAAA88C,GAAYtuB,EAAa+Y,GAExBvnC,EAAAxN,KAAAgF,KAAMg3B,EAENh3B,MAAKulD,gBAAkBxV,EAMxB/tC,OAAAC,eAAWqjD,EAAApjD,UAAA,kB7DgwWJC,I6DhwWP,WAEC,MAAOnC,MAAKulD,iB7DiwWNljD,WAAY,KACZC,aAAc,M6D1vWdgjD,GAAApjD,UAAAuN,MAAP,WAEC,MAAO,IAAI61C,GAActlD,KAAKg3B,KAAMh3B,KAAKulD,iBA/C5BD,GAAAE,mBAA4B,mBAK5BF,GAAAG,cAAuB,cAKvBH,GAAAI,oBAA6B,oBAK7BJ,GAAAK,eAAwB,eAkCvC,OAAAL,IAtD4BT,EAAApoD,QAwD5BuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M7DixWAzI,GAAQ0B,Q6DjxWO6oD,I7DmxWZN,mCAAmC19C,YAAYw3B,wCAAwC,SAAS7kC,EAAQkB,EAAOJ,GAClH,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,I8Dz1WnF,IAAA08C,GAAA5qD,EAAyB,mCAEzB,IAAA2rD,GAAA,SAAAp9C,GAAyBV,EAAA89C,EAAAp9C,EAIxB,SAAAo9C,GAAY5uB,GAEXxuB,EAAAxN,KAAAgF,KAAMg3B,GAIA4uB,EAAA1jD,UAAAuN,MAAP,WAEC,MAAO,IAAIm2C,GAAW5lD,KAAKg3B,MAVd4uB,GAAAlnB,oBAA6B,mBAY5C,OAAAknB,IAdyBf,EAAApoD,QAgBzBuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M9Du1WAzI,GAAQ0B,Q8Dv1WOmpD,I9Dy1WZZ,mCAAmC19C,YAAYs/B,wCAAwC,SAAS3sC,EAAQkB,EAAOJ;AAClH,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,I+D92WnF,IAAA08C,GAAA5qD,EAAyB,mCAWzB,IAAA4rD,GAAA,SAAAr9C,GAAyBV,EAAA+9C,EAAAr9C,EAkIxB,SAAAq9C,GAAY7uB,GAEXxuB,EAAAxN,KAAAgF,KAAMg3B,EAjIAh3B,MAAA8lD,qBAA+B,KAuItC9jD,OAAAC,eAAW4jD,EAAA3jD,UAAA,W/D+uWJC,I+D/uWP,WAEC,GAAI4jD,GAAqB/lD,KAAK8lD,oBAC9B9lD,MAAK8lD,qBAAuB,IAG5B,OAAOC,I/D+uWD1jD,WAAY,KACZC,aAAc,M+D1uWdujD,GAAA3jD,UAAA8jD,gBAAP,WAEChmD,KAAK8lD,qBAAuB,KAE5B,IAAI9lD,KAAKimD,cACRjmD,KAAKimD,cAAcD,kBAMdH,GAAA3jD,UAAAgkD,yBAAP,WAEClmD,KAAK8lD,qBAAuB,KAE5B,IAAI9lD,KAAKimD,cACRjmD,KAAKimD,cAAcC,2BAMdL,GAAA3jD,UAAAuN,MAAP,WAEC,GAAI02C,GAAoB,GAAIN,GAAW7lD,KAAKg3B,KAO5CmvB,GAAOC,QAAUpmD,KAAKomD,OACtBD,GAAOE,QAAUrmD,KAAKqmD,OAEtBF,GAAOG,KAAOtmD,KAAKsmD,IACnBH,GAAO9qC,OAASrb,KAAKqb,MACrB8qC,GAAOI,WAAavmD,KAAKumD,UACzBJ,GAAO1+B,SAAWznB,KAAKynB,QACvB0+B,GAAOK,GAAKxmD,KAAKwmD,EACjBL,GAAOxkD,SAAW3B,KAAK2B,QACvBwkD,GAAOM,OAASzmD,KAAKymD,MACrBN,GAAOO,aAAe1mD,KAAK0mD,YAC3BP,GAAOQ,MAAQ3mD,KAAK2mD,KAEpBR,GAAOS,QAAU5mD,KAAK4mD,OACtBT,GAAOU,SAAW7mD,KAAK6mD,QAEvBV,GAAOF,cAAgBjmD,IACvBmmD,GAAOL,qBAAuB9lD,KAAK8lD,oBAEnC,OAAOK,GAMRnkD,QAAAC,eAAW4jD,EAAA3jD,UAAA,iB/DkuWJC,I+DluWP,WAEC,MAAOnC,MAAKqb,OAAOoC,eAAe9a,gBAAgB3C,KAAK2B,W/DmuWjDU,WAAY,KACZC,aAAc,M+D9tWrBN,QAAAC,eAAW4jD,EAAA3jD,UAAA,e/DouWJC,I+DpuWP,WAEC,GAAI2kD,GAAuB9mD,KAAKqb,OAAOoC,eAAekJ,qBAAqB3mB,KAAKymD,OAChFK,GAAYl5B,WAEZ,OAAOk5B,I/DouWDzkD,WAAY,KACZC,aAAc,M+Dv7WPujD,GAAAtgB,WAAoB,aAKpBsgB,GAAArgB,UAAmB,YAKnBqgB,GAAAngB,SAAkB,WAKlBmgB,GAAApgB,WAAoB,aAKpBogB,GAAAkB,WAAoB,aAepBlB,GAAAmB,MAAe,SAKfnB,GAAAoB,aAAsB,eAKtBpB,GAAAqB,YAAqB,cAuKpC,OAAArB,IA7NyBhB,EAAApoD,QA+NzBuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M/D8wWAzI,GAAQ0B,Q+D9wWOopD,I/DgxWZb,mCAAmC19C,YAAY0iB,6CAA6C,SAAS/vB,EAAQkB,EAAOJ,GACvH,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IgEjgXnF,IAAA08C,GAAA5qD,EAA0B,mCAU1B,IAAAktD,GAAA,SAAA3+C,GAA8BV,EAAAq/C,EAAA3+C,EAmB7B,SAAA2+C,GAAYnwB,EAAauvB,GAExB/9C,EAAAxN,KAAAgF,KAAMg3B,EAENh3B,MAAKonD,YAAcb,EAMpBvkD,OAAAC,eAAWklD,EAAAjlD,UAAA,chEk/WJC,IgEl/WP,WAEC,MAAOnC,MAAKonD,ahEm/WN/kD,WAAY,KACZC,aAAc,MgE5+Wd6kD,GAAAjlD,UAAAuN,MAAP,WAEC,MAAO,IAAI03C,GAAgBnnD,KAAKg3B,KAAMh3B,KAAKonD,aApC9BD,GAAAt9B,wBAAiC,sBAKjCs9B,GAAAx9B,oBAA6B,oBAiC5C,OAAAw9B,IA3C8BtC,EAAApoD,QA6C9BuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MhE2/WAzI,GAAQ0B,QgE3/WO0qD,IhE6/WZnC,mCAAmC19C,YAAY+/C,2CAA2C,SAASptD,EAAQkB,EAAOJ,GACrH,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IiEzjXnF,IAAA08C,GAAA5qD,EAAyB,mCAEzB,IAAAqtD,GAAA,SAAA9+C,GAA4BV,EAAAw/C,EAAA9+C,EAK3B,SAAA8+C,GAAYtwB,GAEXxuB,EAAAxN,KAAAgF,KAAMg3B,GALOswB,EAAA3jD,iBAA0B,iBAC1B2jD,GAAA1jD,gBAAyB,gBAMxC,OAAA0jD,IAT4BzC,EAAApoD,QAW5BuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MjEyjXAzI,GAAQ0B,QiEzjXO6qD,IjE2jXZtC,mCAAmC19C,YAAYigD,yCAAyC,SAASttD,EAAQkB,EAAOJ,GACnH,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IkE7kXnF,IAAA08C,GAAA5qD,EAAyB,mCAEzB,IAAAutD,GAAA,SAAAh/C,GAA0BV,EAAA0/C,EAAAh/C,EAOzB,SAAAg/C,GAAYxwB,EAAaywB,EAAwBC,GAAxB,GAAAD,QAAA,GAAsB,CAAtBA,EAAA3N,IAAwB,GAAA4N,QAAA,GAAqB,CAArBA,EAAA5N,IAEhDtxC,EAAAxN,KAAAgF,KAAMg3B,EAENh3B,MAAK2nD,WAAaF,CAClBznD,MAAK4nD,UAAYF,EAGlB1lD,OAAAC,eAAWulD,EAAAtlD,UAAA,alEykXJC,IkEzkXP,WAEC,MAAOnC,MAAK2nD,YlE0kXNtlD,WAAY,KACZC,aAAc,MkExkXrBN,QAAAC,eAAWulD,EAAAtlD,UAAA,YlE2kXJC,IkE3kXP,WAEC,MAAOnC,MAAK4nD,WlE4kXNvlD,WAAY,KACZC,aAAc,MkErkXdklD,GAAAtlD,UAAAuN,MAAP,WAEC,MAAO,IAAI+3C,GAAYxnD,KAAKg3B,KAAMh3B,KAAK2nD,WAAY3nD,KAAK4nD,WA9B3CJ,GAAAK,OAAgB,QAgC/B,OAAAL,IAlC0B3C,EAAApoD,QAoC1BuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MlE6kXAzI,GAAQ0B,QkE7kXO+qD,IlE+kXZxC,mCAAmC19C,YAAYqE,wCAAwC,SAAS1R,EAAQkB,EAAOJ,GAClH,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,ImE1nXnF,IAAA08C,GAAA5qD,EAA0B,mCAI1B,IAAA6tD,GAAA,SAAAt/C,GAAyBV,EAAAggD,EAAAt/C,EAcxB,SAAAs/C,GAAY9wB,EAAaz1B,GAExBiH,EAAAxN,KAAAgF,KAAMg3B,EAENh3B,MAAK6oB,OAAStnB,EATfS,OAAAC,eAAW6lD,EAAA5lD,UAAA,SnEunXJC,ImEvnXP,WAEC,MAAOnC,MAAK6oB,QnEwnXNxmB,WAAY,KACZC,aAAc,MmE3mXdwlD,GAAA5lD,UAAAuN,MAAP,WAEC,MAAO,IAAIq4C,GAAW9nD,KAAKg3B,KAAMh3B,KAAK6oB,QApBzBi/B,GAAAr8C,sBAA+B,sBAsB9C,OAAAq8C,IA7ByBjD,EAAApoD,QA+BzBuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MnEqnXAzI,GAAQ0B,QmErnXOqrD,InEunXZ9C,mCAAmC19C,YAAY2iB,0CAA0C,SAAShwB,EAAQkB,EAAOJ,GACpH,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IoE/pXnF,IAAA08C,GAAA5qD,EAA0B,mCAI1B,IAAA8tD,GAAA,SAAAv/C,GAA2BV,EAAAigD,EAAAv/C,EAgB1B,SAAAu/C,GAAY/wB,EAAagxB,GAExBx/C,EAAAxN,KAAAgF,KAAMg3B,EAENh3B,MAAKioD,SAAWD,EAMjBhmD,OAAAC,eAAW8lD,EAAA7lD,UAAA,WpEmpXJC,IoEnpXP,WAEC,MAAOnC,MAAKioD,UpEopXN5lD,WAAY,KACZC,aAAc,MoE7oXdylD,GAAA7lD,UAAAuN,MAAP,WAEC,MAAO,IAAIs4C,GAAa/nD,KAAKg3B,KAAMh3B,KAAKioD,UApC3BF,GAAAt/B,mBAA4B,mBAE5Bs/B,GAAAG,qBAA8B,qBAE9BH,GAAAnd,kBAA2B,kBAkC1C,OAAAmd,IAxC2BlD,EAAApoD,QA0C3BuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MpEupXAzI,GAAQ0B,QoEvpXOsrD,IpEypXZ/C,mCAAmC19C,YAAY6gD,wCAAwC,SAASluD,EAAQkB,EAAOJ,GAClH,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IqE1sXnF,IAAA08C,GAAA5qD,EAAyB,mCAOzB,IAAAmuD,GAAA,SAAA5/C,GAAyBV,EAAAsgD,EAAA5/C,EAuGxB,SAAA4/C,GAAYpxB,GAEXxuB,EAAAxN,KAAAgF,KAAMg3B,EAtGAh3B,MAAA8lD,qBAA+B,KA4GtC9jD,OAAAC,eAAWmmD,EAAAlmD,UAAA,WrEsmXJC,IqEtmXP,WAEC,GAAI4jD,GAAqB/lD,KAAK8lD,oBAC9B9lD,MAAK8lD,qBAAuB,IAG5B,OAAOC,IrEsmXD1jD,WAAY,KACZC,aAAc,MqEjmXd8lD,GAAAlmD,UAAA8jD,gBAAP,WAEChmD,KAAK8lD,qBAAuB,KAE5B,IAAI9lD,KAAKimD,cACRjmD,KAAKimD,cAAcD,kBAMdoC,GAAAlmD,UAAAgkD,yBAAP,WAEClmD,KAAK8lD,qBAAuB,KAE5B,IAAI9lD,KAAKimD,cACRjmD,KAAKimD,cAAcC,2BAMdkC,GAAAlmD,UAAAuN,MAAP,WAEC,GAAI02C,GAAoB,GAAIiC,GAAWpoD,KAAKg3B,KAO5CmvB,GAAOC,QAAUpmD,KAAKomD,OACtBD,GAAOE,QAAUrmD,KAAKqmD,OAEtBF,GAAOG,KAAOtmD,KAAKsmD,IACnBH,GAAO9qC,OAASrb,KAAKqb,MACrB8qC,GAAOI,WAAavmD,KAAKumD,UACzBJ,GAAO1+B,SAAWznB,KAAKynB,QACvB0+B,GAAOK,GAAKxmD,KAAKwmD,EACjBL,GAAOxkD,SAAW3B,KAAK2B,QACvBwkD,GAAOM,OAASzmD,KAAKymD,MACrBN,GAAOO,aAAe1mD,KAAK0mD,YAE3BP,GAAOS,QAAU5mD,KAAK4mD,OACtBT,GAAOU,SAAW7mD,KAAK6mD,QAEvBV,GAAOF,cAAgBjmD,IAEvB,OAAOmmD,GAMRnkD,QAAAC,eAAWmmD,EAAAlmD,UAAA,iBrEylXJC,IqEzlXP,WAEC,MAAOnC,MAAKqb,OAAOoC,eAAe9a,gBAAgB3C,KAAK2B,WrE0lXjDU,WAAY,KACZC,aAAc,MqErlXrBN,QAAAC,eAAWmmD,EAAAlmD,UAAA,erE2lXJC,IqE3lXP,WAEC,GAAI2kD,GAAuB9mD,KAAKqb,OAAOoC,eAAekJ,qBAAqB3mB,KAAKymD,OAChFK,GAAYl5B,WAEZ,OAAOk5B,IrE2lXDzkD,WAAY,KACZC,aAAc,MqEjxXP8lD,GAAAC,UAAmB,YAKnBD,GAAAE,YAAqB,cAKrBF,GAAAG,WAAoB,aAKpBH,GAAAI,UAAmB,YAKnBJ,GAAAK,WAAoB,aAmKnC,OAAAL,IAhMyBvD,EAAApoD,QAkMzBuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MrEinXAzI,GAAQ0B,QqEjnXO2rD,IrEmnXZpD,mCAAmC19C,YAAYmT,4CAA4C,SAASxgB,EAAQkB,EAAOJ,GACtH,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IsEn0XnF,IAAA08C,GAAA5qD,EAAyB,mCAIzB,IAAAyuD,GAAA,SAAAlgD,GAA6BV,EAAA4gD,EAAAlgD,EAmB5B,SAAAkgD,GAAY1xB,EAAa1lB,GAExB9I,EAAAxN,KAAAgF,KAAMg3B,EAENh3B,MAAK60B,WAAavjB,EATnBtP,OAAAC,eAAWymD,EAAAxmD,UAAA,atE2zXJC,IsE3zXP,WAEC,MAAOnC,MAAK60B,YtE4zXNxyB,WAAY,KACZC,aAAc,MsE/yXdomD,GAAAxmD,UAAAuN,MAAP,WAEC,MAAO,IAAIi5C,GAAe1oD,KAAKg3B,KAAMh3B,KAAK60B,YAzB7B6zB,GAAA1uC,oBAA6B,oBAK7B0uC,GAAAzuC,2BAAoC,0BAsBnD,OAAAyuC,IAlC6B7D,EAAApoD,QAoC7BuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MtE6zXAzI,GAAQ0B,QsE7zXOisD,ItE+zXZ1D,mCAAmC19C,YAAYhJ,6BAA6B,SAASrE,EAAQkB,EAAOJ,GACvG,YuEx2XA,IAAAyE,GAAAvF,EAA0C,wCAAlCc,GAAA+pD,YAAAtlD,EAAA/C,OACR,IAAAgD,GAAAxF,EAA+C,+CAAvCc,GAAAkqD,mBAAAxlD,EAAAhD,OACR,IAAAksD,GAAA1uD,EAA2C,0CAAnCc,GAAAuqD,cAAAqD,EAAAlsD,OACR,IAAA4gC,GAAApjC,EAAyC,uCAAjCc,GAAA6qD,WAAAvoB,EAAA5gC,OACR,IAAAsnC,GAAA9pC,EAAyC,uCAAjCc,GAAA8qD,WAAA9hB,EAAAtnC,OACR,IAAA6qB,GAAArtB,EAA6C,4CAArCc,GAAAosD,gBAAA7/B,EAAA7qB,OACR,IAAAiD,GAAAzF,EAA2C,0CAAnCc,GAAAusD,cAAA5nD,EAAAjD,OACR,IAAAmsD,GAAA3uD,EAA0C,wCAAlCc,GAAAysD,YAAAoB,EAAAnsD,OACR,IAAA4N,GAAApQ,EAAyC,uCAAjCc,GAAA+sD,WAAAz9C,EAAA5N,OACR,IAAA8qB,GAAAttB,EAA0C,yCAAlCc,GAAAgtD,aAAAxgC,EAAA9qB,OACR,IAAAosD,GAAA5uD,EAAyC,uCAAjCc,GAAAqtD,WAAAS,EAAApsD,OACR,IAAAwZ,GAAAhc,EAA4C,2CAApCc,GAAA2tD,eAAAzyC,EAAAxZ,UvEu3XLswB,wCAAwC,wCAAwClH,+CAA+C,+CAA+Cw/B,0CAA0C,0CAA0CvmB,uCAAuC,uCAAuC8H,uCAAuC,uCAAuC5c,4CAA4C,4CAA4Cq9B,0CAA0C,0CAA0CE,wCAAwC,wCAAwC57C,uCAAuC,uCAAuCse,yCAAyC,yCAAyCk+B,uCAAuC,uCAAuC1tC,2CAA2C,6CAA6CquC,2DAA2D,SAAS7uD,EAAQkB,EAAOJ,GACtjC,kBAEMwD,gCAAgC,SAAStE,EAAQkB,EAAOJ,GAC9D,kBAEMguD,4CAA4C,SAAS9uD,EAAQkB,EAAOJ,GAC1E,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IwE54XnF,IAAA8iC,GAAAhxC,EAA8B,4CAC9B,IAAAo9C,GAAAp9C,EAAgC,8CAChC,IAAA+uD,GAAA/uD,EAAgC,8CAChC,IAAAomB,GAAApmB,EAAkC,6CAMlC,IAAAqO,GAAArO,EAA0B,oCAE1B,IAAA0uD,GAAA1uD,EAA6B,0CAQ7B,IAAAgvD,GAAA,SAAAzgD,GAA2BV,EAAAmhD,EAAAzgD,EA6D1B,SAAAygD,GAAYrZ,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEXpnC,EAAAxN,KAAAgF,KA5DOA,MAAAkpD,uBAAuC,GAAIvoD,MAC3CX,MAAAmpD,kBAA2B,GAAInnD,OAE/BhC,MAAAopD,aAAsB,CAMvBppD,MAAAqpD,eAAwB,GAAIrnD,OAC5BhC,MAAAspD,oBAA6B,GAAItnD,OAoDvChC,MAAKupD,oBAAsB3Z,EAjD5B5tC,OAAAC,eAAWgnD,EAAA/mD,UAAA,sBxEo4XJC,IwEp4XP,WAEC,MAAOnC,MAAKupD,qBxEq4XNlnD,WAAY,KACZC,aAAc,MwEh4XrBN,QAAAC,eAAWgnD,EAAA/mD,UAAA,WxEs4XJC,IwEt4XP,WAEC,MAAOnC,MAAKwpD,UxEu4XNnnD,WAAY,KACZC,aAAc,MwEl4Xd2mD,GAAA/mD,UAAAunD,wBAAP,WAEC,MAAOzpD,MAAKkpD,uBAMND,GAAA/mD,UAAAwnD,mBAAP,SAA0Bh6C,GAEzB,MAAO1P,MAAKmpD,kBAAkBz5C,GAM/B1N,QAAAC,eAAWgnD,EAAA/mD,UAAA,exEo4XJC,IwEp4XP,WAEC,MAAOnC,MAAKopD,cxEq4XN/mD,WAAY,KACZC,aAAc,MwEn4XrBN,QAAAC,eAAWgnD,EAAA/mD,UAAA,exEs4XJC,IwEt4XP,WAEC,KAAM,IAAIke,GAAA5jB,SxEu4XJ4F,WAAY,KACZC,aAAc,MwE13Xd2mD,GAAA/mD,UAAA2uB,OAAP,SAAc1W,GAEb,GAAIna,KAAKg6C,QACR7/B,EAASwvC,WAAW3pD,KAAKg6C,QAAQvqC,QAElC,KAAK,GAAIC,KAAQ1P,MAAKmpD,kBACrBhvC,EAAS+1B,oBAAoBxgC,EAAM1P,KAAK0pD,mBAAmBh6C,GAAMD,SAM5Dw5C,GAAA/mD,UAAAuB,QAAP,WAEC+E,EAAAtG,UAAMuB,QAAOzI,KAAAgF,KAEb,IAAIA,KAAKwpD,SAAU,CAClBxpD,KAAKwpD,SAAS/lD,SACdzD,MAAKwpD,SAAW,KAGjB,IAAK,GAAI95C,KAAQ1P,MAAKmpD,kBAAmB,CACxCnpD,KAAKmpD,kBAAkBz5C,GAAMjM,gBACtBzD,MAAKmpD,mBAYPF,GAAA/mD,UAAAynD,WAAP,SAAkBC,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE7B,GAAID,YAAkBZ,GAAAvsD,QAAkB,CACvC,GAAIuD,KAAKwpD,SACRxpD,KAAK8pD,cAEN9pD,MAAKwpD,SAA8BI,MAC7B,IAAIA,EAAQ,CAClB,IAAK5pD,KAAKwpD,SACTxpD,KAAKwpD,SAAW,GAAIR,GAAAvsD,OAErBuD,MAAKwpD,SAASjmD,IAAIqmD,EAAQC,OACpB,IAAI7pD,KAAKwpD,SAAU,CACzBxpD,KAAKwpD,SAAS/lD,SACdzD,MAAKwpD,SAAW,IAEhBxpD,MAAK8pD,eAGN,GAAI9pD,KAAKwpD,SAAU,CAClBxpD,KAAKopD,aAAeppD,KAAKwpD,SAASngB,KAElCrpC,MAAK+pD,yBACC,CACN/pD,KAAKopD,aAAe,GAUfH,GAAA/mD,UAAAguC,oBAAP,SAA2BxgC,EAAak6C,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEnD,GAAID,GAAU5pD,KAAKmpD,kBAAkBz5C,GACpC,MAED,IAAIk6C,YAAkB3e,GAAAxuC,QAAgB,CACrCuD,KAAKgqD,cAAchqD,KAAKmpD,kBAAkBz5C,GAC1C1P,MAAKmpD,kBAAkBz5C,GAAQk6C,MACzB,IAAIA,EAAQ,CAClB,IAAK5pD,KAAKmpD,kBAAkBz5C,GAC3B1P,KAAKmpD,kBAAkBz5C,GAAQ,GAAI2nC,GAAA56C,QAAiBuD,KAAKupD,oBAE1DvpD,MAAKmpD,kBAAkBz5C,GAAMnM,IAAIqmD,EAAQC,OACnC,IAAI7pD,KAAKmpD,kBAAkBz5C,GAAO,CACxC1P,KAAKgqD,cAAchqD,KAAKmpD,kBAAkBz5C,GAC1C1P,MAAKkpD,uBAAuB12B,OAAOxyB,KAAKkpD,uBAAuBz6C,QAAQiB,GAAO,SACvE1P,MAAKmpD,kBAAkBz5C,EAC9B,QAGD1P,KAAKiqD,mBAAmBjqD,KAAKmpD,kBAAkBz5C,GAE/C1P,MAAKqpD,eAAerpD,KAAKmpD,kBAAkBz5C,GAAMrM,IAAM,KAEvD,IAAIrD,KAAKkpD,uBAAuBz6C,QAAQiB,KAAU,EACjD1P,KAAKkpD,uBAAuB9lD,KAAKsM,GAO5Bu5C,GAAA/mD,UAAAuN,MAAP,WAEC,KAAM,IAAI4Q,GAAA5jB,QAGJwsD,GAAA/mD,UAAA4mC,oBAAP,SAA2Bx3B,IASpB23C,GAAA/mD,UAAAm0B,MAAP,SAAaA,IAKN4yB,GAAA/mD,UAAAgoD,QAAP,SAAeC,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,GAK3BnB,GAAA/mD,UAAAgnC,aAAP,SAAoB/zB,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,KAEnB,KAAM,IAAIkL,GAAA5jB,QAGJwsD,GAAA/mD,UAAAknC,gBAAP,SAAuBihB,EAAiBl1C,GAAA,GAAAA,QAAA,GAAoB,CAApBA,EAAA,KAEvC,KAAM,IAAIkL,GAAA5jB,QAGJwsD,GAAA/mD,UAAA0wB,aAAP,SAAoB/vB,EAAUE,EAAU2U,EAAU2a,GAEjD,KAAM,IAAIhS,GAAA5jB,QAGHwsD,GAAA/mD,UAAA6nD,mBAAR,WAEC,IAAK/pD,KAAKsqD,mBACTtqD,KAAKsqD,mBAAqB,GAAI3B,GAAAlsD,QAAcksD,EAAAlsD,QAAc+oD,mBAAoBxlD,KAAKwpD,SAEpFxpD,MAAKwL,cAAcxL,KAAKsqD,oBAGjBrB,GAAA/mD,UAAA4nD,aAAR,WAEC9pD,KAAKwL,cAAc,GAAIm9C,GAAAlsD,QAAcksD,EAAAlsD,QAAcgpD,cAAezlD,KAAKwpD,WAGjEP,GAAA/mD,UAAA+nD,mBAAP,SAA0Bla,GAEzB,IAAKA,GAAkB/vC,KAAKqpD,eAAetZ,EAAe1sC,IACzD,MAEDrD,MAAKqpD,eAAetZ,EAAe1sC,IAAM,IAEzC,KAAKrD,KAAKspD,oBAAoBvZ,EAAe1sC,IAC5CrD,KAAKspD,oBAAoBvZ,EAAe1sC,IAAM,GAAIslD,GAAAlsD,QAAcksD,EAAAlsD,QAAcipD,oBAAqB3V,EAEpG/vC,MAAKwL,cAAcxL,KAAKspD,oBAAoBvZ,EAAe1sC,KAIrD4lD,GAAA/mD,UAAA8nD,cAAP,SAAqBja,GAEpB,IAAKA,EACJ,MAEDA,GAAetsC,SAEfzD,MAAKwL,cAAc,GAAIm9C,GAAAlsD,QAAcksD,EAAAlsD,QAAckpD,eAAgB5V,GAEnE/vC,MAAKqpD,eAAetZ,EAAe1sC,IAAM,IACzCrD,MAAKspD,oBAAoBvZ,EAAe1sC,IAAM,KAGxC4lD,GAAA/mD,UAAA4mB,gBAAP,SAAuBE,EAAkCvB,EAAuBsB,GAE/E,KAAM,IAAI1I,GAAA5jB,QAEZ,OAAAwsD,IA7P2B3gD,EAAA7L,QA+P3BuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MxEm0XAzI,GAAQ0B,QwEn0XOwsD,IxEq0XZpW,4CAA4CvrC,UAAU86C,8CAA8C96C,UAAUijD,8CAA8CjjD,UAAUkZ,6CAA6ClZ,UAAUqB,oCAAoCrB,UAAU+9C,0CAA0C,4CAA4C/lC,4CAA4C,SAASrlB,EAAQkB,EAAOJ,GACxa,YyEzlYA,IAAAyvD,GAAA,WAAA,QAAAA,MAKeA,EAAAC,SAAkB,UAKlBD,GAAAtrC,KAAc,MAC7B,OAAAsrC,KAEAxoD,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MzE2lYAzI,GAAQ0B,QyE3lYO+tD,OzE6lYThhB,wCAAwC,SAASvvC,EAAQkB,EAAOJ,GACtE,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,I0E7mYnF,IAAAgrB,GAAAl5B,EAAsB,2BAKtB,IAAAqO,GAAArO,EAA0B,oCAI1B,IAAAywD,GAAAzwD,EAAyB,sCAIzB,IAAA0uD,GAAA1uD,EAA6B,0CAC7B,IAAAoQ,GAAApQ,EAA2B,uCAI3B,IAAA0wD,GAAA1wD,EAA6B,yCAiB7B,IAAAs9C,GAAA,SAAA/uC,GAAuBV,EAAAyvC,EAAA/uC,EAqHtB,SAAA+uC,KArHD,GAAAx3C,GAAAC,IAuHEwI,GAAAxN,KAAAgF,KA/GOA,MAAAyzB,kBAA4B,IAE5BzzB,MAAA0zB,qBAAuB,IAGvB1zB,MAAAwoC,UAA2B,GAAI7nC,MA4GtCX,MAAK+nB,gCAAkC,SAAClnB,GAAqB,MAAAd,GAAKioB,wBAAwBnnB,GAC1Fb,MAAK4qD,8BAAgC,SAAC/pD,GAAwB,MAAAd,GAAK8qD,sBAAsBhqD,IAzG1FmB,OAAAC,eAAWs1C,EAAAr1C,UAAA,a1E8lYJC,I0E9lYP,WAEC,MAAOo1C,GAAS7uC,W1E+lYVrG,WAAY,KACZC,aAAc,M0EzlYrBN,QAAAC,eAAWs1C,EAAAr1C,UAAA,S1E4lYJC,I0E5lYP,WAEC,MAAOnC,MAAKwoC,UAAUvtC,Q1E6lYhBoH,WAAY,KACZC,aAAc,M0ExlYrBN,QAAAC,eAAWs1C,EAAAr1C,UAAA,Y1E8lYJC,I0E9lYP,WAEC,MAAOnC,MAAKmoB,W1E+lYN5kB,I0E5lYP,SAAoBC,GAEnBxD,KAAKmoB,UAAY3kB,CAEjB,IAAIL,GAAanD,KAAKwoC,UAAUvtC,MAChC,IAAI6vD,EAEJ,KAAK,GAAIpwD,GAAW,EAAGA,EAAIyI,IAAOzI,EAAG,CACpCowD,EAAU9qD,KAAKwoC,UAAU9tC,EAGzB,IAAIowD,EAAQrjC,SAAU,CACrBqjC,EAAQrjC,SAASe,aAAasiC,EAC9BA,GAAQrjC,SAASiB,UAAUoiC,GAI5BA,EAAQC,uB1E0lYH1oD,WAAY,KACZC,aAAc,M0EplYrBN,QAAAC,eAAWs1C,EAAAr1C,UAAA,S1E0lYJC,I0E1lYP,WAEC,MAAOnC,MAAK6oB,Q1E2lYNtlB,I0ExlYP,SAAiBC,GAEhB,GAAIxD,KAAK6oB,QAAUrlB,EAClB,MAED,IAAIxD,KAAK6oB,OACR7oB,KAAK6oB,OAAOnlB,oBAAoB2G,EAAA5N,QAAWgP,sBAAuBzL,KAAK+nB,gCAExE/nB,MAAK6oB,OAASrlB,CAEd,IAAIxD,KAAK6oB,OACR7oB,KAAK6oB,OAAOhlB,iBAAiBwG,EAAA5N,QAAWgP,sBAAuBzL,KAAK+nB,gCAErE/nB,MAAKgrD,wB1EqlYC3oD,WAAY,KACZC,aAAc,M0EhlYrBN,QAAAC,eAAWs1C,EAAAr1C,UAAA,Y1EslYJC,I0EtlYP,WAEC,MAAOnC,MAAKuoB,W1EulYNhlB,I0EplYP,SAAoBC,GAEnB,GAAIA,GAASxD,KAAKuoB,UACjB,MAED,IAAI7tB,EACJ,IAAIyI,GAAanD,KAAKwoC,UAAUvtC,MAChC,IAAI6vD,EAEJ,IAAI9qD,KAAKuoB,UACR,IAAK7tB,EAAI,EAAGA,EAAIyI,EAAKzI,IACpB,KAAMowD,EAAU9qD,KAAKwoC,UAAU9tC,IAAIuwD,wBAClCjrD,KAAKuoB,UAAUC,aAAasiC,EAE/B9qD,MAAKuoB,UAAY/kB,CAEjB,IAAIxD,KAAKuoB,UACR,IAAK7tB,EAAI,EAAGA,EAAIyI,EAAKzI,IACpB,KAAMowD,EAAU9qD,KAAKwoC,UAAU9tC,IAAIuwD,wBAClCjrD,KAAKuoB,UAAUG,UAAUoiC,I1EilYtBzoD,WAAY,KACZC,aAAc,M0E/jYdi1C,GAAAr1C,UAAAiuC,WAAP,SAAkBh2B,EAAuBsN,EAA8BlmB,GAA9B,GAAAkmB,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAlmB,QAAA,GAAkB,CAAlBA,EAAA,KAEtE,GAAIupD,EAEJ,IAAIJ,EAAAjuD,QAAQyuD,WAAWjwD,OAAQ,CAC9B6vD,EAAUJ,EAAAjuD,QAAQyuD,WAAW/kB,KAC7B2kB,GAAQK,QAAUnrD,KAAKwoC,UAAUvtC,MACjC6vD,GAAQM,OAASprD,IACjB8qD,GAAQ3wC,SAAWA,CACnB2wC,GAAQrjC,SAAWA,CACnBqjC,GAAQvpD,MAAQA,MACV,CACNupD,EAAU,GAAIJ,GAAAjuD,QAAQuD,KAAKwoC,UAAUvtC,OAAQ+E,KAAMma,EAAUsN,EAAUlmB,GAGxEvB,KAAKwoC,UAAUplC,KAAK0nD,EAEpB3wC,GAAStW,iBAAiB8kD,EAAAlsD,QAAcipD,oBAAqB1lD,KAAK4qD,8BAElE5qD,MAAKugB,YAEL,OAAOuqC,GAGDvT,GAAAr1C,UAAAmpD,cAAP,SAAqBP,GAEpB9qD,KAAKwoC,UAAUhW,OAAOxyB,KAAKwoC,UAAU/5B,QAAQq8C,GAAU,EAEvDA,GAAQ3wC,SAASzW,oBAAoBilD,EAAAlsD,QAAcipD,oBAAqB1lD,KAAK4qD,8BAE7EE,GAAQ3wC,SAAW,IACnB2wC,GAAQrjC,SAAW,IACnBqjC,GAAQvpD,MAAQ,IAChBupD,GAAQ/wC,OAER/Z,MAAKugB,aAGCg3B,GAAAr1C,UAAAopD,aAAP,SAAoBtgD,GAEnB,MAAOhL,MAAKwoC,UAAUx9B,GAGhBusC,GAAAr1C,UAAA4mC,oBAAP,SAA2Bx3B,GAE1B,GAAInO,GAAanD,KAAKwoC,UAAUvtC,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIyI,IAAOzI,EACjCsF,KAAKwoC,UAAU9tC,GAAGyf,SAAS2uB,oBAAoBx3B,GAG1CimC,GAAAr1C,UAAA2uB,OAAP,SAAc/0B,GAEbA,EAAS2rB,SAAWznB,KAAKuoB,SACzBzsB,GAASyF,MAAQvB,KAAKuB,KACtBzF,GAASyvD,UAAYvrD,KAAKurD,SAC1BzvD,GAAS0vD,aAAexrD,KAAKwrD,YAC7B,IAAIV,EACJ,IAAI3nD,GAAanD,KAAKwoC,UAAUvtC,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIyI,IAAOzI,EAAG,CACpCowD,EAAU9qD,KAAKwoC,UAAU9tC,EACzBoB,GAASq0C,WAAW2a,EAAQ3wC,SAAU2wC,EAAQG,wBAAyBH,EAAQW,sBAGhF,GAAIzrD,KAAKmoB,UACRrsB,EAAS4sC,SAAW1oC,KAAKmoB,UAAU1Y,QAO9B8nC,GAAAr1C,UAAAm0B,MAAP,SAAaA,GAEZ,GAAIlzB,GAAanD,KAAKwoC,UAAUvtC,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIyI,IAAOzI,EACjCsF,KAAKwoC,UAAU9tC,GAAGyf,SAASkc,MAAMA,GAG5BkhB,GAAAr1C,UAAA6X,MAAP,WAEC,IAAK,GAAIrf,GAAWsF,KAAKwoC,UAAUvtC,OAAS,EAAGP,GAAG,EAAGA,IACpDsF,KAAKwoC,UAAU9tC,GAAGqf,QAMbw9B,GAAAr1C,UAAAuB,QAAP,WAECzD,KAAKynB,SAAW,IAChB,KAAK,GAAI/sB,GAAWsF,KAAKwoC,UAAUvtC,OAAS,EAAGP,GAAG,EAAGA,IACpDsF,KAAKwoC,UAAU9tC,GAAG+I,SAEnB,IAAIzD,KAAKmoB,UACRnoB,KAAKmoB,UAAU1kB,UAQV8zC,GAAAr1C,UAAAgoD,QAAP,SAAeC,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAEjC,GAAIjnD,GAAanD,KAAKwoC,UAAUvtC,MAEhC,KAAK,GAAIP,GAAW,EAAGA,EAAIyI,IAAOzI,EACjCsF,KAAKwoC,UAAU9tC,GAAGyf,SAAS+vC,QAAQC,EAAQC,GAGtC7S,GAAAr1C,UAAAgnC,aAAP,WAEC,GAAIlpC,KAAKyzB,kBAAmB,CAC3BzzB,KAAKyzB,kBAAoB,KAEzB,KAAKzzB,KAAK0rD,WACT1rD,KAAK0rD,WAAa,GAAIv4B,GAAA12B,OAEvB,IAAIuD,KAAKwoC,UAAUvtC,OAAQ,CAC1B+E,KAAK0rD,WAAWC,kBAChB,IAAIxoD,GAAanD,KAAKwoC,UAAUvtC,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIyI,EAAKzI,IAC/BsF,KAAK0rD,WAAa1rD,KAAKwoC,UAAU9tC,GAAGyf,SAAS+uB,aAAalpC,KAAK0rD,gBAC1D,CACN1rD,KAAK0rD,WAAWp5B,YAIlB,MAAOtyB,MAAK0rD,WAINnU,GAAAr1C,UAAAknC,gBAAP,SAAuBihB,EAAiBl1C,GAAA,GAAAA,QAAA,GAAoB,CAApBA,EAAA,KAEvC,GAAIhS,GAAanD,KAAKwoC,UAAUvtC,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIyI,EAAKzI,IAC/Bya,EAASnV,KAAKwoC,UAAU9tC,GAAGyf,SAASivB,gBAAgBihB,EAAQl1C,EAE7D,OAAOA,GAGDoiC,GAAAr1C,UAAAqe,WAAP,WAEC/X,EAAAtG,UAAMqe,WAAUvlB,KAAAgF,KAEhBA,MAAKyzB,kBAAoB,IACzBzzB,MAAK0zB,qBAAuB,KAGtB6jB,GAAAr1C,UAAA8oD,qBAAP,WAEC,GAAI7nD,GAAanD,KAAKwoC,UAAUvtC,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIyI,IAAOzI,EACjCsF,KAAKwoC,UAAU9tC,GAAGkvB,oBAIb2tB,GAAAr1C,UAAA6oD,mBAAP,WAEC,GAAI5nD,GAAanD,KAAKwoC,UAAUvtC,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIyI,IAAOzI,EACjCsF,KAAKwoC,UAAU9tC,GAAGqwD,qBAGbxT,GAAAr1C,UAAAuwB,sBAAP,SAA6B5vB,EAAUE,GAGtC,GAAII,GAAanD,KAAKwoC,UAAUvtC,MAChC,KAAI,GAAIP,GAAW,EAAGA,EAAIyI,EAAKzI,IAC9B,GAAIiwD,EAAAluD,QAAcmvD,wBAAwB/oD,EAAGE,EAAG,EAAG/C,KAAKkpC,eAAmClpC,KAAKwoC,UAAU9tC,GAAGyf,UAC5G,MAAO,KAET,OAAO,OAGDo9B,GAAAr1C,UAAAonC,gBAAP,SAAuBngB,GAEtB,GAAIhmB,GAAanD,KAAKwoC,UAAUvtC,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIyI,EAAKzI,IAC/ByuB,EAAUC,gBAAgBppB,KAAKwoC,UAAU9tC,IAGnC68C,GAAAr1C,UAAA8lB,wBAAR,SAAgCnnB,GAE/Bb,KAAKgrD,uBAGEzT,GAAAr1C,UAAA2oD,sBAAR,SAA8BhqD,GAE7B,GAAIA,EAAMkvC,gBAAsClvC,EAAMsU,OAAQ02C,UAC7D,MAED7rD,MAAKugB,aAhUQg3B,GAAA7uC,UAAmB,kBAkUlC,OAAA6uC,IApUuBjvC,EAAA7L,QAsUvBuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M1EwhYAzI,GAAQ0B,Q0ExhYO86C,I1E0hYZva,2BAA2B11B,UAAUqB,oCAAoCrB,UAAU+9C,0CAA0C,0CAA0C15C,uCAAuC,uCAAuCmgD,sCAAsC,sCAAsCC,yCAAyC,2CAA2CD,uCAAuC,SAAS7xD,EAAQkB,EAAOJ,GACvd,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,I2Er4YnF,IAAAG,GAAArO,EAA0B,oCAK1B,IAAAqtB,GAAArtB,EAA8B,4CAG9B,IAAAoQ,GAAApQ,EAA2B,uCAiB3B,IAAA+xD,GAAA,SAAAxjD,GAAsBV,EAAAkkD,EAAAxjD,EA0FrB,SAAAwjD,GAAYhhD,EAAcogD,EAAiBjxC,EAAuBsN,EAA8BlmB,GA1FjG,GAAAxB,GAAAC,IA0FmE,IAAAynB,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAlmB,QAAA,GAAkB,CAAlBA,EAAA,KAE/FiH,EAAAxN,KAAAgF,KAtFMA,MAAAmrD,QAAiB,CAwFvBnrD,MAAK+nB,gCAAkC,SAAClnB,GAAqB,MAAAd,GAAKioB,wBAAwBnnB,GAE1Fb,MAAKmrD,QAAUngD,CACfhL,MAAKorD,OAASA,CACdprD,MAAKma,SAAWA,CAChBna,MAAKynB,SAAWA,CAChBznB,MAAKuB,MAAQA,EA9EdS,OAAAC,eAAW+pD,EAAA9pD,UAAA,a3E03YJC,I2E13YP,WAEC,MAAO6pD,GAAQtjD,W3E23YTrG,WAAY,KACZC,aAAc,M2Er3YrBN,QAAAC,eAAW+pD,EAAA9pD,UAAA,Y3E23YJC,I2E33YP,WAEC,MAAOnC,MAAKorD,OAAO1iB,U3E43YbrmC,WAAY,KACZC,aAAc,M2Eh3YrBN,QAAAC,eAAW+pD,EAAA9pD,UAAA,Y3E43YJC,I2E53YP,WAEC,MAAOnC,MAAKuoB,WAAavoB,KAAKorD,OAAO3jC,U3E63Y/BlkB,I2E13YP,SAAoBC,GAEnB,GAAIxD,KAAKynB,SACRznB,KAAKynB,SAASe,aAAaxoB,KAE5BA,MAAKuoB,UAAY/kB,CAEjB,IAAIxD,KAAKynB,SACRznB,KAAKynB,SAASiB,UAAU1oB,O3Ey3YnBqC,WAAY,KACZC,aAAc,M2Ep3YrBN,QAAAC,eAAW+pD,EAAA9pD,UAAA,S3E03YJC,I2E13YP,WAEC,MAAOnC,MAAK6oB,QAAU7oB,KAAKorD,OAAO7pD,O3E23Y5BgC,I2Ex3YP,SAAiBC,GAEhB,GAAIxD,KAAK6oB,QAAUrlB,EAClB,MAED,IAAIxD,KAAK6oB,OACR7oB,KAAK6oB,OAAOnlB,oBAAoB2G,EAAA5N,QAAWgP,sBAAuBzL,KAAK+nB,gCAExE/nB,MAAK6oB,OAASrlB,CAEd,IAAIxD,KAAK6oB,OACR7oB,KAAK6oB,OAAOhlB,iBAAiBwG,EAAA5N,QAAWgP,sBAAuBzL,KAAK+nB,gCAErE/nB,MAAK4pB,qB3Eq3YCvnB,WAAY,KACZC,aAAc,M2E/1Yd0pD,GAAA9pD,UAAAuB,QAAP,WAEC+E,EAAAtG,UAAMuB,QAAOzI,KAAAgF,KAEbA,MAAKorD,OAAOC,cAAcrrD,KAC1BA,MAAKorD,OAAS,IAEdY,GAAQd,WAAW9nD,KAAKpD,MAGlBgsD,GAAA9pD,UAAA6oD,mBAAP,WAEC/qD,KAAKwL,cAAc,GAAI8b,GAAA7qB,QAAgB6qB,EAAA7qB,QAAgBktB,oBAAqB3pB,OAGtEgsD,GAAA9pD,UAAA0nB,kBAAP,WAEC5pB,KAAKwL,cAAc,GAAI8b,GAAA7qB,QAAgB6qB,EAAA7qB,QAAgBotB,wBAAyB7pB,OAG1EgsD,GAAA9pD,UAAA+oD,sBAAP,WAEC,MAAOjrD,MAAKuoB,UAGNyjC,GAAA9pD,UAAAupD,mBAAP,WAEC,MAAOzrD,MAAK6oB,OAGLmjC,GAAA9pD,UAAA8lB,wBAAR,SAAgCnnB,GAE/Bb,KAAK4pB,oBAYCoiC,GAAA9pD,UAAA4mB,gBAAP,SAAuBC,EAAmCC,GAEzD,MAAOhpB,MAAKma,SAAS2O,gBAAgBE,EAAiBhpB,KAAKynB,SAAUsB,GAtJxDijC,GAAAd,WAA4B,GAAIvqD,MAEhCqrD,GAAAtjD,UAAmB,iBAuJlC,OAAAsjD,IA3JsB1jD,EAAA7L,QA6JtBuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M3Eu1YAzI,GAAQ0B,Q2Ev1YOuvD,I3Ey1YZrjD,oCAAoCrB,UAAU0iB,4CAA4C,4CAA4Cre,uCAAuC,yCAAyCsgD,4CAA4C,SAAShyD,EAAQkB,EAAOJ,GAC7R,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,I4ExhZnF,IAAA8iC,GAAAhxC,EAA8B,4CAC9B,IAAAkxC,GAAAlxC,EAA+B,6CAE/B,IAAAiyD,GAAAjyD,EAAgC,8CAKhC,IAAAkyD,GAAAlyD,EAA6B,2CAE7B,IAAA0wD,GAAA1wD,EAA6B,yCAO7B,IAAAmyD,GAAA,SAAA5jD,GAA2BV,EAAAskD,EAAA5jD,EAyD1B,SAAA4jD,GAAYxc,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEXpnC,EAAAxN,KAAAgF,KAAM4vC,EAvDC5vC,MAAAqsD,aAAsB,CAyD7BrsD,MAAKssD,WAAa,GAAIrhB,GAAAxuC,QAAe8yC,aAAc,EAAGK,GA/CvD5tC,OAAAC,eAAWmqD,EAAAlqD,UAAA,a5EmhZJC,I4EnhZP,WAEC,MAAOiqD,GAAa1jD,W5EohZdrG,WAAY,KACZC,aAAc,M4E/gZrBN,QAAAC,eAAWmqD,EAAAlqD,UAAA,a5EqhZJC,I4ErhZP,WAEC,MAAOnC,MAAKssD,Y5EshZNjqD,WAAY,KACZC,aAAc,M4EjhZrBN,QAAAC,eAAWmqD,EAAAlqD,UAAA,a5EuhZJC,I4EvhZP,WAEC,MAAOnC,MAAKusD,Y5EwhZNlqD,WAAY,KACZC,aAAc,M4EnhZrBN,QAAAC,eAAWmqD,EAAAlqD,UAAA,U5EyhZJC,I4EzhZP,WAEC,IAAKnC,KAAKwsD,QACTxsD,KAAKysD,UAAUzsD,KAAKwsD,QAErB,OAAOxsD,MAAKwsD,S5EyhZNnqD,WAAY,KACZC,aAAc,M4EphZrBN,QAAAC,eAAWmqD,EAAAlqD,UAAA,e5E0hZJC,I4E1hZP,WAEC,MAAOnC,MAAKqsD,c5E2hZNhqD,WAAY,KACZC,aAAc,M4E/gZd8pD,GAAAlqD,UAAAgnC,aAAP,SAAoB/zB,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,KAGnB,MAAOA,GAGDi3C,GAAAlqD,UAAAknC,gBAAP,SAAuBihB,EAAiBl1C,GAAA,GAAAA,QAAA,GAAoB,CAApBA,EAAA,KAGvC,MAAOA,GASDi3C,GAAAlqD,UAAA+tC,aAAP,SAAoB2Z,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/B,GAAID,YAAkB3e,GAAAxuC,QAAgB,CACrCuD,KAAKgqD,cAAchqD,KAAKssD,WACxBtsD,MAAKssD,WAA8B1C,MAC7B,IAAIA,EAAQ,CAClB,GAAIlvD,GAAW,CACf,IAAIoiC,GAAW,CACf,IAAI9xB,GAAe,CACnB,IAAI6gD,GAAyB,GAAItc,cAAaqa,EAAO3uD,OAAO,EAC5D,IAAI++C,GAAsB,GAAI0S,aAAY9C,EAAO3uD,OAEjD,OAAOP,EAAIkvD,EAAO3uD,OAAQ,CACzB,GAAI+P,EAAM,EAAI,EAAG,CAChB6gD,EAAU7gD,GAAS4+C,EAAOlvD,EAAI,EAC9BmxD,GAAU7gD,EAAQ,GAAK4+C,EAAOlvD,EAAI,EAClCmxD,GAAU7gD,EAAQ,GAAK4+C,EAAOlvD,EAAI,EAClCmxD,GAAU7gD,EAAQ,GAAK4+C,EAAOlvD,EAC9BmxD,GAAU7gD,EAAQ,GAAK4+C,EAAOlvD,EAAI,EAClCmxD,GAAU7gD,EAAQ,GAAK4+C,EAAOlvD,EAAI,OAC5B,CACNmxD,EAAU7gD,GAAS4+C,EAAOlvD,EAC1BmxD,GAAU7gD,EAAQ,GAAK4+C,EAAOlvD,EAAI,EAClCmxD,GAAU7gD,EAAQ,GAAK4+C,EAAOlvD,EAAI,EAClCmxD,GAAU7gD,EAAQ,GAAK4+C,EAAOlvD,EAAI,EAClCmxD,GAAU7gD,EAAQ,GAAK4+C,EAAOlvD,EAAI,EAClCmxD,GAAU7gD,EAAQ,GAAK4+C,EAAOlvD,EAAI,GAGnCsQ,GAAS,CAET,MAAM8xB,GAAK,EAAG,CACb,GAAIviC,GAAWyQ,EAAM,EAAI,CACzBgvC,GAAQz2C,KAAKhJ,EAAGA,EAAI,EAAGA,EAAI,EAAGA,EAAI,EAAGA,EAAI,EAAGA,EAAI,GAAIG,EACpDoiC,GAAI,CACJpiC,IAAK,GAIPsF,KAAKssD,WAAW/oD,IAAIsoD,EAAWhC,EAAO,EAEtC7pD,MAAK2pD,WAAW3P,EAAS6P,OACnB,CACN7pD,KAAKgqD,cAAchqD,KAAKssD,WACxBtsD,MAAKssD,WAAa,GAAIrhB,GAAAxuC,QAAe8yC,aAAc,EAAGvvC,KAAKupD,qBAG5DvpD,KAAKqsD,aAAersD,KAAKssD,WAAWjjB,KAEpCrpC,MAAKiqD,mBAAmBjqD,KAAKssD,WAE7BtsD,MAAKqpD,eAAerpD,KAAKssD,WAAWjpD,IAAM,MASpC+oD,GAAAlqD,UAAAyqD,aAAP,SAAoB/C,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/B,GAAID,YAAkBsC,GAAAzvD,QAAkB,CACvCuD,KAAKusD,WAAgC3C,MAC/B,IAAIA,EAAQ,CAClB,IAAK5pD,KAAKusD,WACTvsD,KAAKusD,WAAa,GAAIL,GAAAzvD,QAAiBuD,KAAKupD,oBAE7C,IAAI7uD,GAAW,CACf,IAAIoiC,GAAW,CACf,IAAI9xB,GAAe,CACnB,IAAI20B,GAAyB,GAAI4P,cAAaqa,EAAO3uD,OAAO,EAE5D,OAAOP,EAAIkvD,EAAO3uD,OAAQ,CACzB0kC,EAAU30B,GAAU0O,KAAKkzC,MAAM,GAAI5hD,EAAQ,IAAO,GAAK4+C,EAAOlvD,GAAKkvD,EAAOlvD,EAE1E,MAAMoiC,GAAK,EAAG,CACbA,EAAI,CACJpiC,KAGDsQ,IAGDhL,KAAKusD,WAAWhpD,IAAIo8B,EAAWkqB,EAAO,OAChC,IAAI7pD,KAAKusD,WAAY,CAC3BvsD,KAAKusD,WAAW9oD,SAChBzD,MAAKusD,WAAa,KAGnBvsD,KAAKiqD,mBAAmBjqD,KAAKusD,WAE7BvsD,MAAKqpD,eAAerpD,KAAKusD,WAAWlpD,IAAM,MAUpC+oD,GAAAlqD,UAAAuqD,UAAP,SAAiB7C,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE5B,GAAID,EAAQ,CACX,GAAIA,GAAU5pD,KAAKwsD,QAClB,MAED,IAAI5C,YAAkBze,GAAA1uC,QAAiB,CACtCuD,KAAKgqD,cAAchqD,KAAKwsD,QACxBxsD,MAAKwsD,QAA4B5C,MAC3B,CACN,IAAK5pD,KAAKwsD,QACTxsD,KAAKwsD,QAAU,GAAIrhB,GAAA1uC,QAAgBuD,KAAKupD,oBAGzC,IAAI7uD,GAAW,CACf,IAAIoiC,GAAW,CACf,IAAI9xB,GAAe,CACnB,IAAIstC,GAAoB,GAAIuU,YAAWjD,EAAO3uD,OAAO,EAErD,OAAOP,EAAIkvD,EAAO3uD,OAAQ,CACzB,GAAI+P,EAAM,EAAI,EAAG,CAChBstC,EAAOttC,GAAS4+C,EAAOlvD,EAAI,EAC3B49C,GAAOttC,EAAQ,GAAK4+C,EAAOlvD,EAAI,EAC/B49C,GAAOttC,EAAQ,GAAK4+C,EAAOlvD,EAAI,EAC/B49C,GAAOttC,EAAQ,GAAK4+C,EAAOlvD,EAAI,OACzB,CACN49C,EAAOttC,GAAS4+C,EAAOlvD,EACvB49C,GAAOttC,EAAQ,GAAK4+C,EAAOlvD,EAAI,EAC/B49C,GAAOttC,EAAQ,GAAK4+C,EAAOlvD,EAAI,EAC/B49C,GAAOttC,EAAQ,GAAK4+C,EAAOlvD,EAAI,GAIhC,KAAMoiC,GAAK,EAAG,CACbA,EAAI,CACJpiC,IAAK,EAGNsQ,GAAS,EAGVhL,KAAKwsD,QAAQjpD,IAAI+0C,EAAQuR,EAAO,QAE3B,CAEN7pD,KAAKwsD,QAAU7B,EAAAluD,QAAcqwD,eAAe9sD,KAAKg6C,QAASh6C,KAAKwsD,QAASxsD,KAAKupD,oBAAqBvpD,KAAKqsD,cAGxGrsD,KAAKiqD,mBAAmBjqD,KAAKwsD,QAE7BxsD,MAAKqpD,eAAerpD,KAAKwsD,QAAQnpD,IAAM,MAMjC+oD,GAAAlqD,UAAAuB,QAAP,WAEC+E,EAAAtG,UAAMuB,QAAOzI,KAAAgF,KAEbA,MAAKssD,WAAW7oD,SAChBzD,MAAKssD,WAAa,IAElBtsD,MAAKusD,WAAW9oD,SAChBzD,MAAKusD,WAAa,IAElBvsD,MAAKwsD,QAAQ/oD,SACbzD,MAAKwsD,QAAU,KAOTJ,GAAAlqD,UAAAuN,MAAP,WAEC,GAAIA,GAAqB,GAAI28C,GAAapsD,KAAKupD,oBAAqBvpD,KAAKupD,oBAAoB95C,QAAU,KAEvGA,GAAMk6C,WAAW3pD,KAAKg6C,QAAQvqC,QAE9BA,GAAMwgC,aAAajwC,KAAKssD,WAAW78C,QACnCA,GAAMk9C,aAAa3sD,KAAKusD,WAAW98C,QACnCA,GAAMg9C,UAAUzsD,KAAKwsD,QAAQ/8C,QAE7B,OAAOA,GAGD28C,GAAAlqD,UAAA4mB,gBAAP,SAAuBE,EAAkCvB,EAAuBsB,GAE/E,MAAOC,GAAgB+jC,kBAAkB/sD,KAAMynB,EAAUsB,GA/Q5CqjC,GAAA1jD,UAAmB,sBAiRlC,OAAA0jD,IAnR2BD,EAAA1vD,QAqR3BuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M5E+9YAzI,GAAQ0B,Q4E/9YO2vD,I5Ei+YZvZ,4CAA4CvrC,UAAUwrC,6CAA6CxrC,UAAU0lD,8CAA8C1lD,UAAUyhD,2CAA2C,2CAA2CgD,yCAAyC,2CAA2C7Y,gDAAgD,SAASj5C,EAAQkB,EAAOJ,GAC1Z,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,I6E5wZnF,IAAA8iC,GAAAhxC,EAA8B,4CAE9B,IAAAo9C,GAAAp9C,EAAgC,8CAChC,IAAAixC,GAAAjxC,EAAgC,8CAQhC,IAAAkyD,GAAAlyD,EAA6B,2CAE7B,IAAA0wD,GAAA1wD,EAA6B,yCAO7B,IAAAgzD,GAAA,SAAAzkD,GAA+BV,EAAAmlD,EAAAzkD,EAA/B,SAAAykD,KAA+BzkD,EAAA0kD,MAAAltD,KAAA2wB,UAItB3wB,MAAAqsD,aAAsB,CACtBrsD,MAAAmtD,kBAA4B,IAC5BntD,MAAAotD,mBAA6B,IAc7BptD,MAAAqtD,mBAA6B,IAC7BrtD,MAAAstD,oBAA8B,IAM/BttD,MAAAutD,MAA6B,GAAI5sD,MACjCX,MAAAwtD,oBAA8B,EAGrCxrD,OAAAC,eAAWgrD,EAAA/qD,UAAA,a7EivZJC,I6EjvZP,WAEC,MAAO8qD,GAAiBvkD,W7EkvZlBrG,WAAY,KACZC,aAAc,M6E/uZrBN,QAAAC,eAAWgrD,EAAA/qD,UAAA,e7EkvZJC,I6ElvZP,WAEC,MAAOnC,MAAKqsD,c7EmvZNhqD,WAAY,KACZC,aAAc,M6E5uZrBN,QAAAC,eAAWgrD,EAAA/qD,UAAA,uB7EovZJC,I6EpvZP,WAEC,MAAOnC,MAAKytD,sB7EqvZNlqD,I6ElvZP,SAA+BC,GAE9B,GAAIxD,KAAKytD,sBAAwBjqD,EAChC,MAEDxD,MAAKytD,qBAAuBjqD,G7EkvZtBnB,WAAY,KACZC,aAAc,M6E7uZrBN,QAAAC,eAAWgrD,EAAA/qD,UAAA,mB7EmvZJC,I6EnvZP,WAEC,MAAOnC,MAAK0tD,kB7EovZNnqD,I6EjvZP,SAA2BC,GAE1B,GAAIxD,KAAK0tD,kBAAoBlqD,EAC5B,MAEDxD,MAAK0tD,iBAAmBlqD,CAExB,IAAIxD,KAAK2tD,cACR3tD,KAAK2tD,cAAcC,WAAa5tD,KAAK0tD,gBAEtC,IAAI1tD,KAAK6tD,cACR7tD,KAAK6tD,cAAcD,WAAa5tD,KAAK0tD,kB7E+uZhCrrD,WAAY,KACZC,aAAc,M6EzuZrBN,QAAAC,eAAWgrD,EAAA/qD,UAAA,qB7EgvZJC,I6EhvZP,WAEC,MAAOnC,MAAKqtD,oB7EivZN9pD,I6E9uZP,SAA6BC,GAE5B,GAAIxD,KAAKqtD,oBAAsB7pD,EAC9B,MAEDxD,MAAKqtD,mBAAqB7pD,G7E8uZpBnB,WAAY,KACZC,aAAc,M6ExuZrBN,QAAAC,eAAWgrD,EAAA/qD,UAAA,sB7E+uZJC,I6E/uZP,WAEC,MAAOnC,MAAKstD,qB7EgvZN/pD,I6E7uZP,SAA8BC,GAE7B,GAAIxD,KAAKstD,qBAAuB9pD,EAC/B,MAEDxD,MAAKstD,oBAAsB9pD,G7E6uZrBnB,WAAY,KACZC,aAAc,M6ExuZrBN,QAAAC,eAAWgrD,EAAA/qD,UAAA,a7E8uZJC,I6E9uZP,WAEC,IAAKnC,KAAKssD,WACTtsD,KAAKiwC,aAAa,GAAIoH,GAAA56C,QAAiBuD,KAAKupD,qBAE7C,OAAOvpD,MAAKssD,Y7E8uZNjqD,WAAY,KACZC,aAAc,M6EzuZrBN,QAAAC,eAAWgrD,EAAA/qD,UAAA,W7E+uZJC,I6E/uZP,WAEC,IAAKnC,KAAK8tD,UAAY9tD,KAAKqpD,eAAerpD,KAAK8tD,SAASzqD,IACvDrD,KAAK+tD,WAAW/tD,KAAK8tD,SAEtB,OAAO9tD,MAAK8tD,U7E+uZNzrD,WAAY,KACZC,aAAc,M6E1uZrBN,QAAAC,eAAWgrD,EAAA/qD,UAAA,Y7EgvZJC,I6EhvZP,WAEC,IAAKnC,KAAKguD,WAAahuD,KAAKqpD,eAAerpD,KAAKguD,UAAU3qD,IACzDrD,KAAKiuD,YAAYjuD,KAAKguD,UAEvB,OAAOhuD,MAAKguD,W7EgvZN3rD,WAAY,KACZC,aAAc,M6E3uZrBN,QAAAC,eAAWgrD,EAAA/qD,UAAA,e7EivZJC,I6EjvZP,WAEC,GAAInC,KAAKmtD,kBACRntD,KAAKkuD,mBAEN,OAAOluD,MAAKmuD,c7EivZN9rD,WAAY,KACZC,aAAc,M6E5uZrBN,QAAAC,eAAWgrD,EAAA/qD,UAAA,gB7EkvZJC,I6ElvZP,WAEC,GAAInC,KAAKotD,mBACRptD,KAAKouD,oBAEN,OAAOpuD,MAAKquD,e7EkvZNhsD,WAAY,KACZC,aAAc,M6E7uZrBN,QAAAC,eAAWgrD,EAAA/qD,UAAA,O7EmvZJC,I6EnvZP,WAEC,MAAOnC,MAAKsuD,M7EovZNjsD,WAAY,KACZC,aAAc,M6E/uZrBN,QAAAC,eAAWgrD,EAAA/qD,UAAA,gB7EqvZJC,I6ErvZP,WAEC,MAAOnC,MAAK2tD,e7EsvZNtrD,WAAY,KACZC,aAAc,M6EjvZrBN,QAAAC,eAAWgrD,EAAA/qD,UAAA;A7EuvZJC,I6EvvZP,WAEC,MAAOnC,MAAK6tD,e7EwvZNxrD,WAAY,KACZC,aAAc,M6EtvZrBN,QAAAC,eAAWgrD,EAAA/qD,UAAA,wB7EyvZJC,I6EzvZP,WAEC,MAAOnC,MAAKuuD,uB7E0vZNlsD,WAAY,KACZC,aAAc,M6ExvZd2qD,GAAA/qD,UAAAgnC,aAAP,SAAoB/zB,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,KAEnB,MAAOw1C,GAAAluD,QAAc+xD,6BAA6BxuD,KAAK6rD,UAAW12C,EAAQnV,KAAKqsD,cAGzEY,GAAA/qD,UAAAknC,gBAAP,SAAuBihB,EAAiBl1C,GAAA,GAAAA,QAAA,GAAoB,CAApBA,EAAA,KAEvC,MAAOw1C,GAAAluD,QAAcgyD,gCAAgCzuD,KAAK6rD,UAAWxB,EAAQl1C,EAAQnV,KAAKqsD,cAGpFY,GAAA/qD,UAAA0wB,aAAP,SAAoB/vB,EAAUE,EAAU2U,GAEvC,MAAO,MASDu1C,GAAA/qD,UAAA+tC,aAAP,SAAoB2Z,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/B,GAAID,GAAU5pD,KAAKssD,WAClB,MAED,IAAI1C,YAAkB3e,GAAAxuC,QAAgB,CACrCuD,KAAKgqD,cAAchqD,KAAKssD,WACxBtsD,MAAKssD,WAA8B1C,MAC7B,IAAIA,EAAQ,CAClB,IAAK5pD,KAAKssD,WACTtsD,KAAKssD,WAAa,GAAIjV,GAAA56C,QAAiBuD,KAAKupD,oBAE7CvpD,MAAKssD,WAAW/oD,IAAIqmD,EAAQC,OACtB,CACN7pD,KAAKgqD,cAAchqD,KAAKssD,WACxBtsD,MAAKssD,WAAa,GAAIjV,GAAA56C,QAAiBuD,KAAKupD,qBAG7CvpD,KAAKqsD,aAAersD,KAAKssD,WAAWjjB,KAEpC,IAAIrpC,KAAKqtD,mBACRrtD,KAAKiqD,mBAAmBjqD,KAAK8tD,SAE9B,IAAI9tD,KAAKstD,oBACRttD,KAAKiqD,mBAAmBjqD,KAAKguD,UAE9BhuD,MAAKiqD,mBAAmBjqD,KAAKssD,WAE7BtsD,MAAKqpD,eAAerpD,KAAKssD,WAAWjpD,IAAM,MASpC4pD,GAAA/qD,UAAA6rD,WAAP,SAAkBnE,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE7B,IAAK7pD,KAAKqtD,mBAAoB,CAC7B,GAAIzD,GAAU5pD,KAAK8tD,SAClB,MAED,IAAIlE,YAAkBvS,GAAA56C,QAAkB,CACvCuD,KAAKgqD,cAAchqD,KAAK8tD,SACxB9tD,MAAK8tD,SAA8BlE,MAC7B,IAAIA,EAAQ,CAClB,IAAK5pD,KAAK8tD,SACT9tD,KAAK8tD,SAAW,GAAIzW,GAAA56C,QAAiBuD,KAAKupD,oBAE3CvpD,MAAK8tD,SAASvqD,IAAIqmD,EAAQC,OACpB,IAAI7pD,KAAK8tD,SAAU,CACzB9tD,KAAKgqD,cAAchqD,KAAK8tD,SACxB9tD,MAAK8tD,SAAW,IAChB,aAEK,CACN9tD,KAAK8tD,SAAWnD,EAAAluD,QAAciyD,gBAAgB1uD,KAAKg6C,QAASh6C,KAAK2uD,YAAa3uD,KAAK8tD,SAAU9tD,KAAKupD,qBAGnGvpD,KAAKiqD,mBAAmBjqD,KAAK8tD,SAE7B9tD,MAAKqpD,eAAerpD,KAAK8tD,SAASzqD,IAAM,MASlC4pD,GAAA/qD,UAAA+rD,YAAP,SAAmBrE,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE9B,IAAK7pD,KAAKstD,oBAAqB,CAC9B,GAAI1D,GAAU5pD,KAAKguD,UAClB,MAED,IAAIpE,YAAkBvS,GAAA56C,QAAkB,CACvCuD,KAAKgqD,cAAchqD,KAAKguD,UACxBhuD,MAAKguD,UAAYpE,MACX,IAAIA,EAAQ,CAClB,IAAK5pD,KAAKguD,UACThuD,KAAKguD,UAAY,GAAI3W,GAAA56C,QAAiBuD,KAAKupD,oBAE5CvpD,MAAKguD,UAAUzqD,IAAIqmD,EAAQC,OACrB,IAAI7pD,KAAKguD,UAAW,CAC1BhuD,KAAKgqD,cAAchqD,KAAKguD,UACxBhuD,MAAKguD,UAAY,IACjB,aAEK,CACNhuD,KAAKguD,UAAYrD,EAAAluD,QAAcmyD,iBAAiB5uD,KAAKg6C,QAASh6C,KAAK6uD,aAAc7uD,KAAK2uD,YAAa3uD,KAAKguD,UAAWhuD,KAAKupD,qBAGzHvpD,KAAKiqD,mBAAmBjqD,KAAKguD,UAE7BhuD,MAAKqpD,eAAerpD,KAAKguD,UAAU3qD,IAAM,MASnC4pD,GAAA/qD,UAAA69C,OAAP,SAAc6J,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEzB,GAAID,GAAU5pD,KAAKsuD,KAClB,MAED,IAAI1E,YAAkB3e,GAAAxuC,QAAgB,CACrCuD,KAAKgqD,cAAchqD,KAAKsuD,KACxBtuD,MAAKsuD,KAAO1E,MACN,IAAIA,EAAQ,CAClB,IAAK5pD,KAAKsuD,KACTtuD,KAAKsuD,KAAO,GAAIpjB,GAAAzuC,QAAiBuD,KAAKupD,oBAEvCvpD,MAAKsuD,KAAK/qD,IAAIqmD,EAAQC,OAChB,IAAI7pD,KAAKsuD,KAAM,CACrBtuD,KAAKgqD,cAAchqD,KAAKsuD,KACxBtuD,MAAKsuD,KAAO,IACZ,QAGDtuD,KAAKiqD,mBAAmBjqD,KAAKsuD,KAE7BtuD,MAAKqpD,eAAerpD,KAAKsuD,KAAKjrD,IAAM,MAS9B4pD,GAAA/qD,UAAA4sD,gBAAP,SAAuBlF,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAElC,GAAID,GAAU5pD,KAAK2tD,cAClB,MAED,IAAI/D,YAAkB3e,GAAAxuC,QAAgB,CACrCuD,KAAKgqD,cAAchqD,KAAK2tD,cACxB3tD,MAAK2tD,cAAgB/D,MACf,IAAIA,EAAQ,CAClB,IAAK5pD,KAAK2tD,cACT3tD,KAAK2tD,cAAgB,GAAI1iB,GAAAxuC,QAAe8yC,aAAcvvC,KAAK0tD,iBAAkB1tD,KAAKupD,oBAEnF,IAAIvpD,KAAKytD,qBAAsB,CAC9B,GAAI/yD,GAAW,CACf,IAAIq0D,EACJ,IAAIC,GAAkB,CACtB,IAAIC,GAAa,GAAIjtD,OAErBhC,MAAKuuD,sBAAwB,GAAI5tD,MAEjC,OAAOjG,EAAIkvD,EAAO3uD,OAAQ,CACzB8zD,EAAWnF,EAAOlvD,EAGlB,IAAIu0D,EAAIF,IAAaznD,UAAW,CAC/B2nD,EAAIF,GAAYC,CAChBhvD,MAAKuuD,sBAAsBS,KAAcD,EAI1CnF,EAAOlvD,KAAOu0D,EAAIF,IAIpB/uD,KAAK2tD,cAAcpqD,IAAIqmD,EAAQC,OAEzB,IAAI7pD,KAAK2tD,cAAe,CAC9B3tD,KAAKgqD,cAAchqD,KAAK2tD,cACxB3tD,MAAK2tD,cAAgB,IACrB,QAGD3tD,KAAKiqD,mBAAmBjqD,KAAK2tD,cAE7B3tD,MAAKqpD,eAAerpD,KAAK2tD,cAActqD,IAAM,MASvC4pD,GAAA/qD,UAAAgtD,gBAAP,SAAuBtF,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAElC,GAAID,GAAU5pD,KAAK6tD,cAClB,MAED,IAAIjE,YAAkB3e,GAAAxuC,QAAgB,CACrCuD,KAAKgqD,cAAchqD,KAAK6tD,cACxB7tD,MAAK6tD,cAAgBjE,MACf,IAAIA,EAAQ,CAClB,IAAK5pD,KAAK6tD,cACT7tD,KAAK6tD,cAAgB,GAAI5iB,GAAAxuC,QAAe8yC,aAAcvvC,KAAK0tD,iBAAkB1tD,KAAKupD,oBAEnFvpD,MAAK6tD,cAActqD,IAAIqmD,EAAQC,OAEzB,IAAI7pD,KAAK6tD,cAAe,CAC9B7tD,KAAKgqD,cAAchqD,KAAK6tD,cACxB7tD,MAAK6tD,cAAgB,IACrB,QAGD7tD,KAAKiqD,mBAAmBjqD,KAAK6tD,cAE7B7tD,MAAKqpD,eAAerpD,KAAK6tD,cAAcxqD,IAAM,MAMvC4pD,GAAA/qD,UAAAuB,QAAP,WAEC+E,EAAAtG,UAAMuB,QAAOzI,KAAAgF,KAEb,IAAIA,KAAKssD,WAAY,CACpBtsD,KAAKssD,WAAW7oD,SAChBzD,MAAKssD,WAAa,KAGnB,GAAItsD,KAAK8tD,SAAU,CAClB9tD,KAAK8tD,SAASrqD,SACdzD,MAAK8tD,SAAW,KAGjB,GAAI9tD,KAAKguD,UAAW,CACnBhuD,KAAKguD,UAAUvqD,SACfzD,MAAKguD,UAAY,KAGlB,GAAIhuD,KAAKsuD,KAAM,CACdtuD,KAAKsuD,KAAK7qD,SACVzD,MAAKsuD,KAAO,KAGb,GAAItuD,KAAK2tD,cAAe,CACvB3tD,KAAK2tD,cAAclqD,SACnBzD,MAAK2tD,cAAgB,KAGtB,GAAI3tD,KAAK6tD,cAAe,CACvB7tD,KAAK6tD,cAAcpqD,SACnBzD,MAAK6tD,cAAgB,KAGtB,GAAI7tD,KAAKmuD,aAAc,CACtBnuD,KAAKmuD,aAAa1qD,SAClBzD,MAAKmuD,aAAe,KAGrB,GAAInuD,KAAKquD,cAAe,CACvBruD,KAAKquD,cAAc5qD,SACnBzD,MAAKquD,cAAgB,MAYhBpB,GAAA/qD,UAAAynD,WAAP,SAAkBC,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE7BrhD,EAAAtG,UAAMynD,WAAU3uD,KAAAgF,KAAC4pD,EAAQC,EAEzB7pD,MAAKmtD,kBAAoB,IACzBntD,MAAKotD,mBAAqB,IAE1B,IAAIptD,KAAKqtD,mBACRrtD,KAAKiqD,mBAAmBjqD,KAAK8tD,SAE9B,IAAI9tD,KAAKstD,oBACRttD,KAAKiqD,mBAAmBjqD,KAAKguD,WAGxBf,GAAA/qD,UAAA2uB,OAAP,SAAc1W,GAEb3R,EAAAtG,UAAM2uB,OAAM71B,KAAAgF,KAACma,EAGbA,GAASg1C,kBAAoB,KAC7Bh1C,GAASi1C,mBAAqB,KAE9Bj1C,GAAS81B,aAAajwC,KAAK6rD,UAAUp8C,QAErC,IAAIzP,KAAKqvD,QACRl1C,EAAS4zC,WAAW/tD,KAAKqvD,QAAQ5/C,QAElC,IAAIzP,KAAKsvD,SACRn1C,EAAS8zC,YAAYjuD,KAAKsvD,SAAS7/C,QAEpC,IAAIzP,KAAKuvD,IACRp1C,EAAS4lC,OAAO//C,KAAKuvD,IAAI9/C,QAE1B0K,GAASq1C,gBAAkBxvD,KAAK0tD,gBAEhC,IAAI1tD,KAAKyvD,aACRt1C,EAAS20C,gBAAgB9uD,KAAKyvD,aAAahgD,QAE5C,IAAIzP,KAAK0vD,aACRv1C,EAAS+0C,gBAAgBlvD,KAAK0vD,aAAajgD,QAG5C0K,GAASg1C,kBAAoBnvD,KAAKqtD,kBAClClzC,GAASi1C,mBAAqBpvD,KAAKstD,oBAO7BL,GAAA/qD,UAAAuN,MAAP,WAEC,GAAIA,GAAyB,GAAIw9C,GAAiBjtD,KAAKupD,oBAAqBvpD,KAAKupD,oBAAoB95C,QAAU,KAE/GzP,MAAK6wB,OAAOphB,EAEZ,OAAOA,GAGDw9C,GAAA/qD,UAAAgoD,QAAP,SAAeC,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAEjC,GAAIpqD,KAAKuvD,IACR5E,EAAAluD,QAAckzD,SAASxF,EAAQC,EAAQpqD,KAAKuvD,IAAKvvD,KAAKqsD,cAOjDY,GAAA/qD,UAAAm0B,MAAP,SAAaA,GAEZs0B,EAAAluD,QAAc45B,MAAMA,EAAOr2B,KAAK6rD,UAAW7rD,KAAKqsD,cAG1CY,GAAA/qD,UAAA4mC,oBAAP,SAA2Bx3B,GAE1Bq5C,EAAAluD,QAAcqsC,oBAAoBx3B,EAAWtR,KAAK6rD,UAAW7rD,KAAKqvD,QAASrvD,KAAKsvD,SAAUtvD,KAAKqsD,cAMxFY,GAAA/qD,UAAAksD,mBAAR,WAECpuD,KAAKquD,cAAgB1D,EAAAluD,QAAcmzD,qBAAqB5vD,KAAKg6C,QAASh6C,KAAK6rD,UAAW7rD,KAAKuvD,KAAOvvD,KAAK6rD,UAAW7rD,KAAKquD,cAAeruD,KAAK6vD,YAE3I7vD,MAAKotD,mBAAqB,MAMnBH,GAAA/qD,UAAAgsD,kBAAR,WAECluD,KAAKmuD,aAAexD,EAAAluD,QAAcqzD,oBAAoB9vD,KAAKg6C,QAASh6C,KAAK6rD,UAAW7rD,KAAKmuD,aAAcnuD,KAAK6vD,YAE5G7vD,MAAKmtD,kBAAoB,MAGnBF,GAAA/qD,UAAA4mB,gBAAP,SAAuBE,EAAkCvB,EAAuBsB,GAE/E,MAAOC,GAAgB+mC,sBAAsB/vD,KAAMynB,EAAUsB,GA7kBhDkkC,GAAAvkD,UAAmB,0BA+kBlC,OAAAukD,IAjlB+Bd,EAAA1vD,QAmlB/BuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M7E0oZAzI,GAAQ0B,Q6E1oZOwwD,I7E4oZZpa,4CAA4CvrC,UAAUyrC,8CAA8CzrC,UAAU86C,8CAA8C96C,UAAUyhD,2CAA2C,2CAA2CgD,yCAAyC,2CAA2CvtD,+BAA+B,SAASvE,EAAQkB,EAAOJ,GAC1Y,Y8ErvaA,IAAAoxD,GAAAlyD,EAA0C,2CAAlCc,GAAAkuD,aAAAkD,EAAA1vD,OACR,IAAAwe,GAAAhhB,EAA0C,2CAAlCc,GAAAyvD,aAAAvvC,EAAAxe,OACR,IAAAiuD,GAAAzwD,EAAuC,sCAA/Bc,GAAAixD,QAAAtB,EAAAjuD,OACR,IAAA2rC,GAAAnuC,EAAuC,uCAA/Bc,GAAAw8C,SAAAnP,EAAA3rC,OACR,IAAAuzD,GAAA/1D,EAA0C,2CAAlCc,GAAAqxD,aAAA4D,EAAAvzD,OACR,IAAA8uC,GAAAtxC,EAA6C,+CAArCc,GAAAkyD,iBAAA1hB,EAAA9uC,U9E8vaLssD,2CAA2C,2CAA2CzpC,2CAA2C,2CAA2CwsC,sCAAsC,sCAAsCtiB,uCAAuC,uCAAuCyiB,2CAA2C,2CAA2C/Y,+CAA+C,iDAAiDhpB,sDAAsD,SAASjwB,EAAQkB,EAAOJ,GAC7kB,Y+EpwaA,IAAAswC,GAAApxC,EAA0B,kCAC1B,IAAAg2D,GAAAh2D,EAA6B,sCAC7B,IAAAi2D,GAAAj2D,EAA+B,wCAG/B,IAAA+1D,GAAA/1D,EAA6B,2CAC7B,IAAA25C,GAAA35C,EAAwB,oCAExB,IAAAk2D,GAAAl2D,EAA6B,6CAC7B,IAAAm2D,GAAAn2D,EAA+B,8CAC/B,IAAA0vC,GAAA1vC,EAAgC,gDAEhC,IAAAywD,GAAAzwD,EAAyB,sCAEzB,IAAAo2D,GAAA,WAAA,QAAAA,MAWeA,EAAArQ,mBAAd,SAAiCuG,GAAA,GAAAA,QAAA,GAA6B,CAA7BA,EAAA,KAEhC,GAAIA,GAAc,MAAQA,EAAWphB,QAAQulB,EAAAjuD,UAAuB8pD,EAAYpsC,SAASgrB,QAAQ6qB,EAAAvzD,SAAe,CAC/G,IAAK4zD,EAAuBC,sBAC3BD,EAAuBE,4BAExB,OAAOF,GAAuBC,sBAG/B,GAAI/J,GAAc,MAAQA,EAAWphB,QAAQyO,EAAAn3C,SAAS,CACrD,IAAK4zD,EAAuBG,4BAC3BH,EAAuBI,kCAExB,OAAOJ,GAAuBG,4BAG/B,IAAKH,EAAuBK,wBAC3BL,EAAuBM,8BAExB,OAAON,GAAuBK,wBAGjBL,GAAAO,kBAAd,SAAgCrK,GAAA,GAAAA,QAAA,GAA6B,CAA7BA,EAAA,KAE/B,GAAIA,GAAc,MAAQA,EAAWphB,QAAQyO,EAAAn3C,SAAS,CACrD,IAAK4zD,EAAuBQ,oBAC3BR,EAAuBS,0BAExB,OAAOT,GAAuBQ,oBAG/B,IAAKR,EAAuBU,gBAC3BV,EAAuBW,sBAExB,OAAOX,GAAuBU,gBAGjBV,GAAAY,kBAAd,WAEC,IAAKZ,EAAuBa,sBAC3Bb,EAAuBc,sBAExB,OAAOd,GAAuBa,sBAGjBb,GAAAe,oBAAd,WAEC,IAAKf,EAAuBgB,wBAC3BhB,EAAuBiB,wBAExB,OAAOjB,GAAuBgB,wBAGjBhB,GAAA/mC,kBAAd,WAEC,IAAK+mC,EAAuBkB,kBAC3BlB,EAAuBmB,wBAExB,OAAOnB,GAAuBkB,kBAGhBlB,GAAAW,qBAAf,WAECX,EAAuBU,gBAAkB,GAAIX,GAAA3zD,OAC7C4zD,GAAuBU,gBAAgBrhD,KAAO,iBAGhC2gD,GAAAS,yBAAf,WAECT,EAAuBQ,oBAAsB,GAAIlnB,GAAAltC,OACjD4zD,GAAuBQ,oBAAoBnhD,KAAO,qBAGpC2gD,GAAAiB,uBAAf,WAEC,IAAKjB,EAAuBa,sBAC3Bb,EAAuBc,sBAExB,IAAInpD,GAAI,GAAIkoD,GAAAzzD,QAAgB4zD,EAAuBa,sBAAsBhtD,MAEzE,KAAK,GAAIxJ,GAAW,EAAGA,EAAI,EAAGA,IAC7BsN,EAAEtM,KAAKhB,EAAG21D,EAAuBa,sBAElCb,GAAuBgB,wBAA0BrpD,EAGnCqoD,GAAAc,qBAAf,WAEC,GAAInpD,GAAkB,GAAIioD,GAAAxzD,QAAc,EAAG,EAAG,MAAO,EAGrD,IAAI/B,GAAUoiC,CACd,KAAKpiC,EAAI,EAAGA,EAAI,EAAGA,IAClB,IAAKoiC,EAAI,EAAGA,EAAI,EAAGA,IAClB,GAAKA,EAAI,EAAMpiC,EAAI,EAClBsN,EAAEypD,SAAS/2D,EAAGoiC,EAAG,SAEpBuzB,GAAuBa,sBAAwBlpD,EAGjCqoD,GAAAM,6BAAf,WAEC,IAAKN,EAAuBU,gBAC3BV,EAAuBW,sBAExBX,GAAuBK,wBAA0B,GAAIP,GAAA1zD,OACrD4zD,GAAuBK,wBAAwB3lD,QAAUslD,EAAuBU,eAChFV,GAAuBK,wBAAwBhhD,KAAO,yBAGxC2gD,GAAAI,iCAAf,WAEC,IAAKJ,EAAuBQ,oBAC3BR,EAAuBS,0BAExBT,GAAuBG,4BAA8B,GAAIL,GAAA1zD,OACzD4zD,GAAuBG,4BAA4BzlD,QAAUslD,EAAuBQ,mBACpFR,GAAuBG,4BAA4B9gD,KAAO,6BAG5C2gD,GAAAE,2BAAf,WAECF,EAAuBC,sBAAwB,GAAIH,GAAA1zD,QAAc,SACjE4zD,GAAuBC,sBAAsB5gD,KAAO,uBAGtC2gD,GAAAmB,uBAAf,WAECnB,EAAuBkB,kBAAoB,GAAIlmB,GAAA5uC,QAGjD,OAAA4zD,KAEAruD,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M/E+saAzI,GAAQ0B,Q+E/saO4zD,I/EitaZqB,sCAAsCpqD,UAAUqqD,wCAAwCrqD,UAAU2rC,kCAAkC3rC,UAAUmiC,oCAAoC,oCAAoCqiB,sCAAsC,sCAAsCG,2CAA2C,2CAA2C2F,6CAA6C,6CAA6CC,8CAA8C,8CAA8C/mB,gDAAgD,kDAAkDp1B,kDAAkD,SAASzb,EAAQkB,EAAOJ,GAC7tB,YgF72aA,IAAA+2D,GAAA,WAAA,QAAAA,MAwBeA,EAAAC,YAAd,SAA0BC,GAEzBhyD,KAAKiyD,aACLjyD,MAAKkyD,kBAAkBlyD,KAAKiyD,aAAaD,CACzC,OAAOhyD,MAAKiyD,YAGCH,GAAAK,cAAd,SAA4B9uD,SAEpBrD,MAAKkyD,kBAAkB7uD,GAGjByuD,GAAA7rB,kBAAd,WAEC,IAAI,GAAIp0B,KAAO7R,MAAKkyD,kBAAkB,CACrClyD,KAAKkyD,kBAAkBrgD,GAAK7W,QAIhB82D,GAAArrB,qBAAd,SAAmCt1B,GAElCnR,KAAKoyD,gBAAgBhvD,KAAK+N,GAGb2gD,GAAA5iD,oBAAd,SAAkCmjD,EAAcC,GAG/C,GAAI53D,GAAEsF,KAAKuyD,kBAAkBt3D,MAC7B,OAAMP,IAAI,CACTsF,KAAKwyD,YAAYpvD,KAAKpD,KAAKuyD,kBAAkB73D,GAC7CsF,MAAKyyD,gBAAgBrvD,KAAKpD,KAAK0yD,sBAAsBh4D,IAEtDsF,KAAKuyD,kBAAkBt3D,OAAS,CAChC+E,MAAK0yD,sBAAsBz3D,OAAS,CACpC+E,MAAKwyD,YAAYpvD,KAAKivD,EACtBryD,MAAKyyD,gBAAgBrvD,KAAKkvD,GAGbR,GAAA3iD,0BAAd,SAAwCkjD,EAAcC,GAErDtyD,KAAKuyD,kBAAkBnvD,KAAKivD,EAC5BryD,MAAK0yD,sBAAsBtvD,KAAKkvD,GAGnBR,GAAA9rB,cAAd,WAEC,GAAGhmC,KAAKwyD,YAAYv3D,QAAQ,GAAK+E,KAAKuyD,kBAAkBt3D,QAAQ,EAC/D,MAED,IAAIP,GAAEsF,KAAKuyD,kBAAkBt3D,MAC7B,OAAMP,IAAI,CACTsF,KAAKwyD,YAAYpvD,KAAKpD,KAAKuyD,kBAAkB73D,GAC7CsF,MAAKyyD,gBAAgBrvD,KAAKpD,KAAK0yD,sBAAsBh4D,IAEtDsF,KAAKuyD,kBAAkBt3D,OAAS,CAChC+E,MAAK0yD,sBAAsBz3D,OAAS,CAEpC,IAAIo3D,EACJ,KAAK33D,EAAI,EAAGA,EAAGsF,KAAKwyD,YAAYv3D,OAAQP,IAAK,CAE5C23D,EAAGryD,KAAKwyD,YAAY93D,EACpB,IAAG23D,EAAGxyD,OAAO,KAAM,CAClB,GAAI8yD,GAASN,EAAGrjD,QAAUqjD,EAAGrjD,QAAUqjD,CAEvCryD,MAAKyyD,gBAAgB/3D,GAAGM,KAAK23D,IAU/B3yD,KAAKwyD,YAAYv3D,OAAS,CAC1B+E,MAAKyyD,gBAAgBx3D,OAAS,EAGjB62D,GAAA5rB,gBAAd,WAEC,GAAI/iC,GAAanD,KAAKoyD,gBAAgBn3D,MACtC,KAAK,GAAIP,GAAW,EAAGA,EAAIyI,EAAKzI,IAC/BsF,KAAKoyD,gBAAgB13D,GAAG+I,SAEzBzD,MAAKoyD,gBAAgBn3D,OAAS,EApGjB62D,GAAA5jD,iBAA0B5G,SAGzBwqD,GAAAM,gBAAuC,GAAIzxD,MAG3CmxD,GAAAU,cACAV,GAAAW,kBAGAX,GAAAS,oBACAT,GAAAY,wBAEAZ,GAAAI,kBAA2B,GAAIlwD,OAE/B8vD,GAAAG,YAAmB,CAuFnC,OAAAH,KACA9vD,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MhFk1aAzI,GAAQ0B,QgFl1aOq1D,OhFo1aTc,4CAA4C,SAAS34D,EAAQkB,EAAOJ,GAC1E,YiFv8aA,IAAAib,GAAA/b,EAA0B,gCAG1B,IAAAmF,GAAAnF,EAA2B,qCAG3B,IAAA8pC,GAAA9pC,EAA8B,uCAC9B,IAAA8R,GAAA9R,EAAiC,iDAMjC,IAAA44D,GAAA,WAqCC,QAAAA,KArCD,GAAA9yD,GAAAC,IAISA,MAAA8yD,YAA0B,GAAInyD,MAM9BX,MAAA+yD,YAAuB,GAAI/8C,GAAAvZ,OAE3BuD,MAAAwzB,cAAsC,GAAI7yB,MAI1CX,MAAAgzD,SAA0B,GAAIjvB,GAAAtnC,QAAesnC,EAAAtnC,QAAeipC,SAC5D1lC,MAAAizD,YAA6B,GAAIlvB,GAAAtnC,QAAesnC,EAAAtnC,QAAeuqD,MAC/DhnD,MAAAkzD,UAA2B,GAAInvB,GAAAtnC,QAAesnC,EAAAtnC,QAAe+oC,UAC7DxlC,MAAAmzD,WAA4B,GAAIpvB,GAAAtnC,QAAesnC,EAAAtnC,QAAegpC,WAC9DzlC,MAAAozD,WAA4B,GAAIrvB,GAAAtnC,QAAesnC,EAAAtnC,QAAesqD,WAC9D/mD,MAAAqzD,WAA4B,GAAItvB,GAAAtnC,QAAesnC,EAAAtnC,QAAe8oC,WAC9DvlC,MAAAszD,YAA6B,GAAIvvB,GAAAtnC,QAAesnC,EAAAtnC,QAAeyqD,YAC/DlnD,MAAAuzD,kBAAmC,GAAIxvB,GAAAtnC,QAAesnC,EAAAtnC,QAAewqD,aAgB5EjnD,MAAKwzD,gBAAkB,SAAC3yD,GAAqB,MAAAd,GAAK0zD,QAAQ5yD,GAC1Db,MAAK0zD,sBAAwB,SAAC7yD,GAAqB,MAAAd,GAAK4zD,cAAc9yD,GACtEb,MAAK4zD,oBAAsB,SAAC/yD,GAAqB,MAAAd,GAAK8zD,YAAYhzD,GAClEb,MAAK8zD,oBAAsB,SAACjzD,GAAqB,MAAAd,GAAKg0D,YAAYlzD,GAClEb,MAAKg0D,kBAAoB,SAACnzD,GAAqB,MAAAd,GAAKk0D,UAAUpzD,GAC9Db,MAAKk0D,qBAAuB,SAACrzD,GAAqB,MAAAd,GAAKo0D,aAAatzD,GACpEb,MAAKo0D,oBAAsB,SAACvzD,GAAqB,MAAAd,GAAKs0D,YAAYxzD,GAClEb,MAAKs0D,mBAAqB,SAACzzD,GAAqB,MAAAd,GAAKw0D,WAAW1zD,IAGnDgyD,EAAA/wD,YAAd,WAEC,GAAI9B,KAAKw0D,UACR,MAAOx0D,MAAKw0D,SAEb,OAAQx0D,MAAKw0D,UAAY,GAAI3B,GAGvBA,GAAA3wD,UAAA2D,gBAAP,SAAuBN,GAGtB,GAAIvF,KAAK0F,aAAe1F,KAAKy0D,yBAA0B,CACtD,GAAIz0D,KAAKy0D,yBACRz0D,KAAKi7B,cAAcj7B,KAAKkzD,UAAWlzD,KAAK00D,gBAAiB10D,KAAKy0D,yBAE/D,IAAIz0D,KAAK0F,YACR1F,KAAKi7B,cAAcj7B,KAAKqzD,WAAYrzD,KAAK00D,iBAI1C,GAAInvD,GAAkBvF,KAAK0F,YAC3B1F,KAAKi7B,cAAej7B,KAAKozD,WAAYpzD,KAAK00D,gBAE3C,IAAI7zD,EACJ,IAAI8zD,EAGJ,IAAIxxD,GAAanD,KAAKwzB,cAAcv4B,MACpC,KAAK,GAAIP,GAAW,EAAGA,EAAIyI,IAAOzI,EAAG,CACpCmG,EAAQb,KAAKwzB,cAAc94B,EAC3Bi6D,GAA6B9zD,EAAMwa,MAGnC,OAAOs5C,EAAY,CAClB,GAAIA,EAAWn4B,mBACdm4B,EAAWnpD,cAAc3K,EAE1B8zD,GAAaA,EAAWvJ,OAIzBr/C,EAAAtP,QAAmBupC,gBAKpBhmC,KAAKwzB,cAAcv4B,OAAS,CAE5B+E,MAAKy0D,yBAA2Bz0D,KAAK0F,WAErC1F,MAAKyF,cAAgB,MAmBfotD,GAAA3wD,UAAAH,aAAP,SAAoBukD,GAEnB,GAAGA,GAAQA,EAAKsO,YAAa,CAC5BtO,EAAKsO,YAAY/wD,iBAAiB,QAAS7D,KAAKwzD,gBAChDlN,GAAKsO,YAAY/wD,iBAAiB,WAAY7D,KAAK0zD,sBACnDpN,GAAKsO,YAAY/wD,iBAAiB,aAAc7D,KAAK4zD,oBACrDtN,GAAKsO,YAAY/wD,iBAAiB,YAAa7D,KAAK4zD,oBACpDtN,GAAKsO,YAAY/wD,iBAAiB,YAAa7D,KAAK8zD,oBACpDxN,GAAKsO,YAAY/wD,iBAAiB,YAAa7D,KAAK8zD,oBACpDxN,GAAKsO,YAAY/wD,iBAAiB,UAAW7D,KAAKg0D,kBAClD1N,GAAKsO,YAAY/wD,iBAAiB,WAAY7D,KAAKg0D,kBACnD1N,GAAKsO,YAAY/wD,iBAAiB,aAAc7D,KAAKk0D,qBACrD5N,GAAKsO,YAAY/wD,iBAAiB,YAAa7D,KAAKo0D,oBACpD9N,GAAKsO,YAAY/wD,iBAAiB,WAAY7D,KAAKs0D,mBACnDt0D,MAAK8yD,YAAY1vD,KAAKkjD,IAIjBuM,GAAA3wD,UAAA6D,eAAP,SAAsBugD,GAErB,GAAGA,GAAQA,EAAKsO,YAAa,CAC5BtO,EAAKsO,YAAYlxD,oBAAoB,QAAS1D,KAAKwzD,gBACnDlN,GAAKsO,YAAYlxD,oBAAoB,WAAY1D,KAAK0zD,sBACtDpN,GAAKsO,YAAYlxD,oBAAoB,aAAc1D,KAAK4zD,oBACxDtN,GAAKsO,YAAYlxD,oBAAoB,YAAa1D,KAAK4zD,oBACvDtN,GAAKsO,YAAYlxD,oBAAoB,YAAa1D,KAAK8zD,oBACvDxN,GAAKsO,YAAYlxD,oBAAoB,YAAa1D,KAAK8zD,oBACvDxN,GAAKsO,YAAYlxD,oBAAoB,WAAY1D,KAAKg0D,kBACtD1N,GAAKsO,YAAYlxD,oBAAoB,UAAW1D,KAAKg0D,kBACrD1N,GAAKsO,YAAYlxD,oBAAoB,aAAc1D,KAAKk0D,qBACxD5N,GAAKsO,YAAYlxD,oBAAoB,YAAa1D,KAAKo0D,oBACvD9N,GAAKsO,YAAYlxD,oBAAoB,WAAY1D,KAAKs0D,mBAEtDt0D,MAAK8yD,YAAY+B,MAAM70D,KAAK8yD,YAAYrkD,QAAQ63C,GAAO,IAQjDuM,GAAA3wD,UAAA+4B,cAAR,SAAsBp6B,EAAsBi0D,EAAaC,GAAA,GAAAA,QAAA,GAAiC,CAAjCA,EAAA,KAGxD,GAAID,EAAa,CAChBj0D,EAAM+lD,QAAUkO,EAAYlO,OAC5B/lD,GAAMm0D,OAASF,EAAYE,MAC3Bn0D,GAAMgmD,SAAWiO,EAAYjO,QAC7BhmD,GAAMulD,QAAW0O,EAAYG,SAAW,KAAOH,EAAYG,QAAUH,EAAYI,eAAe,GAAGD,OACnGp0D,GAAMwlD,QAAWyO,EAAYK,SAAW,KAAOL,EAAYK,QAAUL,EAAYI,eAAe,GAAGC,QAGpG,GAAIJ,GAAa,KAChBA,EAAY/0D,KAAK0F,WAGlB,IAAIqvD,EAAW,CAEdl0D,EAAMwa,OAAS05C,EAAU15C,MACzBxa,GAAM0lD,WAAawO,EAAUxO,UAE7B1lD,GAAM2lD,GAAKuO,EAAUvO,EAErB3lD,GAAMc,SAAWozD,EAAUpzD,SAAUozD,EAAUpzD,SAAS8N,QAAU,IAElE5O,GAAM4lD,OAASsO,EAAUtO,OAAQsO,EAAUtO,OAAOh3C,QAAU,IAE5D5O,GAAM6lD,aAAeqO,EAAUrO,iBACzB,CAEN7lD,EAAM2lD,GAAK,IACX3lD,GAAMwa,OAAS,IACfxa,GAAMc,SAAW3B,KAAK+yD,WACtBlyD,GAAM4lD,OAASzmD,KAAK+yD,WACpBlyD,GAAM6lD,aAAe,EAItB1mD,KAAKwzB,cAAcpwB,KAAKvC,GAOjBgyD,GAAA3wD,UAAA6xD,YAAR,SAAoBlzD,GAEnBA,EAAMu0D,gBAENp1D,MAAKq1D,gBAAgBx0D,EAErB,IAAIb,KAAK0F,YACR1F,KAAKi7B,cAAcj7B,KAAKozD,WAAYpzD,KAAK00D,gBAAkB7zD,GAGrDgyD,GAAA3wD,UAAAqyD,WAAR,SAAmB1zD,GAElBb,KAAKwF,YAAc,IAEnBxF,MAAKq1D,gBAAgBx0D,EAErB,IAAIb,KAAK0F,YACR1F,KAAKi7B,cAAcj7B,KAAKkzD,UAAWryD,GAG7BgyD,GAAA3wD,UAAAmyD,YAAR,SAAoBxzD,GAEnBb,KAAKwF,YAA+B3E,EAAMsU,MAE1CnV,MAAKq1D,gBAAgBx0D,EAErB,IAAIb,KAAK0F,YACR1F,KAAKi7B,cAAej7B,KAAKqzD,WAAYxyD,GAG/BgyD,GAAA3wD,UAAAuxD,QAAR,SAAgB5yD,GAEfb,KAAKq1D,gBAAgBx0D,EAErB,IAAIb,KAAK0F,YACR1F,KAAKi7B,cAAcj7B,KAAKizD,YAAapyD,GAG/BgyD,GAAA3wD,UAAAyxD,cAAR,SAAsB9yD,GAErBb,KAAKq1D,gBAAgBx0D,EAErB,IAAIb,KAAK0F,YACR1F,KAAKi7B,cAAcj7B,KAAKuzD,kBAAmB1yD,GAGrCgyD,GAAA3wD,UAAA2xD,YAAR,SAAoBhzD,GAEnBA,EAAMu0D,gBAENp1D,MAAKwF,YAA+B3E,EAAMsU,MAE1CnV,MAAKq1D,gBAAgBx0D,EAErB,IAAIb,KAAK0F,YACR1F,KAAKi7B,cAAcj7B,KAAKmzD,WAAYtyD,GAG9BgyD,GAAA3wD,UAAA+xD,UAAR,SAAkBpzD,GAEjBA,EAAMu0D,gBAENp1D,MAAKq1D,gBAAgBx0D,EAErB,IAAIb,KAAK0F,YACR1F,KAAKi7B,cAAcj7B,KAAKgzD,SAAWnyD,GAG7BgyD,GAAA3wD,UAAAiyD,aAAR,SAAqBtzD,GAEpBb,KAAKq1D,gBAAgBx0D,EAErB,IAAIb,KAAK0F,YACR1F,KAAKi7B,cAAcj7B,KAAKszD,YAAazyD,GAI/BgyD,GAAA3wD,UAAAmzD,gBAAR,SAAwBx0D,GAEvB,GAAIylD,EACJ,IAAI/qD,EACJ,IAAI+5D,GAAiBz0D,EAAMo0D,SAAW,KAAOp0D,EAAMo0D,QAAUp0D,EAAMq0D,eAAe,GAAGD,OACrF,IAAIM,GAAiB10D,EAAMs0D,SAAW,KAAOt0D,EAAMs0D,QAAUt0D,EAAMq0D,eAAe,GAAGC,OACrF,IAAIhyD,GAAanD,KAAK8yD,YAAY73D,MAClC,KAAK,GAAIP,GAAW,EAAGA,EAAIyI,EAAKzI,IAAK,CACpC4rD,EAAOtmD,KAAK8yD,YAAYp4D,EACxB4rD,GAAK5lD,cAAczF,OAAS,CAC5BM,GAAS+qD,EAAKsO,YAAYY,uBAE1B,IAAI30D,EAAM40D,QAAS,CAClB,GAAIC,EACJ,IAAIvyD,GAAatC,EAAM40D,QAAQx6D,MAC/B,KAAK,GAAIP,GAAW,EAAGA,EAAIyI,EAAKzI,IAAK,CACpCg7D,EAAQ70D,EAAM40D,QAAQ/6D,EACtB4rD,GAAK5lD,cAAc0C,KAAK,GAAIhE,GAAA3C,QAAWi5D,EAAMT,QAAU15D,EAAOuJ,KAAM4wD,EAAMP,QAAU55D,EAAOwJ,IAAK2wD,EAAMC,cAIxG,GAAI31D,KAAKyF,cACR,QAED,IAAI6vD,EAAS/5D,EAAOuJ,MAAQwwD,EAAS/5D,EAAOw+B,OAASw7B,EAASh6D,EAAOwJ,KAAOwwD,EAASh6D,EAAOm9B,OAAQ,CACnG4tB,EAAKlkD,SAAW,IAChBkkD,GAAK/jD,SAAW,SACV,CACN+jD,EAAKlkD,SAAWkzD,EAAS/5D,EAAOuJ,IAChCwhD,GAAK/jD,SAAWgzD,EAASh6D,EAAOwJ,GAEhCuhD,GAAK7/C,gBAEL,IAAI6/C,EAAK3/C,aAAe3G,KAAK0F,YAC5B,OAIH1F,KAAKyF,cAAgB,KAEvB,OAAAotD,KAEA7wD,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MjF62aAzI,GAAQ0B,QiF72aOo2D,IjF+2aZr4C,gCAAgClT,UAAUqO,qCAAqC,qCAAqCixB,uCAAuC,uCAAuClxB,iDAAiD,mDAAmDkgD,4CAA4C,SAAS37D,EAAQkB,EAAOJ,GAC7W,YkF/rbA,IAAAib,GAAA/b,EAA0B,gCAK1B,IAAA4uD,GAAA5uD,EAA8B,uCAE9B,IAAA47D,GAAA,WA6BC,QAAAA,KA7BD,GAAA91D,GAAAC,IAISA,MAAA81D,aAAuB,IACvB91D,MAAA+yD,YAAuB,GAAI/8C,GAAAvZ,OAO3BuD,MAAAwzB,cAAsC,GAAI7yB,MAO1CX,MAAA+1D,UAA2B,GAAIlN,GAAApsD,QAAeosD,EAAApsD,QAAe+rD,UAC7DxoD,MAAAg2D,YAA6B,GAAInN,GAAApsD,QAAeosD,EAAApsD,QAAe6rD,YAC/DtoD,MAAAi2D,WAA4B,GAAIpN,GAAApsD,QAAeosD,EAAApsD,QAAe8rD,WAC9DvoD,MAAAk2D,UAA2B,GAAIrN,GAAApsD,QAAeosD,EAAApsD,QAAe4rD,UAC7DroD,MAAAm2D,WAA4B,GAAItN,GAAApsD,QAAeosD,EAAApsD,QAAegsD,WAQrEzoD,MAAKo2D,aAAe,GAAIz1D,MACxBX,MAAKq2D,kBAAoB,GAAIr0D,OAC7B6zD,GAAaS,uBAAyB,GAAIt0D,OAC1C6zD,GAAaU,oCAAsC,GAAIv0D,OAEvDhC,MAAKw2D,qBAAuB,SAAC31D,GAAqB,MAAAd,GAAK02D,aAAa51D,GACpEb,MAAK02D,oBAAsB,SAAC71D,GAAqB,MAAAd,GAAK42D,YAAY91D,GAClEb,MAAK42D,mBAAqB,SAAC/1D,GAAqB,MAAAd,GAAK82D,WAAWh2D,IAGnDg1D,EAAA/zD,YAAd,WAEC,GAAI9B,KAAKw0D,UACR,MAAOx0D,MAAKw0D,SAEb,OAAQx0D,MAAKw0D,UAAY,GAAIqB,GAOvBA,GAAA3zD,UAAAuE,eAAP,SAAsBqwD,IAWfjB,GAAA3zD,UAAA60D,gBAAP,SAAuBD,GAEtB,GAAIp8D,EACJ,KAAKA,EAAI,EAAGA,EAAIsF,KAAKg3D,kBAAmBt8D,EAAG,CAC1CsF,KAAKi3D,YAAcj3D,KAAKo2D,aAAa17D,EAErCsF,MAAK0F,YAAcmwD,EAAaS,uBAAwBt2D,KAAKi3D,YAAY5zD,GACzErD,MAAKy0D,yBAA2BoB,EAAaU,oCAAqCv2D,KAAKi3D,YAAY5zD,GACnG,IAAIrD,KAAK0F,aAAe1F,KAAKy0D,yBAA0B,CACtD,GAAIz0D,KAAKy0D,yBACRz0D,KAAKi7B,cAAcj7B,KAAK+1D,UAAW/1D,KAAKk3D,gBAAiBl3D,KAAKy0D,yBAA0Bz0D,KAAKi3D,YAC9F,IAAIj3D,KAAK0F,YACR1F,KAAKi7B,cAAcj7B,KAAKm2D,WAAYn2D,KAAKk3D,gBAAiBl3D,KAAK0F,YAAa1F,KAAKi3D,aAGnF,GAAIH,GAAkB92D,KAAK0F,YAC1B1F,KAAKi7B,cAAcj7B,KAAKi2D,WAAYj2D,KAAKk3D,gBAAiBl3D,KAAK0F,YAAa1F,KAAKi3D,aAGnF,GAAIp2D,EACJ,IAAI8zD,EAGJ,IAAIxxD,GAAanD,KAAKwzB,cAAcv4B,MACpC,KAAKP,EAAI,EAAGA,EAAIyI,IAAOzI,EAAG,CAEzBmG,EAAQb,KAAKwzB,cAAc94B,EAC3Bi6D,GAA6B9zD,EAAMwa,MAEnC,OAAOs5C,IAAeA,EAAWn4B,mBAChCm4B,EAAaA,EAAWvJ,MAEzB,IAAIuJ,EACHA,EAAWnpD,cAAc3K,GAE3Bb,KAAKwzB,cAAcv4B,OAAS,CAE5B+E,MAAK81D,aAAe,KAEpB,KAAKp7D,EAAI,EAAGA,EAAIsF,KAAKg3D,kBAAmBt8D,EAAG,CAC1CsF,KAAKi3D,YAAcj3D,KAAKo2D,aAAc17D,EACtCm7D,GAAaU,oCAAqCv2D,KAAKi3D,YAAY5zD,IAAOwyD,EAAaS,uBAAwBt2D,KAAKi3D,YAAY5zD,KAI3HwyD,GAAA3zD,UAAAH,aAAP,SAAoBukD,GAEnBA,EAAKsO,YAAY/wD,iBAAiB,aAAc7D,KAAKw2D,qBACrDlQ,GAAKsO,YAAY/wD,iBAAiB,YAAa7D,KAAK02D,oBACpDpQ,GAAKsO,YAAY/wD,iBAAiB,WAAY7D,KAAK42D,oBAG7Cf,GAAA3zD,UAAA6D,eAAP,SAAsBugD,GAErBA,EAAKsO,YAAYlxD,oBAAoB,aAAc1D,KAAKw2D,qBACxDlQ,GAAKsO,YAAYlxD,oBAAoB,YAAa1D,KAAK02D,oBACvDpQ,GAAKsO,YAAYlxD,oBAAoB,WAAY1D,KAAK42D,oBAO/Cf,GAAA3zD,UAAA+4B,cAAR,SAAsBp6B,EAAsBi0D,EAAwBqC,EAA2BzB,GAG9F70D,EAAM+lD,QAAUkO,EAAYlO,OAC5B/lD,GAAMm0D,OAASF,EAAYE,MAC3Bn0D,GAAMgmD,SAAWiO,EAAYjO,QAC7BhmD,GAAMulD,QAAUsP,EAAM7yD,CACtBhC,GAAMwlD,QAAUqP,EAAM3yD,CACtBlC,GAAMu2D,aAAe1B,EAAMryD,EAG3B,IAAI8zD,EAAU,CAEbt2D,EAAMwa,OAAS87C,EAAS97C,MACxBxa,GAAM0lD,WAAa4Q,EAAS5Q,UAE5B1lD,GAAM2lD,GAAK2Q,EAAS3Q,EAEpB3lD,GAAMc,SAAWw1D,EAASx1D,SAAUw1D,EAASx1D,SAAS8N,QAAU,IAEhE5O,GAAM4lD,OAAS0Q,EAAS1Q,OAAQ0Q,EAAS1Q,OAAOh3C,QAAU,IAE1D5O,GAAM6lD,aAAeyQ,EAASzQ,iBAExB,CAEN7lD,EAAM2lD,GAAK,IACX3lD,GAAMwa,OAAS,IACfxa,GAAMc,SAAW3B,KAAK+yD,WACtBlyD,GAAM4lD,OAASzmD,KAAK+yD,WACpBlyD,GAAM6lD,aAAe,EAItB1mD,KAAKwzB,cAAcpwB,KAAKvC,GAOjBg1D,GAAA3zD,UAAAu0D,aAAR,SAAqB51D,GAGpB,GAAI60D,GAAmB,GAAI9/C,EAI3B5V,MAAKg3D,iBACLh3D,MAAKo2D,aAAahzD,KAAKsyD,EACvB11D,MAAKq2D,kBAAmBX,EAAMryD,IAAOqyD,CAIrC11D,MAAK0F,YAAcmwD,EAAaS,uBAAwBZ,EAAMryD,GAC9D,IAAIrD,KAAK0F,YACR1F,KAAKi7B,cAAcj7B,KAAKg2D,YAAan1D,EAAOb,KAAK0F,YAAagwD,EAE/D11D,MAAK81D,aAAe,KAGbD,GAAA3zD,UAAAy0D,YAAR,SAAoB91D,IAkBZg1D,GAAA3zD,UAAA20D,WAAR,SAAmBh2D,IAiBpB,OAAAg1D,KAGA7zD,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MlFkobAzI,GAAQ0B,QkFlobOo5D,CAEf,IAAAjgD,GAAA,WAAA,QAAAA,MAKA,MAAAA,QlFkobG4E,gCAAgClT,UAAU6gD,uCAAuC,yCAAyC1pD,+BAA+B,SAASxE,EAAQkB,EAAOJ,GACpL,YmFn3bA,IAAAysB,GAAAvtB,EAAkD,qDAA1Cc,GAAAs1D,uBAAA7oC,EAAA/qB,OACR,IAAAsP,GAAA9R,EAA+C,iDAAvCc,GAAA+2D,mBAAA/lD,EAAAtP,OACR,IAAAkD,GAAA1F,EAA0C,2CAAlCc,GAAA83D,aAAAlzD,EAAAlD,OACR,IAAA46D,GAAAp9D,EAA0C,2CAAlCc,GAAA86D,aAAAwB,EAAA56D,UnF03bLytB,qDAAqD,qDAAqDxU,iDAAiD,iDAAiDk9C,2CAA2C,2CAA2CgD,2CAA2C,6CAA6ChE,8CAA8C,SAAS33D,EAAQkB,EAAOJ,GACnc,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IoFl4bnF,IAAAmvD,GAAAr9D,EAAyB,gCAEzB,IAAAs9D,GAAAt9D,EAA6B,4CAC7B,IAAAm2D,GAAAn2D,EAA+B,8CAO/B,IAAAu9D,GAAA,SAAAhvD,GAA4BV,EAAA0vD,EAAAhvD,EAyB3B,SAAAgvD,GAAYC,EAAuBrf,GAAvB,GAAAqf,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAArf,QAAA,GAAgB,CAAhBA,EAAA,EAElC5vC,EAAAxN,KAAAgF,KAAMy3D,EAAYrf,EAvBRp4C,MAAA03D,eAAyB,KA0B7B,IAAID,YAAsBH,GAAA76D,QACtBuD,KAAK+K,QAAU,GAAIqlD,GAAA3zD,QArB9BuF,OAAAC,eAAWu1D,EAAAt1D,UAAA,apFs4bJC,IoFt4bP,WAEC,MAAOq1D,GAAc9uD,WpFu4bfrG,WAAY,KACZC,aAAc,MoF/2blBN,QAAAC,eAAWu1D,EAAAt1D,UAAA,iBpFq3bPC,IoFr3bJ,WAEI,MAAOnC,MAAK03D,gBpFs3bZn0D,IoFp3bJ,SAAyBC,GAErB,GAAIxD,KAAK03D,gBAAkBl0D,EACvB,MAEJxD,MAAK03D,eAAiBl0D,CAEtBxD,MAAKugB,cpFm3bLle,WAAY,KACZC,aAAc,MoF72blBN,QAAAC,eAAWu1D,EAAAt1D,UAAA,WpFm3bPC,IoFn3bJ,WAEI,MAAOnC,MAAKwqC,UpFo3bZjnC,IoFj3bJ,SAAmBC,GAEf,GAAIxD,KAAKwqC,UAAYhnC,EACjB,MAEJ,IAAIxD,KAAKwqC,SACLxqC,KAAKyqC,cAAczqC,KAAKwqC,SAE5BxqC,MAAKwqC,SAAWhnC,CAEhB,IAAIxD,KAAKwqC,SACLxqC,KAAK0qC,WAAW1qC,KAAKwqC,SAEzBxqC,MAAK23D,qBpF82bLt1D,WAAY,KACZC,aAAc,MoFt7bPk1D,GAAA9uD,UAAmB,2BAyElC,OAAA8uD,IA3E4BD,EAAA96D,QA6E5BuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MpFi3bAzI,GAAQ0B,QoFj3bO+6D,IpFm3bZI,gCAAgCtwD,UAAUuwD,4CAA4C,4CAA4ChG,8CAA8C,gDAAgDiG,6CAA6C,SAAS79D,EAAQkB,EAAOJ,GACxS,YqFh8bA,IAAAg9D,GAAA,WAAA,QAAAA,MAMeA,EAAAC,OAAgB,CAMhBD,GAAAE,OAAgB,CAMhBF,GAAAruD,IAAa,CAC5B,OAAAquD,KAEA/1D,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MrF48bAzI,GAAQ0B,QqF58bOs7D,OrF88bTF,6CAA6C,SAAS59D,EAAQkB,EAAOJ,GAC3E,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IsFn/bnF,IAAAuhC,GAAAzvC,EAA0B,kCAC1B,IAAAi+D,GAAAj+D,EAA0B,kCAC1B,IAAA6R,GAAA7R,EAA8B,sCAC9B,IAAAqmC,GAAArmC,EAA2B,oCAC3B,IAAAqO,GAAArO,EAA0B,oCAM1B,IAAAstB,GAAAttB,EAA6B,yCAG7B,IAAA2gB,GAAA3gB,EAAuB,gCACvB,IAAAoQ,GAAApQ,EAA2B,uCAa3B,IAAAk+D,GAAA,SAAA3vD,GAA2BV,EAAAqwD,EAAA3vD,EAyD1B,SAAA2vD,GAAYV,EAAuBrf,GAzDpC,GAAAr4C,GAAAC,IAyDa,IAAAy3D,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAArf,QAAA,GAAgB,CAAhBA,EAAA,EAElC5vC,EAAAxN,KAAAgF,KAzDOA,MAAA4pC,UAA+B,GAAIjpC,MAEnCX,MAAAo4D,oBAA8B,KAC9Bp4D,MAAAq4D,eAAyB,KACzBr4D,MAAAs4D,OAAgB,CAEjBt4D,MAAA6pC,iBAA0B,CAC1B7pC,MAAAu4D,aAAuB,KACtBv4D,MAAAw4D,oBAA8B,IAC9Bx4D,MAAAy4D,sBAA+B,CAC/Bz4D,MAAA04D,qBAA8B,CAE9B14D,MAAA6oB,OAAe,GAAIjO,GAAAne,OAgBpBuD,MAAA24D,sBAA+B,CAE9B34D,MAAA44D,WAAqB,KAMrB54D,MAAAoqC,QAA6B,GAAIzpC,MAIlCX,MAAA8pC,YAAqBJ,EAAAjtC,QAAUstC,MAE9B/pC,MAAAiqC,WAAqB,KACrBjqC,MAAAgqC,QAAkB,KAgBzBhqC,MAAK+nB,gCAAkC,SAAClnB,GAAqB,MAAAd,GAAKioB,wBAAwBnnB,GAC1Fb,MAAK6oB,OAAOhlB,iBAAiBwG,EAAA5N,QAAWgP,sBAAuBzL,KAAK+nB,gCAEpE,IAAI0vC,YAAsBS,GAAAz7D,QACzBuD,KAAK6oB,OAAO1d,MAAoBssD,MAC5B,IAAIA,EACRz3D,KAAK6oB,OAAO4jB,MAAQz6B,OAAOylD,EAE5Bz3D,MAAKo4C,MAAQA,CAEbp4C,MAAK64D,uBAAyB,SAACh4D,GAAqB,MAAAd,GAAK+4D,eAAej4D,GACxEb,MAAKkqC,6BAA+B,SAACrpC,GAAqB,MAAAd,GAAKoqC,oBAAoBtpC,GAEnFb,MAAK+4D,mBAAqB,MAM3B/2D,OAAAC,eAAWk2D,EAAAj2D,UAAA,StFs8bJC,IsFt8bP,WAEC,MAAOnC,MAAKs4D,QtFu8bN/0D,IsFp8bP,SAAiBC,GAEhB,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAIxD,KAAKs4D,QAAU90D,EAClB,MAEDxD,MAAKs4D,OAAS90D,CAEd,IAAIxD,KAAK2W,iBAAmB,KAC3B3W,KAAK2W,gBAAkB,GAAI7K,GAAArP,OAE5BuD,MAAK2W,gBAAgBpC,gBAAkB/Q,CAEvCxD,MAAKugB,ctFg8bCle,WAAY,KACZC,aAAc,MsF37brBN,QAAAC,eAAWk2D,EAAAj2D,UAAA,kBtFi8bJC,IsFj8bP,WAEC,MAAOnC,MAAK2W,iBtFk8bNpT,IsF/7bP,SAA0BC,GAEzBxD,KAAK2W,gBAAkBnT,CAEvBxD,MAAKugB,ctF+7bCle,WAAY,KACZC,aAAc,MsFz7brBN,QAAAC,eAAWk2D,EAAAj2D,UAAA,iBtFg8bJC,IsFh8bP,WAEC,MAAOnC,MAAKq4D,gBtFi8bN90D,IsF97bP,SAAyBC,GAExB,GAAIxD,KAAKq4D,gBAAkB70D,EAC1B,MAEDxD,MAAKq4D,eAAiB70D,CAEtBxD,MAAKugB,ctF67bCle,WAAY,KACZC,aAAc,MsFx7brBN,QAAAC,eAAWk2D,EAAAj2D,UAAA,gBtF87bJC,IsF97bP,WAEC,MAAOnC,MAAKuqC,etF+7bNloC,WAAY,KACZC,aAAc,MsFt7brBN,QAAAC,eAAWk2D,EAAAj2D,UAAA,etF+7bJC,IsF/7bP,WAEC,MAAOnC,MAAKsqC,etFg8bN/mC,IsF77bP,SAAuBC,GAEtB,GAAIxD,KAAKsqC,eAAiB9mC,EACzB,MAED,IAAIxD,KAAKsqC,cACRtqC,KAAKsqC,cAAc5mC,oBAAoB48B,EAAA7jC,QAAWgsC,WAAYzoC,KAAK64D,uBAEpE74D,MAAKsqC,cAAgB9mC,CAErB,IAAIxD,KAAKsqC,cACRtqC,KAAKsqC,cAAczmC,iBAAiBy8B,EAAA7jC,QAAWgsC,WAAYzoC,KAAK64D,uBAEjE74D,MAAKugB,ctF07bCle,WAAY,KACZC,aAAc,MsFr7brBN,QAAAC,eAAWk2D,EAAAj2D,UAAA,UtF27bJC,IsF37bP,WAEC,MAAOnC,MAAKgqC,StF47bNzmC,IsFz7bP,SAAkBC,GAEjB,GAAIxD,KAAKgqC,SAAWxmC,EACnB,MAEDxD,MAAKgqC,QAAUxmC,CAEfxD,MAAKqqC,oBtFw7bChoC,WAAY,KACZC,aAAc,MsFn7brBN,QAAAC,eAAWk2D,EAAAj2D,UAAA,atFy7bJC,IsFz7bP,WAEC,MAAOnC,MAAKiqC,YtF07bN1mC,IsFv7bP,SAAqBC,GAEpB,GAAIxD,KAAKiqC,YAAczmC,EACtB,MAEDxD,MAAKiqC,WAAazmC,CAElBxD,MAAKqqC,oBtFs7bChoC,WAAY,KACZC,aAAc,MsFh7brBN,QAAAC,eAAWk2D,EAAAj2D,UAAA,StFs7bJC,IsFt7bP,WAEC,MAAOnC,MAAK6oB,QtFu7bNtlB,IsFp7bP,SAAiBC,GAEhB,GAAIxD,KAAK6oB,QAAUrlB,EAClB,MAED,IAAIxD,KAAK6oB,OACR7oB,KAAK6oB,OAAOnlB,oBAAoB2G,EAAA5N,QAAWgP,sBAAuBzL,KAAK+nB,gCAExE/nB,MAAK6oB,OAASrlB,CAEd,IAAIxD,KAAK6oB,OACR7oB,KAAK6oB,OAAOhlB,iBAAiBwG,EAAA5N,QAAWgP,sBAAuBzL,KAAK+nB,gCAErE/nB,MAAKqqC,oBtFi7bChoC,WAAY,KACZC,aAAc,MsF56brBN,QAAAC,eAAWk2D,EAAAj2D,UAAA,ctFk7bJC,IsFl7bP,WAEC,MAAOnC,MAAKu4D,ctFm7bNh1D,IsFh7bP,SAAsBC,GAErB,GAAIxD,KAAKu4D,cAAgB/0D,EACxB,MAEDxD,MAAKu4D,aAAe/0D,CAEpBxD,MAAKqqC,oBtF+6bChoC,WAAY,KACZC,aAAc,MsF16brBN,QAAAC,eAAWk2D,EAAAj2D,UAAA,qBtFg7bJC,IsFh7bP,WAEC,MAAOnC,MAAKo4D,qBtFi7bN70D,IsF96bP,SAA6BC,GAE5B,GAAIxD,KAAKo4D,qBAAuB50D,EAC/B,MAEDxD,MAAKo4D,oBAAsB50D,CAE3BxD,MAAKqqC,oBtF66bChoC,WAAY,KACZC,aAAc,MsFv6brBN,QAAAC,eAAWk2D,EAAAj2D,UAAA,sBtF86bJC,IsF96bP,WAEC,MAAOnC,MAAKw4D,qBtF+6bNj1D,IsF56bP,SAA8BC,GAE7B,GAAIxD,KAAKw4D,qBAAuBh1D,EAC/B,MAEDxD,MAAKw4D,oBAAsBh1D,CAE3BxD,MAAKqqC,oBtF26bChoC,WAAY,KACZC,aAAc,MsFn6brBN,QAAAC,eAAWk2D,EAAAj2D,UAAA,uBtF46bJC,IsF56bP,WAEC,MAAOnC,MAAK04D,sBtF66bNn1D,IsF16bP,SAA+BC,GAE9B,GAAIxD,KAAK04D,sBAAwBl1D,EAChC,MAEDxD,MAAK04D,qBAAuBl1D,CAE5BxD,MAAKqqC,oBtFy6bChoC,WAAY,KACZC,aAAc,MsFj6brBN,QAAAC,eAAWk2D,EAAAj2D,UAAA,wBtF06bJC,IsF16bP,WAEC,MAAOnC,MAAKy4D,uBtF26bNl1D,IsFx6bP,SAAgCC,GAE/B,GAAIxD,KAAKy4D,uBAAyBj1D,EACjC,MAEDxD,MAAKy4D,sBAAwBj1D,CAE7BxD,MAAKqqC,oBtFu6bChoC,WAAY,KACZC,aAAc,MsFl6brBN,QAAAC,eAAWk2D,EAAAj2D,UAAA,atFw6bJC,IsFx6bP,WAEC,MAAOnC,MAAK44D,YtFy6bNr1D,IsFt6bP,SAAqBC,GAEpB,GAAIxD,KAAK44D,WAAap1D,EACrB,MAEDxD,MAAK44D,WAAap1D,CAElBxD,MAAKqqC,oBtFq6bChoC,WAAY,KACZC,aAAc,MsFz5brBN,QAAAC,eAAWk2D,EAAAj2D,UAAA,atFs6bJC,IsFt6bP,WAEC,MAAOnC,MAAK8pC,atFu6bNvmC,IsFp6bP,SAAqBC,GAEpB,GAAIxD,KAAK8pC,aAAetmC,EACvB,MAEDxD,MAAK8pC,YAActmC,CAEnBxD,MAAKugB,ctFm6bCle,WAAY,KACZC,aAAc,MsF55brBN,QAAAC,eAAWk2D,EAAAj2D,UAAA,sBtFo6bJC,IsFp6bP,WAEC,MAAOnC,MAAKg5D,qBtFq6bNz1D,IsFl6bP,SAA8BC,GAE7B,GAAIxD,KAAKg5D,qBAAuBx1D,EAC/B,MAEDxD,MAAKg5D,oBAAsBx1D,CAE3BxD,MAAKqqC,oBtFi6bChoC,WAAY,KACZC,aAAc,MsF15brBN,QAAAC,eAAWk2D,EAAAj2D,UAAA,kBtFk6bJC,IsFl6bP,WAEC,MAAOnC,MAAK6pC,kBtFm6bNtmC,IsFh6bP,SAA0BC,GAEzB,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAIxD,KAAK6pC,kBAAoBrmC,EAC5B;AAEDxD,KAAK6pC,iBAAmBrmC,CAExBxD,MAAKqqC,oBtF85bChoC,WAAY,KACZC,aAAc,MsFh5bd61D,GAAAj2D,UAAAwmB,UAAP,SAAiBuwC,GAEhBj5D,KAAKoqC,QAAQhnC,KAAK61D,EAElB,IAAIC,EACJ,IAAIxwB,GAAiCuwB,EAAMvwB,QAE3C,IAAIA,EACHwwB,EAA+BxwB,EAASwwB,YAEzC,IAAID,EAAMvwB,SAAU,CACnB,GAAI1oC,KAAKuqC,eAAiB2uB,GAAgBl5D,KAAKuqC,cAAe,CAC7D,KAAM,IAAI3vC,OAAM,iGACV,CACN,GAAIoF,KAAKuqC,eAAiB2uB,EAAc,CAEvCl5D,KAAKuqC,cAAgB2uB,CAErBl5D,MAAKm5D,wBAKRF,EAAMrvC,oBASAuuC,GAAAj2D,UAAAsmB,aAAP,SAAoBywC,GAEnBj5D,KAAKoqC,QAAQ5X,OAAOxyB,KAAKoqC,QAAQ37B,QAAQwqD,GAAQ,EAEjD,IAAIj5D,KAAKoqC,QAAQnvC,QAAU,EAAG,CAC7B+E,KAAKuqC,cAAgB,IAErBvqC,MAAKm5D,sBAGNF,EAAMrvC,oBAQP5nB,QAAAC,eAAWk2D,EAAAj2D,UAAA,WtFm5bJC,IsFn5bP,WAEC,MAAOnC,MAAKoqC,StFo5bN/nC,WAAY,KACZC,aAAc,MsFl5bd61D,GAAAj2D,UAAAyoC,eAAP,WAEC,MAAO3qC,MAAK4pC,UAAU3uC,OAGhBk9D,GAAAj2D,UAAAmnB,aAAP,SAAoBre,GAEnB,MAAOhL,MAAK4pC,UAAU5+B,GAQhBmtD,GAAAj2D,UAAAmoC,iBAAP,WAECrqC,KAAKwL,cAAc,GAAI+b,GAAA9qB,QAAa8qB,EAAA9qB,QAAamuC,kBAAmB5qC,OAG7Dm4D,GAAAj2D,UAAAi3D,oBAAR,WAECn5D,KAAKwL,cAAc,GAAI+b,GAAA9qB,QAAa8qB,EAAA9qB,QAAayrD,qBAAsBloD,OAGjEm4D,GAAAj2D,UAAAk3D,mBAAP,WAEC,GAAIj2D,GAAanD,KAAKoqC,QAAQnvC,MAC9B,KAAK,GAAIP,GAAW,EAAGA,EAAIyI,EAAKzI,IAC/BsF,KAAKoqC,QAAQ1vC,GAAGkvB,oBAMVuuC,GAAAj2D,UAAA42D,eAAR,SAAuBj4D,GAEtBb,KAAKugB,aAGC43C,GAAAj2D,UAAAy1D,kBAAP,WAEC33D,KAAKwL,cAAc,GAAI+b,GAAA9qB,QAAa8qB,EAAA9qB,QAAagsB,mBAAoBzoB,OAG/Dm4D,GAAAj2D,UAAAm3D,aAAP,SAAoBtuD,EAAqBC,GAExC,GAAItQ,GAAWsF,KAAK4pC,UAAUn7B,QAAQ1D,EAEtC,IAAIrQ,GAAKsQ,EACR,WACI,IAAItQ,IAAM,EACdsF,KAAK4pC,UAAUpX,OAAO93B,EAAG,EAE1BsF,MAAK4pC,UAAUpX,OAAOxnB,EAAO,EAAGD,EAEhCA,GAAQlH,iBAAiBy8B,EAAA7jC,QAAWgsC,WAAYzoC,KAAKkqC,6BAErDlqC,MAAKmqC,sBAGCguB,GAAAj2D,UAAAwoC,WAAP,SAAkB3/B,GAEjB,GAAI/K,KAAK4pC,UAAUn7B,QAAQ1D,KAAa,EACvC,MAED/K,MAAK4pC,UAAUxmC,KAAK2H,EAEpBA,GAAQlH,iBAAiBy8B,EAAA7jC,QAAWgsC,WAAYzoC,KAAKkqC,6BAErDlqC,MAAKmqC,sBAGCguB,GAAAj2D,UAAAuoC,cAAP,SAAqB1/B,GAEpB/K,KAAK4pC,UAAUpX,OAAOxyB,KAAK4pC,UAAUn7B,QAAQ1D,GAAU,EAEvDA,GAAQrH,oBAAoB48B,EAAA7jC,QAAWgsC,WAAYzoC,KAAKkqC,6BAExDlqC,MAAKmqC,sBAGEguB,GAAAj2D,UAAAioC,oBAAR,SAA4BtpC,GAAA,GAAAA,QAAA,GAAuB,CAAvBA,EAAA,KAE3Bb,KAAKqqC,kBAGLrqC,MAAKo5D,qBAGEjB,GAAAj2D,UAAA8lB,wBAAR,SAAgCnnB,GAE/Bb,KAAKqqC,mBAEP,OAAA8tB,IAtkB2B7vD,EAAA7L,QAwkB3BuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MtFq3bAzI,GAAQ0B,QsFr3bO07D,ItFu3bZ70B,oCAAoCh8B,UAAUmO,sCAAsCnO,UAAUujC,kCAAkCvjC,UAAUgyD,kCAAkChyD,UAAUqB,oCAAoCrB,UAAU6C,gCAAgC,gCAAgCwB,uCAAuC,uCAAuCse,yCAAyC,2CAA2CsvC,6DAA6D,SAASt/D,EAAQkB,EAAOJ,GAC9hB,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IuF99cnF,IAAAG,GAAArO,EAA0B,oCAe1B,IAAAu/D,GAAA,SAAAhxD,GAA8BV,EAAA0xD,EAAAhxD,EAqB7B,SAAAgxD,KAEChxD,EAAAxN,KAAAgF,KAnBMA,MAAAy5D,iBAA0B,CAC1Bz5D,MAAA05D,uBAAgC,CAChC15D,MAAA25D,wBAAiC,CACjC35D,MAAA45D,8BAAuC,CACvC55D,MAAA65D,iBAA0B,EAqB1BL,EAAAt3D,UAAAuB,QAAP,YAOAzB,QAAAC,eAAWu3D,EAAAt3D,UAAA,avF28cJC,IuF38cP,WAEC,MAAOq3D,GAAgB9wD,WvF48cjBrG,WAAY,KACZC,aAAc,MuFv8crBN,QAAAC,eAAWu3D,EAAAt3D,UAAA,wBvF68cJC,IuF78cP,WAEC,MAAOnC,MAAK05D,wBvF88cNr3D,WAAY,KACZC,aAAc,MuFz8crBN,QAAAC,eAAWu3D,EAAAt3D,UAAA,kBvF+8cJC,IuF/8cP,WAEC,MAAOnC,MAAKy5D,kBvFg9cNp3D,WAAY,KACZC,aAAc,MuF38crBN,QAAAC,eAAWu3D,EAAAt3D,UAAA,+BvFi9cJC,IuFj9cP,WAEC,MAAOnC,MAAK45D,+BvFk9cNv3D,WAAY,KACZC,aAAc,MuF78crBN,QAAAC,eAAWu3D,EAAAt3D,UAAA,yBvFm9cJC,IuFn9cP,WAEC,MAAOnC,MAAK25D,yBvFo9cNt3D,WAAY,KACZC,aAAc,MuF/8crBN,QAAAC,eAAWu3D,EAAAt3D,UAAA,kBvFq9cJC,IuFr9cP,WAEC,MAAOnC,MAAK65D,kBvFs9cNx3D,WAAY,KACZC,aAAc,MuFj9crBN,QAAAC,eAAWu3D,EAAAt3D,UAAA,evFu9cJC,IuFv9cP,WAEC,MAAOnC,MAAK85D,evFw9cNz3D,WAAY,KACZC,aAAc,MuFn9crBN,QAAAC,eAAWu3D,EAAAt3D,UAAA,qBvFy9cJC,IuFz9cP,WAEC,MAAOnC,MAAK+5D,qBvF09cN13D,WAAY,KACZC,aAAc,MuFr9crBN,QAAAC,eAAWu3D,EAAAt3D,UAAA,sBvF29cJC,IuF39cP,WAEC,MAAOnC,MAAKg6D,sBvF49cN33D,WAAY,KACZC,aAAc,MuFv9crBN,QAAAC,eAAWu3D,EAAAt3D,UAAA,4BvF69cJC,IuF79cP,WAEC,MAAOnC,MAAKi6D,4BvF89cN53D,WAAY,KACZC,aAAc,MuFz9crBN,QAAAC,eAAWu3D,EAAAt3D,UAAA,evF+9cJC,IuF/9cP,WAEC,MAAOnC,MAAKk6D,evFg+cN73D,WAAY,KACZC,aAAc,MuF39crBN,QAAAC,eAAWu3D,EAAAt3D,UAAA,qBvFi+cJC,IuFj+cP,WAEC,MAAOnC,MAAKm6D,qBvFk+cN93D,WAAY,KACZC,aAAc,MuF79crBN,QAAAC,eAAWu3D,EAAAt3D,UAAA,mBvFm+cJC,IuFn+cP,WAEC,MAAOnC,MAAKo6D,mBvFo+cN/3D,WAAY,KACZC,aAAc,MuF/9cdk3D,GAAAt3D,UAAAm4D,cAAP,SAAqBh/C,GAEpBrb,KAAKs6D,mBAAmBj/C,GAOjBm+C,GAAAt3D,UAAAo4D,mBAAR,SAA2Bj/C,GAG1B,GAAIk/C,GAAqBl/C,EAAOkK,aAChC,IAAIi1C,EAEJ,IAAIv6C,GAAYs6C,EAAU13D,EAAGqd,EAAYq6C,EAAUx3D,EAAGod,EAAYo6C,EAAU7iD,CAC5E,IAAIqB,GAAWC,EAAWC,CAC1B,IAAI01B,GAAU8rB,EAAe,CAC7B,IAAI//D,EAGJ,KAAKA,EAAI,EAAGA,EAAIsF,KAAK65D,mBAAoBn/D,EAAG,CAE3C8/D,EAAWx6D,KAAKk6D,cAAcx/D,GAAG6qB,aACjCxM,GAAKkH,EAAKu6C,EAAS33D,CACnBmW,GAAKkH,EAAKs6C,EAASz3D,CACnBkW,GAAKkH,EAAKq6C,EAAS9iD,CAEnBi3B,GAAI51B,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,CAGvB01B,GAAIA,EAAI,KAAQ,EAAEA,EAAI,GACtB3uC,MAAKm6D,oBAAoBz/D,GAAKi0C,CAC9B8rB,IAAS9rB,EAIV8rB,EAAQ,EAAEA,CAEV,KAAK//D,EAAI,EAAGA,EAAIsF,KAAK65D,mBAAoBn/D,EACxCsF,KAAKm6D,oBAAoBz/D,IAAM+/D,EAlLnBjB,GAAA9wD,UAAmB,qBAoLlC,OAAA8wD,IAtL8BlxD,EAAA7L,QAwL9BuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MvF69cAzI,GAAQ0B,QuF79cO+8D,IvF+9cZ7wD,oCAAoCrB,YAAYozD,+DAA+D,SAASzgE,EAAQkB,EAAOJ,GAC1I,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IwF5qdnF,IAAAm4B,GAAArmC,EAA2B,oCAG3B,IAAAo5C,GAAAp5C,EAAgC,8CAChC,IAAAq5C,GAAAr5C,EAA2B,wCAC3B,IAAAy5C,GAAAz5C,EAA2B,wCAC3B,IAAAojC,GAAApjC,EAA2B,uCAC3B,IAAA0gE,GAAA1gE,EAA+B,4DAO/B,IAAA2gE,GAAA,SAAApyD,GAAgCV,EAAA8yD,EAAApyD,EAS/B,SAAAoyD,GAAYC,GATb,GAAA96D,GAAAC,IAWEwI,GAAAxN,KAAAgF,KAEAA,MAAK86D,4BAA8B,SAACj6D,GAAqB,MAAAd,GAAKg7D,mBAAmBl6D,GAEjFb,MAAK66D,OAASA,EAMf74D,OAAAC,eAAW24D,EAAA14D,UAAA,UxFsqdJC,IwFtqdP,WAEC,MAAOnC,MAAKg7D,SxFuqdNz3D,IwFpqdP,SAAkBC,GAEjB,GAAIy3D,GAAwB,CAC5B,IAAIC,GAA8B,CAClC,IAAIC,GAA+B,CACnC,IAAIC,GAAqC,CACzC,IAAIC,GAAwB,CAC5B,IAAI58B,EAEJ,IAAIz+B,KAAKg7D,QACRh7D,KAAKs7D,gBAENt7D,MAAKg7D,QAAUx3D,CACfxD,MAAKo6D,kBAAoB52D,CACzBxD,MAAK85D,cAAgB,GAAIn5D,MACzBX,MAAKg6D,qBAAuB,GAAIr5D,MAChCX,MAAK+5D,oBAAsB,GAAIp5D,MAC/BX,MAAKi6D,2BAA6B,GAAIt5D,MACtCX,MAAKk6D,cAAgB,GAAIv5D,MAEzB,IAAIwC,GAAaK,EAAMvI,MAEvB,KAAK,GAAIP,GAAW,EAAGA,EAAIyI,IAAOzI,EAAG,CACpC+jC,EAAQj7B,EAAM9I,EACd+jC,GAAM56B,iBAAiBw5B,EAAA5gC,QAAWiiC,oBAAqB1+B,KAAK86D,4BAE5D,IAAIr8B,YAAiBiV,GAAAj3C,QAAY,CAChC,GAAIgiC,EAAM88B,eACTv7D,KAAKg6D,qBAAqBmB,KAAwC18B,MAElEz+B,MAAK85D,cAAcmB,KAAiCx8B,MAE/C,IAAIA,YAAiB4U,GAAA52C,QAAkB,CAC7C,GAAIgiC,EAAM88B,eACTv7D,KAAKi6D,2BAA2BmB,KAAoD38B,MAEpFz+B,MAAK+5D,oBAAoBmB,KAA6Cz8B,MAEjE,IAAIA,YAAiB6U,GAAA72C,QAAY,CACvCuD,KAAKk6D,cAAcmB,KAAiC58B,GAItD,GAAIz+B,KAAK05D,wBAA0BwB,GAAwBl7D,KAAKy5D,kBAAoBwB,GAAkBj7D,KAAK65D,kBAAoBwB,GAAkBr7D,KAAK25D,yBAA2BwB,GAAyBn7D,KAAK45D,+BAAiCwB,EAC/O,MAEDp7D,MAAK05D,uBAAyBwB,CAC9Bl7D,MAAK45D,8BAAgCwB,CACrCp7D,MAAKy5D,iBAAmBwB,CACxBj7D,MAAK25D,wBAA0BwB,CAC/Bn7D,MAAK65D,iBAAmBwB,CAGxBr7D,MAAKm6D,oBAAsB,GAAIx5D,OAAc+Y,KAAK8hD,KAAKH,EAAe,GAAG,EAGzEr7D,MAAKwL,cAAc,GAAI80B,GAAA7jC,QAAW6jC,EAAA7jC,QAAWgsC,WAAYzoC,QxF4pdnDqC,WAAY,KACZC,aAAc,MwFtpdbs4D,GAAA14D,UAAAo5D,eAAR,WAEC,GAAIn4D,GAAanD,KAAKg7D,QAAQ//D,MAC9B,KAAK,GAAIP,GAAW,EAAGA,EAAIyI,IAAOzI,EACjCsF,KAAKg7D,QAAQtgE,GAAGgJ,oBAAoB25B,EAAA5gC,QAAWiiC,oBAAqB1+B,KAAK86D,6BAMnEF,GAAA14D,UAAA64D,mBAAR,SAA2Bl6D,GAK1B,GAAI49B,GAA8B59B,EAAMsU,MAExC,IAAIspB,YAAiBiV,GAAAj3C,QACpBuD,KAAKy7D,mBAAgCh9B,OACjC,IAAIA,YAAiB4U,GAAA52C,QACzBuD,KAAK07D,yBAA4Cj9B,EAElDz+B,MAAKwL,cAAc,GAAI80B,GAAA7jC,QAAW6jC,EAAA7jC,QAAWgsC,WAAYzoC,OAMlD46D,GAAA14D,UAAAw5D,yBAAR,SAAiCj9B,GAEhC,GAAIk9B,GAAyCl9B,CAE7C,IAAIA,EAAM88B,eAAgB,GACvBv7D,KAAK05D,yBACL15D,KAAK45D,6BAGP55D,MAAK+5D,oBAAoBvnC,OAAOxyB,KAAK+5D,oBAAoBtrD,QAAQktD,GAAK,EACtE37D,MAAKi6D,2BAA2B72D,KAAKq7B,OAE/B,GACJz+B,KAAK05D,yBACL15D,KAAK45D,6BAEP55D,MAAKi6D,2BAA2BznC,OAAOxyB,KAAKi6D,2BAA2BxrD,QAAQktD,GAAK,EACpF37D,MAAK+5D,oBAAoB32D,KAAKq7B,IAOxBm8B,GAAA14D,UAAAu5D,mBAAR,SAA2Bh9B,GAE1B,GAAIm9B,GAA6Bn9B,CAEjC,IAAIA,EAAM88B,eAAgB,GACvBv7D,KAAKy5D,mBACLz5D,KAAK25D,uBACP35D,MAAK85D,cAActnC,OAAOxyB,KAAK85D,cAAcrrD,QAAQmtD,GAAK,EAC1D57D,MAAKg6D,qBAAqB52D,KAAKq7B,OACzB,GACJz+B,KAAKy5D,mBACLz5D,KAAK25D,uBAEP35D,MAAKg6D,qBAAqBxnC,OAAOxyB,KAAKg6D,qBAAqBvrD,QAAQmtD,GAAK,EACxE57D,MAAK85D,cAAc12D,KAAKq7B,IAG3B,OAAAm8B,IA9JgCD,EAAAl+D,QAgKhCuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MxF6odAzI,GAAQ0B,QwF7odOm+D,IxF+odZt3B,oCAAoCh8B,UAAU0lB,8CAA8C,8CAA8C+R,wCAAwC,wCAAwC8H,wCAAwC,wCAAwC/H,uCAAuC,uCAAuCy6B,4DAA4D,8DAA8DsC,kEAAkE,SAAS5hE,EAAQkB,EAAOJ,GAC/kB,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IyFj0dnF,IAAA4N,GAAA9b,EAA6B,qCAC7B,IAAAmtB,GAAAntB,EAA0B,iCAC1B,IAAAqmC,GAAArmC,EAA2B,oCAC3B,IAAA6hE,GAAA7hE,EAAmC,mDAKnC,IAAAsF,GAAAtF,EAAwB,oCACxB,IAAAizB,GAAAjzB,EAAqC,qEAGrC,IAAA8hE,GAAA,SAAAvzD,GAAkCV,EAAAi0D,EAAAvzD,EAejC,SAAAuzD,GAAYC,GAAA,GAAAA,QAAA,GAA+B,CAA/BA,EAAA,EAEXxzD,EAAAxN,KAAAgF,KAdOA,MAAAi8D,sBAAgC,IAgBvC,IAAID,EAAc,GAAKA,EAAc,EACpC,KAAM,IAAIphE,OAAM,iDAEjBoF,MAAKk8D,aAAeF,CACpBh8D,MAAKmN,OAGC4uD,EAAA75D,UAAAi6D,cAAP,SAAqBnxD,GAEpB,MAAOhL,MAAKo8D,aAAapxD,GAGnB+wD,GAAA75D,UAAAm6D,cAAP,SAAqBrxD,EAAuBxH,GAE3C,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAIwH,GAAShL,KAAKk8D,aACjB,KAAM,IAAIthE,OAAM,qDAEjBoF,MAAKo8D,aAAapxD,GAASxH,EAGrBu4D,GAAA75D,UAAAo6D,oBAAP,SAA2BrgE,GAE1B,MAAO+D,MAAKu8D,cAActgE,GAAWgwB,eAG9B8vC,GAAA75D,UAAAiL,KAAR,WAECnN,KAAKo8D,aAAe,GAAIz7D,OAAcX,KAAKk8D,aAC3Cl8D,MAAKw8D,oBAAsB,GAAI77D,OAAcX,KAAKk8D,aAElD,IAAI5hE,GAAW,CACf,KAAK,GAAII,GAAmBsF,KAAKk8D,aAAe,EAAGxhE,GAAK,IAAKA,EAAG,CAC/DsF,KAAKo8D,aAAa1hE,GAAKJ,CACvBA,IAAK,GAGN0F,KAAKy8D,aAAe97D,OAAe,EAAG,GAAI,EAAG,EAC7CX,MAAK08D,aAAe/7D,MAAc,EAAG,GAAI,GAAI,EAC7CX,MAAK28D,eAAiB,GAAIh8D,OAAiB,EAC3CX,MAAK48D,aAAe,GAAIj8D,MACxBX,MAAKu8D,cAAgB,GAAI57D,MAEzB,KAAKjG,EAAI,EAAGA,EAAIsF,KAAKk8D,eAAgBxhE,EAAG,CACvCsF,KAAK48D,aAAaliE,GAAK,GAAIohE,GAAAr/D,OAC3BuD,MAAKu8D,cAAc7hE,GAAK,GAAI6E,GAAA9C,QAAOuD,KAAK48D,aAAaliE,KAIhDqhE,GAAA75D,UAAA26D,kBAAP,SAAyBr5D,GAExBgF,EAAAtG,UAAM26D,kBAAiB7hE,KAAAgF,KAACwD,EAExBxD,MAAK88D,yBAGEf,GAAA75D,UAAA46D,uBAAR,WAEC98D,KAAKi8D,sBAAwB,KAG9Bj6D,QAAAC,eAAW85D,EAAA75D,UAAA,ezF6xdJC,IyF7xdP,WAEC,MAAOnC,MAAKk8D,czF8xdN34D,IyF3xdP,SAAuBC,GAEtB,GAAIA,GAASxD,KAAKk8D,aACjB,MAED,IAAI14D,EAAQ,GAAKA,EAAQ,EACxB,KAAM,IAAI5I,OAAM,iDAEjBoF,MAAKk8D,aAAe14D,CACpBxD,MAAK88D,wBACL98D,MAAKmN,MACLnN,MAAKwL,cAAc,GAAI80B,GAAA7jC,QAAW6jC,EAAA7jC,QAAWgsC,WAAYzoC,QzF0xdnDqC,WAAY,KACZC,aAAc,MyFxxddy5D,GAAA75D,UAAA66D,cAAP,SAAqBl9D,EAAasV,EAAwBvV,GAEzD,GAAII,KAAKi8D,sBACRj8D,KAAKg9D,oBAENp9D,GAASq9D,WAAaj9D,KAAKk9D,YAC3Bt9D,GAASu9D,iBAAiBn9D,KAAKo9D,qBAAsBv9D,EAAOsV,EAAOkoD,QAASr9D,KAAKk8D,aAAcl8D,KAAK28D,eAAgB38D,KAAKu8D,eAGlHR,GAAA75D,UAAA86D,mBAAR,WAEC,GAAIM,GAAct9D,KAAKu9D,eAAe,EAEtCv9D,MAAK28D,eAAe,GAAK,GAAIv1C,GAAA3qB,QAAU,EAAG,EAAG6gE,EAAMA,EACnDt9D,MAAK28D,eAAe,GAAK,GAAIv1C,GAAA3qB,QAAU6gE,EAAM,EAAGA,EAAMA,EACtDt9D,MAAK28D,eAAe,GAAK,GAAIv1C,GAAA3qB,QAAU,EAAG6gE,EAAMA,EAAMA,EACtDt9D,MAAK28D,eAAe,GAAK,GAAIv1C,GAAA3qB,QAAU6gE,EAAMA,EAAMA,EAAMA,EAEzDt9D,MAAKi8D,sBAAwB,MAGvBF,GAAA75D,UAAAs7D,uBAAP,SAA8B19D,GAE7B,GAAI0d,EACJ,IAAI5Y,GAAyB9E,EAAO8E,UACpC,IAAI64D,GAAwB74D,EAAW84D,IACvC,IAAIC,GAAyB/4D,EAAWg5D,IAAMH,CAE9Cz9D,MAAK69D,oCAAoC/9D,EAAQA,EAAO8E,WAAWk5D,eAAgB99D,KAAK+9D,SACxF/9D,MAAK+9D,SAASC,YAAY,IAAK,IAAK,EACpCh+D,MAAKi+D,yBAAyBzgD,OAASxd,KAAK+9D,QAC5C/9D,MAAKk+D,kBAAkBp+D,EAEvB,KAAK,GAAIpF,GAAmB,EAAGA,EAAIsF,KAAKk8D,eAAgBxhE,EAAG,CAC1D8iB,EAASxd,KAAK48D,aAAaliE,GAAG8iB,MAE9Bxd,MAAKw8D,oBAAoB9hE,GAAK+iE,EAAiBz9D,KAAKo8D,aAAa1hE,GAAGijE,CACpE39D,MAAKu8D,cAAc7hE,GAAG4W,UAAUuC,SAAW7T,KAAKo9D,qBAAqB9rD,UAAUuC,QAE/E7T,MAAKm+D,0BAA0B3gD,EAAQxd,KAAKo8D,aAAa1hE,GAAIsF,KAAKy8D,aAAa/hE,GAAIsF,KAAK08D,aAAahiE,GAErGsF,MAAK48D,aAAaliE,GAAG8iB,OAASA,GAIxBu+C,GAAA75D,UAAAi8D,0BAAR,SAAkC3gD,EAAiB4gD,EAAmBC,EAAmBC,GAExF,GAAIrgD,GAAmBlI,EAAAtZ,QAAcuxB,kBACrC,IAAIuwC,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWC,CAC1B,IAAI7vC,GAAc/c,OAAO6sD,kBAAmB7vC,EAAchd,OAAO6sD,kBAAmB5vC,CACpF,IAAIC,GAAcld,OAAO8sD,kBAAmB3vC,EAAcnd,OAAO8sD,kBAAmB1vC,EAAcpd,OAAO8sD,iBACzG,IAAIpkE,GAAoB,CAExB,OAAOA,EAAI,GAAI,CACd6jE,EAAKv+D,KAAK++D,eAAerkE,EACzB8jE,GAAKx+D,KAAK++D,eAAerkE,EAAI,EAC7B+jE,GAAKz+D,KAAK++D,eAAerkE,EAAI,EAC7BgkE,GAAKH,GAAMv+D,KAAK++D,eAAerkE,EAAI,IAAM6jE,GAAIH,CAC7CO,GAAKH,GAAMx+D,KAAK++D,eAAerkE,EAAI,IAAM8jE,GAAIJ,CAC7CQ,GAAKH,GAAMz+D,KAAK++D,eAAerkE,EAAI,IAAM+jE,GAAIL,CAC7C,IAAIG,EAAKxvC,EACRA,EAAOwvC,CACR,IAAIA,EAAKrvC,EACRA,EAAOqvC,CACR,IAAIC,EAAKxvC,EACRA,EAAOwvC,CACR,IAAIA,EAAKrvC,EACRA,EAAOqvC,CACR,IAAIC,EAAKrvC,EACRA,EAAOqvC,CACR,IAAIC,EAAK3vC,EACRA,EAAO2vC,CACR,IAAIA,EAAKxvC,EACRA,EAAOwvC,CACR,IAAIC,EAAK3vC,EACRA,EAAO2vC,CACR,IAAIA,EAAKxvC,EACRA,EAAOwvC,CACR,IAAIC,EAAKxvC,EACRA,EAAOwvC,CACRlkE,IAAK,EAGNu0B,EAAO,CAEP,IAAI0f,GAAYzf,EAAOH,CACvB,IAAIiwC,GAAY7vC,EAAOH,CACvB,IAAIjnB,GAAW,GAAGqnB,EAAOH,EAEzB,IAAIF,EAAO,EACVA,GAAQ/uB,KAAKi/D,MACd,IAAIjwC,EAAO,EACVA,GAAQhvB,KAAKi/D,MACdlwC,GAAOrV,KAAKkzC,MAAM79B,EAAK/uB,KAAKi/D,QAAQj/D,KAAKi/D,MACzCjwC,GAAOtV,KAAKkzC,MAAM59B,EAAKhvB,KAAKi/D,QAAQj/D,KAAKi/D,MAEzC,IAAIC,GAAe,EAAEl/D,KAAKi/D,MAC1BtwB,GAAIj1B,KAAKkzC,MAAMje,EAAEuwB,EAAQ,GAAGA,CAC5BF,GAAItlD,KAAKkzC,MAAMoS,EAAEE,EAAQ,GAAGA,CAE5BhwC,GAAOH,EAAO4f,CACdxf,GAAOH,EAAOgwC,CAEdrwB,GAAI,EAAEA,CACNqwB,GAAI,EAAEA,CAEN/gD,GAAI,GAAK,EAAE0wB,CACX1wB,GAAI,GAAK,EAAE+gD,CACX/gD,GAAI,IAAMlW,CACVkW,GAAI,MAAQiR,EAAOH,GAAM4f,CACzB1wB,GAAI,MAAQkR,EAAOH,GAAMgwC,CACzB/gD,GAAI,KAAOgR,EAAKlnB,CAChBkW,GAAI,IAAM,CACVA,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,CAElFT,GAAOqR,gBAAgB5Q,EACvBT,GAAOwgD,YAAY,IAAK,IAAK,EAC7BxgD,GAAO5D,kBAAkBykD,EAAYC,EAAY,EACjD9gD,GAAOwgD,YAAY,GAAI,GAAI,GAG5Bh8D,QAAAC,eAAI85D,EAAA75D,UAAA,wBzFkwdGC,IyFlwdP,WAEC,MAAOnC,MAAKw8D,qBzFmwdNn6D,WAAY,KACZC,aAAc,MyFlwdtB,OAAAy5D,IArOkC7uC,EAAAzwB,QAuOlCuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MzFqwdAzI,GAAQ0B,QyFrwdOs/D,IzFuwdZz4B,oCAAoCh8B,UAAUiT,qCAAqCjT,UAAUwiB,iCAAiCxiB,UAAU63D,mDAAmD73D,UAAU6iB,oCAAoC,oCAAoCmF,qEAAqE,uEAAuEmY,kEAAkE,SAASxtC,EAAQkB,EAAOJ,GACtf,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,I0FhgenF,IAAAi3D,GAAAnlE,EAA0B,kCAK1B,IAAAsF,GAAAtF,EAAwB,oCAExB,IAAAolE,GAAAplE,EAAgC,8DAEhC,IAAA0vC,GAAA1vC,EAAgC,gDAEhC,IAAAqlE,GAAA,SAAA92D,GAAkCV,EAAAw3D,EAAA92D,EAMjC,SAAA82D,KAEC92D,EAAAxN,KAAAgF,KAEAA,MAAKu9D,eAAiB,GACtBv9D,MAAKu/D,aAAe,GAAI5+D,MACxBX,MAAKw/D,cAGEF,EAAAp9D,UAAAs9D,YAAR,WAECx/D,KAAKu8D,cAAgB,GAAI57D,MACzBX,MAAKy/D,aAAe,GAAI9+D,MAGxBX,MAAK0/D,UAAU,EAAG,GAAI,EACtB1/D,MAAK0/D,UAAU,GAAI,GAAI,EACvB1/D,MAAK0/D,WAAW,GAAI,EAAG,EACvB1/D,MAAK0/D,UAAU,GAAI,EAAG,EACtB1/D,MAAK0/D,UAAU,EAAG,EAAG,EACrB1/D,MAAK0/D,UAAU,EAAG,IAAK,GAGhBJ,GAAAp9D,UAAAw9D,UAAR,SAAkBj8C,EAAkBC,EAAkB0R,GAErD,GAAIuqC,GAAa,GAAIpgE,GAAA9C,OACrBkjE,GAAIl8C,UAAYA,CAChBk8C,GAAIj8C,UAAYA,CAChBi8C,GAAIvqC,UAAYA,CAChBuqC,GAAI/6D,WAAW84D,KAAO,GAEtB,IAAI94D,GAA2D+6D,EAAI/6D,UACnEA,GAAWg7D,YAAc,EACzB5/D,MAAKy/D,aAAar8D,KAAKwB,EACvB+6D,GAAI/6D,WAAWC,cAAgB,CAC/B7E,MAAKu8D,cAAcn5D,KAAKu8D,GAIlBL,GAAAp9D,UAAA29D,oBAAP,WAEE,MAAO,IAAIl2B,GAAAltC,QAAkB,GAAI2iE,GAAA3iE,QAAUuD,KAAKu9D,iBAI3C+B,GAAAp9D,UAAAs7D,uBAAP,SAA8B19D,GAE7B,GAAI2+B,GAAgCz+B,KAAY,OAChD,IAAI8/D,GAAqBrhC,EAAMuI,SAC/B,IAAI9hB,GAAellB,KAAK+/D,QAAQx6C,aAGhC,KAAK,GAAI7qB,GAAW,EAAGA,EAAI,IAAKA,EAAG,CAClCsF,KAAKy/D,aAAa/kE,GAAGkjE,IAAMkC,CAC3B9/D,MAAKu8D,cAAc7hE,GAAG4W,UAAUwH,OAAOoM,EAAIriB,EAAGqiB,EAAIniB,EAAGmiB,EAAIxN,EACzD1X,MAAKu/D,aAAa7kE,GAAK,MAKlB4kE,GAAAp9D,UAAA66D,cAAP,SAAqBl9D,EAAasV,EAA0BvV,GAE3D,IAAK,GAAIlF,GAAW,EAAGA,EAAI,IAAKA,EAC/B,GAAIsF,KAAKu/D,aAAa7kE,GACrBkF,EAASogE,SAAShgE,KAAKu8D,cAAc7hE,GAAImF,EAAOsV,EAAO8qD,UAAW,KAAMvlE,GAE5E,OAAA4kE,IAxEkCD,EAAA5iE,QA0ElCuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M1Fy+dAzI,GAAQ0B,Q0Fz+dO6iE,I1F2+dZY,kCAAkC54D,UAAU6iB,oCAAoC,oCAAoCg2C,8DAA8D,8DAA8Dr1B,gDAAgD,kDAAkDxb,sEAAsE,SAASr1B,EAAQkB,EAAOJ,GACnb,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,I2FrkenF,IAAAmvD,GAAAr9D,EAAyB,gCACzB,IAAA6b,GAAA7b,EAA0B,gCAC1B,IAAA8b,GAAA9b,EAA6B,qCAG7B,IAAA6hE,GAAA7hE,EAAmC,mDAInC,IAAAsF,GAAAtF,EAAwB,oCAExB,IAAAolE,GAAAplE,EAAgC,8DAChC,IAAAm2D,GAAAn2D,EAA+B,8CAE/B,IAAAmmE,GAAA,SAAA53D,GAAsCV,EAAAs4D,EAAA53D,EAcrC,SAAA43D,KAEC53D,EAAAxN,KAAAgF,KAXMA,MAAAqgE,cAAuB,GAGvBrgE,MAAAi/D,OAAgB,EAUtBj/D,MAAKk9D,eACLl9D,MAAKi+D,yBAA2B,GAAInC,GAAAr/D,OACpCuD,MAAKo9D,qBAAuB,GAAI79D,GAAA9C,QAAOuD,KAAKi+D,yBAC5Cj+D,MAAK++D,iBACL/+D,MAAK+9D,SAAW,GAAIjoD,GAAArZ,QAGrBuF,OAAAC,eAAWm+D,EAAAl+D,UAAA,Q3FojeJC,I2FpjeP,WAEC,MAAOnC,MAAKi/D,Q3FqjeN17D,I2FljeP,SAAgBC,GAEfxD,KAAKi/D,OAASz7D,G3FmjeRnB,WAAY,KACZC,aAAc,M2FjjerBN,QAAAC,eAAWm+D,EAAAl+D,UAAA,e3FojeJC,I2FpjeP,WAEC,MAAOnC,MAAKqgE,e3FqjeN98D,I2FljeP,SAAuBC,GAEtBxD,KAAKqgE,cAAgB78D,G3FmjefnB,WAAY,KACZC,aAAc,M2FhjerBN,QAAAC,eAAWm+D,EAAAl+D,UAAA,oB3FojeJC,I2FpjeP,WAEC,MAAOnC,MAAKo9D,qBAAqBnxC,gB3Fqje3B5pB,WAAY,KACZC,aAAc,M2FljerBN,QAAAC,eAAWm+D,EAAAl+D,UAAA,S3FsjeJC,I2FtjeP,WAEC,MAAOnC,MAAKsgE,OAAStgE,KAAKugE,Q3FujepBl+D,WAAY,KACZC,aAAc,M2Frjed89D,GAAAl+D,UAAAs+D,aAAP,SAAoBC,GAEnB,GAAIzgE,KAAK0gE,WAAaD,EACrB,MAEDj4D,GAAAtG,UAAMs+D,aAAYxlE,KAAAgF,KAACygE,EAEnB,IAAIzgE,KAAK0gE,UAAW,CACnB1gE,KAAK2gE,kBAAoB,IACzB3gE,MAAKu9D,eAAiBkD,EAASpD,QAAQ7zC,KAAKtlB,UACtC,CACNlE,KAAK2gE,kBAAoB,OAIpBP,GAAAl+D,UAAA29D,oBAAP,WAEC,MAAO,IAAIzP,GAAA3zD,QAAgB,GAAI66D,GAAA76D,QAAQuD,KAAKu9D,eAAgBv9D,KAAKu9D,iBAI3D6C,GAAAl+D,UAAA66D,cAAP,SAAqBl9D,EAAasV,EAAwBvV,GAEzDA,EAASq9D,WAAaj9D,KAAKk9D,YAC3Bt9D,GAASogE,SAAShgE,KAAKo9D,qBAAsBv9D,EAAOsV,EAAOkoD,SAIrD+C,GAAAl+D,UAAAg8D,kBAAP,SAAyBp+D,GAExB,GAAI8gE,GAAoC5gE,KAAKo9D,qBAAqByD,aAClE,IAAIC,GAAmChhE,EAAO+gE,aAC9C7gE,MAAKk9D,aAAajiE,OAAS,CAE3B+E,MAAKk9D,aAAa,GAAK0D,EAAmB,EAC1C5gE,MAAKk9D,aAAa,GAAK0D,EAAmB,EAC1C5gE,MAAKk9D,aAAa,GAAK0D,EAAmB,EAC1C5gE,MAAKk9D,aAAa,GAAK0D,EAAmB,EAE1C,IAAIniC,GAA4Cz+B,KAAK+/D,OACrD,IAAIgB,GAAetiC,EAAMuiC,cACzB,IAAIC,GAAcF,EAAIl+D,CACtB,IAAIq+D,GAAcH,EAAIh+D,CACtB,IAAIo+D,GAAcJ,EAAIrpD,CACtB,IAAIolB,GAAW,CACf,KAAK,GAAIpiC,GAAW,EAAGA,EAAI,IAAKA,EAAG,CAClC,GAAI4hB,GAAgBwkD,EAAkBpmE,EACtC,IAAI4hB,EAAM7hB,EAAEwmE,EAAO3kD,EAAMtU,EAAEk5D,EAAO5kD,EAAMC,EAAE4kD,EAAO,EAChDnhE,KAAKk9D,aAAapgC,KAAOxgB,GAKrB8jD,GAAAl+D,UAAAs7D,uBAAP,SAA8B19D,GAE7BE,KAAK69D,oCAAoC/9D,EAAQA,EAAO8E,WAAWk5D,eAAgB99D,KAAK+9D,SACxF/9D,MAAKi+D,yBAAyBzgD,OAASxd,KAAK+9D,QAC5C/9D,MAAKk+D,kBAAkBp+D,GAGjBsgE,GAAAl+D,UAAA27D,oCAAP,SAA2C/9D,EAAeshE,EAAuB5jD,GAEhF,GAAIS,GAAmBlI,EAAAtZ,QAAcuxB,kBACrC,IAAI+yC,EACJ,IAAIl+D,GAAUE,EAAU2U,CACxB,IAAIqX,GAAaC,CACjB,IAAIE,GAAaC,CACjB,IAAIz0B,EAEJ,IAAI+jC,GAA4Cz+B,KAAK+/D,OACrDgB,GAAMtiC,EAAMuiC,cACZhhE,MAAKo9D,qBAAqB9rD,UAAUuC,SAAW7T,KAAK+/D,QAAQtiD,cAC5D5a,GAAI6W,KAAKkzC,OAAO9sD,EAAO+C,EAAIk+D,EAAIl+D,EAAE7C,KAAKqgE,eAAergE,KAAKi/D,QAAQj/D,KAAKi/D,MACvEl8D,GAAI2W,KAAKkzC,OAAO9sD,EAAOiD,EAAIg+D,EAAIh+D,EAAE/C,KAAKqgE,eAAergE,KAAKi/D,QAAQj/D,KAAKi/D,MACvEvnD,GAAIgC,KAAKkzC,OAAO9sD,EAAO4X,EAAIqpD,EAAIrpD,EAAE1X,KAAKqgE,eAAergE,KAAKi/D,QAAQj/D,KAAKi/D,MACvEj/D,MAAKo9D,qBAAqBv6D,EAAIA,CAC9B7C,MAAKo9D,qBAAqBr6D,EAAIA,CAC9B/C,MAAKo9D,qBAAqB1lD,EAAIA,CAE9B1X,MAAK+9D,SAASj3C,SAAS9mB,KAAKo9D,qBAAqB16D,sBACjD1C,MAAK+9D,SAASjvC,QAAQhvB,EAAO2d,eAC7Bzd,MAAK+9D,SAAS5vC,iBAAiBizC,EAASphE,KAAK++D,eAE7ChwC,GAAOG,EAAOlvB,KAAK++D,eAAe,EAClC/vC,GAAOG,EAAOnvB,KAAK++D,eAAe,EAClC/+D,MAAKsgE,OAAStgE,KAAK++D,eAAe,EAElCrkE,GAAI,CACJ,OAAOA,EAAI,GAAI,CACdmI,EAAI7C,KAAK++D,eAAerkE,EACxBqI,GAAI/C,KAAK++D,eAAerkE,EAAI,EAC5Bgd,GAAI1X,KAAK++D,eAAerkE,EAAI,EAC5B,IAAImI,EAAIksB,EACPA,EAAOlsB,CACR,IAAIA,EAAIqsB,EACPA,EAAOrsB,CACR,IAAIE,EAAIisB,EACPA,EAAOjsB,CACR,IAAIA,EAAIosB,EACPA,EAAOpsB,CACR,IAAI2U,EAAI1X,KAAKsgE,OACZtgE,KAAKsgE,OAAS5oD,CACfhd,IAAK,EAGNsF,KAAKugE,OAAS,CAEd,IAAI5xB,GAAWzf,EAAOH,CACtB,IAAIiwC,GAAW7vC,EAAOH,CACtB,IAAIjnB,GAAW,GAAG/H,KAAKsgE,OAAStgE,KAAKugE,OAErC,IAAIxxC,EAAO,EACVA,GAAQ/uB,KAAKi/D,MAEd,IAAIjwC,EAAO,EACVA,GAAQhvB,KAAKi/D,MAEdlwC,GAAOrV,KAAKkzC,MAAM79B,EAAK/uB,KAAKi/D,QAAQj/D,KAAKi/D,MACzCjwC,GAAOtV,KAAKkzC,MAAM59B,EAAKhvB,KAAKi/D,QAAQj/D,KAAKi/D,MAEzC,IAAIC,GAAe,EAAEl/D,KAAKi/D,MAC1BtwB,GAAIj1B,KAAKkzC,MAAMje,EAAEuwB,EAAQ,GAAGA,CAC5BF,GAAItlD,KAAKkzC,MAAMoS,EAAEE,EAAQ,GAAGA,CAE5BhwC,GAAOH,EAAO4f,CACdxf,GAAOH,EAAOgwC,CAEdrwB,GAAI,EAAEA,CACNqwB,GAAI,EAAEA,CAEN/gD,GAAI,GAAK,EAAE0wB,CACX1wB,GAAI,GAAK,EAAE+gD,CACX/gD,GAAI,IAAMlW,CACVkW,GAAI,MAAQiR,EAAOH,GAAM4f,CACzB1wB,GAAI,MAAQkR,EAAOH,GAAMgwC,CACzB/gD,GAAI,KAAOje,KAAKugE,OAAOx4D,CACvBkW,GAAI,IAAM,CACVA,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,CAElFT,GAAOqR,gBAAgB5Q,GAEzB,OAAAmiD,IAtMsCf,EAAA5iE,QAwMtCuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M3F4heAzI,GAAQ0B,Q2F5heO2jE,I3F8heZ9lD,gCAAgChT,UAAUiT,qCAAqCjT,UAAUswD,gCAAgCtwD,UAAU63D,mDAAmD73D,UAAU6iB,oCAAoC,oCAAoCg2C,8DAA8D,8DAA8DtO,8CAA8C,gDAAgDwP,0EAA0E,SAASpnE,EAAQkB,EAAOJ,GACvkB,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,I4FxvenF,IAAA+kB,GAAAjzB,EAAqC,qEAErC,IAAAqnE,GAAA,SAAA94D,GAA0CV,EAAAw5D,EAAA94D,EAIzC,SAAA84D,GAAYC,GAAA,GAAAA,QAAA,GAAyB,CAAzBA,EAAA,GAEX/4D,EAAAxN,KAAAgF,KAEAA,MAAKuhE,cAAgBA,EAMtBv/D,OAAAC,eAAWq/D,EAAAp/D,UAAA,iB5FsveJC,I4FtveP,WAEC,MAAOnC,MAAKwhE,gB5FuveNj+D,I4FpveP,SAAyBC,GAExB,GAAIA,EAAQ,EACXA,EAAQ,MAAQ,IAAIA,EAAQ,EAC5BA,EAAQ,CAETxD,MAAKwhE,eAAiBh+D,G5FqvehBnB,WAAY,KACZC,aAAc,M4Fnvedg/D,GAAAp/D,UAAAs7D,uBAAP,SAA8B19D,GAE7B,GAAIshE,GAAwBthE,EAAO8E,WAAWk5D,cAE9C,KAAK,GAAIpjE,GAAmB,EAAGA,EAAI,KAAMA,EAAG,CAC3C,GAAIwL,GAAWk7D,EAAQ1mE,EACvBsF,MAAK++D,eAAerkE,GAAKwL,CACzBlG,MAAK++D,eAAerkE,EAAI,IAAMwL,GAAKk7D,EAAQ1mE,EAAI,IAAMwL,GAAGlG,KAAKwhE,eAG9DxhE,KAAK69D,oCAAoC/9D,EAAQE,KAAK++D,eAAgB/+D,KAAK+9D,SAC3E/9D,MAAKi+D,yBAAyBzgD,OAASxd,KAAK+9D,SAE9C,OAAAuD,IAzC0Cp0C,EAAAzwB,QA2C1CuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M5FmveAzI,GAAQ0B,Q4FnveO6kE,I5FqveZhyC,qEAAqE,uEAAuE6wC,+DAA+D,SAASlmE,EAAQkB,EAAOJ,GACtO,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,I6FxyenF,IAAAkY,GAAApmB,EAAkC,6CAClC,IAAAqO,GAAArO,EAA0B,oCAQ1B,IAAAwnE,GAAA,SAAAj5D,GAA+BV,EAAA25D,EAAAj5D,EAA/B,SAAAi5D,KAA+Bj5D,EAAA0kD,MAAAltD,KAAA2wB,UAGvB3wB,MAAAu9D,eAAwB,IAGvBv9D,MAAA0hE,mBAA6B,KAGrC1/D,OAAAC,eAAWw/D,EAAAv/D,UAAA,qB7FkyeJC,I6FlyeP,WAEC,MAAOnC,MAAK0hE,oB7FmyeNn+D,I6FhyeP,SAA6BC,GAE5BxD,KAAK0hE,mBAAqBl+D,G7FiyepBnB,WAAY,KACZC,aAAc,M6F/xedm/D,GAAAv/D,UAAAy/D,cAAP,WAEC3hE,KAAK4hE,iBAAmB,KAGlBH,GAAAv/D,UAAAs+D,aAAP,SAAoBC,GAEnB,GAAIzgE,KAAK0gE,YAAc1gE,KAAK2gE,kBAC3B3gE,KAAK0gE,UAAUj9D,SAEhBzD,MAAK0gE,UAAYD,EAGlBz+D,QAAAC,eAAWw/D,EAAAv/D,UAAA,S7F6xeJC,I6F7xeP,WAEC,MAAOnC,MAAK+/D,S7F8xeNx8D,I6F3xeP,SAAiBC,GAEhBxD,KAAK+/D,QAAUv8D,G7F4xeTnB,WAAY,KACZC,aAAc,M6F1xerBN,QAAAC,eAAWw/D,EAAAv/D,UAAA,Y7F6xeJC,I6F7xeP,WAEC,IAAKnC,KAAK0gE,UACT1gE,KAAK0gE,UAAY1gE,KAAK6/D,qBAEvB,OAAO7/D,MAAK0gE,W7F6xeNr+D,WAAY,KACZC,aAAc,M6F3xerBN,QAAAC,eAAWw/D,EAAAv/D,UAAA,gB7F8xeJC,I6F9xeP,WAEC,MAAOnC,MAAKu9D,gB7F+xeNh6D,I6F5xeP,SAAwBC,GAEvB,GAAIA,GAASxD,KAAKu9D,eACjB,MAEDv9D,MAAK68D,kBAAkBr5D,I7F4xejBnB,WAAY,KACZC,aAAc,M6F1xedm/D,GAAAv/D,UAAAuB,QAAP,WAEC,GAAIzD,KAAK0gE,YAAc1gE,KAAK2gE,kBAC3B3gE,KAAK0gE,UAAUj9D,SAEhBzD,MAAK0gE,UAAY,KAGXe,GAAAv/D,UAAA29D,oBAAP,WAEC,KAAM,IAAIx/C,GAAA5jB,QAGJglE,GAAAv/D,UAAA2/D,gBAAP,SAAuB/hE,EAAeD,EAAaD,GAElDI,KAAK4hE,iBAAmB,KAExB5hE,MAAKw9D,uBAAuB19D,EAE5B,KAAKE,KAAK0gE,UACT1gE,KAAK0gE,UAAY1gE,KAAK6/D,qBAEvB7/D,MAAK+8D,cAAcl9D,EAAOG,KAAK0gE,UAAW9gE,GAGpC6hE,GAAAv/D,UAAAs7D,uBAAP,SAA8B19D,GAE7B,KAAM,IAAIugB,GAAA5jB,QAGJglE,GAAAv/D,UAAA66D,cAAP,SAAqBl9D,EAAasV,EAAoBvV,GAErD,KAAM,IAAIygB,GAAA5jB,QAGJglE,GAAAv/D,UAAA26D,kBAAP,SAAyBr5D,GAExBxD,KAAKu9D,eAAiB/5D,CAEtB,IAAIxD,KAAK2gE,kBAAmB,CAC3B,KAAM/lE,OAAM,2DACN,IAAIoF,KAAK0gE,UAAW,CAC1B1gE,KAAK0gE,UAAUj9D,SACfzD,MAAK0gE,UAAY,MAGpB,OAAAe,IA7G+Bn5D,EAAA7L,QA+G/BuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M7F8weAzI,GAAQ0B,Q6F9weOglE,I7FgxeZjhD,6CAA6ClZ,UAAUqB,oCAAoCrB,YAAY5I,gCAAgC,SAASzE,EAAQkB,EAAOJ,GAClK,Y8Fz4eA,IAAA4/D,GAAA1gE,EAA6C,4DAArCc,GAAAy+D,gBAAAmB,EAAAl+D,OACR,IAAAqlE,GAAA7nE,EAA8C,8DAAtCc,GAAA6/D,kBAAAkH,EAAArlE,OACR,IAAAslE,GAAA9nE,EAAgD,iEAAxCc,GAAAghE,oBAAAgG,EAAAtlE,OACR,IAAAqqC,GAAA7sC,EAAgD,iEAAxCc,GAAAukE,oBAAAx4B,EAAArqC,OACR,IAAAywB,GAAAjzB,EAAmD,qEAA3Cc,GAAAqlE,wBAAAlzC,EAAAzwB,OACR,IAAAulE,GAAA/nE,EAAsD,yEAA9Cc,GAAAumE,4BAAAU,EAAAvlE,OACR,IAAA4iE,GAAAplE,EAA6C,8DAArCc,GAAA0mE,iBAAApC,EAAA5iE,OACR,IAAA0zD,GAAAl2D,EAA2C,6CAAnCc,GAAAy8D,cAAArH,EAAA1zD,OACR,IAAAwlE,GAAAhoE,EAA0C,4CAAlCc,GAAAg9D,aAAAkK,EAAAxlE,OACR,IAAA86D,GAAAt9D,EAA0C,4CAAlCc,GAAAo9D,aAAAZ,EAAA96D,U9Fs5eLm1D,6CAA6C,6CAA6CkG,4CAA4C,4CAA4CD,4CAA4C,4CAA4C0B,4DAA4D,4DAA4DmB,8DAA8D,8DAA8DmB,iEAAiE,iEAAiEp0B,iEAAiE,iEAAiEnY,qEAAqE,qEAAqE+xC,yEAAyE,yEAAyElB,8DAA8D,gEAAgEj4B,+CAA+C,SAASjuC,EAAQkB,EAAOJ,GACtuC,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,I+Fl6enF,IAAA+5D,GAAAjoE,EAA0B,wCAC1B,IAAAkoE,GAAAloE,EAA6B,6CAM7B,IAAAmoE,GAAA,SAAA55D,GAA6BV,EAAAs6D,EAAA55D,EAE5B,SAAA45D,KAEC55D,EAAAxN,KAAAgF,KAEAA,MAAKqiE,UAAY,GAAIH,GAAAzlE,QAEvB,MAAA2lE,IAR6BD,EAAA1lE,QAU7BuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M/Fi6eAzI,GAAQ0B,Q+Fj6eO2lE,I/Fm6eZE,wCAAwC,wCAAwCC,6CAA6C,+CAA+CC,2CAA2C,SAASvoE,EAAQkB,EAAOJ,GAClP,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IgG37enF,IAAAs6D,GAAAxoE,EAA2B,0CAM3B,IAAA2C,GAAA,SAAA4L,GAAyBV,EAAAlL,EAAA4L,EAAzB,SAAA5L,KAAyB4L,EAAA0kD,MAAAltD,KAAA2wB,WAKjB/zB,EAAAsF,UAAAonC,gBAAP,SAAuBngB,IAIxB,OAAAvsB,IATyB6lE,EAAAhmE,QAWzBuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MhG87eAzI,GAAQ0B,QgG97eOG,IhGg8eZ8lE,0CAA0C,4CAA4CC,qDAAqD,SAAS1oE,EAAQkB,EAAOJ,GACtK,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IiGt9enF,IAAAs6D,GAAAxoE,EAA2B,0CAM3B,IAAA6C,GAAA,SAAA0L,GAAmCV,EAAAhL,EAAA0L,EAAnC,SAAA1L,KAAmC0L,EAAA0kD,MAAAltD,KAAA2wB,WAK3B7zB,EAAAoF,UAAAonC,gBAAP,SAAuBngB,GAEtB,GAAIA,EAAUy5C,UAAU5iE,MACvBmpB,EAAU05C,sBAAsB7iE,KAAK8iE,gBAOhChmE,GAAAoF,UAAA6gE,gBAAP,WAEC,MAAO,OAET,OAAAjmE,IAnBmC2lE,EAAAhmE,QAqBnCuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MjGu9eAzI,GAAQ0B,QiGv9eOK,IjGy9eZ4lE,0CAA0C,4CAA4CM,kDAAkD,SAAS/oE,EAAQkB,EAAOJ,GACnK,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IkGv/enF,IAAA86D,GAAAhpE,EAA+B,0CAM/B,IAAAinB,GAAAjnB,EAAoC,mDACpC,IAAAknB,GAAAlnB,EAA8B,2CAE9B,IAAAmnB,GAAAnnB,EAA2B,uCAC3B,IAAAonB,GAAApnB,EAA2B,uCAI3B,IAAAwF,GAAAxF,EAAiC,+CAMjC,IAAAipE,GAAA,SAAA16D,GAAgCV,EAAAo7D,EAAA16D,EAoC/B,SAAA06D,GAAYzgE,EAA6B0gE,GApC1C,GAAApjE,GAAAC,IAsCEwI,GAAAxN,KAAAgF,KAAMyC,EAAe0gE,EApCfnjE,MAAAojE,YAAqB,CAErBpjE,MAAAqjE,iBAA2B,KAO1BrjE,MAAAsjE,aAAuB,IA6B9BtjE,MAAKujE,qCAAuC,SAAC1iE,GAA6B,MAAAd,GAAKyjE,6BAA6B3iE,GAE5Gb,MAAK8iE,eAAiBrgE,CACtBzC,MAAK8iE,eAAej/D,iBAAiBpE,EAAAhD,QAAmBsgC,4BAA6B/8B,KAAKujE,qCAE1FvjE,MAAKkoB,YAAcloB,KAAK8iE,eAAezrC,WAzBxCr1B,OAAAC,eAAWihE,EAAAhhE,UAAA,gBlGw+eJC,IkGx+eP,WAEC,MAAOnC,MAAK8iE,eAAeW,clGy+erBphE,WAAY,KACZC,aAAc,MkGp+erBN,QAAAC,eAAWihE,EAAAhhE,UAAA,UlG0+eJC,IkG1+eP,WAEC,GAAInC,KAAKsjE,aACRtjE,KAAK0jE,eAEN,OAAO1jE,MAAK03B,SlG0+eNr1B,WAAY,KACZC,aAAc,MkGx9ed4gE,GAAAhhE,UAAA6gE,gBAAP,WAEC,MAAO/iE,MAAK8iE,eAAepuC,aAGrBwuC,GAAAhhE,UAAAyhE,QAAP,SAAe9iE,GAEd2H,EAAAtG,UAAMyhE,QAAO3oE,KAAAgF,KAACa,EAEdb,MAAK8iE,eAAep/D,oBAAoBjE,EAAAhD,QAAmBsgC,4BAA6B/8B,KAAKujE,qCAC7FvjE,MAAK8iE,eAAiB,IAEtB,IAAI9iE,KAAK03B,QACR13B,KAAK03B,QAAQj0B,SAEdzD,MAAK03B,QAAU,KAGTwrC,GAAAhhE,UAAA0hE,aAAP,SAAoB/iE,GAEnB2H,EAAAtG,UAAM0hE,aAAY5oE,KAAAgF,KAACa,EAEnB,IAAIb,KAAKkoB,aAAeloB,KAAK8iE,eAAezrC,WAAY,CACvDr3B,KAAKkoB,YAAcloB,KAAK8iE,eAAezrC,UACvCr3B,MAAKsjE,aAAe,MAUfJ,GAAAhhE,UAAA+Z,YAAP,SAAmBC,EAAuBC,GAEzC,MAAO,MAOD+mD,GAAAhhE,UAAA2hE,kBAAP,SAAyBC,EAAsBC,GAE9C,MAAO,MAMDb,GAAAhhE,UAAAonC,gBAAP,SAAuBngB,IAKhB+5C,GAAAhhE,UAAAshE,6BAAP,SAAoC3iE,IAK5BqiE,GAAAhhE,UAAAwhE,cAAR,WAEC,GAAI1jE,KAAK03B,QACR13B,KAAK03B,QAAQj0B,SAEd,IAAIzD,KAAKkoB,aAAe9G,EAAA3kB,QAAWmkB,iBAClC5gB,KAAK03B,QAAU,GAAIxW,GAAAzkB,QAAuBuD,KAAK8iE,oBAC3C,IAAI9iE,KAAKkoB,aAAe9G,EAAA3kB,QAAWkkB,OACvC3gB,KAAK03B,QAAU,GAAIvW,GAAA1kB,QAAeuD,KAAK8iE,oBACnC,IAAI9iE,KAAKkoB,aAAe9G,EAAA3kB,QAAWokB,KACvC7gB,KAAK03B,QAAU,GAAIrW,GAAA5kB,OAEpBuD,MAAKsjE,aAAe,MAEtB,OAAAJ,IA/HgCD,EAAAxmE,QAiIhCuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MlGy8eAzI,GAAQ0B,QkGz8eOymE,IlG28eZc,0CAA0C18D,UAAUyT,mDAAmD,mDAAmDyE,2CAA2C,2CAA2CiB,uCAAuC,uCAAuCK,uCAAuC,uCAAuC+E,+CAA+C;GAAiD68C,2CAA2C,SAASzoE,EAAQkB,EAAOJ,GACljB,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,ImGrmfnF,IAAA6N,GAAA/b,EAA0B,gCAM1B,IAAAgqE,GAAAhqE,EAAgC,iDAMhC,IAAA+C,GAAA,SAAAwL,GAAyBV,EAAA9K,EAAAwL,EAQxB,SAAAxL,GAAYyF,EAA6BxG,GAExCuM,EAAAxN,KAAAgF,KAAMyC,EAAexG,EARf+D,MAAAojE,YAAqB,CAGpBpjE,MAAAkkE,cAAyB,GAAIluD,GAAAvZ,OAOpCuD,MAAKmkE,WAAaloE,EAGZe,EAAAkF,UAAAyhE,QAAP,SAAe9iE,GAEd2H,EAAAtG,UAAMyhE,QAAO3oE,KAAAgF,KAACa,EAEdb,MAAKmkE,WAAa,KASZnnE,GAAAkF,UAAA+Z,YAAP,SAAmBC,EAAuBC,GAEzC,IAAKnc,KAAK8iE,eAAejnC,cACxB,MAAO,MAER,OAAO,MAQD7+B,GAAAkF,UAAA2hE,kBAAP,SAAyBO,EAA4BC,GAEpD,IAAKrkE,KAAK8iE,eAAejnC,gBAAkB77B,KAAKskE,oBAAoBF,EAAmBC,EAAoBrkE,KAAK8iE,eAAe7mC,mBAC9H,MAAO,MAER,IAAIlT,GAAoC/oB,KAAK8iE,eAAeyB,kBAC5Dx7C,GAAiB+6C,YAAc9jE,KAAK8iE,eAAepgE,sBAAsBC,gBAAgByhE,EACzFr7C,GAAiBg7C,aAAe/jE,KAAK8iE,eAAepgE,sBAAsBikB,qBAAqB09C,EAE/F,KAAKt7C,EAAiB09B,OACrB19B,EAAiB09B,OAAS,GAAIzwC,GAAAvZ,OAE/B,IAAImK,GAA0B5G,KAAKzE,OAAOqhB,gBAAgBmM,EAAiB+6C,YAAa/6C,EAAiBg7C,aAAch7C,EAAiB09B,OAExI,IAAI7/C,EAAmB,EACtB,MAAO,MAERmiB,GAAiBniB,iBAAmBA,CACpCmiB,GAAiBq7C,kBAAoBA,CACrCr7C,GAAiBs7C,mBAAqBA,CACtCt7C,GAAiBy7C,wBAA0B59D,GAAoB,CAE/D,OAAO,MAMD5J,GAAAkF,UAAAonC,gBAAP,SAAuBngB,GAEtB,GAAIA,EAAUy5C,UAAU5iE,MACvBmpB,EAAUs7C,YAAYzkE,KAAK8iE,gBAGtB9lE,GAAAkF,UAAAshE,6BAAP,SAAoC3iE,GAEnCb,KAAKzE,OAAOglB,YAEZvgB,MAAKmkE,WAAWO,eAAe1kE,MAGxBhD,GAAAkF,UAAAoiE,oBAAR,SAA4BF,EAA4BC,EAA6B5yD,GAGpF,GAAIA,GAAS,KAAM,CAClBzR,KAAKkkE,cAAcrhE,EAAIuhE,EAAkBvhE,EAAIwhE,EAAmBxhE,EAAE,GAClE7C,MAAKkkE,cAAcnhE,EAAIqhE,EAAkBrhE,EAAIshE,EAAmBthE,EAAE,GAClE,IAAI45B,GAAmBlrB,EAAMxW,MAC7B,IAAI0pE,EACJ,IAAIh0D,EACJ,IAAIi0D,EACJ,KAAK,GAAIlqE,GAAW,EAAGA,EAAIiiC,EAAWjiC,IAAK,CAC1CiqE,EAAWlzD,EAAM/W,EACjBiW,GAAcg0D,EAAS1pE,MACvB2pE,GAAW,KACX,KAAK,GAAI9nC,GAAW,EAAGA,EAAInsB,EAAamsB,IAAK,CAC5C,GAAI6nC,EAAS7nC,GAAGlK,aAAa5yB,KAAKkkE,cAAcrhE,EAAG7C,KAAKkkE,cAAcnhE,EAAG,KAAM,MAAO,CACrF6hE,EAAW,IACX,QAIF,IAAKA,EACJ,MAAO,QAIV,MAAO,MAET,OAAA5nE,IA9GyBinE,EAAAxnE,QAgHzBuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MnGmkfAzI,GAAQ0B,QmGnkfOO,InGqkfZwd,gCAAgClT,UAAU07D,iDAAiD,mDAAmD6B,+CAA+C,SAAS5qE,EAAQkB,EAAOJ,GACxN,kBAEM+pE,mDAAmD,SAAS7qE,EAAQkB,EAAOJ,GACjF,kBAEMgqE,iDAAiD,SAAS9qE,EAAQkB,EAAOJ,GAC/E,kBAEMiqE,sCAAsC,SAAS/qE,EAAQkB,EAAOJ,GACpE,kBAEMkqE,+CAA+C,SAAShrE,EAAQkB,EAAOJ,GAC7E,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IoGptfnF,IAAAs6D,GAAAxoE,EAA2B,0CAM3B,IAAAsD,GAAA,SAAAiL,GAA6BV,EAAAvK,EAAAiL,EAA7B,SAAAjL,KAA6BiL,EAAA0kD,MAAAltD,KAAA2wB,WAKrBpzB,EAAA2E,UAAAonC,gBAAP,SAAuBngB,GAEtB,GAAIA,EAAUy5C,UAAU5iE,MACvBmpB,EAAU+7C,gBAAgBllE,KAAK8iE,gBAO1BvlE,GAAA2E,UAAA6gE,gBAAP,WAEC,MAAO,OAET,OAAAxlE,IAnB6BklE,EAAAhmE,QAqB7BuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MpGqtfAzI,GAAQ0B,QoGrtfOc,IpGutfZmlE,0CAA0C,4CAA4CJ,yCAAyC,SAASroE,EAAQkB,EAAOJ,GAC1J,YqGzufA,IAAAsmB,GAAApnB,EAAuB,uCAKvB,IAAAkrE,GAAA,WA+BC,QAAAA,KA7BQnlE,KAAA03B,QAA6B,GAAIrW,GAAA5kB,OAClCuD,MAAAolE,aAA4B,GAAIzkE,MAChCX,MAAAqlE,gBAAyB,CAMzBrlE,MAAAojE,YAAqB,EAI5BphE,OAAAC,eAAWkjE,EAAAjjE,UAAA,gBrGsufJC,IqGtufP,WAEC,MAAO,QrGuufDE,WAAY,KACZC,aAAc,MqGlufrBN,QAAAC,eAAWkjE,EAAAjjE,UAAA,UrGwufJC,IqGxufP,WAEC,MAAOnC,MAAK03B,SrGyufNr1B,WAAY,KACZC,aAAc,MqGxtfd6iE,GAAAjjE,UAAA+Z,YAAP,SAAmBC,EAAuBC,GAEzC,MAAO,MASDgpD,GAAAjjE,UAAA2hE,kBAAP,SAAyBC,EAAsBC,GAE9C,MAAO,MAODoB,GAAAjjE,UAAA6gE,gBAAP,WAEC,MAAO,MAGDoC,GAAAjjE,UAAAuB,QAAP,WAECzD,KAAKorD,OAAS,IACdprD,MAAKolE,aAAe,KAOdD,GAAAjjE,UAAAonC,gBAAP,SAAuBngB,GAEtB,GAAInpB,KAAKojE,aAAe,EACvB,MAED,IAAIj6C,EAAUy5C,UAAU5iE,MAAO,CAC9B,IAAK,GAAItF,GAAW,EAAGA,EAAIsF,KAAKqlE,gBAAiB3qE,IAChDsF,KAAKolE,aAAa1qE,GAAG4uC,gBAAgBngB,IASjCg8C,GAAAjjE,UAAAojE,SAAP,SAAgBC,GAEfA,EAAKna,OAASprD,IACdA,MAAKojE,aAAemC,EAAKnC,WACzBpjE,MAAKolE,aAAcplE,KAAKqlE,mBAAsBE,CAE9C,IAAInC,GAAqBmC,EAAKnC,WAC9BmC,GAAOvlE,IAEP,GAAG,CACFulE,EAAKnC,aAAeA,SACXmC,EAAOA,EAAKna,SAAW,MAQ3B+Z,GAAAjjE,UAAAsjE,YAAP,SAAmBD,GAElB,GAAIv6D,GAAehL,KAAKolE,aAAa32D,QAAQ82D,EAC7CvlE,MAAKolE,aAAap6D,GAAShL,KAAKolE,eAAeplE,KAAKqlE,gBACpDrlE,MAAKolE,aAAaj/B,KAElB,IAAIi9B,GAAqBmC,EAAKnC,WAC9BmC,GAAOvlE,IAEP,GAAG,CACFulE,EAAKnC,aAAeA,SACXmC,EAAOA,EAAKna,SAAW,MAEnC,OAAA+Z,KAEAnjE,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MrGgtfAzI,GAAQ0B,QqGhtfO0oE,IrGktfZrkD,uCAAuC,yCAAyCyhD,8CAA8C,SAAStoE,EAAQkB,EAAOJ,GACzJ,YsGp1fA,IAAA2B,GAAA,WAWC,QAAAA,KAPQsD,KAAAylE,iBAA0B,GAAIzjE,OAI9BhC,MAAA0lE,aAAuB,MAOxBhpE,EAAAwF,UAAAyjE,eAAP,SAAsBljE,GAErB,MAAQzC,MAAKylE,iBAAiBhjE,EAAcY,MAAQrD,KAAKylE,iBAAiBhjE,EAAcY,IAAM,GAAwB3G,GAAckpE,sBAAsBnjE,EAAciG,WAAYjG,EAAezC,OAO7LtD,GAAAwF,UAAA2jE,iBAAP,SAAwBpjE,GAEvBzC,KAAKylE,iBAAiBhjE,EAAcY,IAAM,KAGpC3G,GAAAwF,UAAA+lC,SAAP,SAAgB9e,GAEf,GAAInpB,KAAK0lE,aACR1lE,KAAK8lE,gBAEN,IAAI9lE,KAAKqiE,UAAW,CACnBriE,KAAKqiE,UAAU/4B,gBAAgBngB,IAI1BzsB,GAAAwF,UAAAwiE,eAAP,SAAsBa,GAErB,GAAIprE,GAAsB6F,KAAK+lE,YAE/B,OAAO5rE,EAAG,CACT,GAAIorE,GAAQprE,EACX,MAEDA,GAAIA,EAAE6rE,kBAGPT,EAAKS,kBAAoBhmE,KAAK+lE,YAE9B/lE,MAAK+lE,aAAeR,CACpBvlE,MAAK0lE,aAAe,KAGdhpE,GAAAwF,UAAA+jE,cAAP,SAAqBV,GAEpB,GAAIprE,EAEJ,IAAIorE,EAAKna,OAAQ,CAChBma,EAAKna,OAAOoa,YAAYD,EACxBA,GAAKna,OAAS,KAIf,GAAIma,GAAQvlE,KAAK+lE,aAAc,CAC9B/lE,KAAK+lE,aAAeR,EAAKS,sBACnB,CACN7rE,EAAI6F,KAAK+lE,YACT,OAAO5rE,GAAKA,EAAE6rE,mBAAqBT,EAClCprE,EAAIA,EAAE6rE,iBAEP,IAAI7rE,EACHA,EAAE6rE,kBAAoBT,EAAKS,kBAG7BT,EAAKS,kBAAoB,IAEzB,KAAKhmE,KAAK+lE,aACT/lE,KAAK0lE,aAAe,MAQfhpE,GAAAwF,UAAAgkE,kBAAP,SAAyBX,GAExB,MAAOvlE,MAAKqiE,UAGL3lE,GAAAwF,UAAA4jE,eAAR,WAEC,GAAIP,GAAyBvlE,KAAK+lE,YAClC,OAAOR,EAAM,CAEZA,EAAKzC,eAAelnC,kBACpB2pC,GAAOA,EAAKS,kBAIbT,EAAOvlE,KAAK+lE,YACZ,IAAII,EACJ,IAAIhsE,EACJ6F,MAAK+lE,aAAe,IACpB/lE,MAAK0lE,aAAe,KAEpB,GAAG,CACFS,EAAanmE,KAAKkmE,kBAAkBX,EAEpC,IAAIA,EAAKna,QAAU+a,EAAY,CAC9B,GAAIZ,EAAKna,OACRma,EAAKna,OAAOoa,YAAYD,EACzBY,GAAWb,SAASC,GAGrBprE,EAAIorE,EAAKS,iBACTT,GAAKS,kBAAoB,YAEhBT,EAAOprE,IAAM,MAMjBuC,GAAAwF,UAAAuC,iBAAP,SAAwBhC,GAEvB,GAAIA,EAAcu4B,SACjBh7B,KAAK0kE,eAAe1kE,KAAK2lE,eAAeljE,IAMnC/F,GAAAwF,UAAA8wB,mBAAP,SAA0BvwB,GAEzB,GAAIA,EAAcu4B,SACjBh7B,KAAKimE,cAAcjmE,KAAK2lE,eAAeljE,IAO3B/F,GAAAC,oBAAd,SAAkCypE,EAAkCC,GAEnE3pE,EAAckpE,sBAAsBS,EAAW39D,WAAa09D,EAlJ9C1pE,GAAAkpE,sBAA+B,GAAI5jE,OAoJnD,OAAAtF,KAEAsF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MtG8yfAzI,GAAQ0B,QsG9yfOC,OtGgzfT4pE,+CAA+C,SAASrsE,EAAQkB,EAAOJ,GAC7E,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IuG19fnF,IAAAs6D,GAAAxoE,EAA2B,0CAM3B,IAAAwD,GAAA,SAAA+K,GAA6BV,EAAArK,EAAA+K,EAA7B,SAAA/K,KAA6B+K,EAAA0kD,MAAAltD,KAAA2wB,WAKrBlzB,EAAAyE,UAAAonC,gBAAP,SAAuBngB,GAEtB,GAAIA,EAAUy5C,UAAU5iE,MACvBmpB,EAAUo9C,gBAAgBvmE,KAAK8iE,gBAO1BrlE,GAAAyE,UAAA6gE,gBAAP,WAEC,MAAO,OAET,OAAAtlE,IAnB6BglE,EAAAhmE,QAqB7BuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MvG29fAzI,GAAQ0B,QuG39fOgB,IvG69fZilE,0CAA0C,4CAA4C8D,+CAA+C,SAASvsE,EAAQkB,EAAOJ,GAChK,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IwG5/fnF,IAAA87D,GAAAhqE,EAAgC,iDAOhC,IAAAwsE,GAAA,SAAAj+D,GAA6BV,EAAA2+D,EAAAj+D,EAA7B,SAAAi+D,KAA6Bj+D,EAAA0kD,MAAAltD,KAAA2wB,UAErB3wB,MAAAqjE,iBAA2B,IAE1BrjE,MAAAolE,aAAwC,GAAIzkE,MAC5CX,MAAA0mE,aAA6B,GAAI/lE,MACjCX,MAAA2mE,YAAuC,GAAIhmE,OAQ5C8lE,EAAAvkE,UAAAonC,gBAAP,SAAuBngB,GAGtB,GAAInpB,KAAKojE,aAAe,EACvB,MAED,IAAI1oE,EACJ,KAAKA,EAAIsF,KAAKolE,aAAanqE,OAAS,EAAGP,GAAK,EAAGA,IAC9CsF,KAAKolE,aAAa1qE,GAAG4uC,gBAAgBngB,EAEtC,KAAKzuB,EAAIsF,KAAK2mE,YAAY1rE,OAAS,EAAGP,GAAK,EAAGA,IAC7CsF,KAAK2mE,YAAYjsE,GAAG4uC,gBAAgBngB,GAQ/Bs9C,GAAAvkE,UAAAojE,SAAP,SAAgBC,GAEfA,EAAKna,OAASprD,IAEd,IAAIulE,EAAKzC,eAAepxD,SAAU,CACjC1R,KAAK2mE,YAAYvjE,KAAKmiE,OAChB,CACN,GAAI1nD,GAAe0nD,EAAKzC,eAAejyD,QACvC,IAAI1N,GAAanD,KAAK0mE,aAAazrE,MACnC,IAAI+P,GAAe7H,CAEnB,OAAO6H,IACN,GAAIhL,KAAK0mE,aAAa17D,GAAS6S,EAC9B,KAEF7S,IAEA,IAAIA,EAAQ7H,EAAK,CAChBnD,KAAKolE,aAAa5yC,OAAOxnB,EAAO,EAAGu6D,EACnCvlE,MAAK0mE,aAAal0C,OAAOxnB,EAAO,EAAG6S,OAC7B,CACN7d,KAAKolE,aAAahiE,KAAKmiE,EACvBvlE,MAAK0mE,aAAatjE,KAAKya,IAIzB,GAAIulD,GAAqBmC,EAAKlC,iBAAoCkC,EAAMnC,YAAc,CACtFmC,GAAOvlE,IAEP,GAAG,CACFulE,EAAKnC,aAAeA,SACXmC,EAAOA,EAAKna,SAAW,MAQ3Bqb,GAAAvkE,UAAAsjE,YAAP,SAAmBD,GAElB,GAAIA,EAAKzC,eAAepxD,SAAU,CACjC1R,KAAK2mE,YAAYn0C,OAAOxyB,KAAK2mE,YAAYl4D,QAAQ82D,GAAO,OAClD,CACN,GAAIv6D,GAAehL,KAAKolE,aAAa32D,QAAQ82D,EAE7CvlE,MAAKolE,aAAa5yC,OAAOxnB,EAAO,EAChChL,MAAK0mE,aAAal0C,OAAOxnB,EAAO,GAGjC,GAAIo4D,GAAqBmC,EAAKnC,WAC9BmC,GAAOvlE,IAEP,GAAG,CACFulE,EAAKnC,aAAeA,SACXmC,EAA2BA,EAAKna,SAAW,MAEvD,OAAAqb,IA1F6BxC,EAAAxnE,QA2F7BuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MxG++fAzI,GAAQ0B,QwG/+fOgqE,IxGi/fZzD,iDAAiD,mDAAmD4D,oDAAoD,SAAS3sE,EAAQkB,EAAOJ,GACnL,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IyGplgBnF,IAAA0+D,GAAA5sE,EAA8B,8CAC9B,IAAAkoE,GAAAloE,EAA6B,6CAO7B,IAAA6sE,GAAA,SAAAt+D,GAAkCV,EAAAg/D,EAAAt+D,EAIjC,SAAAs+D,KAECt+D,EAAAxN,KAAAgF,KAEAA,MAAK+mE,oBAAsB,GAAIC,GAGzBF,EAAA5kE,UAAA+lC,SAAP,SAAgB9e,GAEf3gB,EAAAtG,UAAM+lC,SAAQjtC,KAAAgF,KAACmpB,GAST29C,GAAA5kE,UAAAgkE,kBAAP,SAAyBX,GAExB,GAAIA,EAAKlC,mBAAqBkC,EAAKzC,eAAe7mE,WAAa+D,MAAQulE,EAAKzC,eAAevnC,UAAW,CACrGv7B,KAAKqiE,UAA6BkD,CAClC,OAAO,MAGR,IAAKA,EAAKlC,kBAAoBkC,EAAKzC,eAAemE,YACjD,MAAOjnE,MAAK+mE,oBAAoBpB,eAAwCJ,EAAKzC,eAE9E,OAAO9iE,MAAK+mE,oBAAoBpB,eAAeJ,EAAKzC,eAAe1X,QAM7D0b,GAAA5kE,UAAAuC,iBAAP,SAAwBhC,GAEvB+F,EAAAtG,UAAMuC,iBAAgBzJ,KAAAgF,KAACyC,EAEvB,IAAIA,EAAcwkE,YACjBjnE,KAAK0kE,eAAe1kE,KAAK+mE,oBAAoBpB,eAAwCljE,IAMhFqkE,GAAA5kE,UAAA8wB,mBAAP,SAA0BvwB,GAEzB+F,EAAAtG,UAAM8wB,mBAAkBh4B,KAAAgF,KAACyC,EAEzB,IAAIA,EAAcwkE,YACjBjnE,KAAKimE,cAAcjmE,KAAK+mE,oBAAoBpB,eAAwCljE,IAEvF,OAAAqkE,IAxDkC3E,EAAA1lE,QA0DlCuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MzGmkgBAzI,GAAQ0B,QyGnkgBOqqE,CAMf,IAAAE,GAAA,WAAA,QAAAA,KAEShnE,KAAAylE,iBAA0B,GAAIzjE,QAQ/BglE,EAAA9kE,UAAAyjE,eAAP,SAAsBuB,GAErB,MAAQlnE,MAAKylE,iBAAiByB,EAAuB7jE,MAAQrD,KAAKylE,iBAAiByB,EAAuB7jE,IAAM,GAAIwjE,GAAApqE,QAAeyqE,EAAwBlnE,OAQrJgnE,GAAA9kE,UAAA2jE,iBAAP,SAAwBqB,SAEhBlnE,MAAKylE,iBAAiByB,EAAuB7jE,IAEtD,OAAA2jE,QzGikgBGzE,6CAA6C,6CAA6CiE,8CAA8C,gDAAgDW,2CAA2C,SAASltE,EAAQkB,EAAOJ,GAC9P,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,I0GzqgBnF,IAAAs6D,GAAAxoE,EAA2B,0CAQ3B,IAAA0D,GAAA,SAAA6K,GAAyBV,EAAAnK,EAAA6K,EAAzB,SAAA7K,KAAyB6K,EAAA0kD,MAAAltD,KAAA2wB,WAKjBhzB,EAAAuE,UAAAonC,gBAAP,SAAuBngB,GAEtB,GAAIA,EAAUy5C,UAAU5iE,MACvBmpB,EAAUi+C,YAAYpnE,KAAK8iE,gBAStBnlE,GAAAuE,UAAA+Z,YAAP,SAAmBC,EAAuBC,GAEzC,IAAKnc,KAAK8iE,eAAejnC,YACxB,MAAO,MAGR,OAAO,MAET,OAAAl+B,IAzByB8kE,EAAAhmE,QA2BzBuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M1GyqgBAzI,GAAQ0B,Q0GzqgBOkB,I1G2qgBZ+kE,0CAA0C,4CAA4C/jE,gCAAgC,SAAS1E,EAAQkB,EAAOJ,GACjJ,Y2GjtgBA,IAAA4sC,GAAA1tC,EAA4C,8CAApCc,GAAAqnE,eAAAz6B,EAAAlrC,OACR,IAAA4qE,GAAAptE,EAAyC,0CAAjCc,GAAA6B,WAAAyqE,EAAA5qE,OACR,IAAA6qE,GAAArtE,EAAgD,oDAAxCc,GAAA+B,qBAAAwqE,EAAA7qE,OACR,IAAAwnE,GAAAhqE,EAA8C,iDAAtCc,GAAAmoE,kBAAAe,EAAAxnE,OACR,IAAAgmE,GAAAxoE,EAAyC,0CAAjCc,GAAAiC,WAAAylE,EAAAhmE,OAKR,IAAA8qE,GAAAttE,EAA4C,8CAApCc,GAAAwC,eAAAgqE,EAAA9qE,OACR,IAAAylE,GAAAjoE,EAAuC,wCAA/Bc,GAAAoqE,SAAAjD,EAAAzlE,OACR,IAAA0lE,GAAAloE,EAA2C,6CAAnCc,GAAA2B,cAAAylE,EAAA1lE,OACR,IAAA+qE,GAAAvtE,EAA4C,8CAApCc,GAAA0C,eAAA+pE,EAAA/qE,OACR,IAAAoqE,GAAA5sE,EAA4C,8CAApCc,GAAA0rE,eAAAI,EAAApqE,OACR,IAAAgrE,GAAAxtE,EAAgD,mDAAxCc,GAAA+rE,oBAAAW,EAAAhrE,OACR,IAAAirE,GAAAztE,EAAyC,0CAAjCc,GAAA4C,WAAA+pE,EAAAjrE,U3G4tgBLyrC,8CAA8C,8CAA8Cs6B,0CAA0C,0CAA0CG,oDAAoD,oDAAoDK,iDAAiD,iDAAiDN,0CAA0C,0CAA0CuC,8CAA8C,8CAA8C3C,wCAAwC,wCAAwCC,6CAA6C,6CAA6C+D,8CAA8C,8CAA8CE,8CAA8C,8CAA8CI,mDAAmD,mDAAmDO,0CAA0C,4CAA4CQ,mCAAmC,SAAS1tE,EAAQkB,EAAOJ,GACtoC,kBAEM6sE,4CAA4C,SAAS3tE,EAAQkB,EAAOJ,GAC1E,kBAEM8sE,6CAA6C,SAAS5tE,EAAQkB,EAAOJ,GAC3E,Y4GlvgBA,IAAAib,GAAA/b,EAA2B,gCAC3B,IAAAo5B,GAAAp5B,EAAwB,6BAiBxB,IAAA6tE,GAAA,WASC,QAAAA,GAAYC,GAAA,GAAAA,QAAA,GAAoC,CAApCA,EAAA,MAEX/nE,KAAKgoE,sBAAwBD,EAWvBD,EAAA5lE,UAAA+mB,uBAAP,SAA8Bg/C,EAAqBxgD,EAAuBsB,GAEzEA,EAAiBw9B,WAAa,IAU9B,OAAO,OAWDuhB,GAAA5lE,UAAA6tD,sBAAP,SAA6BmY,EAAmCzgD,EAAuBsB,GAEtF,GAAI+6C,GAAuB/6C,EAAiB+6C,WAC5C,IAAIC,GAAwBh7C,EAAiBg7C,YAC7C,IAAI5pE,EACJ,IAAIguE,GAAWC,EAAWC,CAC1B,IAAIpoD,GAAWC,EAAWC,CAC1B,IAAImoD,GAAWC,EAAWC,CAC1B,IAAI1qD,GAAWC,EAAWC,CAC1B,IAAIyqD,GAAcjuE,EAAU0L,EAAUyoC,CACtC,IAAIxV,GAAYC,EAAYsvC,CAC5B,IAAIrvC,GAAYC,EAAYqvC,CAC5B,IAAIpvC,GAAYC,EAAYovC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAWC,EAAcC,EAAUC,CACvC,IAAIC,GAAaC,EAAaC,EAAaC,EAAYC,CACvD,IAAIC,IAAiC,CACrC,IAAI3pB,GAAoBx4B,EAASw4B,SAEjC,IAAI4L,GAA4Bqc,EAAiBrc,UAAU1pD,IAAI+lE,EAAiBl7B,YAChF,IAAI68B,GAAgB3B,EAAiBrc,UAAU+B,UAE/C,IAAI5T,EACJ,IAAI3Q,EACJ,IAAI6+B,EAAiBluB,QAAS,CAC7BA,EAAUkuB,EAAiBluB,QAAQ73C,IAAI+lE,EAAiBrY,YACxDxmB,GAAQ2Q,EAAQ/+C,WACV,CACNouC,EAAQ6+B,EAAiBl7B,YAG1B,IAAK,GAAIhiC,IAAe,EAAGA,GAAQq+B,EAAOr+B,IAAO,EAAG,CAEnD,GAAIgvC,EAAS,CACZmuB,EAAKnuB,EAAQhvC,IAAO6+D,CACpBzB,GAAKpuB,EAAQhvC,GAAQ,GAAG6+D,CACxBxB,GAAKruB,EAAQhvC,GAAQ,GAAG6+D,MAClB,CACN1B,EAAKn9D,GAAM6+D,CACXzB,IAAMp9D,GAAQ,GAAG6+D,CACjBxB,IAAMr9D,GAAQ,GAAG6+D,EAKlB1wC,EAAM0yB,EAAUsc,EAChB9uC,GAAMwyB,EAAUuc,EAChB7uC,GAAMsyB,EAAUwc,EAChBQ,GAAMxvC,EAAMF,CACZ6vC,GAAMzvC,EAAMJ,CAEZC,GAAMyyB,EAAUsc,EAAK,EACrB7uC,GAAMuyB,EAAUuc,EAAK,EACrB5uC,GAAMqyB,EAAUwc,EAAK,EACrBS,GAAMxvC,EAAMF,CACZ6vC,GAAMzvC,EAAMJ,CAEZ,IAAIywC,GAAU,EAAG,CAChBnB,EAAM7c,EAAUsc,EAAK,EACrBQ,GAAM9c,EAAUuc,EAAK,EACrBQ,GAAM/c,EAAUwc,EAAK,EACrBU,GAAMJ,EAAMD,CACZQ,GAAMN,EAAMF,CAGZJ,GAAKQ,EAAII,EAAMH,EAAIE,CACnBV,GAAKQ,EAAIC,EAAMH,EAAIK,CACnBV,GAAKK,EAAII,EAAMH,EAAIE,CACnBG,GAAK,EAAEzvD,KAAKC,KAAK2uD,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EACpCF,IAAMa,CACNZ,IAAMY,CACNX,IAAMW,MACA,CACNb,EAAK,CACLC,GAAK,CACLC,GAAK,EAINY,EAAQd,EAAGvE,EAAalhE,EAAI0lE,GAAKxE,EAAahhE,EAAIylE,EAAGzE,EAAarsD,CAClE,KAAOuoC,GAAampB,EAAQ,GAAWnpB,GAAampB,GAAS,EAAO,CAEnEC,IAAOf,EAAGnvC,EAAMovC,EAAGnvC,EAAMovC,EAAGE,EAC5BY,KAAgBhB,EAAGxE,EAAYjhE,EAAI0lE,EAAGzE,EAAY/gE,EAAIylE,EAAG1E,EAAYpsD,EAAI2xD,EACzElvE,GAAImvE,EAAWF,CAEftrD,GAAKgmD,EAAYjhE,EAAI1I,EAAE4pE,EAAalhE,CACpCkb,GAAK+lD,EAAY/gE,EAAI5I,EAAE4pE,EAAahhE,CACpCib,GAAK8lD,EAAYpsD,EAAIvd,EAAE4pE,EAAarsD,CAEpC6xD,GAAOV,EAAIG,EAAMF,EAAIG,EAAMF,EAAIG,CAC/BM,GAAOX,EAAIA,EAAMC,EAAIA,EAAMC,EAAIA,CAC/BU,GAAOT,EAAIA,EAAMC,EAAIA,EAAMC,EAAIA,CAC/BjpD,GAAKnC,EAAKqb,CACVjZ,GAAKnC,EAAKqb,CACVjZ,GAAKnC,EAAK0qD,CACVgB,GAAMzpD,EAAG4oD,EAAM3oD,EAAG4oD,EAAM3oD,EAAG4oD,CAC3BY,GAAM1pD,EAAG+oD,EAAM9oD,EAAG+oD,EAAM9oD,EAAG+oD,CAC3BT,GAAQ,GAAGe,EAAKC,EAAOF,EAAKA,EAC5BrjE,GAAIuiE,GAAOgB,EAAKC,EAAMH,EAAKI,EAC3Bh7B,GAAI85B,IAAQc,EAAKG,EAAMF,EAAKG,EAC5B,IAAIzjE,EAAI,EACP,QACD,IAAIyoC,EAAI,EACP,QACDn0C,GAAI,EAAI0L,EAAIyoC,CACZ,MAAOn0C,EAAI,IAAOL,EAAI,GAAKA,EAAI4uB,EAAiBniB,iBAAkB,CACjEgjE,EAAyB5+D,GAAM,CAC/B+d,GAAiBniB,iBAAmBzM,CACpC4uB,GAAiBpnB,SAAW,GAAIqU,GAAAvZ,QAASqhB,EAAIC,EAAIC,EACjD+K,GAAiB09B,OAAS,GAAIzwC,GAAAvZ,QAAS6rE,EAAIC,EAAIC,EAC/C,IAAIN,EAAiB3Y,IAAK,CACzB,GAAIA,IAAsB2Y,EAAiB3Y,IAAIptD,IAAI+lE,EAAiBl7B,YACpE,IAAI88B,IAAe5B,EAAiB3Y,IAAI3B,UAExC,IAAImc,IAAgB/vB,EAAQhvC,IAAO8+D,EACnC,IAAIE,IAAe,GAAIh0D,GAAAvZ,QAAS8yD,GAAIwa,IAASxa,GAAIwa,GAAS,GAC1DA,IAAS/vB,EAAQhvC,GAAQ,GAAG8+D,EAC5B,IAAIG,IAAe,GAAIj0D,GAAAvZ,QAAS8yD,GAAIwa,IAASxa,GAAIwa,GAAS,GAC1DA,IAAS/vB,EAAQhvC,GAAQ,GAAG8+D,EAC5B,IAAII,IAAe,GAAIl0D,GAAAvZ,QAAS8yD,GAAIwa,IAASxa,GAAIwa,GAAS,GAC1DhhD,GAAiBy9B,GAAK,GAAInzB,GAAA52B,QAAMjC,EAAEwvE,GAAInnE,EAAIqD,EAAE+jE,GAAIpnE,EAAI8rC,EAAEu7B,GAAIrnE,EAAGrI,EAAEwvE,GAAIjnE,EAAImD,EAAE+jE,GAAIlnE,EAAI4rC,EAAEu7B,GAAInnE,GAExFgmB,EAAiB29B,aAAekjB,CAGhC,KAAK5pE,KAAKgoE,sBACT,MAAO,QAMX,GAAI4B,GAA0B,EAC7B,MAAO,KAER,OAAO,OAwJD9B,GAAA5lE,UAAA6qD,kBAAP,SAAyBod,EAA2B1iD,EAAuBsB,GAE1E,MAAO,OAET,OAAA++C,KAEA9lE,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M5GqtgBAzI,GAAQ0B,Q4GrtgBOqrE,I5GutgBZ7qC,6BAA6B31B,UAAUkT,gCAAgClT,YAAY61B,4CAA4C,SAASljC,EAAQkB,EAAOJ,GAC1J,Y6GhjhBA,IAAAqvE,GAAA,WAmEC,QAAAA,GAAY/uD,GAEXrb,KAAKqb,OAASA,EAEhB,MAAA+uD,KAEApoE,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M7G4/gBAzI,GAAQ0B,Q6G5/gBO2tE,O7G8/gBTC,yCAAyC,SAASpwE,EAAQkB,EAAOJ,GACvE,Y8GtlhBA,IAAAib,GAAA/b,EAA0B,gCAqB1B,IAAAqwE,GAAA,WA2BC,QAAAA,GAAYvC,GAAA,GAAAA,QAAA,GAAoC,CAApCA,EAAA,MAdJ/nE,KAAAuqE,UAA2B,GAAI5pE,MAMhCX,MAAAwqE,iBAA2B,IAUjCxqE,MAAKgoE,sBAAwBD,EAQvBuC,EAAApoE,UAAA0gE,UAAP,SAAiB2C,GAEhB,MAAOA,GAAK1B,kBAAkB7jE,KAAKyqE,aAAczqE,KAAK0qE,eAMhDJ,GAAApoE,UAAA0D,iBAAP,SAAwB/C,EAAUE,EAAUujD,GAE3CtmD,KAAKsb,GAAKzY,CACV7C,MAAKub,GAAKxY,CACV/C,MAAK2qE,MAAQrkB,CAGb,IAAIwd,GAAuBxd,EAAK1jD,UAAUC,EAAGE,EAAG,EAChD,IAAIghE,GAAwBzd,EAAK1jD,UAAUC,EAAGE,EAAG,GAAGu3B,SAASwpC,EAE7D,OAAO9jE,MAAK4qE,kBAAkB9G,EAAaC,EAAczd,EAAKzmD,OAMxDyqE,GAAApoE,UAAA0oE,kBAAP,SAAyB9G,EAAsBC,EAAuBlkE,GAErEG,KAAKyqE,aAAe3G,CACpB9jE,MAAK0qE,cAAgB3G,CAGrBlkE,GAAMmoC,mBAAmBhoC,KAGzB,KAAKA,KAAKuqE,UAAUtvE,OACnB,MAAO,KAER,IAAI85D,GAA6B/0D,KAAK6qE,qBAGtC7qE,MAAKuqE,UAAUtvE,OAAS,CAExB,OAAO85D,GAoBDuV,GAAApoE,UAAA4oE,cAAP,SAAqBC,GAEpB/qE,KAAKgrE,iBAAmBD,EAGjBT,GAAApoE,UAAA+oE,UAAR,SAAkB5vD,GAEjB,GAAIrb,KAAKwqE,mBAAqBnvD,EAAOmhB,mBACpC,MAAO,KAER,IAAIx8B,KAAKgrE,iBAAkB,CAC1B,GAAI7nE,GAAanD,KAAKgrE,iBAAiB/vE,MACvC,KAAK,GAAIP,GAAW,EAAGA,EAAIyI,EAAKzI,IAC/B,GAAIsF,KAAKgrE,iBAAiBtwE,IAAM2gB,EAC/B,MAAO,MAGV,MAAO,OAGAivD,GAAApoE,UAAAgpE,YAAR,SAAoBC,EAAiBC,GAEpC,MAAOD,GAAQ5G,mBAAmB39D,iBAAmBwkE,EAAQ7G,mBAAmB39D,iBAAkB,GAAK,EAGhG0jE,GAAApoE,UAAA2oE,oBAAR,WAGC7qE,KAAKuqE,UAAYvqE,KAAKuqE,UAAUc,KAAKrrE,KAAKkrE,YAO1ClrE,MAAKsrE,eAAiB,IAEtB,IAAIjwD,EACJ,IAAIlY,GAAanD,KAAKuqE,UAAUtvE,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIyI,EAAKzI,IAAK,CACpC2gB,EAASrb,KAAKuqE,UAAU7vE,EACxBsF,MAAKurE,eAAiBlwD,EAAOkpD,kBAC7B,IAAIvkE,KAAKsrE,gBAAkB,MAAQtrE,KAAKurE,eAAe3kE,iBAAmB5G,KAAKsrE,eAAe1kE,iBAAkB,CAC/G5G,KAAKwrE,cAAgBnwD,EAAO2N,eAC5B,IAAIhpB,KAAKwrE,cAAe,CACvBxrE,KAAKurE,eAAe3kE,iBAAmBoL,OAAOy5D,SAC9CpwD,GAAO6N,iBAAiBlpB,KAExB,IAAIA,KAAKsrE,iBAAmBtrE,KAAKgoE,sBAChC,UACK,KAAKhoE,KAAKurE,eAAe/G,wBAAyB,CAMxDxkE,KAAKsrE,eAAiBtrE,KAAKurE,cAC3B,SAKH,GAAIvrE,KAAKsrE,eACRtrE,KAAK0rE,eAAe1rE,KAAKsrE,eAE1B,OAAOtrE,MAAKsrE,eAGLhB,GAAApoE,UAAAwpE,eAAR,SAAuB3iD,GAEtB,GAAI4iD,GAAwB5iD,EAAiBpnB,WAAaonB,EAAiBpnB,SAAW,GAAIqU,GAAAvZ,QAE1F,IAAImvE,GAAkB7iD,EAAiBg7C,YACvC,IAAI8H,GAAkB9iD,EAAiB+6C,WACvC,IAAI3pE,GAAW4uB,EAAiBniB,gBAChC+kE,GAAa9oE,EAAIgpE,EAAOhpE,EAAI1I,EAAEyxE,EAAO/oE,CACrC8oE,GAAa5oE,EAAI8oE,EAAO9oE,EAAI5I,EAAEyxE,EAAO7oE,CACrC4oE,GAAaj0D,EAAIm0D,EAAOn0D,EAAIvd,EAAEyxE,EAAOl0D,EAG/B4yD,GAAApoE,UAAAuB,QAAP,YASO6mE,GAAApoE,UAAAuiE,YAAP,SAAmBppD,GAElB,IAAKrb,KAAKirE,UAAU5vD,GACnBrb,KAAKuqE,UAAUnnE,KAAKiY,GAOfivD,GAAApoE,UAAAknB,gBAAP,SAAuBm9B,GAEtB,GAAIA,EAAWz9B,gBAAgB9oB,KAAKurE,eAAgBvrE,KAAKwrE,eACxDxrE,KAAKsrE,eAAiBtrE,KAAKurE,eAOtBjB,GAAApoE,UAAA2gE,sBAAP,SAA6BxnD,IAStBivD,GAAApoE,UAAAgjE,gBAAP,SAAuB7pD,IAShBivD,GAAApoE,UAAAqkE,gBAAP,SAAuBlrD,IAShBivD,GAAApoE,UAAAklE,YAAP,SAAmB/rD,IAIpB,OAAAivD,KAEAtoE,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M9G+ghBAzI,GAAQ0B,Q8G/ghBO6tE,I9GihhBZ9vD,gCAAgClT,YAAY1I,2BAA2B,SAAS3E,EAAQkB,EAAOJ,GAClG,Y+GrxhBA,IAAA+wE,GAAA7xE,EAA8C,4CAAtCc,GAAA+sE,kBAAAgE,EAAArvE,OACR,IAAA62B,GAAAr5B,EAA6C,2CAArCc,GAAAqvE,iBAAA92C,EAAA72B,OACR,IAAA6C,GAAArF,EAA2C,wCAAnCc,GAAAuvE,cAAAhrE,EAAA7C,U/G2xhBLorE,4CAA4C,4CAA4C1qC,2CAA2C,2CAA2CktC,wCAAwC,0CAA0C0B,yCAAyC,SAAS9xE,EAAQkB,EAAOJ,GACpU,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IgHpyhBnF,IAAAG,GAAArO,EAAyB,oCACzB,IAAAomB,GAAApmB,EAAiC,6CAOjC,IAAA+xE,GAAA,SAAAxjE,GAAyBV,EAAAkkE,EAAAxjE,EASxB,SAAAwjE,KAECxjE,EAAAxN,KAAAgF,KATMA,MAAAisE,UAAiC,GAAItrE,OAerCqrE,EAAA9pE,UAAAid,aAAP,WAEC,GAAI+lC,GAAuBllD,KAAKksE,gBAEhClsE,MAAKisE,UAAU7oE,KAAK8hD,EAEpB,OAAOA,GAYD8mB,GAAA9pE,UAAAgqE,eAAP,WAEC,KAAM,IAAI7rD,GAAA5jB,QAGJuvE,GAAA9pE,UAAAwqB,WAAP,YAID,OAAAs/C,IA5CyB1jE,EAAA7L,QA8CzBuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MhHwxhBAzI,GAAQ0B,QgHxxhBOuvE,IhH0xhBZxrD,6CAA6ClZ,UAAUqB,oCAAoCrB,YAAY6kE,qDAAqD,SAASlyE,EAAQkB,EAAOJ,GACvL,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IiHn1hBnF,IAAA8S,GAAAhhB,EAA4B,2CAK5B,IAAAmyE,GAAAnyE,EAAiC,iDAKjC,IAAAoyE,GAAA,SAAA7jE,GAAqCV,EAAAukE,EAAA7jE,EA6FpC,SAAA6jE,GAAY5kD,EAA8B6kD,EAAkCtsD,EAAoB7b,EAAqBooE,EAAuBC,EAAuBC,GAAvJ,GAAAhlD,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAA6kD,QAAA,GAAgC,CAAhCA,EAAA,WAAkC,GAAAtsD,QAAA,GAAkB,CAAlBA,EAAA,GAAoB,GAAA7b,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAAooE,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,KAElKjkE,EAAAxN,KAAAgF,KAAMynB,EAAU6kD,EAxFTtsE,MAAAqsD,aAAsB,CA0F7BrsD,MAAK2f,QAAUK,CACfhgB,MAAKE,QAAUiE,CACfnE,MAAK0sE,WAAaH,CAClBvsE,MAAK2sE,WAAcH,EAAU,GAAK,EAAIA,EAAY,EAAIA,CACtDxsE,MAAK4sE,KAAOH,EAzFbzqE,OAAAC,eAAWoqE,EAAAnqE,UAAA,UjHk2hBJC,IiHl2hBP,WAEC,MAAOnC,MAAK2f,SjHm2hBNpc,IiHh2hBP,SAAkBC,GAEjBxD,KAAK2f,QAAUnc,CAEfxD,MAAK6sE,yBjHg2hBCxqE,WAAY,KACZC,aAAc,MiH31hBrBN,QAAAC,eAAWoqE,EAAAnqE,UAAA,UjHi2hBJC,IiHj2hBP,WAEC,MAAOnC,MAAKE,SjHk2hBNqD,IiH/1hBP,SAAkBC,GAEjBxD,KAAKE,QAAUsD,CACfxD,MAAK6sE,yBjHg2hBCxqE,WAAY,KACZC,aAAc,MiH31hBrBN,QAAAC,eAAWoqE,EAAAnqE,UAAA,ajHi2hBJC,IiHj2hBP,WAEC,MAAOnC,MAAK0sE,YjHk2hBNnpE,IiH/1hBP,SAAqBC,GAEpBxD,KAAK0sE,WAAalpE,CAElBxD,MAAK6sE,uBACL7sE,MAAK8sE,mBjH+1hBCzqE,WAAY,KACZC,aAAc,MiH11hBrBN,QAAAC,eAAWoqE,EAAAnqE,UAAA,ajHg2hBJC,IiHh2hBP,WAEC,MAAOnC,MAAK2sE,YjHi2hBNppE,IiH91hBP,SAAqBC,GAEpBxD,KAAK2sE,WAAcnpE,EAAM,GAAK,EAAIA,EAAQ,EAAIA,CAE9CxD,MAAK6sE,uBACL7sE,MAAK8sE,mBjH81hBCzqE,WAAY,KACZC,aAAc,MiHz1hBrBN,QAAAC,eAAWoqE,EAAAnqE,UAAA,OjH+1hBJC,IiH/1hBP,WAEC,MAAOnC,MAAK4sE,MjHg2hBNrpE,IiH71hBP,SAAeC,GAEdxD,KAAK4sE,KAAOppE,CAEZxD,MAAK6sE,yBjH61hBCxqE,WAAY,KACZC,aAAc,MiHr0hBd+pE,GAAAnqE,UAAA6qE,gBAAP,SAAuB53D,EAAqBm3D,GAE3C,GAAItyB,EACJ,IAAI6R,EACJ,IAAIwD,EACJ,IAAIC,EAEJ,IAAI50D,EACJ,IAAIoiC,EACJ,IAAIkwC,GAAkB,CACtB,IAAIhiE,GAAe,CACnB,IAAIiiE,EACJ,IAAIC,GAAcC,EAAcC,EAAWC,CAC3C,IAAIC,GAAoB,CAExB,IAAIhB,GAAgBrxD,EAAAxe,QAAaguD,SAAU,CAE1C,GAAI8iB,GAAuDp4D,CAG3DnV,MAAKqsD,cAAgBrsD,KAAK2sE,WAAa,IAAI3sE,KAAK0sE,WAAa,EAC7DY,IAActtE,KAAK2sE,WAAa,GAAG3sE,KAAK0sE,WAAW,CAGnD,IAAI1sE,KAAKqsD,cAAgBkhB,EAAiBvgC,YAAa,CACtDgN,EAAUuzB,EAAiBvzB,QAAQ73C,IAAIorE,EAAiB1d,YACxDhE,GAAY0hB,EAAiB1hB,UAAU1pD,IAAInC,KAAKqsD,aAChDgD,GAAUke,EAAiBle,QAAQltD,IAAInC,KAAKqsD,aAC5CiD,GAAWie,EAAiBje,SAASntD,IAAInC,KAAKqsD,kBACxC,CACNrS,EAAU,GAAI0S,aAAY4gB,EAC1BzhB,GAAY,GAAItc,cAAavvC,KAAKqsD,aAAa,EAC/CgD,GAAU,GAAI9f,cAAavvC,KAAKqsD,aAAa,EAC7CiD,GAAW,GAAI/f,cAAavvC,KAAKqsD,aAAa,EAE9CrsD,MAAK8sE,kBAGN,IAAKhwC,EAAI,EAAGA,GAAK98B,KAAK2sE,aAAc7vC,EAAG,CAEtC,GAAI0wC,GAAkB9zD,KAAKk9B,GAAG9Z,EAAE98B,KAAK2sE,UACrC,IAAIj1D,IAAY1X,KAAK2f,QAAQjG,KAAKmK,IAAI2pD,EACtC,IAAIC,GAAoBztE,KAAK2f,QAAQjG,KAAKiK,IAAI6pD,EAE9CP,GAAajiE,CAEb,KAAKtQ,EAAI,EAAGA,GAAKsF,KAAK0sE,aAAchyE,EAAG,CACtC,GAAIgzE,GAAkB,EAAEh0D,KAAKk9B,GAAGl8C,EAAEsF,KAAK0sE,UACvC,IAAI7pE,GAAW4qE,EAAW/zD,KAAKmK,IAAI6pD,EACnC,IAAI7jB,GAAgB/sB,EAAI98B,KAAK2sE,WAAW,EAAG3sE,KAAKE,QAAQ,GAAKF,KAAKE,QAAQ,CAC1E,IAAI6C,GAAW0qE,EAAW/zD,KAAKiK,IAAI+pD,EACnC,IAAIC,GAAiB,EAAEj0D,KAAKC,KAAK9W,EAAEA,EAAIE,EAAEA,EAAI2U,EAAEA,EAC/C,IAAIk2D,GAAgBl0D,KAAKC,KAAK5W,EAAEA,EAAIF,EAAEA,EAEtC,IAAI7C,KAAK4sE,KAAM,CACdQ,EAAK,CACLC,GAAKO,EAAS,KAAM/qE,EAAE+qE,EAAS,CAC/BV,IAASx1D,CACTy1D,GAAQpqE,MAEF,CACNqqE,EAAKQ,EAAS,KAAM/qE,EAAE+qE,EAAS,CAC/BP,GAAK,CACLH,GAAQnqE,CACRoqE,GAAQz1D,EAGT,GAAIhd,GAAKsF,KAAK0sE,WAAY,CAEzB7gB,EAAU7gD,GAAS6gD,EAAUohB,EAC7BphB,GAAU7gD,EAAQ,GAAK6gD,EAAUohB,EAAa,EAC9CphB,GAAU7gD,EAAQ,GAAK6gD,EAAUohB,EAAa,EAC9C5d,GAAQrkD,IAAUqkD,EAAQ4d,GAAepqE,EAAE8qE,GAAU,EACrDte,GAAQrkD,EAAQ,IAAMqkD,EAAQ4d,EAAa,GAAOC,EAAMS,GAAU,EAClEte,GAAQrkD,EAAQ,IAAMqkD,EAAQ4d,EAAa,GAAME,EAAMQ,GAAU,EACjEre,GAAStkD,IAAUskD,EAAS2d,IAAeW,EAAS,MAAO7qE,EAAE6qE,EAAS,IAAI,EAC1Ete,GAAStkD,EAAQ,IAAMskD,EAAS2d,EAAa,GAAKG,GAAI,EACtD9d,GAAStkD,EAAQ,IAAMskD,EAAS2d,EAAa,GAAKI,GAAI,OAEhD,CAENxhB,EAAU7gD,GAASnI,CACnBgpD,GAAU7gD,EAAQ,GAAMhL,KAAS,KAAGktE,EAAQrjB,EAASqjB,CACrDrhB,GAAU7gD,EAAQ,GAAMhL,KAAS,KAAGmtE,EAAQA,EAAQtjB,CAEpDwF,GAAQrkD,GAASnI,EAAE8qE,CACnBte,GAAQrkD,EAAQ,GAAKkiE,EAAMS,CAC3Bte,GAAQrkD,EAAQ,GAAKmiE,EAAMQ,CAE3Bre,GAAStkD,GAAS4iE,EAAS,MAAO7qE,EAAE6qE,EAAS,CAC7Cte,GAAStkD,EAAQ,GAAKoiE,CACtB9d,GAAStkD,EAAQ,GAAKqiE,EAGvB,GAAI3yE,EAAI,GAAKoiC,EAAI,EAAG,CACnB,GAAIriC,IAAYuF,KAAK0sE,WAAa,GAAG5vC,EAAIpiC,CACzC,IAAIsN,IAAYhI,KAAK0sE,WAAa,GAAG5vC,EAAIpiC,EAAI,CAC7C,IAAI6hB,IAAYvc,KAAK0sE,WAAa,IAAI5vC,EAAI,GAAKpiC,EAAI,CACnD,IAAIqN,IAAY/H,KAAK0sE,WAAa,IAAI5vC,EAAI,GAAKpiC,CAE/C,IAAIoiC,GAAK98B,KAAK2sE,WAAY,CACzB9gB,EAAU7gD,GAAS6gD,EAAUohB,EAC7BphB,GAAU7gD,EAAQ,GAAK6gD,EAAUohB,EAAa,EAC9CphB,GAAU7gD,EAAQ,GAAK6gD,EAAUohB,EAAa,EAE9CjzB,GAAQgzB,KAAcvyE,CACtBu/C,GAAQgzB,KAAczwD,CACtBy9B,GAAQgzB,KAAcjlE,MAEhB,IAAI+0B,GAAK,EAAG,CAClBkd,EAAQgzB,KAAcvyE,CACtBu/C,GAAQgzB,KAAchlE,CACtBgyC,GAAQgzB,KAAczwD,MAEhB,CACNy9B,EAAQgzB,KAAcvyE,CACtBu/C,GAAQgzB,KAAchlE,CACtBgyC,GAAQgzB,KAAczwD,CACtBy9B,GAAQgzB,KAAcvyE,CACtBu/C,GAAQgzB,KAAczwD,CACtBy9B,GAAQgzB,KAAcjlE,GAIxBiD,GAAS,GAKXuiE,EAAiB5jB,WAAW3P,EAE5BuzB,GAAiBt9B,aAAa4b,EAC9B0hB,GAAiBxf,WAAWsB,EAC5Bke,GAAiBtf,YAAYqB,OAEvB,IAAIgd,GAAgBrxD,EAAAxe,QAAayiB,KAAM,GAQxCmtD,GAAAnqE,UAAA2rE,WAAP,SAAkB14D,EAAqBm3D,GAEtC,GAAI5xE,GAAUoiC,CACd,IAAIyyB,EAGJ,IAAI+c,GAAgBrxD,EAAAxe,QAAaguD,SAAU,CAE1C,GAAI8iB,GAAuDp4D,CAG3D,IAAIo4D,EAAiBhe,KAAOvvD,KAAKqsD,cAAgBkhB,EAAiBvgC,YAAa,CAC9EuiB,EAAMge,EAAiBhe,IAAIptD,IAAInC,KAAKqsD,kBAC9B,CACNkD,EAAM,GAAIhgB,cAAavvC,KAAKqsD,aAAa,GAI1C,GAAIrhD,GAAe,CAGnB,KAAK8xB,EAAI,EAAGA,GAAK98B,KAAK2sE,aAAc7vC,EAAG,CACtC,IAAKpiC,EAAI,EAAGA,GAAKsF,KAAK0sE,aAAchyE,EAAG,CAEtC60D,EAAIvkD,KAAatQ,EAAEsF,KAAK0sE,WAAa1sE,KAAK8tE,OAC1Cve,GAAIvkD,KAAa8xB,EAAE98B,KAAK2sE,WAAa3sE,KAAK+tE,SAK5CR,EAAiBxtB,OAAOwP,OAElB,IAAI+c,GAAgBrxD,EAAAxe,QAAayiB,KAAM,GAIhD,OAAAmtD,IA9RqCD,EAAA3vE,QAgSrCuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MjH8yhBAzI,GAAQ0B,QiH9yhBO4vE,IjHgzhBZ/sD,2CAA2C,2CAA2C0uD,iDAAiD,mDAAmDC,kDAAkD,SAASh0E,EAAQkB,EAAOJ,GACvQ,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IkH9liBnF,IAAA+lE,GAAAj0E,EAAoC,qDAKpC,IAAAk0E,GAAA,SAAA3lE,GAAkCV,EAAAqmE,EAAA3lE,EA0BjC,SAAA2lE,GAAY1mD,EAA8B6kD,EAAkCtsD,EAAoB7b,EAAqBooE,EAAuBC,EAAsBnwB,EAAuBowB,GAA7K,GAAAhlD,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAA6kD,QAAA,GAAgC,CAAhCA,EAAA,WAAkC,GAAAtsD,QAAA,GAAkB,CAAlBA,EAAA,GAAoB,GAAA7b,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAAooE,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAnwB,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAowB,QAAA,GAAkB,CAAlBA,EAAA,KAExLjkE,EAAAxN,KAAAgF,KAAMynB,EAAU6kD,EAAc,EAAGtsD,EAAQ7b,EAAQooE,EAAWC,EAAW,MAAOnwB,EAAQ,KAAMowB,GAtB7FzqE,OAAAC,eAAWksE,EAAAjsE,UAAA,UlHkniBJC,IkHlniBP,WAEC,MAAOnC,MAAKouE,gBlHmniBN7qE,IkHhniBP,SAAkBC,GAEjBxD,KAAKouE,eAAiB5qE,CAEtBxD,MAAK6sE,yBlHgniBCxqE,WAAY,KACZC,aAAc,MkHlmiBtB,OAAA6rE,IA9BkCD,EAAAzxE,QAgClCuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MlHqmiBAzI,GAAQ0B,QkHrmiBO0xE,IlHumiBZE,qDAAqD,uDAAuD9uD,kDAAkD,SAAStlB,EAAQkB,EAAOJ,GACzL,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,ImHlpiBnF,IAAA8S,GAAAhhB,EAA4B,2CAK5B,IAAAmyE,GAAAnyE,EAAiC,iDAKjC,IAAAq0E,GAAA,SAAA9lE,GAAkCV,EAAAwmE,EAAA9lE,EAqBjC,SAAA8lE,GAAY7mD,EAA8B6kD,EAAkCpoE,EAAoBC,EAAqB0Z,EAAoB0uD,EAAsBC,EAAsB+B,EAAsBC,GAA/L,GAAA/mD,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAA6kD,QAAA,GAAgC,CAAhCA,EAAA,WAAkC,GAAApoE,QAAA,GAAkB,CAAlBA,EAAA,IAAoB,GAAAC,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAA0Z,QAAA,GAAkB,CAAlBA,EAAA,IAAoB,GAAA0uD,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAA+B,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,KAE1MhmE,EAAAxN,KAAAgF,KAAMynB,EAAU6kD,EAEhBtsE,MAAKC,OAASiE,CACdlE,MAAKE,QAAUiE,CACfnE,MAAKyb,OAASoC,CACd7d,MAAK0sE,WAAaH,CAClBvsE,MAAK2sE,WAAaH,CAClBxsE,MAAKyuE,WAAaF,CAClBvuE,MAAK0uE,OAASF,EAMfxsE,OAAAC,eAAWqsE,EAAApsE,UAAA,SnH6oiBJC,ImH7oiBP,WAEC,MAAOnC,MAAKC,QnH8oiBNsD,ImH3oiBP,SAAiBC,GAEhBxD,KAAKC,OAASuD,CAEdxD,MAAK6sE,yBnH2oiBCxqE,WAAY,KACZC,aAAc,MmHtoiBrBN,QAAAC,eAAWqsE,EAAApsE,UAAA,UnH4oiBJC,ImH5oiBP,WAEC,MAAOnC,MAAKE,SnH6oiBNqD,ImH1oiBP,SAAkBC,GAEjBxD,KAAKE,QAAUsD,CAEfxD,MAAK6sE,yBnH0oiBCxqE,WAAY,KACZC,aAAc,MmHroiBrBN,QAAAC,eAAWqsE,EAAApsE,UAAA,SnH2oiBJC,ImH3oiBP,WAEC,MAAOnC,MAAKyb,QnH4oiBNlY,ImHzoiBP,SAAiBC,GAEhBxD,KAAKyb,OAASjY,CAEdxD,MAAK6sE,yBnHyoiBCxqE,WAAY,KACZC,aAAc,MmH/niBrBN,QAAAC,eAAWqsE,EAAApsE,UAAA,SnH0oiBJC,ImH1oiBP,WAEC,MAAOnC,MAAK0uE,QnH2oiBNnrE,ImHxoiBP,SAAiBC,GAEhBxD,KAAK0uE,OAASlrE,CAEdxD,MAAK6sE,yBnHwoiBCxqE,WAAY,KACZC,aAAc,MmHnoiBrBN,QAAAC,eAAWqsE,EAAApsE,UAAA,anHyoiBJC,ImHzoiBP,WAEC,MAAOnC,MAAK0sE,YnH0oiBNnpE,ImHvoiBP,SAAqBC,GAEpBxD,KAAK0sE,WAAalpE,CAElBxD,MAAK6sE,uBACL7sE,MAAK8sE,mBnHuoiBCzqE,WAAY,KACZC,aAAc,MmHloiBrBN,QAAAC,eAAWqsE,EAAApsE,UAAA,anHwoiBJC,ImHxoiBP,WAEC,MAAOnC,MAAK2sE,YnHyoiBNppE,ImHtoiBP,SAAqBC,GAEpBxD,KAAK2sE,WAAanpE,CAElBxD,MAAK6sE,uBACL7sE,MAAK8sE,mBnHsoiBCzqE,WAAY,KACZC,aAAc,MmHjoiBrBN,QAAAC,eAAWqsE,EAAApsE,UAAA,anHuoiBJC,ImHvoiBP,WAEC,MAAOnC,MAAKyuE,YnHwoiBNlrE,ImHroiBP,SAAqBC,GAEpBxD,KAAKyuE,WAAajrE,CAElBxD,MAAK6sE,uBACL7sE,MAAK8sE,mBnHqoiBCzqE,WAAY,KACZC,aAAc,MmHhoiBdgsE,GAAApsE,UAAA6qE,gBAAP,SAAuB53D,EAAqBm3D,GAE3C,GAAItyB,EACJ,IAAI6R,EACJ,IAAIwD,EACJ,IAAIC,EAEJ,IAAIjhB,GAAWsgC,EAAWC,EAAWC,CACrC,IAAIn0E,GAAUoiC,EAAUgyC,EAAa,CAErC,IAAIC,GAAaC,CACjB,IAAIC,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWxvD,CAE1B,IAAIyvD,EAGJL,GAAKjvE,KAAKC,OAAO,CACjBivE,GAAKlvE,KAAKE,QAAQ,CAClBivE,GAAKnvE,KAAKyb,OAAO,CAEjB,IAAI6wD,GAAgBrxD,EAAAxe,QAAaguD,SAAU,CAE1C,GAAI8iB,GAAuDp4D,CAE3D,IAAI63B,KAAuBhtC,KAAK0sE,WAAa,IAAI1sE,KAAK2sE,WAAa,IAAM3sE,KAAK0sE,WAAa,IAAI1sE,KAAKyuE,WAAa,IAAMzuE,KAAK2sE,WAAa,IAAI3sE,KAAKyuE,WAAa,IAAI,CAEnK,IAAInB,IAAsBttE,KAAK0sE,WAAW1sE,KAAK2sE,WAAa3sE,KAAK0sE,WAAW1sE,KAAKyuE,WAAazuE,KAAK2sE,WAAW3sE,KAAKyuE,YAAY,EAE/H,IAAIzhC,GAAeugC,EAAiBvgC,aAAeugC,EAAiBvzB,SAAW,KAAM,CACpFA,EAAUuzB,EAAiBvzB,QAAQ73C,IAAIorE,EAAiB1d,YACxDhE,GAAY0hB,EAAiB1hB,UAAU1pD,IAAI6qC,EAC3CqiB,GAAUke,EAAiBle,QAAQltD,IAAI6qC,EACvCsiB,GAAWie,EAAiBje,SAASntD,IAAI6qC,OACnC,CACNgN,EAAU,GAAI0S,aAAY4gB,EAC1BzhB,GAAY,GAAItc,cAAavC,EAAY,EACzCqiB,GAAU,GAAI9f,cAAavC,EAAY,EACvCsiB,GAAW,GAAI/f,cAAavC,EAAY,EAExChtC,MAAK8sE,kBAGNiC,EAAO,CACPC,GAAO,CAGPI,GAAKpvE,KAAKC,OAAOD,KAAK0sE,UACtB2C,GAAKrvE,KAAKE,QAAQF,KAAK2sE,UACvB9sD,GAAK7f,KAAKyb,OAAOzb,KAAKyuE,UAEtB,KAAK/zE,EAAI,EAAGA,GAAKsF,KAAK0sE,WAAYhyE,IAAK,CACtC40E,GAAaL,EAAKv0E,EAAE00E,CAEpB,KAAKtyC,EAAI,EAAGA,GAAK98B,KAAK2sE,WAAY7vC,IAAK,CAEtC+uB,EAAUkjB,GAAQO,CAClBzjB,GAAUkjB,EAAO,IAAMG,EAAKpyC,EAAEuyC,CAC9BxjB,GAAUkjB,EAAO,IAAMI,CACvB9f,GAAQ0f,GAAQ,CAChB1f,GAAQ0f,EAAO,GAAK,CACpB1f,GAAQ0f,EAAO,IAAM,CACrBzf,GAASyf,GAAQ,CACjBzf,GAASyf,EAAO,GAAK,CACrBzf,GAASyf,EAAO,GAAK,CACrBA,IAAQ,CAGRljB,GAAUkjB,GAAQO,CAClBzjB,GAAUkjB,EAAO,IAAMG,EAAKpyC,EAAEuyC,CAC9BxjB,GAAUkjB,EAAO,GAAKI,CACtB9f,GAAQ0f,GAAQ,CAChB1f,GAAQ0f,EAAO,GAAK,CACpB1f,GAAQ0f,EAAO,GAAK,CACpBzf,GAASyf,IAAS,CAClBzf,GAASyf,EAAO,GAAK,CACrBzf,GAASyf,EAAO,GAAK,CACrBA,IAAQ,CAER,IAAIr0E,GAAKoiC,EAAG,CACXuR,EAAK,IAAI3zC,EAAI,IAAIsF,KAAK2sE,WAAa,IAAM7vC,EAAI,GAC7C6xC,GAAK,GAAGj0E,GAAGsF,KAAK2sE,WAAa,IAAM7vC,EAAI,GACvC8xC,GAAKvgC,EAAK,CACVwgC,GAAKF,EAAK,CAEV30B,GAAQg1B,KAAU3gC,CAClB2L,GAAQg1B,KAAUJ,CAClB50B,GAAQg1B,KAAUH,CAClB70B,GAAQg1B,KAAU3gC,CAClB2L,GAAQg1B,KAAUH,CAClB70B,GAAQg1B,KAAUL,CAClB30B,GAAQg1B,KAAUL,EAAK,CACvB30B,GAAQg1B,KAAUH,EAAK,CACvB70B,GAAQg1B,KAAUJ,EAAK,CACvB50B,GAAQg1B,KAAUL,EAAK,CACvB30B,GAAQg1B,KAAUJ,EAAK,CACvB50B,GAAQg1B,KAAU3gC,EAAK,IAK1BygC,GAAO,GAAG9uE,KAAK0sE,WAAa,IAAI1sE,KAAK2sE,WAAa,EAElD,KAAKjyE,EAAI,EAAGA,GAAKsF,KAAK0sE,WAAYhyE,IAAK,CACtC40E,GAAaL,EAAKv0E,EAAE00E,CAEpB,KAAKtyC,EAAI,EAAGA,GAAK98B,KAAKyuE,WAAY3xC,IAAK,CAEtC+uB,EAAUkjB,GAAQO,CAClBzjB,GAAUkjB,EAAO,GAAKG,CACtBrjB,GAAUkjB,EAAO,IAAMI,EAAKryC,EAAEjd,CAC9BwvC,GAAQ0f,GAAQ,CAChB1f,GAAQ0f,EAAO,GAAK,CACpB1f,GAAQ0f,EAAO,GAAK,CACpBzf,GAASyf,GAAQ,CACjBzf,GAASyf,EAAO,GAAK,CACrBzf,GAASyf,EAAO,GAAK,CACrBA,IAAQ,CAGRljB,GAAUkjB,GAAQO,CAClBzjB,GAAUkjB,EAAO,IAAMG,CACvBrjB,GAAUkjB,EAAO,IAAMI,EAAKryC,EAAEjd,CAC9BwvC,GAAQ0f,GAAQ,CAChB1f,GAAQ0f,EAAO,IAAM,CACrB1f,GAAQ0f,EAAO,GAAK,CACpBzf,GAASyf,GAAQ,CACjBzf,GAASyf,EAAO,GAAK,CACrBzf,GAASyf,EAAO,GAAK,CACrBA,IAAQ,CAER,IAAIr0E,GAAKoiC,EAAG,CACXuR,EAAKygC,EAAM,IAAIp0E,EAAI,IAAIsF,KAAKyuE,WAAa,IAAM3xC,EAAI,GACnD6xC,GAAKG,EAAM,GAAGp0E,GAAGsF,KAAKyuE,WAAa,IAAM3xC,EAAI,GAC7C8xC,GAAKvgC,EAAK,CACVwgC,GAAKF,EAAK,CAEV30B,GAAQg1B,KAAU3gC,CAClB2L,GAAQg1B,KAAUJ,CAClB50B,GAAQg1B,KAAUH,CAClB70B,GAAQg1B,KAAU3gC,CAClB2L,GAAQg1B,KAAUH,CAClB70B,GAAQg1B,KAAUL,CAClB30B,GAAQg1B,KAAUL,EAAK,CACvB30B,GAAQg1B,KAAUH,EAAK,CACvB70B,GAAQg1B,KAAUJ,EAAK,CACvB50B,GAAQg1B,KAAUL,EAAK,CACvB30B,GAAQg1B,KAAUJ,EAAK,CACvB50B,GAAQg1B,KAAU3gC,EAAK,IAK1BygC,GAAO,GAAG9uE,KAAK0sE,WAAa,IAAI1sE,KAAKyuE,WAAa,EAElD,KAAK/zE,EAAI,EAAGA,GAAKsF,KAAKyuE,WAAY/zE,IAAK,CACtC40E,EAAYH,EAAKz0E,EAAEmlB,CAEnB,KAAKid,EAAI,EAAGA,GAAK98B,KAAK2sE,WAAY7vC,IAAK,CAEtC+uB,EAAUkjB,IAASE,CACnBpjB,GAAUkjB,EAAK,IAAMG,EAAKpyC,EAAEuyC,CAC5BxjB,GAAUkjB,EAAK,GAAKO,CACpBjgB,GAAQ0f,IAAS,CACjB1f,GAAQ0f,EAAK,GAAK,CAClB1f,GAAQ0f,EAAK,GAAK,CAClBzf,GAASyf,GAAQ,CACjBzf,GAASyf,EAAK,GAAK,CACnBzf,GAASyf,EAAK,IAAM,CACpBA,IAAQ,CAGRljB,GAAUkjB,GAAQE,CAClBpjB,GAAUkjB,EAAK,IAAMG,EAAKpyC,EAAEuyC,CAC5BxjB,GAAUkjB,EAAK,GAAKO,CACpBjgB,GAAQ0f,GAAQ,CAChB1f,GAAQ0f,EAAK,GAAK,CAClB1f,GAAQ0f,EAAK,GAAK,CAClBzf,GAASyf,GAAQ,CACjBzf,GAASyf,EAAK,GAAK,CACnBzf,GAASyf,EAAK,GAAK,CACnBA,IAAQ,CAER,IAAIr0E,GAAKoiC,EAAG,CACXuR,EAAKygC,EAAM,IAAIp0E,EAAI,IAAIsF,KAAK2sE,WAAa,IAAM7vC,EAAI,GACnD6xC,GAAKG,EAAM,GAAGp0E,GAAGsF,KAAK2sE,WAAa,IAAM7vC,EAAI,GAC7C8xC,GAAKvgC,EAAK,CACVwgC,GAAKF,EAAK,CAEV30B,GAAQg1B,KAAU3gC,CAClB2L,GAAQg1B,KAAUJ,CAClB50B,GAAQg1B,KAAUH,CAClB70B,GAAQg1B,KAAU3gC,CAClB2L,GAAQg1B,KAAUH,CAClB70B,GAAQg1B,KAAUL,CAClB30B,GAAQg1B,KAAUL,EAAK,CACvB30B,GAAQg1B,KAAUH,EAAK,CACvB70B,GAAQg1B,KAAUJ,EAAK,CACvB50B,GAAQg1B,KAAUL,EAAK,CACvB30B,GAAQg1B,KAAUJ,EAAK,CACvB50B,GAAQg1B,KAAU3gC,EAAK,IAK1Bk/B,EAAiB5jB,WAAW3P,EAE5BuzB,GAAiBt9B,aAAa4b,EAC9B0hB,GAAiBxf,WAAWsB,EAC5Bke,GAAiBtf,YAAYqB,OAEvB,IAAIgd,GAAgBrxD,EAAAxe,QAAayiB,KAAM,CAC7C,GAAIqwD,GAA2Cp6D,CAE/C,IAAIq6D,GAAqBxvE,KAAK2sE,WAAW,EAAK3sE,KAAK0sE,WAAW,EAAI1sE,KAAKyuE,WAAW,CAClF,IAAI9uC,EAEJksB,GAAY,GAAItc,cAAaigC,EAAY,EACzC7vC,GAAY,GAAI4P,cAAaigC,EAE7BT,GAAO,CAEPC,GAAO,CAGP,KAAKt0E,EAAI,EAAGA,EAAIsF,KAAK2sE,aAAcjyE,EAAG,CACrCmxD,EAAUkjB,MAAWE,CACrBpjB,GAAUkjB,KAAUr0E,EAAEsF,KAAKE,QAAQF,KAAK2sE,WAAauC,CACrDrjB,GAAUkjB,MAAWI,CAErBtjB,GAAUkjB,KAAUE,CACpBpjB,GAAUkjB,KAAUr0E,EAAEsF,KAAKE,QAAQF,KAAK2sE,WAAauC,CACrDrjB,GAAUkjB,MAAWI,CAErBxvC,GAAUqvC,KAAU,CAEpBnjB,GAAUkjB,MAAWE,CACrBpjB,GAAUkjB,KAAUG,EAAKx0E,EAAEsF,KAAKE,QAAQF,KAAK2sE,UAC7C9gB,GAAUkjB,KAAUI,CAEpBtjB,GAAUkjB,KAAUE,CACpBpjB,GAAUkjB,KAAUG,EAAKx0E,EAAEsF,KAAKE,QAAQF,KAAK2sE,UAC7C9gB,GAAUkjB,KAAUI,CAEpBxvC,GAAUqvC,KAAU,EAGrB,IAAKt0E,EAAI,EAAGA,EAAIsF,KAAK0sE,aAAchyE,EAAG,CACrCmxD,EAAUkjB,KAAUr0E,EAAEsF,KAAKC,OAAOD,KAAK0sE,WAAauC,CACpDpjB,GAAUkjB,MAAWG,CACrBrjB,GAAUkjB,MAAWI,CAErBtjB,GAAUkjB,KAAUr0E,EAAEsF,KAAKC,OAAOD,KAAK0sE,WAAauC,CACpDpjB,GAAUkjB,KAAUG,CACpBrjB,GAAUkjB,MAAWI,CAErBxvC,GAAUqvC,KAAU,CAEpBnjB,GAAUkjB,KAAUE,EAAKv0E,EAAEsF,KAAKC,OAAOD,KAAK0sE,UAC5C7gB,GAAUkjB,MAAWG,CACrBrjB,GAAUkjB,KAAUI,CAEpBtjB,GAAUkjB,KAAUE,EAAKv0E,EAAEsF,KAAKC,OAAOD,KAAK0sE,UAC5C7gB,GAAUkjB,KAAUG,CACpBrjB,GAAUkjB,KAAUI,CAEpBxvC,GAAUqvC,KAAU,EAIrB,IAAKt0E,EAAI,EAAGA,EAAIsF,KAAK2sE,aAAcjyE,EAAG,CACrCmxD,EAAUkjB,MAAWE,CACrBpjB,GAAUkjB,KAAUr0E,EAAEsF,KAAKE,QAAQF,KAAK2sE,WAAauC,CACrDrjB,GAAUkjB,MAAWI,CAErBtjB,GAAUkjB,MAAWE,CACrBpjB,GAAUkjB,KAAUr0E,EAAEsF,KAAKE,QAAQF,KAAK2sE,WAAauC,CACrDrjB,GAAUkjB,KAAUI,CAEpBxvC,GAAUqvC,KAAU,CAEpBnjB,GAAUkjB,KAAUE,CACpBpjB,GAAUkjB,KAAUG,EAAKx0E,EAAEsF,KAAKE,QAAQF,KAAK2sE,UAC7C9gB,GAAUkjB,MAAWI,CAErBtjB,GAAUkjB,KAAUE,CACpBpjB,GAAUkjB,KAAUG,EAAKx0E,EAAEsF,KAAKE,QAAQF,KAAK2sE,UAC7C9gB,GAAUkjB,KAAUI,CAEpBxvC,GAAUqvC,KAAU,EAGrB,IAAKt0E,EAAI,EAAGA,EAAIsF,KAAKyuE,aAAc/zE,EAAG,CACrCmxD,EAAUkjB,KAAUE,CACpBpjB,GAAUkjB,MAAWG,CACrBrjB,GAAUkjB,KAAUr0E,EAAEsF,KAAKyb,OAAOzb,KAAKyuE,WAAaU,CAEpDtjB,GAAUkjB,KAAUE,CACpBpjB,GAAUkjB,KAAUG,CACpBrjB,GAAUkjB,KAAUr0E,EAAEsF,KAAKyb,OAAOzb,KAAKyuE,WAAaU,CAEpDxvC,GAAUqvC,KAAU,CAEpBnjB,GAAUkjB,MAAWE,CACrBpjB,GAAUkjB,MAAWG,CACrBrjB,GAAUkjB,KAAUI,EAAKz0E,EAAEsF,KAAKyb,OAAOzb,KAAKyuE,UAE5C5iB,GAAUkjB,MAAWE,CACrBpjB,GAAUkjB,KAAUG,CACpBrjB,GAAUkjB,KAAUI,EAAKz0E,EAAEsF,KAAKyb,OAAOzb,KAAKyuE,UAE5C9uC,GAAUqvC,KAAU,EAKrB,IAAKt0E,EAAI,EAAGA,EAAIsF,KAAKyuE,aAAc/zE,EAAG,CACrCmxD,EAAUkjB,MAAWE,CACrBpjB,GAAUkjB,MAAWG,CACrBrjB,GAAUkjB,KAAUI,EAAKz0E,EAAEsF,KAAKyb,OAAOzb,KAAKyuE,UAE5C5iB,GAAUkjB,KAAUE,CACpBpjB,GAAUkjB,MAAWG,CACrBrjB,GAAUkjB,KAAUI,EAAKz0E,EAAEsF,KAAKyb,OAAOzb,KAAKyuE,UAE5C9uC,GAAUqvC,KAAU,CAEpBnjB,GAAUkjB,MAAWE,CACrBpjB,GAAUkjB,KAAUG,CACpBrjB,GAAUkjB,KAAUr0E,EAAEsF,KAAKyb,OAAOzb,KAAKyuE,WAAaU,CAEpDtjB,GAAUkjB,KAAUE,CACpBpjB,GAAUkjB,KAAUG,CACpBrjB,GAAUkjB,KAAUr0E,EAAEsF,KAAKyb,OAAOzb,KAAKyuE,WAAaU,CAEpDxvC,GAAUqvC,KAAU,EAGrB,IAAKt0E,EAAI,EAAGA,EAAIsF,KAAK0sE,aAAchyE,EAAG,CACrCmxD,EAAUkjB,KAAUE,EAAKv0E,EAAEsF,KAAKC,OAAOD,KAAK0sE,UAC5C7gB,GAAUkjB,MAAWG,CACrBrjB,GAAUkjB,MAAWI,CAErBtjB,GAAUkjB,KAAUE,EAAKv0E,EAAEsF,KAAKC,OAAOD,KAAK0sE,UAC5C7gB,GAAUkjB,MAAWG,CACrBrjB,GAAUkjB,KAAUI,CAEpBxvC,GAAUqvC,KAAU,CAEpBnjB,GAAUkjB,KAAUr0E,EAAEsF,KAAKC,OAAOD,KAAK0sE,WAAauC,CACpDpjB,GAAUkjB,KAAUG,CACpBrjB,GAAUkjB,MAAWI,CAErBtjB,GAAUkjB,KAAUr0E,EAAEsF,KAAKC,OAAOD,KAAK0sE,WAAauC,CACpDpjB,GAAUkjB,KAAUG,CACpBrjB,GAAUkjB,KAAUI,CAEpBxvC,GAAUqvC,KAAU,EAIrBO,EAAat/B,aAAa4b,EAC1B0jB,GAAa5iB,aAAahtB,IAOrB2uC,GAAApsE,UAAA2rE,WAAP,SAAkB14D,EAAqBm3D,GAEtC,GAAI5xE,GAAUoiC,EAAU9xB,CACxB,IAAIukD,EAEJ,IAAIkgB,GAAmBC,CACvB,IAAIC,GAAoBC,CACxB,IAAIC,GAAaC,CACjB,IAAIC,GAAaC,CACjB,IAAIC,GAAWC,CACf,IAAIljC,EAEJ,IAAIs/B,GAAgBrxD,EAAAxe,QAAaguD,SAAU,CAE1Czd,IAAgBhtC,KAAK0sE,WAAa,IAAI1sE,KAAK2sE,WAAa,IAAM3sE,KAAK0sE,WAAa,IAAI1sE,KAAKyuE,WAAa,IAAMzuE,KAAK2sE,WAAa,IAAI3sE,KAAKyuE,WAAa,IAAI,CAExJ,IAAIlB,GAAuDp4D,CAE3D,IAAI63B,GAAeugC,EAAiBvgC,aAAeugC,EAAiBhe,KAAO,KAAM,CAChFA,EAAMge,EAAiBhe,IAAIptD,IAAI6qC,OACzB,CACNuiB,EAAM,GAAIhgB,cAAavC,EAAY,GAGpC,GAAIhtC,KAAK0uE,OAAQ,CAChBe,EAAaE,EAAc,EAAE,CAC7BD,GAAaE,EAAc,EAAE,MACvB,CACNH,EAAaC,EAAa,CAC1BC,GAAcC,EAAc,EAe7B5kE,EAAQ,CAGR6kE,GAAO,EAAEF,CACTG,GAAO,EAAEF,CACTG,GAAO,EAAEJ,CACTK,GAAO,EAAEJ,CACTK,GAAKR,EAAWzvE,KAAK0sE,UACrBwD,GAAKR,EAAW1vE,KAAK2sE,UACrB,KAAKjyE,EAAI,EAAGA,GAAKsF,KAAK0sE,WAAYhyE,IAAK,CACtC,IAAKoiC,EAAI,EAAGA,GAAK98B,KAAK2sE,WAAY7vC,IAAK,CACtCyyB,EAAIvkD,MAAa6kE,EAAOn1E,EAAEu1E,GAAKjwE,KAAK8tE,OACpCve,GAAIvkD,MAAa8kE,GAAQJ,EAAa5yC,EAAEozC,IAAKlwE,KAAK+tE,OAElDxe,GAAIvkD,MAAa+kE,GAAQN,EAAa/0E,EAAEu1E,IAAKjwE,KAAK8tE,OAClDve,GAAIvkD,MAAaglE,GAAQN,EAAa5yC,EAAEozC,IAAKlwE,KAAK+tE,SAKpD8B,EAAO,EAAEF,CACTG,GAAO,EAAEF,CACTG,GAAO,EAAEJ,CACTK,GAAO,EAAEJ,CACTK,GAAKR,EAAWzvE,KAAK0sE;AACrBwD,EAAKR,EAAW1vE,KAAKyuE,UACrB,KAAK/zE,EAAI,EAAGA,GAAKsF,KAAK0sE,WAAYhyE,IAAK,CACtC,IAAKoiC,EAAI,EAAGA,GAAK98B,KAAKyuE,WAAY3xC,IAAK,CACtCyyB,EAAIvkD,MAAa6kE,EAAOn1E,EAAEu1E,GAAIjwE,KAAK8tE,OACnCve,GAAIvkD,MAAa8kE,GAAQJ,EAAa5yC,EAAEozC,IAAKlwE,KAAK+tE,OAElDxe,GAAIvkD,MAAa+kE,EAAOr1E,EAAEu1E,GAAIjwE,KAAK8tE,OACnCve,GAAIvkD,MAAaglE,EAAOlzC,EAAEozC,GAAIlwE,KAAK+tE,SAKrC8B,EAAO,EAAEF,CACTG,GAAO,EAAEF,CACTG,GAAO,EAAEJ,CACTK,GAAO,EAAEJ,CACTK,GAAKR,EAAWzvE,KAAKyuE,UACrByB,GAAKR,EAAW1vE,KAAK2sE,UACrB,KAAKjyE,EAAI,EAAGA,GAAKsF,KAAKyuE,WAAY/zE,IAAK,CACtC,IAAKoiC,EAAI,EAAGA,GAAK98B,KAAK2sE,WAAY7vC,IAAK,CACtCyyB,EAAIvkD,MAAa6kE,EAAOn1E,EAAEu1E,GAAIjwE,KAAK8tE,OACnCve,GAAIvkD,MAAa8kE,GAAQJ,EAAa5yC,EAAEozC,IAAKlwE,KAAK+tE,OAElDxe,GAAIvkD,MAAa+kE,GAAQN,EAAa/0E,EAAEu1E,IAAKjwE,KAAK8tE,OAClDve,GAAIvkD,MAAaglE,GAAQN,EAAa5yC,EAAEozC,IAAKlwE,KAAK+tE,SAIpDR,EAAiBxtB,OAAOwP,OAElB,IAAI+c,GAAgBrxD,EAAAxe,QAAayiB,KAAM,GAIhD,OAAAovD,IA9mBkClC,EAAA3vE,QAgnBlCuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MnH4iiBAzI,GAAQ0B,QmH5iiBO6xE,InH8iiBZhvD,2CAA2C,2CAA2C0uD,iDAAiD,mDAAmDK,sDAAsD,SAASp0E,EAAQkB,EAAOJ,GAC3Q,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IoH7qjBnF,IAAA8S,GAAAhhB,EAA4B,2CAK5B,IAAAmyE,GAAAnyE,EAAiC,iDAKjC,IAAAk2E,GAAA,SAAA3nE,GAAsCV,EAAAqoE,EAAA3nE,EAyJrC,SAAA2nE,GAAY1oD,EAA8B6kD,EAAkC8D,EAAuBC,EAA0BlsE,EAAqBooE,EAAuBC,EAAsB8D,EAA0BC,EAA6BC,EAA8B/D,GAAxQ,GAAAhlD,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAA6kD,QAAA,GAAgC,CAAhCA,EAAA,WAAkC,GAAA8D,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,GAA0B,GAAAlsE,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAAooE,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAA8D,QAAA,GAAwB,CAAxBA,EAAA,KAA0B,GAAAC,QAAA,GAA2B,CAA3BA,EAAA,KAA6B,GAAAC,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAA/D,QAAA,GAAkB,CAAlBA,EAAA,KAEnRjkE,EAAAxN,KAAAgF,KAAMynB,EAAU6kD,EA9ITtsE,MAAAqsD,aAAsB,CAgJ7BrsD,MAAKywE,WAAaL,CAClBpwE,MAAKouE,eAAiBiC,CACtBrwE,MAAKE,QAAUiE,CACfnE,MAAK0wE,YAAcnE,CACnBvsE,MAAK2wE,YAAcnE,CACnBxsE,MAAK4wE,WAAaN,CAClBtwE,MAAK6wE,cAAgBN,CACrBvwE,MAAK8wE,eAAiBN,CACtBxwE,MAAK4sE,KAAOH,EAnJbzqE,OAAAC,eAAWkuE,EAAAjuE,UAAA,apHisjBJC,IoHjsjBP,WAEC,MAAOnC,MAAKywE,YpHksjBNltE,IoH/rjBP,SAAqBC,GAEpBxD,KAAKywE,WAAajtE,CAClBxD,MAAK6sE,yBpHgsjBCxqE,WAAY,KACZC,aAAc,MoH3rjBrBN,QAAAC,eAAWkuE,EAAAjuE,UAAA,gBpHisjBJC,IoHjsjBP,WAEC,MAAOnC,MAAKouE,gBpHksjBN7qE,IoH/rjBP,SAAwBC,GAEvBxD,KAAKouE,eAAiB5qE,CACtBxD,MAAK6sE,yBpHgsjBCxqE,WAAY,KACZC,aAAc,MoH3rjBrBN,QAAAC,eAAWkuE,EAAAjuE,UAAA,UpHisjBJC,IoHjsjBP,WAEC,MAAOnC,MAAKE,SpHksjBNqD,IoH/rjBP,SAAkBC,GAEjBxD,KAAKE,QAAUsD,CACfxD,MAAK6sE,yBpHgsjBCxqE,WAAY,KACZC,aAAc,MoH3rjBrBN,QAAAC,eAAWkuE,EAAAjuE,UAAA,apHisjBJC,IoHjsjBP,WAEC,MAAOnC,MAAK0wE,apHksjBNntE,IoH/rjBP,SAAqBC,GAEpBxD,KAAK+wE,aAAavtE,IpHgsjBZnB,WAAY,KACZC,aAAc,MoH9rjBd6tE,GAAAjuE,UAAA6uE,aAAP,SAAoBvtE,GAEnBxD,KAAK0wE,YAAcltE,CACnBxD,MAAK6sE,uBACL7sE,MAAK8sE,kBAMN9qE,QAAAC,eAAWkuE,EAAAjuE,UAAA,apH+rjBJC,IoH/rjBP,WAEC,MAAOnC,MAAK2wE,apHgsjBNptE,IoH7rjBP,SAAqBC,GAGpBxD,KAAKgxE,aAAaxtE,IpH6rjBZnB,WAAY,KACZC,aAAc,MoH1rjBd6tE,GAAAjuE,UAAA8uE,aAAP,SAAoBxtE,GAEnBxD,KAAK2wE,YAAcntE,CACnBxD,MAAK6sE,uBACL7sE,MAAK8sE,kBAON9qE,QAAAC,eAAWkuE,EAAAjuE,UAAA,apH0rjBJC,IoH1rjBP,WAEC,MAAOnC,MAAK4wE,YpH2rjBNrtE,IoHxrjBP,SAAqBC,GAEpBxD,KAAK4wE,WAAaptE,CAClBxD,MAAK6sE,yBpHyrjBCxqE,WAAY,KACZC,aAAc,MoHprjBrBN,QAAAC,eAAWkuE,EAAAjuE,UAAA,gBpH0rjBJC,IoH1rjBP,WAEC,MAAOnC,MAAK6wE,epH2rjBNttE,IoHxrjBP,SAAwBC,GAEvBxD,KAAK6wE,cAAgBrtE,CACrBxD,MAAK6sE,yBpHyrjBCxqE,WAAY,KACZC,aAAc,MoHprjBrBN,QAAAC,eAAWkuE,EAAAjuE,UAAA,OpH0rjBJC,IoH1rjBP,WAEC,MAAOnC,MAAK4sE,MpH2rjBNrpE,IoHxrjBP,SAAeC,GAEdxD,KAAK4sE,KAAOppE,CACZxD,MAAK6sE,yBpHyrjBCxqE,WAAY,KACZC,aAAc,MoHzpjBd6tE,GAAAjuE,UAAA6qE,gBAAP,SAAuB53D,EAAqBm3D,GAE3C,GAAItyB,EACJ,IAAI6R,EACJ,IAAIwD,EACJ,IAAIC,EAEJ,IAAI50D,EACJ,IAAIoiC,EACJ,IAAIj6B,EACJ,IAAIE,EACJ,IAAI2U,EACJ,IAAIq3D,EACJ,IAAIC,EAEJ,IAAIhvD,EACJ,IAAIixD,EAEJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAI9D,GAAoB,CAExB,IAAIJ,EACJ,IAAIC,EACJ,IAAIF,GAAoB,CACxB,IAAIoE,GAAyB,CAC7B,IAAIC,GAA2B,CAE/B,IAAIlE,EACJ,IAAIC,EAGJrtE,MAAKqsD,aAAe,CAGpB,IAAIklB,GAA8B,EAAE73D,KAAKk9B,GAAG52C,KAAK0wE,WAEjD,IAAIpE,GAAgBrxD,EAAAxe,QAAaguD,SAAU,CAE1C,GAAI8iB,GAAuDp4D,CAG3D,IAAInV,KAAK8wE,eAAgB,CACxB9wE,KAAKqsD,eAAiBrsD,KAAK2wE,YAAc,IAAI3wE,KAAK0wE,YAAc,EAChEpD,IAActtE,KAAK2wE,YAAY3wE,KAAK0wE,YAAY,EAEjD,GAAI1wE,KAAK4wE,WAAY,CACpB5wE,KAAKqsD,cAAgB,GAAGrsD,KAAK0wE,YAAc,EAC3CpD,IAActtE,KAAK0wE,YAAY,EAEhC,GAAI1wE,KAAK6wE,cAAe,CACvB7wE,KAAKqsD,cAAgB,GAAGrsD,KAAK0wE,YAAc,EAC3CpD,IAActtE,KAAK0wE,YAAY,EAIhC,GAAI1wE,KAAKqsD,cAAgBkhB,EAAiBvgC,YAAa,CACtDgN,EAAUuzB,EAAiBvzB,QAAQ73C,IAAIorE,EAAiB1d,YACxDhE,GAAY0hB,EAAiB1hB,UAAU1pD,IAAInC,KAAKqsD,aAChDgD,GAAUke,EAAiBle,QAAQltD,IAAInC,KAAKqsD,aAC5CiD,GAAWie,EAAiBje,SAASntD,IAAInC,KAAKqsD,kBACxC,CACNrS,EAAU,GAAI0S,aAAY4gB,EAC1BzhB,GAAY,GAAItc,cAAavvC,KAAKqsD,aAAa,EAC/CgD,GAAU,GAAI9f,cAAavvC,KAAKqsD,aAAa,EAC7CiD,GAAW,GAAI/f,cAAavvC,KAAKqsD,aAAa,EAE9CrsD,MAAK8sE,kBAGNiC,EAAO,CACPC,GAAO,CAGP,IAAIhvE,KAAK4wE,YAAc5wE,KAAKywE,WAAa,EAAG,CAE3C/4D,GAAK,GAAI1X,KAAKE,OAGd,IAAIF,KAAK4sE,KAAM,CACdQ,EAAK,CACLC,GAAK,CACLH,IAASx1D,CACTy1D,GAAQ,MAEF,CACNC,EAAK,CACLC,IAAM,CACNH,GAAQ,CACRC,GAAQz1D,EAGTm0C,EAAUkjB,GAAQ,CAClBljB,GAAUkjB,EAAO,GAAK7B,CACtBrhB,GAAUkjB,EAAO,GAAK5B,CACtB9d,GAAQ0f,GAAQ,CAChB1f,GAAQ0f,EAAO,GAAK3B,CACpB/d,GAAQ0f,EAAO,GAAK1B,CACpB/d,GAASyf,GAAQ,CACjBzf,GAASyf,EAAO,GAAK,CACrBzf,GAASyf,EAAO,GAAK,CACrBA,IAAQ,CAERsC,IAAmB,CAEnB,KAAK32E,EAAI,EAAGA,GAAKsF,KAAK0wE,cAAeh2E,EAAG,CAGvCu2E,EAAkBv2E,EAAE62E,CACpB1uE,GAAI7C,KAAKywE,WAAW/2D,KAAKmK,IAAIotD,EAC7BluE,GAAI/C,KAAKywE,WAAW/2D,KAAKiK,IAAIstD,EAE7B,IAAIjxE,KAAK4sE,KAAM,CACdM,GAASx1D,CACTy1D,GAAQpqE,MACF,CACNmqE,EAAQnqE,CACRoqE,GAAQz1D,EAGT,GAAIhd,GAAKsF,KAAK0wE,YAAa,CAC1B7kB,EAAUkjB,GAAQljB,EAAUohB,EAAa,EACzCphB,GAAUkjB,EAAO,GAAKljB,EAAUohB,EAAa,EAC7CphB,GAAUkjB,EAAO,GAAKljB,EAAUohB,EAAa,OAEvC,CACNphB,EAAUkjB,GAAQlsE,CAClBgpD,GAAUkjB,EAAO,GAAK7B,CACtBrhB,GAAUkjB,EAAO,GAAK5B,EAGvB9d,EAAQ0f,GAAQ,CAChB1f,GAAQ0f,EAAO,GAAK3B,CACpB/d,GAAQ0f,EAAO,GAAK1B,CACpB/d,GAASyf,GAAQ,CACjBzf,GAASyf,EAAO,GAAK,CACrBzf,GAASyf,EAAO,GAAK,CACrBA,IAAQ,CAER,IAAIr0E,EAAI,EAAG,CAEVs/C,EAAQg1B,KAAUqC,EAAkB,CACpCr3B,GAAQg1B,KAAUsC,CAClBt3B,GAAQg1B,KAAUqC,EAGnBA,GAAmB,GAKrB,GAAIrxE,KAAK6wE,eAAiB7wE,KAAKouE,eAAiB,EAAG,CAElD12D,EAAI,GAAI1X,KAAKE,OAEb+sE,GAAaoE,EAAgB,CAE7BC,GAAoBD,CAGpB,IAAIrxE,KAAK4sE,KAAM,CACdQ,GAAM,CACNC,GAAK,CACLH,IAASx1D,CACTy1D,GAAQ,MACF,CACNC,EAAK,CACLC,GAAK,CACLH,GAAQ,CACRC,GAAQz1D,EAGT,GAAIhd,EAAI,EAAG,CACVmxD,EAAUkjB,GAAQ,CAClBljB,GAAUkjB,EAAO,GAAK7B,CACtBrhB,GAAUkjB,EAAO,GAAK5B,CACtB9d,GAAQ0f,GAAQ,CAChB1f,GAAQ0f,EAAO,GAAK3B,CACpB/d,GAAQ0f,EAAO,GAAK1B,CACpB/d,GAASyf,GAAQ,CACjBzf,GAASyf,EAAO,GAAK,CACrBzf,GAASyf,EAAO,GAAK,CACrBA,IAAQ,EAGTsC,GAAmB,CAEnB,KAAK32E,EAAI,EAAGA,GAAKsF,KAAK0wE,cAAeh2E,EAAG,CAGvCu2E,EAAkBv2E,EAAE62E,CACpB1uE,GAAI7C,KAAKouE,eAAe10D,KAAKmK,IAAIotD,EACjCluE,GAAI/C,KAAKouE,eAAe10D,KAAKiK,IAAIstD,EAEjC,IAAIjxE,KAAK4sE,KAAM,CACdM,GAASx1D,CACTy1D,GAAQpqE,MACF,CACNmqE,EAAQnqE,CACRoqE,GAAQz1D,EAGT,GAAIhd,GAAKsF,KAAK0wE,YAAa,CAC1B7kB,EAAUkjB,GAAQljB,EAAUohB,EAAa,EACzCphB,GAAUkjB,EAAO,GAAKljB,EAAUohB,EAAa,EAC7CphB,GAAUkjB,EAAO,GAAKljB,EAAUohB,EAAa,OACvC,CACNphB,EAAUkjB,GAAQlsE,CAClBgpD,GAAUkjB,EAAO,GAAK7B,CACtBrhB,GAAUkjB,EAAO,GAAK5B,EAGvB9d,EAAQ0f,GAAQ,CAChB1f,GAAQ0f,EAAO,GAAK3B,CACpB/d,GAAQ0f,EAAO,GAAK1B,CACpB/d,GAASyf,GAAQ,CACjBzf,GAASyf,EAAO,GAAK,CACrBzf,GAASyf,EAAO,GAAK,CACrBA,IAAQ,CAER,IAAIr0E,EAAI,EAAG,CAEVs/C,EAAQg1B,KAAUqC,EAAkB,CACpCr3B,GAAQg1B,KAAUqC,CAClBr3B,GAAQg1B,KAAUsC,EAGnBD,GAAmB,GAQrBH,EAAMlxE,KAAKouE,eAAiBpuE,KAAKywE,UACjCU,GAAcD,EAAGlxE,KAAKE,OACtBkxE,GAAeD,GAAe,EAAI,EAAInxE,KAAKE,QAAQgxE,CAGnD,IAAIlxE,KAAK8wE,eAAgB,CACxB,GAAIr2E,EACJ,IAAIuN,EACJ,IAAIuU,EACJ,IAAIxU,EACJ,IAAIypE,GAAYC,EAAYC,EAAgBC,CAE5C,KAAK70C,EAAI,EAAGA,GAAK98B,KAAK2wE,cAAe7zC,EAAG,CACvC9c,EAAShgB,KAAKywE,WAAe3zC,EAAE98B,KAAK2wE,aAAc3wE,KAAKywE,WAAazwE,KAAKouE,eACzE12D,KAAM1X,KAAKE,QAAQ,GAAM48B,EAAE98B,KAAK2wE,YAAY3wE,KAAKE,OAEjD+sE,GAAaoE,EAAgB,CAE7B,KAAK32E,EAAI,EAAGA,GAAKsF,KAAK0wE,cAAeh2E,EAAG,CAEvCu2E,EAAkBv2E,EAAE62E,CACpB1uE,GAAImd,EAAOtG,KAAKmK,IAAIotD,EACpBluE,GAAIid,EAAOtG,KAAKiK,IAAIstD,EACpBO,GAAMJ,EAAY13D,KAAKmK,IAAIotD,EAC3BQ,GAAML,EAAY13D,KAAKiK,IAAIstD,EAE3B,IAAIjxE,KAAK4sE,KAAM,CACdQ,EAAK,CACLC,IAAMmE,CACNtE,IAASx1D,CACTy1D,GAAQpqE,CACR2uE,GAAUP,CACVQ,GAAUF,MAEJ,CACNrE,GAAMoE,CACNnE,GAAK,CACLH,GAAQnqE,CACRoqE,GAAQz1D,CACRg6D,GAAUD,CACVE,GAAUR,EAGX,GAAIz2E,GAAKsF,KAAK0wE,YAAa,CAC1B7kB,EAAUkjB,GAAQljB,EAAUohB,EAC5BphB,GAAUkjB,EAAO,GAAKljB,EAAUohB,EAAa,EAC7CphB,GAAUkjB,EAAO,GAAKljB,EAAUohB,EAAa,EAC7C5d,GAAQ0f,GAAQyC,CAChBniB,GAAQ0f,EAAO,GAAKoC,CACpB9hB,GAAQ0f,EAAO,GAAK0C,CACpBniB,GAASyf,GAAQ0C,CACjBniB,GAASyf,EAAO,GAAK3B,CACrB9d,GAASyf,EAAO,GAAK1B,MACf,CACNxhB,EAAUkjB,GAAQlsE,CAClBgpD,GAAUkjB,EAAO,GAAK7B,CACtBrhB,GAAUkjB,EAAO,GAAK5B,CACtB9d,GAAQ0f,GAAQyC,CAChBniB,GAAQ0f,EAAO,GAAK2C,CACpBriB,GAAQ0f,EAAO,GAAK4C,CACpBriB,GAASyf,IAAS0C,CAClBniB,GAASyf,EAAO,GAAK3B,CACrB9d,GAASyf,EAAO,GAAK1B,EAEtB0B,GAAQ,CAGR,IAAIr0E,EAAI,GAAKoiC,EAAI,EAAG,CACnBriC,EAAI42E,CACJrpE,GAAIqpE,EAAkB,CACtB90D,GAAIvU,EAAIhI,KAAK0wE,YAAc,CAC3B3oE,GAAItN,EAAIuF,KAAK0wE,YAAc,CAE3B12B,GAAQg1B,KAAUv0E,CAClBu/C,GAAQg1B,KAAUhnE,CAClBgyC,GAAQg1B,KAAUzyD,CAElBy9B,GAAQg1B,KAAUv0E,CAClBu/C,GAAQg1B,KAAUzyD,CAClBy9B,GAAQg1B,KAAUjnE,EAGnBspE,MAMH9D,EAAiB5jB,WAAW3P,EAE5BuzB,GAAiBt9B,aAAa4b,EAC9B0hB,GAAiBxf,WAAWsB,EAC5Bke,GAAiBtf,YAAYqB,OAEvB,IAAIgd,GAAgBrxD,EAAAxe,QAAayiB,KAAM,CAC7C,GAAIqwD,GAA2Cp6D,CAE/C,IAAIq6D,GAAqBxvE,KAAK2wE,YAAY3wE,KAAK0wE,YAAY,EAAI1wE,KAAK0wE,WACpE7kB,GAAY,GAAItc,cAAaigC,EAAY,EACzC,IAAI7vC,GAAyB,GAAI4P,cAAaigC,EAE9CT,GAAO,CAEPC,GAAO,CACP,IAAIrvD,GAAU,EACd,KAAKmd,EAAI,EAAGA,GAAK98B,KAAK2wE,cAAe7zC,EAAG,CAEvC9c,EAAShgB,KAAKywE,WAAe3zC,EAAE98B,KAAK2wE,aAAc3wE,KAAKywE,WAAazwE,KAAKouE,eACzE12D,KAAM1X,KAAKE,QAAQ,GAAM48B,EAAE98B,KAAK2wE,YAAY3wE,KAAKE,OAEjD,KAAKxF,EAAI,EAAGA,GAAKsF,KAAK0wE,cAAeh2E,EAAG,CAEvCu2E,EAAkBv2E,EAAE62E,CACpB1uE,GAAImd,EAAOtG,KAAKmK,IAAIotD,EACpBluE,GAAIid,EAAOtG,KAAKiK,IAAIstD,EAEpB,IAAIjxE,KAAK4sE,KAAM,CACdM,GAASx1D,CACTy1D,GAAQpqE,MACF,CACNmqE,EAAQnqE,CACRoqE,GAAQz1D,EAGT,GAAIhd,EAAI,EAAG,CAEVmxD,EAAUkjB,KAAUlsE,CACpBgpD,GAAUkjB,KAAU7B,CACpBrhB,GAAUkjB,KAAU5B,CAEpBxtC,GAAUqvC,KAAU,CAGpB,IAAIlyC,EAAI,EAAG,CACV,GAAI80C,GAAe90C,GAAK,EAAI,GAAK,GAAG98B,KAAK0wE,YAAYh2E,GAAK,GAAGA,GAAK,EAAIsF,KAAK0wE,YAAY,EACvF7kB,GAAUkjB,GAAQljB,EAAUkjB,KAAS6C,EACrC/lB,GAAUkjB,GAAQljB,EAAUkjB,KAAS6C,EACrC/lB,GAAUkjB,GAAQljB,EAAUkjB,KAAS6C,EAErC/lB,GAAUkjB,KAAUlsE,CACpBgpD,GAAUkjB,KAAU7B,CACpBrhB,GAAUkjB,KAAU5B,CAEpBxtC,GAAUqvC,KAAU,GAMtB,GAAIt0E,EAAIsF,KAAK0wE,YAAa,CACzB7kB,EAAUkjB,KAAUlsE,CACpBgpD,GAAUkjB,KAAU7B,CACpBrhB,GAAUkjB,KAAU5B,IAMvBoC,EAAat/B,aAAa4b,EAC1B0jB,GAAa5iB,aAAahtB,IAOrBwwC,GAAAjuE,UAAA2rE,WAAP,SAAkB14D,EAAqBm3D,GAEtC,GAAI5xE,EACJ,IAAIoiC,EACJ,IAAIj6B,EACJ,IAAIE,EACJ,IAAIkuE,EACJ,IAAI1hB,EAEJ,IAAI+c,GAAgBrxD,EAAAxe,QAAaguD,SAAU,CAE1C,GAAI8iB,GAAuDp4D,CAG3D,IAAIo4D,EAAiBhe,KAAOvvD,KAAKqsD,cAAgBkhB,EAAiBvgC,YAAa,CAC9EuiB,EAAMge,EAAiBhe,IAAIptD,IAAInC,KAAKqsD,kBAC9B,CACNkD,EAAM,GAAIhgB,cAAavvC,KAAKqsD,aAAa,GAI1C,GAAIklB,GAA8B,EAAE73D,KAAKk9B,GAAG52C,KAAK0wE,WAGjD,IAAI1lE,GAAe,CAGnB,IAAIhL,KAAK4wE,WAAY,CAEpBrhB,EAAIvkD,KAAW,GAAIhL,KAAK8tE,OACxBve,GAAIvkD,KAAW,GAAIhL,KAAK+tE,OAExB,KAAKrzE,EAAI,EAAGA,GAAKsF,KAAK0wE,cAAeh2E,EAAG,CAEvCu2E,EAAkBv2E,EAAE62E,CACpB1uE,GAAI,GAAM,IAAM6W,KAAKmK,IAAIotD,EACzBluE,GAAI,GAAM,GAAI2W,KAAKiK,IAAIstD,EAEvB1hB,GAAIvkD,KAAWnI,EAAE7C,KAAK8tE,OACtBve,GAAIvkD,KAAWjI,EAAE/C,KAAK+tE,SAKxB,GAAI/tE,KAAK6wE,cAAe,CAEvBthB,EAAIvkD,KAAW,GAAIhL,KAAK8tE,OACxBve,GAAIvkD,KAAW,GAAIhL,KAAK+tE,OAExB,KAAKrzE,EAAI,EAAGA,GAAKsF,KAAK0wE,cAAeh2E,EAAG,CAEvCu2E,EAAkBv2E,EAAE62E,CACpB1uE,GAAI,GAAM,GAAI6W,KAAKmK,IAAIotD,EACvBluE,GAAI,GAAM,GAAI2W,KAAKiK,IAAIstD,EAEvB1hB,GAAIvkD,KAAWnI,EAAE7C,KAAK8tE,OACtBve,GAAIvkD,KAAWjI,EAAE/C,KAAK+tE,SAKxB,GAAI/tE,KAAK8wE,eAAgB,CACxB,IAAKh0C,EAAI,EAAGA,GAAK98B,KAAK2wE,cAAe7zC,EAAG,CACvC,IAAKpiC,EAAI,EAAGA,GAAKsF,KAAK0wE,cAAeh2E,EAAG,CAEvC60D,EAAIvkD,KAAatQ,EAAEsF,KAAK0wE,YAAc1wE,KAAK8tE,OAC3Cve,GAAIvkD,KAAa8xB,EAAE98B,KAAK2wE,YAAc3wE,KAAK+tE,UAM9CR,EAAiBxtB,OAAOwP,OAElB,IAAI+c,GAAgBrxD,EAAAxe,QAAayiB,KAAM,GAIhD,OAAAixD,IA5oBsC/D,EAAA3vE,QA8oBtCuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MpHgljBAzI,GAAQ0B,QoHhljBO0zE,IpHkljBZ7wD,2CAA2C,2CAA2C0uD,iDAAiD,mDAAmD6D,mDAAmD,SAAS53E,EAAQkB,EAAOJ,GACxQ,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IqH/ukBnF,IAAA8S,GAAAhhB,EAA4B,2CAK5B,IAAAmyE,GAAAnyE,EAAiC,iDAKjC,IAAA63E,GAAA,SAAAtpE,GAAmCV,EAAAgqE,EAAAtpE,EAkBlC,SAAAspE,GAAYrqD,EAA8B6kD,EAAkCpoE,EAAoBC,EAAqBooE,EAAsBC,EAAsBC,EAAoBsF,GAAzK,GAAAtqD,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAA6kD,QAAA,GAAgC,CAAhCA,EAAA,WAAkC,GAAApoE,QAAA,GAAkB,CAAlBA,EAAA,IAAoB,GAAAC,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAAooE,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,KAAoB,GAAAsF,QAAA,GAA2B,CAA3BA,EAAA,MAGpLvpE,EAAAxN,KAAAgF,KAAMynB,EAAU6kD,EAEhBtsE,MAAK0sE,WAAaH,CAClBvsE,MAAK2sE,WAAaH,CAClBxsE,MAAK4sE,KAAOH,CACZzsE,MAAKC,OAASiE,CACdlE,MAAKE,QAAUiE,CACfnE,MAAKgyE,aAAeD,EAOrB/vE,OAAAC,eAAW6vE,EAAA5vE,UAAA,arHyukBJC,IqHzukBP,WAEC,MAAOnC,MAAK0sE,YrH0ukBNnpE,IqHvukBP,SAAqBC,GAGpBxD,KAAK0sE,WAAalpE,CAElBxD,MAAK6sE,uBACL7sE,MAAK8sE,mBrHsukBCzqE,WAAY,KACZC,aAAc,MqH/tkBrBN,QAAAC,eAAW6vE,EAAA5vE,UAAA,arHsukBJC,IqHtukBP,WAEC,MAAOnC,MAAK2sE,YrHuukBNppE,IqHpukBP,SAAqBC,GAGpBxD,KAAK2sE,WAAanpE,CAElBxD,MAAK6sE,uBACL7sE,MAAK8sE,mBrHmukBCzqE,WAAY,KACZC,aAAc,MqH7tkBrBN,QAAAC,eAAW6vE,EAAA5vE,UAAA,OrHmukBJC,IqHnukBP,WAEC,MAAOnC,MAAK4sE,MrHoukBNrpE,IqHjukBP,SAAeC,GAEdxD,KAAK4sE,KAAOppE,CAEZxD,MAAK6sE,yBrHiukBCxqE,WAAY,KACZC,aAAc,MqH5tkBrBN,QAAAC,eAAW6vE,EAAA5vE,UAAA,erHkukBJC,IqHlukBP,WAEC,MAAOnC,MAAKgyE,crHmukBNzuE,IqHhukBP,SAAuBC,GAEtBxD,KAAKgyE,aAAexuE,CAEpBxD,MAAK6sE,yBrHgukBCxqE,WAAY,KACZC,aAAc,MqH3tkBrBN,QAAAC,eAAW6vE,EAAA5vE,UAAA,SrHiukBJC,IqHjukBP,WAEC,MAAOnC,MAAKC,QrHkukBNsD,IqH/tkBP,SAAiBC,GAEhBxD,KAAKC,OAASuD,CAEdxD,MAAK6sE,yBrH+tkBCxqE,WAAY,KACZC,aAAc,MqH1tkBrBN,QAAAC,eAAW6vE,EAAA5vE,UAAA,UrHgukBJC,IqHhukBP,WAEC,MAAOnC,MAAKE,SrHiukBNqD,IqH9tkBP,SAAkBC,GAEjBxD,KAAKE,QAAUsD,CAEfxD,MAAK6sE,yBrH8tkBCxqE,WAAY,KACZC,aAAc,MqHztkBdwvE,GAAA5vE,UAAA6qE,gBAAP,SAAuB53D,EAAqBm3D,GAE3C,GAAItyB,EACJ,IAAIn3C,GAAUE,CACd,IAAIuqE,EACJ,IAAIhyE,EACJ,IAAI22E,GAAYjyE,KAAK0sE,WAAa,CAElC,IAAIqC,GAAaC,CAEjB,IAAIkD,EACJ,IAAIC,EAEJ,IAAI7F,GAAgBrxD,EAAAxe,QAAaguD,SAAU,CAE1C,GAAI8iB,GAAuDp4D,CAE3D,IAAI63B,IAAsBhtC,KAAK2sE,WAAa,GAAGsF,CAC/C,IAAIpmB,EACJ,IAAIwD,EACJ,IAAIC,EAEJ,IAAItvD,KAAKgyE,aACRhlC,GAAe,CAEhBsgC,GAAattE,KAAK2sE,WAAW3sE,KAAK0sE,WAAW,CAE7C,IAAI1sE,KAAKgyE,aACR1E,GAAc,CAEf,IAAIC,EAAiBvzB,SAAW,MAAQszB,GAAcC,EAAiBvzB,QAAQ/+C,OAAQ,CACtF++C,EAAUuzB,EAAiBvzB,QAAQ73C,IAAIorE,EAAiB1d,iBAClD,CACN7V,EAAU,GAAI0S,aAAY4gB,EAE1BttE,MAAK8sE,kBAGN,GAAI9/B,GAAeugC,EAAiBvgC,YAAa,CAChD6e,EAAY0hB,EAAiB1hB,UAAU1pD,IAAI6qC,EAC3CqiB,GAAUke,EAAiBle,QAAQltD,IAAI6qC,EACvCsiB,GAAWie,EAAiBje,SAASntD,IAAI6qC,OACnC,CACN6e,EAAY,GAAItc,cAAavC,EAAY,EACzCqiB,GAAU,GAAI9f,cAAavC,EAAY,EACvCsiB,GAAW,GAAI/f,cAAavC,EAAY,EAExChtC,MAAK8sE,kBAGNkC,EAAO,CAEPD,GAAO,CAEP,KAAKoD,EAAK,EAAGA,GAAMnyE,KAAK2sE,aAAcwF,EAAI,CAEzC,IAAKD,EAAK,EAAGA,GAAMlyE,KAAK0sE,aAAcwF,EAAI,CACzCrvE,GAAKqvE,EAAGlyE,KAAK0sE,WAAa,IAAI1sE,KAAKC,MACnC8C,IAAKovE,EAAGnyE,KAAK2sE,WAAa,IAAI3sE,KAAKE,OAEnC2rD,GAAUkjB,GAAQlsE,CAClB,IAAI7C,KAAK4sE,KAAM,CACd/gB,EAAUkjB,EAAO,GAAK,CACtBljB,GAAUkjB,EAAO,GAAKhsE,MAChB,CACN8oD,EAAUkjB,EAAO,GAAKhsE,CACtB8oD,GAAUkjB,EAAO,GAAK,EAGvB1f,EAAQ0f,GAAQ,CAEhB,IAAI/uE,KAAK4sE,KAAM,CACdvd,EAAQ0f,EAAO,GAAK,CACpB1f,GAAQ0f,EAAO,GAAK,MACd,CACN1f,EAAQ0f,EAAO,GAAK,CACpB1f,GAAQ0f,EAAO,IAAM,EAGtBzf,EAASyf,GAAQ,CACjBzf,GAASyf,EAAO,GAAK,CACrBzf,GAASyf,EAAO,GAAK,CAErBA,IAAQ,CAGR,IAAI/uE,KAAKgyE,aAAc,CAEtB,IAAK,GAAIt3E,GAAWq0E,EAAMr0E,EAAIq0E,EAAO,IAAKr0E,EAAG,CAC5CmxD,EAAUnxD,GAAKmxD,EAAUnxD,EAAI,EAC7B20D,GAAQ30D,IAAM20D,EAAQ30D,EAAI,EAC1B40D,GAAS50D,IAAM40D,EAAS50D,EAAI,GAG7Bq0E,GAAQ,EAIT,GAAImD,GAAMlyE,KAAK0sE,YAAcyF,GAAMnyE,KAAK2sE,WAAY,CAEnDrxE,EAAO42E,EAAKC,EAAGF,CACf,IAAIG,GAAcpyE,KAAKgyE,aAAc,EAAI,CAEzCh4B,GAAQg1B,KAAU1zE,EAAK82E,CACvBp4B,GAAQg1B,MAAW1zE,EAAO22E,GAAIG,CAC9Bp4B,GAAQg1B,MAAW1zE,EAAO22E,EAAK,GAAGG,CAClCp4B,GAAQg1B,KAAU1zE,EAAK82E,CACvBp4B,GAAQg1B,MAAW1zE,EAAO22E,EAAK,GAAGG,CAClCp4B,GAAQg1B,MAAW1zE,EAAO,GAAG82E,CAE7B,IAAIpyE,KAAKgyE,aAAc,CAEtBh4B,EAAQg1B,MAAW1zE,EAAO22E,EAAK,GAAGG,EAAO,CACzCp4B,GAAQg1B,MAAW1zE,EAAO22E,GAAIG,EAAO,CACrCp4B,GAAQg1B,KAAU1zE,EAAK82E,EAAO,CAC9Bp4B,GAAQg1B,MAAW1zE,EAAO,GAAG82E,EAAO,CACpCp4B,GAAQg1B,MAAW1zE,EAAO22E,EAAK,GAAGG,EAAO,CACzCp4B,GAAQg1B,KAAU1zE,EAAK82E,EAAO,KAOlC7E,EAAiB5jB,WAAW3P,EAE5BuzB,GAAiBt9B,aAAa4b,EAC9B0hB,GAAiBxf,WAAWsB,EAC5Bke,GAAiBtf,YAAYqB,OAEvB,IAAIgd,GAAgBrxD,EAAAxe,QAAayiB,KAAM,CAC7C,GAAIqwD,GAA2Cp6D,CAE/C,IAAIq6D,GAAsBxvE,KAAK2sE,WAAa,EAAKsF,CACjD,IAAIpmB,EACJ,IAAIlsB,EAEJ,IAAIsvC,GAAYjvE,KAAKC,OAAO,CAC5B,IAAIivE,GAAYlvE,KAAKE,QAAQ,CAE7B2rD,GAAY,GAAItc,cAAaigC,EAAY,EACzC7vC,GAAY,GAAI4P,cAAaigC,EAE7BR,GAAO,CAEPD,GAAO,CAEP,KAAKoD,EAAK,EAAGA,GAAMnyE,KAAK2sE,aAAcwF,EAAI,CACzCtmB,EAAUkjB,MAAWE,CACrBpjB,GAAUkjB,KAAU,CACpBljB,GAAUkjB,KAAUoD,EAAGnyE,KAAKE,QAAUgvE,CAEtCrjB,GAAUkjB,KAAUE,CACpBpjB,GAAUkjB,KAAU,CACpBljB,GAAUkjB,KAAUoD,EAAGnyE,KAAKE,QAAUgvE,CAEtCvvC,GAAUqvC,KAAU,EAIrB,IAAKkD,EAAK,EAAGA,GAAMlyE,KAAK0sE,aAAcwF,EAAI,CACzCrmB,EAAUkjB,KAAUmD,EAAGlyE,KAAKC,OAASgvE,CACrCpjB,GAAUkjB,KAAU,CACpBljB,GAAUkjB,MAAWG,CAErBrjB,GAAUkjB,KAAUmD,EAAGlyE,KAAKC,OAASgvE,CACrCpjB,GAAUkjB,KAAU,CACpBljB,GAAUkjB,KAAUG,CAEpBvvC,GAAUqvC,KAAU,EAIrBO,EAAat/B,aAAa4b,EAC1B0jB,GAAa5iB,aAAahtB,IAOrBmyC,GAAA5vE,UAAA2rE,WAAP,SAAkB14D,EAAqBm3D,GAEtC,GAAI/c,EACJ,IAAIviB,EAEJ,IAAIs/B,GAAgBrxD,EAAAxe,QAAaguD,SAAU,CAE1Czd,GAAgBhtC,KAAK2sE,WAAa,IAAM3sE,KAAK0sE,WAAa,EAE1D,IAAI1sE,KAAKgyE,aACRhlC,GAAe,CAEhB,IAAIugC,GAAuDp4D,CAE3D,IAAIo4D,EAAiBhe,KAAOviB,GAAeugC,EAAiBvgC,YAAa,CACxEuiB,EAAMge,EAAiBhe,IAAIptD,IAAI6qC,OACzB,CACNuiB,EAAM,GAAIhgB,cAAavC,EAAY,EACnChtC,MAAK6sE,wBAGN,GAAI7hE,GAAe,CAEnB,KAAK,GAAImnE,GAAY,EAAGA,GAAMnyE,KAAK2sE,aAAcwF,EAAI,CAEpD,IAAK,GAAID,GAAY,EAAGA,GAAMlyE,KAAK0sE,aAAcwF,EAAI,CACpD3iB,EAAIvkD,GAAUknE,EAAGlyE,KAAK0sE,WAAY1sE,KAAK8tE,OACvCve,GAAIvkD,EAAQ,IAAM,EAAImnE,EAAGnyE,KAAK2sE,YAAY3sE,KAAK+tE,OAC/C/iE,IAAS,CAET,IAAIhL,KAAKgyE,aAAc,CACtBziB,EAAIvkD,GAAUknE,EAAGlyE,KAAK0sE,WAAY1sE,KAAK8tE,OACvCve,GAAIvkD,EAAM,IAAM,EAAImnE,EAAGnyE,KAAK2sE,YAAY3sE,KAAK+tE,OAC7C/iE,IAAS,IAKZuiE,EAAiBxtB,OAAOwP,OAGlB,IAAI+c,GAAgBrxD,EAAAxe,QAAayiB,KAAM,GAIhD,OAAA4yD,IAtWmC1F,EAAA3vE,QAwWnCuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MrHuqkBAzI,GAAQ0B,QqHvqkBOq1E,IrHyqkBZxyD,2CAA2C,2CAA2C0uD,iDAAiD,mDAAmDqE,qDAAqD,SAASp4E,EAAQkB,EAAOJ,GAC1Q,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IsH/hlBnF,IAAA+lE,GAAAj0E,EAAoC,qDAKpC,IAAAq4E,GAAA,SAAA9pE,GAAqCV,EAAAwqE,EAAA9pE,EAiDpC,SAAA8pE,GAAY7qD,EAA8B6kD,EAAkCtsD,EAAqBuyD,EAAmB9F,GAAxG,GAAAhlD,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAA6kD,QAAA,GAAgC,CAAhCA,EAAA,WAAkC,GAAAtsD,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAAuyD,QAAA,GAAiB,CAAjBA,EAAA,GAAmB,GAAA9F,QAAA,GAAkB,CAAlBA,EAAA,KAEnHjkE,EAAAxN,KAAAgF,KAAMynB,EAAU6kD,EAActsD,EAAQ,EAAG,EAAGuyD,EAAO,EAAG,KAAM,MAAO,MAAO9F,GA7C3EzqE,OAAAC,eAAWqwE,EAAApwE,UAAA,UtH8ilBJC,IsH9ilBP,WAEC,MAAOnC,MAAKouE,gBtH+ilBN7qE,IsH5ilBP,SAAkBC,GAEjBxD,KAAKouE,eAAiB5qE,CACtBxD,MAAK6sE,yBtH6ilBCxqE,WAAY,KACZC,aAAc,MsHxilBrBN,QAAAC,eAAWqwE,EAAApwE,UAAA,StH8ilBJC,IsH9ilBP,WAEC,MAAOnC,MAAK0wE,atH+ilBNntE,IsH5ilBP,SAAiBC,GAEhBxD,KAAK+wE,aAAavtE,ItH6ilBZnB,WAAY,KACZC,aAAc,MsHxilBrBN,QAAAC,eAAWqwE,EAAApwE,UAAA,gBtH8ilBJC,IsH9ilBP,WAEC,MAAOnC,MAAK2wE,atH+ilBNptE,IsH5ilBP,SAAwBC,GAEvBxD,KAAKgxE,aAAaxtE,ItH6ilBZnB,WAAY,KACZC,aAAc,MsHjilBtB,OAAAgwE,IArDqCpE,EAAAzxE,QAuDrCuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MtHoilBAzI,GAAQ0B,QsHpilBO61E,ItHsilBZjE,qDAAqD,uDAAuDL,kDAAkD,SAAS/zE,EAAQkB,EAAOJ,GACzL,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IuH1mlBnF,IAAAqqE,GAAAv4E,EAA+B,8CAC/B,IAAAomB,GAAApmB,EAAiC,6CAGjC,IAAAghB,GAAAhhB,EAA4B,2CAE5B,IAAAsxC,GAAAtxC,EAA+B,+CAC/B,IAAA+1D,GAAA/1D,EAA4B,2CAC5B,IAAA4pC,GAAA5pC,EAAuB,oCAEvB,IAAAw4E,GAAAx4E,EAA0B,wCAK1B,IAAAy4E,GAAA,SAAAlqE,GAAkCV,EAAA4qE,EAAAlqE,EAsFjC,SAAAkqE,GAAYjrD,EAA8B6kD,GAA9B,GAAA7kD,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAA6kD,QAAA,GAAgC,CAAhCA,EAAA,WAEzC9jE,EAAAxN,KAAAgF,KApFMA,MAAA2yE,gBAA0B,IAC1B3yE,MAAA4yE,SAAmB,IACnB5yE,MAAA8tE,QAAiB,CACjB9tE,MAAA+tE,QAAiB,CAmFvB/tE,MAAKuoB,UAAYd,CACjBznB,MAAK6yE,cAAgBvG,CAErB,IAAItsE,KAAK6yE,eAAiB53D,EAAAxe,QAAaguD,SAAU,CAChD,GAAIyd,GAAoC,GAAI38B,GAAA9uC,QAAiB,GAAI+1E,GAAA/1E,QACjEyrE,GAAiB/Y,kBAAoB,KACrC+Y,GAAiB9Y,mBAAqB,KACtCpvD,MAAK8yE,UAAY5K,MACX,IAAIloE,KAAK6yE,eAAiB53D,EAAAxe,QAAayiB,KAAM,CACnDlf,KAAK8yE,UAAY,GAAI9iB,GAAAvzD,QAAa,GAAI+1E,GAAA/1E,UAnFxCuF,OAAAC,eAAWywE,EAAAxwE,UAAA,avHsnlBJC,IuHtnlBP,WAEC,MAAOuwE,GAAoBhqE,WvHunlBrBrG,WAAY,KACZC,aAAc,MuHlnlBrBN,QAAAC,eAAWywE,EAAAxwE,UAAA,gBvHwnlBJC,IuHxnlBP,WAEC,MAAOnC,MAAK6yE,evHynlBNxwE,WAAY,KACZC,aAAc,MuHpnlBrBN,QAAAC,eAAWywE,EAAAxwE,UAAA,YvH0nlBJC,IuH1nlBP,WAEC,MAAOnC,MAAKuoB,WvH2nlBNhlB,IuHxnlBP,SAAoBC,GAEnB,GAAIA,GAASxD,KAAKuoB,UACjB,MAEDvoB,MAAKuoB,UAAY/kB,CAEjB,IAAIL,GAAanD,KAAKisE,UAAUhxE,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIyI,EAAKzI,IACrBsF,KAAKisE,UAAUvxE,GAAI+sB,SAAWznB,KAAKuoB,WvHunlBxClmB,WAAY,KACZC,aAAc,MuHrnlBrBN,QAAAC,eAAWywE,EAAAxwE,UAAA,UvHwnlBJC,IuHxnlBP,WAEC,MAAOnC,MAAK8tE,SvHynlBNvqE,IuHtnlBP,SAAkBC,GAEjB,GAAIxD,KAAK8tE,QAAUtqE,EAClB,MAEDxD,MAAK8tE,QAAUtqE,CAEfxD,MAAK8sE,mBvHqnlBCzqE,WAAY,KACZC,aAAc,MuHlnlBrBN,QAAAC,eAAWywE,EAAAxwE,UAAA,UvHqnlBJC,IuHrnlBP,WAEC,MAAOnC,MAAK+tE,SvHsnlBNxqE,IuHnnlBP,SAAkBC,GAEjB,GAAIxD,KAAK+tE,QAAUvqE,EAClB,MAEDxD,MAAK+tE,QAAUvqE,CAEfxD,MAAK8sE,mBvHknlBCzqE,WAAY,KACZC,aAAc,MuHrllBdowE,GAAAxwE,UAAA6qE,gBAAP,SAAuB53D,EAAqBm3D,GAE3C,KAAM,IAAIjsD,GAAA5jB,QAOJi2E,GAAAxwE,UAAA2rE,WAAP,SAAkB14D,EAAqBm3D,GAEtC,KAAM,IAAIjsD,GAAA5jB,QAMJi2E,GAAAxwE,UAAA2qE,sBAAP,WAEC7sE,KAAK2yE,gBAAkB,KAMjBD,GAAAxwE,UAAA4qE,gBAAP,WAEC9sE,KAAK4yE,SAAW,KAOTF,GAAAxwE,UAAA6wE,eAAR,WAEC/yE,KAAK+sE,gBAAgB/sE,KAAK8yE,UAAW9yE,KAAK6yE,cAE1C7yE,MAAK2yE,gBAAkB,MAMhBD,GAAAxwE,UAAA8wE,UAAR,WAEChzE,KAAK6tE,WAAW7tE,KAAK8yE,UAAW9yE,KAAK6yE,cAErC7yE,MAAK4yE,SAAW,MAGVF,GAAAxwE,UAAAwqB,WAAP,WAEC,GAAI1sB,KAAK2yE,gBACR3yE,KAAK+yE,gBAEN,IAAI/yE,KAAK4yE,SACR5yE,KAAKgzE,YAIAN,GAAAxwE,UAAAgqE,eAAP,WAEC,GAAIlhC,GAAgB,GAAInH,GAAApnC,QAAOuD,KAAKuoB,UACpCyiB,GAAOlvC,SAASq0C,WAAWnwC,KAAK8yE,UAChC9nC,GAAOve,eAAiBzsB,IAExB,OAAOgrC,GA5KM0nC,GAAAhqE,UAAmB,yBAuLlC,OAAAgqE,IAzLkCD,EAAAh2E,QA2LlCuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MvH+jlBAzI,GAAQ0B,QuH/jlBOi2E,IvHiklBZO,8CAA8C3rE,UAAUkZ,6CAA6ClZ,UAAUo/B,oCAAoC,oCAAoCpnB,2CAA2C,2CAA2C2sC,2CAA2C,2CAA2C/Y,+CAA+C,+CAA+C64B,wCAAwC,0CAA0C3rD,oDAAoD,SAASnmB,EAAQkB,EAAOJ,GAClmB,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IwH9wlBnF,IAAA8S,GAAAhhB,EAA4B,2CAK5B,IAAAmyE,GAAAnyE,EAAiC,iDAKjC,IAAAi5E,GAAA,SAAA1qE,GAAoCV,EAAAorE,EAAA1qE,EA6EnC,SAAA0qE,GAAYzrD,EAA8B6kD,EAAkCtsD,EAAoBusD,EAAuBC,EAAuBC,GAAlI,GAAAhlD,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAA6kD,QAAA,GAAgC,CAAhCA,EAAA,WAAkC,GAAAtsD,QAAA,GAAkB,CAAlBA,EAAA,GAAoB,GAAAusD,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,KAE7IjkE,EAAAxN,KAAAgF,KAAMynB,EAAU6kD,EAEhBtsE,MAAK2f,QAAUK,CACfhgB,MAAK0sE,WAAaH,CAClBvsE,MAAK2sE,WAAaH,CAClBxsE,MAAK4sE,KAAOH,EA1EbzqE,OAAAC,eAAWixE,EAAAhxE,UAAA,UxH4xlBJC,IwH5xlBP,WAEC,MAAOnC,MAAK2f,SxH6xlBNpc,IwH1xlBP,SAAkBC,GAEjBxD,KAAK2f,QAAUnc,CAEfxD,MAAK6sE,yBxH0xlBCxqE,WAAY,KACZC,aAAc,MwHrxlBrBN,QAAAC,eAAWixE,EAAAhxE,UAAA,axH2xlBJC,IwH3xlBP,WAEC,MAAOnC,MAAK0sE,YxH4xlBNnpE,IwHzxlBP,SAAqBC,GAEpBxD,KAAK0sE,WAAalpE,CAElBxD,MAAK6sE,uBACL7sE,MAAK8sE,mBxHyxlBCzqE,WAAY,KACZC,aAAc,MwHpxlBrBN,QAAAC,eAAWixE,EAAAhxE,UAAA,axH0xlBJC,IwH1xlBP,WAEC,MAAOnC,MAAK2sE,YxH2xlBNppE,IwHxxlBP,SAAqBC,GAEpBxD,KAAK2sE,WAAanpE,CAElBxD,MAAK6sE,uBACL7sE,MAAK8sE,mBxHwxlBCzqE,WAAY,KACZC,aAAc,MwHnxlBrBN,QAAAC,eAAWixE,EAAAhxE,UAAA,OxHyxlBJC,IwHzxlBP,WAEC,MAAOnC,MAAK4sE,MxH0xlBNrpE,IwHvxlBP,SAAeC,GAEdxD,KAAK4sE,KAAOppE,CAEZxD,MAAK6sE,yBxHuxlBCxqE,WAAY,KACZC,aAAc,MwHhwlBd4wE,GAAAhxE,UAAA6qE,gBAAP,SAAuB53D,EAAqBm3D,GAE3C,GAAItyB,EACJ,IAAI6R,EACJ,IAAIwD,EACJ,IAAIC,EAEJ,IAAI50D,EACJ,IAAIoiC,EACJ,IAAIiyC,GAAaC,CAEjB,IAAI9B,EACJ,IAAIC,EACJ,IAAIngC,EAGJ,IAAIs/B,GAAgBrxD,EAAAxe,QAAaguD,SAAU,CAE1C,GAAI8iB,GAAuDp4D,CAE3D63B,IAAehtC,KAAK2sE,WAAa,IAAI3sE,KAAK0sE,WAAa,EAEvD,IAAI1/B,GAAeugC,EAAiBvgC,aAAeugC,EAAiBvzB,SAAW,KAAM,CACpFA,EAAUuzB,EAAiBvzB,QAAQ73C,IAAIorE,EAAiB1d,YACxDhE,GAAY0hB,EAAiB1hB,UAAU1pD,IAAI6qC,EAC3CqiB,GAAUke,EAAiBle,QAAQltD,IAAI6qC,EACvCsiB,GAAWie,EAAiBje,SAASntD,IAAI6qC,OACnC,CACNgN,EAAU,GAAI0S,cAAa1sD,KAAK2sE,WAAa,GAAG3sE,KAAK0sE,WAAW,EAChE7gB,GAAY,GAAItc,cAAavC,EAAY,EACzCqiB,GAAU,GAAI9f,cAAavC,EAAY,EACvCsiB,GAAW,GAAI/f,cAAavC,EAAY,EAExChtC,MAAK8sE,kBAGNiC,EAAO,CACPC,GAAO,CAEP,IAAI/B,EACJ,IAAIG,EACJ,IAAIC,EAEJ,KAAKvwC,EAAI,EAAGA,GAAK98B,KAAK2sE,aAAc7vC,EAAG,CAEtCmwC,EAAa8B,CAEb,IAAIvB,GAAkB9zD,KAAKk9B,GAAG9Z,EAAE98B,KAAK2sE,UACrC,IAAIj1D,IAAY1X,KAAK2f,QAAQjG,KAAKmK,IAAI2pD,EACtC,IAAIC,GAAoBztE,KAAK2f,QAAQjG,KAAKiK,IAAI6pD,EAE9C,KAAK9yE,EAAI,EAAGA,GAAKsF,KAAK0sE,aAAchyE,EAAG,CACtC,GAAIgzE,GAAkB,EAAEh0D,KAAKk9B,GAAGl8C,EAAEsF,KAAK0sE,UACvC,IAAI7pE,GAAW4qE,EAAW/zD,KAAKmK,IAAI6pD,EACnC,IAAI3qE,GAAW0qE,EAAW/zD,KAAKiK,IAAI+pD,EACnC,IAAIC,GAAiB,EAAEj0D,KAAKC,KAAK9W,EAAEA,EAAIE,EAAEA,EAAI2U,EAAEA,EAC/C,IAAIk2D,GAAgBl0D,KAAKC,KAAK5W,EAAEA,EAAIF,EAAEA,EAEtC,IAAI7C,KAAK4sE,KAAM,CAEdQ,EAAK,CACLC,GAAKO,EAAS,KAAM/qE,EAAE+qE,EAAS,CAC/BV,IAASx1D,CACTy1D,GAAQpqE,MAEF,CACNqqE,EAAKQ,EAAS,KAAM/qE,EAAE+qE,EAAS,CAC/BP,GAAK,CACLH,GAAQnqE,CACRoqE,GAAQz1D,EAGT,GAAIhd,GAAKsF,KAAK0sE,WAAY,CACzB7gB,EAAUkjB,GAAQljB,EAAUohB,EAC5BphB,GAAUkjB,EAAK,GAAKljB,EAAUohB,EAAa,EAC3CphB,GAAUkjB,EAAK,GAAKljB,EAAUohB,EAAa,EAC3C5d,GAAQ0f,GAAQ1f,EAAQ4d,GAAepqE,EAAE8qE,EAAS,EAClDte,GAAQ0f,EAAK,GAAK1f,EAAQ4d,EAAa,GAAOC,EAAMS,EAAS,EAC7Dte,GAAQ0f,EAAK,GAAK1f,EAAQ4d,EAAa,GAAME,EAAMQ,EAAS,EAC5Dre,GAASyf,GAAQnB,EAAS,MAAO7qE,EAAE6qE,EAAS,CAC5Cte,GAASyf,EAAK,GAAK3B,CACnB9d,GAASyf,EAAK,GAAK1B,MAEb,CAENxhB,EAAUkjB,GAAQlsE,CAClBgpD,GAAUkjB,EAAK,GAAK7B,CACpBrhB,GAAUkjB,EAAK,GAAK5B,CACpB9d,GAAQ0f,GAAQlsE,EAAE8qE,CAClBte,GAAQ0f,EAAK,GAAK7B,EAAMS,CACxBte,GAAQ0f,EAAK,GAAK5B,EAAMQ,CACxBre,GAASyf,GAAQnB,EAAS,MAAO7qE,EAAE6qE,EAAS,CAC5Cte,GAASyf,EAAK,GAAK3B,CACnB9d,GAASyf,EAAK,GAAK1B,EAGpB,GAAI3yE,EAAI,GAAKoiC,EAAI,EAAG,CAEnB,GAAIriC,IAAYuF,KAAK0sE,WAAa,GAAG5vC,EAAIpiC,CACzC,IAAIsN,IAAYhI,KAAK0sE,WAAa,GAAG5vC,EAAIpiC,EAAI,CAC7C,IAAI6hB,IAAYvc,KAAK0sE,WAAa,IAAI5vC,EAAI,GAAKpiC,EAAI,CACnD,IAAIqN,IAAY/H,KAAK0sE,WAAa,IAAI5vC,EAAI,GAAKpiC,CAE/C,IAAIoiC,GAAK98B,KAAK2sE,WAAY,CAEzB9gB,EAAUkjB,GAAQljB,EAAUohB,EAC5BphB,GAAUkjB,EAAO,GAAKljB,EAAUohB,EAAa,EAC7CphB,GAAUkjB,EAAO,GAAKljB,EAAUohB,EAAa,EAE7CjzB,GAAQg1B,KAAUv0E,CAClBu/C,GAAQg1B,KAAUzyD,CAClBy9B,GAAQg1B,KAAUjnE,MAEZ,IAAI+0B,GAAK,EAAG,CAElBkd,EAAQg1B,KAAUv0E,CAClBu/C,GAAQg1B,KAAUhnE,CAClBgyC,GAAQg1B,KAAUzyD,MAEZ,CACNy9B,EAAQg1B,KAAUv0E,CAClBu/C,GAAQg1B,KAAUhnE,CAClBgyC,GAAQg1B,KAAUzyD,CAClBy9B,GAAQg1B,KAAUv0E,CAClBu/C,GAAQg1B,KAAUzyD,CAClBy9B,GAAQg1B,KAAUjnE,GAIpBgnE,GAAQ,GAIVxB,EAAiB5jB,WAAW3P,EAE5BuzB,GAAiBt9B,aAAa4b,EAC9B0hB,GAAiBxf,WAAWsB,EAC5Bke,GAAiBtf,YAAYqB,OAEvB,IAAIgd,GAAgBrxD,EAAAxe,QAAayiB,KAAM,CAE7C,GAAIqwD,GAA2Cp6D,CAE/C,IAAIq6D,GAAqBxvE,KAAK2sE,WAAW3sE,KAAK0sE,WAAW,EAAI1sE,KAAK0sE,UAClE,IAAI7gB,GAA4B,GAAItc,cAAaigC,EAAY,EAC7D,IAAI7vC,GAAyB,GAAI4P,cAAaigC,EAE9CT,GAAO,CAEPC,GAAO,CAEP,KAAKlyC,EAAI,EAAGA,GAAK98B,KAAK2sE,aAAc7vC,EAAG,CAEtC,GAAI0wC,GAAkB9zD,KAAKk9B,GAAG9Z,EAAE98B,KAAK2sE,UACrC,IAAIj1D,IAAY1X,KAAK2f,QAAQjG,KAAKmK,IAAI2pD,EACtC,IAAIC,GAAoBztE,KAAK2f,QAAQjG,KAAKiK,IAAI6pD,EAE9C,KAAK9yE,EAAI,EAAGA,GAAKsF,KAAK0sE,aAAchyE,EAAG,CACtC,GAAIgzE,GAAkB,EAAEh0D,KAAKk9B,GAAGl8C,EAAEsF,KAAK0sE,UACvC,IAAI7pE,GAAW4qE,EAAW/zD,KAAKmK,IAAI6pD,EACnC,IAAI3qE,GAAW0qE,EAAW/zD,KAAKiK,IAAI+pD,EAEnC,IAAI1tE,KAAK4sE,KAAM,CACdM,GAASx1D,CACTy1D,GAAQpqE,MAEF,CACNmqE,EAAQnqE,CACRoqE,GAAQz1D,EAGT,GAAIhd,EAAI,EAAG,CAEVmxD,EAAUkjB,KAAUlsE,CACpBgpD,GAAUkjB,KAAU7B,CACpBrhB,GAAUkjB,KAAU5B,CAEpBxtC,GAAUqvC,KAAU,CAGpB,IAAIlyC,EAAI,EAAG,CACV,GAAI80C,GAAe90C,GAAK,EAAI,GAAK,GAAG98B,KAAK0sE,WAAWhyE,GAAK,GAAGA,GAAK,EAAIsF,KAAK0sE,WAAW,EACrF7gB,GAAUkjB,GAAQljB,EAAUkjB,KAAS6C,EACrC/lB,GAAUkjB,GAAQljB,EAAUkjB,KAAS6C,EACrC/lB,GAAUkjB,GAAQljB,EAAUkjB,KAAS6C,EAErC/lB,GAAUkjB,KAAUlsE,CACpBgpD,GAAUkjB,KAAU7B,CACpBrhB,GAAUkjB,KAAU5B,CAEpBxtC,GAAUqvC,KAAU,GAMtB,GAAIt0E,EAAIsF,KAAK0sE,WAAY,CACxB7gB,EAAUkjB,KAAUlsE,CACpBgpD,GAAUkjB,KAAU7B,CACpBrhB,GAAUkjB,KAAU5B,IAMvBoC,EAAat/B,aAAa4b,EAC1B0jB,GAAa5iB,aAAahtB,IAOrBuzC,GAAAhxE,UAAA2rE,WAAP,SAAkB14D,EAAqBm3D,GAEtC,GAAI5xE,GAAUoiC,CACd,IAAIkQ,IAAsBhtC,KAAK2sE,WAAa,IAAI3sE,KAAK0sE,WAAa,EAClE,IAAInd,EAGJ,IAAI+c,GAAgBrxD,EAAAxe,QAAaguD,SAAU,CAE1Czd,GAAehtC,KAAK2sE,WAAa,IAAI3sE,KAAK0sE,WAAa,EAEvD,IAAIa,GAAuDp4D,CAE3D,IAAI63B,GAAeugC,EAAiBvgC,aAAeugC,EAAiBhe,KAAO,KAAM,CAChFA,EAAMge,EAAiBhe,IAAIptD,IAAI6qC,OACzB,CACNuiB,EAAM,GAAIhgB,cAAavC,EAAY,GAGpC,GAAIhiC,GAAe,CACnB,KAAK8xB,EAAI,EAAGA,GAAK98B,KAAK2sE,aAAc7vC,EAAG,CACtC,IAAKpiC,EAAI,EAAGA,GAAKsF,KAAK0sE,aAAchyE,EAAG,CACtC60D,EAAIvkD,KAAatQ,EAAEsF,KAAK0sE,WAAa1sE,KAAK8tE,OAC1Cve,GAAIvkD,KAAa8xB,EAAE98B,KAAK2sE,WAAa3sE,KAAK+tE,SAI5CR,EAAiBxtB,OAAOwP,OAElB,IAAI+c,GAAgBrxD,EAAAxe,QAAayiB,KAAM,GAIhD,OAAAg0D,IAhVoC9G,EAAA3vE,QAkVpCuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MxHktlBAzI,GAAQ0B,QwHltlBOy2E,IxHotlBZ5zD,2CAA2C,2CAA2C0uD,iDAAiD,mDAAmDmF,mDAAmD,SAASl5E,EAAQkB,EAAOJ,GACxQ,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IyHrjmBnF,IAAA8S,GAAAhhB,EAA4B,2CAI5B,IAAAmyE,GAAAnyE,EAAiC,iDAKjC,IAAAm5E,GAAA,SAAA5qE,GAAmCV,EAAAsrE,EAAA5qE,EAyFlC,SAAA4qE,GAAY3rD,EAA8B6kD,EAAkCtsD,EAAoBqzD,EAAwBC,EAAuBC,EAAsB9G,GAAzJ,GAAAhlD,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAA6kD,QAAA,GAAgC,CAAhCA,EAAA,WAAkC,GAAAtsD,QAAA,GAAkB,CAAlBA,EAAA,GAAoB,GAAAqzD,QAAA,GAAsB,CAAtBA,EAAA,GAAwB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAA9G,QAAA,GAAkB,CAAlBA,EAAA,KAEpKjkE,EAAAxN,KAAAgF,KAAMynB,EAAU6kD,EApFTtsE,MAAAqsD,aAAsB,CAsF7BrsD,MAAK2f,QAAUK,CACfhgB,MAAKwzE,YAAcH,CACnBrzE,MAAKyzE,WAAaH,CAClBtzE,MAAK0zE,WAAaH,CAClBvzE,MAAK4sE,KAAOH,EArFbzqE,OAAAC,eAAWmxE,EAAAlxE,UAAA,UzHqkmBJC,IyHrkmBP,WAEC,MAAOnC,MAAK2f,SzHskmBNpc,IyHnkmBP,SAAkBC,GAEjBxD,KAAK2f,QAAUnc,CACfxD,MAAK6sE,yBzHokmBCxqE,WAAY,KACZC,aAAc,MyH/jmBrBN,QAAAC,eAAWmxE,EAAAlxE,UAAA,czHqkmBJC,IyHrkmBP,WAEC,MAAOnC,MAAKwzE,azHskmBNjwE,IyHnkmBP,SAAsBC,GAErBxD,KAAKwzE,YAAchwE,CACnBxD,MAAK6sE,yBzHokmBCxqE,WAAY,KACZC,aAAc,MyH/jmBrBN,QAAAC,eAAWmxE,EAAAlxE,UAAA,azHqkmBJC,IyHrkmBP,WAEC,MAAOnC,MAAKyzE,YzHskmBNlwE,IyHnkmBP,SAAqBC,GAEpBxD,KAAKyzE,WAAajwE,CAClBxD,MAAK6sE,uBACL7sE,MAAK8sE,mBzHokmBCzqE,WAAY,KACZC,aAAc,MyH/jmBrBN,QAAAC,eAAWmxE,EAAAlxE,UAAA,azHqkmBJC,IyHrkmBP,WAEC,MAAOnC,MAAK0zE,YzHskmBNnwE,IyHnkmBP,SAAqBC,GAEpBxD,KAAK0zE,WAAalwE,CAClBxD,MAAK6sE,uBACL7sE,MAAK8sE,mBzHokmBCzqE,WAAY,KACZC,aAAc,MyH/jmBrBN,QAAAC,eAAWmxE,EAAAlxE,UAAA,OzHqkmBJC,IyHrkmBP,WAEC,MAAOnC,MAAK4sE,MzHskmBNrpE,IyHnkmBP,SAAeC,GAEdxD,KAAK4sE,KAAOppE,CACZxD,MAAK6sE,yBzHokmBCxqE,WAAY,KACZC,aAAc,MyH3imBd8wE,GAAAlxE,UAAA6qE,gBAAP,SAAuB53D,EAAqBm3D,GAE3C,GAAItyB,EACJ,IAAI6R,EACJ,IAAIwD,EACJ,IAAIC,EAEJ,IAAI50D,GAAUoiC,CACd,IAAIj6B,GAAUE,EAAU2U,EAAU4wD,EAAWC,EAAWC,EAAWmL,EAAyBC,CAC5F,IAAI7E,EACJ,IAAIC,EACJ,IAAI1B,GAAoB,CAExB,IAAIhB,GAAgBrxD,EAAAxe,QAAaguD,SAAU,CAE1C,GAAI8iB,GAAuDp4D,CAG3DnV,MAAKqsD,cAAgBrsD,KAAK0zE,WAAa,IAAI1zE,KAAKyzE,WAAa,EAC7DnG,GAAattE,KAAK0zE,WAAW1zE,KAAKyzE,WAAW,CAG7C,IAAIzzE,KAAKqsD,cAAgBkhB,EAAiBvgC,YAAa,CACtDgN,EAAUuzB,EAAiBvzB,QAAQ73C,IAAIorE,EAAiB1d,YACxDhE,GAAY0hB,EAAiB1hB,UAAU1pD,IAAInC,KAAKqsD,aAChDgD,GAAUke,EAAiBle,QAAQltD,IAAInC,KAAKqsD,aAC5CiD,GAAWie,EAAiBje,SAASntD,IAAInC,KAAKqsD,kBACxC,CACNrS,EAAU,GAAI0S,aAAY4gB,EAC1BzhB,GAAY,GAAItc,cAAavvC,KAAKqsD,aAAa,EAC/CgD,GAAU,GAAI9f,cAAavvC,KAAKqsD,aAAa,EAC7CiD,GAAW,GAAI/f,cAAavvC,KAAKqsD,aAAa,EAE9CrsD,MAAK8sE,kBAINiC,EAAO,CACPC,GAAO,CAGP,IAAI6E,GAA+B,EAAEn6D,KAAKk9B,GAAG52C,KAAKyzE,UAClD,IAAIK,GAA+B,EAAEp6D,KAAKk9B,GAAG52C,KAAK0zE,UAElD,IAAIxG,GAAcC,CAClB,IAAIC,GAAWC,EAAW0G,EAAWC,CACrC,IAAI/G,GAAoB,CACxB,IAAIoE,GAAyB,CAG7B,IAAI52E,GAAUuN,EAAUuU,EAAUxU,EAAU9M,CAE5C,KAAK6hC,EAAI,EAAGA,GAAK98B,KAAK0zE,aAAc52C,EAAG,CAEtCmwC,EAAaoE,EAAgB,CAE7B,KAAK32E,EAAI,EAAGA,GAAKsF,KAAKyzE,aAAc/4E,EAAG,CAGtCi5E,EAAmBj5E,EAAEm5E,CACrBD,GAAmB92C,EAAEg3C,CAErB74E,GAASye,KAAKmK,IAAI+vD,EAClBtL,GAAKrtE,EAAOye,KAAKmK,IAAI8vD,EACrBpL,GAAKttE,EAAOye,KAAKiK,IAAIgwD,EACrBnL,GAAK9uD,KAAKiK,IAAIiwD,EAEd/wE,GAAI7C,KAAK2f,QAAQjG,KAAKmK,IAAI8vD,GAAoB3zE,KAAKwzE,YAAYlL,CAC/DvlE,GAAI/C,KAAK2f,QAAQjG,KAAKiK,IAAIgwD,GAAoB3zE,KAAKwzE,YAAYjL,CAC/D7wD,GAAKolB,GAAK98B,KAAK0zE,WAAa,EAAI1zE,KAAKwzE,YAAYhL,CAEjD,IAAIxoE,KAAK4sE,KAAM,CAEdmH,GAAMvL,CACNwL,GAAKzL,CACL6E,GAAK,CACLC,GAAMpyE,EAAQqtE,EAAGrtE,EAAS4H,EAAE7C,KAAK2f,OACjCutD,IAASx1D,CACTy1D,GAAQpqE,MAEF,CACNgxE,EAAKxL,CACLyL,GAAKxL,CACL4E,GAAMnyE,EAAQqtE,EAAGrtE,EAAS4H,EAAE7C,KAAK2f,OACjC0tD,GAAK,CACLH,GAAQnqE,CACRoqE,GAAQz1D,EAGT,GAAIhd,GAAKsF,KAAKyzE,WAAY,CACzB5nB,EAAUkjB,GAAQlsE,CAClBgpD,GAAUkjB,EAAO,GAAKljB,EAAUohB,EAAa,EAC7CphB,GAAUkjB,EAAO,GAAKljB,EAAUohB,EAAa,OACvC,CACNphB,EAAUkjB,GAAQlsE,CAClBgpD,GAAUkjB,EAAO,GAAK7B,CACtBrhB,GAAUkjB,EAAO,GAAK5B,EAGvB9d,EAAQ0f,GAAQzG,CAChBjZ,GAAQ0f,EAAO,GAAKgF,CACpB1kB,GAAQ0f,EAAO,GAAKiF,CACpB1kB,GAASyf,KAAU9zE,EAAQstE,EAAGttE,EAAS8H,EAAE/C,KAAK2f,QAC9C2vC,GAASyf,EAAO,GAAK3B,CACrB9d,GAASyf,EAAO,GAAK1B,CAErB0B,IAAQ,CAGR,IAAIr0E,EAAI,GAAKoiC,EAAI,EAAG,CACnBriC,EAAI42E,CACJrpE,GAAIqpE,EAAkB,CACtB90D,GAAIvU,EAAIhI,KAAKyzE,WAAa,CAC1B1rE,GAAItN,EAAIuF,KAAKyzE,WAAa,CAE1Bz5B,GAAQg1B,KAAUv0E,CAClBu/C,GAAQg1B,KAAUhnE,CAClBgyC,GAAQg1B,KAAUzyD,CAElBy9B,GAAQg1B,KAAUv0E,CAClBu/C,GAAQg1B,KAAUzyD,CAClBy9B,GAAQg1B,KAAUjnE,EAGnBspE,KAKF9D,EAAiB5jB,WAAW3P,EAE5BuzB,GAAiBt9B,aAAa4b,EAC9B0hB,GAAiBxf,WAAWsB,EAC5Bke,GAAiBtf,YAAYqB,OAEvB,IAAIgd,GAAgBrxD,EAAAxe,QAAayiB,KAAM,GAQxCk0D,GAAAlxE,UAAA2rE,WAAP,SAAkB14D,EAAqBm3D,GAGtC,GAAI5xE,GAAUoiC,CACd,IAAIyyB,EAGJ,IAAI+c,GAAgBrxD,EAAAxe,QAAaguD,SAAU,CAE1C,GAAI8iB,GAAuDp4D,CAG3D,IAAIo4D,EAAiBhe,KAAOvvD,KAAKqsD,cAAgBkhB,EAAiBvgC,YAAa,CAC9EuiB,EAAMge,EAAiBhe,IAAIptD,IAAInC,KAAKqsD,kBAC9B,CACNkD,EAAM,GAAIhgB,cAAavvC,KAAKqsD,aAAa,GAI1C,GAAIrhD,GAAe,CAGnB,KAAK8xB,EAAI,EAAGA,GAAK98B,KAAK0zE,aAAc52C,EAAG,CACtC,IAAKpiC,EAAI,EAAGA,GAAKsF,KAAKyzE,aAAc/4E,EAAG,CAEtC60D,EAAIvkD,KAAatQ,EAAEsF,KAAKyzE,WAAazzE,KAAK8tE,OAC1Cve,GAAIvkD,KAAa8xB,EAAE98B,KAAK0zE,WAAa1zE,KAAK+tE,SAK5CR,EAAiBxtB,OAAOwP,OAElB,IAAI+c,GAAgBrxD,EAAAxe,QAAayiB,KAAM,GAIhD,OAAAk0D,IA5RmChH,EAAA3vE,QA8RnCuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MzH2gmBAzI,GAAQ0B,QyH3gmBO22E,IzH6gmBZ9zD,2CAA2C,2CAA2C0uD,iDAAiD,mDAAmDnvE,8BAA8B,SAAS5E,EAAQkB,EAAOJ,GACnP,Y0HvzmBA,IAAA03E,GAAAx4E,EAAyC,wCAAjCc,GAAAixE,WAAAyG,EAAAh2E,OACR,IAAAw3E,GAAAh6E,EAAkD,oDAA1Cc,GAAAsxE,uBAAA4H,EAAAx3E,OACR,IAAAy3E,GAAAj6E,EAAgD,iDAAxCc,GAAAozE,oBAAA+F,EAAAz3E,OACR,IAAA0e,GAAAlhB,EAAgD,iDAAxCc,GAAAuzE,oBAAAnzD,EAAA1e,OACR,IAAAyxE,GAAAj0E,EAAmD,qDAA3Cc,GAAAo1E,wBAAAjC,EAAAzxE,OACR,IAAA03E,GAAAl6E,EAAgD,kDAAxCc,GAAA+2E,qBAAAqC,EAAA13E,OACR,IAAA23E,GAAAn6E,EAAkD,oDAA1Cc,GAAAu3E,uBAAA8B,EAAA33E,OACR,IAAA2vE,GAAAnyE,EAAgD,iDAAxCc,GAAA23E,oBAAAtG,EAAA3vE,OACR,IAAAgjB,GAAAxlB,EAAiD,mDAAzCc,GAAAm4E,sBAAAzzD,EAAAhjB,OACR,IAAA43E,GAAAp6E,EAAgD,kDAAxCc,GAAAq4E,qBAAAiB,EAAA53E,U1Ho0mBLsvE,wCAAwC,wCAAwCI,oDAAoD,oDAAoD8B,iDAAiD,iDAAiD1uD,iDAAiD,iDAAiD8uD,qDAAqD,qDAAqDwD,kDAAkD,kDAAkDQ,oDAAoD,oDAAoDrE,iDAAiD,iDAAiD5tD,mDAAmD,mDAAmD+yD,kDAAkD,oDAAoDmB,yCAAyC,SAASr6E,EAAQkB,EAAOJ,GACpiC,Y2H10mBA,IAAAw5E,GAAA,WAAA,QAAAA,MAWeA,EAAAC,SAAkB,UASlBD,GAAAxqC,OAAgB,QAC/B,OAAAwqC,KAEAvyE,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M3Hg1mBAzI,GAAQ0B,Q2Hh1mBO83E,O3Hk1mBTE,gCAAgC,SAASx6E,EAAQkB,EAAOJ,GAC9D,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,I4Hl3mBnF,IAAAG,GAAArO,EAA0B,oCAE1B,IAAAy6E,GAAAz6E,EAA0B,8CAW1B,IAAA06E,GAAA,SAAAnsE,GAAmBV,EAAA6sE,EAAAnsE,EAgBlB,SAAAmsE,KAECnsE,EAAAxN,KAAAgF,KAdOA,MAAA40E,aAAgC,GAAIj0E,OAiB5CqB,OAAAC,eAAW0yE,EAAAzyE,UAAA,e5H62mBJC,I4H72mBP,WAEC,MAAOnC,MAAK40E,c5H82mBNvyE,WAAY,KACZC,aAAc,M4H12mBrBN,QAAAC,eAAW0yE,EAAAzyE,UAAA,a5Hg3mBJC,I4Hh3mBP,WAEC,MAAOwyE,GAAKjsE,W5Hi3mBNrG,WAAY,KACZC,aAAc,M4H72mBdqyE,GAAAzyE,UAAAuB,QAAP,YAOOkxE,GAAAzyE,UAAA2yE,eAAP,SAAsBC,GAErB,GAAI3xE,GAAanD,KAAK40E,aAAa35E,MAEnC,KAAK,GAAIP,GAAW,EAAGA,EAAIyI,IAAOzI,EAAG,CACpC,GAAGsF,KAAK40E,aAAal6E,GAAGgV,MAAMolE,EAC7B,MAAO90E,MAAK40E,aAAal6E,GAE3B,GAAIq6E,GAAuB,GAAIL,GAAAj4E,OAC/Bs4E,GAAWrlE,KAAKolE,CAChB90E,MAAK40E,aAAaxxE,KAAK2xE,EACvB,OAAOA,GAnDMJ,GAAAjsE,UAAmB,cAsDlC,OAAAisE,IAxDmBrsE,EAAA7L,QA0DnBuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M5H+2mBAzI,GAAQ0B,Q4H/2mBOk4E,I5Hi3mBZhsE,oCAAoCrB,UAAU0tE,8CAA8C,gDAAgDC,uCAAuC,SAASh7E,EAAQkB,EAAOJ,GAC9M,Y6Ht7mBA,IAAAm6E,GAAA,WAAA,QAAAA,MASeA,EAAAlhC,KAAc,MAUdkhC,GAAAC,MAAe,OAUfD,GAAAE,SAAkB,UACjC,OAAAF,KAEAlzE,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M7H07mBAzI,GAAQ0B,Q6H17mBOy4E,O7H47mBTG,8CAA8C,SAASp7E,EAAQkB,EAAOJ,GAC5E,Y8Hl8mBA,IAAAu6E,GAAA,WAuBC,QAAAA,GAAYn7D,GAPLna,KAAAivC,iBAA+B,GAAItuC,MAInCX,MAAAkvC,cAA4B,GAAIvuC,MAKtCX,MAAKma,SAAWA,EAGlB,MAAAm7D,KAEAtzE,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M9H88mBAzI,GAAQ0B,Q8H98mBO64E,O9Hg9mBTN,+CAA+C,SAAS/6E,EAAQkB,EAAOJ,GAC7E,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,I+HjhnBnF,IAAAG,GAAArO,EAA0B,oCAI1B,IAAAs7E,GAAAt7E,EAAiC,6CAWjC,IAAAu7E,GAAA,SAAAhtE,GAAkCV,EAAA0tE,EAAAhtE,EAqBjC,SAAAgtE,KAEChtE,EAAAxN,KAAAgF,KACAA,MAAKy1E,YAAc,GAAI90E,MACvBX,MAAK01E,gBAAkB,GAAI1zE,OAC3BhC,MAAK21E,QAAQ,CACb31E,MAAK41E,SAAS,EAMRJ,EAAAtzE,UAAAuB,QAAP,YAKAzB,QAAAC,eAAIuzE,EAAAtzE,UAAA,U/HignBGC,I+HjgnBP,WACC,MAAOnC,MAAK21E,S/HmgnBNpyE,I+HhgnBP,SAAWC,GACVxD,KAAK21E,QAAQnyE,G/HkgnBPnB,WAAY,KACZC,aAAc,M+HjgnBrBN,QAAAC,eAAIuzE,EAAAtzE,UAAA,W/HognBGC,I+HpgnBP,WACC,MAAOnC,MAAK41E,U/HsgnBNryE,I+HngnBP,SAAYC,GACXxD,KAAK41E,SAASpyE,G/HqgnBRnB,WAAY,KACZC,aAAc,M+HngnBrBN,QAAAC,eAAIuzE,EAAAtzE,UAAA,Y/HsgnBGC,I+HtgnBP,WACC,MAAOnC,MAAK61E,W/HwgnBNtyE,I+HrgnBP,SAAaC,GACZxD,KAAK61E,UAAUryE,G/HugnBTnB,WAAY,KACZC,aAAc,M+HtgnBrBN,QAAAC,eAAIuzE,EAAAtzE,UAAA,Y/HygnBGC,I+HzgnBP,WACC,MAAOnC,MAAK81E,W/H2gnBNvyE,I+HxgnBP,SAAaC,GACZxD,KAAK81E,UAAUtyE,G/H0gnBTnB,WAAY,KACZC,aAAc,M+HzgnBdkzE,GAAAtzE,UAAA6zE,eAAP,WAEC,MAAO/1E,MAAKy1E,YAEND,GAAAtzE,UAAAkrC,iBAAP,WAEC,MAAOptC,MAAKg2E,cAENR,GAAAtzE,UAAA+zE,qBAAP,SAA4BzyE,GAE3BxD,KAAKk2E,kBAAkB1yE,EAEjBgyE,GAAAtzE,UAAAsrC,qBAAP,WAEC,MAAOxtC,MAAKk2E,kBAENV,GAAAtzE,UAAAi0E,iBAAP,SAAwBC,GAEvBp2E,KAAKg2E,cAAcI,EAKbZ,GAAAtzE,UAAA2sC,QAAP,SAAen/B,GAEd,MAAO1P,MAAK01E,gBAAgBhmE,GAKtB8lE,GAAAtzE,UAAAm0E,QAAP,SAAe3mE,EAAayK,EAAuBg1B,GAElD,GAAImnC,GAA0C,GAAIf,GAAA94E,QAAsC0d,EACxFm8D,GAAqBnnC,WAAWA,CAChCh1B,GAASzK,KAAOA,CAChB1P,MAAKy1E,YAAYryE,KAAKkzE,EACtBt2E,MAAK01E,gBAAgBhmE,GAAM4mE,EAG7B,OAAAd,IA1GkCltE,EAAA7L,QA4GlCuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M/HognBAzI,GAAQ0B,Q+HpgnBO+4E,I/HsgnBZ7sE,oCAAoCrB,UAAU+tE,6CAA6C,+CAA+CkB,6CAA6C,SAASt8E,EAAQkB,EAAOJ,GAClN,YgI9nnBA,IAAAy7E,GAAA,WAAA,QAAAA,MAOeA,EAAAC,OAAgB,QAOhBD,GAAAE,KAAc,MAKdF,GAAAxiC,KAAc,MAOdwiC,GAAAG,MAAe,OAC9B,OAAAH,KAEAx0E,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MhIkonBAzI,GAAQ0B,QgIlonBO+5E,OhIoonBTrjC,yCAAyC,SAASl5C,EAAQkB,EAAOJ,GACvE,YiIhqnBA,IAAA67E,GAAA,WAAA,QAAAA,MAKeA,EAAAC,QAAiB,SAKjBD,GAAAE,MAAe,OAKfF,GAAAnrC,OAAgB,OAC/B,OAAAmrC,KAEA50E,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MjIuqnBAzI,GAAQ0B,QiIvqnBOm6E,OjIyqnBTG,2CAA2C,SAAS98E,EAAQkB,EAAOJ,GACzE,YkI9rnBA,IAAAi8E,GAAA,WAAA,QAAAA,KAMQh3E,KAAAy2E,OAAgB,QAMhBz2E,MAAAi3E,QAAiB,SAMjBj3E,MAAA02E,KAAc,MAMd12E,MAAA22E,MAAe,QACvB,MAAAK,KAEAh1E,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MlIksnBAzI,GAAQ0B,QkIlsnBOu6E,OlIosnBTE,sCAAsC,SAASj9E,EAAQkB,EAAOJ,GACpE,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL;CACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,ImIxunBnF,IAAAG,GAAArO,EAA0B,oCA8B1B,IAAAk9E,GAAA,SAAA3uE,GAAyBV,EAAAqvE,EAAA3uE,EAiPxB,SAAA2uE,GAAYC,EAAiClqC,EAAkBT,EAAiC4qC,EAAsBC,EAAwBC,EAA2BC,EAAiBC,EAAyB/nC,EAAuBxB,EAAuBC,EAAwBC,EAAmB0B,GAAhS,GAAAsnC,QAAA,GAA+B,CAA/BA,EAAA,kBAAiC,GAAAlqC,QAAA,GAAgB,CAAhBA,EAAA,GAAkB,GAAAT,QAAA,GAA+B,CAA/BA,EAAA,EAAiC,GAAA4qC,QAAA,GAAoB,CAApBA,EAAA,MAAsB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,MAAwB,GAAAC,QAAA,GAAyB,CAAzBA,EAAA,MAA2B,GAAAC,QAAA,GAAe,CAAfA,EAAA,GAAiB,GAAAC,QAAA,GAAuB,CAAvBA,EAAA,GAAyB,GAAA/nC,QAAA,GAAqB,CAArBA,EAAA,OAAuB,GAAAxB,QAAA,GAAqB,CAArBA,EAAA,EAAuB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,EAAwB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAA0B,QAAA,GAAkB,CAAlBA,EAAA,EAE3StnC,EAAAxN,KAAAgF,KAjFMA,MAAA03E,SAAiC,GAAI/2E,MAkF3CX,MAAK23E,UAAYP,CACjBp3E,MAAKktC,KAAOA,CACZltC,MAAKq3E,KAAOA,CACZr3E,MAAKs3E,OAASA,CACdt3E,MAAKu3E,UAAYA,CACjBv3E,MAAKw3E,IAAMA,CACXx3E,MAAKy3E,YAAcA,CACnBz3E,MAAK0vC,MAAQA,CACb1vC,MAAKkuC,WAAaA,CAClBluC,MAAKmuC,YAAcA,CACnBnuC,MAAKouC,OAASA,CACdpuC,MAAK8vC,QAAUA,EAMhB9tC,OAAAC,eAAWk1E,EAAAj1E,UAAA,anIkjnBJC,ImIljnBP,WAEC,MAAOg1E,GAAWzuE,WnImjnBZrG,WAAY,KACZC,aAAc,MmIzznBP60E,GAAAzuE,UAAmB,oBAuQlC,OAAAyuE,IAzQyB7uE,EAAA7L,QA2QzBuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MnIsjnBAzI,GAAQ0B,QmItjnBO06E,InIwjnBZxuE,oCAAoCrB,YAAYswE,+CAA+C,SAAS39E,EAAQkB,EAAOJ,GAC1H,YoI71nBA,IAAA88E,GAAA,WAAA,QAAAA,MASeA,EAAA9tC,OAAgB,QAOhB8tC,GAAAC,UAAmB,WAClC,OAAAD,KAEA71E,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MpIo2nBAzI,GAAQ0B,QoIp2nBOo7E,OpIs2nBTE,2CAA2C,SAAS99E,EAAQkB,EAAOJ,GACzE,YqIz3nBA,IAAAi9E,GAAA,WA4DC,QAAAA,GAAYn1E,EAAgBqB,EAAoBC,EAAqBkrC,EAAqBQ,EAAsBC,GAApG,GAAAjtC,QAAA,GAAc,CAAdA,EAAAi3C,IAAgB,GAAA51C,QAAA,GAAkB,CAAlBA,EAAA41C,IAAoB,GAAA31C,QAAA,GAAmB,CAAnBA,EAAA21C,IAAqB,GAAAzK,QAAA,GAAmB,CAAnBA,EAAAyK,IAAqB,GAAAjK,QAAA,GAAoB,CAApBA,EAAAiK,IAAsB,GAAAhK,QAAA,GAAoB,CAApBA,EAAAgK,KAIjH,MAAAk+B,KAEAh2E,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MrI41nBAzI,GAAQ0B,QqI51nBOu7E,OrI81nBTl5E,2BAA2B,SAAS7E,EAAQkB,EAAOJ,GACzD,YsIv6nBA,IAAAk9E,GAAAh+E,EAA2C,wCAAnCc,GAAAw5E,cAAA0D,EAAAx7E,OACR,IAAAy7E,GAAAj+E,EAAoC,+BAA5Bc,GAAA45E,KAAAuD,EAAAz7E,OACR,IAAA07E,GAAAl+E,EAA0C,sCAAlCc,GAAAm6E,YAAAiD,EAAA17E,OACR,IAAA84E,GAAAt7E,EAA+C,6CAAvCc,GAAAu6E,mBAAAC,EAAA94E,OACR,IAAAi4E,GAAAz6E,EAAgD,8CAAxCc,GAAAy6E,oBAAAd,EAAAj4E,OACR,IAAA27E,GAAAn+E,EAA8C,4CAAtCc,GAAAy7E,kBAAA4B,EAAA37E,OACR,IAAA6uC,GAAArxC,EAA2C,wCAAnCc,GAAA67E,cAAAtrC,EAAA7uC,OACR,IAAA47E,GAAAp+E,EAAyC,qCAAjCc,GAAAo8E,WAAAkB,EAAA57E,OACR,IAAA67E,GAAAr+E,EAA6C,0CAArCc,GAAAi8E,gBAAAsB,EAAA77E,OACR,IAAA87E,GAAAt+E,EAAgD,8CAAxCc,GAAA88E,oBAAAU,EAAA97E,OACR,IAAA+7E,GAAAv+E,EAA6C,0CAArCc,GAAAi9E,gBAAAQ,EAAA/7E,UtIq7nBL63E,wCAAwC,wCAAwCG,+BAA+B,+BAA+BQ,sCAAsC,sCAAsCI,6CAA6C,6CAA6CL,8CAA8C,8CAA8CuB,4CAA4C,4CAA4CpjC,wCAAwC,wCAAwC+jC,qCAAqC,qCAAqCH,0CAA0C,0CAA0Ca,8CAA8C,8CAA8CG,0CAA0C,4CAA4CU,2CAA2C,SAASx+E,EAAQkB,EAAOJ,GAC98B,YuI57nBA,IAAA29E,GAAA,WAAA,QAAAA,MAKeA,EAAA3uC,OAAgB,QAKhB2uC,GAAAC,gBAAyB,gBAKzBD,GAAAE,gBAAyB,gBACxC,OAAAF,KAEA12E,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MvIi8nBAzI,GAAQ0B,QuIj8nBOi8E,OvIm8nBT7mB,+CAA+C,SAAS53D,EAAQkB,EAAOJ,GAC7E,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IwI59nBnF,IAAA82B,GAAAhlC,EAAyB,mCACzB,IAAA4+E,GAAA5+E,EAA0B,mCAE1B,IAAA6+E,GAAA7+E,EAA2B,0CAC3B,IAAA8+E,GAAA9+E,EAA2B,0CAE3B,IAAA++E,GAAA,SAAAxwE,GAA8BV,EAAAkxE,EAAAxwE,EAmE7B,SAAAwwE,GAAY3b,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEX70D,EAAAxN,KAAAgF,KAEAA,MAAKi5E,aAAa,EAElBj5E,MAAKq9D,QAAUA,CAEfr9D,MAAKk5E,aAAeJ,EAAAr8E,QAAYstC,OAjEjC/nC,OAAAC,eAAW+2E,EAAA92E,UAAA,axIg+nBJC,IwIh+nBP,WAEC,MAAO62E,GAAgBtwE,WxIi+nBjBrG,WAAY,KACZC,aAAc,MwI/9nBrBN,QAAAC,eAAW+2E,EAAA92E,UAAA,exIk+nBJC,IwIl+nBP,WAEC,MAAOnC,MAAKk5E,cxIm+nBN31E,IwIh+nBP,SAAuBC,GAEtB,GAAIxD,KAAKk5E,cAAgB11E,EACxB,MAEDxD,MAAKk5E,aAAe11E,GxIg+nBdnB,WAAY,KACZC,aAAc,MwIx9nBrBN,QAAAC,eAAW+2E,EAAA92E,UAAA,axI+9nBJC,IwI/9nBP,WAEC,MAAmBnC,MAAKuK,UAAU,IxIg+nB5BhH,IwI79nBP,SAAqBC,GAEpB,GAAIxD,KAAKuK,UAAU,IAAM/G,EACxB,MAEDxD,MAAKm5E,aAAa31E,EAAO,IxI69nBnBnB,WAAY,KACZC,aAAc,MwIv9nBrBN,QAAAC,eAAW+2E,EAAA92E,UAAA,WxI89nBJC,IwI99nBP,WAEC,MAAiBnC,MAAKwK,QAAQ,IxI+9nBxBjH,IwI59nBP,SAAmBC,GAElB,GAAIxD,KAAKwK,QAAQ,IAAMhH,EACtB,MAED,KAAKq1E,EAAAp8E,QAAW28E,eAAe51E,GAC9B,KAAM,IAAIy7B,GAAAxiC,QAAU,kFAErBuD,MAAKq5E,WAAW71E,EAAO,IxI29nBjBnB,WAAY,KACZC,aAAc,MwIxhoBP02E,GAAAtwE,UAAmB,2BAyElC,OAAAswE,IA7E8BD,EAAAt8E,QA+E9BuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MxIm9nBAzI,GAAQ0B,QwIn9nBOu8E,IxIq9nBZ15C,mCAAmCh4B,UAAUgyE,mCAAmChyE,UAAUmxE,0CAA0C,0CAA0Cc,0CAA0C,4CAA4CzuC,iDAAiD,SAAS7wC,EAAQkB,EAAOJ,GAChV,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,IyI9ioBnF,IAAA4wE,GAAA9+E,EAA2B,0CAG3B,IAAAu/E,GAAA,SAAAhxE,GAAgCV,EAAA0xE,EAAAhxE,EAgD/B,SAAAgxE,GAAYvZ,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEXz3D,EAAAxN,KAAAgF,KAEAA,MAAKi5E,aAAa,EAElBj5E,MAAKigE,UAAYA,EA9ClBj+D,OAAAC,eAAWu3E,EAAAt3E,UAAA,azImjoBJC,IyInjoBP,WAEC,MAAOq3E,GAAkB9wE,WzIojoBnBrG,WAAY,KACZC,aAAc,MyI9ioBrBN,QAAAC,eAAWu3E,EAAAt3E,UAAA,ezIqjoBJC,IyIrjoBP,WAEC,MAAqBnC,MAAKuK,UAAU,IzIsjoB9BhH,IyInjoBP,SAAuBC,GAEtB,GAAIxD,KAAKuK,UAAU,IAAM/G,EACxB,MAEDxD,MAAKm5E,aAAa31E,EAAO,IzImjoBnBnB,WAAY,KACZC,aAAc,MyI7ioBrBN,QAAAC,eAAWu3E,EAAAt3E,UAAA,azIojoBJC,IyIpjoBP,WAEC,MAAmBnC,MAAKwK,QAAQ,IzIqjoB1BjH,IyIljoBP,SAAqBC,GAEpB,GAAIxD,KAAKwK,QAAQ,IAAMhH,EACtB,MAEDxD,MAAKq5E,WAAW71E,EAAO,IzIkjoBjBnB,WAAY,KACZC,aAAc,MyI7loBPk3E,GAAA9wE,UAAmB,6BAsDlC,OAAA8wE,IAxDgCT,EAAAt8E,QA0DhCuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,MzI2ioBAzI,GAAQ0B,QyI3ioBO+8E,IzI6ioBZD,0CAA0C,4CAA4CA,2CAA2C,SAASt/E,EAAQkB,EAAOJ,GAC5J,YACA,IAAI+M,GAAa9H,MAAQA,KAAK8H,WAAc,SAAUC,EAAGC,GACrD,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOnI,KAAKoI,YAAcL,EACnCA,EAAE7F,UAAY8F,IAAM,KAAOhG,OAAOqG,OAAOL,IAAMG,EAAGjG,UAAY8F,EAAE9F,UAAW,GAAIiG,I0IhnoBnF,IAAAG,GAAArO,EAA0B,oCAO1B,IAAAw/E,GAAA,SAAAjxE,GAA0BV,EAAA2xE,EAAAjxE,EASzB,SAAAixE,KAECjxE,EAAAxN,KAAAgF,KATMA,MAAA05E,WAAoB,CACpB15E,MAAAwK,QAA2B,GAAI7J,MAC/BX,MAAAuK,UAA+B,GAAI5J,OAUnC84E,EAAAv3E,UAAAy3E,aAAP,WAEC,MAAO35E,MAAK05E,WAGND,GAAAv3E,UAAA+2E,aAAP,SAAoBz1E,GAEnB,GAAIxD,KAAK05E,YAAcl2E,EACtB,MAEDxD,MAAK05E,WAAal2E,CAElBxD,MAAKwK,QAAQvP,OAASuI,CACtBxD,MAAKuK,UAAUtP,OAASuI,CAExBxD,MAAKugB,aAGCk5D,GAAAv3E,UAAA4I,WAAP,SAAkBE,GAEjB,MAAOhL,MAAKwK,QAAQQ,GAGdyuE,GAAAv3E,UAAAm3E,WAAP,SAAkBluE,EAAiBH,GAElChL,KAAKwK,QAAQQ,GAASG,CAEtBnL,MAAKugB,aAGCk5D,GAAAv3E,UAAA+I,aAAP,SAAoBD,GAEnB,MAAOhL,MAAKuK,UAAUS,GAGhByuE,GAAAv3E,UAAAi3E,aAAP,SAAoB9tE,EAAqBL,GAExChL,KAAKuK,UAAUS,GAASK,CAExBrL,MAAKugB,aAEP,OAAAk5D,IAvD0BnxE,EAAA7L,QAyD1BuF,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M1I6loBAzI,GAAQ0B,Q0I7loBOg9E,I1I+loBZ9wE,oCAAoCrB,YAAYvI,+BAA+B,SAAS9E,EAAQkB,EAAOJ,GAC1G,Y2IlqoBA,IAAA+9E,GAAA7+E,EAA0C,0CAAlCc,GAAA29E,YAAAI,EAAAr8E,OACR,IAAA2zD,GAAAn2D,EAA6C,8CAArCc,GAAAi+E,gBAAA5oB,EAAA3zD,OACR,IAAAktC,GAAA1vC,EAA8C,gDAAtCc,GAAAy+E,kBAAA7vC,EAAAltC,OACR,IAAAs8E,GAAA9+E,EAA0C,0CAAlCc,GAAA0+E,YAAAV,EAAAt8E,U3IyqoBLg8E,0CAA0C,0CAA0C5mB,8CAA8C,8CAA8C/mB,gDAAgD,gDAAgDyuC,0CAA0C,4CAA4CK,iCAAiC,SAAS3/E,EAAQkB,EAAOJ,GACla,Y4I7qoBA,IAAAu8D,GAAAr9D,EAAwB,gCACxB,IAAA4/E,GAAA5/E,EAAyB,kCAEzB,IAAA2qD,GAAA3qD,EAAyB,sCACzB,IAAAm2D,GAAAn2D,EAA8B,8CAK9B,IAAA6/E,GAAA,WAAA,QAAAA,MAQeA,EAAAC,OAAd,SAAqBz3C,GAEpB,SAAU,IAAU,WACnBA,EAAO,GAAIA,EAEZ,UAAU,IAAU,SACnB,MAAOA,EAER,OAAgBA,GAGHw3C,GAAAE,UAAd,SAAwB13C,GAEvB,SAAU,IAAU,WACnBA,EAAO,GAAIA,EAEZ,IAAIA,YAAgBu3C,GAAAp9E,QACnB,MAAO6lC,EAER,OAAmBA,GAcLw3C,GAAAG,MAAf,SAAqB3rE,GAEpB,GAAIrT,GAAwBqT,EAAIrT,MAChC,KAAK,GAAIP,GAAmB,EAAGA,EAAIO,IAAUP,EAAG,CAC/C,GAAIsF,KAAKk6E,UAAUzrE,QAAQH,EAAI6rE,OAAOz/E,MAAQ,EAC7C,MAAO,OAGT,MAAO,MAGMo/E,GAAAM,SAAd,SAAuB93C,GAEtB,SAAU,IAAU,SACnB,MAAO5oB,MAAKkzC,MAAetqB,EAE5B,UAAU,IAAU,SAAU,CAC7B,GAAIA,GAAQ,SACX,MAAO5oB,MAAKkzC,MAAMlzC,KAAK2gE,SAAS,SAEjC,IAAIr6E,KAAKs6E,aAAe,KAAM,CAC7Bt6E,KAAKs6E,YAAc,GAAIt4E,OACvBhC,MAAKs6E,YAAY,aAAe,OAChCt6E,MAAKs6E,YAAY,aAAe,MAChCt6E,MAAKs6E,YAAY,kBAAoB,OACrCt6E,MAAKs6E,YAAY,kBAAoB,QACrCt6E,MAAKs6E,YAAY,mBAAqB,OACtCt6E,MAAKs6E,YAAY,aAAe,OAChCt6E,MAAKs6E,YAAY,iBAAmB,OACpCt6E,MAAKs6E,YAAY,gBAAkB,OACnCt6E,MAAKs6E,YAAY,QAAU,GAC3Bt6E,MAAKs6E,YAAY,YAAc,GAC/Bt6E,MAAKs6E,YAAY,cAAgB,GACjCt6E,MAAKs6E,YAAY,QAAU,GAC3Bt6E,MAAKs6E,YAAY,cAAgB,OACjCt6E,MAAKs6E,YAAY,eAAiB,KAClCt6E,MAAKs6E,YAAY,gBAAkB,OACnCt6E,MAAKs6E,YAAY,WAAa,OAC9Bt6E,MAAKs6E,YAAY,aAAe,QAChCt6E,MAAKs6E,YAAY,cAAgB,QACjCt6E,MAAKs6E,YAAY,SAAW,QAC5Bt6E,MAAKs6E,YAAY,aAAe,QAChCt6E,MAAKs6E,YAAY,iBAAmB,QACpCt6E,MAAKs6E,YAAY,mBAAqB,OACtCt6E,MAAKs6E,YAAY,iBAAmB,OACpCt6E,MAAKs6E,YAAY,YAAc,KAC/Bt6E,MAAKs6E,YAAY,QAAU,KAC3Bt6E,MAAKs6E,YAAY,aAAe,OAChCt6E,MAAKs6E,YAAY,iBAAmB,KACpCt6E,MAAKs6E,YAAY,QAAU,KAC3Bt6E,MAAKs6E,YAAY,QAAU,KAC3Bt6E,MAAKs6E,YAAY,aAAe,OAChCt6E,MAAKs6E,YAAY,cAAgB,OACjCt6E,MAAKs6E,YAAY,oBAAsB,OACvCt6E,MAAKs6E,YAAY,gBAAkB,OACnCt6E,MAAKs6E,YAAY,kBAAoB,OACrCt6E,MAAKs6E,YAAY,YAAc,OAC/Bt6E,MAAKs6E,YAAY,aAAe,KAChCt6E,MAAKs6E,YAAY,SAAW,KAC5Bt6E,MAAKs6E,YAAY,eAAiB,OAClCt6E,MAAKs6E,YAAY,aAAe,OAChCt6E,MAAKs6E,YAAY,QAAU,KAC3Bt6E,MAAKs6E,YAAY,cAAgB,OACjCt6E,MAAKs6E,YAAY,aAAe,OAChCt6E,MAAKs6E,YAAY,eAAiB,QAClCt6E,MAAKs6E,YAAY,eAAiB,QAClCt6E,MAAKs6E,YAAY,aAAe,QAChCt6E,MAAKs6E,YAAY,cAAgB,OACjCt6E,MAAKs6E,YAAY,eAAiB,KAClCt6E,MAAKs6E,YAAY,qBAAuB,KACxCt6E,MAAKs6E,YAAY,kBAAoB,OACrCt6E,MAAKs6E,YAAY,aAAe,OAChCt6E,MAAKs6E,YAAY,SAAW,OAC5Bt6E,MAAKs6E,YAAY,aAAe,QAChCt6E,MAAKs6E,YAAY,iBAAmB,QACpCt6E,MAAKs6E,YAAY,aAAe,QAChCt6E,MAAKs6E,YAAY,QAAU,QAC3Bt6E,MAAKs6E,YAAY,UAAY,QAC7Bt6E,MAAKs6E,YAAY,SAAW,QAC5Bt6E,MAAKs6E,YAAY,iBAAmB,QACpCt6E,MAAKs6E,YAAY,kBAAoB,QACrCt6E,MAAKs6E,YAAY,YAAc,QAC/Bt6E,MAAKs6E,YAAY,SAAW,QAC5Bt6E,MAAKs6E,YAAY,eAAiB,QAClCt6E,MAAKs6E,YAAY,aAAe,QAChCt6E,MAAKs6E,YAAY,OAAS,QAC1Bt6E,MAAKs6E,YAAY,aAAe,QAChCt6E,MAAKs6E,YAAY,UAAY,QAC7Bt6E,MAAKs6E,YAAY,eAAiB,OAClCt6E,MAAKs6E,YAAY,aAAe,QAChCt6E,MAAKs6E,YAAY,QAAU,QAC3Bt6E,MAAKs6E,YAAY,cAAgB,QACjCt6E,MAAKs6E,YAAY,WAAa,OAC9Bt6E,MAAKs6E,YAAY,UAAY,OAC7Bt6E,MAAKs6E,YAAY,SAAW,QAC5Bt6E,MAAKs6E,YAAY,aAAe,QAChCt6E,MAAKs6E,YAAY,aAAe,QAChCt6E,MAAKs6E,YAAY,cAAgB,QACjCt6E,MAAKs6E,YAAY,UAAY,QAC7Bt6E,MAAKs6E,YAAY,cAAgB,QACjCt6E,MAAKs6E,YAAY,eAAiB,QAClCt6E,MAAKs6E,YAAY,SAAW,QAC5Bt6E,MAAKs6E,YAAY,UAAY,QAC7Bt6E,MAAKs6E,YAAY,cAAgB,QACjCt6E,MAAKs6E,YAAY,UAAY,QAC7Bt6E,MAAKs6E,YAAY,aAAe,QAChCt6E,MAAKs6E,YAAY,WAAa,QAC9Bt6E,MAAKs6E,YAAY,OAAS,QAC1Bt6E,MAAKs6E,YAAY,YAAc,QAC/Bt6E,MAAKs6E,YAAY,WAAa,QAC9Bt6E,MAAKs6E,YAAY,WAAa,QAC9Bt6E,MAAKs6E,YAAY,WAAa,QAC9Bt6E,MAAKs6E,YAAY,aAAe,QAChCt6E,MAAKs6E,YAAY,QAAU,QAC3Bt6E,MAAKs6E,YAAY,iBAAmB,QACpCt6E,MAAKs6E,YAAY,mBAAqB,QACtCt6E,MAAKs6E,YAAY,UAAY,OAC7Bt6E,MAAKs6E,YAAY,eAAiB,OAClCt6E,MAAKs6E,YAAY,gBAAkB,OACnCt6E,MAAKs6E,YAAY,cAAgB,OACjCt6E,MAAKs6E,YAAY,UAAY,OAC7Bt6E,MAAKs6E,YAAY,cAAgB,OACjCt6E,MAAKs6E,YAAY,cAAgB,QACjCt6E,MAAKs6E,YAAY,gBAAkB,QACnCt6E,MAAKs6E,YAAY,UAAY,QAC7Bt6E,MAAKs6E,YAAY,UAAY,QAC7Bt6E,MAAKs6E,YAAY,QAAU,QAC3Bt6E,MAAKs6E,YAAY,WAAa,QAC9Bt6E,MAAKs6E,YAAY,YAAc,QAC/Bt6E,MAAKs6E,YAAY,cAAgB,QACjCt6E,MAAKs6E,YAAY,aAAe,QAChCt6E,MAAKs6E,YAAY,aAAe,QAChCt6E,MAAKs6E,YAAY,YAAc,QAC/Bt6E,MAAKs6E,YAAY,wBAA0B,QAC3Ct6E,MAAKs6E,YAAY,gBAAkB,QACnCt6E,MAAKs6E,YAAY,YAAc,QAC/Bt6E,MAAKs6E,YAAY,eAAiB,QAClCt6E,MAAKs6E,YAAY,SAAW,QAC5Bt6E,MAAKs6E,YAAY,eAAiB,QAClCt6E,MAAKs6E,YAAY,SAAW,QAC5Bt6E,MAAKs6E,YAAY,WAAa,QAC9Bt6E,MAAKs6E,YAAY,gBAAkB,QACnCt6E,MAAKs6E,YAAY,UAAY,QAC7Bt6E,MAAKs6E,YAAY,aAAe,QAChCt6E,MAAKs6E,YAAY,cAAgB,QACjCt6E,MAAKs6E,YAAY,SAAW,QAC5Bt6E,MAAKs6E,YAAY,YAAc,QAC/Bt6E,MAAKs6E,YAAY,iBAAmB,QACpCt6E,MAAKs6E,YAAY,aAAe,QAChCt6E,MAAKs6E,YAAY,QAAU,QAC3Bt6E,MAAKs6E,YAAY,SAAW,QAC5Bt6E,MAAKs6E,YAAY,cAAgB,QACjCt6E,MAAKs6E,YAAY,aAAe,QAChCt6E,MAAKs6E,YAAY,aAAe,QAChCt6E,MAAKs6E,YAAY,UAAY,QAC7Bt6E,MAAKs6E,YAAY,YAAc,QAC/Bt6E,MAAKs6E,YAAY,QAAU,OAC3Bt6E,MAAKs6E,YAAY,kBAAoB,OACrCt6E,MAAKs6E,YAAY,aAAe,OAChCt6E,MAAKs6E,YAAY,WAAa,OAC9Bt6E,MAAKs6E,YAAY,iBAAmB,OACpCt6E,MAAKs6E,YAAY,SAAW,CAC5Bt6E,MAAKs6E,YAAY,eAAiB,WAGnC,GAAIt6E,KAAKs6E,YAAYh4C,IAAS,KAC7B,MAAOtiC,MAAKs6E,YAAYh4C,EAEzB,IAAeA,EAAMrnC,QAAU,GAAM+E,KAAKi6E,MAAM33C,GAC/C,MAAOi4C,UAAS,KAAOj4C,GAGzB,MAAO,MAGMw3C,GAAArtC,MAAd,SAAoBnK,GAEnB,GAAI6jB,GAAyBnmD,KAAKo6E,SAAS93C,EAE3C,IAAI6jB,GAAU,KACb,KAAM,IAAIvB,GAAAnoD,QAAU,wBAA0B6lC,EAE/C,OAAO6jB,GAGM2zB,GAAAU,SAAd,SAAuB9qE,GAEtB,GAAI1P,KAAKy6E,YAAY/qE,GACpB,MAAOA,EAER,IAAIy2C,GAAanmD,KAAK06E,SAAShrE,EAE/B,IAAIy2C,GAAU,KACb,MAAOA,EAER,KACCA,EAASw0B,OAAOjrE,EAChB1P,MAAK06E,SAAShrE,GAAQy2C,CACtB,OAAOA,GACN,MAAOjsD,IAGT8F,KAAKy6E,YAAY/qE,GAAQ,IAEzB,OAAOA,GAGMoqE,GAAAzc,QAAd,SAAsB/6B,GAErB,GAAIA,GAAQ,KACX,MAAO,KAER,UAAU,IAAU,SACnBA,EAAOtiC,KAAKw6E,SAASl4C,EAEtB,UAAU,IAAU,WAAY,CAC/B,IACCA,EAAO,GAAIA,GACV,MAAOpoC,GACRooC,EAAO,GAAIA,GAAK,EAAG,IAIrB,GAAIA,YAAgBg1B,GAAA76D,QACnB,MAAO6lC,EAER,IAAIA,YAAgB8tB,GAAA3zD,QACnB6lC,EAA0BA,EAAM+6B,OAEjC,MAAM,IAAIzY,GAAAnoD,QAAU,gCAAkC6lC,GAGzCw3C,GAAAc,cAAd,SAA4Bt4C,GAE3B,GAAIA,GAAQ,KACX,MAAO,KAER,UAAU,IAAU,SACnBA,EAAOtiC,KAAKw6E,SAASl4C,EAEtB,UAAU,IAAU,WAAY,CAC/B,IACCA,EAAO,GAAIA,GACV,MAAOpoC,GACRooC,EAAO,GAAIA,GAAK,EAAG,IAIrB,GAAIA,YAAgB8tB,GAAA3zD,QACnB,MAAO6lC,EAER,KACC,GAAIu4C,GAAcf,EAAKzc,QAAQ/6B,EAC/B,OAAO,IAAI8tB,GAAA3zD,QAAgBo+E,GAC1B,MAAO3gF,IAGT,KAAM,IAAI0qD,GAAAnoD,QAAU,kCAAoC6lC,GAvS1Cw3C,GAAAI,UAAmB,wBAEnBJ,GAAAW,YAAqB,GAAIz4E,OACzB83E,GAAAY,SAAkB,GAAI14E,OAsStC,OAAA83E,KAEA93E,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M5IoooBAzI,GAAQ0B,Q4IpooBOq9E,I5IsooBZliB,gCAAgCtwD,UAAUwzE,kCAAkCxzE,UAAUm9C,sCAAsC,sCAAsCoN,8CAA8C,gDAAgD9F,0CAA0C,SAAS9xD,EAAQkB,EAAOJ,GACrU,Y6I97oBA,IAAAy3E,GAAAv4E,EAA+B,8CAI/B,IAAAo9C,GAAAp9C,EAA+B,8CAC/B,IAAA8gF,GAAA9gF,EAA+B,8CAC/B,IAAAkxC,GAAAlxC,EAA8B,6CAE9B,IAAA+b,GAAA/b,EAAyB,gCACzB,IAAAk5B,GAAAl5B,EAAqB,2BACrB,IAAAm5B,GAAAn5B,EAAuB,8BAIvB,IAAA+gF,GAAA,WAAA,QAAAA,MAUeA,EAAAlrB,oBAAd,SAAkCmrB,EAAkCC,EAAmCC,EAAyB9xC,EAAcwgB,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE7I,GAAI7P,GAAsBihC,EAAgB94E,IAAIknC,EAAOwgB,EACrD,IAAIgC,GAA4BqvB,EAAmB/4E,IAAI+4E,EAAmB7xC,MAE1E,IAAI8xC,GAAU,KACbA,EAAS,GAAIJ,GAAAt+E,QAAiB4sC,EAAQwgB,OAClC,IAAIsxB,EAAO9xC,MAAQA,EAAQwgB,EAC/BsxB,EAAO9xC,MAAQA,EAAQwgB,CAExB,IAAIuxB,GAAkBH,EAAgBrtB,UACtC,IAAIytB,GAAqBH,EAAmBttB,UAE5C,IAAIe,GAA2BwsB,EAAOh5E,IAAIknC,EAAOwgB,EAGjDxgB,IAAS+xC,CAET,IAAI1gF,GAAW,CACf,IAAIoiC,GAAW,CACf,IAAI9xB,EAEJ,IAAIswE,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWC,CAC1B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIt+D,GAAWC,EAAWC,CAC1B,IAAIjW,EAEJ,IAAIszE,GAAe,EAAG,CACrB,MAAO3gF,EAAI2uC,EAAO,CACjBr+B,EAAQgvC,EAAQt/C,KAAK,CACrB4gF,GAAKzvB,EAAU7gD,EACfywE,GAAK5vB,EAAU7gD,EAAQ,EACvB4wE,GAAK/vB,EAAU7gD,EAAQ,EACvBA,GAAQgvC,EAAQt/C,KAAK,CACrB6gF,GAAK1vB,EAAU7gD,EACf0wE,GAAK7vB,EAAU7gD,EAAQ,EACvB6wE,GAAKhwB,EAAU7gD,EAAQ,EACvBA,GAAQgvC,EAAQt/C,KAAK,CACrB8gF,GAAK3vB,EAAU7gD,EACf2wE,GAAK9vB,EAAU7gD,EAAQ,EACvB8wE,GAAKjwB,EAAU7gD,EAAQ,EACvB+wE,GAAMP,EAAKF,CACXU,GAAML,EAAKF,CACXQ,GAAMH,EAAKF,CACXM,GAAMX,EAAKD,CACXa,GAAMT,EAAKD,CACXW,GAAMP,EAAKD,CACX99D,GAAKm+D,EAAIE,EAAMH,EAAII,CACnBr+D,GAAKg+D,EAAIK,EAAMH,EAAIC,CACnBl+D,GAAKg+D,EAAIE,EAAMH,EAAII,CACnBp0E,GAAI2R,KAAKC,KAAKmE,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EAGjC2wC,GAAY7xB,KAAOhf,CACnB6wC,GAAY7xB,KAAO/e,CACnB4wC,GAAY7xB,KAAO9e,CACnB2wC,GAAY7xB,KAAO/0B,OAEd,IAAIszE,GAAe,EAAG,CAC5B,MAAO3gF,EAAI2uC,EAAO,CACjBslB,EAAY7xB,KAAO,CACnB6xB,GAAY7xB,KAAO,CACnB6xB,GAAY7xB,KAAO,CACnB6xB,GAAY7xB,KAAO,CACnBpiC,IAAK,GAIPygF,EAAO53E,IAAIorD,EAAa9E,EAExB,OAAOsxB,GAGMH,GAAAtsB,gBAAd,SAA8BusB,EAAkCoB,EAAuClB,EAAyBvrC,GAE/H,GAAIoK,GAAsBihC,EAAgB94E,IAAI84E,EAAgB5xC,MAC9D,IAAIslB,GAA2B0tB,EAAqBl6E,IAAIk6E,EAAqBhzC,MAE7E,IAAI8xC,GAAU,KACbA,EAAS,GAAI9jC,GAAA56C,QAAiBmzC,EAE/B,IAAIwrC,GAAkBH,EAAgBrtB,UACtC,IAAI0uB,GAAmBnB,EAAOvtB,UAE9B,IAAIyB,GAAuB8rB,EAAOh5E,IAAIg5E,EAAO9xC,MAE7C,IAAI3uC,GAAW,CACf,IAAIyI,GAAag4E,EAAO9xC,MAAMizC,CAG9B,OAAO5hF,EAAIyI,EAAK,CACfksD,EAAQ30D,KAAO,CACf20D,GAAQ30D,KAAO,CACf20D,GAAQ30D,KAAO,EAGhBA,EAAI,CACJyI,GAAM83E,EAAgB5xC,MAAM+xC,CAC5B,IAAIpwE,EACJ,IAAIuxE,GAAY,CAChB,IAAIC,GAAY,CAChB,IAAIC,GAAY,CAGhB,OAAO/hF,EAAIyI,EAAK,CACf6H,EAAQgvC,EAAQt/C,KAAK4hF,CACrBjtB,GAAQrkD,IAAU2jD,EAAY4tB,EAC9BltB,GAAQrkD,EAAQ,IAAM2jD,EAAY6tB,EAClCntB,GAAQrkD,EAAQ,IAAM2jD,EAAY8tB,EAClCzxE,GAAQgvC,EAAQt/C,KAAK4hF,CACrBjtB,GAAQrkD,IAAU2jD,EAAY4tB,EAC9BltB,GAAQrkD,EAAQ,IAAM2jD,EAAY6tB,EAClCntB,GAAQrkD,EAAQ,IAAM2jD,EAAY8tB,EAClCzxE,GAAQgvC,EAAQt/C,KAAK4hF,CACrBjtB,GAAQrkD,IAAU2jD,EAAY4tB,EAC9BltB,GAAQrkD,EAAQ,IAAM2jD,EAAY6tB,EAClCntB,GAAQrkD,EAAQ,IAAM2jD,EAAY8tB,EAClCF,IAAM,CACNC,IAAM,CACNC,IAAM,EAGP/hF,EAAI,CACJyI,GAAMg4E,EAAO9xC,MAAMizC,CACnB,IAAII,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAI70E,EAGJ,OAAOrN,EAAIyI,EAAK,CACfu5E,EAAKrtB,EAAQ30D,EACbiiF,GAAKttB,EAAQ30D,EAAI,EACjBkiF,GAAKvtB,EAAQ30D,EAAI,EACjBqN,GAAI,EAAI2R,KAAKC,KAAK+iE,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EAErCvtB,GAAQ30D,KAAOgiF,EAAG30E,CAClBsnD,GAAQ30D,KAAOiiF,EAAG50E,CAClBsnD,GAAQ30D,KAAOkiF,EAAG70E,EAGnBozE,EAAO53E,IAAI8rD,EAEX,OAAO8rB,GAGMH,GAAAprB,qBAAd,SAAmCqrB,EAAkCC,EAAmC2B,EAA6B1B,EAAyB9xC,EAAcwgB,EAAmBizB,GAAnB,GAAAjzB,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAizB,QAAA,GAA8B,CAA9BA,EAAA,MAE9L,GAAI9iC,GAAsBihC,EAAgB94E,IAAIknC,EAAOwgB,EACrD,IAAIgC,GAA4BqvB,EAAmB/4E,IAAI+4E,EAAmB7xC,MAC1E,IAAIkmB,GAAkCstB,EAAa16E,IAAI06E,EAAaxzC,MAEpE,IAAI8xC,GAAU,KACbA,EAAS,GAAI9jC,GAAA56C,QAAiB4sC,EAAQwgB,OAClC,IAAIsxB,EAAO9xC,MAAQA,EAAQwgB,EAC/BsxB,EAAO9xC,MAAQA,EAAQwgB,CAExB,IAAIwxB,GAAqBH,EAAmBttB,UAC5C,IAAIkc,GAAe+S,EAAajvB,UAChC,IAAIwtB,GAAkBH,EAAgBrtB,UAEtC,IAAIiB,GAA4BssB,EAAOh5E,IAAIknC,EAAOwgB,EAElD,IAAInvD,GAAW,CACf,IAAIy3B,EACJ,IAAIC,EACJ,IAAI2qD,EACJ,IAAIC,EACJ,IAAI71C,EACJ,IAAIE,EACJ,IAAI41C,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,GAAWC,EAAWC,CAC1B,IAAIvB,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIt+D,GAAWC,EAAWC,CAG1BqrB,IAAS+xC,CAET,OAAO1gF,EAAI2uC,EAAO,CACjBlX,EAAS6nB,EAAQt/C,EACjB03B,GAAS4nB,EAAQt/C,EAAI,EACrBqiF,GAAS/iC,EAAQt/C,EAAI,EAErBsiF,GAAKztB,EAAIp9B,EAAO23C,EAAQ,EACxBmT,GAAM1tB,EAAIn9B,EAAO03C,EAAQ,GAAKkT,CAC9BE,GAAM3tB,EAAIwtB,EAAOjT,EAAQ,GAAKkT,CAE9BA,GAAK7qD,EAAOkpD,CACZl0C,GAAK/U,EAAOipD,CACZh0C,GAAK01C,EAAO1B,CAEZ+B,GAAKvxB,EAAUmxB,EACfjB,GAAMlwB,EAAU1kB,GAAMi2C,CACtBlB,GAAMrwB,EAAUxkB,GAAM+1C,CACtBt/D,GAAKo/D,EAAInB,EAAMkB,EAAIf,CAEnBmB,GAAKxxB,EAAUmxB,EAAK,EACpBhB,GAAMnwB,EAAU1kB,EAAK,GAAKk2C,CAC1BlB,GAAMtwB,EAAUxkB,EAAK,GAAKg2C,CAC1Bt/D,GAAKm/D,EAAIlB,EAAMiB,EAAId,CAEnB,IAAId,GAAe,EAAG,CACrBiC,EAAKzxB,EAAUmxB,EAAK,EACpBf,GAAMpwB,EAAU1kB,EAAK,GAAKm2C,CAC1BlB,GAAMvwB,EAAUxkB,EAAK,GAAKi2C,CAC1Bt/D,GAAKk/D,EAAIjB,EAAMgB,EAAIb,MACb,CACNp+D,EAAK,EAGNm/D,EAAQ,EAAEzjE,KAAKC,KAAKmE,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EAEvC6wC,GAAan0D,KAAOyiF,EAAMr/D,CAC1B+wC,GAAan0D,KAAOyiF,EAAMp/D,CAC1B8wC,GAAan0D,KAAOyiF,EAAMn/D,EAG3Bm9D,EAAO53E,IAAIsrD,EAAchF,EAEzB,OAAOsxB,GAGMH,GAAApsB,iBAAd,SAA+BqsB,EAAkCsC,EAAwClB,EAAuClB,EAAyBvrC,GAExK,GAAIoK,GAAsBihC,EAAgB94E,IAAI84E,EAAgB5xC,MAC9D,IAAIwlB,GAA4B0uB,EAAsBp7E,IAAIo7E,EAAsBl0C,MAChF,IAAIslB,GAA2B0tB,EAAqBl6E,IAAIk6E,EAAqBhzC,MAE7E,IAAI8xC,GAAU,KACbA,EAAS,GAAI9jC,GAAA56C,QAAiBmzC,EAE/B,IAAIwrC,GAAkBH,EAAgBrtB,UACtC,IAAI0uB,GAAmBnB,EAAOvtB,UAE9B,IAAI0B,GAAwB6rB,EAAOh5E,IAAIg5E,EAAO9xC,MAE9C,IAAI3uC,GAAW,CACf,IAAIyI,GAAag4E,EAAO9xC,MAAMizC,CAG9B,OAAO5hF,EAAIyI,EAAK,CACfmsD,EAAS50D,KAAO,CAChB40D,GAAS50D,KAAO,CAChB40D,GAAS50D,KAAO,EAGjB,GAAI8iF,EACJ,IAAIxyE,EACJ,IAAIuxE,GAAY,CAChB,IAAIC,GAAY,CAChB,IAAIC,GAAY,CAChB,IAAIgB,GAAY,CAEhB/iF,GAAI,CACJyI,GAAM83E,EAAgB5xC,MAAM+xC,CAG5B,OAAO1gF,EAAIyI,EAAK,CACfq6E,EAAS7uB,EAAY8uB,EACrBzyE,GAAQgvC,EAAQt/C,KAAK4hF,CACrBhtB,GAAStkD,MAAY6jD,EAAa0tB,GAAIiB,CACtCluB,GAAStkD,MAAY6jD,EAAa2tB,GAAIgB,CACtCluB,GAAStkD,IAAU6jD,EAAa4tB,GAAIe,CACpCxyE,GAAQgvC,EAAQt/C,KAAK4hF,CACrBhtB,GAAStkD,MAAY6jD,EAAa0tB,GAAIiB,CACtCluB,GAAStkD,MAAY6jD,EAAa2tB,GAAIgB,CACtCluB,GAAStkD,IAAU6jD,EAAa4tB,GAAIe,CACpCxyE,GAAQgvC,EAAQt/C,KAAK4hF,CACrBhtB,GAAStkD,MAAY6jD,EAAa0tB,GAAIiB,CACtCluB,GAAStkD,MAAY6jD,EAAa2tB,GAAIgB,CACtCluB,GAAStkD,IAAU6jD,EAAa4tB,GAAIe,CACpCjB,IAAM,CACNC,IAAM,CACNC,IAAM,CACNgB,IAAM,EAGP/iF,EAAI,CACJyI,GAAMg4E,EAAO9xC,MAAMizC,CACnB,IAAII,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAI70E,EAGJ,OAAOrN,EAAIyI,EAAK,CACfu5E,EAAKptB,EAAS50D,EACdiiF,GAAKrtB,EAAS50D,EAAI,EAClBkiF,GAAKttB,EAAS50D,EAAI,EAClBqN,GAAI,EAAI2R,KAAKC,KAAK+iE,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EAErCttB,GAAS50D,KAAOgiF,EAAG30E,CACnBunD,GAAS50D,KAAOiiF,EAAG50E,CACnBunD,GAAS50D,KAAOkiF,EAAG70E,EAGpBozE,EAAO53E,IAAI+rD,EAEX,OAAO6rB,GAGMH,GAAAluB,eAAd,SAA6BmuB,EAAkCE,EAAwBvrC,EAAqCvG,EAAcwgB,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEzI,GAAIsxB,GAAU,KACbA,EAAS,GAAIhwC,GAAA1uC,QAAgBmzC,EAE9B,IAAI5kC,GAAe,CACnB,IAAIstC,GAAoB,GAAIuU,YAAWxjB,EAAM,EAE7C,OAAOr+B,EAAQq+B,EAAM,EAAG,CACvB,GAAIr+B,EAAM,EAAI,EAAG,CAChBstC,EAAOttC,GAAS,GAChBstC,GAAOttC,EAAQ,GAAK,GACpBstC,GAAOttC,EAAQ,GAAK,GACpBstC,GAAOttC,EAAQ,GAAK,QACd,CACNstC,EAAOttC,GAAS,GAChBstC,GAAOttC,EAAQ,GAAK,GACpBstC,GAAOttC,EAAQ,GAAK,GACpBstC,GAAOttC,EAAQ,GAAK,IAGrBA,GAAS,EAGVmwE,EAAO53E,IAAI+0C,EAAQuR,EAEnB,OAAOsxB,GAGMH,GAAArrB,SAAd,SAAuBxF,EAAeC,EAAe+wB,EAAuB9xC,EAAcwgB,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEzF,GAAIsxB,EAAO9xC,MAAQA,EAAQwgB,EAC1BsxB,EAAO9xC,MAAQA,EAAQwgB,CAExB,IAAIyyB,GAAmBnB,EAAOvtB,UAE9B,IAAI2B,GAAsB4rB,EAAOh5E,IAAIknC,EAAOwgB,EAE5C,IAAInvD,GAAW,CACf,IAAIoiC,GAAW,CACf,IAAI35B,GAAakmC,EAAMizC,CAEvB,OAAO5hF,EAAIyI,EAAK,CACfosD,EAAI70D,MAAQyvD,CACZoF,GAAI70D,MAAQ0vD,EAGb+wB,EAAO53E,IAAIgsD,EAAK1F,GAGHmxB,GAAA3kD,MAAd,SAAoBA,EAAc8kD,EAAuB9xC,EAAcwgB,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEtE,GAAIsxB,EAAO9xC,MAAQA,EAAQwgB,EAC1BsxB,EAAO9xC,MAAQA,EAAQwgB,CAExB,IAAIyyB,GAAmBnB,EAAOvtB,UAE9B,IAAI/B,GAA4BsvB,EAAOh5E,IAAIknC,EAAOwgB,EAElD,IAAInvD,GAAW,CACf,IAAIoiC,GAAW,CACf,IAAI35B,GAAakmC,EAAMizC,CAEvB,OAAO5hF,EAAIyI,EAAK,CACf0oD,EAAUnxD,MAAQ27B,CAClBw1B,GAAUnxD,MAAQ27B,CAClBw1B,GAAUnxD,MAAQ27B,EAGnB8kD,EAAO53E,IAAIsoD,EAAWhC,GAGTmxB,GAAAlyC,oBAAd,SAAkCx3B,EAAoB4pE,EAAmCwC,EAAmCC,EAAoCt0C,EAAcwgB,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAG7K,GAAIgC,GAA4BqvB,EAAmB/4E,IAAIknC,EAAOwgB,EAC9D,IAAIwxB,GAAqBH,EAAmBttB,UAE5C,IAAIyB,EACJ,IAAIuuB,EAEJ,IAAIF,EAAkB,CACrBruB,EAAUquB,EAAiBv7E,IAAIknC,EAAOwgB,EACtC+zB,GAAYF,EAAiB9vB,WAG9B,GAAI0B,EACJ,IAAIuuB,EAEJ,IAAIF,EAAmB,CACtBruB,EAAWquB,EAAkBx7E,IAAIknC,EAAOwgB,EACxCg0B,GAAaF,EAAkB/vB,WAGhC,GAAIlzD,EACJ,IAAI0tE,EACJ,IAAIC,EACJ,IAAIyV,GAAkB,GAAI9nE,GAAAvZ,OAC1B,IAAIshF,EAEJ,IAAIL,GAAoBC,EAAmB,CAC1CI,EAAezsE,EAAU7B,OACzBsuE,GAAavoD,QACbuoD,GAAaC,YAGd,GAAIC,GAAa,CACjB,IAAIC,GAAa,CACjB,IAAIC,GAAa,CAEjB,KAAKzjF,EAAI,EAAGA,EAAI2uC,IAAS3uC,EAAG,CAE3B0tE,EAAK6V,EAAM,CACX5V,GAAK4V,EAAM,CACXH,GAAOj7E,EAAIgpD,EAAUoyB,EACrBH,GAAO/6E,EAAI8oD,EAAUuc,EACrB0V,GAAOpmE,EAAIm0C,EAAUwc,EACrByV,GAASxsE,EAAU3O,gBAAgBm7E,EACnCjyB,GAAUoyB,GAAOH,EAAOj7E,CACxBgpD,GAAUuc,GAAM0V,EAAO/6E,CACvB8oD,GAAUwc,GAAMyV,EAAOpmE,CACvBumE,IAAO5C,CAEP,IAAIhsB,EAAS,CAEZ+Y,EAAK8V,EAAM,CACX7V,GAAK6V,EAAM,CACXJ,GAAOj7E,EAAIwsD,EAAQ6uB,EACnBJ,GAAO/6E,EAAIssD,EAAQ+Y,EACnB0V,GAAOpmE,EAAI23C,EAAQgZ,EACnByV,GAASC,EAAap3D,qBAAqBm3D,EAC3CA,GAAOlwD,WACPyhC,GAAQ6uB,GAAOJ,EAAOj7E,CACtBwsD,GAAQ+Y,GAAM0V,EAAO/6E,CACrBssD,GAAQgZ,GAAMyV,EAAOpmE,CACrBwmE,IAAON,EAGR,GAAItuB,EAAU,CAEb8Y,EAAK+V,EAAM,CACX9V,GAAK8V,EAAM,CACXL,GAAOj7E,EAAIysD,EAAS6uB,EACpBL,GAAO/6E,EAAIusD,EAAS8Y,EACpB0V,GAAOpmE,EAAI43C,EAAS+Y,EACpByV,GAASC,EAAap3D,qBAAqBm3D,EAC3CA,GAAOlwD,WACP0hC,GAAS6uB,GAAOL,EAAOj7E,CACvBysD,GAAS8Y,GAAM0V,EAAO/6E,CACtBusD,GAAS+Y,GAAMyV,EAAOpmE,CACtBymE,IAAON,GAIT3C,EAAmB33E,IAAIsoD,EAAWhC,EAElC,IAAI6zB,EACHA,EAAiBn6E,IAAI8rD,EAASxF,EAE/B,IAAI8zB,EACHA,EAAkBp6E,IAAI+rD,EAAUzF,GAKpBmxB,GAAAoD,cAAd,SAA4BnD,EAAgCjuC,EAAoBqxC,EAA6BC,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,EAE5G,GAAI3uC,GAA0BsrC,EAAgBtrC,MAC9C,IAAI29B,GAAoB2N,EAAgBhgF,MAGxCojF,GAAcpjF,OAAS,CAGvB,IAAIqyE,EAAa0N,EAAcuD,eAAiBvxC,EAAcguC,EAAcwD,YAC3E,MAAO7uC,EAER,IAAIj1C,EACJ,IAAIs/C,GAAoCihC,EAAgB94E,IAAI84E,EAAgB5xC,MAAOi1C,EACnF,IAAIG,GAA6B,GAAI99E,MACrC,IAAI+9E,GAA0B1D,EAAc2D,UAG5CD,GAAUzjF,OAASqyE,CACnB,KAAK5yE,EAAI,EAAGA,EAAI4yE,EAAY5yE,IAC3BgkF,EAAUhkF,IAAM,CAEjB,IAAIkkF,EACJ,IAAIC,EACJ,IAAI7zE,GAAe,CACnB,IAAI8zE,GAAsBR,EAAYrD,EAAgBrtB,UAItDlzD,GAAI,CACJ,OAAOA,EAAI4yE,EAAawR,GAAgBpkF,EAAI,EAAIsgF,EAAcuD,eAAiBvzE,EAAQ,EAAIgwE,EAAcwD,YAAa,CACrHI,EAAgB5kC,EAAQt/C,EAExB,IAAIgkF,EAAUE,IAAkB,EAAG,CAClCC,EAAaH,EAAUE,OACjB,CAGNC,EAAa7zE,GACb0zE,GAAUE,GAAiBC,CAC3BR,GAAcQ,GAAcD,EAK7BH,EAAa/jF,KAAOmkF,EAGrBlvC,EAAS,GAAI6iC,GAAA/1E,QAAiBw+E,EAAgB/tC,KAAK+tC,EAAgBrtB,WAAY6wB,EAAaxjF,OAAOggF,EAAgBrtB,WAEnHqtB,GAAkBA,EAAgBxrE,MAAMkgC,EACxCsrC,GAAgB13E,IAAIk7E,EAEpB,OAAO9uC,GAGMqrC,GAAA+D,eAAd,SAA6B/uC,EAA+BquC,GAE3D,IAAKA,EAAcpjF,OAClB,MAAO+0C,EAER,IAAIgvC,GAAgBhvC,EAAagvC,MAEjC,IAAI1vC,GAAsBU,EAAaivC,UAEvC,IAAIC,GAAwB,GAAIryB,YAAWwxB,EAAcpjF,OAAO+jF,EAChE,IAAIH,EACJ,IAAID,EACJ,IAAIlkF,GAAW,CACf,IAAIoiC,GAAW,CACf,IAAI35B,GAAak7E,EAAcpjF,MAC/B,KAAKP,EAAI,EAAGA,EAAIyI,EAAKzI,IAAK,CACzBmkF,EAAankF,EAAEskF,CACfJ,GAAgBP,EAAc3jF,GAAGskF,CAEjC,KAAKliD,EAAI,EAAGA,EAAIkiD,EAAQliD,IACvBoiD,EAAWL,EAAa/hD,GAAKwS,EAASsvC,EAAgB9hD,GAGxDkT,EAAe,GAAIwiC,GAAA/1E,QAAiBuiF,EAAQ77E,EAC5C6sC,GAAaivC,WAAaC,CAE1B,OAAOlvC,GAKMgrC,GAAApvB,wBAAd,SAAsC/oD,EAAUE,EAAU2U,EAAUynE,EAAiBjX,GAEpF,GAAIgT,GAAoChT,EAAiBrc,SACzD,IAAIuzB,GAAiClX,EAAiBxe,mBAAmB,SACzE,IAAIrgB,GAAe6+B,EAAiBl7B,WAEpC,IAAI68B,GAAgBqR,EAAmBttB,UACvC,IAAIyxB,GAAkBD,EAAgBxxB,UAEtC,IAAI/B,GAA4BqvB,EAAmB/4E,IAAIknC,EACvD,IAAI8W,GAAyBi/B,EAAiBA,EAAgBj9E,IAAIknC,GAAS,IAE3E,IAAIi2C,EACJ,IAAIC,EACJ,IAAIC,EAEJ,IAAIjoE,EACJ,IAAIC,EACJ,IAAImpC,EACJ,IAAIC,EACJ,IAAI9iC,EACJ,IAAIC,EAEJ,IAAI/S,GAAek9D,EAAiB1a,kBACpC,IAAGxiD,IAAU,GAAKA,EAAQq+B,EAC1B,CACCo2C,EACA,CACCH,EAAMt0E,EAAQ,CACdu0E,GAAMv0E,EAAQ,CACdw0E,GAAMx0E,EAAQ,CAEduM,GAAKs0C,EAAUyzB,EAAMzV,EACrBryD,GAAKq0C,EAAUyzB,EAAMzV,EAAS,EAC9BlpB,GAAKkL,EAAU0zB,EAAM1V,EACrBjpB,GAAKiL,EAAU0zB,EAAM1V,EAAS,EAC9B/rD,GAAK+tC,EAAU2zB,EAAM3V,EACrB9rD,GAAK8tC,EAAU2zB,EAAM3V,EAAS,EAK9B,IAAI9wD,GAAYxB,EAAK1U,CACrB,IAAImW,GAAYxB,EAAKzU,CAGrB,IAAIulE,GAAY1nB,EAAKppC,CACrB,IAAI+wD,KAAc5nB,EAAKppC,EAIvB,IAAImoE,GAAc3mE,EAAKuvD,EAAOtvD,EAAKuvD,CAEnC,IAAImX,EAAM,EACT,KAAMD,EAEP1mE,GAAK4nC,EAAK99C,CACVmW,GAAK4nC,EAAK79C,CACVulE,GAAKvqD,EAAK6iC,CACV2nB,KAAOzqD,EAAK6iC,EAEZ++B,GAAO3mE,EAAKuvD,EAAOtvD,EAAKuvD,CAExB,IAAImX,EAAM,EACT,KAAMD,EAEP1mE,GAAK+E,EAAKjb,CACVmW,GAAK+E,EAAKhb,CACVulE,GAAK9wD,EAAKuG,CACVwqD,KAAOhxD,EAAKuG,EAEZ4hE,GAAO3mE,EAAKuvD,EAAOtvD,EAAKuvD,CAExB,IAAImX,EAAM,EACT,KAAMD,EAEP,IAAIt/B,EAAQ,CACX,GAAIw/B,GAAiBx/B,EAAOm/B,EAAMD,EAAW,EAC7C,IAAIO,GAAiBz/B,EAAOo/B,EAAMF,EAAW,EAC7C,IAAIQ,GAAiB1/B,EAAOq/B,EAAMH,EAAW,EAE7C,IAAIM,GAAWC,GAAWC,EAAS,CAElC,GAAIC,GAAan/B,EAAKppC,CACtB,IAAIwoE,GAAan/B,EAAKppC,CACtB,IAAIwoE,GAAaliE,EAAKvG,CACtB,IAAI0oE,GAAaliE,EAAKvG,CACtB,IAAI0oE,GAAar9E,EAAI0U,CACrB,IAAI4oE,GAAap9E,EAAIyU,CAErB,IAAI4oE,GAAaN,EAAMG,EAAMD,EAAMD,CACnC,IAAI75E,IAAYg6E,EAAMD,EAAMD,EAAMG,GAAOC,CACzC,IAAIzxC,IAAYmxC,EAAMK,EAAMD,EAAMH,GAAOK,CAIzC,IAAIC,GAAY,GAAMn6E,EAAIyoC,CAC1B,IAAI2xC,GAAY3xC,CAEhB,IAAI5mC,GAAWs4E,EAAKA,EAAKC,CAEzB,IAAI7oE,GAAY0oC,EAAOm/B,EAAMD,EAC7B,IAAIt3E,EAAI,GAAK0P,IAAO,IAAK,CACxB,KAAMgoE,OACA,IAAI13E,EAAI,GAAK0P,GAAM,IAAK,CAC9B,KAAMgoE,KAKT,MAAO,OAOT,GAAIp2C,EAAQ,IAAK,CAChB,GAAIkkB,GAA6B2a,EAAiB3a,KAClD,IAAIgzB,GAAmBhzB,EAAMtyD,OAAQitE,EAAiBqY,UAAarY,EAAiBqY,UAAY7mE,KAAK8J,IAAI9J,KAAK8hD,KAAK9hD,KAAKC,KAAK0vB,IAAS,GACtI,IAAIm3C,GAAqBD,EAAUpB,EAAYj7E,KAC/C,IAAIu8E,GAAqBF,EAAUpB,EAAYh7E,MAC/C,IAAIu8E,GAAcvB,EAAYt8E,CAC9B,IAAI89E,GAAcxB,EAAYp8E,CAE9B,KAAKwqD,EAAMtyD,OAAQ,CAGlBsyD,EAAMtyD,OAASslF,EAAYA,CAE3B,KAAI,GAAI7vE,GAAW,EAAGA,EAAI24B,EAAO34B,GAAG,EAAG,CACtC4uE,EAAM5uE,EAAI,CACV6uE,GAAM7uE,EAAI,CACV8uE,GAAM9uE,EAAI,CAEV6G,GAAKs0C,EAAUyzB,EAAMzV,EACrBryD,GAAKq0C,EAAUyzB,EAAMzV,EAAS,EAC9BlpB,GAAKkL,EAAU0zB,EAAM1V,EACrBjpB,GAAKiL,EAAU0zB,EAAM1V,EAAS,EAC9B/rD,GAAK+tC,EAAU2zB,EAAM3V,EACrB9rD,GAAK8tC,EAAU2zB,EAAM3V,EAAS,EAG9B,IAAI+W,GAAqBlnE,KAAKkzC,OAAOlzC,KAAK8J,IAAIjM,EAAIopC,EAAI7iC,GAAM4iE,GAAMF,EAClE,IAAIK,GAAqBnnE,KAAKkzC,OAAOlzC,KAAK8J,IAAIhM,EAAIopC,EAAI7iC,GAAM4iE,GAAMF,EAElE,IAAIK,GAAqBpnE,KAAKkzC,OAAOlzC,KAAK6J,IAAIhM,EAAIopC,EAAI7iC,GAAM4iE,GAAMF,EAClE,IAAIO,GAAqBrnE,KAAKkzC,OAAOlzC,KAAK6J,IAAI/L,EAAIopC,EAAI7iC,GAAM4iE,GAAMF,EAGlE,KAAK,GAAI/lF,IAAWkmF,EAAalmF,IAAKomF,EAAapmF,KAAK,CACvD,IAAK,GAAIoiC,IAAW+jD,EAAa/jD,IAAKikD,EAAajkD,KAAK,CACvD,GAAI9xB,GAAetQ,GAAIoiC,GAAEyjD,CACzB,IAAIS,IAAsBzzB,EAAMviD,KAAWuiD,EAAMviD,GAAS,GAAIrK,OAG9DqgF,IAAM59E,KAAKk8E,EAAKC,EAAKC,MAMzB,GAAIyB,IAAiBvnE,KAAKkzC,OAAO/pD,EAAI69E,GAAMF,EAC3C,IAAIU,IAAiBxnE,KAAKkzC,OAAO7pD,EAAI49E,GAAMF,EAE3C,IAAKQ,GAAU,GAAKA,GAAUV,GAAaW,GAAU,GAAKA,GAAUX,EACnE,MAAO,MAER,IAAIS,IAAsBzzB,EAAM0zB,GAAUC,GAAQX,EAElD,IAAIS,IAAS,KACZ,MAAO,MAER,IAAIG,IAAmBH,GAAM/lF,MAC7B,KAAK,GAAIyV,GAAW,EAAGA,EAAIywE,GAAWzwE,GAAK,EAAG,CAC7C4uE,EAAM0B,GAAMtwE,EACZ6uE,GAAMyB,GAAMtwE,EAAI,EAChB8uE,GAAMwB,GAAMtwE,EAAI,EAEhB,IAAG8uE,GAAOx0E,EAAO,QAEjBuM,GAAKs0C,EAAUyzB,EAAMzV,EACrBryD,GAAKq0C,EAAUyzB,EAAMzV,EAAS,EAC9BlpB,GAAKkL,EAAU0zB,EAAM1V,EACrBjpB,GAAKiL,EAAU0zB,EAAM1V,EAAS,EAC9B/rD,GAAK+tC,EAAU2zB,EAAM3V,EACrB9rD,GAAK8tC,EAAU2zB,EAAM3V,EAAS,EAG9B,IAAI9wD,GAAYxB,EAAK1U,CACrB,IAAImW,GAAYxB,EAAKzU,CAGrB,IAAIulE,GAAY1nB,EAAKppC,CACrB,IAAI+wD,KAAc5nB,EAAKppC,EAEvB,IAAImoE,GAAc3mE,EAAKuvD,EAAOtvD,EAAKuvD,CAEnC,IAAImX,EAAM,EACT,QAED3mE,GAAK4nC,EAAK99C,CACVmW,GAAK4nC,EAAK79C,CACVulE,GAAKvqD,EAAK6iC,CACV2nB,KAAOzqD,EAAK6iC,EAEZ++B,GAAO3mE,EAAKuvD,EAAOtvD,EAAKuvD,CAExB,IAAImX,EAAM,EACT,QAED3mE,GAAK+E,EAAKjb,CACVmW,GAAK+E,EAAKhb,CACVulE,GAAK9wD,EAAKuG,CACVwqD,KAAOhxD,EAAKuG,EAEZ4hE,GAAO3mE,EAAKuvD,EAAOtvD,EAAKuvD,CAExB,IAAImX,EAAM,EACT,QAED,IAAIv/B,EAAQ,CACX,GAAIw/B,GAAiBx/B,EAAOm/B,EAAMD,EAAW,EAC7C,IAAIO,GAAiBz/B,EAAOo/B,EAAMF,EAAW,EAC7C,IAAIQ,GAAiB1/B,EAAOq/B,EAAMH,EAAW,EAE7C,IAAIM,GAAWC,GAAWC,EAAS,CAElC,GAAIC,GAAan/B,EAAKppC,CACtB,IAAIwoE,GAAan/B,EAAKppC,CACtB,IAAIwoE,GAAaliE,EAAKvG,CACtB,IAAI0oE,GAAaliE,EAAKvG,CACtB,IAAI0oE,GAAar9E,EAAI0U,CACrB,IAAI4oE,GAAap9E,EAAIyU,CAErB,IAAI4oE,GAAaN,EAAMG,EAAMD,EAAMD,CACnC,IAAI75E,IAAYg6E,EAAMD,EAAMD,EAAMG,GAAOC,CACzC,IAAIzxC,IAAYmxC,EAAMK,EAAMD,EAAMH,GAAOK,CAIzC,IAAIC,GAAY,GAAMn6E,EAAIyoC,CAC1B,IAAI2xC,GAAY3xC,CAEhB,IAAI5mC,GAAWs4E,EAAKA,EAAKC,CACzB,IAAI7oE,GAAY0oC,EAAOm/B,EAAMD,EAE7B,IAAIt3E,EAAI,GAAK0P,IAAO,IACnB,aACI,IAAI1P,EAAI,GAAK0P,GAAM,IACvB,UAGHywD,EAAiB1a,mBAAqBgyB,CACtC,OAAO,MAER,MAAO,OAIR,IAAI,GAAI9uE,GAAW,EAAGA,EAAI24B,EAAO34B,GAAK,EAAG,CACxC4uE,EAAM5uE,EAAI,CACV6uE,GAAM7uE,EAAI,CACV8uE,GAAM9uE,EAAI,CAEV,IAAG8uE,GAAOx0E,EAAO,QAEjBuM,GAAKs0C,EAAUyzB,EAAMzV,EACrBryD,GAAKq0C,EAAUyzB,EAAMzV,EAAS,EAC9BlpB,GAAKkL,EAAU0zB,EAAM1V,EACrBjpB,GAAKiL,EAAU0zB,EAAM1V,EAAS,EAC9B/rD,GAAK+tC,EAAU2zB,EAAM3V,EACrB9rD,GAAK8tC,EAAU2zB,EAAM3V,EAAS,EAK9B,IAAI9wD,GAAYxB,EAAK1U,CACrB,IAAImW,GAAYxB,EAAKzU,CAGrB,IAAIulE,GAAY1nB,EAAKppC,CACrB,IAAI+wD,KAAc5nB,EAAKppC,EAIvB,IAAImoE,GAAc3mE,EAAKuvD,EAAOtvD,EAAKuvD,CAEnC,IAAImX,EAAM,EACT,QAED3mE,GAAK4nC,EAAK99C,CACVmW,GAAK4nC,EAAK79C,CACVulE,GAAKvqD,EAAK6iC,CACV2nB,KAAOzqD,EAAK6iC,EAEZ++B,GAAO3mE,EAAKuvD,EAAOtvD,EAAKuvD,CAExB,IAAImX,EAAM,EACT,QAED3mE,GAAK+E,EAAKjb,CACVmW,GAAK+E,EAAKhb,CACVulE,GAAK9wD,EAAKuG,CACVwqD,KAAOhxD,EAAKuG,EAEZ4hE,GAAO3mE,EAAKuvD,EAAOtvD,EAAKuvD,CAExB,IAAImX,EAAM,EACT,QAED,IAAIv/B,EAAQ,CACX,GAAIw/B,GAAiBx/B,EAAOm/B,EAAMD,EAAW,EAC7C,IAAIO,GAAiBz/B,EAAOo/B,EAAMF,EAAW,EAC7C,IAAIQ,GAAiB1/B,EAAOq/B,EAAMH,EAAW,EAE7C,IAAIM,GAAWC,GAAWC,EAAS,CAElC,GAAIC,GAAan/B,EAAKppC,CACtB,IAAIwoE,GAAan/B,EAAKppC,CACtB,IAAIwoE,GAAaliE,EAAKvG,CACtB,IAAI0oE,GAAaliE,EAAKvG,CACtB,IAAI0oE,GAAar9E,EAAI0U,CACrB,IAAI4oE,GAAap9E,EAAIyU,CAErB,IAAI4oE,GAAaN,EAAMG,EAAMD,EAAMD,CACnC,IAAI75E,IAAYg6E,EAAMD,EAAMD,EAAMG,GAAOC,CACzC,IAAIzxC,IAAYmxC,EAAMK,EAAMD,EAAMH,GAAOK,CAIzC,IAAIC,GAAY,GAAMn6E,EAAIyoC,CAC1B,IAAI2xC,GAAY3xC,CAEhB,IAAI5mC,GAAWs4E,EAAKA,EAAKC,CAEzB,IAAI7oE,GAAY0oC,EAAOm/B,EAAMD,EAC7B,IAAIt3E,EAAI,GAAK0P,IAAO,IAAK,CACxB,aACM,IAAI1P,EAAI,GAAK0P,GAAM,IAAK,CAC9B,WAIHywD,EAAiB1a,mBAAqBgyB,CACtC,OAAO,MAER,MAAO,OAGMxE,GAAAxsB,6BAAd,SAA2C0sB,EAAmCC,EAAY9xC,EAAcwgB,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEvG,GAAIgC,GAA4BqvB,EAAmB/4E,IAAIknC,EAAOwgB,EAC9D,IAAIggB,GAAgBqR,EAAmBttB,UAEvC,IAAIutB,GAAU,KACbA,EAAS,GAAIhoD,GAAA12B,OAEd,IAAIyoB,EACJ,IAAI6J,GAAc,EAAGC,EAAc,EAAGC,EAAc,CACpD,IAAIC,GAAc,EAAGC,EAAc,EAAGC,EAAc,CAEpD,IAAIjsB,GAAakmC,EAAMwgC,CACvB,KAAK,GAAInvE,GAAW,EAAGA,EAAIyI,EAAKzI,GAAKmvE,EAAQ,CAC5C,GAAInvE,GAAK,EAAG,CACXw0B,EAAOH,EAAO88B,EAAUnxD,EACxBy0B,GAAOH,EAAO68B,EAAUnxD,EAAI,EAC5B00B,GAAOH,EAAQ46C,GAAU,EAAIhe,EAAUnxD,EAAI,GAAK,MAC1C,CACNwqB,EAAM2mC,EAAUnxD,EAChB,IAAIwqB,EAAM6J,EACTA,EAAO7J,MACH,IAAIA,EAAMgK,EACdA,EAAOhK,CAERA,GAAM2mC,EAAUnxD,EAAI,EAEpB,IAAIwqB,EAAM8J,EACTA,EAAO9J,MACH,IAAIA,EAAMiK,EACdA,EAAOjK,CAER,IAAI2kD,GAAU,EAAG,CAChB3kD,EAAM2mC,EAAUnxD,EAAI,EAEpB,IAAIwqB,EAAM+J,EACTA,EAAO/J,MACH,IAAIA,EAAMkK,EACdA,EAAOlK,IAKX,GAAIi2D,EAAOt4E,EAAIksB,EACdosD,EAAOt4E,EAAIksB,CAEZ,IAAIosD,EAAOp4E,EAAIisB,EACdmsD,EAAOp4E,EAAIisB,CAEZ,IAAImsD,EAAOzjE,EAAIuX,EACdksD,EAAOzjE,EAAIuX,CAEZ,IAAIksD,EAAOphD,MAAQ7K,EAClBisD,EAAOphD,MAAQ7K,CAEhB,IAAIisD,EAAOziD,OAASvJ,EACnBgsD,EAAOziD,OAASvJ,CAEjB,IAAIgsD,EAAO7zC,KAAOlY,EACjB+rD,EAAO7zC,KAAOlY,CAEf,OAAO+rD,GAGMH,GAAAvsB,gCAAd,SAA8CysB,EAAmC7wB,EAAiB8wB,EAAe9xC,EAAcwgB,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE9H,GAAIgC,GAA4BqvB,EAAmB/4E,IAAIknC,EAAOwgB,EAC9D,IAAIggB,GAAgBqR,EAAmBttB,UAEvC,IAAIutB,GAAU,KACbA,EAAS,GAAI/nD,GAAA32B,OAEd,IAAI2kF,GAA0B,CAC9B,IAAIC,EACJ,IAAIl+E,GAAMkmC,EAAMwgC,CAChB,IAAIyX,EACJ,IAAIC,EACJ,IAAIC,EAEJ,KAAK,GAAI9mF,GAAW,EAAGA,EAAIyI,EAAKzI,GAAKmvE,EAAQ,CAC5CyX,EAAYz1B,EAAUnxD,GAAK2vD,EAAOxnD,CAClC0+E,GAAY11B,EAAUnxD,EAAI,GAAK2vD,EAAOtnD,CACtCy+E,GAAa3X,GAAU,EAAIhe,EAAUnxD,EAAI,GAAK2vD,EAAO3yC,GAAK2yC,EAAO3yC,CACjE2pE,GAAgBC,EAAUA,EAAYC,EAAUA,EAAYC,EAAUA,CAEtE,IAAIJ,EAAmBC,EACtBD,EAAmBC,EAGrBlG,EAAOt4E,EAAIwnD,EAAOxnD,CAClBs4E,GAAOp4E,EAAIsnD,EAAOtnD,CAClBo4E,GAAOzjE,EAAI2yC,EAAO3yC,CAClByjE,GAAOn7D,OAAStG,KAAKC,KAAKynE,EAE1B,OAAOjG,GAn/BOH,GAAAyG,cAA6B,GAAIlyC,cAAa,EAE9CyrC,GAAAwD,YAAqB,KAErBxD,GAAAuD,cAAuB,QAEvBvD,GAAA2D,WAA2B,GAAIh+E,MAg/B/C,OAAAq6E,KAEAh5E,QAAAC,eAAAlH,EAAA,cAAAyI,MAAA,M7IsuoBAzI,GAAQ0B,Q6ItuoBOu+E,I7IwuoBZ/H,8CAA8C3rE,UAAUwrC,6CAA6CxrC,UAAU86C,8CAA8C96C,UAAUo6E,8CAA8Cp6E,UAAU01B,2BAA2B11B,UAAU41B,8BAA8B51B,UAAUkT,gCAAgClT,YAAYtI,4BAA4B,SAAS/E,EAAQkB,EAAOJ,GAC/Y,Y8IjvqBA,IAAA4mF,GAAA1nF,EAAoC,gCAA5Bc,GAAA++E,KAAA6H,EAAAllF,OACR,IAAAkuD,GAAA1wD,EAA2C,yCAAnCc,GAAAigF,cAAArwB,EAAAluD,U9IsvqBLm9E,gCAAgC,gCAAgC7tB,yCAAyC,gDAAgD",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\nvar adapters = require(\"awayjs-display/lib/adapters\");\nexports.adapters = adapters;\nvar animators = require(\"awayjs-display/lib/animators\");\nexports.animators = animators;\nvar base = require(\"awayjs-display/lib/base\");\nexports.base = base;\nvar bounds = require(\"awayjs-display/lib/bounds\");\nexports.bounds = bounds;\nvar controllers = require(\"awayjs-display/lib/controllers\");\nexports.controllers = controllers;\nvar display = require(\"awayjs-display/lib/display\");\nexports.display = display;\nvar draw = require(\"awayjs-display/lib/draw\");\nexports.draw = draw;\nvar errors = require(\"awayjs-display/lib/errors\");\nexports.errors = errors;\nvar events = require(\"awayjs-display/lib/events\");\nexports.events = events;\nvar factories = require(\"awayjs-display/lib/factories\");\nexports.factories = factories;\nvar graphics = require(\"awayjs-display/lib/graphics\");\nexports.graphics = graphics;\nvar managers = require(\"awayjs-display/lib/managers\");\nexports.managers = managers;\nvar materials = require(\"awayjs-display/lib/materials\");\nexports.materials = materials;\nvar partition = require(\"awayjs-display/lib/partition\");\nexports.partition = partition;\nvar pick = require(\"awayjs-display/lib/pick\");\nexports.pick = pick;\nvar prefabs = require(\"awayjs-display/lib/prefabs\");\nexports.prefabs = prefabs;\nvar text = require(\"awayjs-display/lib/text\");\nexports.text = text;\nvar textures = require(\"awayjs-display/lib/textures\");\nexports.textures = textures;\nvar utils = require(\"awayjs-display/lib/utils\");\nexports.utils = utils;\nvar View_1 = require(\"awayjs-display/lib/View\");\nexports.View = View_1.default;\npartition.PartitionBase.registerAbstraction(partition.CameraNode, display.Camera);\npartition.PartitionBase.registerAbstraction(partition.DirectionalLightNode, display.DirectionalLight);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.Sprite);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.Shape);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.MovieClip);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.Billboard);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.LineSegment);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.TextField);\npartition.PartitionBase.registerAbstraction(partition.LightProbeNode, display.LightProbe);\npartition.PartitionBase.registerAbstraction(partition.PointLightNode, display.PointLight);\npartition.PartitionBase.registerAbstraction(partition.SkyboxNode, display.Skybox);\n\n},{\"awayjs-display/lib/View\":\"awayjs-display/lib/View\",\"awayjs-display/lib/adapters\":\"awayjs-display/lib/adapters\",\"awayjs-display/lib/animators\":\"awayjs-display/lib/animators\",\"awayjs-display/lib/base\":\"awayjs-display/lib/base\",\"awayjs-display/lib/bounds\":\"awayjs-display/lib/bounds\",\"awayjs-display/lib/controllers\":\"awayjs-display/lib/controllers\",\"awayjs-display/lib/display\":\"awayjs-display/lib/display\",\"awayjs-display/lib/draw\":\"awayjs-display/lib/draw\",\"awayjs-display/lib/errors\":\"awayjs-display/lib/errors\",\"awayjs-display/lib/events\":\"awayjs-display/lib/events\",\"awayjs-display/lib/factories\":\"awayjs-display/lib/factories\",\"awayjs-display/lib/graphics\":\"awayjs-display/lib/graphics\",\"awayjs-display/lib/managers\":\"awayjs-display/lib/managers\",\"awayjs-display/lib/materials\":\"awayjs-display/lib/materials\",\"awayjs-display/lib/partition\":\"awayjs-display/lib/partition\",\"awayjs-display/lib/pick\":\"awayjs-display/lib/pick\",\"awayjs-display/lib/prefabs\":\"awayjs-display/lib/prefabs\",\"awayjs-display/lib/text\":\"awayjs-display/lib/text\",\"awayjs-display/lib/textures\":\"awayjs-display/lib/textures\",\"awayjs-display/lib/utils\":\"awayjs-display/lib/utils\"}],\"awayjs-display/lib/IRenderer\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/ITraverser\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/View\":[function(require,module,exports){\n\"use strict\";\nvar getTimer_1 = require(\"awayjs-core/lib/utils/getTimer\");\nvar TouchPoint_1 = require(\"./base/TouchPoint\");\nvar Scene_1 = require(\"./display/Scene\");\nvar RaycastPicker_1 = require(\"./pick/RaycastPicker\");\nvar Camera_1 = require(\"./display/Camera\");\nvar CameraEvent_1 = require(\"./events/CameraEvent\");\nvar DisplayObjectEvent_1 = require(\"./events/DisplayObjectEvent\");\nvar RendererEvent_1 = require(\"./events/RendererEvent\");\nvar MouseManager_1 = require(\"./managers/MouseManager\");\nvar View = (function () {\n    /*\n     ***********************************************************************\n     * Disabled / Not yet implemented\n     ***********************************************************************\n     *\n     * private _background:away.textures.Texture2DBase;\n     *\n     * public _pTouch3DManager:away.managers.Touch3DManager;\n     *\n     */\n    function View(renderer, scene, camera) {\n        var _this = this;\n        if (scene === void 0) { scene = null; }\n        if (camera === void 0) { camera = null; }\n        this._width = 0;\n        this._height = 0;\n        this._time = 0;\n        this._deltaTime = 0;\n        this._backgroundColor = 0x000000;\n        this._backgroundAlpha = 1;\n        this._viewportDirty = true;\n        this._scissorDirty = true;\n        this._mousePicker = new RaycastPicker_1.default();\n        this._pTouchPoints = new Array();\n        this._onPartitionChangedDelegate = function (event) { return _this._onPartitionChanged(event); };\n        this._onProjectionChangedDelegate = function (event) { return _this._onProjectionChanged(event); };\n        this._onViewportUpdatedDelegate = function (event) { return _this._onViewportUpdated(event); };\n        this._onScissorUpdatedDelegate = function (event) { return _this._onScissorUpdated(event); };\n        this.scene = scene || new Scene_1.default();\n        this.camera = camera || new Camera_1.default();\n        this.renderer = renderer;\n        //make sure document border is zero\n        if (document) {\n            document.body.style.margin = \"0px\";\n            this._htmlElement = document.createElement(\"div\");\n            this._htmlElement.style.position = \"absolute\";\n            document.body.appendChild(this._htmlElement);\n        }\n        this._mouseManager = MouseManager_1.default.getInstance();\n        this._mouseManager.registerView(this);\n        //\t\t\tif (this._shareContext)\n        //\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n    }\n    Object.defineProperty(View.prototype, \"mouseX\", {\n        get: function () {\n            return this._pMouseX;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"mouseY\", {\n        get: function () {\n            return this._pMouseY;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"touchPoints\", {\n        get: function () {\n            return this._pTouchPoints;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    View.prototype.getLocalMouseX = function (displayObject) {\n        return displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\n    };\n    View.prototype.getLocalMouseY = function (displayObject) {\n        return displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\n    };\n    View.prototype.getLocalTouchPoints = function (displayObject) {\n        var localPosition;\n        var localTouchPoints = new Array();\n        var len = this._pTouchPoints.length;\n        for (var i = 0; i < len; i++) {\n            localPosition = displayObject.inverseSceneTransform.transformVector(this.unproject(this._pTouchPoints[i].x, this._pTouchPoints[i].y, 1000));\n            localTouchPoints.push(new TouchPoint_1.default(localPosition.x, localPosition.y, this._pTouchPoints[i].id));\n        }\n        return localTouchPoints;\n    };\n    Object.defineProperty(View.prototype, \"htmlElement\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._htmlElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"renderer\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._pRenderer;\n        },\n        set: function (value) {\n            if (this._pRenderer == value)\n                return;\n            if (this._pRenderer) {\n                this._pRenderer.dispose();\n                this._pRenderer.removeEventListener(RendererEvent_1.default.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n                this._pRenderer.removeEventListener(RendererEvent_1.default.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n            }\n            this._pRenderer = value;\n            this._pRenderer.addEventListener(RendererEvent_1.default.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n            this._pRenderer.addEventListener(RendererEvent_1.default.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n            //reset back buffer\n            this._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff) / 0xff;\n            this._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff) / 0xff;\n            this._pRenderer._iBackgroundB = (this._backgroundColor & 0xff) / 0xff;\n            this._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n            this._pRenderer.width = this._width;\n            this._pRenderer.height = this._height;\n            this._pRenderer.shareContext = this._shareContext;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"shareContext\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._shareContext;\n        },\n        set: function (value) {\n            if (this._shareContext == value)\n                return;\n            this._shareContext = value;\n            if (this._pRenderer)\n                this._pRenderer.shareContext = this._shareContext;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"backgroundColor\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._backgroundColor;\n        },\n        set: function (value) {\n            if (this._backgroundColor == value)\n                return;\n            this._backgroundColor = value;\n            this._pRenderer._iBackgroundR = ((value >> 16) & 0xff) / 0xff;\n            this._pRenderer._iBackgroundG = ((value >> 8) & 0xff) / 0xff;\n            this._pRenderer._iBackgroundB = (value & 0xff) / 0xff;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"backgroundAlpha\", {\n        /**\n         *\n         * @returns {number}\n         */\n        get: function () {\n            return this._backgroundAlpha;\n        },\n        /**\n         *\n         * @param value\n         */\n        set: function (value) {\n            if (value > 1)\n                value = 1;\n            else if (value < 0)\n                value = 0;\n            if (this._backgroundAlpha == value)\n                return;\n            this._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"camera\", {\n        /**\n         *\n         * @returns {Camera3D}\n         */\n        get: function () {\n            return this._pCamera;\n        },\n        /**\n         * Set camera that's used to render the scene for this viewport\n         */\n        set: function (value) {\n            if (this._pCamera == value)\n                return;\n            if (this._pCamera)\n                this._pCamera.removeEventListener(CameraEvent_1.default.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n            this._pCamera = value;\n            if (this._pScene)\n                this._pScene.partition._iRegisterEntity(this._pCamera);\n            this._pCamera.addEventListener(CameraEvent_1.default.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n            this._scissorDirty = true;\n            this._viewportDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"scene\", {\n        /**\n         *\n         * @returns {away.containers.Scene3D}\n         */\n        get: function () {\n            return this._pScene;\n        },\n        /**\n         * Set the scene that's used to render for this viewport\n         */\n        set: function (value) {\n            if (this._pScene == value)\n                return;\n            if (this._pScene)\n                this._pScene.removeEventListener(DisplayObjectEvent_1.default.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n            this._pScene = value;\n            this._pScene.addEventListener(DisplayObjectEvent_1.default.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n            if (this._pCamera)\n                this._pScene.partition._iRegisterEntity(this._pCamera);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"deltaTime\", {\n        /**\n         *\n         * @returns {number}\n         */\n        get: function () {\n            return this._deltaTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"width\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._width;\n        },\n        set: function (value) {\n            if (this._width == value)\n                return;\n            this._width = value;\n            this._aspectRatio = this._width / this._height;\n            this._pCamera.projection._iAspectRatio = this._aspectRatio;\n            this._pRenderer.width = value;\n            if (this._htmlElement) {\n                this._htmlElement.style.width = value + \"px\";\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"height\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._height;\n        },\n        set: function (value) {\n            if (this._height == value)\n                return;\n            this._height = value;\n            this._aspectRatio = this._width / this._height;\n            this._pCamera.projection._iAspectRatio = this._aspectRatio;\n            this._pRenderer.height = value;\n            if (this._htmlElement) {\n                this._htmlElement.style.height = value + \"px\";\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"mousePicker\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._mousePicker;\n        },\n        set: function (value) {\n            if (this._mousePicker == value)\n                return;\n            if (value == null)\n                this._mousePicker = new RaycastPicker_1.default();\n            else\n                this._mousePicker = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"x\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._pRenderer.x;\n        },\n        set: function (value) {\n            if (this._pRenderer.x == value)\n                return;\n            this._pRenderer.x == value;\n            if (this._htmlElement) {\n                this._htmlElement.style.left = value + \"px\";\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"y\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._pRenderer.y;\n        },\n        set: function (value) {\n            if (this._pRenderer.y == value)\n                return;\n            this._pRenderer.y == value;\n            if (this._htmlElement) {\n                this._htmlElement.style.top = value + \"px\";\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"visible\", {\n        /**\n         *\n         */\n        get: function () {\n            return (this._htmlElement && this._htmlElement.style.visibility == \"visible\");\n        },\n        set: function (value) {\n            if (this._htmlElement) {\n                this._htmlElement.style.visibility = value ? \"visible\" : \"hidden\";\n            }\n            //TODO transfer visible property to associated context (if one exists)\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"renderedFacesCount\", {\n        /**\n         *\n         * @returns {number}\n         */\n        get: function () {\n            return 0; //TODO\n            //return this._pEntityCollector._pNumTriangles;//numTriangles;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Renders the view.\n     */\n    View.prototype.render = function () {\n        this.pUpdateTime();\n        //update view and size data\n        this._pCamera.projection._iAspectRatio = this._aspectRatio;\n        if (this._scissorDirty) {\n            this._scissorDirty = false;\n            this._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n        }\n        if (this._viewportDirty) {\n            this._viewportDirty = false;\n            this._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n        }\n        // update picking\n        if (!this._shareContext) {\n            if (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n                this._mouseManager._iCollision = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n            this._mouseManager.fireMouseEvents(this.forceMouseMove);\n        }\n        //_touch3DManager.updateCollider();\n        //render the contents of the scene\n        this._pRenderer.render(this._pCamera, this._pScene);\n    };\n    /**\n     *\n     */\n    View.prototype.pUpdateTime = function () {\n        var time = getTimer_1.default();\n        if (this._time == 0)\n            this._time = time;\n        this._deltaTime = time - this._time;\n        this._time = time;\n    };\n    /**\n     *\n     */\n    View.prototype.dispose = function () {\n        this._pRenderer.dispose();\n        // TODO: imeplement mouseManager / touch3DManager\n        this._mouseManager.unregisterView(this);\n        //this._touch3DManager.disableTouchListeners(this);\n        //this._touch3DManager.dispose();\n        this._mouseManager = null;\n        //this._touch3DManager = null;\n        this._pRenderer = null;\n    };\n    /**\n     *\n     * @param e\n     */\n    View.prototype._onPartitionChanged = function (event) {\n        if (this._pCamera)\n            this._pScene.partition._iRegisterEntity(this._pCamera);\n    };\n    /**\n     *\n     */\n    View.prototype._onProjectionChanged = function (event) {\n        this._scissorDirty = true;\n        this._viewportDirty = true;\n    };\n    /**\n     *\n     */\n    View.prototype._onViewportUpdated = function (event) {\n        this._viewportDirty = true;\n    };\n    /**\n     *\n     */\n    View.prototype._onScissorUpdated = function (event) {\n        this._scissorDirty = true;\n    };\n    View.prototype.project = function (point3d) {\n        var v = this._pCamera.project(point3d);\n        v.x = v.x * this._pRenderer.viewPort.width / 2 + this._width * this._pCamera.projection.originX;\n        v.y = v.y * this._pRenderer.viewPort.height / 2 + this._height * this._pCamera.projection.originY;\n        return v;\n    };\n    View.prototype.unproject = function (sX, sY, sZ) {\n        return this._pCamera.unproject(2 * (sX - this._width * this._pCamera.projection.originX) / this._pRenderer.viewPort.width, 2 * (sY - this._height * this._pCamera.projection.originY) / this._pRenderer.viewPort.height, sZ);\n    };\n    View.prototype.getRay = function (sX, sY, sZ) {\n        return this._pCamera.getRay((sX * 2 - this._width) / this._width, (sY * 2 - this._height) / this._height, sZ);\n    };\n    /*TODO: implement Background\n     public get background():away.textures.Texture2DBase\n     {\n     return this._background;\n     }\n     */\n    /*TODO: implement Background\n     public set background( value:away.textures.Texture2DBase )\n     {\n     this._background = value;\n     this._renderer.background = _background;\n     }\n     */\n    // TODO: required dependency stageGL\n    View.prototype.updateCollider = function () {\n        if (!this._shareContext) {\n            if (this._htmlElement == this._mouseManager._iActiveDiv)\n                this._mouseManager._iCollision = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n        }\n        else {\n            var collidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n            if (this.layeredView || this._mouseManager._iCollision == null || collidingObject.rayEntryDistance < this._mouseManager._iCollision.rayEntryDistance)\n                this._mouseManager._iCollision = collidingObject;\n        }\n    };\n    return View;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = View;\n\n},{\"./base/TouchPoint\":\"awayjs-display/lib/base/TouchPoint\",\"./display/Camera\":\"awayjs-display/lib/display/Camera\",\"./display/Scene\":\"awayjs-display/lib/display/Scene\",\"./events/CameraEvent\":\"awayjs-display/lib/events/CameraEvent\",\"./events/DisplayObjectEvent\":\"awayjs-display/lib/events/DisplayObjectEvent\",\"./events/RendererEvent\":\"awayjs-display/lib/events/RendererEvent\",\"./managers/MouseManager\":\"awayjs-display/lib/managers/MouseManager\",\"./pick/RaycastPicker\":\"awayjs-display/lib/pick/RaycastPicker\",\"awayjs-core/lib/utils/getTimer\":undefined}],\"awayjs-display/lib/adapters/IDisplayObjectAdapter\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/adapters/IMovieClipAdapter\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/adapters\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/animators/IAnimationSet\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/animators/IAnimator\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/animators/data/ParticleData\":[function(require,module,exports){\n\"use strict\";\nvar ParticleData = (function () {\n    function ParticleData() {\n    }\n    return ParticleData;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleData;\n\n},{}],\"awayjs-display/lib/animators/nodes/AnimationNodeBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nvar AnimationNodeBase = (function (_super) {\n    __extends(AnimationNodeBase, _super);\n    /**\n     * Creates a new <code>AnimationNodeBase</code> object.\n     */\n    function AnimationNodeBase() {\n        _super.call(this);\n    }\n    Object.defineProperty(AnimationNodeBase.prototype, \"stateClass\", {\n        get: function () {\n            return this._pStateClass;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    AnimationNodeBase.prototype.dispose = function () {\n    };\n    Object.defineProperty(AnimationNodeBase.prototype, \"assetType\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            return AnimationNodeBase.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AnimationNodeBase.assetType = \"[asset AnimationNodeBase]\";\n    return AnimationNodeBase;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationNodeBase;\n\n},{\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/animators\":[function(require,module,exports){\n\"use strict\";\nvar ParticleData_1 = require(\"awayjs-display/lib/animators/data/ParticleData\");\nexports.ParticleData = ParticleData_1.default;\nvar AnimationNodeBase_1 = require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nexports.AnimationNodeBase = AnimationNodeBase_1.default;\n\n},{\"awayjs-display/lib/animators/data/ParticleData\":\"awayjs-display/lib/animators/data/ParticleData\",\"awayjs-display/lib/animators/nodes/AnimationNodeBase\":\"awayjs-display/lib/animators/nodes/AnimationNodeBase\"}],\"awayjs-display/lib/base/AlignmentMode\":[function(require,module,exports){\n\"use strict\";\n/**\n *\n */\nvar AlignmentMode = (function () {\n    function AlignmentMode() {\n    }\n    /**\n     *\n     */\n    AlignmentMode.REGISTRATION_POINT = \"registrationPoint\";\n    /**\n     *\n     */\n    AlignmentMode.PIVOT_POINT = \"pivot\";\n    return AlignmentMode;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AlignmentMode;\n\n},{}],\"awayjs-display/lib/base/HierarchicalProperties\":[function(require,module,exports){\n\"use strict\";\n/**\n *\n */\nvar HierarchicalProperties = (function () {\n    function HierarchicalProperties() {\n    }\n    /**\n     *\n     */\n    HierarchicalProperties.MOUSE_ENABLED = 1;\n    /**\n     *\n     */\n    HierarchicalProperties.VISIBLE = 2;\n    /**\n     *\n     */\n    HierarchicalProperties.MASK_ID = 4;\n    /**\n     *\n     */\n    HierarchicalProperties.MASKS = 8;\n    /**\n     *\n     */\n    HierarchicalProperties.COLOR_TRANSFORM = 16;\n    /**\n     *\n     */\n    HierarchicalProperties.SCENE_TRANSFORM = 32;\n    /**\n     *\n     */\n    HierarchicalProperties.ALL = 63;\n    return HierarchicalProperties;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = HierarchicalProperties;\n\n},{}],\"awayjs-display/lib/base/IBitmapDrawable\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/base/IRenderable\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/base/ISurface\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/base/OrientationMode\":[function(require,module,exports){\n\"use strict\";\nvar OrientationMode = (function () {\n    function OrientationMode() {\n    }\n    /**\n     *\n     */\n    OrientationMode.DEFAULT = \"default\";\n    /**\n     *\n     */\n    OrientationMode.CAMERA_PLANE = \"cameraPlane\";\n    /**\n     *\n     */\n    OrientationMode.CAMERA_POSITION = \"cameraPosition\";\n    return OrientationMode;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = OrientationMode;\n\n},{}],\"awayjs-display/lib/base/Style\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventDispatcher_1 = require(\"awayjs-core/lib/events/EventDispatcher\");\nvar StyleEvent_1 = require(\"awayjs-display/lib/events/StyleEvent\");\n/**\n *\n */\nvar Style = (function (_super) {\n    __extends(Style, _super);\n    function Style() {\n        _super.call(this);\n        this._samplers = new Object();\n        this._images = new Object();\n        this._color = 0xFFFFFF;\n    }\n    Object.defineProperty(Style.prototype, \"sampler\", {\n        get: function () {\n            return this._sampler;\n        },\n        set: function (value) {\n            if (this._sampler == value)\n                return;\n            this._sampler = value;\n            this._invalidateProperties();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Style.prototype, \"image\", {\n        get: function () {\n            return this._image;\n        },\n        set: function (value) {\n            if (this._image == value)\n                return;\n            this._image = value;\n            this._invalidateProperties();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Style.prototype, \"uvMatrix\", {\n        get: function () {\n            return this._uvMatrix;\n        },\n        set: function (value) {\n            if (this._uvMatrix == value)\n                return;\n            this._uvMatrix = value;\n            this._invalidateProperties();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Style.prototype, \"color\", {\n        /**\n         * The diffuse reflectivity color of the surface.\n         */\n        get: function () {\n            return this._color;\n        },\n        set: function (value) {\n            if (this._color == value)\n                return;\n            this._color = value;\n            this._invalidateProperties();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Style.prototype.getImageAt = function (texture, index) {\n        if (index === void 0) { index = 0; }\n        return (this._images[texture.id] ? this._images[texture.id][index] : null) || this._image;\n    };\n    Style.prototype.getSamplerAt = function (texture, index) {\n        if (index === void 0) { index = 0; }\n        return (this._samplers[texture.id] ? this._samplers[texture.id][index] : null) || this._sampler;\n    };\n    Style.prototype.addImageAt = function (image, texture, index) {\n        if (index === void 0) { index = 0; }\n        if (!this._images[texture.id])\n            this._images[texture.id] = new Array();\n        this._images[texture.id][index] = image;\n    };\n    Style.prototype.addSamplerAt = function (sampler, texture, index) {\n        if (index === void 0) { index = 0; }\n        if (!this._samplers[texture.id])\n            this._samplers[texture.id] = new Array();\n        this._samplers[texture.id][index] = sampler;\n        this._invalidateProperties();\n    };\n    Style.prototype.removeImageAt = function (texture, index) {\n        if (index === void 0) { index = 0; }\n        if (!this._images[texture.id])\n            return;\n        this._images[texture.id][index] = null;\n        this._invalidateProperties();\n    };\n    Style.prototype.removeSamplerAt = function (texture, index) {\n        if (index === void 0) { index = 0; }\n        if (!this._samplers[texture.id])\n            return;\n        this._samplers[texture.id][index] = null;\n        this._invalidateProperties();\n    };\n    Style.prototype._invalidateProperties = function () {\n        this.dispatchEvent(new StyleEvent_1.default(StyleEvent_1.default.INVALIDATE_PROPERTIES, this));\n    };\n    return Style;\n}(EventDispatcher_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Style;\n\n},{\"awayjs-core/lib/events/EventDispatcher\":undefined,\"awayjs-display/lib/events/StyleEvent\":\"awayjs-display/lib/events/StyleEvent\"}],\"awayjs-display/lib/base/Timeline\":[function(require,module,exports){\n\"use strict\";\nvar HierarchicalProperties_1 = require(\"awayjs-display/lib/base/HierarchicalProperties\");\nvar ColorTransform_1 = require(\"awayjs-core/lib/geom/ColorTransform\");\nvar FrameScriptManager_1 = require(\"awayjs-display/lib/managers/FrameScriptManager\");\nvar Timeline = (function () {\n    function Timeline() {\n        this._functions = [];\n        this._update_indices = [];\n        this.numKeyFrames = 0;\n        this.keyframe_indices = [];\n        this._potentialPrototypes = [];\n        this._labels = {};\n        this._framescripts = {};\n        this._framescripts_translated = {};\n        //cache functions\n        this._functions[1] = this.update_mtx_all;\n        this._functions[2] = this.update_colortransform;\n        this._functions[3] = this.update_masks;\n        this._functions[4] = this.update_name;\n        this._functions[5] = this.update_button_name;\n        this._functions[6] = this.update_visibility;\n        this._functions[11] = this.update_mtx_scale_rot;\n        this._functions[12] = this.update_mtx_pos;\n        this._functions[200] = this.enable_maskmode;\n        this._functions[201] = this.remove_masks;\n    }\n    Timeline.prototype.init = function () {\n        if ((this.frame_command_indices == null) || (this.frame_recipe == null) || (this.keyframe_durations == null))\n            return;\n        this.keyframe_firstframes = [];\n        this.keyframe_constructframes = [];\n        var frame_cnt = 0;\n        var ic = 0;\n        var ic2 = 0;\n        var keyframe_cnt = 0;\n        var last_construct_frame = 0;\n        for (ic = 0; ic < this.numKeyFrames; ic++) {\n            var duration = this.keyframe_durations[(ic)];\n            if (this.frame_recipe[ic] & 1)\n                last_construct_frame = keyframe_cnt;\n            this.keyframe_firstframes[keyframe_cnt] = frame_cnt;\n            this.keyframe_constructframes[keyframe_cnt++] = last_construct_frame;\n            for (ic2 = 0; ic2 < duration; ic2++)\n                this.keyframe_indices[frame_cnt++] = ic;\n        }\n    };\n    Timeline.prototype.get_framescript = function (keyframe_index) {\n        if (this._framescripts[keyframe_index] == null)\n            return \"\";\n        if (typeof this._framescripts[keyframe_index] == \"string\")\n            return this._framescripts[keyframe_index];\n        else {\n            throw new Error(\"Framescript is already translated to Function!!!\");\n        }\n    };\n    Timeline.prototype.add_framescript = function (value, keyframe_index) {\n        if (FrameScriptManager_1.default.frameScriptDebug) {\n            // if we are in debug mode, we try to extract the function name from the first line of framescript code,\n            // and check if this function is available on the object that is set as frameScriptDebug\n            // try to get the functions name (it should be the first line as comment)\n            var functionname = value.split(/[\\r\\n]+/g)[0].split(\"//\")[1];\n            if (FrameScriptManager_1.default.frameScriptDebug[functionname]) {\n                this._framescripts[keyframe_index] = FrameScriptManager_1.default.frameScriptDebug[functionname];\n                this._framescripts_translated[keyframe_index] = true;\n                return;\n            }\n            else {\n                throw new Error(\"Framescript could not be found on FrameScriptManager.frameScriptDebug.\\n the Object set as FrameScriptmanager.frameScriptDebug should contain a function with the name '\" + functionname + \"' !!!\");\n            }\n        }\n        this._framescripts[keyframe_index] = value;\n    };\n    Timeline.prototype.regexIndexOf = function (str, regex, startpos) {\n        var indexOf = str.substring(startpos || 0).search(regex);\n        return (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\n    };\n    Timeline.prototype.add_script_for_postcontruct = function (target_mc, keyframe_idx, scriptPass1) {\n        if (scriptPass1 === void 0) { scriptPass1 = false; }\n        if (this._framescripts[keyframe_idx] != null) {\n            if (this._framescripts_translated[keyframe_idx] == null) {\n                this._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\n                this._framescripts_translated[keyframe_idx] = true;\n            }\n            if (scriptPass1)\n                FrameScriptManager_1.default.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\n            else\n                FrameScriptManager_1.default.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\n        }\n    };\n    Object.defineProperty(Timeline.prototype, \"numFrames\", {\n        get: function () {\n            return this.keyframe_indices.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Timeline.prototype.getPotentialChildPrototype = function (id) {\n        return this._potentialPrototypes[id];\n    };\n    Timeline.prototype.getKeyframeIndexForFrameIndex = function (frame_index) {\n        return this.keyframe_indices[frame_index];\n    };\n    Timeline.prototype.getPotentialChildInstance = function (id) {\n        var this_clone = this._potentialPrototypes[id].clone();\n        this_clone.name = \"\";\n        return this_clone;\n    };\n    Timeline.prototype.registerPotentialChild = function (prototype) {\n        var id = this._potentialPrototypes.length;\n        this._potentialPrototypes[id] = prototype;\n    };\n    Timeline.prototype.jumpToLabel = function (target_mc, label) {\n        var key_frame_index = this._labels[label];\n        if (key_frame_index >= 0)\n            target_mc.currentFrameIndex = this.keyframe_firstframes[key_frame_index];\n    };\n    Timeline.prototype.gotoFrame = function (target_mc, value, skip_script) {\n        if (skip_script === void 0) { skip_script = false; }\n        var current_keyframe_idx = target_mc.constructedKeyFrameIndex;\n        var target_keyframe_idx = this.keyframe_indices[value];\n        if (current_keyframe_idx == target_keyframe_idx)\n            return;\n        if (current_keyframe_idx + 1 == target_keyframe_idx) {\n            this.constructNextFrame(target_mc, !skip_script, true);\n            return;\n        }\n        var break_frame_idx = this.keyframe_constructframes[target_keyframe_idx];\n        //we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\n        var jump_forward = (target_keyframe_idx > current_keyframe_idx);\n        var jump_gap = (break_frame_idx > current_keyframe_idx);\n        // in case we jump forward, but not jump a gap, we start at current_keyframe_idx + 1\n        // in case we jump back or we jump a gap, we want to start constructing at BreakFrame\n        var start_construct_idx = (jump_forward && !jump_gap) ? current_keyframe_idx + 1 : break_frame_idx;\n        var i;\n        var k;\n        if (jump_gap)\n            for (i = target_mc.numChildren - 1; i >= 0; i--)\n                if (target_mc._children[i]._depthID < 0)\n                    target_mc.removeChildAt(i);\n        //if we jump back, we want to reset all objects (but not the timelines of the mcs)\n        if (!jump_forward)\n            target_mc.resetSessionIDs();\n        // in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\n        var depth_sessionIDs = target_mc.getSessionIDDepths();\n        //pass1: only apply add/remove commands into depth_sessionIDs.\n        this.pass1(start_construct_idx, target_keyframe_idx, depth_sessionIDs);\n        // check what childs are alive on both frames.\n        // childs that are not alive anymore get removed and unregistered\n        // childs that are alive on both frames have their properties reset if we are jumping back\n        var child;\n        for (i = target_mc.numChildren - 1; i >= 0; i--) {\n            child = target_mc._children[i];\n            if (child._depthID < 0) {\n                if (depth_sessionIDs[child._depthID] != child._sessionID) {\n                    target_mc.removeChildAt(i);\n                }\n                else if (!jump_forward) {\n                    if (child.adapter) {\n                        if (!child.adapter.isBlockedByScript()) {\n                            child.transform.clearMatrix3D();\n                            child.transform.clearColorTransform();\n                            //this.name=\"\";\n                            child.masks = null;\n                            child.maskMode = false;\n                        }\n                        if (!child.adapter.isVisibilityByScript()) {\n                            child.visible = true;\n                        }\n                    }\n                }\n            }\n        }\n        // now we need to addchild the objects that were added before targetframe first\n        // than we can add the script of the targetframe\n        // than we can addchild objects added on targetframe\n        for (var key in depth_sessionIDs) {\n            child = target_mc.getPotentialChildInstance(this.add_child_stream[depth_sessionIDs[key] * 2]);\n            if (child._sessionID == -1)\n                target_mc._addTimelineChildAt(child, Number(key), depth_sessionIDs[key]);\n        }\n        if (!skip_script && this.keyframe_firstframes[target_keyframe_idx] == value)\n            this.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\n        //pass2: apply update commands for objects on stage (only if they are not blocked by script)\n        this.pass2(target_mc);\n        target_mc.constructedKeyFrameIndex = target_keyframe_idx;\n    };\n    Timeline.prototype.pass1 = function (start_construct_idx, target_keyframe_idx, depth_sessionIDs) {\n        var i;\n        var k;\n        this._update_indices.length = 0; // store a list of updatecommand_indices, so we dont have to read frame_recipe again\n        var update_cnt = 0;\n        var start_index;\n        var end_index;\n        for (k = start_construct_idx; k <= target_keyframe_idx; k++) {\n            var frame_command_idx = this.frame_command_indices[k];\n            var frame_recipe = this.frame_recipe[k];\n            if (frame_recipe & 2) {\n                // remove childs\n                start_index = this.command_index_stream[frame_command_idx];\n                end_index = start_index + this.command_length_stream[frame_command_idx++];\n                for (i = start_index; i < end_index; i++)\n                    delete depth_sessionIDs[this.remove_child_stream[i] - 16383];\n            }\n            if (frame_recipe & 4) {\n                start_index = this.command_index_stream[frame_command_idx];\n                end_index = start_index + this.command_length_stream[frame_command_idx++];\n                // apply add commands in reversed order to have script exeucted in correct order.\n                // this could be changed in exporter\n                for (i = end_index - 1; i >= start_index; i--)\n                    depth_sessionIDs[this.add_child_stream[i * 2 + 1] - 16383] = i;\n            }\n            if (frame_recipe & 8)\n                this._update_indices[update_cnt++] = frame_command_idx; // execute update command later\n        }\n    };\n    Timeline.prototype.pass2 = function (target_mc) {\n        var k;\n        var len = this._update_indices.length;\n        for (k = 0; k < len; k++)\n            this.update_childs(target_mc, this._update_indices[k]);\n    };\n    Timeline.prototype.constructNextFrame = function (target_mc, queueScript, scriptPass1) {\n        if (queueScript === void 0) { queueScript = true; }\n        if (scriptPass1 === void 0) { scriptPass1 = false; }\n        var frameIndex = target_mc.currentFrameIndex;\n        var new_keyFrameIndex = this.keyframe_indices[frameIndex];\n        if (queueScript && this.keyframe_firstframes[new_keyFrameIndex] == frameIndex)\n            this.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\n        if (target_mc.constructedKeyFrameIndex != new_keyFrameIndex) {\n            target_mc.constructedKeyFrameIndex = new_keyFrameIndex;\n            var frame_command_idx = this.frame_command_indices[new_keyFrameIndex];\n            var frame_recipe = this.frame_recipe[new_keyFrameIndex];\n            if (frame_recipe & 1) {\n                for (var i = target_mc.numChildren - 1; i >= 0; i--)\n                    if (target_mc._children[i]._depthID < 0)\n                        target_mc.removeChildAt(i);\n            }\n            else if (frame_recipe & 2) {\n                this.remove_childs_continous(target_mc, frame_command_idx++);\n            }\n            if (frame_recipe & 4)\n                this.add_childs_continous(target_mc, frame_command_idx++);\n            if (frame_recipe & 8)\n                this.update_childs(target_mc, frame_command_idx++);\n        }\n    };\n    Timeline.prototype.remove_childs_continous = function (sourceMovieClip, frame_command_idx) {\n        var start_index = this.command_index_stream[frame_command_idx];\n        var end_index = start_index + this.command_length_stream[frame_command_idx];\n        for (var i = start_index; i < end_index; i++)\n            sourceMovieClip.removeChildAt(sourceMovieClip.getDepthIndexInternal(this.remove_child_stream[i] - 16383));\n    };\n    // used to add childs when jumping between frames\n    Timeline.prototype.add_childs_continous = function (sourceMovieClip, frame_command_idx) {\n        // apply add commands in reversed order to have script exeucted in correct order.\n        // this could be changed in exporter\n        var idx;\n        var start_index = this.command_index_stream[frame_command_idx];\n        var end_index = start_index + this.command_length_stream[frame_command_idx];\n        for (var i = end_index - 1; i >= start_index; i--) {\n            idx = i * 2;\n            sourceMovieClip._addTimelineChildAt(sourceMovieClip.getPotentialChildInstance(this.add_child_stream[idx]), this.add_child_stream[idx + 1] - 16383, i);\n        }\n    };\n    Timeline.prototype.update_childs = function (target_mc, frame_command_idx) {\n        var p;\n        var props_start_idx;\n        var props_end_index;\n        var start_index = this.command_index_stream[frame_command_idx];\n        var end_index = start_index + this.command_length_stream[frame_command_idx];\n        var child;\n        for (var i = start_index; i < end_index; i++) {\n            child = target_mc.getChildAtSessionID(this.update_child_stream[i]);\n            if (child) {\n                // check if the child is active + not blocked by script\n                this._blocked = Boolean(child.adapter && child.adapter.isBlockedByScript());\n                props_start_idx = this.update_child_props_indices_stream[i];\n                props_end_index = props_start_idx + this.update_child_props_length_stream[i];\n                for (p = props_start_idx; p < props_end_index; p++)\n                    this._functions[this.property_type_stream[p]].call(this, child, target_mc, this.property_index_stream[p]);\n            }\n        }\n    };\n    Timeline.prototype.update_mtx_all = function (child, target_mc, i) {\n        if (this._blocked)\n            return;\n        i *= 6;\n        var new_matrix = child.transform.matrix3D;\n        new_matrix.rawData[0] = this.properties_stream_f32_mtx_all[i++];\n        new_matrix.rawData[1] = this.properties_stream_f32_mtx_all[i++];\n        new_matrix.rawData[4] = this.properties_stream_f32_mtx_all[i++];\n        new_matrix.rawData[5] = this.properties_stream_f32_mtx_all[i++];\n        new_matrix.rawData[12] = this.properties_stream_f32_mtx_all[i++];\n        new_matrix.rawData[13] = this.properties_stream_f32_mtx_all[i];\n        child.transform.invalidateComponents();\n    };\n    Timeline.prototype.update_colortransform = function (child, target_mc, i) {\n        if (this._blocked)\n            return;\n        i *= 8;\n        var new_ct = child.transform.colorTransform || (child.transform.colorTransform = new ColorTransform_1.default());\n        new_ct.redMultiplier = this.properties_stream_f32_ct[i++];\n        new_ct.greenMultiplier = this.properties_stream_f32_ct[i++];\n        new_ct.blueMultiplier = this.properties_stream_f32_ct[i++];\n        new_ct.alphaMultiplier = this.properties_stream_f32_ct[i++];\n        new_ct.redOffset = this.properties_stream_f32_ct[i++];\n        new_ct.greenOffset = this.properties_stream_f32_ct[i++];\n        new_ct.blueOffset = this.properties_stream_f32_ct[i++];\n        new_ct.alphaOffset = this.properties_stream_f32_ct[i];\n        child.transform.invalidateColorTransform();\n    };\n    Timeline.prototype.update_masks = function (child, target_mc, i) {\n        // an object could have multiple groups of masks, in case a graphic clip was merged into the timeline\n        // this is not implmeented in the runtime yet\n        // for now, a second mask-groupd would overwrite the first one\n        var mask;\n        var masks = new Array();\n        var numMasks = this.properties_stream_int[i++];\n        //mask may not exist if a goto command moves the playhead to a point in the timeline after\n        //one of the masks in a mask array has already been removed. Therefore a check is needed.\n        for (var m = 0; m < numMasks; m++)\n            if ((mask = target_mc.getChildAtSessionID(this.properties_stream_int[i++])))\n                masks.push(mask);\n        child.masks = masks;\n    };\n    Timeline.prototype.update_name = function (child, target_mc, i) {\n        child.name = this.properties_stream_strings[i];\n        target_mc.adapter.registerScriptObject(child);\n    };\n    Timeline.prototype.update_button_name = function (target, sourceMovieClip, i) {\n        target.name = this.properties_stream_strings[i];\n        // todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\n        target.addButtonListeners();\n        sourceMovieClip.adapter.registerScriptObject(target);\n    };\n    Timeline.prototype.update_visibility = function (child, target_mc, i) {\n        if (!child.adapter || !child.adapter.isVisibilityByScript())\n            child.visible = Boolean(i);\n    };\n    Timeline.prototype.update_mtx_scale_rot = function (child, target_mc, i) {\n        if (this._blocked)\n            return;\n        i *= 4;\n        var new_matrix = child.transform.matrix3D;\n        new_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[i++];\n        new_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[i++];\n        new_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[i++];\n        new_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[i];\n        child.transform.invalidateComponents();\n        child.pInvalidateHierarchicalProperties(HierarchicalProperties_1.default.SCENE_TRANSFORM);\n    };\n    Timeline.prototype.update_mtx_pos = function (child, target_mc, i) {\n        if (this._blocked)\n            return;\n        i *= 2;\n        var new_matrix = child.transform.matrix3D;\n        new_matrix.rawData[12] = this.properties_stream_f32_mtx_pos[i++];\n        new_matrix.rawData[13] = this.properties_stream_f32_mtx_pos[i];\n        child.transform.invalidatePosition();\n    };\n    Timeline.prototype.enable_maskmode = function (child, target_mc, i) {\n        child.maskMode = true;\n    };\n    Timeline.prototype.remove_masks = function (child, target_mc, i) {\n        child.masks = null;\n    };\n    return Timeline;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Timeline;\n\n},{\"awayjs-core/lib/geom/ColorTransform\":undefined,\"awayjs-display/lib/base/HierarchicalProperties\":\"awayjs-display/lib/base/HierarchicalProperties\",\"awayjs-display/lib/managers/FrameScriptManager\":\"awayjs-display/lib/managers/FrameScriptManager\"}],\"awayjs-display/lib/base/TouchPoint\":[function(require,module,exports){\n\"use strict\";\n/**\n *\n */\nvar TouchPoint = (function () {\n    function TouchPoint(x, y, id) {\n        this.x = x;\n        this.y = y;\n        this.id = id;\n    }\n    return TouchPoint;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TouchPoint;\n\n},{}],\"awayjs-display/lib/base/Transform\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventDispatcher_1 = require(\"awayjs-core/lib/events/EventDispatcher\");\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar TransformEvent_1 = require(\"awayjs-display/lib/events/TransformEvent\");\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nvar Transform = (function (_super) {\n    __extends(Transform, _super);\n    function Transform() {\n        _super.call(this);\n        this._matrix3D = new Matrix3D_1.default();\n        this._rotation = new Vector3D_1.default();\n        this._skew = new Vector3D_1.default();\n        this._scale = new Vector3D_1.default(1, 1, 1);\n        // Cached vector of transformation components used when\n        // recomposing the transform matrix in updateTransform()\n        this._components = new Array(4);\n        this._components[1] = this._rotation;\n        this._components[2] = this._skew;\n        this._components[3] = this._scale;\n    }\n    Object.defineProperty(Transform.prototype, \"backVector\", {\n        /**\n         *\n         */\n        get: function () {\n            var director = Matrix3DUtils_1.default.getForward(this._matrix3D);\n            director.negate();\n            return director;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"colorTransform\", {\n        /**\n         * A ColorTransform object containing values that universally adjust the\n         * colors in the display object.\n         *\n         * @throws TypeError The colorTransform is null when being set\n         */\n        get: function () {\n            return this._colorTransform;\n        },\n        set: function (val) {\n            if (this._colorTransform == val)\n                return;\n            this._colorTransform = val;\n            this.invalidateColorTransform();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"concatenatedColorTransform\", {\n        /**\n         * A ColorTransform object representing the combined color transformations\n         * applied to the display object and all of its parent objects, back to the\n         * root level. If different color transformations have been applied at\n         * different levels, all of those transformations are concatenated into one\n         * ColorTransform object for this property.\n         */\n        get: function () {\n            return this._concatenatedColorTransform; //TODO\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"concatenatedMatrix\", {\n        /**\n         * A Matrix object representing the combined transformation matrixes of the\n         * display object and all of its parent objects, back to the root level. If\n         * different transformation matrixes have been applied at different levels,\n         * all of those matrixes are concatenated into one matrix for this property.\n         * Also, for resizeable SWF content running in the browser, this property\n         * factors in the difference between stage coordinates and window coordinates\n         * due to window resizing. Thus, the property converts local coordinates to\n         * window coordinates, which may not be the same coordinate space as that of\n         * the Scene.\n         */\n        get: function () {\n            return this._concatenatedMatrix; //TODO\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"downVector\", {\n        /**\n         *\n         */\n        get: function () {\n            var director = Matrix3DUtils_1.default.getUp(this._matrix3D);\n            director.negate();\n            return director;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"forwardVector\", {\n        /**\n         *\n         */\n        get: function () {\n            return Matrix3DUtils_1.default.getForward(this._matrix3D);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"leftVector\", {\n        /**\n         *\n         */\n        get: function () {\n            var director = Matrix3DUtils_1.default.getRight(this._matrix3D);\n            director.negate();\n            return director;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"matrix3D\", {\n        /**\n         * Provides access to the Matrix3D object of a three-dimensional display\n         * object. The Matrix3D object represents a transformation matrix that\n         * determines the display object's position and orientation. A Matrix3D\n         * object can also perform perspective projection.\n         *\n         * <p>If the <code>matrix</code> property is set to a value(not\n         * <code>null</code>), the <code>matrix3D</code> property is\n         * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n         * value(not <code>null</code>), the <code>matrix</code> property is\n         * <code>null</code>.</p>\n         */\n        get: function () {\n            if (this._matrix3DDirty)\n                this._updateMatrix3D();\n            return this._matrix3D;\n        },\n        set: function (val) {\n            for (var i = 0; i < 15; i++)\n                this._matrix3D.rawData[i] = val.rawData[i];\n            this.invalidateComponents();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"pixelBounds\", {\n        /**\n         * A Rectangle object that defines the bounding rectangle of the display\n         * object on the stage.\n         */\n        get: function () {\n            return this._pixelBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"position\", {\n        /**\n         * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n         */\n        get: function () {\n            return this._matrix3D.position;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"rightVector\", {\n        /**\n         *\n         */\n        get: function () {\n            return Matrix3DUtils_1.default.getRight(this.matrix3D);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"rotation\", {\n        /**\n         * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n         */\n        get: function () {\n            if (this._componentsDirty)\n                this._updateComponents();\n            return this._rotation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Rotates the 3d object directly to a euler angle\n     *\n     * @param    ax        The angle in degrees of the rotation around the x axis.\n     * @param    ay        The angle in degrees of the rotation around the y axis.\n     * @param    az        The angle in degrees of the rotation around the z axis.\n     */\n    Transform.prototype.rotateTo = function (ax, ay, az) {\n        if (this._componentsDirty)\n            this._updateComponents();\n        this._rotation.x = ax;\n        this._rotation.y = ay;\n        this._rotation.z = az;\n        this.invalidateMatrix3D();\n    };\n    Object.defineProperty(Transform.prototype, \"scale\", {\n        /**\n         * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n         */\n        get: function () {\n            if (this._componentsDirty)\n                this._updateComponents();\n            return this._scale;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Transform.prototype.scaleTo = function (sx, sy, sz) {\n        if (this._componentsDirty)\n            this._updateComponents();\n        this._scale.x = sx;\n        this._scale.y = sy;\n        this._scale.z = sz;\n        this.invalidateMatrix3D();\n    };\n    Object.defineProperty(Transform.prototype, \"skew\", {\n        /**\n         * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n         */\n        get: function () {\n            if (this._componentsDirty)\n                this._updateComponents();\n            return this._skew;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Transform.prototype.skewTo = function (sx, sy, sz) {\n        if (this._componentsDirty)\n            this._updateComponents();\n        this._skew.x = sx;\n        this._skew.y = sy;\n        this._skew.z = sz;\n        this.invalidateMatrix3D();\n    };\n    Object.defineProperty(Transform.prototype, \"upVector\", {\n        /**\n         *\n         */\n        get: function () {\n            return Matrix3DUtils_1.default.getUp(this.matrix3D);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Transform.prototype.dispose = function () {\n    };\n    /**\n     * Returns a Matrix3D object, which can transform the space of a specified\n     * display object in relation to the current display object's space. You can\n     * use the <code>getRelativeMatrix3D()</code> method to move one\n     * three-dimensional display object relative to another three-dimensional\n     * display object.\n     *\n     * @param relativeTo The display object relative to which the transformation\n     *                   occurs. To get a Matrix3D object relative to the stage,\n     *                   set the parameter to the <code>root</code> or\n     *                   <code>stage</code> object. To get the world-relative\n     *                   matrix of the display object, set the parameter to a\n     *                   display object that has a perspective transformation\n     *                   applied to it.\n     * @return A Matrix3D object that can be used to transform the space from the\n     *         <code>relativeTo</code> display object to the current display\n     *         object space.\n     */\n    Transform.prototype.getRelativeMatrix3D = function (relativeTo) {\n        return new Matrix3D_1.default(); //TODO\n    };\n    /**\n     * Moves the 3d object forwards along it's local z axis\n     *\n     * @param    distance    The length of the movement\n     */\n    Transform.prototype.moveForward = function (distance) {\n        this.translateLocal(Vector3D_1.default.Z_AXIS, distance);\n    };\n    /**\n     * Moves the 3d object backwards along it's local z axis\n     *\n     * @param    distance    The length of the movement\n     */\n    Transform.prototype.moveBackward = function (distance) {\n        this.translateLocal(Vector3D_1.default.Z_AXIS, -distance);\n    };\n    /**\n     * Moves the 3d object backwards along it's local x axis\n     *\n     * @param    distance    The length of the movement\n     */\n    Transform.prototype.moveLeft = function (distance) {\n        this.translateLocal(Vector3D_1.default.X_AXIS, -distance);\n    };\n    /**\n     * Moves the 3d object forwards along it's local x axis\n     *\n     * @param    distance    The length of the movement\n     */\n    Transform.prototype.moveRight = function (distance) {\n        this.translateLocal(Vector3D_1.default.X_AXIS, distance);\n    };\n    /**\n     * Moves the 3d object forwards along it's local y axis\n     *\n     * @param    distance    The length of the movement\n     */\n    Transform.prototype.moveUp = function (distance) {\n        this.translateLocal(Vector3D_1.default.Y_AXIS, distance);\n    };\n    /**\n     * Moves the 3d object backwards along it's local y axis\n     *\n     * @param    distance    The length of the movement\n     */\n    Transform.prototype.moveDown = function (distance) {\n        this.translateLocal(Vector3D_1.default.Y_AXIS, -distance);\n    };\n    /**\n     * Moves the 3d object directly to a point in space\n     *\n     * @param    dx        The amount of movement along the local x axis.\n     * @param    dy        The amount of movement along the local y axis.\n     * @param    dz        The amount of movement along the local z axis.\n     */\n    Transform.prototype.moveTo = function (dx, dy, dz) {\n        this._matrix3D.rawData[12] = dx;\n        this._matrix3D.rawData[13] = dy;\n        this._matrix3D.rawData[14] = dz;\n        this.invalidatePosition();\n    };\n    /**\n     * Rotates the 3d object around it's local x-axis\n     *\n     * @param    angle        The amount of rotation in degrees\n     */\n    Transform.prototype.pitch = function (angle) {\n        this.rotate(Vector3D_1.default.X_AXIS, angle);\n    };\n    /**\n     * Rotates the 3d object around it's local z-axis\n     *\n     * @param    angle        The amount of rotation in degrees\n     */\n    Transform.prototype.roll = function (angle) {\n        this.rotate(Vector3D_1.default.Z_AXIS, angle);\n    };\n    /**\n     * Rotates the 3d object around it's local y-axis\n     *\n     * @param    angle        The amount of rotation in degrees\n     */\n    Transform.prototype.yaw = function (angle) {\n        this.rotate(Vector3D_1.default.Y_AXIS, angle);\n    };\n    /**\n     * Rotates the 3d object around an axis by a defined angle\n     *\n     * @param    axis        The vector defining the axis of rotation\n     * @param    angle        The amount of rotation in degrees\n     */\n    Transform.prototype.rotate = function (axis, angle) {\n        this.matrix3D.prependRotation(angle, axis);\n        this.invalidateComponents();\n    };\n    /**\n     * Moves the 3d object along a vector by a defined length\n     *\n     * @param    axis        The vector defining the axis of movement\n     * @param    distance    The length of the movement\n     */\n    Transform.prototype.translate = function (axis, distance) {\n        var x = axis.x, y = axis.y, z = axis.z;\n        var len = distance / Math.sqrt(x * x + y * y + z * z);\n        this.matrix3D.appendTranslation(x * len, y * len, z * len);\n        this.invalidatePosition();\n    };\n    /**\n     * Moves the 3d object along a vector by a defined length\n     *\n     * @param    axis        The vector defining the axis of movement\n     * @param    distance    The length of the movement\n     */\n    Transform.prototype.translateLocal = function (axis, distance) {\n        var x = axis.x, y = axis.y, z = axis.z;\n        var len = distance / Math.sqrt(x * x + y * y + z * z);\n        this.matrix3D.prependTranslation(x * len, y * len, z * len);\n        this.invalidatePosition();\n    };\n    Transform.prototype.clearMatrix3D = function () {\n        this._matrix3D.identity();\n        this.invalidateComponents();\n    };\n    Transform.prototype.clearColorTransform = function () {\n        if (!this._colorTransform)\n            return;\n        this._colorTransform.clear();\n        this.invalidateColorTransform();\n    };\n    /**\n     * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n     *\n     * @private\n     */\n    Transform.prototype.invalidateMatrix3D = function () {\n        this._matrix3DDirty = true;\n        this.dispatchEvent(new TransformEvent_1.default(TransformEvent_1.default.INVALIDATE_MATRIX3D, this));\n    };\n    Transform.prototype.invalidateComponents = function () {\n        this.invalidatePosition();\n        this._componentsDirty = true;\n    };\n    /**\n     *\n     */\n    Transform.prototype.invalidatePosition = function () {\n        this._matrix3D.invalidatePosition();\n        this.dispatchEvent(new TransformEvent_1.default(TransformEvent_1.default.INVALIDATE_MATRIX3D, this));\n    };\n    Transform.prototype.invalidateColorTransform = function () {\n        this.dispatchEvent(new TransformEvent_1.default(TransformEvent_1.default.INVALIDATE_COLOR_TRANSFORM, this));\n    };\n    /**\n     *\n     */\n    Transform.prototype._updateMatrix3D = function () {\n        this._matrix3D.recompose(this._components);\n        this._matrix3DDirty = false;\n    };\n    Transform.prototype._updateComponents = function () {\n        var elements = this._matrix3D.decompose();\n        var vec;\n        vec = elements[1];\n        this._rotation.x = vec.x;\n        this._rotation.y = vec.y;\n        this._rotation.z = vec.z;\n        vec = elements[2];\n        this._skew.x = vec.x;\n        this._skew.y = vec.y;\n        this._skew.z = vec.z;\n        vec = elements[3];\n        this._scale.x = vec.x;\n        this._scale.y = vec.y;\n        this._scale.z = vec.z;\n        this._componentsDirty = false;\n    };\n    return Transform;\n}(EventDispatcher_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Transform;\n\n},{\"awayjs-core/lib/events/EventDispatcher\":undefined,\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-display/lib/events/TransformEvent\":\"awayjs-display/lib/events/TransformEvent\"}],\"awayjs-display/lib/base\":[function(require,module,exports){\n\"use strict\";\nvar AlignmentMode_1 = require(\"awayjs-display/lib/base/AlignmentMode\");\nexports.AlignmentMode = AlignmentMode_1.default;\nvar HierarchicalProperties_1 = require(\"awayjs-display/lib/base/HierarchicalProperties\");\nexports.HierarchicalProperties = HierarchicalProperties_1.default;\nvar OrientationMode_1 = require(\"awayjs-display/lib/base/OrientationMode\");\nexports.OrientationMode = OrientationMode_1.default;\nvar Style_1 = require(\"awayjs-display/lib/base/Style\");\nexports.Style = Style_1.default;\nvar Timeline_1 = require(\"awayjs-display/lib/base/Timeline\");\nexports.Timeline = Timeline_1.default;\nvar TouchPoint_1 = require(\"awayjs-display/lib/base/TouchPoint\");\nexports.TouchPoint = TouchPoint_1.default;\nvar Transform_1 = require(\"awayjs-display/lib/base/Transform\");\nexports.Transform = Transform_1.default;\n\n},{\"awayjs-display/lib/base/AlignmentMode\":\"awayjs-display/lib/base/AlignmentMode\",\"awayjs-display/lib/base/HierarchicalProperties\":\"awayjs-display/lib/base/HierarchicalProperties\",\"awayjs-display/lib/base/OrientationMode\":\"awayjs-display/lib/base/OrientationMode\",\"awayjs-display/lib/base/Style\":\"awayjs-display/lib/base/Style\",\"awayjs-display/lib/base/Timeline\":\"awayjs-display/lib/base/Timeline\",\"awayjs-display/lib/base/TouchPoint\":\"awayjs-display/lib/base/TouchPoint\",\"awayjs-display/lib/base/Transform\":\"awayjs-display/lib/base/Transform\"}],\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar PlaneClassification_1 = require(\"awayjs-core/lib/geom/PlaneClassification\");\nvar ElementsType_1 = require(\"awayjs-display/lib/graphics/ElementsType\");\nvar BoundingVolumeBase_1 = require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nvar PrimitiveCubePrefab_1 = require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most sprites.\n */\nvar AxisAlignedBoundingBox = (function (_super) {\n    __extends(AxisAlignedBoundingBox, _super);\n    /**\n     * Creates a new <code>AxisAlignedBoundingBox</code> object.\n     */\n    function AxisAlignedBoundingBox(entity) {\n        _super.call(this, entity);\n        this._x = 0;\n        this._y = 0;\n        this._z = 0;\n        this._width = 0;\n        this._height = 0;\n        this._depth = 0;\n        this._centerX = 0;\n        this._centerY = 0;\n        this._centerZ = 0;\n        this._halfExtentsX = 0;\n        this._halfExtentsY = 0;\n        this._halfExtentsZ = 0;\n    }\n    /**\n     * @inheritDoc\n     */\n    AxisAlignedBoundingBox.prototype.nullify = function () {\n        this._x = this._y = this._z = 0;\n        this._width = this._height = this._depth = 0;\n        this._centerX = this._centerY = this._centerZ = 0;\n        this._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n    };\n    /**\n     * @inheritDoc\n     */\n    AxisAlignedBoundingBox.prototype.isInFrustum = function (planes, numPlanes) {\n        if (this._pInvalidated)\n            this._pUpdate();\n        for (var i = 0; i < numPlanes; ++i) {\n            var plane = planes[i];\n            var a = plane.a;\n            var b = plane.b;\n            var c = plane.c;\n            var flippedExtentX = a < 0 ? -this._halfExtentsX : this._halfExtentsX;\n            var flippedExtentY = b < 0 ? -this._halfExtentsY : this._halfExtentsY;\n            var flippedExtentZ = c < 0 ? -this._halfExtentsZ : this._halfExtentsZ;\n            var projDist = a * (this._centerX + flippedExtentX) + b * (this._centerY + flippedExtentY) + c * (this._centerZ + flippedExtentZ) - plane.d;\n            if (projDist < 0)\n                return false;\n        }\n        return true;\n    };\n    AxisAlignedBoundingBox.prototype.rayIntersection = function (position, direction, targetNormal) {\n        if (this._pInvalidated)\n            this._pUpdate();\n        return this._box.rayIntersection(position, direction, targetNormal);\n    };\n    AxisAlignedBoundingBox.prototype.classifyToPlane = function (plane) {\n        var a = plane.a;\n        var b = plane.b;\n        var c = plane.c;\n        var centerDistance = a * this._centerX + b * this._centerY + c * this._centerZ - plane.d;\n        if (a < 0)\n            a = -a;\n        if (b < 0)\n            b = -b;\n        if (c < 0)\n            c = -c;\n        var boundOffset = a * this._halfExtentsX + b * this._halfExtentsY + c * this._halfExtentsZ;\n        return centerDistance > boundOffset ? PlaneClassification_1.default.FRONT : centerDistance < -boundOffset ? PlaneClassification_1.default.BACK : PlaneClassification_1.default.INTERSECT;\n    };\n    AxisAlignedBoundingBox.prototype._pUpdate = function () {\n        _super.prototype._pUpdate.call(this);\n        this._box = this._pEntity.getBox();\n        var matrix = this._pEntity.sceneTransform;\n        var hx = this._box.width / 2;\n        var hy = this._box.height / 2;\n        var hz = this._box.depth / 2;\n        var cx = this._box.x + hx;\n        var cy = this._box.y + hy;\n        var cz = this._box.z + hz;\n        var raw = matrix.rawData;\n        var m11 = raw[0], m12 = raw[4], m13 = raw[8], m14 = raw[12];\n        var m21 = raw[1], m22 = raw[5], m23 = raw[9], m24 = raw[13];\n        var m31 = raw[2], m32 = raw[6], m33 = raw[10], m34 = raw[14];\n        this._centerX = cx * m11 + cy * m12 + cz * m13 + m14;\n        this._centerY = cx * m21 + cy * m22 + cz * m23 + m24;\n        this._centerZ = cx * m31 + cy * m32 + cz * m33 + m34;\n        this._halfExtentsX = Math.abs(hx * m11 + hy * m12 + hz * m13);\n        this._halfExtentsY = Math.abs(hx * m21 + hy * m22 + hz * m23);\n        this._halfExtentsZ = Math.abs(hx * m31 + hy * m32 + hz * m33);\n        if (this._prefab) {\n            this._prefab.width = this._box.width;\n            this._prefab.height = this._box.height;\n            this._prefab.depth = this._box.depth;\n            this._pBoundsPrimitive.transform.matrix3D = matrix;\n        }\n        this._width = this._halfExtentsX * 2;\n        this._height = this._halfExtentsY * 2;\n        this._depth = this._halfExtentsZ * 2;\n        this._x = this._centerX - this._halfExtentsX;\n        this._y = this._centerY - this._halfExtentsY;\n        this._z = this._centerZ - this._halfExtentsZ;\n    };\n    AxisAlignedBoundingBox.prototype._pCreateBoundsPrimitive = function () {\n        this._prefab = new PrimitiveCubePrefab_1.default(null, ElementsType_1.default.LINE);\n        return this._prefab.getNewObject();\n    };\n    return AxisAlignedBoundingBox;\n}(BoundingVolumeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AxisAlignedBoundingBox;\n\n},{\"awayjs-core/lib/geom/PlaneClassification\":undefined,\"awayjs-display/lib/bounds/BoundingVolumeBase\":\"awayjs-display/lib/bounds/BoundingVolumeBase\",\"awayjs-display/lib/graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\":\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\"}],\"awayjs-display/lib/bounds/BoundingSphere\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar PlaneClassification_1 = require(\"awayjs-core/lib/geom/PlaneClassification\");\nvar ElementsType_1 = require(\"awayjs-display/lib/graphics/ElementsType\");\nvar BoundingVolumeBase_1 = require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nvar PrimitiveSpherePrefab_1 = require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\nvar BoundingSphere = (function (_super) {\n    __extends(BoundingSphere, _super);\n    function BoundingSphere(entity) {\n        _super.call(this, entity);\n        this._radius = 0;\n        this._centerX = 0;\n        this._centerY = 0;\n        this._centerZ = 0;\n    }\n    BoundingSphere.prototype.nullify = function () {\n        this._centerX = this._centerY = this._centerZ = 0;\n        this._radius = 0;\n    };\n    BoundingSphere.prototype.isInFrustum = function (planes, numPlanes) {\n        if (this._pInvalidated)\n            this._pUpdate();\n        for (var i = 0; i < numPlanes; ++i) {\n            var plane = planes[i];\n            var flippedExtentX = plane.a < 0 ? -this._radius : this._radius;\n            var flippedExtentY = plane.b < 0 ? -this._radius : this._radius;\n            var flippedExtentZ = plane.c < 0 ? -this._radius : this._radius;\n            var projDist = plane.a * (this._centerX + flippedExtentX) + plane.b * (this._centerY + flippedExtentY) + plane.c * (this._centerZ + flippedExtentZ) - plane.d;\n            if (projDist < 0) {\n                return false;\n            }\n        }\n        return true;\n    };\n    BoundingSphere.prototype.rayIntersection = function (position, direction, targetNormal) {\n        if (this._pInvalidated)\n            this._pUpdate();\n        return this._sphere.rayIntersection(position, direction, targetNormal);\n    };\n    //@override\n    BoundingSphere.prototype.classifyToPlane = function (plane) {\n        var a = plane.a;\n        var b = plane.b;\n        var c = plane.c;\n        var dd = a * this._centerX + b * this._centerY + c * this._centerZ - plane.d;\n        if (a < 0)\n            a = -a;\n        if (b < 0)\n            b = -b;\n        if (c < 0)\n            c = -c;\n        var rr = (a + b + c) * this._radius;\n        return dd > rr ? PlaneClassification_1.default.FRONT : dd < -rr ? PlaneClassification_1.default.BACK : PlaneClassification_1.default.INTERSECT;\n    };\n    BoundingSphere.prototype._pUpdate = function () {\n        _super.prototype._pUpdate.call(this);\n        this._sphere = this._pEntity.getSphere();\n        var matrix = this._pEntity.sceneTransform;\n        var cx = this._sphere.x;\n        var cy = this._sphere.y;\n        var cz = this._sphere.z;\n        var r = this._sphere.radius;\n        var raw = matrix.rawData;\n        var m11 = raw[0], m12 = raw[4], m13 = raw[8], m14 = raw[12];\n        var m21 = raw[1], m22 = raw[5], m23 = raw[9], m24 = raw[13];\n        var m31 = raw[2], m32 = raw[6], m33 = raw[10], m34 = raw[14];\n        this._centerX = cx * m11 + cy * m12 + cz * m13 + m14;\n        this._centerY = cx * m21 + cy * m22 + cz * m23 + m24;\n        this._centerZ = cx * m31 + cy * m32 + cz * m33 + m34;\n        var rx = m11 + m12 + m13;\n        var ry = m21 + m22 + m23;\n        var rz = m31 + m32 + m33;\n        this._radius = r * Math.sqrt((rx * rx + ry * ry + rz * rz) / 3);\n        if (this._prefab) {\n            this._prefab.radius = r;\n            this._pBoundsPrimitive.x = cx;\n            this._pBoundsPrimitive.y = cy;\n            this._pBoundsPrimitive.z = cz;\n            this._pBoundsPrimitive.transform.matrix3D = matrix;\n        }\n    };\n    BoundingSphere.prototype._pCreateBoundsPrimitive = function () {\n        this._prefab = new PrimitiveSpherePrefab_1.default(null, ElementsType_1.default.LINE);\n        return this._prefab.getNewObject();\n    };\n    return BoundingSphere;\n}(BoundingVolumeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BoundingSphere;\n\n},{\"awayjs-core/lib/geom/PlaneClassification\":undefined,\"awayjs-display/lib/bounds/BoundingVolumeBase\":\"awayjs-display/lib/bounds/BoundingVolumeBase\",\"awayjs-display/lib/graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\":\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\"}],\"awayjs-display/lib/bounds/BoundingVolumeBase\":[function(require,module,exports){\n\"use strict\";\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar BoundingVolumeBase = (function () {\n    function BoundingVolumeBase(entity) {\n        this._pInvalidated = true;\n        this._pEntity = entity;\n    }\n    BoundingVolumeBase.prototype.dispose = function () {\n        this._pEntity = null;\n        this._pBoundsPrimitive = null;\n    };\n    Object.defineProperty(BoundingVolumeBase.prototype, \"boundsPrimitive\", {\n        get: function () {\n            if (this._pBoundsPrimitive == null) {\n                this._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n                this._pInvalidated = true;\n            }\n            if (this._pInvalidated)\n                this._pUpdate();\n            return this._pBoundsPrimitive;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BoundingVolumeBase.prototype.nullify = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    BoundingVolumeBase.prototype.isInFrustum = function (planes, numPlanes) {\n        throw new AbstractMethodError_1.default();\n    };\n    BoundingVolumeBase.prototype.clone = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    BoundingVolumeBase.prototype.rayIntersection = function (position, direction, targetNormal) {\n        return -1;\n    };\n    BoundingVolumeBase.prototype.classifyToPlane = function (plane) {\n        throw new AbstractMethodError_1.default();\n    };\n    BoundingVolumeBase.prototype._pUpdate = function () {\n        this._pInvalidated = false;\n    };\n    BoundingVolumeBase.prototype.invalidate = function () {\n        this._pInvalidated = true;\n    };\n    BoundingVolumeBase.prototype._pCreateBoundsPrimitive = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    return BoundingVolumeBase;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BoundingVolumeBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined}],\"awayjs-display/lib/bounds/BoundsType\":[function(require,module,exports){\n\"use strict\";\n/**\n *\n */\nvar BoundsType = (function () {\n    function BoundsType() {\n    }\n    /**\n     *\n     */\n    BoundsType.SPHERE = \"sphere\";\n    /**\n     *\n     */\n    BoundsType.AXIS_ALIGNED_BOX = \"axisAlignedBox\";\n    /**\n     *\n     */\n    BoundsType.NULL = \"null\";\n    return BoundsType;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BoundsType;\n\n},{}],\"awayjs-display/lib/bounds/NullBounds\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar PlaneClassification_1 = require(\"awayjs-core/lib/geom/PlaneClassification\");\nvar BoundingVolumeBase_1 = require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nvar NullBounds = (function (_super) {\n    __extends(NullBounds, _super);\n    function NullBounds(alwaysIn) {\n        if (alwaysIn === void 0) { alwaysIn = true; }\n        _super.call(this, null);\n        this._alwaysIn = alwaysIn;\n    }\n    //@override\n    NullBounds.prototype.clone = function () {\n        return new NullBounds(this._alwaysIn);\n    };\n    //@override\n    NullBounds.prototype.isInFrustum = function (planes, numPlanes) {\n        return this._alwaysIn;\n    };\n    NullBounds.prototype.classifyToPlane = function (plane) {\n        return PlaneClassification_1.default.INTERSECT;\n    };\n    return NullBounds;\n}(BoundingVolumeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = NullBounds;\n\n},{\"awayjs-core/lib/geom/PlaneClassification\":undefined,\"awayjs-display/lib/bounds/BoundingVolumeBase\":\"awayjs-display/lib/bounds/BoundingVolumeBase\"}],\"awayjs-display/lib/bounds\":[function(require,module,exports){\n\"use strict\";\nvar AxisAlignedBoundingBox_1 = require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nexports.AxisAlignedBoundingBox = AxisAlignedBoundingBox_1.default;\nvar BoundingSphere_1 = require(\"awayjs-display/lib/bounds/BoundingSphere\");\nexports.BoundingSphere = BoundingSphere_1.default;\nvar BoundingVolumeBase_1 = require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nexports.BoundingVolumeBase = BoundingVolumeBase_1.default;\nvar BoundsType_1 = require(\"awayjs-display/lib/bounds/BoundsType\");\nexports.BoundsType = BoundsType_1.default;\nvar NullBounds_1 = require(\"awayjs-display/lib/bounds/NullBounds\");\nexports.NullBounds = NullBounds_1.default;\n\n},{\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\":\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\",\"awayjs-display/lib/bounds/BoundingSphere\":\"awayjs-display/lib/bounds/BoundingSphere\",\"awayjs-display/lib/bounds/BoundingVolumeBase\":\"awayjs-display/lib/bounds/BoundingVolumeBase\",\"awayjs-display/lib/bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"awayjs-display/lib/bounds/NullBounds\":\"awayjs-display/lib/bounds/NullBounds\"}],\"awayjs-display/lib/controllers/ControllerBase\":[function(require,module,exports){\n\"use strict\";\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar ControllerBase = (function () {\n    function ControllerBase(targetObject) {\n        if (targetObject === void 0) { targetObject = null; }\n        this._pAutoUpdate = true;\n        this.targetObject = targetObject;\n    }\n    ControllerBase.prototype.pNotifyUpdate = function () {\n        if (this._pTargetObject)\n            this._pTargetObject.invalidatePartitionBounds();\n    };\n    Object.defineProperty(ControllerBase.prototype, \"targetObject\", {\n        get: function () {\n            return this._pTargetObject;\n        },\n        set: function (val) {\n            if (this._pTargetObject == val)\n                return;\n            if (this._pTargetObject && this._pAutoUpdate)\n                this._pTargetObject._iController = null;\n            this._pTargetObject = val;\n            if (this._pTargetObject && this._pAutoUpdate)\n                this._pTargetObject._iController = this;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ControllerBase.prototype, \"autoUpdate\", {\n        get: function () {\n            return this._pAutoUpdate;\n        },\n        set: function (val) {\n            if (this._pAutoUpdate == val)\n                return;\n            this._pAutoUpdate = val;\n            if (this._pTargetObject) {\n                if (this._pAutoUpdate)\n                    this._pTargetObject._iController = this;\n                else\n                    this._pTargetObject._iController = null;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ControllerBase.prototype.update = function (interpolate) {\n        if (interpolate === void 0) { interpolate = true; }\n        throw new AbstractMethodError_1.default();\n    };\n    ControllerBase.prototype.updateController = function () {\n        if (this._pControllerDirty && this._pAutoUpdate) {\n            this._pControllerDirty = false;\n            this.pNotifyUpdate();\n        }\n    };\n    return ControllerBase;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ControllerBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined}],\"awayjs-display/lib/controllers/FirstPersonController\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar MathConsts_1 = require(\"awayjs-core/lib/geom/MathConsts\");\nvar ControllerBase_1 = require(\"awayjs-display/lib/controllers/ControllerBase\");\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nvar FirstPersonController = (function (_super) {\n    __extends(FirstPersonController, _super);\n    /**\n     * Creates a new <code>HoverController</code> object.\n     */\n    function FirstPersonController(targetObject, panAngle, tiltAngle, minTiltAngle, maxTiltAngle, steps, wrapPanAngle) {\n        if (targetObject === void 0) { targetObject = null; }\n        if (panAngle === void 0) { panAngle = 0; }\n        if (tiltAngle === void 0) { tiltAngle = 90; }\n        if (minTiltAngle === void 0) { minTiltAngle = -90; }\n        if (maxTiltAngle === void 0) { maxTiltAngle = 90; }\n        if (steps === void 0) { steps = 8; }\n        if (wrapPanAngle === void 0) { wrapPanAngle = false; }\n        _super.call(this, targetObject);\n        this._iCurrentPanAngle = 0;\n        this._iCurrentTiltAngle = 90;\n        this._panAngle = 0;\n        this._tiltAngle = 90;\n        this._minTiltAngle = -90;\n        this._maxTiltAngle = 90;\n        this._steps = 8;\n        this._walkIncrement = 0;\n        this._strafeIncrement = 0;\n        this._wrapPanAngle = false;\n        this.fly = false;\n        this.panAngle = panAngle;\n        this.tiltAngle = tiltAngle;\n        this.minTiltAngle = minTiltAngle;\n        this.maxTiltAngle = maxTiltAngle;\n        this.steps = steps;\n        this.wrapPanAngle = wrapPanAngle;\n        //values passed in contrustor are applied immediately\n        this._iCurrentPanAngle = this._panAngle;\n        this._iCurrentTiltAngle = this._tiltAngle;\n    }\n    Object.defineProperty(FirstPersonController.prototype, \"steps\", {\n        /**\n         * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n         *\n         * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n         *\n         * @see    #tiltAngle\n         * @see    #panAngle\n         */\n        get: function () {\n            return this._steps;\n        },\n        set: function (val) {\n            val = (val < 1) ? 1 : val;\n            if (this._steps == val)\n                return;\n            this._steps = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirstPersonController.prototype, \"panAngle\", {\n        /**\n         * Rotation of the camera in degrees around the y axis. Defaults to 0.\n         */\n        get: function () {\n            return this._panAngle;\n        },\n        set: function (val) {\n            if (this._panAngle == val)\n                return;\n            this._panAngle = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirstPersonController.prototype, \"tiltAngle\", {\n        /**\n         * Elevation angle of the camera in degrees. Defaults to 90.\n         */\n        get: function () {\n            return this._tiltAngle;\n        },\n        set: function (val) {\n            val = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n            if (this._tiltAngle == val)\n                return;\n            this._tiltAngle = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirstPersonController.prototype, \"minTiltAngle\", {\n        /**\n         * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n         *\n         * @see    #tiltAngle\n         */\n        get: function () {\n            return this._minTiltAngle;\n        },\n        set: function (val) {\n            if (this._minTiltAngle == val)\n                return;\n            this._minTiltAngle = val;\n            this.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirstPersonController.prototype, \"maxTiltAngle\", {\n        /**\n         * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n         *\n         * @see    #tiltAngle\n         */\n        get: function () {\n            return this._maxTiltAngle;\n        },\n        set: function (val) {\n            if (this._maxTiltAngle == val)\n                return;\n            this._maxTiltAngle = val;\n            this.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirstPersonController.prototype, \"wrapPanAngle\", {\n        /**\n         * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n         */\n        get: function () {\n            return this._wrapPanAngle;\n        },\n        set: function (val) {\n            if (this._wrapPanAngle == val)\n                return;\n            this._wrapPanAngle = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates the current tilt angle and pan angle values.\n     *\n     * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n     *\n     * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n     *\n     * @see    #tiltAngle\n     * @see    #panAngle\n     * @see    #steps\n     */\n    FirstPersonController.prototype.update = function (interpolate) {\n        if (interpolate === void 0) { interpolate = true; }\n        if (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n            this._pControllerDirty = true;\n            if (this._wrapPanAngle) {\n                if (this._panAngle < 0) {\n                    this._iCurrentPanAngle += this._panAngle % 360 + 360 - this._panAngle;\n                    this._panAngle = this._panAngle % 360 + 360;\n                }\n                else {\n                    this._iCurrentPanAngle += this._panAngle % 360 - this._panAngle;\n                    this._panAngle = this._panAngle % 360;\n                }\n                while (this._panAngle - this._iCurrentPanAngle < -180)\n                    this._iCurrentPanAngle -= 360;\n                while (this._panAngle - this._iCurrentPanAngle > 180)\n                    this._iCurrentPanAngle += 360;\n            }\n            if (interpolate) {\n                this._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle) / (this.steps + 1);\n                this._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle) / (this.steps + 1);\n            }\n            else {\n                this._iCurrentTiltAngle = this._tiltAngle;\n                this._iCurrentPanAngle = this._panAngle;\n            }\n            //snap coords if angle differences are close\n            if ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n                this._iCurrentTiltAngle = this._tiltAngle;\n                this._iCurrentPanAngle = this._panAngle;\n            }\n        }\n        this.targetObject.rotationX = this._iCurrentTiltAngle;\n        this.targetObject.rotationY = this._iCurrentPanAngle;\n        if (this._walkIncrement) {\n            if (this.fly) {\n                this.targetObject.transform.moveForward(this._walkIncrement);\n            }\n            else {\n                this.targetObject.x += this._walkIncrement * Math.sin(this._panAngle * MathConsts_1.default.DEGREES_TO_RADIANS);\n                this.targetObject.z += this._walkIncrement * Math.cos(this._panAngle * MathConsts_1.default.DEGREES_TO_RADIANS);\n            }\n            this._walkIncrement = 0;\n        }\n        if (this._strafeIncrement) {\n            this.targetObject.transform.moveRight(this._strafeIncrement);\n            this._strafeIncrement = 0;\n        }\n    };\n    FirstPersonController.prototype.incrementWalk = function (val) {\n        if (val == 0)\n            return;\n        this._walkIncrement += val;\n        this.pNotifyUpdate();\n    };\n    FirstPersonController.prototype.incrementStrafe = function (val) {\n        if (val == 0)\n            return;\n        this._strafeIncrement += val;\n        this.pNotifyUpdate();\n    };\n    return FirstPersonController;\n}(ControllerBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = FirstPersonController;\n\n},{\"awayjs-core/lib/geom/MathConsts\":undefined,\"awayjs-display/lib/controllers/ControllerBase\":\"awayjs-display/lib/controllers/ControllerBase\"}],\"awayjs-display/lib/controllers/FollowController\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar HoverController_1 = require(\"awayjs-display/lib/controllers/HoverController\");\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nvar FollowController = (function (_super) {\n    __extends(FollowController, _super);\n    function FollowController(targetObject, lookAtObject, tiltAngle, distance) {\n        if (targetObject === void 0) { targetObject = null; }\n        if (lookAtObject === void 0) { lookAtObject = null; }\n        if (tiltAngle === void 0) { tiltAngle = 45; }\n        if (distance === void 0) { distance = 700; }\n        _super.call(this, targetObject, lookAtObject, 0, tiltAngle, distance);\n    }\n    FollowController.prototype.update = function (interpolate) {\n        if (interpolate === void 0) { interpolate = true; }\n        if (!this.lookAtObject)\n            return;\n        this.panAngle = this._pLookAtObject.rotationY - 180;\n        _super.prototype.update.call(this);\n    };\n    return FollowController;\n}(HoverController_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = FollowController;\n\n},{\"awayjs-display/lib/controllers/HoverController\":\"awayjs-display/lib/controllers/HoverController\"}],\"awayjs-display/lib/controllers/HoverController\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar MathConsts_1 = require(\"awayjs-core/lib/geom/MathConsts\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar LookAtController_1 = require(\"awayjs-display/lib/controllers/LookAtController\");\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nvar HoverController = (function (_super) {\n    __extends(HoverController, _super);\n    /**\n     * Creates a new <code>HoverController</code> object.\n     */\n    function HoverController(targetObject, lookAtObject, panAngle, tiltAngle, distance, minTiltAngle, maxTiltAngle, minPanAngle, maxPanAngle, steps, yFactor, wrapPanAngle) {\n        if (targetObject === void 0) { targetObject = null; }\n        if (lookAtObject === void 0) { lookAtObject = null; }\n        if (panAngle === void 0) { panAngle = 0; }\n        if (tiltAngle === void 0) { tiltAngle = 90; }\n        if (distance === void 0) { distance = 1000; }\n        if (minTiltAngle === void 0) { minTiltAngle = -90; }\n        if (maxTiltAngle === void 0) { maxTiltAngle = 90; }\n        if (minPanAngle === void 0) { minPanAngle = null; }\n        if (maxPanAngle === void 0) { maxPanAngle = null; }\n        if (steps === void 0) { steps = 8; }\n        if (yFactor === void 0) { yFactor = 2; }\n        if (wrapPanAngle === void 0) { wrapPanAngle = false; }\n        _super.call(this, targetObject, lookAtObject);\n        this._iCurrentPanAngle = 0;\n        this._iCurrentTiltAngle = 90;\n        this._panAngle = 0;\n        this._tiltAngle = 90;\n        this._distance = 1000;\n        this._minPanAngle = -Infinity;\n        this._maxPanAngle = Infinity;\n        this._minTiltAngle = -90;\n        this._maxTiltAngle = 90;\n        this._steps = 8;\n        this._yFactor = 2;\n        this._wrapPanAngle = false;\n        this._upAxis = new Vector3D_1.default();\n        this.distance = distance;\n        this.panAngle = panAngle;\n        this.tiltAngle = tiltAngle;\n        this.minPanAngle = (minPanAngle != null) ? minPanAngle : -Infinity;\n        this.maxPanAngle = (maxPanAngle != null) ? maxPanAngle : Infinity;\n        this.minTiltAngle = minTiltAngle;\n        this.maxTiltAngle = maxTiltAngle;\n        this.steps = steps;\n        this.yFactor = yFactor;\n        this.wrapPanAngle = wrapPanAngle;\n        //values passed in contrustor are applied immediately\n        this._iCurrentPanAngle = this._panAngle;\n        this._iCurrentTiltAngle = this._tiltAngle;\n    }\n    Object.defineProperty(HoverController.prototype, \"steps\", {\n        /**\n         * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n         *\n         * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n         *\n         * @see    #tiltAngle\n         * @see    #panAngle\n         */\n        get: function () {\n            return this._steps;\n        },\n        set: function (val) {\n            val = (val < 1) ? 1 : val;\n            if (this._steps == val)\n                return;\n            this._steps = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HoverController.prototype, \"panAngle\", {\n        /**\n         * Rotation of the camera in degrees around the y axis. Defaults to 0.\n         */\n        get: function () {\n            return this._panAngle;\n        },\n        set: function (val) {\n            val = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n            if (this._panAngle == val)\n                return;\n            this._panAngle = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HoverController.prototype, \"tiltAngle\", {\n        /**\n         * Elevation angle of the camera in degrees. Defaults to 90.\n         */\n        get: function () {\n            return this._tiltAngle;\n        },\n        set: function (val) {\n            val = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n            if (this._tiltAngle == val)\n                return;\n            this._tiltAngle = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HoverController.prototype, \"distance\", {\n        /**\n         * Distance between the camera and the specified target. Defaults to 1000.\n         */\n        get: function () {\n            return this._distance;\n        },\n        set: function (val) {\n            if (this._distance == val)\n                return;\n            this._distance = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HoverController.prototype, \"minPanAngle\", {\n        /**\n         * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n         *\n         * @see    #panAngle\n         */\n        get: function () {\n            return this._minPanAngle;\n        },\n        set: function (val) {\n            if (this._minPanAngle == val)\n                return;\n            this._minPanAngle = val;\n            this.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HoverController.prototype, \"maxPanAngle\", {\n        /**\n         * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n         *\n         * @see    #panAngle\n         */\n        get: function () {\n            return this._maxPanAngle;\n        },\n        set: function (val) {\n            if (this._maxPanAngle == val)\n                return;\n            this._maxPanAngle = val;\n            this.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HoverController.prototype, \"minTiltAngle\", {\n        /**\n         * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n         *\n         * @see    #tiltAngle\n         */\n        get: function () {\n            return this._minTiltAngle;\n        },\n        set: function (val) {\n            if (this._minTiltAngle == val)\n                return;\n            this._minTiltAngle = val;\n            this.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HoverController.prototype, \"maxTiltAngle\", {\n        /**\n         * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n         *\n         * @see    #tiltAngle\n         */\n        get: function () {\n            return this._maxTiltAngle;\n        },\n        set: function (val) {\n            if (this._maxTiltAngle == val)\n                return;\n            this._maxTiltAngle = val;\n            this.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HoverController.prototype, \"yFactor\", {\n        /**\n         * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n         *\n         * @see    #distance\n         */\n        get: function () {\n            return this._yFactor;\n        },\n        set: function (val) {\n            if (this._yFactor == val)\n                return;\n            this._yFactor = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HoverController.prototype, \"wrapPanAngle\", {\n        /**\n         * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n         */\n        get: function () {\n            return this._wrapPanAngle;\n        },\n        set: function (val) {\n            if (this._wrapPanAngle == val)\n                return;\n            this._wrapPanAngle = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates the current tilt angle and pan angle values.\n     *\n     * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n     *\n     * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n     *\n     * @see    #tiltAngle\n     * @see    #panAngle\n     * @see    #steps\n     */\n    HoverController.prototype.update = function (interpolate) {\n        if (interpolate === void 0) { interpolate = true; }\n        if (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n            this._pControllerDirty = true;\n            if (this._wrapPanAngle) {\n                if (this._panAngle < 0) {\n                    this._iCurrentPanAngle += this._panAngle % 360 + 360 - this._panAngle;\n                    this._panAngle = this._panAngle % 360 + 360;\n                }\n                else {\n                    this._iCurrentPanAngle += this._panAngle % 360 - this._panAngle;\n                    this._panAngle = this._panAngle % 360;\n                }\n                while (this._panAngle - this._iCurrentPanAngle < -180)\n                    this._iCurrentPanAngle -= 360;\n                while (this._panAngle - this._iCurrentPanAngle > 180)\n                    this._iCurrentPanAngle += 360;\n            }\n            if (interpolate) {\n                this._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle) / (this.steps + 1);\n                this._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle) / (this.steps + 1);\n            }\n            else {\n                this._iCurrentPanAngle = this._panAngle;\n                this._iCurrentTiltAngle = this._tiltAngle;\n            }\n            //snap coords if angle differences are close\n            if ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n                this._iCurrentTiltAngle = this._tiltAngle;\n                this._iCurrentPanAngle = this._panAngle;\n            }\n        }\n        var pos = (this.lookAtObject) ? this.lookAtObject.transform.position : (this.lookAtPosition) ? this.lookAtPosition : this._pOrigin;\n        this.targetObject.x = pos.x + this.distance * Math.sin(this._iCurrentPanAngle * MathConsts_1.default.DEGREES_TO_RADIANS) * Math.cos(this._iCurrentTiltAngle * MathConsts_1.default.DEGREES_TO_RADIANS);\n        this.targetObject.y = pos.y + this.distance * Math.sin(this._iCurrentTiltAngle * MathConsts_1.default.DEGREES_TO_RADIANS) * this.yFactor;\n        this.targetObject.z = pos.z + this.distance * Math.cos(this._iCurrentPanAngle * MathConsts_1.default.DEGREES_TO_RADIANS) * Math.cos(this._iCurrentTiltAngle * MathConsts_1.default.DEGREES_TO_RADIANS);\n        this._upAxis.x = -Math.sin(this._iCurrentPanAngle * MathConsts_1.default.DEGREES_TO_RADIANS) * Math.sin(this._iCurrentTiltAngle * MathConsts_1.default.DEGREES_TO_RADIANS);\n        this._upAxis.y = Math.cos(this._iCurrentTiltAngle * MathConsts_1.default.DEGREES_TO_RADIANS);\n        this._upAxis.z = -Math.cos(this._iCurrentPanAngle * MathConsts_1.default.DEGREES_TO_RADIANS) * Math.sin(this._iCurrentTiltAngle * MathConsts_1.default.DEGREES_TO_RADIANS);\n        if (this._pTargetObject) {\n            if (this._pLookAtPosition)\n                this._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n            else if (this._pLookAtObject)\n                this._pTargetObject.lookAt(this._pLookAtObject.scene ? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n        }\n    };\n    return HoverController;\n}(LookAtController_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = HoverController;\n\n},{\"awayjs-core/lib/geom/MathConsts\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-display/lib/controllers/LookAtController\":\"awayjs-display/lib/controllers/LookAtController\"}],\"awayjs-display/lib/controllers/LookAtController\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ControllerBase_1 = require(\"awayjs-display/lib/controllers/ControllerBase\");\nvar DisplayObjectEvent_1 = require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nvar LookAtController = (function (_super) {\n    __extends(LookAtController, _super);\n    function LookAtController(targetObject, lookAtObject) {\n        var _this = this;\n        if (targetObject === void 0) { targetObject = null; }\n        if (lookAtObject === void 0) { lookAtObject = null; }\n        _super.call(this, targetObject);\n        this._pOrigin = new Vector3D_1.default(0.0, 0.0, 0.0);\n        this._onLookAtObjectChangedDelegate = function (event) { return _this.onLookAtObjectChanged(event); };\n        if (lookAtObject)\n            this.lookAtObject = lookAtObject;\n        else\n            this.lookAtPosition = new Vector3D_1.default();\n    }\n    Object.defineProperty(LookAtController.prototype, \"lookAtPosition\", {\n        get: function () {\n            return this._pLookAtPosition;\n        },\n        set: function (val) {\n            if (this._pLookAtObject) {\n                this._pLookAtObject.removeEventListener(DisplayObjectEvent_1.default.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n                this._pLookAtObject = null;\n            }\n            this._pLookAtPosition = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LookAtController.prototype, \"lookAtObject\", {\n        get: function () {\n            return this._pLookAtObject;\n        },\n        set: function (val) {\n            if (this._pLookAtPosition)\n                this._pLookAtPosition = null;\n            if (this._pLookAtObject == val)\n                return;\n            if (this._pLookAtObject)\n                this._pLookAtObject.removeEventListener(DisplayObjectEvent_1.default.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n            this._pLookAtObject = val;\n            if (this._pLookAtObject)\n                this._pLookAtObject.addEventListener(DisplayObjectEvent_1.default.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //@override\n    LookAtController.prototype.update = function (interpolate) {\n        if (interpolate === void 0) { interpolate = true; }\n        if (this._pTargetObject) {\n            if (this._pLookAtPosition)\n                this._pTargetObject.lookAt(this._pLookAtPosition);\n            else if (this._pLookAtObject)\n                this._pTargetObject.lookAt(this._pLookAtObject.scene ? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n        }\n    };\n    LookAtController.prototype.onLookAtObjectChanged = function (event) {\n        this.pNotifyUpdate();\n    };\n    return LookAtController;\n}(ControllerBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LookAtController;\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-display/lib/controllers/ControllerBase\":\"awayjs-display/lib/controllers/ControllerBase\",\"awayjs-display/lib/events/DisplayObjectEvent\":\"awayjs-display/lib/events/DisplayObjectEvent\"}],\"awayjs-display/lib/controllers/SpringController\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar LookAtController_1 = require(\"awayjs-display/lib/controllers/LookAtController\");\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nvar SpringController = (function (_super) {\n    __extends(SpringController, _super);\n    function SpringController(targetObject, lookAtObject, stiffness, mass, damping) {\n        if (targetObject === void 0) { targetObject = null; }\n        if (lookAtObject === void 0) { lookAtObject = null; }\n        if (stiffness === void 0) { stiffness = 1; }\n        if (mass === void 0) { mass = 40; }\n        if (damping === void 0) { damping = 4; }\n        _super.call(this, targetObject, lookAtObject);\n        /**\n         * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n         */\n        this.positionOffset = new Vector3D_1.default(0, 500, -1000);\n        this.stiffness = stiffness;\n        this.damping = damping;\n        this.mass = mass;\n        this._velocity = new Vector3D_1.default();\n        this._dv = new Vector3D_1.default();\n        this._stretch = new Vector3D_1.default();\n        this._force = new Vector3D_1.default();\n        this._acceleration = new Vector3D_1.default();\n        this._desiredPosition = new Vector3D_1.default();\n    }\n    SpringController.prototype.update = function (interpolate) {\n        if (interpolate === void 0) { interpolate = true; }\n        var offs;\n        if (!this._pLookAtObject || !this._pTargetObject)\n            return;\n        this._pControllerDirty = true;\n        offs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n        this._desiredPosition.x = this._pLookAtObject.x + offs.x;\n        this._desiredPosition.y = this._pLookAtObject.y + offs.y;\n        this._desiredPosition.z = this._pLookAtObject.z + offs.z;\n        this._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n        this._stretch.scaleBy(-this.stiffness);\n        this._dv.copyFrom(this._velocity);\n        this._dv.scaleBy(this.damping);\n        this._force.x = this._stretch.x - this._dv.x;\n        this._force.y = this._stretch.y - this._dv.y;\n        this._force.z = this._stretch.z - this._dv.z;\n        this._acceleration.copyFrom(this._force);\n        this._acceleration.scaleBy(1 / this.mass);\n        this._velocity.incrementBy(this._acceleration);\n        var position = this._pTargetObject.transform.position.add(this._velocity);\n        this._pTargetObject.transform.moveTo(position.x, position.y, position.z);\n        _super.prototype.update.call(this);\n    };\n    return SpringController;\n}(LookAtController_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SpringController;\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-display/lib/controllers/LookAtController\":\"awayjs-display/lib/controllers/LookAtController\"}],\"awayjs-display/lib/controllers\":[function(require,module,exports){\n\"use strict\";\nvar ControllerBase_1 = require(\"awayjs-display/lib/controllers/ControllerBase\");\nexports.ControllerBase = ControllerBase_1.default;\nvar FirstPersonController_1 = require(\"awayjs-display/lib/controllers/FirstPersonController\");\nexports.FirstPersonController = FirstPersonController_1.default;\nvar FollowController_1 = require(\"awayjs-display/lib/controllers/FollowController\");\nexports.FollowController = FollowController_1.default;\nvar HoverController_1 = require(\"awayjs-display/lib/controllers/HoverController\");\nexports.HoverController = HoverController_1.default;\nvar LookAtController_1 = require(\"awayjs-display/lib/controllers/LookAtController\");\nexports.LookAtController = LookAtController_1.default;\nvar SpringController_1 = require(\"awayjs-display/lib/controllers/SpringController\");\nexports.SpringController = SpringController_1.default;\n\n},{\"awayjs-display/lib/controllers/ControllerBase\":\"awayjs-display/lib/controllers/ControllerBase\",\"awayjs-display/lib/controllers/FirstPersonController\":\"awayjs-display/lib/controllers/FirstPersonController\",\"awayjs-display/lib/controllers/FollowController\":\"awayjs-display/lib/controllers/FollowController\",\"awayjs-display/lib/controllers/HoverController\":\"awayjs-display/lib/controllers/HoverController\",\"awayjs-display/lib/controllers/LookAtController\":\"awayjs-display/lib/controllers/LookAtController\",\"awayjs-display/lib/controllers/SpringController\":\"awayjs-display/lib/controllers/SpringController\"}],\"awayjs-display/lib/display/Billboard\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Rectangle_1 = require(\"awayjs-core/lib/geom/Rectangle\");\nvar DisplayObject_1 = require(\"awayjs-display/lib/display/DisplayObject\");\nvar BoundsType_1 = require(\"awayjs-display/lib/bounds/BoundsType\");\nvar RenderableEvent_1 = require(\"awayjs-display/lib/events/RenderableEvent\");\nvar SurfaceEvent_1 = require(\"awayjs-display/lib/events/SurfaceEvent\");\nvar DefaultMaterialManager_1 = require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nvar StyleEvent_1 = require(\"awayjs-display/lib/events/StyleEvent\");\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\nvar Billboard = (function (_super) {\n    __extends(Billboard, _super);\n    function Billboard(material, pixelSnapping, smoothing) {\n        var _this = this;\n        if (pixelSnapping === void 0) { pixelSnapping = \"auto\"; }\n        if (smoothing === void 0) { smoothing = false; }\n        _super.call(this);\n        this._pIsEntity = true;\n        this.onInvalidateTextureDelegate = function (event) { return _this.onInvalidateTexture(event); };\n        this._onInvalidatePropertiesDelegate = function (event) { return _this._onInvalidateProperties(event); };\n        this.material = material;\n        this._updateDimensions();\n        //default bounds type\n        this._boundsType = BoundsType_1.default.AXIS_ALIGNED_BOX;\n    }\n    Object.defineProperty(Billboard.prototype, \"animator\", {\n        /**\n         * Defines the animator of the sprite. Act on the sprite's geometry. Defaults to null\n         */\n        get: function () {\n            return this._animator;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Billboard.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            return Billboard.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Billboard.prototype, \"billboardRect\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._billboardRect;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Billboard.prototype, \"billboardHeight\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._billboardHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Billboard.prototype, \"billboardWidth\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._billboardWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Billboard.prototype, \"material\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._material;\n        },\n        set: function (value) {\n            if (value == this._material)\n                return;\n            if (this._material) {\n                this._material.iRemoveOwner(this);\n                this._material.removeEventListener(SurfaceEvent_1.default.INVALIDATE_TEXTURE, this.onInvalidateTextureDelegate);\n            }\n            this._material = value;\n            if (this._material) {\n                this._material.iAddOwner(this);\n                this._material.addEventListener(SurfaceEvent_1.default.INVALIDATE_TEXTURE, this.onInvalidateTextureDelegate);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @protected\n     */\n    Billboard.prototype._pUpdateBoxBounds = function () {\n        _super.prototype._pUpdateBoxBounds.call(this);\n        this._pBoxBounds.width = this._billboardRect.width;\n        this._pBoxBounds.height = this._billboardRect.height;\n    };\n    Billboard.prototype.clone = function () {\n        var clone = new Billboard(this.material);\n        return clone;\n    };\n    Object.defineProperty(Billboard.prototype, \"style\", {\n        /**\n         * The style used to render the current Billboard. If set to null, the default style of the material will be used instead.\n         */\n        get: function () {\n            return this._style;\n        },\n        set: function (value) {\n            if (this._style == value)\n                return;\n            if (this._style)\n                this._style.removeEventListener(StyleEvent_1.default.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n            this._style = value;\n            if (this._style)\n                this._style.addEventListener(StyleEvent_1.default.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n            this._onInvalidateProperties();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * //TODO\n     *\n     * @param shortestCollisionDistance\n     * @returns {boolean}\n     *\n     * @internal\n     */\n    Billboard.prototype._iTestCollision = function (pickingCollision, pickingCollider) {\n        return pickingCollider.testBillboardCollision(this, this.material, pickingCollision);\n    };\n    /**\n     * @private\n     */\n    Billboard.prototype.onInvalidateTexture = function (event) {\n        this._updateDimensions();\n    };\n    Billboard.prototype._acceptTraverser = function (traverser) {\n        traverser.applyRenderable(this);\n    };\n    Billboard.prototype._updateDimensions = function () {\n        var texture = this.material.getTextureAt(0);\n        var image = texture ? ((this._style ? this._style.getImageAt(texture) : null) || (this.material.style ? this.material.style.getImageAt(texture) : null) || texture.getImageAt(0)) : null;\n        if (image) {\n            var sampler = ((this._style ? this._style.getSamplerAt(texture) : null) || (this.material.style ? this.material.style.getSamplerAt(texture) : null) || texture.getSamplerAt(0) || DefaultMaterialManager_1.default.getDefaultSampler());\n            if (sampler.imageRect) {\n                this._billboardWidth = sampler.imageRect.width * image.width;\n                this._billboardHeight = sampler.imageRect.height * image.height;\n            }\n            else {\n                this._billboardWidth = image.rect.width;\n                this._billboardHeight = image.rect.height;\n            }\n            this._billboardRect = sampler.frameRect || new Rectangle_1.default(0, 0, this._billboardWidth, this._billboardHeight);\n        }\n        else {\n            this._billboardWidth = 1;\n            this._billboardHeight = 1;\n            this._billboardRect = new Rectangle_1.default(0, 0, 1, 1);\n        }\n        this._pInvalidateBounds();\n        this.dispatchEvent(new RenderableEvent_1.default(RenderableEvent_1.default.INVALIDATE_ELEMENTS, this));\n    };\n    Billboard.prototype.invalidateSurface = function () {\n        this.dispatchEvent(new RenderableEvent_1.default(RenderableEvent_1.default.INVALIDATE_RENDER_OWNER, this));\n    };\n    Billboard.prototype._onInvalidateProperties = function (event) {\n        if (event === void 0) { event = null; }\n        this.invalidateSurface();\n        this._updateDimensions();\n    };\n    Billboard.assetType = \"[asset Billboard]\";\n    return Billboard;\n}(DisplayObject_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Billboard;\n\n},{\"awayjs-core/lib/geom/Rectangle\":undefined,\"awayjs-display/lib/bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"awayjs-display/lib/display/DisplayObject\":\"awayjs-display/lib/display/DisplayObject\",\"awayjs-display/lib/events/RenderableEvent\":\"awayjs-display/lib/events/RenderableEvent\",\"awayjs-display/lib/events/StyleEvent\":\"awayjs-display/lib/events/StyleEvent\",\"awayjs-display/lib/events/SurfaceEvent\":\"awayjs-display/lib/events/SurfaceEvent\",\"awayjs-display/lib/managers/DefaultMaterialManager\":\"awayjs-display/lib/managers/DefaultMaterialManager\"}],\"awayjs-display/lib/display/Camera\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Plane3D_1 = require(\"awayjs-core/lib/geom/Plane3D\");\nvar ProjectionEvent_1 = require(\"awayjs-core/lib/events/ProjectionEvent\");\nvar PerspectiveProjection_1 = require(\"awayjs-core/lib/projections/PerspectiveProjection\");\nvar HierarchicalProperties_1 = require(\"awayjs-display/lib/base/HierarchicalProperties\");\nvar BoundsType_1 = require(\"awayjs-display/lib/bounds/BoundsType\");\nvar DisplayObjectContainer_1 = require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nvar CameraEvent_1 = require(\"awayjs-display/lib/events/CameraEvent\");\nvar Camera = (function (_super) {\n    __extends(Camera, _super);\n    function Camera(projection) {\n        var _this = this;\n        if (projection === void 0) { projection = null; }\n        _super.call(this);\n        this._viewProjection = new Matrix3D_1.default();\n        this._viewProjectionDirty = true;\n        this._frustumPlanesDirty = true;\n        this._pIsEntity = true;\n        this._onProjectionMatrixChangedDelegate = function (event) { return _this.onProjectionMatrixChanged(event); };\n        this._projection = projection || new PerspectiveProjection_1.default();\n        this._projection.addEventListener(ProjectionEvent_1.default.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n        this._frustumPlanes = [];\n        for (var i = 0; i < 6; ++i)\n            this._frustumPlanes[i] = new Plane3D_1.default();\n        this.z = -1000;\n        //default bounds type\n        this._boundsType = BoundsType_1.default.NULL;\n    }\n    Object.defineProperty(Camera.prototype, \"assetType\", {\n        //@override\n        get: function () {\n            return Camera.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Camera.prototype.onProjectionMatrixChanged = function (event) {\n        this._viewProjectionDirty = true;\n        this._frustumPlanesDirty = true;\n        this.dispatchEvent(event);\n    };\n    Object.defineProperty(Camera.prototype, \"frustumPlanes\", {\n        get: function () {\n            if (this._frustumPlanesDirty)\n                this.updateFrustum();\n            return this._frustumPlanes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Camera.prototype.updateFrustum = function () {\n        var a, b, c;\n        //var d : Number;\n        var c11, c12, c13, c14;\n        var c21, c22, c23, c24;\n        var c31, c32, c33, c34;\n        var c41, c42, c43, c44;\n        var p;\n        var raw = this.viewProjection.rawData;\n        var invLen;\n        c11 = raw[0];\n        c12 = raw[4];\n        c13 = raw[8];\n        c14 = raw[12];\n        c21 = raw[1];\n        c22 = raw[5];\n        c23 = raw[9];\n        c24 = raw[13];\n        c31 = raw[2];\n        c32 = raw[6];\n        c33 = raw[10];\n        c34 = raw[14];\n        c41 = raw[3];\n        c42 = raw[7];\n        c43 = raw[11];\n        c44 = raw[15];\n        // left plane\n        p = this._frustumPlanes[0];\n        a = c41 + c11;\n        b = c42 + c12;\n        c = c43 + c13;\n        invLen = 1 / Math.sqrt(a * a + b * b + c * c);\n        p.a = a * invLen;\n        p.b = b * invLen;\n        p.c = c * invLen;\n        p.d = -(c44 + c14) * invLen;\n        // right plane\n        p = this._frustumPlanes[1];\n        a = c41 - c11;\n        b = c42 - c12;\n        c = c43 - c13;\n        invLen = 1 / Math.sqrt(a * a + b * b + c * c);\n        p.a = a * invLen;\n        p.b = b * invLen;\n        p.c = c * invLen;\n        p.d = (c14 - c44) * invLen;\n        // bottom\n        p = this._frustumPlanes[2];\n        a = c41 + c21;\n        b = c42 + c22;\n        c = c43 + c23;\n        invLen = 1 / Math.sqrt(a * a + b * b + c * c);\n        p.a = a * invLen;\n        p.b = b * invLen;\n        p.c = c * invLen;\n        p.d = -(c44 + c24) * invLen;\n        // top\n        p = this._frustumPlanes[3];\n        a = c41 - c21;\n        b = c42 - c22;\n        c = c43 - c23;\n        invLen = 1 / Math.sqrt(a * a + b * b + c * c);\n        p.a = a * invLen;\n        p.b = b * invLen;\n        p.c = c * invLen;\n        p.d = (c24 - c44) * invLen;\n        // near\n        p = this._frustumPlanes[4];\n        a = c31;\n        b = c32;\n        c = c33;\n        invLen = 1 / Math.sqrt(a * a + b * b + c * c);\n        p.a = a * invLen;\n        p.b = b * invLen;\n        p.c = c * invLen;\n        p.d = -c34 * invLen;\n        // far\n        p = this._frustumPlanes[5];\n        a = c41 - c31;\n        b = c42 - c32;\n        c = c43 - c33;\n        invLen = 1 / Math.sqrt(a * a + b * b + c * c);\n        p.a = a * invLen;\n        p.b = b * invLen;\n        p.c = c * invLen;\n        p.d = (c34 - c44) * invLen;\n        this._frustumPlanesDirty = false;\n    };\n    Camera.prototype.pInvalidateHierarchicalProperties = function (bitFlag) {\n        if (_super.prototype.pInvalidateHierarchicalProperties.call(this, bitFlag))\n            return true;\n        if (this._hierarchicalPropsDirty & HierarchicalProperties_1.default.SCENE_TRANSFORM) {\n            this._viewProjectionDirty = true;\n            this._frustumPlanesDirty = true;\n        }\n        return false;\n    };\n    Object.defineProperty(Camera.prototype, \"projection\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._projection;\n        },\n        set: function (value) {\n            if (this._projection == value)\n                return;\n            if (!value)\n                throw new Error(\"Projection cannot be null!\");\n            this._projection.removeEventListener(ProjectionEvent_1.default.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n            this._projection = value;\n            this._projection.addEventListener(ProjectionEvent_1.default.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n            this.dispatchEvent(new CameraEvent_1.default(CameraEvent_1.default.PROJECTION_CHANGED, this));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Camera.prototype, \"viewProjection\", {\n        /**\n         *\n         */\n        get: function () {\n            if (this._viewProjectionDirty) {\n                this._viewProjection.copyFrom(this.inverseSceneTransform);\n                this._viewProjection.append(this._projection.matrix);\n                this._viewProjectionDirty = false;\n            }\n            return this._viewProjection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n     *\n     * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n     * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n     * @param sZ The z coordinate in screen space, representing the distance into the screen.\n     * @return The ray from the camera to the scene space position of the given screen coordinates.\n     */\n    Camera.prototype.getRay = function (nX, nY, sZ) {\n        return this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n    };\n    /**\n     * Calculates the normalised position in screen space of the given scene position.\n     *\n     * @param point3d the position vector of the scene coordinates to be projected.\n     * @return The normalised screen position of the given scene coordinates.\n     */\n    Camera.prototype.project = function (point3d) {\n        return this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n    };\n    /**\n     * Calculates the scene position of the given normalized coordinates in screen space.\n     *\n     * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n     * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n     * @param sZ The z coordinate in screen space, representing the distance into the screen.\n     * @return The scene position of the given screen coordinates.\n     */\n    Camera.prototype.unproject = function (nX, nY, sZ) {\n        return this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n    };\n    Camera.prototype._applyRenderer = function (renderer) {\n        // Since this getter is invoked every iteration of the render loop, and\n        // the prefab construct could affect the sub-sprites, the prefab is\n        // validated here to give it a chance to rebuild.\n        if (this._iSourcePrefab)\n            this._iSourcePrefab._iValidate();\n        //nothing to do here\n    };\n    Camera.assetType = \"[asset Camera]\";\n    return Camera;\n}(DisplayObjectContainer_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Camera;\n\n},{\"awayjs-core/lib/events/ProjectionEvent\":undefined,\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Plane3D\":undefined,\"awayjs-core/lib/projections/PerspectiveProjection\":undefined,\"awayjs-display/lib/base/HierarchicalProperties\":\"awayjs-display/lib/base/HierarchicalProperties\",\"awayjs-display/lib/bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"awayjs-display/lib/display/DisplayObjectContainer\":\"awayjs-display/lib/display/DisplayObjectContainer\",\"awayjs-display/lib/events/CameraEvent\":\"awayjs-display/lib/events/CameraEvent\"}],\"awayjs-display/lib/display/DirectionalLight\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar LightBase_1 = require(\"awayjs-display/lib/display/LightBase\");\nvar HierarchicalProperties_1 = require(\"awayjs-display/lib/base/HierarchicalProperties\");\nvar BoundsType_1 = require(\"awayjs-display/lib/bounds/BoundsType\");\nvar DirectionalShadowMapper_1 = require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nvar DirectionalLight = (function (_super) {\n    __extends(DirectionalLight, _super);\n    function DirectionalLight(xDir, yDir, zDir) {\n        if (xDir === void 0) { xDir = 0; }\n        if (yDir === void 0) { yDir = -1; }\n        if (zDir === void 0) { zDir = 1; }\n        _super.call(this);\n        this._pAabbPoints = new Array(24);\n        this._pIsEntity = true;\n        this.direction = new Vector3D_1.default(xDir, yDir, zDir);\n        this._sceneDirection = new Vector3D_1.default();\n        //default bounds type\n        this._boundsType = BoundsType_1.default.NULL;\n    }\n    Object.defineProperty(DirectionalLight.prototype, \"assetType\", {\n        get: function () {\n            return DirectionalLight.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DirectionalLight.prototype, \"sceneDirection\", {\n        get: function () {\n            if (this._hierarchicalPropsDirty & HierarchicalProperties_1.default.SCENE_TRANSFORM)\n                this.pUpdateSceneTransform();\n            return this._sceneDirection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DirectionalLight.prototype, \"direction\", {\n        get: function () {\n            return this._direction;\n        },\n        set: function (value) {\n            this._direction = value;\n            if (!this._tmpLookAt)\n                this._tmpLookAt = new Vector3D_1.default();\n            this._tmpLookAt.x = this.x + this._direction.x;\n            this._tmpLookAt.y = this.y + this._direction.y;\n            this._tmpLookAt.z = this.z + this._direction.z;\n            this.lookAt(this._tmpLookAt);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //@override\n    DirectionalLight.prototype.pUpdateSceneTransform = function () {\n        _super.prototype.pUpdateSceneTransform.call(this);\n        this.sceneTransform.copyColumnTo(2, this._sceneDirection);\n        this._sceneDirection.normalize();\n    };\n    //@override\n    DirectionalLight.prototype.pCreateShadowMapper = function () {\n        return new DirectionalShadowMapper_1.default();\n    };\n    //override\n    DirectionalLight.prototype.iGetObjectProjectionMatrix = function (entity, cameraTransform, target) {\n        if (target === void 0) { target = null; }\n        var raw = Matrix3DUtils_1.default.RAW_DATA_CONTAINER;\n        var m = new Matrix3D_1.default();\n        m.copyFrom(entity.getRenderSceneTransform(cameraTransform));\n        m.append(this.inverseSceneTransform);\n        if (!this._projAABBPoints)\n            this._projAABBPoints = [];\n        m.transformVectors(this._pAabbPoints, this._projAABBPoints);\n        var xMin = Infinity, xMax = -Infinity;\n        var yMin = Infinity, yMax = -Infinity;\n        var zMin = Infinity, zMax = -Infinity;\n        var d;\n        for (var i = 0; i < 24;) {\n            d = this._projAABBPoints[i++];\n            if (d < xMin)\n                xMin = d;\n            if (d > xMax)\n                xMax = d;\n            d = this._projAABBPoints[i++];\n            if (d < yMin)\n                yMin = d;\n            if (d > yMax)\n                yMax = d;\n            d = this._projAABBPoints[i++];\n            if (d < zMin)\n                zMin = d;\n            if (d > zMax)\n                zMax = d;\n        }\n        var invXRange = 1 / (xMax - xMin);\n        var invYRange = 1 / (yMax - yMin);\n        var invZRange = 1 / (zMax - zMin);\n        raw[0] = 2 * invXRange;\n        raw[5] = 2 * invYRange;\n        raw[10] = invZRange;\n        raw[12] = -(xMax + xMin) * invXRange;\n        raw[13] = -(yMax + yMin) * invYRange;\n        raw[14] = -zMin * invZRange;\n        raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n        raw[15] = 1;\n        if (!target)\n            target = new Matrix3D_1.default();\n        target.copyRawDataFrom(raw);\n        target.prepend(m);\n        return target;\n    };\n    /**\n     * //TODO\n     *\n     * @protected\n     */\n    DirectionalLight.prototype._pUpdateBoxBounds = function () {\n        _super.prototype._pUpdateBoxBounds.call(this);\n        //update points\n        var minX = this._pBoxBounds.x;\n        var minY = this._pBoxBounds.y - this._pBoxBounds.height;\n        var minZ = this._pBoxBounds.z;\n        var maxX = this._pBoxBounds.x + this._pBoxBounds.width;\n        var maxY = this._pBoxBounds.y;\n        var maxZ = this._pBoxBounds.z + this._pBoxBounds.depth;\n        this._pAabbPoints[0] = minX;\n        this._pAabbPoints[1] = minY;\n        this._pAabbPoints[2] = minZ;\n        this._pAabbPoints[3] = maxX;\n        this._pAabbPoints[4] = minY;\n        this._pAabbPoints[5] = minZ;\n        this._pAabbPoints[6] = minX;\n        this._pAabbPoints[7] = maxY;\n        this._pAabbPoints[8] = minZ;\n        this._pAabbPoints[9] = maxX;\n        this._pAabbPoints[10] = maxY;\n        this._pAabbPoints[11] = minZ;\n        this._pAabbPoints[12] = minX;\n        this._pAabbPoints[13] = minY;\n        this._pAabbPoints[14] = maxZ;\n        this._pAabbPoints[15] = maxX;\n        this._pAabbPoints[16] = minY;\n        this._pAabbPoints[17] = maxZ;\n        this._pAabbPoints[18] = minX;\n        this._pAabbPoints[19] = maxY;\n        this._pAabbPoints[20] = maxZ;\n        this._pAabbPoints[21] = maxX;\n        this._pAabbPoints[22] = maxY;\n        this._pAabbPoints[23] = maxZ;\n    };\n    DirectionalLight.assetType = \"[light DirectionalLight]\";\n    return DirectionalLight;\n}(LightBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DirectionalLight;\n\n},{\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-display/lib/base/HierarchicalProperties\":\"awayjs-display/lib/base/HierarchicalProperties\",\"awayjs-display/lib/bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"awayjs-display/lib/display/LightBase\":\"awayjs-display/lib/display/LightBase\",\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\":\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\"}],\"awayjs-display/lib/display/DisplayObjectContainer\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ArgumentError_1 = require(\"awayjs-core/lib/errors/ArgumentError\");\nvar RangeError_1 = require(\"awayjs-core/lib/errors/RangeError\");\nvar DisplayObject_1 = require(\"awayjs-display/lib/display/DisplayObject\");\nvar HierarchicalProperties_1 = require(\"awayjs-display/lib/base/HierarchicalProperties\");\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nvar DisplayObjectContainer = (function (_super) {\n    __extends(DisplayObjectContainer, _super);\n    /**\n     * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n     * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n     * constructors for the following subclasses of DisplayObjectContainer:\n     * <ul>\n     *   <li><code>new Loader()</code></li>\n     *   <li><code>new Sprite()</code></li>\n     *   <li><code>new MovieClip()</code></li>\n     * </ul>\n     */\n    function DisplayObjectContainer() {\n        _super.call(this);\n        this._mouseChildren = true;\n        this._depth_childs = {};\n        this._nextHighestDepth = 0;\n        this._children = new Array();\n    }\n    Object.defineProperty(DisplayObjectContainer.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            return DisplayObjectContainer.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObjectContainer.prototype, \"mouseChildren\", {\n        /**\n         * Determines whether or not the children of the object are mouse, or user\n         * input device, enabled. If an object is enabled, a user can interact with\n         * it by using a mouse or user input device. The default is\n         * <code>true</code>.\n         *\n         * <p>This property is useful when you create a button with an instance of\n         * the Sprite class(instead of using the SimpleButton class). When you use a\n         * Sprite instance to create a button, you can choose to decorate the button\n         * by using the <code>addChild()</code> method to add additional Sprite\n         * instances. This process can cause unexpected behavior with mouse events\n         * because the Sprite instances you add as children can become the target\n         * object of a mouse event when you expect the parent instance to be the\n         * target object. To ensure that the parent instance serves as the target\n         * objects for mouse events, you can set the <code>mouseChildren</code>\n         * property of the parent instance to <code>false</code>.</p>\n         *\n         * <p> No event is dispatched by setting this property. You must use the\n         * <code>addEventListener()</code> method to create interactive\n         * functionality.</p>\n         */\n        get: function () {\n            if (this._hierarchicalPropsDirty & HierarchicalProperties_1.default.MOUSE_ENABLED)\n                this._updateMouseEnabled();\n            return this._mouseChildren;\n        },\n        set: function (value) {\n            if (this._mouseChildren == value)\n                return;\n            this._mouseChildren = value;\n            this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.default.MOUSE_ENABLED);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObjectContainer.prototype, \"numChildren\", {\n        /**\n         * Returns the number of children of this object.\n         */\n        get: function () {\n            return this._children.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds a child DisplayObject instance to this DisplayObjectContainer\n     * instance. The child is added to the front(top) of all other children in\n     * this DisplayObjectContainer instance.(To add a child to a specific index\n     * position, use the <code>addChildAt()</code> method.)\n     *\n     * <p>If you add a child object that already has a different display object\n     * container as a parent, the object is removed from the child list of the\n     * other display object container. </p>\n     *\n     * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n     * problems with a published SWF file, including security problems and\n     * conflicts with other loaded SWF files. There is only one Stage within a\n     * Flash runtime instance, no matter how many SWF files you load into the\n     * runtime. So, generally, objects should not be added to the Stage,\n     * directly, at all. The only object the Stage should contain is the root\n     * object. Create a DisplayObjectContainer to contain all of the items on the\n     * display list. Then, if necessary, add that DisplayObjectContainer instance\n     * to the Stage.</p>\n     *\n     * @param child The DisplayObject instance to add as a child of this\n     *              DisplayObjectContainer instance.\n     * @return The DisplayObject instance that you pass in the <code>child</code>\n     *         parameter.\n     * @throws ArgumentError Throws if the child is the same as the parent. Also\n     *                       throws if the caller is a child(or grandchild etc.)\n     *                       of the child being added.\n     * @event added Dispatched when a display object is added to the display\n     *              list.\n     */\n    DisplayObjectContainer.prototype.addChild = function (child) {\n        return this.addChildAt(child, this._children.length);\n    };\n    DisplayObjectContainer.prototype.addChildAtDepth = function (child, depth, replace) {\n        if (replace === void 0) { replace = true; }\n        if (child == null)\n            throw new ArgumentError_1.default(\"Parameter child cannot be null.\");\n        //if child already has a parent, remove it.\n        if (child._pParent)\n            child._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\n        var index = this.getDepthIndexInternal(depth);\n        if (index != -1) {\n            if (replace) {\n                this.removeChildAt(index);\n            }\n            else {\n                //move depth of existing child up by 1\n                this.addChildAtDepth(this._children[index], depth + 1, false);\n            }\n        }\n        if (this._nextHighestDepth < depth + 1)\n            this._nextHighestDepth = depth + 1;\n        this._depth_childs[depth] = child;\n        this._children.push(child);\n        child._depthID = depth;\n        child.iSetParent(this);\n        this._invalidateChildren();\n        return child;\n    };\n    /**\n     * Adds a child DisplayObject instance to this DisplayObjectContainer\n     * instance. The child is added at the index position specified. An index of\n     * 0 represents the back(bottom) of the display list for this\n     * DisplayObjectContainer object.\n     *\n     * <p>For example, the following example shows three display objects, labeled\n     * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n     *\n     * <p>If you add a child object that already has a different display object\n     * container as a parent, the object is removed from the child list of the\n     * other display object container. </p>\n     *\n     * @param child The DisplayObject instance to add as a child of this\n     *              DisplayObjectContainer instance.\n     * @param index The index position to which the child is added. If you\n     *              specify a currently occupied index position, the child object\n     *              that exists at that position and all higher positions are\n     *              moved up one position in the child list.\n     * @return The DisplayObject instance that you pass in the <code>child</code>\n     *         parameter.\n     * @throws ArgumentError Throws if the child is the same as the parent. Also\n     *                       throws if the caller is a child(or grandchild etc.)\n     *                       of the child being added.\n     * @throws RangeError    Throws if the index position does not exist in the\n     *                       child list.\n     * @event added Dispatched when a display object is added to the display\n     *              list.\n     */\n    DisplayObjectContainer.prototype.addChildAt = function (child, index) {\n        return this.addChildAtDepth(child, (index < this._children.length) ? this._children[index]._depthID : this.getNextHighestDepth(), false);\n    };\n    DisplayObjectContainer.prototype.addChildren = function () {\n        var childarray = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            childarray[_i - 0] = arguments[_i];\n        }\n        var len = childarray.length;\n        for (var i = 0; i < len; i++)\n            this.addChild(childarray[i]);\n    };\n    /**\n     *\n     */\n    DisplayObjectContainer.prototype.clone = function () {\n        var newInstance = new DisplayObjectContainer();\n        this.copyTo(newInstance);\n        return newInstance;\n    };\n    DisplayObjectContainer.prototype.copyTo = function (newInstance) {\n        _super.prototype.copyTo.call(this, newInstance);\n        newInstance.mouseChildren = this._mouseChildren;\n        var len = this._children.length;\n        for (var i = 0; i < len; ++i)\n            newInstance.addChild(this._children[i].clone());\n    };\n    /**\n     * Determines whether the specified display object is a child of the\n     * DisplayObjectContainer instance or the instance itself. The search\n     * includes the entire display list including this DisplayObjectContainer\n     * instance. Grandchildren, great-grandchildren, and so on each return\n     * <code>true</code>.\n     *\n     * @param child The child object to test.\n     * @return <code>true</code> if the <code>child</code> object is a child of\n     *         the DisplayObjectContainer or the container itself; otherwise\n     *         <code>false</code>.\n     */\n    DisplayObjectContainer.prototype.contains = function (child) {\n        return this._children.indexOf(child) >= 0;\n    };\n    /**\n     *\n     */\n    DisplayObjectContainer.prototype.disposeValues = function () {\n        for (var i = this._children.length - 1; i >= 0; i--)\n            this.removeChild(this._children[i]);\n        _super.prototype.disposeValues.call(this);\n    };\n    DisplayObjectContainer.prototype.getChildAtDepth = function (depth) {\n        return this._depth_childs[depth];\n    };\n    /**\n     * Returns the child display object instance that exists at the specified\n     * index.\n     *\n     * @param index The index position of the child object.\n     * @return The child display object at the specified index position.\n     * @throws RangeError    Throws if the index does not exist in the child\n     *                       list.\n     */\n    DisplayObjectContainer.prototype.getChildAt = function (index /*int*/) {\n        var child = this._children[index];\n        if (child == null)\n            throw new RangeError_1.default(\"Index does not exist in the child list of the caller\");\n        return child;\n    };\n    /**\n     * Returns the child display object that exists with the specified name. If\n     * more that one child display object has the specified name, the method\n     * returns the first object in the child list.\n     *\n     * <p>The <code>getChildAt()</code> method is faster than the\n     * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n     * accesses a child from a cached array, whereas the\n     * <code>getChildByName()</code> method has to traverse a linked list to\n     * access a child.</p>\n     *\n     * @param name The name of the child to return.\n     * @return The child display object with the specified name.\n     */\n    DisplayObjectContainer.prototype.getChildByName = function (name) {\n        var len = this._children.length;\n        for (var i = 0; i < len; ++i)\n            if (this._children[i].name == name)\n                return this._children[i];\n        return null;\n    };\n    /**\n     * Returns the index position of a <code>child</code> DisplayObject instance.\n     *\n     * @param child The DisplayObject instance to identify.\n     * @return The index position of the child display object to identify.\n     * @throws ArgumentError Throws if the child parameter is not a child of this\n     *                       object.\n     */\n    DisplayObjectContainer.prototype.getChildIndex = function (child) {\n        var childIndex = this._children.indexOf(child);\n        if (childIndex == -1)\n            throw new ArgumentError_1.default(\"Child parameter is not a child of the caller\");\n        return childIndex;\n    };\n    DisplayObjectContainer.prototype.getNextHighestDepth = function () {\n        if (this._nextHighestDepthDirty)\n            this._updateNextHighestDepth();\n        return this._nextHighestDepth;\n    };\n    /**\n     * Returns an array of objects that lie under the specified point and are\n     * children(or grandchildren, and so on) of this DisplayObjectContainer\n     * instance. Any child objects that are inaccessible for security reasons are\n     * omitted from the returned array. To determine whether this security\n     * restriction affects the returned array, call the\n     * <code>areInaccessibleObjectsUnderPoint()</code> method.\n     *\n     * <p>The <code>point</code> parameter is in the coordinate space of the\n     * Stage, which may differ from the coordinate space of the display object\n     * container(unless the display object container is the Stage). You can use\n     * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n     * methods to convert points between these coordinate spaces.</p>\n     *\n     * @param point The point under which to look.\n     * @return An array of objects that lie under the specified point and are\n     *         children(or grandchildren, and so on) of this\n     *         DisplayObjectContainer instance.\n     */\n    DisplayObjectContainer.prototype.getObjectsUnderPoint = function (point) {\n        return new Array();\n    };\n    /**\n     * Removes the specified <code>child</code> DisplayObject instance from the\n     * child list of the DisplayObjectContainer instance. The <code>parent</code>\n     * property of the removed child is set to <code>null</code> , and the object\n     * is garbage collected if no other references to the child exist. The index\n     * positions of any display objects above the child in the\n     * DisplayObjectContainer are decreased by 1.\n     *\n     * <p>The garbage collector reallocates unused memory space. When a variable\n     * or object is no longer actively referenced or stored somewhere, the\n     * garbage collector sweeps through and wipes out the memory space it used to\n     * occupy if no other references to it exist.</p>\n     *\n     * @param child The DisplayObject instance to remove.\n     * @return The DisplayObject instance that you pass in the <code>child</code>\n     *         parameter.\n     * @throws ArgumentError Throws if the child parameter is not a child of this\n     *                       object.\n     */\n    DisplayObjectContainer.prototype.removeChild = function (child) {\n        if (child == null)\n            throw new ArgumentError_1.default(\"Parameter child cannot be null\");\n        this.removeChildAt(this.getChildIndex(child));\n        return child;\n    };\n    DisplayObjectContainer.prototype.removeChildAtDepth = function (depth /*int*/) {\n        return this.removeChildAt(this.getDepthIndexInternal(depth));\n    };\n    /**\n     * Removes a child DisplayObject from the specified <code>index</code>\n     * position in the child list of the DisplayObjectContainer. The\n     * <code>parent</code> property of the removed child is set to\n     * <code>null</code>, and the object is garbage collected if no other\n     * references to the child exist. The index positions of any display objects\n     * above the child in the DisplayObjectContainer are decreased by 1.\n     *\n     * <p>The garbage collector reallocates unused memory space. When a variable\n     * or object is no longer actively referenced or stored somewhere, the\n     * garbage collector sweeps through and wipes out the memory space it used to\n     * occupy if no other references to it exist.</p>\n     *\n     * @param index The child index of the DisplayObject to remove.\n     * @return The DisplayObject instance that was removed.\n     * @throws RangeError    Throws if the index does not exist in the child\n     *                       list.\n     * @throws SecurityError This child display object belongs to a sandbox to\n     *                       which the calling object does not have access. You\n     *                       can avoid this situation by having the child movie\n     *                       call the <code>Security.allowDomain()</code> method.\n     */\n    DisplayObjectContainer.prototype.removeChildAt = function (index /*int*/) {\n        var child = this.removeChildAtInternal(index);\n        child.iSetParent(null);\n        this._invalidateChildren();\n        return child;\n    };\n    /**\n     * Removes all <code>child</code> DisplayObject instances from the child list\n     * of the DisplayObjectContainer instance. The <code>parent</code> property\n     * of the removed children is set to <code>null</code>, and the objects are\n     * garbage collected if no other references to the children exist.\n     *\n     * The garbage collector reallocates unused memory space. When a variable or\n     * object is no longer actively referenced or stored somewhere, the garbage\n     * collector sweeps through and wipes out the memory space it used to occupy\n     * if no other references to it exist.\n     *\n     * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n     * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n     * @throws RangeError    Throws if the beginIndex or endIndex positions do\n     *                       not exist in the child list.\n     */\n    DisplayObjectContainer.prototype.removeChildren = function (beginIndex, endIndex) {\n        if (beginIndex === void 0) { beginIndex = 0; }\n        if (endIndex === void 0) { endIndex = 2147483647; }\n        if (beginIndex < 0)\n            throw new RangeError_1.default(\"beginIndex is out of range of the child list\");\n        if (endIndex > this._children.length)\n            throw new RangeError_1.default(\"endIndex is out of range of the child list\");\n        for (var i = beginIndex; i < endIndex; i++)\n            this.removeChild(this._children[i]);\n    };\n    /**\n     * Changes the position of an existing child in the display object container.\n     * This affects the layering of child objects. For example, the following\n     * example shows three display objects, labeled a, b, and c, at index\n     * positions 0, 1, and 2, respectively:\n     *\n     * <p>When you use the <code>setChildIndex()</code> method and specify an\n     * index position that is already occupied, the only positions that change\n     * are those in between the display object's former and new position. All\n     * others will stay the same. If a child is moved to an index LOWER than its\n     * current index, all children in between will INCREASE by 1 for their index\n     * reference. If a child is moved to an index HIGHER than its current index,\n     * all children in between will DECREASE by 1 for their index reference. For\n     * example, if the display object container in the previous example is named\n     * <code>container</code>, you can swap the position of the display objects\n     * labeled a and b by calling the following code:</p>\n     *\n     * <p>This code results in the following arrangement of objects:</p>\n     *\n     * @param child The child DisplayObject instance for which you want to change\n     *              the index number.\n     * @param index The resulting index number for the <code>child</code> display\n     *              object.\n     * @throws ArgumentError Throws if the child parameter is not a child of this\n     *                       object.\n     * @throws RangeError    Throws if the index does not exist in the child\n     *                       list.\n     */\n    DisplayObjectContainer.prototype.setChildIndex = function (child, index /*int*/) {\n        //TODO\n    };\n    /**\n     * Swaps the z-order (front-to-back order) of the two specified child\n     * objects. All other child objects in the display object container remain in\n     * the same index positions.\n     *\n     * @param child1 The first child object.\n     * @param child2 The second child object.\n     * @throws ArgumentError Throws if either child parameter is not a child of\n     *                       this object.\n     */\n    DisplayObjectContainer.prototype.swapChildren = function (child1, child2) {\n        this.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2));\n    };\n    /**\n     * Swaps the z-order(front-to-back order) of the child objects at the two\n     * specified index positions in the child list. All other child objects in\n     * the display object container remain in the same index positions.\n     *\n     * @param index1 The index position of the first child object.\n     * @param index2 The index position of the second child object.\n     * @throws RangeError If either index does not exist in the child list.\n     */\n    DisplayObjectContainer.prototype.swapChildrenAt = function (index1, index2) {\n        var depth = this._children[index2]._depthID;\n        var child = this._children[index1];\n        this.addChildAtDepth(this._children[index2], this._children[index1]._depthID);\n        this.addChildAtDepth(child, depth);\n    };\n    /**\n     * //TODO\n     *\n     * @protected\n     */\n    DisplayObjectContainer.prototype._pUpdateBoxBounds = function () {\n        _super.prototype._pUpdateBoxBounds.call(this);\n        var box;\n        var numChildren = this._children.length;\n        if (numChildren > 0) {\n            var min;\n            var max;\n            var minX, minY, minZ;\n            var maxX, maxY, maxZ;\n            for (var i = 0; i < numChildren; ++i) {\n                box = this._children[i].getBox(this);\n                if (i == 0) {\n                    maxX = box.width + (minX = box.x);\n                    maxY = box.height + (minY = box.y);\n                    maxZ = box.depth + (minZ = box.z);\n                }\n                else {\n                    max = box.width + (min = box.x);\n                    if (min < minX)\n                        minX = min;\n                    if (max > maxX)\n                        maxX = max;\n                    max = box.height + (min = box.y);\n                    if (min < minY)\n                        minY = min;\n                    if (max > maxY)\n                        maxY = max;\n                    max = box.depth + (min = box.z);\n                    if (min < minZ)\n                        minZ = min;\n                    if (max > maxZ)\n                        maxZ = max;\n                }\n            }\n            this._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n            this._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n            this._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n        }\n        else {\n            this._pBoxBounds.setEmpty();\n        }\n    };\n    /**\n     * @protected\n     */\n    DisplayObjectContainer.prototype.pInvalidateHierarchicalProperties = function (bitFlag) {\n        if (_super.prototype.pInvalidateHierarchicalProperties.call(this, bitFlag))\n            return true;\n        var len = this._children.length;\n        for (var i = 0; i < len; ++i)\n            this._children[i].pInvalidateHierarchicalProperties(bitFlag);\n        return false;\n    };\n    /**\n     * @internal\n     */\n    DisplayObjectContainer.prototype._iSetScene = function (value, partition) {\n        _super.prototype._iSetScene.call(this, value, partition);\n        var len = this._children.length;\n        for (var i = 0; i < len; ++i)\n            this._children[i]._iSetScene(value, partition);\n    };\n    /**\n     * @private\n     *\n     * @param child\n     */\n    DisplayObjectContainer.prototype.removeChildAtInternal = function (index) {\n        var child = this._children.splice(index, 1)[0];\n        //update next highest depth\n        if (this._nextHighestDepth == child._depthID + 1)\n            this._nextHighestDepthDirty = true;\n        delete this._depth_childs[child._depthID];\n        child._depthID = -16384;\n        return child;\n    };\n    DisplayObjectContainer.prototype.getDepthIndexInternal = function (depth /*int*/) {\n        if (!this._depth_childs[depth])\n            return -1;\n        return this._children.indexOf(this._depth_childs[depth]);\n    };\n    DisplayObjectContainer.prototype._updateNextHighestDepth = function () {\n        this._nextHighestDepthDirty = false;\n        this._nextHighestDepth = 0;\n        var len = this._children.length;\n        for (var i = 0; i < len; i++)\n            if (this._nextHighestDepth < this._children[i]._depthID)\n                this._nextHighestDepth = this._children[i]._depthID;\n        this._nextHighestDepth += 1;\n    };\n    DisplayObjectContainer.prototype._hitTestPointInternal = function (x, y, shapeFlag, masksFlag) {\n        var numChildren = this._children.length;\n        for (var i = 0; i < numChildren; i++)\n            if (this._children[i].hitTestPoint(x, y, shapeFlag, masksFlag))\n                return true;\n        return false;\n    };\n    DisplayObjectContainer.prototype._updateMaskMode = function () {\n        if (this.maskMode)\n            this.mouseChildren = false;\n        _super.prototype._updateMaskMode.call(this);\n    };\n    DisplayObjectContainer.prototype._invalidateChildren = function () {\n        if (this._pIsContainer != Boolean(this._children.length)) {\n            if (this._pImplicitPartition)\n                this._pImplicitPartition._iUnregisterEntity(this);\n            this._pIsContainer = Boolean(this._children.length);\n            if (this._pImplicitPartition)\n                this._pImplicitPartition._iRegisterEntity(this);\n        }\n        this._pInvalidateBounds();\n    };\n    DisplayObjectContainer.assetType = \"[asset DisplayObjectContainer]\";\n    return DisplayObjectContainer;\n}(DisplayObject_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DisplayObjectContainer;\n\n},{\"awayjs-core/lib/errors/ArgumentError\":undefined,\"awayjs-core/lib/errors/RangeError\":undefined,\"awayjs-display/lib/base/HierarchicalProperties\":\"awayjs-display/lib/base/HierarchicalProperties\",\"awayjs-display/lib/display/DisplayObject\":\"awayjs-display/lib/display/DisplayObject\"}],\"awayjs-display/lib/display/DisplayObject\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Box_1 = require(\"awayjs-core/lib/geom/Box\");\nvar ColorTransform_1 = require(\"awayjs-core/lib/geom/ColorTransform\");\nvar Sphere_1 = require(\"awayjs-core/lib/geom/Sphere\");\nvar MathConsts_1 = require(\"awayjs-core/lib/geom/MathConsts\");\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar HierarchicalProperties_1 = require(\"awayjs-display/lib/base/HierarchicalProperties\");\nvar BoundsType_1 = require(\"awayjs-display/lib/bounds/BoundsType\");\nvar AlignmentMode_1 = require(\"awayjs-display/lib/base/AlignmentMode\");\nvar OrientationMode_1 = require(\"awayjs-display/lib/base/OrientationMode\");\nvar Transform_1 = require(\"awayjs-display/lib/base/Transform\");\nvar PickingCollision_1 = require(\"awayjs-display/lib/pick/PickingCollision\");\nvar DisplayObjectEvent_1 = require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nvar TransformEvent_1 = require(\"awayjs-display/lib/events/TransformEvent\");\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n *\n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nvar DisplayObject = (function (_super) {\n    __extends(DisplayObject, _super);\n    /**\n     * Creates a new <code>DisplayObject</code> instance.\n     */\n    function DisplayObject() {\n        var _this = this;\n        _super.call(this);\n        this._queuedEvents = new Array();\n        this._boxBoundsInvalid = true;\n        this._sphereBoundsInvalid = true;\n        this._pSceneTransform = new Matrix3D_1.default();\n        this._pIsEntity = false;\n        this._pIsContainer = false;\n        this._sessionID = -1;\n        this._depthID = -16384;\n        this._inverseSceneTransform = new Matrix3D_1.default();\n        this._scenePosition = new Vector3D_1.default();\n        this._explicitVisibility = true;\n        this._explicitMaskId = -1;\n        this._pImplicitVisibility = true;\n        this._pImplicitMaskId = -1;\n        this._pImplicitMaskIds = new Array();\n        this._explicitMouseEnabled = true;\n        this._pImplicitMouseEnabled = true;\n        this._orientationMatrix = new Matrix3D_1.default();\n        this._inheritColorTransform = false;\n        this._maskMode = false;\n        //temp vector used in global to local\n        this._tempVector3D = new Vector3D_1.default();\n        /**\n         *\n         */\n        this.alignmentMode = AlignmentMode_1.default.REGISTRATION_POINT;\n        /**\n         *\n         */\n        this.castsShadows = true;\n        /**\n         *\n         */\n        this.orientationMode = OrientationMode_1.default.DEFAULT;\n        /**\n         *\n         */\n        this.zOffset = 0;\n        //creation of associated transform object\n        this._transform = new Transform_1.default();\n        //setup transform listeners\n        this._transform.addEventListener(TransformEvent_1.default.INVALIDATE_MATRIX3D, function (event) { return _this._onInvalidateMatrix3D(event); });\n        this._transform.addEventListener(TransformEvent_1.default.INVALIDATE_COLOR_TRANSFORM, function (event) { return _this._onInvalidateColorTransform(event); });\n        //default bounds type\n        this._boundsType = BoundsType_1.default.AXIS_ALIGNED_BOX;\n    }\n    Object.defineProperty(DisplayObject.prototype, \"adapter\", {\n        /**\n         * adapter is used to provide MovieClip to scripts taken from different platforms\n         * setter typically managed by factory\n         */\n        get: function () {\n            return this._adapter;\n        },\n        set: function (value) {\n            this._adapter = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"inheritColorTransform\", {\n        get: function () {\n            return this._inheritColorTransform;\n        },\n        set: function (value) {\n            if (this._inheritColorTransform == value)\n                return;\n            this._inheritColorTransform = value;\n            this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.default.COLOR_TRANSFORM);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"alpha\", {\n        /**\n         * Indicates the alpha transparency value of the object specified. Valid\n         * values are 0(fully transparent) to 1(fully opaque). The default value is\n         * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n         * even though they are invisible.\n         */\n        get: function () {\n            return this._transform.colorTransform ? this._transform.colorTransform.alphaMultiplier : 1;\n        },\n        set: function (value) {\n            if (!this._transform.colorTransform)\n                this._transform.colorTransform = new ColorTransform_1.default();\n            this._transform.colorTransform.alphaMultiplier = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"boundsType\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._boundsType;\n        },\n        set: function (value) {\n            if (this._boundsType == value)\n                return;\n            this._boundsType = value;\n            this.invalidate();\n            this._pInvalidateBounds();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"depth\", {\n        /**\n         * Indicates the depth of the display object, in pixels. The depth is\n         * calculated based on the bounds of the content of the display object. When\n         * you set the <code>depth</code> property, the <code>scaleZ</code> property\n         * is adjusted accordingly, as shown in the following code:\n         *\n         * <p>Except for TextField and Video objects, a display object with no\n         * content (such as an empty sprite) has a depth of 0, even if you try to\n         * set <code>depth</code> to a different value.</p>\n         */\n        get: function () {\n            return this.getBox().depth * this.scaleZ;\n        },\n        set: function (val) {\n            if (this._depth == val)\n                return;\n            this._depth = val;\n            this._setScaleZ(val / this.getBox().depth);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"eulers\", {\n        /**\n         * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n         */\n        get: function () {\n            if (!this._eulers)\n                this._eulers = new Vector3D_1.default();\n            this._eulers.x = this.rotationX;\n            this._eulers.y = this.rotationY;\n            this._eulers.z = this.rotationZ;\n            return this._eulers;\n        },\n        set: function (value) {\n            this.rotationX = value.x;\n            this.rotationY = value.y;\n            this.rotationZ = value.z;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"height\", {\n        /**\n         * An indexed array that contains each filter object currently associated\n         * with the display object. The flash.filters package contains several\n         * classes that define specific filters you can use.\n         *\n         * <p>Filters can be applied in Flash Professional at design time, or at run\n         * time by using ActionScript code. To apply a filter by using ActionScript,\n         * you must make a temporary copy of the entire <code>filters</code> array,\n         * modify the temporary array, then assign the value of the temporary array\n         * back to the <code>filters</code> array. You cannot directly add a new\n         * filter object to the <code>filters</code> array.</p>\n         *\n         * <p>To add a filter by using ActionScript, perform the following steps\n         * (assume that the target display object is named\n         * <code>myDisplayObject</code>):</p>\n         *\n         * <ol>\n         *   <li>Create a new filter object by using the constructor method of your\n         * chosen filter class.</li>\n         *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n         * to a temporary array, such as one named <code>myFilters</code>.</li>\n         *   <li>Add the new filter object to the <code>myFilters</code> temporary\n         * array.</li>\n         *   <li>Assign the value of the temporary array to the\n         * <code>myDisplayObject.filters</code> array.</li>\n         * </ol>\n         *\n         * <p>If the <code>filters</code> array is undefined, you do not need to use\n         * a temporary array. Instead, you can directly assign an array literal that\n         * contains one or more filter objects that you create. The first example in\n         * the Examples section adds a drop shadow filter by using code that handles\n         * both defined and undefined <code>filters</code> arrays.</p>\n         *\n         * <p>To modify an existing filter object, you must use the technique of\n         * modifying a copy of the <code>filters</code> array:</p>\n         *\n         * <ol>\n         *   <li>Assign the value of the <code>filters</code> array to a temporary\n         * array, such as one named <code>myFilters</code>.</li>\n         *   <li>Modify the property by using the temporary array,\n         * <code>myFilters</code>. For example, to set the quality property of the\n         * first filter in the array, you could use the following code:\n         * <code>myFilters[0].quality = 1;</code></li>\n         *   <li>Assign the value of the temporary array to the <code>filters</code>\n         * array.</li>\n         * </ol>\n         *\n         * <p>At load time, if a display object has an associated filter, it is\n         * marked to cache itself as a transparent bitmap. From this point forward,\n         * as long as the display object has a valid filter list, the player caches\n         * the display object as a bitmap. This source bitmap is used as a source\n         * image for the filter effects. Each display object usually has two bitmaps:\n         * one with the original unfiltered source display object and another for the\n         * final image after filtering. The final image is used when rendering. As\n         * long as the display object does not change, the final image does not need\n         * updating.</p>\n         *\n         * <p>The flash.filters package includes classes for filters. For example, to\n         * create a DropShadow filter, you would write:</p>\n         *\n         * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n         *                       and the shader output type is not compatible with\n         *                       this operation(the shader must specify a\n         *                       <code>pixel4</code> output).\n         * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n         *                       and the shader doesn't specify any image input or\n         *                       the first input is not an <code>image4</code> input.\n         * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n         *                       and the shader specifies an image input that isn't\n         *                       provided.\n         * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n         *                       ByteArray or Vector.<Number> instance as a shader\n         *                       input, and the <code>width</code> and\n         *                       <code>height</code> properties aren't specified for\n         *                       the ShaderInput object, or the specified values\n         *                       don't match the amount of data in the input data.\n         *                       See the <code>ShaderInput.input</code> property for\n         *                       more information.\n         */\n        //\t\tpublic filters:Array<Dynamic>;\n        /**\n         * Indicates the height of the display object, in pixels. The height is\n         * calculated based on the bounds of the content of the display object. When\n         * you set the <code>height</code> property, the <code>scaleY</code> property\n         * is adjusted accordingly, as shown in the following code:\n         *\n         * <p>Except for TextField and Video objects, a display object with no\n         * content (such as an empty sprite) has a height of 0, even if you try to\n         * set <code>height</code> to a different value.</p>\n         */\n        get: function () {\n            return this.getBox().height * this.scaleY;\n        },\n        set: function (val) {\n            if (this._height == val)\n                return;\n            this._height = val;\n            this._setScaleY(val / this.getBox().height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"index\", {\n        /**\n         * Indicates the instance container index of the DisplayObject. The object can be\n         * identified in the child list of its parent display object container by\n         * calling the <code>getChildByIndex()</code> method of the display object\n         * container.\n         *\n         * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n         */\n        get: function () {\n            if (this._pParent)\n                return this._pParent.getChildIndex(this);\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"inverseSceneTransform\", {\n        /**\n         *\n         */\n        get: function () {\n            if (this._inverseSceneTransformDirty) {\n                this._inverseSceneTransform.copyFrom(this.sceneTransform);\n                this._inverseSceneTransform.invert();\n                this._inverseSceneTransformDirty = false;\n            }\n            return this._inverseSceneTransform;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"isEntity\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._pIsEntity;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"isContainer\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._pIsContainer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"loaderInfo\", {\n        /**\n         * Returns a LoaderInfo object containing information about loading the file\n         * to which this display object belongs. The <code>loaderInfo</code> property\n         * is defined only for the root display object of a SWF file or for a loaded\n         * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n         * <code>loaderInfo</code> object associated with the SWF file that contains\n         * a display object named <code>myDisplayObject</code>, use\n         * <code>myDisplayObject.root.loaderInfo</code>.\n         *\n         * <p>A large SWF file can monitor its download by calling\n         * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n         * func)</code>.</p>\n         */\n        get: function () {\n            return this._loaderInfo;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"maskMode\", {\n        get: function () {\n            return this._maskMode;\n        },\n        set: function (value) {\n            if (this._maskMode == value)\n                return;\n            this._maskMode = value;\n            this._explicitMaskId = value ? this.id : -1;\n            this._updateMaskMode();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"mouseEnabled\", {\n        /**\n         * Specifies whether this object receives mouse, or other user input,\n         * messages. The default value is <code>true</code>, which means that by\n         * default any InteractiveObject instance that is on the display list\n         * receives mouse events or other user input events. If\n         * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n         * not receive any mouse events(or other user input events like keyboard\n         * events). Any children of this instance on the display list are not\n         * affected. To change the <code>mouseEnabled</code> behavior for all\n         * children of an object on the display list, use\n         * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n         *\n         * <p> No event is dispatched by setting this property. You must use the\n         * <code>addEventListener()</code> method to create interactive\n         * functionality.</p>\n         */\n        get: function () {\n            return this._explicitMouseEnabled;\n        },\n        set: function (value) {\n            if (this._explicitMouseEnabled == value)\n                return;\n            this._explicitMouseEnabled = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"mouseX\", {\n        /**\n         * Indicates the x coordinate of the mouse or user input device position, in\n         * pixels.\n         *\n         * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n         * coordinate will reflect the non-rotated object.</p>\n         */\n        get: function () {\n            return this._mouseX;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"mouseY\", {\n        /**\n         * Indicates the y coordinate of the mouse or user input device position, in\n         * pixels.\n         *\n         * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n         * coordinate will reflect the non-rotated object.</p>\n         */\n        get: function () {\n            return this._mouseY;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"name\", {\n        /**\n         * Indicates the instance name of the DisplayObject. The object can be\n         * identified in the child list of its parent display object container by\n         * calling the <code>getChildByName()</code> method of the display object\n         * container.\n         *\n         * @throws IllegalOperationError If you are attempting to set this property\n         *                               on an object that was placed on the timeline\n         *                               in the Flash authoring tool.\n         */\n        get: function () {\n            return this._pName;\n        },\n        set: function (value) {\n            this._pName = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"parent\", {\n        /**\n         * Indicates the DisplayObjectContainer object that contains this display\n         * object. Use the <code>parent</code> property to specify a relative path to\n         * display objects that are above the current display object in the display\n         * list hierarchy.\n         *\n         * <p>You can use <code>parent</code> to move up multiple levels in the\n         * display list as in the following:</p>\n         *\n         * @throws SecurityError The parent display object belongs to a security\n         *                       sandbox to which you do not have access. You can\n         *                       avoid this situation by having the parent movie call\n         *                       the <code>Security.allowDomain()</code> method.\n         */\n        get: function () {\n            return this._pParent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"partition\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._explicitPartition;\n        },\n        set: function (value) {\n            if (this._explicitPartition == value)\n                return;\n            this._explicitPartition = value;\n            this._iSetScene(this._pScene, this._pParent ? this._pParent._iAssignedPartition : null);\n            this.dispatchEvent(new DisplayObjectEvent_1.default(DisplayObjectEvent_1.default.PARTITION_CHANGED, this));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"pivot\", {\n        /**\n         * Defines the local point around which the object rotates.\n         */\n        get: function () {\n            return this._pivot;\n        },\n        set: function (pivot) {\n            if (this._pivot && this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\n                return;\n            if (!pivot) {\n                this._pivot = null;\n                this._pivotScale = null;\n            }\n            else {\n                if (!this._pivot)\n                    this._pivot = new Vector3D_1.default();\n                this._pivot.x = pivot.x;\n                this._pivot.y = pivot.y;\n                this._pivot.z = pivot.z;\n            }\n            this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.default.SCENE_TRANSFORM);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"root\", {\n        /**\n         * For a display object in a loaded SWF file, the <code>root</code> property\n         * is the top-most display object in the portion of the display list's tree\n         * structure represented by that SWF file. For a Bitmap object representing a\n         * loaded image file, the <code>root</code> property is the Bitmap object\n         * itself. For the instance of the main class of the first SWF file loaded,\n         * the <code>root</code> property is the display object itself. The\n         * <code>root</code> property of the Scene object is the Scene object itself.\n         * The <code>root</code> property is set to <code>null</code> for any display\n         * object that has not been added to the display list, unless it has been\n         * added to a display object container that is off the display list but that\n         * is a child of the top-most display object in a loaded SWF file.\n         *\n         * <p>For example, if you create a new Sprite object by calling the\n         * <code>Sprite()</code> constructor method, its <code>root</code> property\n         * is <code>null</code> until you add it to the display list(or to a display\n         * object container that is off the display list but that is a child of the\n         * top-most display object in a SWF file).</p>\n         *\n         * <p>For a loaded SWF file, even though the Loader object used to load the\n         * file may not be on the display list, the top-most display object in the\n         * SWF file has its <code>root</code> property set to itself. The Loader\n         * object does not have its <code>root</code> property set until it is added\n         * as a child of a display object for which the <code>root</code> property is\n         * set.</p>\n         */\n        get: function () {\n            return this._root;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"rotationX\", {\n        /**\n         * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n         * from its original orientation relative to the 3D parent container. Values\n         * from 0 to 180 represent clockwise rotation; values from 0 to -180\n         * represent counterclockwise rotation. Values outside this range are added\n         * to or subtracted from 360 to obtain a value within the range.\n         */\n        get: function () {\n            return this._transform.rotation.x * MathConsts_1.default.RADIANS_TO_DEGREES;\n        },\n        set: function (val) {\n            if (this.rotationX == val)\n                return;\n            this._transform.rotation.x = val * MathConsts_1.default.DEGREES_TO_RADIANS;\n            this._transform.invalidateMatrix3D();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"rotationY\", {\n        /**\n         * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n         * from its original orientation relative to the 3D parent container. Values\n         * from 0 to 180 represent clockwise rotation; values from 0 to -180\n         * represent counterclockwise rotation. Values outside this range are added\n         * to or subtracted from 360 to obtain a value within the range.\n         */\n        get: function () {\n            return this._transform.rotation.y * MathConsts_1.default.RADIANS_TO_DEGREES;\n        },\n        set: function (val) {\n            if (this.rotationY == val)\n                return;\n            this._transform.rotation.y = val * MathConsts_1.default.DEGREES_TO_RADIANS;\n            this._transform.invalidateMatrix3D();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"rotationZ\", {\n        /**\n         * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n         * from its original orientation relative to the 3D parent container. Values\n         * from 0 to 180 represent clockwise rotation; values from 0 to -180\n         * represent counterclockwise rotation. Values outside this range are added\n         * to or subtracted from 360 to obtain a value within the range.\n         */\n        get: function () {\n            return this._transform.rotation.z * MathConsts_1.default.RADIANS_TO_DEGREES;\n        },\n        set: function (val) {\n            if (this.rotationZ == val)\n                return;\n            this._transform.rotation.z = val * MathConsts_1.default.DEGREES_TO_RADIANS;\n            this._transform.invalidateMatrix3D();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"scaleX\", {\n        /**\n         * Indicates the horizontal scale(percentage) of the object as applied from\n         * the registration point. The default registration point is(0,0). 1.0\n         * equals 100% scale.\n         *\n         * <p>Scaling the local coordinate system changes the <code>x</code> and\n         * <code>y</code> property values, which are defined in whole pixels. </p>\n         */\n        get: function () {\n            return this._transform.scale.x;\n        },\n        set: function (val) {\n            //remove absolute width\n            this._width = null;\n            this._setScaleX(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"scaleY\", {\n        /**\n         * Indicates the vertical scale(percentage) of an object as applied from the\n         * registration point of the object. The default registration point is(0,0).\n         * 1.0 is 100% scale.\n         *\n         * <p>Scaling the local coordinate system changes the <code>x</code> and\n         * <code>y</code> property values, which are defined in whole pixels. </p>\n         */\n        get: function () {\n            return this._transform.scale.y;\n        },\n        set: function (val) {\n            //remove absolute height\n            this._height = null;\n            this._setScaleY(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"scaleZ\", {\n        /**\n         * Indicates the depth scale(percentage) of an object as applied from the\n         * registration point of the object. The default registration point is(0,0).\n         * 1.0 is 100% scale.\n         *\n         * <p>Scaling the local coordinate system changes the <code>x</code>,\n         * <code>y</code> and <code>z</code> property values, which are defined in\n         * whole pixels. </p>\n         */\n        get: function () {\n            return this._transform.scale.z;\n        },\n        set: function (val) {\n            //remove absolute depth\n            this._depth = null;\n            this._setScaleZ(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"skewX\", {\n        /**\n         * Indicates the horizontal skew(angle) of the object as applied from\n         * the registration point. The default registration point is(0,0).\n         */\n        get: function () {\n            return this._transform.skew.x;\n        },\n        set: function (val) {\n            if (this.skewX == val)\n                return;\n            this._transform.skew.x = val;\n            this._transform.invalidateMatrix3D();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"skewY\", {\n        /**\n         * Indicates the vertical skew(angle) of an object as applied from the\n         * registration point of the object. The default registration point is(0,0).\n         */\n        get: function () {\n            return this._transform.skew.y;\n        },\n        set: function (val) {\n            if (this.skewY == val)\n                return;\n            this._transform.skew.y = val;\n            this._transform.invalidateMatrix3D();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"skewZ\", {\n        /**\n         * Indicates the depth skew(angle) of an object as applied from the\n         * registration point of the object. The default registration point is(0,0).\n         */\n        get: function () {\n            return this._transform.skew.z;\n        },\n        set: function (val) {\n            if (this.skewZ == val)\n                return;\n            this._transform.skew.z = val;\n            this._transform.invalidateMatrix3D();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"scene\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._pScene;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"scenePosition\", {\n        /**\n         *\n         */\n        get: function () {\n            if (this._scenePositionDirty) {\n                if (this._pivot && this.alignmentMode == AlignmentMode_1.default.PIVOT_POINT) {\n                    this._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n                }\n                else {\n                    this.sceneTransform.copyColumnTo(3, this._scenePosition);\n                }\n                this._scenePositionDirty = false;\n            }\n            return this._scenePosition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"sceneTransform\", {\n        get: function () {\n            if (this._hierarchicalPropsDirty & HierarchicalProperties_1.default.SCENE_TRANSFORM)\n                this.pUpdateSceneTransform();\n            return this._pSceneTransform;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"shaderPickingDetails\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._shaderPickingDetails;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"debugVisible\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._debugVisible;\n        },\n        set: function (value) {\n            if (value == this._debugVisible)\n                return;\n            this._debugVisible = value;\n            this.invalidate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"transform\", {\n        /**\n         * An object with properties pertaining to a display object's matrix, color\n         * transform, and pixel bounds. The specific properties  -  matrix,\n         * colorTransform, and three read-only properties\n         * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n         * and <code>pixelBounds</code>)  -  are described in the entry for the\n         * Transform class.\n         *\n         * <p>Each of the transform object's properties is itself an object. This\n         * concept is important because the only way to set new values for the matrix\n         * or colorTransform objects is to create a new object and copy that object\n         * into the transform.matrix or transform.colorTransform property.</p>\n         *\n         * <p>For example, to increase the <code>tx</code> value of a display\n         * object's matrix, you must make a copy of the entire matrix object, then\n         * copy the new object into the matrix property of the transform object:</p>\n         * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n         * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n         * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n         *\n         * <p>You cannot directly set the <code>tx</code> property. The following\n         * code has no effect on <code>myDisplayObject</code>: </p>\n         * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n         * 10; </code></pre>\n         *\n         * <p>You can also copy an entire transform object and assign it to another\n         * display object's transform property. For example, the following code\n         * copies the entire transform object from <code>myOldDisplayObj</code> to\n         * <code>myNewDisplayObj</code>:</p>\n         * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n         *\n         * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n         * same values for its matrix, color transform, and pixel bounds as the old\n         * display object, <code>myOldDisplayObj</code>.</p>\n         *\n         * <p>Note that AIR for TV devices use hardware acceleration, if it is\n         * available, for color transforms.</p>\n         */\n        get: function () {\n            return this._transform;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"visible\", {\n        /**\n         * Whether or not the display object is visible. Display objects that are not\n         * visible are disabled. For example, if <code>visible=false</code> for an\n         * InteractiveObject instance, it cannot be clicked.\n         */\n        get: function () {\n            return this._explicitVisibility;\n        },\n        set: function (value) {\n            if (this._explicitVisibility == value)\n                return;\n            this._explicitVisibility = value;\n            this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.default.VISIBLE);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"masks\", {\n        get: function () {\n            return this._explicitMasks;\n        },\n        set: function (value) {\n            if (this._explicitMasks == value)\n                return;\n            this._explicitMasks = value;\n            //make sure maskMode is set to true for all masks\n            if (value != null && value.length) {\n                var len = value.length;\n                for (var i = 0; i < len; i++)\n                    value[i].maskMode = true;\n            }\n            this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.default.MASKS);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"width\", {\n        /**\n         * Indicates the width of the display object, in pixels. The width is\n         * calculated based on the bounds of the content of the display object. When\n         * you set the <code>width</code> property, the <code>scaleX</code> property\n         * is adjusted accordingly, as shown in the following code:\n         *\n         * <p>Except for TextField and Video objects, a display object with no\n         * content(such as an empty sprite) has a width of 0, even if you try to set\n         * <code>width</code> to a different value.</p>\n         */\n        get: function () {\n            return this.getBox().width * this.scaleX;\n        },\n        set: function (val) {\n            if (this._width == val)\n                return;\n            this._width = val;\n            this._setScaleX(val / this.getBox().width);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"x\", {\n        /**\n         * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n         * to the local coordinates of the parent DisplayObjectContainer. If the\n         * object is inside a DisplayObjectContainer that has transformations, it is\n         * in the local coordinate system of the enclosing DisplayObjectContainer.\n         * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n         * DisplayObjectContainer's children inherit a coordinate system that is\n         * rotated 90° counterclockwise. The object's coordinates refer to the\n         * registration point position.\n         */\n        get: function () {\n            return this._transform.position.x;\n        },\n        set: function (val) {\n            if (this._transform.position.x == val)\n                return;\n            this._transform.matrix3D.rawData[12] = val;\n            this._transform.invalidatePosition();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"y\", {\n        /**\n         * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n         * to the local coordinates of the parent DisplayObjectContainer. If the\n         * object is inside a DisplayObjectContainer that has transformations, it is\n         * in the local coordinate system of the enclosing DisplayObjectContainer.\n         * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n         * DisplayObjectContainer's children inherit a coordinate system that is\n         * rotated 90° counterclockwise. The object's coordinates refer to the\n         * registration point position.\n         */\n        get: function () {\n            return this._transform.position.y;\n        },\n        set: function (val) {\n            if (this._transform.position.y == val)\n                return;\n            this._transform.matrix3D.rawData[13] = val;\n            this._transform.invalidatePosition();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"z\", {\n        /**\n         * Indicates the z coordinate position along the z-axis of the DisplayObject\n         * instance relative to the 3D parent container. The z property is used for\n         * 3D coordinates, not screen or pixel coordinates.\n         *\n         * <p>When you set a <code>z</code> property for a display object to\n         * something other than the default value of <code>0</code>, a corresponding\n         * Matrix3D object is automatically created. for adjusting a display object's\n         * position and orientation in three dimensions. When working with the\n         * z-axis, the existing behavior of x and y properties changes from screen or\n         * pixel coordinates to positions relative to the 3D parent container.</p>\n         *\n         * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n         * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n         * wherever the 3D projection calculation puts it. The calculation is:</p>\n         *\n         * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n         * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n         */\n        get: function () {\n            return this._transform.position.z;\n        },\n        set: function (val) {\n            if (this._transform.position.z == val)\n                return;\n            this._transform.matrix3D.rawData[14] = val;\n            this._transform.invalidatePosition();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    DisplayObject.prototype.addEventListener = function (type, listener) {\n        _super.prototype.addEventListener.call(this, type, listener);\n        switch (type) {\n            case DisplayObjectEvent_1.default.SCENE_CHANGED:\n                this._listenToSceneChanged = true;\n                break;\n            case DisplayObjectEvent_1.default.SCENETRANSFORM_CHANGED:\n                this._listenToSceneTransformChanged = true;\n                break;\n        }\n    };\n    /**\n     *\n     */\n    DisplayObject.prototype.clone = function () {\n        var newInstance = new DisplayObject();\n        this.copyTo(newInstance);\n        return newInstance;\n    };\n    DisplayObject.prototype.copyTo = function (newInstance) {\n        newInstance.partition = this._explicitPartition;\n        newInstance.boundsType = this._boundsType;\n        newInstance.pivot = this._pivot;\n        newInstance.name = this._pName;\n        newInstance.mouseEnabled = this._explicitMouseEnabled;\n        newInstance.extra = this.extra;\n        newInstance.maskMode = this._maskMode;\n        newInstance.castsShadows = this.castsShadows;\n        if (this._explicitMasks)\n            newInstance.masks = this._explicitMasks;\n        if (this._adapter)\n            newInstance.adapter = this._adapter.clone(newInstance);\n        newInstance._transform.matrix3D = this._transform.matrix3D;\n        if (this._transform.colorTransform)\n            newInstance.transform.colorTransform = this._transform.colorTransform.clone();\n    };\n    /**\n     *\n     */\n    DisplayObject.prototype.dispose = function () {\n        this.disposeValues();\n    };\n    DisplayObject.prototype.disposeValues = function () {\n        if (this._pParent)\n            this._pParent.removeChild(this);\n        //if (this._adapter) {\n        //\tthis._adapter.dispose();\n        //\tthis._adapter = null;\n        //}\n        //this._pos = null;\n        //this._rot = null;\n        //this._sca = null;\n        //this._ske = null;\n        //this._transformComponents = null;\n        //this._transform.dispose();\n        //this._transform = null;\n        //\n        //this._matrix3D = null;\n        //this._pSceneTransform = null;\n        //this._inverseSceneTransform = null;\n        this._explicitMasks = null;\n    };\n    /**\n     * Returns a rectangle that defines the area of the display object relative\n     * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n     * Consider the following code, which shows how the rectangle returned can\n     * vary depending on the <code>targetCoordinateSpace</code> parameter that\n     * you pass to the method:\n     *\n     * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n     * <code>globalToLocal()</code> methods to convert the display object's local\n     * coordinates to display coordinates, or display coordinates to local\n     * coordinates, respectively.</p>\n     *\n     * <p>The <code>getBounds()</code> method is similar to the\n     * <code>getRect()</code> method; however, the Rectangle returned by the\n     * <code>getBounds()</code> method includes any strokes on shapes, whereas\n     * the Rectangle returned by the <code>getRect()</code> method does not. For\n     * an example, see the description of the <code>getRect()</code> method.</p>\n     *\n     * @param targetCoordinateSpace The display object that defines the\n     *                              coordinate system to use.\n     * @return The rectangle that defines the area of the display object relative\n     *         to the <code>targetCoordinateSpace</code> object's coordinate\n     *         system.\n     */\n    DisplayObject.prototype.getBounds = function (targetCoordinateSpace) {\n        return this._bounds; //TODO\n    };\n    /**\n     * Returns a rectangle that defines the boundary of the display object, based\n     * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n     * parameter, excluding any strokes on shapes. The values that the\n     * <code>getRect()</code> method returns are the same or smaller than those\n     * returned by the <code>getBounds()</code> method.\n     *\n     * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n     * <code>globalToLocal()</code> methods to convert the display object's local\n     * coordinates to Scene coordinates, or Scene coordinates to local\n     * coordinates, respectively.</p>\n     *\n     * @param targetCoordinateSpace The display object that defines the\n     *                              coordinate system to use.\n     * @return The rectangle that defines the area of the display object relative\n     *         to the <code>targetCoordinateSpace</code> object's coordinate\n     *         system.\n     */\n    DisplayObject.prototype.getRect = function (targetCoordinateSpace) {\n        if (targetCoordinateSpace === void 0) { targetCoordinateSpace = null; }\n        return this._bounds; //TODO\n    };\n    DisplayObject.prototype.getBox = function (targetCoordinateSpace) {\n        if (targetCoordinateSpace === void 0) { targetCoordinateSpace = null; }\n        if (this._iSourcePrefab)\n            this._iSourcePrefab._iValidate();\n        //TODO targetCoordinateSpace\n        if (this._boxBoundsInvalid) {\n            this._pUpdateBoxBounds();\n            //scale updates if absolute dimensions are detected\n            if (this._width != null)\n                this._setScaleX(this._width / this._pBoxBounds.width);\n            if (this._height != null)\n                this._setScaleY(this._height / this._pBoxBounds.height);\n            if (this._depth != null)\n                this._setScaleZ(this._depth / this._pBoxBounds.depth);\n        }\n        if (targetCoordinateSpace == null || targetCoordinateSpace == this)\n            return this._pBoxBounds;\n        if (targetCoordinateSpace == this._pParent)\n            return this._transform.matrix3D.transformBox(this._pBoxBounds);\n        else\n            return targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n    };\n    DisplayObject.prototype.getSphere = function (targetCoordinateSpace) {\n        if (targetCoordinateSpace === void 0) { targetCoordinateSpace = null; }\n        if (this._iSourcePrefab)\n            this._iSourcePrefab._iValidate();\n        if (this._sphereBoundsInvalid)\n            this._pUpdateSphereBounds();\n        return this._pSphereBounds;\n    };\n    /**\n     * Converts the <code>point</code> object from the Scene(global) coordinates\n     * to the display object's(local) coordinates.\n     *\n     * <p>To use this method, first create an instance of the Point class. The\n     * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n     * because they relate to the origin(0,0) of the main display area. Then\n     * pass the Point instance as the parameter to the\n     * <code>globalToLocal()</code> method. The method returns a new Point object\n     * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n     * object instead of the origin of the Scene.</p>\n     *\n     * @param point An object created with the Point class. The Point object\n     *              specifies the <i>x</i> and <i>y</i> coordinates as\n     *              properties.\n     * @return A Point object with coordinates relative to the display object.\n     */\n    DisplayObject.prototype.globalToLocal = function (point, target) {\n        if (target === void 0) { target = null; }\n        this._tempVector3D.setTo(point.x, point.y, 0);\n        var pos = this.inverseSceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n        if (!target)\n            target = new Point_1.default();\n        target.x = pos.x;\n        target.y = pos.y;\n        return target;\n    };\n    /**\n     * Converts a two-dimensional point from the Scene(global) coordinates to a\n     * three-dimensional display object's(local) coordinates.\n     *\n     * <p>To use this method, first create an instance of the Vector3D class. The x,\n     * y and z values that you assign to the Vector3D object represent global\n     * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n     * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n     * <code>position</code> parameter.\n     * The method returns three-dimensional coordinates as a Vector3D object\n     * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n     * are relative to the origin of the three-dimensional display object.</p>\n     *\n     * @param point A Vector3D object representing global x, y and z coordinates in\n     *              the scene.\n     * @return A Vector3D object with coordinates relative to the three-dimensional\n     *         display object.\n     */\n    DisplayObject.prototype.globalToLocal3D = function (position) {\n        return this.inverseSceneTransform.transformVector(position);\n    };\n    /**\n     * Evaluates the bounding box of the display object to see if it overlaps or\n     * intersects with the bounding box of the <code>obj</code> display object.\n     *\n     * @param obj The display object to test against.\n     * @return <code>true</code> if the bounding boxes of the display objects\n     *         intersect; <code>false</code> if not.\n     */\n    DisplayObject.prototype.hitTestObject = function (obj) {\n        var objBox = obj.getBox();\n        if (!objBox)\n            return false;\n        var topLeft = new Point_1.default(objBox.x, objBox.y);\n        var bottomLeft = new Point_1.default(objBox.x, objBox.y - objBox.height);\n        var topRight = new Point_1.default(objBox.x + objBox.width, objBox.y);\n        var bottomRight = new Point_1.default(objBox.x + objBox.width, objBox.y - objBox.height);\n        topLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n        bottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n        topRight = this.globalToLocal(obj.localToGlobal(topRight));\n        bottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n        var box = this.getBox();\n        if (!box)\n            return false;\n        //first check all points against targer box\n        if (topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom)\n            return true;\n        if (bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom)\n            return true;\n        if (topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom)\n            return true;\n        if (bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom)\n            return true;\n        //now test against obj box\n        var n0x = topRight.y - topLeft.y;\n        var n0y = -(topRight.x - topLeft.x);\n        var n1x = bottomRight.y - topRight.y;\n        var n1y = -(bottomRight.x - topRight.x);\n        var n2x = bottomLeft.y - bottomRight.y;\n        var n2y = -(bottomLeft.x - bottomRight.x);\n        var n3x = topLeft.y - bottomLeft.y;\n        var n3y = -(topLeft.x - bottomLeft.x);\n        var p0x = box.left - topLeft.x;\n        var p0y = box.top - topLeft.y;\n        var p1x = box.left - topRight.x;\n        var p1y = box.top - topRight.y;\n        var p2x = box.left - bottomRight.x;\n        var p2y = box.top - bottomRight.y;\n        var p3x = box.left - bottomLeft.x;\n        var p3y = box.top - bottomLeft.y;\n        var dot0 = (n0x * p0x) + (n0y * p0y);\n        var dot1 = (n1x * p1x) + (n1y * p1y);\n        var dot2 = (n2x * p2x) + (n2y * p2y);\n        var dot3 = (n3x * p3x) + (n3y * p3y);\n        //check if topLeft is contained\n        if (dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0)\n            return true;\n        p0x = box.right - topLeft.x;\n        p0y = box.top - topLeft.y;\n        p1x = box.right - topRight.x;\n        p1y = box.top - topRight.y;\n        p2x = box.right - bottomRight.x;\n        p2y = box.top - bottomRight.y;\n        p3x = box.right - bottomLeft.x;\n        p3y = box.top - bottomLeft.y;\n        dot0 = (n0x * p0x) + (n0y * p0y);\n        dot1 = (n1x * p1x) + (n1y * p1y);\n        dot2 = (n2x * p2x) + (n2y * p2y);\n        dot3 = (n3x * p3x) + (n3y * p3y);\n        //check if topRight is contained\n        if (dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0)\n            return true;\n        p0x = box.left - topLeft.x;\n        p0y = box.bottom - topLeft.y;\n        p1x = box.left - topRight.x;\n        p1y = box.bottom - topRight.y;\n        p2x = box.left - bottomRight.x;\n        p2y = box.bottom - bottomRight.y;\n        p3x = box.left - bottomLeft.x;\n        p3y = box.bottom - bottomLeft.y;\n        dot0 = (n0x * p0x) + (n0y * p0y);\n        dot1 = (n1x * p1x) + (n1y * p1y);\n        dot2 = (n2x * p2x) + (n2y * p2y);\n        dot3 = (n3x * p3x) + (n3y * p3y);\n        //check if bottomLeft is contained\n        if (dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0)\n            return true;\n        p0x = box.right - topLeft.x;\n        p0y = box.bottom - topLeft.y;\n        p1x = box.right - topRight.x;\n        p1y = box.bottom - topRight.y;\n        p2x = box.right - bottomRight.x;\n        p2y = box.bottom - bottomRight.y;\n        p3x = box.right - bottomLeft.x;\n        p3y = box.bottom - bottomLeft.y;\n        dot0 = (n0x * p0x) + (n0y * p0y);\n        dot1 = (n1x * p1x) + (n1y * p1y);\n        dot2 = (n2x * p2x) + (n2y * p2y);\n        dot3 = (n3x * p3x) + (n3y * p3y);\n        //check if bottomRight is contained\n        if (dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0)\n            return true;\n        return false; //TODO\n    };\n    /**\n     * Evaluates the display object to see if it overlaps or intersects with the\n     * point specified by the <code>x</code> and <code>y</code> parameters. The\n     * <code>x</code> and <code>y</code> parameters specify a point in the\n     * coordinate space of the Scene, not the display object container that\n     * contains the display object(unless that display object container is the\n     * Scene).\n     *\n     * @param x         The <i>x</i> coordinate to test against this object.\n     * @param y         The <i>y</i> coordinate to test against this object.\n     * @param shapeFlag Whether to check against the actual pixels of the object\n     *                 (<code>true</code>) or the bounding box\n     *                 (<code>false</code>).\n     * @param maskFlag Whether to check against the object when it is used as mask\n     *                 (<code>false</code>).\n     * @return <code>true</code> if the display object overlaps or intersects\n     *         with the specified point; <code>false</code> otherwise.\n     */\n    DisplayObject.prototype.hitTestPoint = function (x, y, shapeFlag, masksFlag) {\n        if (shapeFlag === void 0) { shapeFlag = false; }\n        if (masksFlag === void 0) { masksFlag = false; }\n        if (!this._pImplicitVisibility)\n            return;\n        if (this._pImplicitMaskId != -1 && !masksFlag)\n            return;\n        if (this._explicitMasks) {\n            var numMasks = this._explicitMasks.length;\n            var maskHit = false;\n            for (var i = 0; i < numMasks; i++) {\n                if (this._explicitMasks[i].hitTestPoint(x, y, shapeFlag, true)) {\n                    maskHit = true;\n                    break;\n                }\n            }\n            if (!maskHit)\n                return false;\n        }\n        return this._hitTestPointInternal(x, y, shapeFlag, masksFlag);\n    };\n    DisplayObject.prototype.isMask = function () {\n        return this._explicitMaskId == -1;\n    };\n    /**\n     * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n     *\n     * @param    target        The vector defining the point to be looked at\n     * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n     */\n    DisplayObject.prototype.lookAt = function (target, upAxis) {\n        if (upAxis === void 0) { upAxis = null; }\n        var yAxis;\n        var zAxis;\n        var xAxis;\n        var raw;\n        if (upAxis == null)\n            upAxis = Vector3D_1.default.Y_AXIS;\n        else\n            upAxis.normalize();\n        zAxis = target.subtract(this._transform.position);\n        zAxis.normalize();\n        xAxis = upAxis.crossProduct(zAxis);\n        xAxis.normalize();\n        if (xAxis.length < 0.05) {\n            xAxis.x = upAxis.y;\n            xAxis.y = upAxis.x;\n            xAxis.z = 0;\n            xAxis.normalize();\n        }\n        yAxis = zAxis.crossProduct(xAxis);\n        raw = Matrix3DUtils_1.default.RAW_DATA_CONTAINER;\n        raw[0] = xAxis.x;\n        raw[1] = xAxis.y;\n        raw[2] = xAxis.z;\n        raw[3] = 0;\n        raw[4] = yAxis.x;\n        raw[5] = yAxis.y;\n        raw[6] = yAxis.z;\n        raw[7] = 0;\n        raw[8] = zAxis.x;\n        raw[9] = zAxis.y;\n        raw[10] = zAxis.z;\n        raw[11] = 0;\n        var m = new Matrix3D_1.default();\n        m.copyRawDataFrom(raw);\n        var vec = m.decompose()[1];\n        this.rotationX = vec.x * MathConsts_1.default.RADIANS_TO_DEGREES;\n        this.rotationY = vec.y * MathConsts_1.default.RADIANS_TO_DEGREES;\n        this.rotationZ = vec.z * MathConsts_1.default.RADIANS_TO_DEGREES;\n    };\n    /**\n     * Converts the <code>point</code> object from the display object's(local)\n     * coordinates to the Scene(global) coordinates.\n     *\n     * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n     * coordinates from values that are relative to the origin(0,0) of a\n     * specific display object(local coordinates) to values that are relative to\n     * the origin of the Scene(global coordinates).</p>\n     *\n     * <p>To use this method, first create an instance of the Point class. The\n     * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n     * because they relate to the origin of the display object.</p>\n     *\n     * <p>You then pass the Point instance that you created as the parameter to\n     * the <code>localToGlobal()</code> method. The method returns a new Point\n     * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n     * Scene instead of the origin of the display object.</p>\n     *\n     * @param point The name or identifier of a point created with the Point\n     *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n     *              properties.\n     * @return A Point object with coordinates relative to the Scene.\n     */\n    DisplayObject.prototype.localToGlobal = function (point, target) {\n        if (target === void 0) { target = null; }\n        this._tempVector3D.setTo(point.x, point.y, 0);\n        var pos = this.sceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n        if (!target)\n            target = new Point_1.default();\n        target.x = pos.x;\n        target.y = pos.y;\n        return target;\n    };\n    /**\n     * Converts a three-dimensional point of the three-dimensional display\n     * object's(local) coordinates to a three-dimensional point in the Scene\n     * (global) coordinates.\n     *\n     * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n     * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n     * a specific display object(local coordinates) to values that are relative to\n     * the origin of the Scene(global coordinates).</p>\n     *\n     * <p>To use this method, first create an instance of the Point class. The\n     * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n     * because they relate to the origin of the display object.</p>\n     *\n     * <p>You then pass the Vector3D instance that you created as the parameter to\n     * the <code>localToGlobal3D()</code> method. The method returns a new\n     * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n     * the origin of the Scene instead of the origin of the display object.</p>\n     *\n     * @param position A Vector3D object containing either a three-dimensional\n     *                position or the coordinates of the three-dimensional\n     *                display object.\n     * @return A Vector3D object representing a three-dimensional position in\n     *         the Scene.\n     */\n    DisplayObject.prototype.localToGlobal3D = function (position) {\n        return this.sceneTransform.transformVector(position);\n    };\n    /**\n     * Moves the local point around which the object rotates.\n     *\n     * @param    dx        The amount of movement along the local x axis.\n     * @param    dy        The amount of movement along the local y axis.\n     * @param    dz        The amount of movement along the local z axis.\n     */\n    DisplayObject.prototype.movePivot = function (dx, dy, dz) {\n        if (dx == 0 && dy == 0 && dz == 0)\n            return;\n        this._pivot.x += dx;\n        this._pivot.y += dy;\n        this._pivot.z += dz;\n        this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.default.SCENE_TRANSFORM);\n    };\n    DisplayObject.prototype.reset = function () {\n        this.visible = true;\n        if (this._transform.matrix3D)\n            this._transform.clearMatrix3D();\n        if (this._transform.colorTransform)\n            this._transform.clearColorTransform();\n        //this.name=\"\";\n        this.masks = null;\n        this.maskMode = false;\n    };\n    /**\n     *\n     */\n    DisplayObject.prototype.getRenderSceneTransform = function (cameraTransform) {\n        if (this.orientationMode == OrientationMode_1.default.CAMERA_PLANE) {\n            var comps = cameraTransform.decompose();\n            var scale = comps[3];\n            comps[0].copyFrom(this.scenePosition);\n            scale.x = this.scaleX;\n            scale.y = this.scaleY;\n            scale.z = this.scaleZ;\n            this._orientationMatrix.recompose(comps);\n            //add in case of pivot\n            if (this._pivot && this.alignmentMode == AlignmentMode_1.default.PIVOT_POINT)\n                this._orientationMatrix.prependTranslation(-this._pivot.x / this.scaleX, -this._pivot.y / this.scaleY, -this._pivot.z / this.scaleZ);\n            return this._orientationMatrix;\n        }\n        return this.sceneTransform;\n    };\n    /**\n     *\n     */\n    DisplayObject.prototype.removeEventListener = function (type, listener) {\n        _super.prototype.removeEventListener.call(this, type, listener);\n        if (this.hasEventListener(type))\n            return;\n        switch (type) {\n            case DisplayObjectEvent_1.default.SCENE_CHANGED:\n                this._listenToSceneChanged = false;\n                break;\n            case DisplayObjectEvent_1.default.SCENETRANSFORM_CHANGED:\n                this._listenToSceneTransformChanged = true;\n                break;\n        }\n    };\n    Object.defineProperty(DisplayObject.prototype, \"_iAssignedPartition\", {\n        /**\n         * @internal\n         */\n        get: function () {\n            return this._pImplicitPartition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"_iPickingCollision\", {\n        /**\n         * @internal\n         */\n        get: function () {\n            if (!this._pickingCollision)\n                this._pickingCollision = new PickingCollision_1.default(this);\n            return this._pickingCollision;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @internal\n     */\n    DisplayObject.prototype.iSetParent = function (value) {\n        this._pParent = value;\n        if (value)\n            this._iSetScene(value._pScene, value._iAssignedPartition);\n        else\n            this._iSetScene(null, null);\n        this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.default.ALL);\n    };\n    DisplayObject.prototype.pInvalidateHierarchicalProperties = function (propDirty) {\n        var newPropDirty = (this._hierarchicalPropsDirty ^ propDirty) & propDirty;\n        if (!newPropDirty)\n            return true;\n        this._hierarchicalPropsDirty |= propDirty;\n        if (newPropDirty & HierarchicalProperties_1.default.SCENE_TRANSFORM) {\n            this._inverseSceneTransformDirty = true;\n            this._scenePositionDirty = true;\n            if (this.isEntity)\n                this.invalidatePartitionBounds();\n            if (this._pParent)\n                this._pParent._pInvalidateBounds();\n            if (this._listenToSceneTransformChanged)\n                this.queueDispatch(this._sceneTransformChanged || (this._sceneTransformChanged = new DisplayObjectEvent_1.default(DisplayObjectEvent_1.default.SCENETRANSFORM_CHANGED, this)));\n        }\n        return false;\n    };\n    /**\n     * @protected\n     */\n    DisplayObject.prototype._iSetScene = function (scene, partition) {\n        var sceneChanged = this._pScene != scene;\n        if (this._pScene && this._pImplicitPartition) {\n            //unregister partition from current scene\n            this._pScene._iUnregisterPartition(this._pImplicitPartition);\n            //unregister entity from current partition\n            this._pImplicitPartition._iUnregisterEntity(this);\n            //gc abstraction objects\n            this.clear();\n        }\n        // assign parent implicit partition if no explicit one is given\n        this._pImplicitPartition = this._explicitPartition || partition;\n        //assign scene\n        if (sceneChanged)\n            this._pScene = scene;\n        if (this._pScene && this._pImplicitPartition) {\n            //register partition with scene\n            this._pScene._iRegisterPartition(this._pImplicitPartition);\n            //register entity with new partition\n            this._pImplicitPartition._iRegisterEntity(this);\n        }\n        if (sceneChanged && this._listenToSceneChanged)\n            this.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent_1.default(DisplayObjectEvent_1.default.SCENE_CHANGED, this)));\n    };\n    /**\n     * @protected\n     */\n    DisplayObject.prototype.pUpdateSceneTransform = function () {\n        if (this._iController)\n            this._iController.updateController();\n        this._pSceneTransform.copyFrom(this._transform.matrix3D);\n        if (this._pivot) {\n            if (!this._pivotScale)\n                this._pivotScale = new Vector3D_1.default();\n            this._pivotScale.x = this._pivot.x / this._transform.scale.x;\n            this._pivotScale.y = this._pivot.y / this._transform.scale.y;\n            this._pivotScale.z = this._pivot.z / this._transform.scale.z;\n            this._pSceneTransform.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n            if (this.alignmentMode != AlignmentMode_1.default.PIVOT_POINT)\n                this._pSceneTransform.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n        }\n        if (this._pParent && !this._pParent._iIsRoot)\n            this._pSceneTransform.append(this._pParent.sceneTransform);\n        this._matrix3DDirty = false;\n        this._positionDirty = false;\n        this._rotationDirty = false;\n        this._skewDirty = false;\n        this._scaleDirty = false;\n        this._hierarchicalPropsDirty ^= HierarchicalProperties_1.default.SCENE_TRANSFORM;\n    };\n    /**\n     *\n     */\n    DisplayObject.prototype._iInternalUpdate = function () {\n        if (this._iController)\n            this._iController.update();\n        // Dispatch all queued events.\n        var len = this._queuedEvents.length;\n        for (var i = 0; i < len; ++i)\n            this.dispatchEvent(this._queuedEvents[i]);\n        this._queuedEvents.length = 0;\n    };\n    /**\n     * @internal\n     */\n    DisplayObject.prototype._iIsVisible = function () {\n        if (this._hierarchicalPropsDirty & HierarchicalProperties_1.default.VISIBLE)\n            this._updateVisible();\n        return this._pImplicitVisibility;\n    };\n    /**\n     * @internal\n     */\n    DisplayObject.prototype._iAssignedMaskId = function () {\n        if (this._hierarchicalPropsDirty & HierarchicalProperties_1.default.MASK_ID)\n            this._updateMaskId();\n        return this._pImplicitMaskId;\n    };\n    /**\n     * @internal\n     */\n    DisplayObject.prototype._iAssignedMasks = function () {\n        if (this._hierarchicalPropsDirty & HierarchicalProperties_1.default.MASKS)\n            this._updateMasks();\n        return this._pImplicitMasks;\n    };\n    DisplayObject.prototype._iMasksConfig = function () {\n        if (this._hierarchicalPropsDirty & HierarchicalProperties_1.default.MASKS)\n            this._updateMasks();\n        return this._pImplicitMaskIds;\n    };\n    DisplayObject.prototype._iAssignedColorTransform = function () {\n        if (this._hierarchicalPropsDirty & HierarchicalProperties_1.default.COLOR_TRANSFORM)\n            this._updateColorTransform();\n        return this._pImplicitColorTransform;\n    };\n    /**\n     * @internal\n     */\n    DisplayObject.prototype._iIsMouseEnabled = function () {\n        if (this._hierarchicalPropsDirty & HierarchicalProperties_1.default.MOUSE_ENABLED)\n            this._updateMouseEnabled();\n        return this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n    };\n    DisplayObject.prototype._acceptTraverser = function (collector) {\n        //nothing to do here\n    };\n    /**\n     * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n     *\n     * @private\n     */\n    DisplayObject.prototype._onInvalidateMatrix3D = function (event) {\n        if (this._matrix3DDirty)\n            return;\n        this._matrix3DDirty = true;\n        this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.default.SCENE_TRANSFORM);\n    };\n    /**\n     * @private\n     */\n    DisplayObject.prototype._onInvalidateColorTransform = function (event) {\n        this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.default.COLOR_TRANSFORM);\n    };\n    DisplayObject.prototype._pInvalidateBounds = function () {\n        this._boxBoundsInvalid = true;\n        this._sphereBoundsInvalid = true;\n        if (this.isEntity)\n            this.invalidatePartitionBounds();\n        if (this._pParent)\n            this._pParent._pInvalidateBounds();\n    };\n    DisplayObject.prototype._pUpdateBoxBounds = function () {\n        this._boxBoundsInvalid = false;\n        if (this._pBoxBounds == null)\n            this._pBoxBounds = new Box_1.default();\n    };\n    DisplayObject.prototype._pUpdateSphereBounds = function () {\n        this._sphereBoundsInvalid = false;\n        if (this._pSphereBounds == null)\n            this._pSphereBounds = new Sphere_1.default();\n    };\n    DisplayObject.prototype.queueDispatch = function (event) {\n        // Store event to be dispatched later.\n        this._queuedEvents.push(event);\n    };\n    DisplayObject.prototype._setScaleX = function (val) {\n        if (this.scaleX == val)\n            return;\n        this._transform.scale.x = val;\n        this._transform.invalidateMatrix3D();\n    };\n    DisplayObject.prototype._setScaleY = function (val) {\n        if (this.scaleY == val)\n            return;\n        this._transform.scale.y = val;\n        this._transform.invalidateMatrix3D();\n    };\n    DisplayObject.prototype._setScaleZ = function (val) {\n        if (this.scaleZ == val)\n            return;\n        this._transform.scale.z = val;\n        this._transform.invalidateMatrix3D();\n    };\n    DisplayObject.prototype._updateMouseEnabled = function () {\n        this._pImplicitMouseEnabled = (this._pParent) ? this._pParent.mouseChildren && this._pParent._pImplicitMouseEnabled : true;\n        // If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n        if (this._pImplicitMouseEnabled && this._pParent && !this.pickingCollider)\n            this.pickingCollider = this._pParent.pickingCollider;\n        this._hierarchicalPropsDirty ^= HierarchicalProperties_1.default.MOUSE_ENABLED;\n    };\n    DisplayObject.prototype._updateVisible = function () {\n        this._pImplicitVisibility = (this._pParent) ? this._explicitVisibility && this._pParent._iIsVisible() : this._explicitVisibility;\n        this._hierarchicalPropsDirty ^= HierarchicalProperties_1.default.VISIBLE;\n    };\n    DisplayObject.prototype._updateMaskId = function () {\n        this._pImplicitMaskId = (this._pParent && this._pParent._iAssignedMaskId() != -1) ? this._pParent._iAssignedMaskId() : this._explicitMaskId;\n        this._hierarchicalPropsDirty ^= HierarchicalProperties_1.default.MASK_ID;\n    };\n    DisplayObject.prototype._updateMasks = function () {\n        this._pImplicitMasks = (this._pParent && this._pParent._iAssignedMasks()) ? (this._explicitMasks != null) ? this._pParent._iAssignedMasks().concat([this._explicitMasks]) : this._pParent._iAssignedMasks().concat() : (this._explicitMasks != null) ? [this._explicitMasks] : null;\n        this._pImplicitMaskIds.length = 0;\n        if (this._pImplicitMasks && this._pImplicitMasks.length) {\n            var numLayers = this._pImplicitMasks.length;\n            var numChildren;\n            var implicitChildren;\n            var implicitChildIds;\n            for (var i = 0; i < numLayers; i++) {\n                implicitChildren = this._pImplicitMasks[i];\n                numChildren = implicitChildren.length;\n                implicitChildIds = new Array();\n                for (var j = 0; j < numChildren; j++)\n                    implicitChildIds.push(implicitChildren[j].id);\n                this._pImplicitMaskIds.push(implicitChildIds);\n            }\n        }\n        this._hierarchicalPropsDirty ^= HierarchicalProperties_1.default.MASKS;\n    };\n    DisplayObject.prototype._updateColorTransform = function () {\n        if (!this._pImplicitColorTransform)\n            this._pImplicitColorTransform = new ColorTransform_1.default();\n        if (this._inheritColorTransform && this._pParent && this._pParent._iAssignedColorTransform()) {\n            this._pImplicitColorTransform.copyFrom(this._pParent._iAssignedColorTransform());\n            if (this._transform.colorTransform)\n                this._pImplicitColorTransform.prepend(this._transform.colorTransform);\n        }\n        else {\n            if (this._transform.colorTransform)\n                this._pImplicitColorTransform.copyFrom(this._transform.colorTransform);\n            else\n                this._pImplicitColorTransform.clear();\n        }\n        this._hierarchicalPropsDirty ^= HierarchicalProperties_1.default.COLOR_TRANSFORM;\n    };\n    DisplayObject.prototype._updateMaskMode = function () {\n        if (this.maskMode)\n            this.mouseEnabled = false;\n        this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.default.MASK_ID);\n    };\n    DisplayObject.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        var i;\n        this._pImplicitColorTransform = null;\n        this._pImplicitMasks = null;\n    };\n    DisplayObject.prototype.invalidatePartitionBounds = function () {\n        this.dispatchEvent(new DisplayObjectEvent_1.default(DisplayObjectEvent_1.default.INVALIDATE_PARTITION_BOUNDS, this));\n    };\n    DisplayObject.prototype._hitTestPointInternal = function (x, y, shapeFlag, masksFlag) {\n        return false;\n    };\n    return DisplayObject;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DisplayObject;\n\n},{\"awayjs-core/lib/geom/Box\":undefined,\"awayjs-core/lib/geom/ColorTransform\":undefined,\"awayjs-core/lib/geom/MathConsts\":undefined,\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-core/lib/geom/Point\":undefined,\"awayjs-core/lib/geom/Sphere\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined,\"awayjs-display/lib/base/AlignmentMode\":\"awayjs-display/lib/base/AlignmentMode\",\"awayjs-display/lib/base/HierarchicalProperties\":\"awayjs-display/lib/base/HierarchicalProperties\",\"awayjs-display/lib/base/OrientationMode\":\"awayjs-display/lib/base/OrientationMode\",\"awayjs-display/lib/base/Transform\":\"awayjs-display/lib/base/Transform\",\"awayjs-display/lib/bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"awayjs-display/lib/events/DisplayObjectEvent\":\"awayjs-display/lib/events/DisplayObjectEvent\",\"awayjs-display/lib/events/TransformEvent\":\"awayjs-display/lib/events/TransformEvent\",\"awayjs-display/lib/pick/PickingCollision\":\"awayjs-display/lib/pick/PickingCollision\"}],\"awayjs-display/lib/display/IEntity\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/display/LightBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar DisplayObjectContainer_1 = require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nvar LightEvent_1 = require(\"awayjs-display/lib/events/LightEvent\");\nvar LightBase = (function (_super) {\n    __extends(LightBase, _super);\n    function LightBase() {\n        _super.call(this);\n        this._color = 0xffffff;\n        this._colorR = 1;\n        this._colorG = 1;\n        this._colorB = 1;\n        this._ambientColor = 0xffffff;\n        this._ambient = 0;\n        this._iAmbientR = 0;\n        this._iAmbientG = 0;\n        this._iAmbientB = 0;\n        this._specular = 1;\n        this._iSpecularR = 1;\n        this._iSpecularG = 1;\n        this._iSpecularB = 1;\n        this._diffuse = 1;\n        this._iDiffuseR = 1;\n        this._iDiffuseG = 1;\n        this._iDiffuseB = 1;\n        this._shadowsEnabled = false;\n    }\n    Object.defineProperty(LightBase.prototype, \"shadowsEnabled\", {\n        get: function () {\n            return this._shadowsEnabled;\n        },\n        set: function (value) {\n            if (this._shadowsEnabled == value)\n                return;\n            this._shadowsEnabled = value;\n            if (value) {\n                if (this._shadowMapper == null)\n                    this._shadowMapper = this.pCreateShadowMapper();\n                this._shadowMapper.light = this;\n            }\n            else {\n                this._shadowMapper.dispose();\n                this._shadowMapper = null;\n            }\n            //*/\n            this.dispatchEvent(new LightEvent_1.default(LightEvent_1.default.CASTS_SHADOW_CHANGE));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LightBase.prototype.pCreateShadowMapper = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    Object.defineProperty(LightBase.prototype, \"specular\", {\n        get: function () {\n            return this._specular;\n        },\n        set: function (value) {\n            if (value < 0)\n                value = 0;\n            this._specular = value;\n            this.updateSpecular();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightBase.prototype, \"diffuse\", {\n        get: function () {\n            return this._diffuse;\n        },\n        set: function (value) {\n            if (value < 0)\n                value = 0;\n            this._diffuse = value;\n            this.updateDiffuse();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightBase.prototype, \"color\", {\n        get: function () {\n            return this._color;\n        },\n        set: function (value) {\n            this._color = value;\n            this._colorR = ((this._color >> 16) & 0xff) / 0xff;\n            this._colorG = ((this._color >> 8) & 0xff) / 0xff;\n            this._colorB = (this._color & 0xff) / 0xff;\n            this.updateDiffuse();\n            this.updateSpecular();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightBase.prototype, \"ambient\", {\n        get: function () {\n            return this._ambient;\n        },\n        set: function (value) {\n            if (value < 0)\n                value = 0;\n            else if (value > 1)\n                value = 1;\n            this._ambient = value;\n            this.updateAmbient();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightBase.prototype, \"ambientColor\", {\n        get: function () {\n            return this._ambientColor;\n        },\n        set: function (value) {\n            this._ambientColor = value;\n            this.updateAmbient();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LightBase.prototype.updateAmbient = function () {\n        this._iAmbientR = ((this._ambientColor >> 16) & 0xff) / 0xff * this._ambient;\n        this._iAmbientG = ((this._ambientColor >> 8) & 0xff) / 0xff * this._ambient;\n        this._iAmbientB = (this._ambientColor & 0xff) / 0xff * this._ambient;\n    };\n    LightBase.prototype.iGetObjectProjectionMatrix = function (entity, cameraTransform, target) {\n        if (target === void 0) { target = null; }\n        throw new AbstractMethodError_1.default();\n    };\n    LightBase.prototype.updateSpecular = function () {\n        this._iSpecularR = this._colorR * this._specular;\n        this._iSpecularG = this._colorG * this._specular;\n        this._iSpecularB = this._colorB * this._specular;\n    };\n    LightBase.prototype.updateDiffuse = function () {\n        this._iDiffuseR = this._colorR * this._diffuse;\n        this._iDiffuseG = this._colorG * this._diffuse;\n        this._iDiffuseB = this._colorB * this._diffuse;\n    };\n    Object.defineProperty(LightBase.prototype, \"shadowMapper\", {\n        get: function () {\n            return this._shadowMapper;\n        },\n        set: function (value) {\n            this._shadowMapper = value;\n            this._shadowMapper.light = this;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LightBase;\n}(DisplayObjectContainer_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LightBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-display/lib/display/DisplayObjectContainer\":\"awayjs-display/lib/display/DisplayObjectContainer\",\"awayjs-display/lib/events/LightEvent\":\"awayjs-display/lib/events/LightEvent\"}],\"awayjs-display/lib/display/LightProbe\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar SamplerCube_1 = require(\"awayjs-core/lib/image/SamplerCube\");\nvar ErrorBase_1 = require(\"awayjs-core/lib/errors/ErrorBase\");\nvar LightBase_1 = require(\"awayjs-display/lib/display/LightBase\");\nvar BoundsType_1 = require(\"awayjs-display/lib/bounds/BoundsType\");\nvar LightProbe = (function (_super) {\n    __extends(LightProbe, _super);\n    function LightProbe(diffuseMap, specularMap) {\n        if (specularMap === void 0) { specularMap = null; }\n        _super.call(this);\n        this.diffuseSampler = new SamplerCube_1.default();\n        this.specularSampler = new SamplerCube_1.default();\n        this._pIsEntity = true;\n        this.diffuseMap = diffuseMap;\n        this.specularMap = specularMap;\n        //default bounds type\n        this._boundsType = BoundsType_1.default.NULL;\n    }\n    Object.defineProperty(LightProbe.prototype, \"assetType\", {\n        get: function () {\n            return LightProbe.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //@override\n    LightProbe.prototype.iGetObjectProjectionMatrix = function (entity, cameraTransform, target) {\n        if (target === void 0) { target = null; }\n        throw new ErrorBase_1.default(\"Object projection matrices are not supported for LightProbe objects!\");\n    };\n    LightProbe.assetType = \"[light LightProbe]\";\n    return LightProbe;\n}(LightBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LightProbe;\n\n},{\"awayjs-core/lib/errors/ErrorBase\":undefined,\"awayjs-core/lib/image/SamplerCube\":undefined,\"awayjs-display/lib/bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"awayjs-display/lib/display/LightBase\":\"awayjs-display/lib/display/LightBase\"}],\"awayjs-display/lib/display/LineSegment\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar DisplayObject_1 = require(\"awayjs-display/lib/display/DisplayObject\");\nvar BoundsType_1 = require(\"awayjs-display/lib/bounds/BoundsType\");\nvar RenderableEvent_1 = require(\"awayjs-display/lib/events/RenderableEvent\");\nvar StyleEvent_1 = require(\"awayjs-display/lib/events/StyleEvent\");\n/**\n * A Line Segment primitive.\n */\nvar LineSegment = (function (_super) {\n    __extends(LineSegment, _super);\n    /**\n     * Create a line segment\n     *\n     * @param startPosition Start position of the line segment\n     * @param endPosition Ending position of the line segment\n     * @param thickness Thickness of the line\n     */\n    function LineSegment(material, startPosition, endPosition, thickness) {\n        var _this = this;\n        if (thickness === void 0) { thickness = 1; }\n        _super.call(this);\n        this._onInvalidatePropertiesDelegate = function (event) { return _this._onInvalidateProperties(event); };\n        this._pIsEntity = true;\n        this.material = material;\n        this._startPosition = startPosition;\n        this._endPosition = endPosition;\n        this._halfThickness = thickness * 0.5;\n        //default bounds type\n        this._boundsType = BoundsType_1.default.AXIS_ALIGNED_BOX;\n    }\n    Object.defineProperty(LineSegment.prototype, \"animator\", {\n        /**\n         * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n         */\n        get: function () {\n            return this._animator;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineSegment.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            return LineSegment.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineSegment.prototype, \"startPostion\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._startPosition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineSegment.prototype, \"startPosition\", {\n        set: function (value) {\n            if (this._startPosition == value)\n                return;\n            this._startPosition = value;\n            this.invalidateGraphics();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineSegment.prototype, \"endPosition\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._endPosition;\n        },\n        set: function (value) {\n            if (this._endPosition == value)\n                return;\n            this._endPosition = value;\n            this.invalidateGraphics();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineSegment.prototype, \"material\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._material;\n        },\n        set: function (value) {\n            if (this.material)\n                this.material.iRemoveOwner(this);\n            this._material = value;\n            if (this.material)\n                this.material.iAddOwner(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineSegment.prototype, \"thickness\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._halfThickness * 2;\n        },\n        set: function (value) {\n            if (this._halfThickness == value)\n                return;\n            this._halfThickness = value * 0.5;\n            this.invalidateGraphics();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineSegment.prototype, \"style\", {\n        /**\n         * The style used to render the current LineSegment. If set to null, the default style of the material will be used instead.\n         */\n        get: function () {\n            return this._style;\n        },\n        set: function (value) {\n            if (this._style == value)\n                return;\n            if (this._style)\n                this._style.removeEventListener(StyleEvent_1.default.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n            this._style = value;\n            if (this._style)\n                this._style.addEventListener(StyleEvent_1.default.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n            this.invalidateSurface();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @protected\n     */\n    LineSegment.prototype._pUpdateBoxBounds = function () {\n        _super.prototype._pUpdateBoxBounds.call(this);\n        this._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n        this._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n        this._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n        this._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n        this._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n        this._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n    };\n    LineSegment.prototype._pUpdateSphereBounds = function () {\n        _super.prototype._pUpdateSphereBounds.call(this);\n        this._pUpdateBoxBounds();\n        var halfWidth = (this._endPosition.x - this._startPosition.x) / 2;\n        var halfHeight = (this._endPosition.y - this._startPosition.y) / 2;\n        var halfDepth = (this._endPosition.z - this._startPosition.z) / 2;\n        this._pSphereBounds.x = this._startPosition.x + halfWidth;\n        this._pSphereBounds.y = this._startPosition.y + halfHeight;\n        this._pSphereBounds.z = this._startPosition.z + halfDepth;\n        this._pSphereBounds.radius = Math.sqrt(halfWidth * halfWidth + halfHeight * halfHeight + halfDepth * halfDepth);\n    };\n    /**\n     * @private\n     */\n    LineSegment.prototype.invalidateGraphics = function () {\n        this.dispatchEvent(new RenderableEvent_1.default(RenderableEvent_1.default.INVALIDATE_ELEMENTS, this)); //TODO improve performance by only using one geometry for all line segments\n    };\n    LineSegment.prototype.invalidateSurface = function () {\n        this.dispatchEvent(new RenderableEvent_1.default(RenderableEvent_1.default.INVALIDATE_RENDER_OWNER, this));\n    };\n    LineSegment.prototype._onInvalidateProperties = function (event) {\n        this.invalidateSurface();\n    };\n    /**\n     * //TODO\n     *\n     * @param shortestCollisionDistance\n     * @param findClosest\n     * @returns {boolean}\n     *\n     * @internal\n     */\n    LineSegment.prototype._iTestCollision = function (pickingCollision, pickingCollider) {\n        return false; //TODO: detect line collisions\n    };\n    LineSegment.prototype._acceptTraverser = function (traverser) {\n        traverser.applyRenderable(this);\n    };\n    LineSegment.assetType = \"[asset LineSegment]\";\n    return LineSegment;\n}(DisplayObject_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LineSegment;\n\n},{\"awayjs-display/lib/bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"awayjs-display/lib/display/DisplayObject\":\"awayjs-display/lib/display/DisplayObject\",\"awayjs-display/lib/events/RenderableEvent\":\"awayjs-display/lib/events/RenderableEvent\",\"awayjs-display/lib/events/StyleEvent\":\"awayjs-display/lib/events/StyleEvent\"}],\"awayjs-display/lib/display/LoaderContainer\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetLibraryBundle_1 = require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nvar Loader_1 = require(\"awayjs-core/lib/library/Loader\");\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar URLLoaderEvent_1 = require(\"awayjs-core/lib/events/URLLoaderEvent\");\nvar LoaderEvent_1 = require(\"awayjs-core/lib/events/LoaderEvent\");\nvar ParserEvent_1 = require(\"awayjs-core/lib/events/ParserEvent\");\nvar DisplayObjectContainer_1 = require(\"awayjs-display/lib/display/DisplayObjectContainer\");\n/**\n * The LoaderContainer class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the LoaderContainer object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The LoaderContainer class overrides the following methods that it inherits,\n * because a LoaderContainer object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>LoaderContainer</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The LoaderContainer and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the LoaderContainer class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the LoaderContainer object's root SWF file), you may want to define a\n * mask for the LoaderContainer object, to prevent the loaded content(which is a child\n * of the LoaderContainer object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nvar LoaderContainer = (function (_super) {\n    __extends(LoaderContainer, _super);\n    /**\n     * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n     * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n     * as a child of the Loader instance. You can then add the Loader object to\n     * the display list(for instance, by using the <code>addChild()</code>\n     * method of a DisplayObjectContainer instance). The asset appears on the\n     * Stage as it loads.\n     *\n     * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n     * to a display object container on the display list. In this mode, the\n     * Loader instance might be used to load a SWF file that contains additional\n     * modules of an application. </p>\n     *\n     * <p>To detect when the SWF file is finished loading, you can use the events\n     * of the LoaderInfo object associated with the\n     * <code>contentLoaderInfo</code> property of the Loader object. At that\n     * point, the code in the module SWF file can be executed to initialize and\n     * start the module. In the offlist mode, a Loader instance might also be\n     * used to load a SWF file that contains components or media assets. Again,\n     * you can use the LoaderInfo object event notifications to detect when the\n     * components are finished loading. At that point, the application can start\n     * using the components and media assets in the library of the SWF file by\n     * instantiating the ActionScript 3.0 classes that represent those components\n     * and assets.</p>\n     *\n     * <p>To determine the status of a Loader object, monitor the following\n     * events that the LoaderInfo object associated with the\n     * <code>contentLoaderInfo</code> property of the Loader object:</p>\n     *\n     * <ul>\n     *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n     *   <li>The <code>ioError</code> or <code>securityError</code> event is\n     * dispatched if the file cannot be loaded or if an error occured during the\n     * load process. </li>\n     *   <li>The <code>progress</code> event fires continuously while the file is\n     * being loaded.</li>\n     *   <li>The <code>complete</code> event is dispatched when a file completes\n     * downloading, but before the loaded movie clip's methods and properties are\n     * available. </li>\n     *   <li>The <code>init</code> event is dispatched after the properties and\n     * methods of the loaded SWF file are accessible, so you can begin\n     * manipulating the loaded SWF file. This event is dispatched before the\n     * <code>complete</code> handler. In streaming SWF files, the\n     * <code>init</code> event can occur significantly earlier than the\n     * <code>complete</code> event. For most purposes, use the <code>init</code>\n     * handler.</li>\n     * </ul>\n     */\n    function LoaderContainer(useAssetLibrary, assetLibraryId) {\n        var _this = this;\n        if (useAssetLibrary === void 0) { useAssetLibrary = true; }\n        if (assetLibraryId === void 0) { assetLibraryId = null; }\n        _super.call(this);\n        this._useAssetLib = useAssetLibrary;\n        this._assetLibId = assetLibraryId;\n        this._onAssetCompleteDelegate = function (event) { return _this.onAssetComplete(event); };\n        this._onTextureSizeErrorDelegate = function (event) { return _this.onTextureSizeError(event); };\n        this._onLoadCompleteDelegate = function (event) { return _this.onLoadComplete(event); };\n        this._onLoadErrorDelegate = function (event) { return _this.onLoadError(event); };\n        this._onParseErrorDelegate = function (event) { return _this.onParseError(event); };\n    }\n    Object.defineProperty(LoaderContainer.prototype, \"content\", {\n        /**\n         * Contains the root display object of the SWF file or image(JPG, PNG, or\n         * GIF) file that was loaded by using the <code>load()</code> or\n         * <code>loadBytes()</code> methods.\n         *\n         * @throws SecurityError The loaded SWF file or image file belongs to a\n         *                       security sandbox to which you do not have access.\n         *                       For a loaded SWF file, you can avoid this situation\n         *                       by having the file call the\n         *                       <code>Security.allowDomain()</code> method or by\n         *                       having the loading file specify a\n         *                       <code>loaderContext</code> parameter with its\n         *                       <code>securityDomain</code> property set to\n         *                       <code>SecurityDomain.currentDomain</code> when you\n         *                       call the <code>load()</code> or\n         *                       <code>loadBytes()</code> method.\n         */\n        get: function () {\n            return this._content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Cancels a <code>load()</code> method operation that is currently in\n     * progress for the Loader instance.\n     *\n     */\n    LoaderContainer.prototype.close = function () {\n        if (!this._loader)\n            return;\n        if (this._useAssetLib) {\n            var lib;\n            lib = AssetLibraryBundle_1.default.getInstance(this._assetLibId);\n            lib.disposeLoader(this._loader);\n        }\n        this._disposeLoader();\n    };\n    /**\n     * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n     * object that is a child of this Loader object. If you load an animated GIF\n     * file, only the first frame is displayed. As the Loader object can contain\n     * only a single child, issuing a subsequent <code>load()</code> request\n     * terminates the previous request, if still pending, and commences a new\n     * load.\n     *\n     * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n     * loaded image is 8,191 pixels in width or height, and the total number of\n     * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n     * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n     * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n     * and 2,880 pixels in width.</p>\n     *\n     * <p>A SWF file or image loaded into a Loader object inherits the position,\n     * rotation, and scale properties of the parent display objects of the Loader\n     * object. </p>\n     *\n     * <p>Use the <code>unload()</code> method to remove movies or images loaded\n     * with this method, or to cancel a load operation that is in progress.</p>\n     *\n     * <p>You can prevent a SWF file from using this method by setting the\n     * <code>allowNetworking</code> parameter of the the <code>object</code> and\n     * <code>embed</code> tags in the HTML page that contains the SWF\n     * content.</p>\n     *\n     * <p>When you use this method, consider the Flash Player security model,\n     * which is described in the Loader class description. </p>\n     *\n     * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n     * example \"multipart/form-data\") that contains an upload(indicated by a\n     * \"filename\" parameter in a \"content-disposition\" header within the POST\n     * body), the POST operation is subject to the security rules applied to\n     * uploads:</p>\n     *\n     * <ul>\n     *   <li>The POST operation must be performed in response to a user-initiated\n     * action, such as a mouse click or key press.</li>\n     *   <li>If the POST operation is cross-domain(the POST target is not on the\n     * same server as the SWF file that is sending the POST request), the target\n     * server must provide a URL policy file that permits cross-domain\n     * access.</li>\n     * </ul>\n     *\n     * <p>Also, for any multipart Content-Type, the syntax must be valid\n     * (according to the RFC2046 standard). If the syntax appears to be invalid,\n     * the POST operation is subject to the security rules applied to\n     * uploads.</p>\n     *\n     * <p>For more information related to security, see the Flash Player\n     * Developer Center Topic: <a\n     * href=\"http://www.adobe.com/go/devnet_security_en\"\n     * scope=\"external\">Security</a>.</p>\n     *\n     * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n     *                file to be loaded. A relative path must be relative to the\n     *                main SWF file. Absolute URLs must include the protocol\n     *                reference, such as http:// or file:///. Filenames cannot\n     *                include disk drive specifications.\n     * @param context A LoaderContext object, which has properties that define\n     *                the following:\n     *                <ul>\n     *                  <li>Whether or not to check for the existence of a policy\n     *                file upon loading the object</li>\n     *                  <li>The ApplicationDomain for the loaded object</li>\n     *                  <li>The SecurityDomain for the loaded object</li>\n     *                  <li>The ImageDecodingPolicy for the loaded image\n     *                object</li>\n     *                </ul>\n     *\n     *                <p>If the <code>context</code> parameter is not specified\n     *                or refers to a null object, the loaded content remains in\n     *                its own security domain.</p>\n     *\n     *                <p>For complete details, see the description of the\n     *                properties in the <a\n     *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n     *                class.</p>\n     * @param ns      An optional namespace string under which the file is to be\n     *                loaded, allowing the differentiation of two resources with\n     *                identical assets.\n     * @param parser  An optional parser object for translating the loaded data\n     *                into a usable resource. If not provided, Loader will\n     *                attempt to auto-detect the file type.\n     * @throws IOError               The <code>digest</code> property of the\n     *                               <code>request</code> object is not\n     *                               <code>null</code>. You should only set the\n     *                               <code>digest</code> property of a URLRequest\n     *                               object when calling the\n     *                               <code>URLLoader.load()</code> method when\n     *                               loading a SWZ file(an Adobe platform\n     *                               component).\n     * @throws IllegalOperationError If the <code>requestedContentParent</code>\n     *                               property of the <code>context</code>\n     *                               parameter is a <code>Loader</code>.\n     * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n     *                               parameter is set to non-null and has some\n     *                               values which are not Strings.\n     * @throws SecurityError         The value of\n     *                               <code>LoaderContext.securityDomain</code>\n     *                               must be either <code>null</code> or\n     *                               <code>SecurityDomain.currentDomain</code>.\n     *                               This reflects the fact that you can only\n     *                               place the loaded media in its natural\n     *                               security sandbox or your own(the latter\n     *                               requires a policy file).\n     * @throws SecurityError         Local SWF files may not set\n     *                               LoaderContext.securityDomain to anything\n     *                               other than <code>null</code>. It is not\n     *                               permitted to import non-local media into a\n     *                               local sandbox, or to place other local media\n     *                               in anything other than its natural sandbox.\n     * @throws SecurityError         You cannot connect to commonly reserved\n     *                               ports. For a complete list of blocked ports,\n     *                               see \"Restricting Networking APIs\" in the\n     *                               <i>ActionScript 3.0 Developer's Guide</i>.\n     * @throws SecurityError         If the <code>applicationDomain</code> or\n     *                               <code>securityDomain</code> properties of\n     *                               the <code>context</code> parameter are from\n     *                               a disallowed domain.\n     * @throws SecurityError         If a local SWF file is attempting to use the\n     *                               <code>securityDomain</code> property of the\n     *                               <code>context</code> parameter.\n     * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n     *                      object if the\n     *                      <code>LoaderContext.requestedContentParent</code>\n     *                      property has been specified and it is not possible to\n     *                      add the loaded content as a child to the specified\n     *                      DisplayObjectContainer. This could happen if the\n     *                      loaded content is a\n     *                      <code>flash.display.AVM1Movie</code> or if the\n     *                      <code>addChild()</code> call to the\n     *                      requestedContentParent throws an error.\n     * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when the file has completed loading. The\n     *                      <code>complete</code> event is always dispatched\n     *                      after the <code>init</code> event.\n     * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when a network request is made over HTTP and\n     *                      Flash Player can detect the HTTP status code.\n     * @event init          Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when the properties and methods of the loaded\n     *                      SWF file are accessible. The <code>init</code> event\n     *                      always precedes the <code>complete</code> event.\n     * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when an input or output error occurs that\n     *                      causes a load operation to fail.\n     * @event open          Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when the loading operation starts.\n     * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n     *                      object as data is received while load operation\n     *                      progresses.\n     * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n     *                      object if a SWF file in the local-with-filesystem\n     *                      sandbox attempts to load content in the\n     *                      local-with-networking sandbox, or vice versa.\n     * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n     *                      object if the\n     *                      <code>LoaderContext.requestedContentParent</code>\n     *                      property has been specified and the security sandbox\n     *                      of the\n     *                      <code>LoaderContext.requestedContentParent</code>\n     *                      does not have access to the loaded SWF.\n     * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when a loaded object is removed.\n     */\n    LoaderContainer.prototype.load = function (request, context, ns, parser) {\n        if (context === void 0) { context = null; }\n        if (ns === void 0) { ns = null; }\n        if (parser === void 0) { parser = null; }\n        this._getLoader().load(request, context, ns, parser);\n    };\n    /**\n     * Loads from binary data stored in a ByteArray object.\n     *\n     * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n     * the \"init\" event before accessing the properties of a loaded object.</p>\n     *\n     * <p>When you use this method, consider the Flash Player security model,\n     * which is described in the Loader class description. </p>\n     *\n     * @param bytes   A ByteArray object. The contents of the ByteArray can be\n     *                any of the file formats supported by the Loader class: SWF,\n     *                GIF, JPEG, or PNG.\n     * @param context A LoaderContext object. Only the\n     *                <code>applicationDomain</code> property of the\n     *                LoaderContext object applies; the\n     *                <code>checkPolicyFile</code> and\n     *                <code>securityDomain</code> properties of the LoaderContext\n     *                object do not apply.\n     *\n     *                <p>If the <code>context</code> parameter is not specified\n     *                or refers to a null object, the content is loaded into the\n     *                current security domain -  a process referred to as \"import\n     *                loading\" in Flash Player security documentation.\n     *                Specifically, if the loading SWF file trusts the remote SWF\n     *                by incorporating the remote SWF into its code, then the\n     *                loading SWF can import it directly into its own security\n     *                domain.</p>\n     *\n     *                <p>For more information related to security, see the Flash\n     *                Player Developer Center Topic: <a\n     *                href=\"http://www.adobe.com/go/devnet_security_en\"\n     *                scope=\"external\">Security</a>.</p>\n     * @throws ArgumentError         If the <code>length</code> property of the\n     *                               ByteArray object is not greater than 0.\n     * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n     *                               <code>securityDomain</code> property of the\n     *                               <code>context</code> parameter are non-null.\n     * @throws IllegalOperationError If the <code>requestedContentParent</code>\n     *                               property of the <code>context</code>\n     *                               parameter is a <code>Loader</code>.\n     * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n     *                               parameter is set to non-null and has some\n     *                               values which are not Strings.\n     * @throws SecurityError         If the provided\n     *                               <code>applicationDomain</code> property of\n     *                               the <code>context</code> property is from a\n     *                               disallowed domain.\n     * @throws SecurityError         You cannot connect to commonly reserved\n     *                               ports. For a complete list of blocked ports,\n     *                               see \"Restricting Networking APIs\" in the\n     *                               <i>ActionScript 3.0 Developer's Guide</i>.\n     * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n     *                      object if the\n     *                      <code>LoaderContext.requestedContentParent</code>\n     *                      property has been specified and it is not possible to\n     *                      add the loaded content as a child to the specified\n     *                      DisplayObjectContainer. This could happen if the\n     *                      loaded content is a\n     *                      <code>flash.display.AVM1Movie</code> or if the\n     *                      <code>addChild()</code> call to the\n     *                      requestedContentParent throws an error.\n     * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when the operation is complete. The\n     *                      <code>complete</code> event is always dispatched\n     *                      after the <code>init</code> event.\n     * @event init          Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when the properties and methods of the loaded\n     *                      data are accessible. The <code>init</code> event\n     *                      always precedes the <code>complete</code> event.\n     * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when the runtime cannot parse the data in the\n     *                      byte array.\n     * @event open          Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when the operation starts.\n     * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n     *                      object as data is transfered in memory.\n     * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n     *                      object if the\n     *                      <code>LoaderContext.requestedContentParent</code>\n     *                      property has been specified and the security sandbox\n     *                      of the\n     *                      <code>LoaderContext.requestedContentParent</code>\n     *                      does not have access to the loaded SWF.\n     * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when a loaded object is removed.\n     */\n    LoaderContainer.prototype.loadData = function (data, context, ns, parser) {\n        if (context === void 0) { context = null; }\n        if (ns === void 0) { ns = null; }\n        if (parser === void 0) { parser = null; }\n        this._getLoader().loadData(data, '', context, ns, parser);\n    };\n    LoaderContainer.prototype._getLoader = function () {\n        if (this._useAssetLib) {\n            var lib = AssetLibraryBundle_1.default.getInstance(this._assetLibId);\n            this._loader = lib.getLoader();\n        }\n        else {\n            this._loader = new Loader_1.default();\n        }\n        this._loader.addEventListener(LoaderEvent_1.default.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n        this._loader.addEventListener(AssetEvent_1.default.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n        this._loader.addEventListener(AssetEvent_1.default.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n        // Error are handled separately (see documentation for addErrorHandler)\n        this._loader._iAddErrorHandler(this._onLoadErrorDelegate);\n        this._loader._iAddParseErrorHandler(this._onParseErrorDelegate);\n        return this._loader;\n    };\n    LoaderContainer.prototype._disposeLoader = function () {\n        this._loader.removeEventListener(LoaderEvent_1.default.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n        this._loader.removeEventListener(AssetEvent_1.default.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n        this._loader.removeEventListener(AssetEvent_1.default.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n        if (!this._useAssetLib)\n            this._loader.stop();\n        this._loader = null;\n    };\n    /**\n     * Removes a child of this Loader object that was loaded by using the\n     * <code>load()</code> method. The <code>property</code> of the associated\n     * LoaderInfo object is reset to <code>null</code>. The child is not\n     * necessarily destroyed because other objects might have references to it;\n     * however, it is no longer a child of the Loader object.\n     *\n     * <p>As a best practice, before you unload a child SWF file, you should\n     * explicitly close any streams in the child SWF file's objects, such as\n     * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n     * audio in the child SWF file might continue to play, even though the child\n     * SWF file was unloaded. To close streams in the child SWF file, add an\n     * event listener to the child that listens for the <code>unload</code>\n     * event. When the parent calls <code>Loader.unload()</code>, the\n     * <code>unload</code> event is dispatched to the child. The following code\n     * shows how you might do this:</p>\n     * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n     * myNetStream.close(); mySound.close(); myNetConnection.close();\n     * myLocalConnection.close(); }\n     * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n     * closeAllStreams);</pre>\n     *\n     */\n    LoaderContainer.prototype.unload = function () {\n        //TODO\n    };\n    /**\n     * Enables a specific parser.\n     * When no specific parser is set for a loading/parsing opperation,\n     * loader3d can autoselect the correct parser to use.\n     * A parser must have been enabled, to be considered when autoselecting the parser.\n     *\n     * @param parserClass The parser class to enable.\n     * @see away.parsers.Parsers\n     */\n    LoaderContainer.enableParser = function (parserClass) {\n        Loader_1.default.enableParser(parserClass);\n    };\n    /**\n     * Enables a list of parsers.\n     * When no specific parser is set for a loading/parsing opperation,\n     * loader3d can autoselect the correct parser to use.\n     * A parser must have been enabled, to be considered when autoselecting the parser.\n     *\n     * @param parserClasses A Vector of parser classes to enable.\n     * @see away.parsers.Parsers\n     */\n    LoaderContainer.enableParsers = function (parserClasses) {\n        Loader_1.default.enableParsers(parserClasses);\n    };\n    LoaderContainer.prototype.onAssetComplete = function (event) {\n        this.dispatchEvent(event);\n    };\n    /**\n     * Called when an error occurs during loading\n     */\n    LoaderContainer.prototype.onLoadError = function (event) {\n        if (this.hasEventListener(URLLoaderEvent_1.default.LOAD_ERROR)) {\n            this.dispatchEvent(event);\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Called when a an error occurs during parsing\n     */\n    LoaderContainer.prototype.onParseError = function (event) {\n        if (this.hasEventListener(ParserEvent_1.default.PARSE_ERROR)) {\n            this.dispatchEvent(event);\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    LoaderContainer.prototype.onTextureSizeError = function (event) {\n        this.dispatchEvent(event);\n    };\n    /**\n     * Called when the resource and all of its dependencies was retrieved.\n     */\n    LoaderContainer.prototype.onLoadComplete = function (event) {\n        this._content = event.content;\n        if (this._content)\n            this.addChild(this._content);\n        this.dispatchEvent(event);\n        this._disposeLoader();\n    };\n    return LoaderContainer;\n}(DisplayObjectContainer_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LoaderContainer;\n\n},{\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/events/LoaderEvent\":undefined,\"awayjs-core/lib/events/ParserEvent\":undefined,\"awayjs-core/lib/events/URLLoaderEvent\":undefined,\"awayjs-core/lib/library/AssetLibraryBundle\":undefined,\"awayjs-core/lib/library/Loader\":undefined,\"awayjs-display/lib/display/DisplayObjectContainer\":\"awayjs-display/lib/display/DisplayObjectContainer\"}],\"awayjs-display/lib/display/MovieClip\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar Sprite_1 = require(\"awayjs-display/lib/display/Sprite\");\nvar TextField_1 = require(\"awayjs-display/lib/display/TextField\");\nvar MouseEvent_1 = require(\"awayjs-display/lib/events/MouseEvent\");\nvar Timeline_1 = require(\"awayjs-display/lib/base/Timeline\");\nvar FrameScriptManager_1 = require(\"awayjs-display/lib/managers/FrameScriptManager\");\nvar MovieClip = (function (_super) {\n    __extends(MovieClip, _super);\n    function MovieClip(timeline) {\n        var _this = this;\n        if (timeline === void 0) { timeline = null; }\n        _super.call(this);\n        this._isButton = false;\n        this._time = 0; // the current time inside the animation\n        this._currentFrameIndex = -1; // the current frame\n        this._isPlaying = true; // false if paused or stopped\n        this._isInit = true;\n        this._potentialInstances = [];\n        this._depth_sessionIDs = {};\n        this._sessionID_childs = {};\n        /**\n         *\n         */\n        this.loop = true;\n        /**\n         * the current index of the current active frame\n         */\n        this.constructedKeyFrameIndex = -1;\n        this._enterFrame = new AssetEvent_1.default(AssetEvent_1.default.ENTER_FRAME, this);\n        this.inheritColorTransform = true;\n        this._onMouseOver = function (event) { return _this.currentFrameIndex = 1; };\n        this._onMouseOut = function (event) { return _this.currentFrameIndex = 0; };\n        this._onMouseDown = function (event) { return _this.currentFrameIndex = 2; };\n        this._onMouseUp = function (event) { return _this.currentFrameIndex = _this.currentFrameIndex == 0 ? 0 : 1; };\n        this._timeline = timeline || new Timeline_1.default();\n    }\n    Object.defineProperty(MovieClip.prototype, \"adapter\", {\n        /**\n         * adapter is used to provide MovieClip to scripts taken from different platforms\n         * setter typically managed by factory\n         */\n        get: function () {\n            return this._adapter;\n        },\n        set: function (value) {\n            this._adapter = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MovieClip.prototype.dispose = function () {\n        this.disposeValues();\n        MovieClip._movieClips.push(this);\n    };\n    MovieClip.prototype.disposeValues = function () {\n        _super.prototype.disposeValues.call(this);\n        this._potentialInstances = [];\n        this._depth_sessionIDs = {};\n        this._sessionID_childs = {};\n    };\n    MovieClip.prototype.reset_textclones = function () {\n        if (this.timeline) {\n            var len = this._potentialInstances.length;\n            for (var i = 0; i < len; i++) {\n                if (this._potentialInstances[i] != null) {\n                    if (this._potentialInstances[i].isAsset(TextField_1.default))\n                        this._potentialInstances[i].text = this.timeline.getPotentialChildPrototype(i).text;\n                    else if (this._potentialInstances[i].isAsset(MovieClip))\n                        this._potentialInstances[i].reset_textclones();\n                }\n            }\n        }\n    };\n    Object.defineProperty(MovieClip.prototype, \"isInit\", {\n        get: function () {\n            return this._isInit;\n        },\n        set: function (value) {\n            this._isInit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MovieClip.prototype, \"timeline\", {\n        get: function () {\n            return this._timeline;\n        },\n        set: function (value) {\n            this._timeline = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MovieClip.prototype, \"numFrames\", {\n        get: function () {\n            return this._timeline.numFrames;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MovieClip.prototype.jumpToLabel = function (label) {\n        // the timeline.jumpTolabel will set currentFrameIndex\n        this._timeline.jumpToLabel(this, label);\n    };\n    MovieClip.prototype.reset = function () {\n        _super.prototype.reset.call(this);\n        // time only is relevant for the root mc, as it is the only one that executes the update function\n        this._time = 0;\n        if (this.adapter)\n            this.adapter.freeFromScript();\n        this.constructedKeyFrameIndex = -1;\n        for (var i = this.numChildren - 1; i >= 0; i--)\n            this.removeChildAt(i);\n        this._skipAdvance = MovieClip._skipAdvance;\n        var numFrames = this._timeline.keyframe_indices.length;\n        this._isPlaying = Boolean(numFrames > 1);\n        if (numFrames) {\n            this._currentFrameIndex = 0;\n            this._timeline.constructNextFrame(this, true, true);\n        }\n        else {\n            this._currentFrameIndex = -1;\n        }\n    };\n    MovieClip.prototype.resetSessionIDs = function () {\n        this._depth_sessionIDs = {};\n    };\n    Object.defineProperty(MovieClip.prototype, \"currentFrameIndex\", {\n        /*\n        * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\n         */\n        get: function () {\n            return this._currentFrameIndex;\n        },\n        set: function (value) {\n            //if currentFrame is set greater than the available number of\n            //frames, the playhead is moved to the last frame in the timeline.\n            //But because the frame specified was not a keyframe, no scripts are\n            //executed, even if they exist on the last frame.\n            var skip_script = false;\n            var numFrames = this._timeline.keyframe_indices.length;\n            if (!numFrames)\n                return;\n            if (value < 0) {\n                value = 0;\n            }\n            else if (value >= numFrames) {\n                value = numFrames - 1;\n                skip_script = true;\n            }\n            if (this._currentFrameIndex == value)\n                return;\n            this._currentFrameIndex = value;\n            //changing current frame will ignore advance command for that\n            //update's advanceFrame function, unless advanceFrame has\n            //already been executed\n            this._skipAdvance = MovieClip._skipAdvance;\n            this._timeline.gotoFrame(this, value, skip_script);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MovieClip.prototype.addButtonListeners = function () {\n        this._isButton = true;\n        this.stop();\n        this.addEventListener(MouseEvent_1.default.MOUSE_OVER, this._onMouseOver);\n        this.addEventListener(MouseEvent_1.default.MOUSE_OUT, this._onMouseOut);\n        this.addEventListener(MouseEvent_1.default.MOUSE_DOWN, this._onMouseDown);\n        this.addEventListener(MouseEvent_1.default.MOUSE_UP, this._onMouseUp);\n    };\n    MovieClip.prototype.removeButtonListeners = function () {\n        this.removeEventListener(MouseEvent_1.default.MOUSE_OVER, this._onMouseOver);\n        this.removeEventListener(MouseEvent_1.default.MOUSE_OUT, this._onMouseOut);\n        this.removeEventListener(MouseEvent_1.default.MOUSE_DOWN, this._onMouseDown);\n        this.removeEventListener(MouseEvent_1.default.MOUSE_UP, this._onMouseUp);\n    };\n    MovieClip.prototype.getChildAtSessionID = function (sessionID) {\n        return this._sessionID_childs[sessionID];\n    };\n    MovieClip.prototype.getSessionIDDepths = function () {\n        return this._depth_sessionIDs;\n    };\n    MovieClip.prototype.addChildAtDepth = function (child, depth, replace) {\n        if (replace === void 0) { replace = true; }\n        //this should be implemented for all display objects\n        child.inheritColorTransform = true;\n        child.reset(); // this takes care of transform and visibility\n        return _super.prototype.addChildAtDepth.call(this, child, depth, replace);\n    };\n    MovieClip.prototype._addTimelineChildAt = function (child, depth, sessionID) {\n        this._depth_sessionIDs[depth] = child._sessionID = sessionID;\n        this._sessionID_childs[sessionID] = child;\n        return this.addChildAtDepth(child, depth);\n    };\n    MovieClip.prototype.removeChildAtInternal = function (index) {\n        var child = this._children[index];\n        if (child.adapter)\n            child.adapter.freeFromScript();\n        this.adapter.unregisterScriptObject(child);\n        //check to make sure _depth_sessionIDs wasn't modified with a new child\n        if (this._depth_sessionIDs[child._depthID] == child._sessionID)\n            delete this._depth_sessionIDs[child._depthID];\n        delete this._sessionID_childs[child._sessionID];\n        child._sessionID = -1;\n        return _super.prototype.removeChildAtInternal.call(this, index);\n    };\n    Object.defineProperty(MovieClip.prototype, \"assetType\", {\n        get: function () {\n            return MovieClip.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Starts playback of animation from current position\n     */\n    MovieClip.prototype.play = function () {\n        if (this._timeline.keyframe_indices.length > 1)\n            this._isPlaying = true;\n    };\n    /**\n     * should be called right before the call to away3d-render.\n     */\n    MovieClip.prototype.update = function () {\n        MovieClip._skipAdvance = true;\n        this.advanceFrame();\n        MovieClip._skipAdvance = false;\n        // after we advanced the scenegraph, we might have some script that needs executing\n        FrameScriptManager_1.default.execute_queue();\n        // now we want to execute the onEnter\n        this.dispatchEvent(this._enterFrame);\n        // after we executed the onEnter, we might have some script that needs executing\n        FrameScriptManager_1.default.execute_queue();\n        // now we execute any intervals queued\n        FrameScriptManager_1.default.execute_intervals();\n        // finally, we execute any scripts that were added from intervals\n        FrameScriptManager_1.default.execute_queue();\n        //execute any disposes as a result of framescripts\n        FrameScriptManager_1.default.execute_dispose();\n    };\n    MovieClip.prototype.getPotentialChildInstance = function (id) {\n        if (!this._potentialInstances[id])\n            this._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\n        return this._potentialInstances[id];\n    };\n    /**\n     * Stop playback of animation and hold current position\n     */\n    MovieClip.prototype.stop = function () {\n        this._isPlaying = false;\n    };\n    MovieClip.prototype.clone = function () {\n        var newInstance = (MovieClip._movieClips.length) ? MovieClip._movieClips.pop() : new MovieClip(this._timeline);\n        this.copyTo(newInstance);\n        return newInstance;\n    };\n    MovieClip.prototype.copyTo = function (newInstance) {\n        _super.prototype.copyTo.call(this, newInstance);\n        newInstance.timeline = this._timeline;\n        newInstance.loop = this.loop;\n    };\n    MovieClip.prototype.advanceFrame = function () {\n        if (this._isPlaying && !this._skipAdvance) {\n            if (this._currentFrameIndex == this._timeline.keyframe_indices.length - 1) {\n                if (this.loop)\n                    this.currentFrameIndex = 0;\n                else\n                    this._isPlaying = false;\n            }\n            else {\n                this._currentFrameIndex++;\n                this._timeline.constructNextFrame(this);\n            }\n        }\n        var len = this._children.length;\n        var child;\n        for (var i = 0; i < len; ++i) {\n            child = this._children[i];\n            if (child.isAsset(MovieClip))\n                child.advanceFrame();\n        }\n        this._skipAdvance = false;\n    };\n    // DEBUG CODE:\n    MovieClip.prototype.logHierarchy = function (depth) {\n        if (depth === void 0) { depth = 0; }\n        this.printHierarchyName(depth, this);\n        var len = this._children.length;\n        var child;\n        for (var i = 0; i < len; i++) {\n            child = this._children[i];\n            if (child.isAsset(MovieClip))\n                child.logHierarchy(depth + 1);\n            else\n                this.printHierarchyName(depth + 1, child);\n        }\n    };\n    MovieClip.prototype.printHierarchyName = function (depth, target) {\n        var str = \"\";\n        for (var i = 0; i < depth; ++i)\n            str += \"--\";\n        str += \" \" + target.name + \" = \" + target.id;\n        console.log(str);\n    };\n    MovieClip.prototype.clear = function () {\n        //clear out potential instances\n        var len = this._potentialInstances.length;\n        for (var i = 0; i < len; i++) {\n            var instance = this._potentialInstances[i];\n            //only dispose instances that are not used in script ie. do not have an instance name\n            if (instance && instance.name == \"\") {\n                FrameScriptManager_1.default.add_child_to_dispose(instance);\n                delete this._potentialInstances[i];\n            }\n        }\n        _super.prototype.clear.call(this);\n    };\n    MovieClip._movieClips = new Array();\n    MovieClip.assetType = \"[asset MovieClip]\";\n    return MovieClip;\n}(Sprite_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = MovieClip;\n\n},{\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-display/lib/base/Timeline\":\"awayjs-display/lib/base/Timeline\",\"awayjs-display/lib/display/Sprite\":\"awayjs-display/lib/display/Sprite\",\"awayjs-display/lib/display/TextField\":\"awayjs-display/lib/display/TextField\",\"awayjs-display/lib/events/MouseEvent\":\"awayjs-display/lib/events/MouseEvent\",\"awayjs-display/lib/managers/FrameScriptManager\":\"awayjs-display/lib/managers/FrameScriptManager\"}],\"awayjs-display/lib/display/PointLight\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar LightBase_1 = require(\"awayjs-display/lib/display/LightBase\");\nvar BoundsType_1 = require(\"awayjs-display/lib/bounds/BoundsType\");\nvar CubeMapShadowMapper_1 = require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\nvar PointLight = (function (_super) {\n    __extends(PointLight, _super);\n    function PointLight() {\n        _super.call(this);\n        this._pRadius = 90000;\n        this._pFallOff = 100000;\n        this._pIsEntity = true;\n        this._pFallOffFactor = 1 / (this._pFallOff * this._pFallOff - this._pRadius * this._pRadius);\n        //default bounds type\n        this._boundsType = BoundsType_1.default.SPHERE;\n    }\n    Object.defineProperty(PointLight.prototype, \"assetType\", {\n        get: function () {\n            return PointLight.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PointLight.prototype.pCreateShadowMapper = function () {\n        return new CubeMapShadowMapper_1.default();\n    };\n    Object.defineProperty(PointLight.prototype, \"radius\", {\n        get: function () {\n            return this._pRadius;\n        },\n        set: function (value) {\n            this._pRadius = value;\n            if (this._pRadius < 0) {\n                this._pRadius = 0;\n            }\n            else if (this._pRadius > this._pFallOff) {\n                this._pFallOff = this._pRadius;\n                this._pInvalidateBounds();\n            }\n            this._pFallOffFactor = 1 / (this._pFallOff * this._pFallOff - this._pRadius * this._pRadius);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PointLight.prototype.iFallOffFactor = function () {\n        return this._pFallOffFactor;\n    };\n    Object.defineProperty(PointLight.prototype, \"fallOff\", {\n        get: function () {\n            return this._pFallOff;\n        },\n        set: function (value) {\n            this._pFallOff = value;\n            if (this._pFallOff < 0)\n                this._pFallOff = 0;\n            if (this._pFallOff < this._pRadius)\n                this._pRadius = this._pFallOff;\n            this._pFallOffFactor = 1 / (this._pFallOff * this._pFallOff - this._pRadius * this._pRadius);\n            this._pInvalidateBounds();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PointLight.prototype._pUpdateSphereBounds = function () {\n        _super.prototype._pUpdateSphereBounds.call(this);\n        this._pSphereBounds.radius = this._pFallOff;\n    };\n    PointLight.prototype.iGetObjectProjectionMatrix = function (entity, cameraTransform, target) {\n        if (target === void 0) { target = null; }\n        var raw = Matrix3DUtils_1.default.RAW_DATA_CONTAINER;\n        var m = new Matrix3D_1.default();\n        // todo: do not use lookAt on Light\n        m.copyFrom(entity.getRenderSceneTransform(cameraTransform));\n        m.append(this._pParent.inverseSceneTransform);\n        this.lookAt(m.position);\n        m.copyFrom(entity.getRenderSceneTransform(cameraTransform));\n        m.append(this.inverseSceneTransform);\n        var box = entity.getBox();\n        var v1 = m.deltaTransformVector(new Vector3D_1.default(box.left, box.bottom, box.front));\n        var v2 = m.deltaTransformVector(new Vector3D_1.default(box.right, box.top, box.back));\n        var d1 = v1.x * v1.x + v1.y * v1.y + v1.z * v1.z;\n        var d2 = v2.x * v2.x + v2.y * v2.y + v2.z * v2.z;\n        var d = Math.sqrt(d1 > d2 ? d1 : d2);\n        var zMin;\n        var zMax;\n        var z = m.rawData[14];\n        zMin = z - d;\n        zMax = z + d;\n        raw[5] = raw[0] = zMin / d;\n        raw[10] = zMax / (zMax - zMin);\n        raw[11] = 1;\n        raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n        raw[14] = -zMin * raw[10];\n        if (!target)\n            target = new Matrix3D_1.default();\n        target.copyRawDataFrom(raw);\n        target.prepend(m);\n        return target;\n    };\n    PointLight.assetType = \"[light PointLight]\";\n    return PointLight;\n}(LightBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PointLight;\n\n},{\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-display/lib/bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"awayjs-display/lib/display/LightBase\":\"awayjs-display/lib/display/LightBase\",\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\":\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\"}],\"awayjs-display/lib/display/Scene\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar DisplayObjectContainer_1 = require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nvar BasicPartition_1 = require(\"awayjs-display/lib/partition/BasicPartition\");\nvar Scene = (function (_super) {\n    __extends(Scene, _super);\n    function Scene(partition) {\n        if (partition === void 0) { partition = null; }\n        _super.call(this);\n        this._expandedPartitions = new Array();\n        this._partitions = new Array();\n        this._iCollectionMark = 0;\n        this.partition = partition || new BasicPartition_1.default();\n        this._iIsRoot = true;\n        this._pScene = this;\n    }\n    Scene.prototype.traversePartitions = function (traverser) {\n        var i = 0;\n        var len = this._partitions.length;\n        while (i < len)\n            this._partitions[i++].traverse(traverser);\n    };\n    /**\n     * @internal\n     */\n    Scene.prototype._iRegisterPartition = function (partition) {\n        this._expandedPartitions.push(partition);\n        //ensure duplicates are not found in partitions array\n        if (this._partitions.indexOf(partition) == -1)\n            this._partitions.push(partition);\n    };\n    /**\n     * @internal\n     */\n    Scene.prototype._iUnregisterPartition = function (partition) {\n        this._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n        //if no more partition references found, remove from partitions array\n        if (this._expandedPartitions.indexOf(partition) == -1)\n            this._partitions.splice(this._partitions.indexOf(partition), 1);\n    };\n    return Scene;\n}(DisplayObjectContainer_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Scene;\n\n},{\"awayjs-display/lib/display/DisplayObjectContainer\":\"awayjs-display/lib/display/DisplayObjectContainer\",\"awayjs-display/lib/partition/BasicPartition\":\"awayjs-display/lib/partition/BasicPartition\"}],\"awayjs-display/lib/display/Shape\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar DisplayObject_1 = require(\"awayjs-display/lib/display/DisplayObject\");\nvar Graphics_1 = require(\"awayjs-display/lib/graphics/Graphics\");\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Shape class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Shape object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Shape objects that contain the same graphics.\n * However, a Shape object supports user input events, while a Shape object\n * does not.</p>\n */\nvar Shape = (function (_super) {\n    __extends(Shape, _super);\n    /**\n     * Create a new Shape object.\n     *\n     * @param material    [optional]        The material with which to render the Shape.\n     */\n    function Shape(material) {\n        var _this = this;\n        if (material === void 0) { material = null; }\n        _super.call(this);\n        //temp point used in hit testing\n        this._tempPoint = new Point_1.default();\n        this._onGraphicsInvalidateDelegate = function (event) { return _this._onGraphicsInvalidate(event); };\n        this._graphics = new Graphics_1.default(); //unique graphics object for each Sprite\n        this._graphics.addEventListener(AssetEvent_1.default.INVALIDATE, this._onGraphicsInvalidateDelegate);\n        this.material = material;\n    }\n    Object.defineProperty(Shape.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            return Shape.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"graphics\", {\n        /**\n         * Specifies the Graphics object belonging to this Shape object, where\n         * drawing commands can occur.\n         */\n        get: function () {\n            if (this._iSourcePrefab)\n                this._iSourcePrefab._iValidate();\n            return this._graphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"animator\", {\n        /**\n         * Defines the animator of the graphics object.  Default value is <code>null</code>.\n         */\n        get: function () {\n            return this._graphics.animator;\n        },\n        set: function (value) {\n            if (this._graphics.animator)\n                this._graphics.animator.removeOwner(this);\n            this._graphics.animator = value;\n            if (this._graphics.animator)\n                this._graphics.animator.addOwner(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"material\", {\n        /**\n         * The material with which to render the Shape.\n         */\n        get: function () {\n            return this._graphics.material;\n        },\n        set: function (value) {\n            this._graphics.material = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"style\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._graphics.style;\n        },\n        set: function (value) {\n            this._graphics.style = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    Shape.prototype.bakeTransformations = function () {\n        this._graphics.applyTransformation(this.transform.matrix3D);\n        this.transform.clearMatrix3D();\n    };\n    /**\n     * @inheritDoc\n     */\n    Shape.prototype.dispose = function () {\n        this.disposeValues();\n        Shape._shapes.push(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    Shape.prototype.disposeValues = function () {\n        _super.prototype.disposeValues.call(this);\n        this._graphics.dispose();\n    };\n    /**\n     * Clones this Shape instance along with all it's children, while re-using the same\n     * material, graphics and animation set. The returned result will be a copy of this shape,\n     * containing copies of all of it's children.\n     *\n     * Properties that are re-used (i.e. not cloned) by the new copy include name,\n     * graphics, and material. Properties that are cloned or created anew for the copy\n     * include subShapees, children of the shape, and the animator.\n     *\n     * If you want to copy just the shape, reusing it's graphics and material while not\n     * cloning it's children, the simplest way is to create a new shape manually:\n     *\n     * <code>\n     * var clone : Shape = new Shape(original.graphics, original.material);\n     * </code>\n     */\n    Shape.prototype.clone = function () {\n        var newInstance = (Shape._shapes.length) ? Shape._shapes.pop() : new Shape();\n        this.copyTo(newInstance);\n        return newInstance;\n    };\n    Shape.prototype.copyTo = function (shape) {\n        _super.prototype.copyTo.call(this, shape);\n        this._graphics.copyTo(shape.graphics);\n    };\n    /**\n     * //TODO\n     *\n     * @protected\n     */\n    Shape.prototype._pUpdateBoxBounds = function () {\n        _super.prototype._pUpdateBoxBounds.call(this);\n        this._pBoxBounds.union(this._graphics.getBoxBounds(), this._pBoxBounds);\n    };\n    Shape.prototype._pUpdateSphereBounds = function () {\n        _super.prototype._pUpdateSphereBounds.call(this);\n        var box = this.getBox();\n        if (!this._center)\n            this._center = new Vector3D_1.default();\n        this._center.x = box.x + box.width / 2;\n        this._center.y = box.y + box.height / 2;\n        this._center.z = box.z + box.depth / 2;\n        this._pSphereBounds = this._graphics.getSphereBounds(this._center, this._pSphereBounds);\n    };\n    /**\n     * //TODO\n     *\n     * @private\n     */\n    Shape.prototype._onGraphicsInvalidate = function (event) {\n        if (this._pIsEntity != Boolean(this._graphics.count)) {\n            if (this._pImplicitPartition)\n                this._pImplicitPartition._iUnregisterEntity(this);\n            this._pIsEntity = Boolean(this._graphics.count);\n            if (this._pImplicitPartition)\n                this._pImplicitPartition._iRegisterEntity(this);\n        }\n        this._pInvalidateBounds();\n    };\n    /**\n     *\n     * @param renderer\n     *\n     * @internal\n     */\n    Shape.prototype._acceptTraverser = function (traverser) {\n        this.graphics.acceptTraverser(traverser);\n    };\n    Shape.prototype._hitTestPointInternal = function (x, y, shapeFlag, masksFlag) {\n        if (this._graphics.count) {\n            this._tempPoint.setTo(x, y);\n            var local = this.globalToLocal(this._tempPoint, this._tempPoint);\n            var box;\n            //early out for box test\n            if (!(box = this.getBox()).contains(local.x, local.y, 0))\n                return false;\n            //early out for non-shape tests\n            if (!shapeFlag)\n                return true;\n            //ok do the graphics thing\n            if (this._graphics._hitTestPointInternal(local.x, local.y))\n                return true;\n        }\n        return false;\n    };\n    Shape.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        this._graphics.clear();\n    };\n    Shape._shapes = new Array();\n    Shape.assetType = \"[asset Shape]\";\n    return Shape;\n}(DisplayObject_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Shape;\n\n},{\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/geom/Point\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-display/lib/display/DisplayObject\":\"awayjs-display/lib/display/DisplayObject\",\"awayjs-display/lib/graphics/Graphics\":\"awayjs-display/lib/graphics/Graphics\"}],\"awayjs-display/lib/display/Skybox\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar BlendMode_1 = require(\"awayjs-core/lib/image/BlendMode\");\nvar DisplayObject_1 = require(\"awayjs-display/lib/display/DisplayObject\");\nvar BoundsType_1 = require(\"awayjs-display/lib/bounds/BoundsType\");\nvar RenderableEvent_1 = require(\"awayjs-display/lib/events/RenderableEvent\");\nvar SurfaceEvent_1 = require(\"awayjs-display/lib/events/SurfaceEvent\");\nvar SingleCubeTexture_1 = require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nvar Style_1 = require(\"awayjs-display/lib/base/Style\");\nvar StyleEvent_1 = require(\"awayjs-display/lib/events/StyleEvent\");\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nvar Skybox = (function (_super) {\n    __extends(Skybox, _super);\n    /**\n     * Create a new Skybox object.\n     *\n     * @param material\tThe material with which to render the Skybox.\n     */\n    function Skybox(image) {\n        var _this = this;\n        if (image === void 0) { image = null; }\n        _super.call(this);\n        this._textures = new Array();\n        this._pAlphaThreshold = 0;\n        this._pBlendMode = BlendMode_1.default.NORMAL;\n        this._curves = false;\n        this._imageRect = false;\n        this._style = new Style_1.default();\n        this._onTextureInvalidateDelegate = function (event) { return _this.onTextureInvalidate(event); };\n        this._onInvalidatePropertiesDelegate = function (event) { return _this._onInvalidateProperties(event); };\n        this._style.addEventListener(StyleEvent_1.default.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n        this._pIsEntity = true;\n        this._owners = new Array(this);\n        this._style.image = image;\n        this.texture = new SingleCubeTexture_1.default();\n        //default bounds type\n        this._boundsType = BoundsType_1.default.NULL;\n    }\n    Object.defineProperty(Skybox.prototype, \"alphaThreshold\", {\n        /**\n         * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n         * invisible or entirely opaque, often used with textures for foliage, etc.\n         * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n         */\n        get: function () {\n            return this._pAlphaThreshold;\n        },\n        set: function (value) {\n            if (value < 0)\n                value = 0;\n            else if (value > 1)\n                value = 1;\n            if (this._pAlphaThreshold == value)\n                return;\n            this._pAlphaThreshold = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Skybox.prototype, \"curves\", {\n        /**\n         * Indicates whether skybox should use curves. Defaults to false.\n         */\n        get: function () {\n            return this._curves;\n        },\n        set: function (value) {\n            if (this._curves == value)\n                return;\n            this._curves = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Skybox.prototype, \"imageRect\", {\n        /**\n         * Indicates whether or not the Skybox texture should use imageRects. Defaults to false.\n         */\n        get: function () {\n            return this._imageRect;\n        },\n        set: function (value) {\n            if (this._imageRect == value)\n                return;\n            this._imageRect = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Skybox.prototype, \"lightPicker\", {\n        /**\n         * The light picker used by the material to provide lights to the material if it supports lighting.\n         *\n         * @see LightPickerBase\n         * @see StaticLightPicker\n         */\n        get: function () {\n            return this._pLightPicker;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Skybox.prototype, \"animationSet\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._animationSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Skybox.prototype, \"blendMode\", {\n        /**\n         * The blend mode to use when drawing this renderable. The following blend modes are supported:\n         * <ul>\n         * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n         * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n         * <li>BlendMode.MULTIPLY</li>\n         * <li>BlendMode.ADD</li>\n         * <li>BlendMode.ALPHA</li>\n         * </ul>\n         */\n        get: function () {\n            return this._pBlendMode;\n        },\n        set: function (value) {\n            if (this._pBlendMode == value)\n                return;\n            this._pBlendMode = value;\n            this.invalidate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Skybox.prototype, \"iOwners\", {\n        /**\n         * A list of the IRenderables that use this material\n         *\n         * @private\n         */\n        get: function () {\n            return this._owners;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Skybox.prototype, \"animator\", {\n        get: function () {\n            return this._animator;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Skybox.prototype, \"texture\", {\n        /**\n        * The cube texture to use as the skybox.\n        */\n        get: function () {\n            return this._texture;\n        },\n        set: function (value) {\n            if (this._texture == value)\n                return;\n            if (this._texture)\n                this.removeTexture(this._texture);\n            this._texture = value;\n            if (this._texture)\n                this.addTexture(this._texture);\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Skybox.prototype.getNumTextures = function () {\n        return this._textures.length;\n    };\n    Skybox.prototype.getTextureAt = function (index) {\n        return this._textures[index];\n    };\n    Object.defineProperty(Skybox.prototype, \"style\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._style;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Skybox.prototype, \"assetType\", {\n        get: function () {\n            return Skybox.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n     *\n     * @private\n     */\n    Skybox.prototype.invalidatePasses = function () {\n        this.dispatchEvent(new SurfaceEvent_1.default(SurfaceEvent_1.default.INVALIDATE_PASSES, this));\n    };\n    Skybox.prototype.invalidateSurface = function () {\n        this.dispatchEvent(new RenderableEvent_1.default(RenderableEvent_1.default.INVALIDATE_RENDER_OWNER, this));\n    };\n    Skybox.prototype.addTexture = function (texture) {\n        this._textures.push(texture);\n        texture.addEventListener(AssetEvent_1.default.INVALIDATE, this._onTextureInvalidateDelegate);\n        this.onTextureInvalidate();\n    };\n    Skybox.prototype.removeTexture = function (texture) {\n        this._textures.splice(this._textures.indexOf(texture), 1);\n        texture.removeEventListener(AssetEvent_1.default.INVALIDATE, this._onTextureInvalidateDelegate);\n        this.onTextureInvalidate();\n    };\n    Skybox.prototype.onTextureInvalidate = function (event) {\n        if (event === void 0) { event = null; }\n        this.invalidate();\n    };\n    Skybox.prototype._onInvalidateProperties = function (event) {\n        this.invalidatePasses();\n    };\n    /**\n     * //TODO\n     *\n     * @param shortestCollisionDistance\n     * @returns {boolean}\n     *\n     * @internal\n     */\n    Skybox.prototype._iTestCollision = function (pickingCollision, pickingCollider) {\n        return false;\n    };\n    Skybox.assetType = \"[asset Skybox]\";\n    return Skybox;\n}(DisplayObject_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Skybox;\n\n},{\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/image/BlendMode\":undefined,\"awayjs-display/lib/base/Style\":\"awayjs-display/lib/base/Style\",\"awayjs-display/lib/bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"awayjs-display/lib/display/DisplayObject\":\"awayjs-display/lib/display/DisplayObject\",\"awayjs-display/lib/events/RenderableEvent\":\"awayjs-display/lib/events/RenderableEvent\",\"awayjs-display/lib/events/StyleEvent\":\"awayjs-display/lib/events/StyleEvent\",\"awayjs-display/lib/events/SurfaceEvent\":\"awayjs-display/lib/events/SurfaceEvent\",\"awayjs-display/lib/textures/SingleCubeTexture\":\"awayjs-display/lib/textures/SingleCubeTexture\"}],\"awayjs-display/lib/display/Sprite\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar Graphics_1 = require(\"awayjs-display/lib/graphics/Graphics\");\nvar DisplayObjectContainer_1 = require(\"awayjs-display/lib/display/DisplayObjectContainer\");\n/**\n * Sprite is an instance of a Graphics, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of Graphices, which in turn correspond to SubGeometries. Graphices allow different parts\n * of the graphics to be assigned different materials.\n */\nvar Sprite = (function (_super) {\n    __extends(Sprite, _super);\n    /**\n     * Create a new Sprite object.\n     *\n     * @param material    [optional]        The material with which to render the Sprite.\n     */\n    function Sprite(material) {\n        var _this = this;\n        if (material === void 0) { material = null; }\n        _super.call(this);\n        //temp point used in hit testing\n        this._tempPoint = new Point_1.default();\n        this._onGraphicsInvalidateDelegate = function (event) { return _this._onGraphicsInvalidate(event); };\n        this._graphics = new Graphics_1.default(); //unique graphics object for each Sprite\n        this._graphics.addEventListener(AssetEvent_1.default.INVALIDATE, this._onGraphicsInvalidateDelegate);\n        this.material = material;\n    }\n    Object.defineProperty(Sprite.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            return Sprite.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sprite.prototype, \"graphics\", {\n        /**\n         * Specifies the Graphics object belonging to this Sprite object, where\n         * drawing commands can occur.\n         */\n        get: function () {\n            if (this._iSourcePrefab)\n                this._iSourcePrefab._iValidate();\n            return this._graphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sprite.prototype, \"animator\", {\n        /**\n         * Defines the animator of the graphics object.  Default value is <code>null</code>.\n         */\n        get: function () {\n            return this._graphics.animator;\n        },\n        set: function (value) {\n            if (this._graphics.animator)\n                this._graphics.animator.removeOwner(this);\n            this._graphics.animator = value;\n            if (this._graphics.animator)\n                this._graphics.animator.addOwner(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sprite.prototype, \"material\", {\n        /**\n         * The material with which to render the Sprite.\n         */\n        get: function () {\n            return this._graphics.material;\n        },\n        set: function (value) {\n            this._graphics.material = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sprite.prototype, \"style\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._graphics.style;\n        },\n        set: function (value) {\n            this._graphics.style = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    Sprite.prototype.bakeTransformations = function () {\n        this._graphics.applyTransformation(this.transform.matrix3D);\n        this.transform.clearMatrix3D();\n    };\n    /**\n     * @inheritDoc\n     */\n    Sprite.prototype.dispose = function () {\n        this.disposeValues();\n        Sprite._sprites.push(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    Sprite.prototype.disposeValues = function () {\n        _super.prototype.disposeValues.call(this);\n        this._graphics.dispose();\n    };\n    /**\n     * Clones this Sprite instance along with all it's children, while re-using the same\n     * material, graphics and animation set. The returned result will be a copy of this sprite,\n     * containing copies of all of it's children.\n     *\n     * Properties that are re-used (i.e. not cloned) by the new copy include name,\n     * graphics, and material. Properties that are cloned or created anew for the copy\n     * include subSpritees, children of the sprite, and the animator.\n     *\n     * If you want to copy just the sprite, reusing it's graphics and material while not\n     * cloning it's children, the simplest way is to create a new sprite manually:\n     *\n     * <code>\n     * var clone : Sprite = new Sprite(original.graphics, original.material);\n     * </code>\n     */\n    Sprite.prototype.clone = function () {\n        var newInstance = (Sprite._sprites.length) ? Sprite._sprites.pop() : new Sprite();\n        this.copyTo(newInstance);\n        return newInstance;\n    };\n    Sprite.prototype.copyTo = function (sprite) {\n        _super.prototype.copyTo.call(this, sprite);\n        this._graphics.copyTo(sprite.graphics);\n    };\n    /**\n     * //TODO\n     *\n     * @protected\n     */\n    Sprite.prototype._pUpdateBoxBounds = function () {\n        _super.prototype._pUpdateBoxBounds.call(this);\n        this._pBoxBounds.union(this._graphics.getBoxBounds(), this._pBoxBounds);\n    };\n    Sprite.prototype._pUpdateSphereBounds = function () {\n        _super.prototype._pUpdateSphereBounds.call(this);\n        var box = this.getBox();\n        if (!this._center)\n            this._center = new Vector3D_1.default();\n        this._center.x = box.x + box.width / 2;\n        this._center.y = box.y + box.height / 2;\n        this._center.z = box.z + box.depth / 2;\n        this._pSphereBounds = this._graphics.getSphereBounds(this._center, this._pSphereBounds);\n    };\n    /**\n     * //TODO\n     *\n     * @private\n     */\n    Sprite.prototype._onGraphicsInvalidate = function (event) {\n        if (this._pIsEntity != Boolean(this._graphics.count)) {\n            if (this._pImplicitPartition)\n                this._pImplicitPartition._iUnregisterEntity(this);\n            this._pIsEntity = Boolean(this._graphics.count);\n            if (this._pImplicitPartition)\n                this._pImplicitPartition._iRegisterEntity(this);\n        }\n        this._pInvalidateBounds();\n    };\n    /**\n     *\n     * @param renderer\n     *\n     * @internal\n     */\n    Sprite.prototype._acceptTraverser = function (traverser) {\n        this.graphics.acceptTraverser(traverser);\n    };\n    Sprite.prototype._hitTestPointInternal = function (x, y, shapeFlag, masksFlag) {\n        if (this._graphics.count) {\n            this._tempPoint.setTo(x, y);\n            var local = this.globalToLocal(this._tempPoint, this._tempPoint);\n            var box;\n            //early out for box test\n            if (!(box = this.getBox()).contains(local.x, local.y, 0))\n                return false;\n            //early out for non-shape tests\n            if (!shapeFlag)\n                return true;\n            //ok do the graphics thing\n            if (this._graphics._hitTestPointInternal(local.x, local.y))\n                return true;\n        }\n        return _super.prototype._hitTestPointInternal.call(this, x, y, shapeFlag, masksFlag);\n    };\n    Sprite.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        this._graphics.clear();\n    };\n    Sprite._sprites = new Array();\n    Sprite.assetType = \"[asset Sprite]\";\n    return Sprite;\n}(DisplayObjectContainer_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Sprite;\n\n},{\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/geom/Point\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-display/lib/display/DisplayObjectContainer\":\"awayjs-display/lib/display/DisplayObjectContainer\",\"awayjs-display/lib/graphics/Graphics\":\"awayjs-display/lib/graphics/Graphics\"}],\"awayjs-display/lib/display/TextField\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\nvar Float2Attributes_1 = require(\"awayjs-core/lib/attributes/Float2Attributes\");\nvar Byte4Attributes_1 = require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nvar Matrix_1 = require(\"awayjs-core/lib/geom/Matrix\");\nvar ColorTransform_1 = require(\"awayjs-core/lib/geom/ColorTransform\");\nvar Sampler2D_1 = require(\"awayjs-core/lib/image/Sampler2D\");\nvar HierarchicalProperties_1 = require(\"awayjs-display/lib/base/HierarchicalProperties\");\nvar Style_1 = require(\"awayjs-display/lib/base/Style\");\nvar TextFieldType_1 = require(\"awayjs-display/lib/text/TextFieldType\");\nvar Sprite_1 = require(\"awayjs-display/lib/display/Sprite\");\nvar TriangleElements_1 = require(\"awayjs-display/lib/graphics/TriangleElements\");\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n *\n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nvar TextField = (function (_super) {\n    __extends(TextField, _super);\n    /**\n     * Creates a new TextField instance. After you create the TextField instance,\n     * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n     * the parent DisplayObjectContainer object to add the TextField instance to\n     * the display list.\n     *\n     * <p>The default size for a text field is 100 x 100 pixels.</p>\n     */\n    function TextField() {\n        _super.call(this);\n        this._text = \"\";\n        this.type = TextFieldType_1.default.STATIC;\n    }\n    Object.defineProperty(TextField.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return TextField.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"bottomScrollV\", {\n        /**\n         * An integer(1-based index) that indicates the bottommost line that is\n         * currently visible in the specified text field. Think of the text field as\n         * a window onto a block of text. The <code>scrollV</code> property is the\n         * 1-based index of the topmost visible line in the window.\n         *\n         * <p>All the text between the lines indicated by <code>scrollV</code> and\n         * <code>bottomScrollV</code> is currently visible in the text field.</p>\n         */\n        get: function () {\n            return this._bottomScrollV;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"caretIndex\", {\n        /**\n         * The index of the insertion point(caret) position. If no insertion point\n         * is displayed, the value is the position the insertion point would be if\n         * you restored focus to the field(typically where the insertion point last\n         * was, or 0 if the field has not had focus).\n         *\n         * <p>Selection span indexes are zero-based(for example, the first position\n         * is 0, the second position is 1, and so on).</p>\n         */\n        get: function () {\n            return this._caretIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"length\", {\n        /**\n         * The number of characters in a text field. A character such as tab\n         * (<code>\\t</code>) counts as one character.\n         */\n        get: function () {\n            return this._length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * The maximum value of <code>scrollH</code>.\n     */\n    TextField.prototype.maxScrollH = function () {\n        return this._maxScrollH;\n    };\n    /**\n     * The maximum value of <code>scrollV</code>.\n     */\n    TextField.prototype.maxScrollV = function () {\n        return this._maxScrollV;\n    };\n    Object.defineProperty(TextField.prototype, \"numLines\", {\n        /**\n         * Defines the number of text lines in a multiline text field. If\n         * <code>wordWrap</code> property is set to <code>true</code>, the number of\n         * lines increases when text wraps.\n         */\n        get: function () {\n            return this._numLines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"selectionBeginIndex\", {\n        /**\n         * The zero-based character index value of the first character in the current\n         * selection. For example, the first character is 0, the second character is\n         * 1, and so on. If no text is selected, this property is the value of\n         * <code>caretIndex</code>.\n         */\n        get: function () {\n            return this._selectionBeginIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"selectionEndIndex\", {\n        /**\n         * The zero-based character index value of the last character in the current\n         * selection. For example, the first character is 0, the second character is\n         * 1, and so on. If no text is selected, this property is the value of\n         * <code>caretIndex</code>.\n         */\n        get: function () {\n            return this._selectionEndIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"text\", {\n        /**\n         * A string that is the current text in the text field. Lines are separated\n         * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n         * property contains unformatted text in the text field, without HTML tags.\n         *\n         * <p>To get the text in HTML form, use the <code>htmlText</code>\n         * property.</p>\n         */\n        get: function () {\n            return this._text;\n        },\n        set: function (value) {\n            value = value.toString();\n            if (this._text == value)\n                return;\n            this._text = value;\n            this._textGraphicsDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"textFormat\", {\n        get: function () {\n            return this._textFormat;\n        },\n        set: function (value) {\n            if (this._textFormat == value)\n                return;\n            this._textFormat = value;\n            this._textGraphicsDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"graphics\", {\n        /**\n         * The graphics used by the sprite that provides it with its shape.\n         */\n        get: function () {\n            if (this._textGraphicsDirty)\n                this.reConstruct();\n            return this._graphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"textColor\", {\n        get: function () {\n            return this._textColor;\n        },\n        set: function (value) {\n            this._textColor = value;\n            if (!this.transform.colorTransform)\n                this.transform.colorTransform = new ColorTransform_1.default();\n            this.transform.colorTransform.color = value;\n            this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.default.COLOR_TRANSFORM);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"textInteractionMode\", {\n        /**\n         * The interaction mode property, Default value is\n         * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n         * that the text can be scrolled but not selected. One can switch to the\n         * selectable mode through the in-built context menu on the text field. On\n         * Desktop, the normal mode implies that the text is in scrollable as well as\n         * selection mode.\n         */\n        get: function () {\n            return this._textInteractionMode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"textWidth\", {\n        /**\n         * The width of the text in pixels.\n         */\n        get: function () {\n            return this._textWidth;\n        },\n        set: function (value) {\n            this._textWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"textHeight\", {\n        /**\n         * The width of the text in pixels.\n         */\n        get: function () {\n            return this._textHeight;\n        },\n        set: function (value) {\n            this._textHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"isEntity\", {\n        /**\n         *\n         */\n        get: function () {\n            return true; //TODO do this better\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TextField.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        if (this._textElements)\n            this._textElements.clear();\n    };\n    /**\n     * @inheritDoc\n     */\n    TextField.prototype.dispose = function () {\n        this.disposeValues();\n        TextField._textFields.push(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    TextField.prototype.disposeValues = function () {\n        _super.prototype.disposeValues.call(this);\n        this._textFormat = null;\n        this._textGraphic = null;\n        if (this._textElements) {\n            this._textElements.dispose();\n            this._textElements = null;\n        }\n    };\n    /**\n     * Reconstructs the Graphics for this Text-field.\n     */\n    TextField.prototype.reConstruct = function () {\n        this._textGraphicsDirty = false;\n        if (this._textFormat == null)\n            return;\n        if (this._textGraphic) {\n            this._textGraphic.dispose();\n            this._textGraphic = null;\n            this._textElements.clear();\n            this._textElements.dispose();\n            this._textElements = null;\n        }\n        if (this._text == \"\")\n            return;\n        var numVertices = 0;\n        var elements;\n        var char_scale = this._textFormat.size / this._textFormat.font_table.get_font_em_size();\n        var y_offset = 0;\n        var prev_char = null;\n        var j = 0;\n        var k = 0;\n        var whitespace_width = (this._textFormat.font_table.get_whitespace_width() * char_scale) + this._textFormat.letterSpacing;\n        var textlines = this.text.toString().split(\"\\\\n\");\n        var final_lines_chars = [];\n        var final_lines_char_scale = [];\n        var final_lines_width = [];\n        var final_lines_justify_bool = [];\n        var final_lines_justify = [];\n        var maxlineWidth = this.textWidth - (4 + this._textFormat.leftMargin + this._textFormat.rightMargin + this._textFormat.indent);\n        for (var tl = 0; tl < textlines.length; tl++) {\n            final_lines_chars.push([]);\n            final_lines_char_scale.push([]);\n            final_lines_width.push(0);\n            final_lines_justify.push(0);\n            final_lines_justify_bool.push(false);\n            var words = textlines[tl].split(\" \");\n            for (var i = 0; i < words.length; i++) {\n                var word_width = 0;\n                var word_chars = [];\n                var word_chars_scale = [];\n                var c_cnt = 0;\n                for (var w = 0; w < words[i].length; w++) {\n                    char_scale = this._textFormat.size / this._textFormat.font_table.get_font_em_size();\n                    var this_char = this._textFormat.font_table.getChar(words[i].charCodeAt(w).toString());\n                    if (this_char == null) {\n                        if (this._textFormat.fallback_font_table) {\n                            char_scale = this._textFormat.size / this._textFormat.fallback_font_table.get_font_em_size();\n                            this_char = this._textFormat.fallback_font_table.getChar(words[i].charCodeAt(w).toString());\n                        }\n                    }\n                    if (this_char != null) {\n                        elements = this_char.elements;\n                        if (elements != null) {\n                            numVertices += elements.numVertices;\n                            // find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n                            var kerning_value = 0;\n                            if (prev_char != null) {\n                                for (var k = 0; k < prev_char.kerningCharCodes.length; k++) {\n                                    if (prev_char.kerningCharCodes[k] == words[i].charCodeAt(w)) {\n                                        kerning_value = prev_char.kerningValues[k];\n                                        break;\n                                    }\n                                }\n                            }\n                            word_width += ((2 + this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n                        }\n                        else {\n                            // if no char-elements was found, we insert a \"space\"\n                            word_width += whitespace_width;\n                        }\n                    }\n                    else {\n                        // if no char-elements was found, we insert a \"space\"\n                        //x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n                        word_width += whitespace_width;\n                    }\n                    word_chars_scale[c_cnt] = char_scale;\n                    word_chars[c_cnt++] = this_char;\n                }\n                if (((final_lines_width[final_lines_width.length - 1] + word_width) <= maxlineWidth) || (final_lines_chars[final_lines_chars.length - 1].length == 0)) {\n                    // if line can hold this word without breaking the bounds, we can just add all chars\n                    for (var fw = 0; fw < word_chars_scale.length; fw++) {\n                        final_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n                        final_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n                    }\n                    final_lines_width[final_lines_width.length - 1] += word_width;\n                }\n                else {\n                    // word does not fit\n                    // todo respect autowrapping properties.\n                    // right now we just pretend everything has autowrapping and multiline\n                    if (final_lines_chars[final_lines_chars.length - 1][final_lines_chars[final_lines_chars.length - 1].length - 1] == null) {\n                        final_lines_chars[final_lines_chars.length - 1].pop();\n                        final_lines_char_scale[final_lines_char_scale.length - 1].pop();\n                        final_lines_width[final_lines_width.length - 1] -= whitespace_width;\n                        final_lines_justify[final_lines_justify.length - 1] -= 1;\n                    }\n                    final_lines_justify_bool[final_lines_justify_bool.length - 1] = true;\n                    final_lines_chars.push([]);\n                    final_lines_char_scale.push([]);\n                    final_lines_width.push(0);\n                    final_lines_justify.push(0);\n                    final_lines_justify_bool.push(false);\n                    for (var fw = 0; fw < word_chars_scale.length; fw++) {\n                        final_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n                        final_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n                    }\n                    final_lines_width[final_lines_width.length - 1] = word_width;\n                }\n                if (i < (words.length - 1)) {\n                    if ((final_lines_width[final_lines_width.length - 1]) <= maxlineWidth) {\n                        final_lines_chars[final_lines_chars.length - 1].push(null);\n                        final_lines_char_scale[final_lines_char_scale.length - 1].push(char_scale);\n                        final_lines_width[final_lines_width.length - 1] += whitespace_width;\n                        final_lines_justify[final_lines_justify.length - 1] += 1;\n                    }\n                }\n            }\n        }\n        y_offset = 2 + (this._textFormat.font_table.ascent - this._textFormat.font_table.get_font_em_size()) * char_scale;\n        var vertices = new Float32Array(numVertices * 3);\n        for (var i = 0; i < final_lines_chars.length; i++) {\n            var x_offset = 2 + this._textFormat.leftMargin + this._textFormat.indent;\n            var justify_addion = 0;\n            if (this._textFormat.align == \"center\") {\n                x_offset = 2 + this._textFormat.leftMargin + this._textFormat.indent + (maxlineWidth - final_lines_width[i]) / 2;\n            }\n            else if (this._textFormat.align == \"justify\") {\n                if (final_lines_justify_bool[i]) {\n                    justify_addion = ((maxlineWidth) - final_lines_width[i]) / final_lines_justify[i];\n                }\n            }\n            else if (this._textFormat.align == \"right\") {\n                x_offset = (this._textWidth - final_lines_width[i]) - (2 + this._textFormat.rightMargin);\n            }\n            //console.log(\"this._textFormat.align=\"+this._textFormat.align);\n            //console.log(\"this._width=\"+this._width);\n            for (var t = 0; t < final_lines_chars[i].length; t++) {\n                var this_char = final_lines_chars[i][t];\n                char_scale = final_lines_char_scale[i][t];\n                if (this_char != null) {\n                    elements = this_char.elements;\n                    if (elements != null) {\n                        var buffer = new Float32Array(elements.concatenatedBuffer.buffer);\n                        for (var v = 0; v < elements.numVertices; v++) {\n                            vertices[j++] = buffer[v * 3] * char_scale + x_offset;\n                            vertices[j++] = buffer[v * 3 + 1] * char_scale + y_offset;\n                            vertices[j++] = buffer[v * 3 + 2];\n                        }\n                        // find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n                        var kerning_value = 0;\n                        if (prev_char != null) {\n                            for (var k = 0; k < prev_char.kerningCharCodes.length; k++) {\n                                if (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n                                    kerning_value = prev_char.kerningValues[k];\n                                    break;\n                                }\n                            }\n                        }\n                        x_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n                    }\n                    else {\n                        // if no char-elements was found, we insert a \"space\"\n                        x_offset += whitespace_width + justify_addion;\n                    }\n                }\n                else {\n                    x_offset += whitespace_width + justify_addion;\n                }\n            }\n            // hack for multiline textfield in icycle.\n            y_offset += (this._textFormat.font_table.ascent + this._textFormat.font_table.descent) * char_scale;\n            //y_offset+=(this._textFormat.font_table.get_font_em_size()-this._textFormat.font_table.descent)*char_scale;\n            y_offset += this._textFormat.leading;\n        }\n        var attributesView = new AttributesView_1.default(Float32Array, 3);\n        attributesView.set(vertices);\n        var vertexBuffer = attributesView.buffer;\n        attributesView.dispose();\n        this._textElements = new TriangleElements_1.default(vertexBuffer);\n        this._textElements.setPositions(new Float2Attributes_1.default(vertexBuffer));\n        this._textElements.setCustomAttributes(\"curves\", new Byte4Attributes_1.default(vertexBuffer, false));\n        this._textGraphic = this._graphics.addGraphic(this._textElements);\n        this.material = this._textFormat.material;\n        var sampler = new Sampler2D_1.default();\n        this.style = new Style_1.default();\n        this.style.addSamplerAt(sampler, this.material.getTextureAt(0));\n        this.style.uvMatrix = new Matrix_1.default(0, 0, 0, 0, this._textFormat.uv_values[0], this._textFormat.uv_values[1]);\n        this.material.animateUVs = true;\n    };\n    /**\n     * Appends the string specified by the <code>newText</code> parameter to the\n     * end of the text of the text field. This method is more efficient than an\n     * addition assignment(<code>+=</code>) on a <code>text</code> property\n     * (such as <code>someTextField.text += moreText</code>), particularly for a\n     * text field that contains a significant amount of content.\n     *\n     * @param newText The string to append to the existing text.\n     */\n    TextField.prototype.appendText = function (newText) {\n        this._text += newText;\n    };\n    /**\n     * *tells the Textfield that a paragraph is defined completly.\n     * e.g. the textfield will start a new line for future added text.\n     */\n    TextField.prototype.closeParagraph = function () {\n        //TODO\n    };\n    /**\n     * Returns a rectangle that is the bounding box of the character.\n     *\n     * @param charIndex The zero-based index value for the character(for\n     *                  example, the first position is 0, the second position is\n     *                  1, and so on).\n     * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n     *         maximum values defining the bounding box of the character.\n     */\n    TextField.prototype.getCharBoundaries = function (charIndex) {\n        return this._charBoundaries;\n    };\n    /**\n     * Returns the zero-based index value of the character at the point specified\n     * by the <code>x</code> and <code>y</code> parameters.\n     *\n     * @param x The <i>x</i> coordinate of the character.\n     * @param y The <i>y</i> coordinate of the character.\n     * @return The zero-based index value of the character(for example, the\n     *         first position is 0, the second position is 1, and so on). Returns\n     *         -1 if the point is not over any character.\n     */\n    TextField.prototype.getCharIndexAtPoint = function (x, y) {\n        return this._charIndexAtPoint;\n    };\n    /**\n     * Given a character index, returns the index of the first character in the\n     * same paragraph.\n     *\n     * @param charIndex The zero-based index value of the character(for example,\n     *                  the first character is 0, the second character is 1, and\n     *                  so on).\n     * @return The zero-based index value of the first character in the same\n     *         paragraph.\n     * @throws RangeError The character index specified is out of range.\n     */\n    TextField.prototype.getFirstCharInParagraph = function (charIndex /*int*/) {\n        return this._firstCharInParagraph;\n    };\n    /**\n     * Returns a DisplayObject reference for the given <code>id</code>, for an\n     * image or SWF file that has been added to an HTML-formatted text field by\n     * using an <code><img></code> tag. The <code><img></code> tag is in the\n     * following format:\n     *\n     * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n     * 'instanceName' ></code></pre></p>\n     *\n     * @param id The <code>id</code> to match(in the <code>id</code> attribute\n     *           of the <code><img></code> tag).\n     * @return The display object corresponding to the image or SWF file with the\n     *         matching <code>id</code> attribute in the <code><img></code> tag\n     *         of the text field. For media loaded from an external source, this\n     *         object is a Loader object, and, once loaded, the media object is a\n     *         child of that Loader object. For media embedded in the SWF file,\n     *         it is the loaded object. If no <code><img></code> tag with the\n     *         matching <code>id</code> exists, the method returns\n     *         <code>null</code>.\n     */\n    TextField.prototype.getImageReference = function (id) {\n        return this._imageReference;\n    };\n    /**\n     * Returns the zero-based index value of the line at the point specified by\n     * the <code>x</code> and <code>y</code> parameters.\n     *\n     * @param x The <i>x</i> coordinate of the line.\n     * @param y The <i>y</i> coordinate of the line.\n     * @return The zero-based index value of the line(for example, the first\n     *         line is 0, the second line is 1, and so on). Returns -1 if the\n     *         point is not over any line.\n     */\n    TextField.prototype.getLineIndexAtPoint = function (x, y) {\n        return this._lineIndexAtPoint;\n    };\n    /**\n     * Returns the zero-based index value of the line containing the character\n     * specified by the <code>charIndex</code> parameter.\n     *\n     * @param charIndex The zero-based index value of the character(for example,\n     *                  the first character is 0, the second character is 1, and\n     *                  so on).\n     * @return The zero-based index value of the line.\n     * @throws RangeError The character index specified is out of range.\n     */\n    TextField.prototype.getLineIndexOfChar = function (charIndex /*int*/) {\n        return this._lineIndexOfChar;\n    };\n    /**\n     * Returns the number of characters in a specific text line.\n     *\n     * @param lineIndex The line number for which you want the length.\n     * @return The number of characters in the line.\n     * @throws RangeError The line number specified is out of range.\n     */\n    TextField.prototype.getLineLength = function (lineIndex /*int*/) {\n        return this._lineLength;\n    };\n    /**\n     * Returns metrics information about a given text line.\n     *\n     * @param lineIndex The line number for which you want metrics information.\n     * @return A TextLineMetrics object.\n     * @throws RangeError The line number specified is out of range.\n     */\n    TextField.prototype.getLineMetrics = function (lineIndex /*int*/) {\n        return this._lineMetrics;\n    };\n    /**\n     * Returns the character index of the first character in the line that the\n     * <code>lineIndex</code> parameter specifies.\n     *\n     * @param lineIndex The zero-based index value of the line(for example, the\n     *                  first line is 0, the second line is 1, and so on).\n     * @return The zero-based index value of the first character in the line.\n     * @throws RangeError The line number specified is out of range.\n     */\n    TextField.prototype.getLineOffset = function (lineIndex /*int*/) {\n        return this._lineOffset;\n    };\n    /**\n     * Returns the text of the line specified by the <code>lineIndex</code>\n     * parameter.\n     *\n     * @param lineIndex The zero-based index value of the line(for example, the\n     *                  first line is 0, the second line is 1, and so on).\n     * @return The text string contained in the specified line.\n     * @throws RangeError The line number specified is out of range.\n     */\n    TextField.prototype.getLineText = function (lineIndex /*int*/) {\n        return this._lineText;\n    };\n    /**\n     * Given a character index, returns the length of the paragraph containing\n     * the given character. The length is relative to the first character in the\n     * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n     * the character index passed in.\n     *\n     * @param charIndex The zero-based index value of the character(for example,\n     *                  the first character is 0, the second character is 1, and\n     *                  so on).\n     * @return Returns the number of characters in the paragraph.\n     * @throws RangeError The character index specified is out of range.\n     */\n    TextField.prototype.getParagraphLength = function (charIndex /*int*/) {\n        return this._paragraphLength;\n    };\n    /**\n     * Returns a TextFormat object that contains formatting information for the\n     * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n     * parameters specify. Only properties that are common to the entire text\n     * specified are set in the resulting TextFormat object. Any property that is\n     * <i>mixed</i>, meaning that it has different values at different points in\n     * the text, has a value of <code>null</code>.\n     *\n     * <p>If you do not specify values for these parameters, this method is\n     * applied to all the text in the text field. </p>\n     *\n     * <p>The following table describes three possible usages:</p>\n     *\n     * @return The TextFormat object that represents the formatting properties\n     *         for the specified text.\n     * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n     *                    specified is out of range.\n     */\n    TextField.prototype.getTextFormat = function (beginIndex, endIndex) {\n        if (beginIndex === void 0) { beginIndex = -1; }\n        if (endIndex === void 0) { endIndex = -1; }\n        return this._textFormat;\n    };\n    /**\n     * Replaces the current selection with the contents of the <code>value</code>\n     * parameter. The text is inserted at the position of the current selection,\n     * using the current default character format and default paragraph format.\n     * The text is not treated as HTML.\n     *\n     * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n     * delete text without disrupting the character and paragraph formatting of\n     * the rest of the text.</p>\n     *\n     * <p><b>Note:</b> This method does not work if a style sheet is applied to\n     * the text field.</p>\n     *\n     * @param value The string to replace the currently selected text.\n     * @throws Error This method cannot be used on a text field with a style\n     *               sheet.\n     */\n    TextField.prototype.replaceSelectedText = function (value) {\n    };\n    /**\n     * Replaces the range of characters that the <code>beginIndex</code> and\n     * <code>endIndex</code> parameters specify with the contents of the\n     * <code>newText</code> parameter. As designed, the text from\n     * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n     *\n     * <p><b>Note:</b> This method does not work if a style sheet is applied to\n     * the text field.</p>\n     *\n     * @param beginIndex The zero-based index value for the start position of the\n     *                   replacement range.\n     * @param endIndex   The zero-based index position of the first character\n     *                   after the desired text span.\n     * @param newText    The text to use to replace the specified range of\n     *                   characters.\n     * @throws Error This method cannot be used on a text field with a style\n     *               sheet.\n     */\n    TextField.prototype.replaceText = function (beginIndex /*int*/, endIndex /*int*/, newText) {\n    };\n    /**\n     * Sets as selected the text designated by the index values of the first and\n     * last characters, which are specified with the <code>beginIndex</code> and\n     * <code>endIndex</code> parameters. If the two parameter values are the\n     * same, this method sets the insertion point, as if you set the\n     * <code>caretIndex</code> property.\n     *\n     * @param beginIndex The zero-based index value of the first character in the\n     *                   selection(for example, the first character is 0, the\n     *                   second character is 1, and so on).\n     * @param endIndex   The zero-based index value of the last character in the\n     *                   selection.\n     */\n    TextField.prototype.setSelection = function (beginIndex /*int*/, endIndex /*int*/) {\n    };\n    /**\n     * Applies the text formatting that the <code>format</code> parameter\n     * specifies to the specified text in a text field. The value of\n     * <code>format</code> must be a TextFormat object that specifies the desired\n     * text formatting changes. Only the non-null properties of\n     * <code>format</code> are applied to the text field. Any property of\n     * <code>format</code> that is set to <code>null</code> is not applied. By\n     * default, all of the properties of a newly created TextFormat object are\n     * set to <code>null</code>.\n     *\n     * <p><b>Note:</b> This method does not work if a style sheet is applied to\n     * the text field.</p>\n     *\n     * <p>The <code>setTextFormat()</code> method changes the text formatting\n     * applied to a range of characters or to the entire body of text in a text\n     * field. To apply the properties of format to all text in the text field, do\n     * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n     * To apply the properties of the format to a range of text, specify values\n     * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n     * You can use the <code>length</code> property to determine the index\n     * values.</p>\n     *\n     * <p>The two types of formatting information in a TextFormat object are\n     * character level formatting and paragraph level formatting. Each character\n     * in a text field can have its own character formatting settings, such as\n     * font name, font size, bold, and italic.</p>\n     *\n     * <p>For paragraphs, the first character of the paragraph is examined for\n     * the paragraph formatting settings for the entire paragraph. Examples of\n     * paragraph formatting settings are left margin, right margin, and\n     * indentation.</p>\n     *\n     * <p>Any text inserted manually by the user, or replaced by the\n     * <code>replaceSelectedText()</code> method, receives the default text field\n     * formatting for new text, and not the formatting specified for the text\n     * insertion point. To set the default formatting for new text, use\n     * <code>defaultTextFormat</code>.</p>\n     *\n     * @param format A TextFormat object that contains character and paragraph\n     *               formatting information.\n     * @throws Error      This method cannot be used on a text field with a style\n     *                    sheet.\n     * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n     *                    specified is out of range.\n     */\n    TextField.prototype.setTextFormat = function (format, beginIndex, endIndex) {\n        if (beginIndex === void 0) { beginIndex = -1; }\n        if (endIndex === void 0) { endIndex = -1; }\n    };\n    /**\n     * Returns true if an embedded font is available with the specified\n     * <code>fontName</code> and <code>fontStyle</code> where\n     * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n     * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n     * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n     * embedded fonts are only used with the flash.text.engine classes. The two\n     * types are distinguished by the <code>fontType</code> property of the\n     * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n     * function.\n     *\n     * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n     * <code>embedFonts</code> is set to <code>true</code> and the only font\n     * available at run time with the specified name and style is of type\n     * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n     * embedded font were available with the specified name and style.</p>\n     *\n     * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n     * available with the same name and style, the <code>EMBEDDED</code> font is\n     * selected and text renders with the <code>EMBEDDED</code> font.</p>\n     *\n     * @param fontName  The name of the embedded font to check.\n     * @param fontStyle Specifies the font style to check. Use\n     *                  <code>flash.text.FontStyle</code>\n     * @return <code>true</code> if a compatible embedded font is available,\n     *         otherwise <code>false</code>.\n     * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n     *                       of <code>flash.text.FontStyle</code>.\n     */\n    TextField.isFontCompatible = function (fontName, fontStyle) {\n        return false;\n    };\n    TextField.prototype.clone = function () {\n        var newInstance = (TextField._textFields.length) ? TextField._textFields.pop() : new TextField();\n        this.copyTo(newInstance);\n        return newInstance;\n    };\n    TextField.prototype.copyTo = function (newInstance) {\n        _super.prototype.copyTo.call(this, newInstance);\n        newInstance.textWidth = this._textWidth;\n        newInstance.textHeight = this._textHeight;\n        newInstance.textFormat = this._textFormat;\n        //newInstance.textColor = this._textColor;\n        newInstance.text = this._text;\n    };\n    TextField._textFields = new Array();\n    TextField.assetType = \"[asset TextField]\";\n    return TextField;\n}(Sprite_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TextField;\n\n},{\"awayjs-core/lib/attributes/AttributesView\":undefined,\"awayjs-core/lib/attributes/Byte4Attributes\":undefined,\"awayjs-core/lib/attributes/Float2Attributes\":undefined,\"awayjs-core/lib/geom/ColorTransform\":undefined,\"awayjs-core/lib/geom/Matrix\":undefined,\"awayjs-core/lib/image/Sampler2D\":undefined,\"awayjs-display/lib/base/HierarchicalProperties\":\"awayjs-display/lib/base/HierarchicalProperties\",\"awayjs-display/lib/base/Style\":\"awayjs-display/lib/base/Style\",\"awayjs-display/lib/display/Sprite\":\"awayjs-display/lib/display/Sprite\",\"awayjs-display/lib/graphics/TriangleElements\":\"awayjs-display/lib/graphics/TriangleElements\",\"awayjs-display/lib/text/TextFieldType\":\"awayjs-display/lib/text/TextFieldType\"}],\"awayjs-display/lib/display\":[function(require,module,exports){\n\"use strict\";\nvar Billboard_1 = require(\"awayjs-display/lib/display/Billboard\");\nexports.Billboard = Billboard_1.default;\nvar Camera_1 = require(\"awayjs-display/lib/display/Camera\");\nexports.Camera = Camera_1.default;\nvar DirectionalLight_1 = require(\"awayjs-display/lib/display/DirectionalLight\");\nexports.DirectionalLight = DirectionalLight_1.default;\nvar DisplayObject_1 = require(\"awayjs-display/lib/display/DisplayObject\");\nexports.DisplayObject = DisplayObject_1.default;\nvar DisplayObjectContainer_1 = require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nexports.DisplayObjectContainer = DisplayObjectContainer_1.default;\nvar LightBase_1 = require(\"awayjs-display/lib/display/LightBase\");\nexports.LightBase = LightBase_1.default;\nvar LightProbe_1 = require(\"awayjs-display/lib/display/LightProbe\");\nexports.LightProbe = LightProbe_1.default;\nvar LineSegment_1 = require(\"awayjs-display/lib/display/LineSegment\");\nexports.LineSegment = LineSegment_1.default;\nvar LoaderContainer_1 = require(\"awayjs-display/lib/display/LoaderContainer\");\nexports.LoaderContainer = LoaderContainer_1.default;\nvar MovieClip_1 = require(\"awayjs-display/lib/display/MovieClip\");\nexports.MovieClip = MovieClip_1.default;\nvar PointLight_1 = require(\"awayjs-display/lib/display/PointLight\");\nexports.PointLight = PointLight_1.default;\nvar Scene_1 = require(\"awayjs-display/lib/display/Scene\");\nexports.Scene = Scene_1.default;\nvar Shape_1 = require(\"awayjs-display/lib/display/Shape\");\nexports.Shape = Shape_1.default;\nvar Skybox_1 = require(\"awayjs-display/lib/display/Skybox\");\nexports.Skybox = Skybox_1.default;\nvar Sprite_1 = require(\"awayjs-display/lib/display/Sprite\");\nexports.Sprite = Sprite_1.default;\nvar TextField_1 = require(\"awayjs-display/lib/display/TextField\");\nexports.TextField = TextField_1.default;\n\n},{\"awayjs-display/lib/display/Billboard\":\"awayjs-display/lib/display/Billboard\",\"awayjs-display/lib/display/Camera\":\"awayjs-display/lib/display/Camera\",\"awayjs-display/lib/display/DirectionalLight\":\"awayjs-display/lib/display/DirectionalLight\",\"awayjs-display/lib/display/DisplayObject\":\"awayjs-display/lib/display/DisplayObject\",\"awayjs-display/lib/display/DisplayObjectContainer\":\"awayjs-display/lib/display/DisplayObjectContainer\",\"awayjs-display/lib/display/LightBase\":\"awayjs-display/lib/display/LightBase\",\"awayjs-display/lib/display/LightProbe\":\"awayjs-display/lib/display/LightProbe\",\"awayjs-display/lib/display/LineSegment\":\"awayjs-display/lib/display/LineSegment\",\"awayjs-display/lib/display/LoaderContainer\":\"awayjs-display/lib/display/LoaderContainer\",\"awayjs-display/lib/display/MovieClip\":\"awayjs-display/lib/display/MovieClip\",\"awayjs-display/lib/display/PointLight\":\"awayjs-display/lib/display/PointLight\",\"awayjs-display/lib/display/Scene\":\"awayjs-display/lib/display/Scene\",\"awayjs-display/lib/display/Shape\":\"awayjs-display/lib/display/Shape\",\"awayjs-display/lib/display/Skybox\":\"awayjs-display/lib/display/Skybox\",\"awayjs-display/lib/display/Sprite\":\"awayjs-display/lib/display/Sprite\",\"awayjs-display/lib/display/TextField\":\"awayjs-display/lib/display/TextField\"}],\"awayjs-display/lib/draw/CapsStyle\":[function(require,module,exports){\n\"use strict\";\n/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nvar CapsStyle = (function () {\n    function CapsStyle() {\n    }\n    /**\n     * Used to specify round caps in the <code>caps</code> parameter of the\n     * <code>flash.display.Graphics.lineStyle()</code> method.\n     */\n    CapsStyle.ROUND = \"round\";\n    /**\n     * Used to specify no caps in the <code>caps</code> parameter of the\n     * <code>flash.display.Graphics.lineStyle()</code> method.\n     */\n    CapsStyle.NONE = \"none\";\n    /**\n     * Used to specify square caps in the <code>caps</code> parameter of the\n     * <code>flash.display.Graphics.lineStyle()</code> method.\n     */\n    CapsStyle.SQUARE = \"square\";\n    return CapsStyle;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CapsStyle;\n\n},{}],\"awayjs-display/lib/draw/GradientType\":[function(require,module,exports){\n\"use strict\";\n/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nvar GradientType = (function () {\n    function GradientType() {\n    }\n    /**\n     * Value used to specify a linear gradient fill.\n     */\n    GradientType.LINEAR = \"linear\";\n    /**\n     * Value used to specify a radial gradient fill.\n     */\n    GradientType.RADIAL = \"radial\";\n    return GradientType;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GradientType;\n\n},{}],\"awayjs-display/lib/draw/GraphicsPathCommand\":[function(require,module,exports){\n\"use strict\";\n/**\n* Defines the values to use for specifying path-drawing commands.\n* The values in this class are used by the Graphics.drawPath() method,\n *or stored in the commands vector of a GraphicsPath object.\n */\nvar GraphicsPathCommand = (function () {\n    function GraphicsPathCommand() {\n    }\n    /**\n     * Represents the default \"do nothing\" command.\n     */\n    GraphicsPathCommand.NO_OP = 0;\n    /**\n     * Specifies a drawing command that moves the current drawing position\n     * to the x- and y-coordinates specified in the data vector.\n     */\n    GraphicsPathCommand.MOVE_TO = 1;\n    /**\n     * Specifies a drawing command that draws a line from the current drawing position\n     * to the x- and y-coordinates specified in the data vector.\n     */\n    GraphicsPathCommand.LINE_TO = 2;\n    /**\n     *  Specifies a drawing command that draws a curve from the current drawing position\n     *  to the x- and y-coordinates specified in the data vector, using a control point.\n     */\n    GraphicsPathCommand.CURVE_TO = 3;\n    /**\n     *  Specifies a drawing command that draws a curve from the current drawing position\n     *  to the x- and y-coordinates specified in the data vector, using a control point.\n     */\n    GraphicsPathCommand.CURVE_TO_2 = 13;\n    /**\n     * Specifies a \"line to\" drawing command,\n     * but uses two sets of coordinates (four values) instead of one set.\n     */\n    GraphicsPathCommand.WIDE_LINE_TO = 4;\n    /**\n     *   Specifies a \"move to\" drawing command,\n     *   but uses two sets of coordinates (four values) instead of one set.\n     */\n    GraphicsPathCommand.WIDE_MOVE_TO = 5;\n    /**\n     * Specifies a drawing command that draws a curve from the current drawing position\n     * to the x- and y-coordinates specified in the data vector, using 2 control points.\n     */\n    GraphicsPathCommand.CUBIC_CURVE = 6;\n    return GraphicsPathCommand;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GraphicsPathCommand;\n\n},{}],\"awayjs-display/lib/draw/GraphicsPathWinding\":[function(require,module,exports){\n\"use strict\";\n/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nvar GraphicsPathWinding = (function () {\n    function GraphicsPathWinding() {\n    }\n    GraphicsPathWinding.EVEN_ODD = \"evenOdd\";\n    GraphicsPathWinding.NON_ZERO = \"nonZero\";\n    return GraphicsPathWinding;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GraphicsPathWinding;\n\n},{}],\"awayjs-display/lib/draw/GraphicsPath\":[function(require,module,exports){\n\"use strict\";\nvar GraphicsPathWinding_1 = require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nvar GraphicsPathCommand_1 = require(\"awayjs-display/lib/draw/GraphicsPathCommand\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\n/**\n\n * Defines the values to use for specifying path-drawing commands.\n * The values in this class are used by the Graphics.drawPath() method,\n *or stored in the commands vector of a GraphicsPath object.\n */\nvar GraphicsPath = (function () {\n    function GraphicsPath(commands, data, winding) {\n        if (commands === void 0) { commands = null; }\n        if (data === void 0) { data = null; }\n        if (winding === void 0) { winding = GraphicsPathWinding_1.default.EVEN_ODD; }\n        this._data = [];\n        this._commands = [];\n        this._draw_directions = [0];\n        this._contours_closed = [false];\n        if (commands != null && data != null) {\n            this._data[0] = data;\n            this._commands[0] = commands;\n        }\n        else {\n            this._data[0] = [];\n            this._commands[0] = [];\n        }\n        this._direction = new Point_1.default(0, -1);\n        this._startPoint = new Point_1.default();\n        this._cur_point = new Point_1.default();\n        this._tmp_point = new Point_1.default();\n        this.isFill = false;\n        this._winding = winding;\n    }\n    Object.defineProperty(GraphicsPath.prototype, \"draw_directions\", {\n        get: function () {\n            return this._draw_directions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicsPath.prototype, \"contours_closed\", {\n        get: function () {\n            return this._contours_closed;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicsPath.prototype, \"isFill\", {\n        get: function () {\n            return this._isFill;\n        },\n        set: function (value) {\n            this._isFill = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicsPath.prototype, \"commands\", {\n        get: function () {\n            return this._commands;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicsPath.prototype, \"data\", {\n        get: function () {\n            return this._data;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GraphicsPath.prototype.curveTo = function (controlX, controlY, anchorX, anchorY) {\n        if (this._commands[this._commands.length - 1].length == 0) {\n            // every contour must start with a moveTo command, so we make sure we have correct startpoint\n            this._commands[this._commands.length - 1].push(GraphicsPathCommand_1.default.MOVE_TO);\n            this._data[this._data.length - 1].push(this._cur_point.x);\n            this._data[this._data.length - 1].push(this._cur_point.y);\n        }\n        this._commands[this._commands.length - 1].push(GraphicsPathCommand_1.default.CURVE_TO);\n        if (this.isFill) {\n            this._tmp_point.x = anchorX - this._cur_point.x;\n            this._tmp_point.y = anchorY - this._cur_point.y;\n            this._tmp_point.normalize();\n            var testpoint = new Point_1.default(this._tmp_point.x, this._tmp_point.y);\n            testpoint.normalize();\n            var degree_anchor = Math.acos(this._tmp_point.x * this._direction.x + this._tmp_point.y * this._direction.y) * 180 / Math.PI;\n            if (degree_anchor > 180)\n                degree_anchor -= 360;\n            //var degree_anchor:number=Math.atan2(this._tmp_point.x, this._tmp_point.y) * 180 / Math.PI;\n            this._draw_directions[this._draw_directions.length - 1] += degree_anchor;\n            this._tmp_point.x = controlX - this._cur_point.x;\n            this._tmp_point.y = controlY - this._cur_point.y;\n            this._tmp_point.normalize();\n            //angle = atan2( a.x*b.y - a.y*b.x, a.x*b.x + a.y*b.y );\n            var degree_control = (Math.atan2(this._tmp_point.x * testpoint.y - this._tmp_point.y * testpoint.x, this._tmp_point.x * testpoint.x + this._tmp_point.y * testpoint.y));\n            if (degree_control > 180)\n                degree_control -= 360;\n            //var degree_control:number=(Math.atan2(this._tmp_point.x, this._tmp_point.y) * 180 / Math.PI);\n            console.log(\"degree_control \" + degree_control);\n            console.log(\"degree_anchor \" + degree_anchor);\n            console.log(\"this._draw_directions[this._draw_directions.length-1] \" + this._draw_directions[this._draw_directions.length - 1]);\n            this._direction.x = testpoint.x;\n            this._direction.y = testpoint.y;\n            if ((degree_control) < 0)\n                this._data[this._data.length - 1].push(1);\n            else\n                this._data[this._data.length - 1].push(2);\n        }\n        else {\n            this._data[this._data.length - 1].push(1);\n        }\n        this._cur_point.x = anchorX;\n        this._cur_point.y = anchorY;\n        this._data[this._data.length - 1].push(controlX);\n        this._data[this._data.length - 1].push(controlY);\n        this._data[this._data.length - 1].push(anchorX);\n        this._data[this._data.length - 1].push(anchorY);\n    };\n    GraphicsPath.prototype.lineTo = function (x, y) {\n        if (this._commands[this._commands.length - 1].length == 0) {\n            // every contour must start with a moveTo command, so we make sure we have correct startpoint\n            this._commands[this._commands.length - 1].push(GraphicsPathCommand_1.default.MOVE_TO);\n            this._data[this._data.length - 1].push(this._cur_point.x);\n            this._data[this._data.length - 1].push(this._cur_point.y);\n        }\n        this._commands[this._commands.length - 1].push(GraphicsPathCommand_1.default.LINE_TO);\n        this._data[this._data.length - 1].push(x);\n        this._data[this._data.length - 1].push(y);\n        if (this.isFill) {\n            this._tmp_point.x = x - this._cur_point.x;\n            this._tmp_point.y = y - this._cur_point.y;\n            this._tmp_point.normalize();\n            this._direction.x = this._tmp_point.x;\n            this._direction.y = this._tmp_point.y;\n            var degree_anchor = Math.atan2(this._tmp_point.x, this._tmp_point.y) * 180 / Math.PI;\n            this._draw_directions[this._draw_directions.length - 1] += degree_anchor;\n        }\n        this._cur_point.x = x;\n        this._cur_point.y = y;\n    };\n    GraphicsPath.prototype.moveTo = function (x, y) {\n        if (this._commands[this._commands.length - 1].length > 0) {\n            this.finalizeContour();\n            this._draw_directions.push(0);\n            this._contours_closed.push(false);\n            this._commands.push([]);\n            this._data.push([]);\n        }\n        this._startPoint.x = x;\n        this._startPoint.y = y;\n        this._cur_point.x = x;\n        this._cur_point.y = y;\n    };\n    GraphicsPath.prototype.finalizeContour = function () {\n        if ((this._startPoint.x != this._cur_point.x) || (this._startPoint.y != this._cur_point.y)) {\n            if (this.isFill) {\n                this.lineTo(this._startPoint.x, this._startPoint.y);\n            }\n        }\n        else {\n            this._contours_closed[this._contours_closed.length - 1] = true;\n        }\n    };\n    GraphicsPath.prototype.wideLineTo = function (x, y) {\n        // not used\n        /*\n         this._commands.push(GraphicsPathCommand.WIDE_LINE_TO);\n         this._data.push(0);\n         this._data.push(0);\n         this._data.push(x);\n         this._data.push(y);\n         */\n    };\n    GraphicsPath.prototype.wideMoveTo = function (x, y) {\n        // not used\n        /*\n         this._commands.push(GraphicsPathCommand.WIDE_MOVE_TO);\n         this._data.push(0);\n         this._data.push(0);\n         this._data.push(x);\n         this._data.push(y);\n         */\n    };\n    return GraphicsPath;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GraphicsPath;\n\n},{\"awayjs-core/lib/geom/Point\":undefined,\"awayjs-display/lib/draw/GraphicsPathCommand\":\"awayjs-display/lib/draw/GraphicsPathCommand\",\"awayjs-display/lib/draw/GraphicsPathWinding\":\"awayjs-display/lib/draw/GraphicsPathWinding\"}],\"awayjs-display/lib/draw/Graphics\":[function(require,module,exports){\n\"use strict\";\nvar GraphicsPath_1 = require(\"awayjs-display/lib/draw/GraphicsPath\");\nvar GraphicsPathCommand_1 = require(\"awayjs-display/lib/draw/GraphicsPathCommand\");\nvar DefaultMaterialManager_1 = require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\nvar Float3Attributes_1 = require(\"awayjs-core/lib/attributes/Float3Attributes\");\nvar Float2Attributes_1 = require(\"awayjs-core/lib/attributes/Float2Attributes\");\nvar PartialImplementationError_1 = require(\"awayjs-core/lib/errors/PartialImplementationError\");\nvar TriangleElements_1 = require(\"awayjs-display/lib/graphics/TriangleElements\");\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nvar Graphics = (function () {\n    function Graphics(target) {\n        this._current_position = new Point_1.default();\n        this._target = target;\n        this._queued_fill_pathes = [];\n        this._queued_stroke_pathes = [];\n        this._active_fill_path = null;\n        this._active_stroke_path = null;\n        this._current_position = new Point_1.default();\n    }\n    /**\n     * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n     * tiled to fill the area. The fill remains in effect until you call the\n     * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n     * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n     * method. Calling the <code>clear()</code> method clears the fill.\n     *\n     * <p>The application renders the fill whenever three or more points are\n     * drawn, or when the <code>endFill()</code> method is called. </p>\n     *\n     * @param bitmap A transparent or opaque bitmap image that contains the bits\n     *               to be displayed.\n     * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n     *               can use to define transformations on the bitmap. For\n     *               example, you can use the following matrix to rotate a bitmap\n     *               by 45 degrees(pi/4 radians):\n     * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n     *               pattern. If <code>false</code>, the bitmap image does not\n     *               repeat, and the edges of the bitmap are used for any fill\n     *               area that extends beyond the bitmap.\n     *\n     *               <p>For example, consider the following bitmap(a 20 x\n     *               20-pixel checkerboard pattern):</p>\n     *\n     *               <p>When <code>repeat</code> is set to <code>true</code>(as\n     *               in the following example), the bitmap fill repeats the\n     *               bitmap:</p>\n     *\n     *               <p>When <code>repeat</code> is set to <code>false</code>,\n     *               the bitmap fill uses the edge pixels for the fill area\n     *               outside the bitmap:</p>\n     * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n     *               by using a nearest-neighbor algorithm and look pixelated. If\n     *               <code>true</code>, upscaled bitmap images are rendered by\n     *               using a bilinear algorithm. Rendering by using the nearest\n     *               neighbor algorithm is faster.\n     */\n    Graphics.prototype.beginBitmapFill = function (bitmap, matrix, repeat, smooth) {\n        if (matrix === void 0) { matrix = null; }\n        if (repeat === void 0) { repeat = true; }\n        if (smooth === void 0) { smooth = false; }\n        this.draw_fill();\n        // start a new fill path\n        this._active_fill_path = new GraphicsPath_1.default();\n        this._active_fill_path.isFill = true;\n        if (this._current_position.x != 0 || this._current_position.y != 0)\n            this._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\n        this._queued_fill_pathes.push(this._active_fill_path);\n    };\n    /**\n     * Specifies a simple one-color fill that subsequent calls to other Graphics\n     * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n     * when drawing. The fill remains in effect until you call the\n     * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n     * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n     * method. Calling the <code>clear()</code> method clears the fill.\n     *\n     * <p>The application renders the fill whenever three or more points are\n     * drawn, or when the <code>endFill()</code> method is called.</p>\n     *\n     * @param color The color of the fill(0xRRGGBB).\n     * @param alpha The alpha value of the fill(0.0 to 1.0).\n     */\n    Graphics.prototype.beginFill = function (color /*int*/, alpha) {\n        if (alpha === void 0) { alpha = 1; }\n        this.draw_fill();\n        // start a new fill path\n        this._active_fill_path = new GraphicsPath_1.default();\n        this._active_fill_path.isFill = true;\n        if (this._current_position.x != 0 || this._current_position.y != 0)\n            this._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\n        this._queued_fill_pathes.push(this._active_fill_path);\n    };\n    /**\n     * Specifies a gradient fill used by subsequent calls to other Graphics\n     * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n     * the object. The fill remains in effect until you call the\n     * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n     * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n     * method. Calling the <code>clear()</code> method clears the fill.\n     *\n     * <p>The application renders the fill whenever three or more points are\n     * drawn, or when the <code>endFill()</code> method is called. </p>\n     *\n     * @param type                A value from the GradientType class that\n     *                            specifies which gradient type to use:\n     *                            <code>GradientType.LINEAR</code> or\n     *                            <code>GradientType.RADIAL</code>.\n     * @param colors              An array of RGB hexadecimal color values used\n     *                            in the gradient; for example, red is 0xFF0000,\n     *                            blue is 0x0000FF, and so on. You can specify\n     *                            up to 15 colors. For each color, specify a\n     *                            corresponding value in the alphas and ratios\n     *                            parameters.\n     * @param alphas              An array of alpha values for the corresponding\n     *                            colors in the colors array; valid values are 0\n     *                            to 1. If the value is less than 0, the default\n     *                            is 0. If the value is greater than 1, the\n     *                            default is 1.\n     * @param ratios              An array of color distribution ratios; valid\n     *                            values are 0-255. This value defines the\n     *                            percentage of the width where the color is\n     *                            sampled at 100%. The value 0 represents the\n     *                            left position in the gradient box, and 255\n     *                            represents the right position in the gradient\n     *                            box.\n     * @param matrix              A transformation matrix as defined by the\n     *                            flash.geom.Matrix class. The flash.geom.Matrix\n     *                            class includes a\n     *                            <code>createGradientBox()</code> method, which\n     *                            lets you conveniently set up the matrix for use\n     *                            with the <code>beginGradientFill()</code>\n     *                            method.\n     * @param spreadMethod        A value from the SpreadMethod class that\n     *                            specifies which spread method to use, either:\n     *                            <code>SpreadMethod.PAD</code>,\n     *                            <code>SpreadMethod.REFLECT</code>, or\n     *                            <code>SpreadMethod.REPEAT</code>.\n     *\n     *                            <p>For example, consider a simple linear\n     *                            gradient between two colors:</p>\n     *\n     *                            <p>This example uses\n     *                            <code>SpreadMethod.PAD</code> for the spread\n     *                            method, and the gradient fill looks like the\n     *                            following:</p>\n     *\n     *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n     *                            for the spread method, the gradient fill looks\n     *                            like the following:</p>\n     *\n     *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n     *                            for the spread method, the gradient fill looks\n     *                            like the following:</p>\n     * @param interpolationMethod A value from the InterpolationMethod class that\n     *                            specifies which value to use:\n     *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n     *                            <code>InterpolationMethod.RGB</code>\n     *\n     *                            <p>For example, consider a simple linear\n     *                            gradient between two colors(with the\n     *                            <code>spreadMethod</code> parameter set to\n     *                            <code>SpreadMethod.REFLECT</code>). The\n     *                            different interpolation methods affect the\n     *                            appearance as follows: </p>\n     * @param focalPointRatio     A number that controls the location of the\n     *                            focal point of the gradient. 0 means that the\n     *                            focal point is in the center. 1 means that the\n     *                            focal point is at one border of the gradient\n     *                            circle. -1 means that the focal point is at the\n     *                            other border of the gradient circle. A value\n     *                            less than -1 or greater than 1 is rounded to -1\n     *                            or 1. For example, the following example shows\n     *                            a <code>focalPointRatio</code> set to 0.75:\n     * @throws ArgumentError If the <code>type</code> parameter is not valid.\n     */\n    Graphics.prototype.beginGradientFill = function (type, colors, alphas, ratios, matrix, spreadMethod, interpolationMethod, focalPointRatio) {\n        if (matrix === void 0) { matrix = null; }\n        if (spreadMethod === void 0) { spreadMethod = \"pad\"; }\n        if (interpolationMethod === void 0) { interpolationMethod = \"rgb\"; }\n        if (focalPointRatio === void 0) { focalPointRatio = 0; }\n        this.draw_fill();\n        // start a new fill path\n        this._active_fill_path = new GraphicsPath_1.default();\n        this._active_fill_path.isFill = true;\n        if (this._current_position.x != 0 || this._current_position.y != 0)\n            this._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\n        this._queued_fill_pathes.push(this._active_fill_path);\n    };\n    /**\n     * Specifies a shader fill used by subsequent calls to other Graphics methods\n     * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n     * object. The fill remains in effect until you call the\n     * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n     * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n     * method. Calling the <code>clear()</code> method clears the fill.\n     *\n     * <p>The application renders the fill whenever three or more points are\n     * drawn, or when the <code>endFill()</code> method is called.</p>\n     *\n     * <p>Shader fills are not supported under GPU rendering; filled areas will\n     * be colored cyan.</p>\n     *\n     * @param shader The shader to use for the fill. This Shader instance is not\n     *               required to specify an image input. However, if an image\n     *               input is specified in the shader, the input must be provided\n     *               manually. To specify the input, set the <code>input</code>\n     *               property of the corresponding ShaderInput property of the\n     *               <code>Shader.data</code> property.\n     *\n     *               <p>When you pass a Shader instance as an argument the shader\n     *               is copied internally. The drawing fill operation uses that\n     *               internal copy, not a reference to the original shader. Any\n     *               changes made to the shader, such as changing a parameter\n     *               value, input, or bytecode, are not applied to the copied\n     *               shader that's used for the fill.</p>\n     * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n     *               can use to define transformations on the shader. For\n     *               example, you can use the following matrix to rotate a shader\n     *               by 45 degrees(pi/4 radians):\n     *\n     *               <p>The coordinates received in the shader are based on the\n     *               matrix that is specified for the <code>matrix</code>\n     *               parameter. For a default(<code>null</code>) matrix, the\n     *               coordinates in the shader are local pixel coordinates which\n     *               can be used to sample an input.</p>\n     * @throws ArgumentError When the shader output type is not compatible with\n     *                       this operation(the shader must specify a\n     *                       <code>pixel3</code> or <code>pixel4</code> output).\n     * @throws ArgumentError When the shader specifies an image input that isn't\n     *                       provided.\n     * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n     *                       as an input and the <code>width</code> and\n     *                       <code>height</code> properties aren't specified for\n     *                       the ShaderInput, or the specified values don't match\n     *                       the amount of data in the input object. See the\n     *                       <code>ShaderInput.input</code> property for more\n     *                       information.\n     */\n    //\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n    //\t\t{\n    //\n    //\t\t}\n    /**\n     * Clears the graphics that were drawn to this Graphics object, and resets\n     * fill and line style settings.\n     *\n     */\n    Graphics.prototype.clear = function () {\n        // todo: do this the correct way\n        this._target.graphics.dispose();\n    };\n    /**\n     * Copies all of drawing commands from the source Graphics object into the\n     * calling Graphics object.\n     *\n     * @param sourceGraphics The Graphics object from which to copy the drawing\n     *                       commands.\n     */\n    Graphics.prototype.copyFrom = function (sourceGraphics) {\n        sourceGraphics._target.graphics.copyTo(this._target.graphics);\n    };\n    /**\n     * Draws a cubic Bezier curve from the current drawing position to the\n     * specified anchor point. Cubic Bezier curves consist of two anchor points\n     * and two control points. The curve interpolates the two anchor points and\n     * curves toward the two control points.\n     *\n     * The four points you use to draw a cubic Bezier curve with the\n     * <code>cubicCurveTo()</code> method are as follows:\n     *\n     * <ul>\n     *   <li>The current drawing position is the first anchor point. </li>\n     *   <li>The anchorX and anchorY parameters specify the second anchor point.\n     *   </li>\n     *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n     *   specify the first control point.</li>\n     *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n     *   specify the second control point.</li>\n     * </ul>\n     *\n     * If you call the <code>cubicCurveTo()</code> method before calling the\n     * <code>moveTo()</code> method, your curve starts at position (0, 0).\n     *\n     * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n     * the current drawing position to (<code>anchorX</code>,\n     * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n     * the current drawing position remains unchanged.\n     *\n     * If your movie clip contains content created with the Flash drawing tools,\n     * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n     * underneath that content.\n     *\n     * @param controlX1 Specifies the horizontal position of the first control\n     *                  point relative to the registration point of the parent\n     *                  display object.\n     * @param controlY1 Specifies the vertical position of the first control\n     *                  point relative to the registration point of the parent\n     *                  display object.\n     * @param controlX2 Specifies the horizontal position of the second control\n     *                  point relative to the registration point of the parent\n     *                  display object.\n     * @param controlY2 Specifies the vertical position of the second control\n     *                  point relative to the registration point of the parent\n     *                  display object.\n     * @param anchorX   Specifies the horizontal position of the anchor point\n     *                  relative to the registration point of the parent display\n     *                  object.\n     * @param anchorY   Specifies the vertical position of the anchor point\n     *                  relative to the registration point of the parent display\n     *                  object.\n     */\n    Graphics.prototype.cubicCurveTo = function (controlX1, controlY1, controlX2, controlY2, anchorX, anchorY) {\n        throw new PartialImplementationError_1.default(\"cubicCurveTo\");\n        /*\n         t = 0.5; // given example value\n         x = (1 - t) * (1 - t) * p[0].x + 2 * (1 - t) * t * p[1].x + t * t * p[2].x;\n         y = (1 - t) * (1 - t) * p[0].y + 2 * (1 - t) * t * p[1].y + t * t * p[2].y;\n\n         this.queued_command_types.push(Graphics.CMD_BEZIER);\n         this.queued_command_data.push(controlX1);\n         this.queued_command_data.push(controlY1);\n         this.queued_command_data.push(controlX2);\n         this.queued_command_data.push(controlY2);\n         this.queued_command_data.push(anchorX);\n         this.queued_command_data.push(anchorY);\n\n         // todo: somehow convert cubic bezier curve into 2 quadric curves...\n\n         this.draw_direction+=0;\n         */\n    };\n    /**\n     * Draws a curve using the current line style from the current drawing\n     * position to(anchorX, anchorY) and using the control point that\n     * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n     * drawing position is then set to(<code>anchorX</code>,\n     * <code>anchorY</code>). If the movie clip in which you are drawing contains\n     * content created with the Flash drawing tools, calls to the\n     * <code>curveTo()</code> method are drawn underneath this content. If you\n     * call the <code>curveTo()</code> method before any calls to the\n     * <code>moveTo()</code> method, the default of the current drawing position\n     * is(0, 0). If any of the parameters are missing, this method fails and the\n     * current drawing position is not changed.\n     *\n     * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n     * consist of two anchor points and one control point. The curve interpolates\n     * the two anchor points and curves toward the control point. </p>\n     *\n     * @param controlX A number that specifies the horizontal position of the\n     *                 control point relative to the registration point of the\n     *                 parent display object.\n     * @param controlY A number that specifies the vertical position of the\n     *                 control point relative to the registration point of the\n     *                 parent display object.\n     * @param anchorX  A number that specifies the horizontal position of the\n     *                 next anchor point relative to the registration point of\n     *                 the parent display object.\n     * @param anchorY  A number that specifies the vertical position of the next\n     *                 anchor point relative to the registration point of the\n     *                 parent display object.\n     */\n    Graphics.prototype.curveTo = function (controlX, controlY, anchorX, anchorY) {\n        if (this._active_fill_path != null) {\n            this._active_fill_path.curveTo(controlX, controlY, anchorX, anchorY);\n        }\n        if (this._active_stroke_path != null) {\n            this._active_stroke_path.curveTo(controlX, controlY, anchorX, anchorY);\n        }\n        this._current_position.x = anchorX;\n        this._current_position.y = anchorY;\n        /*\n        this.queued_command_types.push(Graphics.CMD_CURVE);\n        this.queued_command_data.push(controlX);\n        this.queued_command_data.push(controlY);\n        this.queued_command_data.push(anchorX);\n        this.queued_command_data.push(anchorY);\n        */\n    };\n    /**\n     * Draws a circle. Set the line style, fill, or both before you call the\n     * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n     * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n     * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n     * method.\n     *\n     * @param x      The <i>x</i> location of the center of the circle relative\n     *               to the registration point of the parent display object(in\n     *               pixels).\n     * @param y      The <i>y</i> location of the center of the circle relative\n     *               to the registration point of the parent display object(in\n     *               pixels).\n     * @param radius The radius of the circle(in pixels).\n     */\n    Graphics.prototype.drawCircle = function (x, y, radius) {\n        var radius2 = radius * 1.065;\n        if (this._active_fill_path != null) {\n            this._active_fill_path.moveTo(x - radius, y);\n            for (var i = 8; i >= 0; i--) {\n                var degree = (i) * (360 / 8) * Math.PI / 180;\n                var degree2 = degree + ((360 / 16) * Math.PI / 180);\n                this._active_fill_path.curveTo(x - (Math.cos(degree2) * radius2), y + (Math.sin(degree2) * radius2), x - (Math.cos(degree) * radius), y + (Math.sin(degree) * radius));\n            }\n        }\n        if (this._active_stroke_path != null) {\n            this._active_stroke_path.moveTo(x, y + radius);\n            var radius2 = radius * 0.93;\n            this._active_stroke_path.curveTo(x - (radius2), y + (radius2), x - radius, y);\n            this._active_stroke_path.curveTo(x - (radius2), y - (radius2), x, y - radius);\n            this._active_stroke_path.curveTo(x + (radius2), y - (radius2), x + radius, y);\n            this._active_stroke_path.curveTo(x + (radius2), y + (radius2), x, y + radius);\n        }\n    };\n    /**\n     * Draws an ellipse. Set the line style, fill, or both before you call the\n     * <code>drawEllipse()</code> method, by calling the\n     * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n     * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n     * <code>beginBitmapFill()</code> method.\n     *\n     * @param x      The <i>x</i> location of the top-left of the bounding-box of\n     *               the ellipse relative to the registration point of the parent\n     *               display object(in pixels).\n     * @param y      The <i>y</i> location of the top left of the bounding-box of\n     *               the ellipse relative to the registration point of the parent\n     *               display object(in pixels).\n     * @param width  The width of the ellipse(in pixels).\n     * @param height The height of the ellipse(in pixels).\n     */\n    Graphics.prototype.drawEllipse = function (x, y, width, height) {\n        width /= 2;\n        height /= 2;\n        if (this._active_fill_path != null) {\n            this._active_fill_path.moveTo(x, y + height);\n            this._active_fill_path.curveTo(x - (width), y + (height), x - width, y);\n            this._active_fill_path.curveTo(x - (width), y - (height), x, y - height);\n            this._active_fill_path.curveTo(x + (width), y - (height), x + width, y);\n            this._active_fill_path.curveTo(x + (width), y + (height), x, y + height);\n        }\n        if (this._active_stroke_path != null) {\n            this._active_stroke_path.moveTo(x, y + height);\n            this._active_stroke_path.curveTo(x - (width), y + (height), x - width, y);\n            this._active_stroke_path.curveTo(x - (width), y - (height), x, y - height);\n            this._active_stroke_path.curveTo(x + (width), y - (height), x + width, y);\n            this._active_stroke_path.curveTo(x + (width), y + (height), x, y + height);\n        }\n    };\n    /**\n     * Submits a series of IGraphicsData instances for drawing. This method\n     * accepts a Vector containing objects including paths, fills, and strokes\n     * that implement the IGraphicsData interface. A Vector of IGraphicsData\n     * instances can refer to a part of a shape, or a complex fully defined set\n     * of data for rendering a complete shape.\n     *\n     * <p> Graphics paths can contain other graphics paths. If the\n     * <code>graphicsData</code> Vector includes a path, that path and all its\n     * sub-paths are rendered during this operation. </p>\n     *\n     */\n    Graphics.prototype.drawGraphicsData = function (graphicsData) {\n        //this.draw_fill();\n        /*\n         for (var i:number=0; i<graphicsData.length; i++){\n         //todo\n         if(graphicsData[i].dataType==\"beginFill\"){\n\n         }\n         else if(graphicsData[i].dataType==\"endFill\"){\n\n         }\n         else if(graphicsData[i].dataType==\"endFill\"){\n\n         }\n         else if(graphicsData[i].dataType==\"Path\"){\n\n         }\n\n         }\n         */\n    };\n    /**\n     * Submits a series of commands for drawing. The <code>drawPath()</code>\n     * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n     * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n     * single call. The <code>drawPath()</code> method parameters combine drawing\n     * commands with x- and y-coordinate value pairs and a drawing direction. The\n     * drawing commands are values from the GraphicsPathCommand class. The x- and\n     * y-coordinate value pairs are Numbers in an array where each pair defines a\n     * coordinate location. The drawing direction is a value from the\n     * GraphicsPathWinding class.\n     *\n     * <p> Generally, drawings render faster with <code>drawPath()</code> than\n     * with a series of individual <code>lineTo()</code> and\n     * <code>curveTo()</code> methods. </p>\n     *\n     * <p> The <code>drawPath()</code> method uses a uses a floating computation\n     * so rotation and scaling of shapes is more accurate and gives better\n     * results. However, curves submitted using the <code>drawPath()</code>\n     * method can have small sub-pixel alignment errors when used in conjunction\n     * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n     *\n     * <p> The <code>drawPath()</code> method also uses slightly different rules\n     * for filling and drawing lines. They are: </p>\n     *\n     * <ul>\n     *   <li>When a fill is applied to rendering a path:\n     * <ul>\n     *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n     * stroke rendering will still occur, consistent with the rules for strokes\n     * below.)</li>\n     *   <li>A sub-path that isn't closed(the end point is not equal to the\n     * begin point) is implicitly closed.</li>\n     * </ul>\n     * </li>\n     *   <li>When a stroke is applied to rendering a path:\n     * <ul>\n     *   <li>The sub-paths can be composed of any number of points.</li>\n     *   <li>The sub-path is never implicitly closed.</li>\n     * </ul>\n     * </li>\n     * </ul>\n     *\n     * @param winding Specifies the winding rule using a value defined in the\n     *                GraphicsPathWinding class.\n     */\n    Graphics.prototype.drawPath = function (commands, data, winding) {\n        //todo\n        /*\n         if(this._active_fill_path!=null){\n         this._active_fill_path.curveTo(controlX, controlY, anchorX, anchorY);\n         }\n         if(this._active_stroke_path!=null){\n         this._active_stroke_path.curveTo(controlX, controlY, anchorX, anchorY);\n         }\n         this._current_position.x=anchorX;\n         this._current_position.y=anchorY;\n         */\n    };\n    /**\n     * Draws a rectangle. Set the line style, fill, or both before you call the\n     * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n     * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n     * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n     * method.\n     *\n     * @param x      A number indicating the horizontal position relative to the\n     *               registration point of the parent display object(in pixels).\n     * @param y      A number indicating the vertical position relative to the\n     *               registration point of the parent display object(in pixels).\n     * @param width  The width of the rectangle(in pixels).\n     * @param height The height of the rectangle(in pixels).\n     * @throws ArgumentError If the <code>width</code> or <code>height</code>\n     *                       parameters are not a number\n     *                      (<code>Number.NaN</code>).\n     */\n    Graphics.prototype.drawRect = function (x, y, width, height) {\n        if (this._active_fill_path != null) {\n            this._active_fill_path.moveTo(x, y);\n            this._active_fill_path.lineTo(x + width, y);\n            this._active_fill_path.lineTo(x + width, y + height);\n            this._active_fill_path.lineTo(x, y + height);\n            this._active_fill_path.lineTo(x, y);\n        }\n        if (this._active_stroke_path != null) {\n            this._active_stroke_path.moveTo(x, y);\n            this._active_stroke_path.lineTo(x + width, y);\n            this._active_stroke_path.lineTo(x + width, y + height);\n            this._active_stroke_path.lineTo(x, y + height);\n            this._active_stroke_path.lineTo(x, y);\n        }\n    };\n    /**\n     * Draws a rounded rectangle. Set the line style, fill, or both before you\n     * call the <code>drawRoundRect()</code> method, by calling the\n     * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n     * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n     * <code>beginBitmapFill()</code> method.\n     *\n     * @param x             A number indicating the horizontal position relative\n     *                      to the registration point of the parent display\n     *                      object(in pixels).\n     * @param y             A number indicating the vertical position relative to\n     *                      the registration point of the parent display object\n     *                     (in pixels).\n     * @param width         The width of the round rectangle(in pixels).\n     * @param height        The height of the round rectangle(in pixels).\n     * @param ellipseWidth  The width of the ellipse used to draw the rounded\n     *                      corners(in pixels).\n     * @param ellipseHeight The height of the ellipse used to draw the rounded\n     *                      corners(in pixels). Optional; if no value is\n     *                      specified, the default value matches that provided\n     *                      for the <code>ellipseWidth</code> parameter.\n     * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n     *                       <code>ellipseWidth</code> or\n     *                       <code>ellipseHeight</code> parameters are not a\n     *                       number(<code>Number.NaN</code>).\n     */\n    Graphics.prototype.drawRoundRect = function (x, y, width, height, ellipseWidth, ellipseHeight) {\n        if (ellipseHeight === void 0) { ellipseHeight = NaN; }\n        if (!ellipseHeight) {\n            ellipseHeight = ellipseWidth;\n        }\n        if (this._active_fill_path != null) {\n            this._active_fill_path.moveTo(x + ellipseWidth, y);\n            this._active_fill_path.lineTo(x + width - ellipseWidth, y);\n            this._active_fill_path.curveTo(x + width, y, x + width, y + ellipseHeight);\n            this._active_fill_path.lineTo(x + width, y + height - ellipseHeight);\n            this._active_fill_path.curveTo(x + width, y + height, x + width - ellipseWidth, y + height);\n            this._active_fill_path.lineTo(x + ellipseWidth, y + height);\n            this._active_fill_path.curveTo(x, y + height, x, y + height - ellipseHeight);\n            this._active_fill_path.lineTo(x, y + ellipseHeight);\n            this._active_fill_path.curveTo(x, y, x + ellipseWidth, y);\n        }\n        if (this._active_stroke_path != null) {\n            this._active_stroke_path.moveTo(x + ellipseWidth, y);\n            this._active_stroke_path.lineTo(x + width - ellipseWidth, y);\n            this._active_stroke_path.curveTo(x + width, y, x + width, y + ellipseHeight);\n            this._active_stroke_path.lineTo(x + width, y + height - ellipseHeight);\n            this._active_stroke_path.curveTo(x + width, y + height, x + width - ellipseWidth, y + height);\n            this._active_stroke_path.lineTo(x + ellipseWidth, y + height);\n            this._active_stroke_path.curveTo(x, y + height, x, y + height - ellipseHeight);\n            this._active_stroke_path.lineTo(x, y + ellipseHeight);\n            this._active_stroke_path.curveTo(x, y, x + ellipseWidth, y);\n        }\n    };\n    //public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n    /**\n     * Renders a set of triangles, typically to distort bitmaps and give them a\n     * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n     * either the current fill, or a bitmap fill, to the triangle faces using a\n     * set of(u,v) coordinates.\n     *\n     * <p> Any type of fill can be used, but if the fill has a transform matrix\n     * that transform matrix is ignored. </p>\n     *\n     * <p> A <code>uvtData</code> parameter improves texture mapping when a\n     * bitmap fill is used. </p>\n     *\n     * @param culling Specifies whether to render triangles that face in a\n     *                specified direction. This parameter prevents the rendering\n     *                of triangles that cannot be seen in the current view. This\n     *                parameter can be set to any value defined by the\n     *                TriangleCulling class.\n     */\n    Graphics.prototype.drawTriangles = function (vertices, indices, uvtData, culling) {\n        if (indices === void 0) { indices = null; }\n        if (uvtData === void 0) { uvtData = null; }\n        if (culling === void 0) { culling = null; }\n        if (this._active_fill_path != null) {\n        }\n        if (this._active_stroke_path != null) {\n        }\n    };\n    /**\n     * Applies a fill to the lines and curves that were added since the last call\n     * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n     * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n     * specified in the previous call to the <code>beginFill()</code>,\n     * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n     * method. If the current drawing position does not equal the previous\n     * position specified in a <code>moveTo()</code> method and a fill is\n     * defined, the path is closed with a line and then filled.\n     *\n     */\n    Graphics.prototype.endFill = function () {\n        this.draw_strokes();\n        this.draw_fill();\n        this._active_fill_path = null;\n        this._active_stroke_path = null;\n    };\n    /**\n     * Specifies a bitmap to use for the line stroke when drawing lines.\n     *\n     * <p>The bitmap line style is used for subsequent calls to Graphics methods\n     * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n     * method. The line style remains in effect until you call the\n     * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n     * the <code>lineBitmapStyle()</code> method again with different parameters.\n     * </p>\n     *\n     * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n     * drawing a path to specify different styles for different line segments\n     * within a path. </p>\n     *\n     * <p>Call the <code>lineStyle()</code> method before you call the\n     * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n     * value of the line style is <code>undefined</code>.</p>\n     *\n     * <p>Calls to the <code>clear()</code> method set the line style back to\n     * <code>undefined</code>. </p>\n     *\n     * @param bitmap The bitmap to use for the line stroke.\n     * @param matrix An optional transformation matrix as defined by the\n     *               flash.geom.Matrix class. The matrix can be used to scale or\n     *               otherwise manipulate the bitmap before applying it to the\n     *               line style.\n     * @param repeat Whether to repeat the bitmap in a tiled fashion.\n     * @param smooth Whether smoothing should be applied to the bitmap.\n     */\n    Graphics.prototype.lineBitmapStyle = function (bitmap, matrix, repeat, smooth) {\n        if (matrix === void 0) { matrix = null; }\n        if (repeat === void 0) { repeat = true; }\n        if (smooth === void 0) { smooth = false; }\n        // start a new stroke path\n        this._active_stroke_path = new GraphicsPath_1.default();\n        if (this._current_position.x != 0 || this._current_position.y != 0)\n            this._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\n        this._queued_stroke_pathes.push(this._active_stroke_path);\n    };\n    /**\n     * Specifies a gradient to use for the stroke when drawing lines.\n     *\n     * <p>The gradient line style is used for subsequent calls to Graphics\n     * methods such as the <code>lineTo()</code> methods or the\n     * <code>drawCircle()</code> method. The line style remains in effect until\n     * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n     * methods, or the <code>lineGradientStyle()</code> method again with\n     * different parameters. </p>\n     *\n     * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n     * of drawing a path to specify different styles for different line segments\n     * within a path. </p>\n     *\n     * <p>Call the <code>lineStyle()</code> method before you call the\n     * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n     * value of the line style is <code>undefined</code>.</p>\n     *\n     * <p>Calls to the <code>clear()</code> method set the line style back to\n     * <code>undefined</code>. </p>\n     *\n     * @param type                A value from the GradientType class that\n     *                            specifies which gradient type to use, either\n     *                            GradientType.LINEAR or GradientType.RADIAL.\n     * @param colors              An array of RGB hexadecimal color values used\n     *                            in the gradient; for example, red is 0xFF0000,\n     *                            blue is 0x0000FF, and so on. You can specify\n     *                            up to 15 colors. For each color, specify a\n     *                            corresponding value in the alphas and ratios\n     *                            parameters.\n     * @param alphas              An array of alpha values for the corresponding\n     *                            colors in the colors array; valid values are 0\n     *                            to 1. If the value is less than 0, the default\n     *                            is 0. If the value is greater than 1, the\n     *                            default is 1.\n     * @param ratios              An array of color distribution ratios; valid\n     *                            values are 0-255. This value defines the\n     *                            percentage of the width where the color is\n     *                            sampled at 100%. The value 0 represents the\n     *                            left position in the gradient box, and 255\n     *                            represents the right position in the gradient\n     *                            box.\n     * @param matrix              A transformation matrix as defined by the\n     *                            flash.geom.Matrix class. The flash.geom.Matrix\n     *                            class includes a\n     *                            <code>createGradientBox()</code> method, which\n     *                            lets you conveniently set up the matrix for use\n     *                            with the <code>lineGradientStyle()</code>\n     *                            method.\n     * @param spreadMethod        A value from the SpreadMethod class that\n     *                            specifies which spread method to use:\n     * @param interpolationMethod A value from the InterpolationMethod class that\n     *                            specifies which value to use. For example,\n     *                            consider a simple linear gradient between two\n     *                            colors(with the <code>spreadMethod</code>\n     *                            parameter set to\n     *                            <code>SpreadMethod.REFLECT</code>). The\n     *                            different interpolation methods affect the\n     *                            appearance as follows:\n     * @param focalPointRatio     A number that controls the location of the\n     *                            focal point of the gradient. The value 0 means\n     *                            the focal point is in the center. The value 1\n     *                            means the focal point is at one border of the\n     *                            gradient circle. The value -1 means that the\n     *                            focal point is at the other border of the\n     *                            gradient circle. Values less than -1 or greater\n     *                            than 1 are rounded to -1 or 1. The following\n     *                            image shows a gradient with a\n     *                            <code>focalPointRatio</code> of -0.75:\n     */\n    Graphics.prototype.lineGradientStyle = function (type, colors, alphas, ratios, matrix, spreadMethod, interpolationMethod, focalPointRatio) {\n        if (matrix === void 0) { matrix = null; }\n        if (spreadMethod === void 0) { spreadMethod = null; }\n        if (interpolationMethod === void 0) { interpolationMethod = null; }\n        if (focalPointRatio === void 0) { focalPointRatio = 0; }\n        // start a new stroke path\n        this._active_stroke_path = new GraphicsPath_1.default();\n        if (this._current_position.x != 0 || this._current_position.y != 0)\n            this._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\n        this._queued_stroke_pathes.push(this._active_stroke_path);\n    };\n    /**\n     * Specifies a shader to use for the line stroke when drawing lines.\n     *\n     * <p>The shader line style is used for subsequent calls to Graphics methods\n     * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n     * method. The line style remains in effect until you call the\n     * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n     * the <code>lineBitmapStyle()</code> method again with different parameters.\n     * </p>\n     *\n     * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n     * drawing a path to specify different styles for different line segments\n     * within a path. </p>\n     *\n     * <p>Call the <code>lineStyle()</code> method before you call the\n     * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n     * value of the line style is <code>undefined</code>.</p>\n     *\n     * <p>Calls to the <code>clear()</code> method set the line style back to\n     * <code>undefined</code>. </p>\n     *\n     * @param shader The shader to use for the line stroke.\n     * @param matrix An optional transformation matrix as defined by the\n     *               flash.geom.Matrix class. The matrix can be used to scale or\n     *               otherwise manipulate the bitmap before applying it to the\n     *               line style.\n     */\n    //\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n    //\t\t{\n    //\n    //\t\t}\n    /**\n     * Specifies a line style used for subsequent calls to Graphics methods such\n     * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n     * method. The line style remains in effect until you call the\n     * <code>lineGradientStyle()</code> method, the\n     * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n     * method with different parameters.\n     *\n     * <p>You can call the <code>lineStyle()</code> method in the middle of\n     * drawing a path to specify different styles for different line segments\n     * within the path.</p>\n     *\n     * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n     * style back to <code>undefined</code>.</p>\n     *\n     * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n     * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n     *\n     * @param thickness    An integer that indicates the thickness of the line in\n     *                     points; valid values are 0-255. If a number is not\n     *                     specified, or if the parameter is undefined, a line is\n     *                     not drawn. If a value of less than 0 is passed, the\n     *                     default is 0. The value 0 indicates hairline\n     *                     thickness; the maximum thickness is 255. If a value\n     *                     greater than 255 is passed, the default is 255.\n     * @param color        A hexadecimal color value of the line; for example,\n     *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n     *                     value is not indicated, the default is 0x000000\n     *                    (black). Optional.\n     * @param alpha        A number that indicates the alpha value of the color\n     *                     of the line; valid values are 0 to 1. If a value is\n     *                     not indicated, the default is 1(solid). If the value\n     *                     is less than 0, the default is 0. If the value is\n     *                     greater than 1, the default is 1.\n     * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n     *                     specifies whether to hint strokes to full pixels. This\n     *                     affects both the position of anchors of a curve and\n     *                     the line stroke size itself. With\n     *                     <code>pixelHinting</code> set to <code>true</code>,\n     *                     line widths are adjusted to full pixel widths. With\n     *                     <code>pixelHinting</code> set to <code>false</code>,\n     *                     disjoints can appear for curves and straight lines.\n     *                     For example, the following illustrations show how\n     *                     Flash Player or Adobe AIR renders two rounded\n     *                     rectangles that are identical, except that the\n     *                     <code>pixelHinting</code> parameter used in the\n     *                     <code>lineStyle()</code> method is set differently\n     *                    (the images are scaled by 200%, to emphasize the\n     *                     difference):\n     *\n     *                     <p>If a value is not supplied, the line does not use\n     *                     pixel hinting.</p>\n     * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n     *                     LineScaleMode class that specifies which scale mode to\n     *                     use:\n     *                     <ul>\n     *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n     *                     scale the line thickness when the object is scaled\n     *                    (the default). </li>\n     *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n     *                     the line thickness. </li>\n     *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n     *                     scale the line thickness if the object is scaled\n     *                     vertically <i>only</i>. For example, consider the\n     *                     following circles, drawn with a one-pixel line, and\n     *                     each with the <code>scaleMode</code> parameter set to\n     *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n     *                     left is scaled vertically only, and the circle on the\n     *                     right is scaled both vertically and horizontally:\n     *                     </li>\n     *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n     *                     scale the line thickness if the object is scaled\n     *                     horizontally <i>only</i>. For example, consider the\n     *                     following circles, drawn with a one-pixel line, and\n     *                     each with the <code>scaleMode</code> parameter set to\n     *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n     *                     the left is scaled horizontally only, and the circle\n     *                     on the right is scaled both vertically and\n     *                     horizontally:   </li>\n     *                     </ul>\n     * @param caps        (Not supported in Flash Lite 4) A value from the\n     *                     CapsStyle class that specifies the type of caps at the\n     *                     end of lines. Valid values are:\n     *                     <code>CapsStyle.NONE</code>,\n     *                     <code>CapsStyle.ROUND</code>, and\n     *                     <code>CapsStyle.SQUARE</code>. If a value is not\n     *                     indicated, Flash uses round caps.\n     *\n     *                     <p>For example, the following illustrations show the\n     *                     different <code>capsStyle</code> settings. For each\n     *                     setting, the illustration shows a blue line with a\n     *                     thickness of 30(for which the <code>capsStyle</code>\n     *                     applies), and a superimposed black line with a\n     *                     thickness of 1(for which no <code>capsStyle</code>\n     *                     applies): </p>\n     * @param joints      (Not supported in Flash Lite 4) A value from the\n     *                     JointStyle class that specifies the type of joint\n     *                     appearance used at angles. Valid values are:\n     *                     <code>JointStyle.BEVEL</code>,\n     *                     <code>JointStyle.MITER</code>, and\n     *                     <code>JointStyle.ROUND</code>. If a value is not\n     *                     indicated, Flash uses round joints.\n     *\n     *                     <p>For example, the following illustrations show the\n     *                     different <code>joints</code> settings. For each\n     *                     setting, the illustration shows an angled blue line\n     *                     with a thickness of 30(for which the\n     *                     <code>jointStyle</code> applies), and a superimposed\n     *                     angled black line with a thickness of 1(for which no\n     *                     <code>jointStyle</code> applies): </p>\n     *\n     *                     <p><b>Note:</b> For <code>joints</code> set to\n     *                     <code>JointStyle.MITER</code>, you can use the\n     *                     <code>miterLimit</code> parameter to limit the length\n     *                     of the miter.</p>\n     * @param miterLimit  (Not supported in Flash Lite 4) A number that\n     *                     indicates the limit at which a miter is cut off. Valid\n     *                     values range from 1 to 255(and values outside that\n     *                     range are rounded to 1 or 255). This value is only\n     *                     used if the <code>jointStyle</code> is set to\n     *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n     *                     value represents the length that a miter can extend\n     *                     beyond the point at which the lines meet to form a\n     *                     joint. The value expresses a factor of the line\n     *                     <code>thickness</code>. For example, with a\n     *                     <code>miterLimit</code> factor of 2.5 and a\n     *                     <code>thickness</code> of 10 pixels, the miter is cut\n     *                     off at 25 pixels.\n     *\n     *                     <p>For example, consider the following angled lines,\n     *                     each drawn with a <code>thickness</code> of 20, but\n     *                     with <code>miterLimit</code> set to 1, 2, and 4.\n     *                     Superimposed are black reference lines showing the\n     *                     meeting points of the joints:</p>\n     *\n     *                     <p>Notice that a given <code>miterLimit</code> value\n     *                     has a specific maximum angle for which the miter is\n     *                     cut off. The following table lists some examples:</p>\n     */\n    Graphics.prototype.lineStyle = function (thickness, color, alpha, pixelHinting, scaleMode, caps, joints, miterLimit) {\n        if (thickness === void 0) { thickness = 0; }\n        if (color === void 0) { color = 0; }\n        if (alpha === void 0) { alpha = 1; }\n        if (pixelHinting === void 0) { pixelHinting = false; }\n        if (scaleMode === void 0) { scaleMode = null; }\n        if (caps === void 0) { caps = null; }\n        if (joints === void 0) { joints = null; }\n        if (miterLimit === void 0) { miterLimit = 3; }\n        // start a new stroke path\n        this._active_stroke_path = new GraphicsPath_1.default();\n        if (this._current_position.x != 0 || this._current_position.y != 0)\n            this._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\n        this._queued_stroke_pathes.push(this._active_stroke_path);\n    };\n    /**\n     * Draws a line using the current line style from the current drawing\n     * position to(<code>x</code>, <code>y</code>); the current drawing position\n     * is then set to(<code>x</code>, <code>y</code>). If the display object in\n     * which you are drawing contains content that was created with the Flash\n     * drawing tools, calls to the <code>lineTo()</code> method are drawn\n     * underneath the content. If you call <code>lineTo()</code> before any calls\n     * to the <code>moveTo()</code> method, the default position for the current\n     * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n     * method fails and the current drawing position is not changed.\n     *\n     * @param x A number that indicates the horizontal position relative to the\n     *          registration point of the parent display object(in pixels).\n     * @param y A number that indicates the vertical position relative to the\n     *          registration point of the parent display object(in pixels).\n     */\n    Graphics.prototype.lineTo = function (x, y) {\n        if (this._active_fill_path != null) {\n            this._active_fill_path.lineTo(x, y);\n        }\n        if (this._active_stroke_path != null) {\n            this._active_stroke_path.lineTo(x, y);\n        }\n        this._current_position.x = x;\n        this._current_position.y = y;\n    };\n    /**\n     * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n     * any of the parameters are missing, this method fails and the current\n     * drawing position is not changed.\n     *\n     * @param x A number that indicates the horizontal position relative to the\n     *          registration point of the parent display object(in pixels).\n     * @param y A number that indicates the vertical position relative to the\n     *          registration point of the parent display object(in pixels).\n     */\n    Graphics.prototype.moveTo = function (x, y) {\n        if (this._active_fill_path != null) {\n            this._active_fill_path.moveTo(x, y);\n        }\n        if (this._active_stroke_path != null) {\n            this._active_stroke_path.moveTo(x, y);\n        }\n        this._current_position.x = x;\n        this._current_position.y = y;\n    };\n    Graphics.prototype.draw_strokes = function () {\n        if (this._active_stroke_path == null)\n            return;\n        this._active_stroke_path.finalizeContour();\n        var contour_commands = this._active_stroke_path.commands;\n        var contour_data = this._active_stroke_path.data;\n        var contour_closed = this._active_stroke_path.contours_closed;\n        var commands;\n        var data;\n        var i = 0;\n        var k = 0;\n        var vert_cnt = 0;\n        var data_cnt = 0;\n        var draw_started = false;\n        var final_vert_list = [];\n        var final_vert_cnt = 0;\n        var lastPoint = new Point_1.default();\n        var start_point = new Point_1.default();\n        var end_point = new Point_1.default();\n        var start_left = new Point_1.default();\n        var start_right = new Point_1.default();\n        var ctr_left = new Point_1.default();\n        var ctr_right = new Point_1.default();\n        var ctr_left2 = new Point_1.default();\n        var ctr_right2 = new Point_1.default();\n        var end_left = new Point_1.default();\n        var end_right = new Point_1.default();\n        var tmp_point = new Point_1.default();\n        var tmp_point2 = new Point_1.default();\n        var first_point = new Point_1.default();\n        var first_point_set = false;\n        var closed = false;\n        var thickness = 3;\n        var tessVerts = [];\n        Graphics._tess_obj.newTess(1024 * 512);\n        for (k = 0; k < contour_commands.length; k++) {\n            var contour_points = [];\n            var contour_types = [];\n            commands = contour_commands[k];\n            data = contour_data[k];\n            closed = contour_closed[k];\n            vert_cnt = 0;\n            data_cnt = 0;\n            draw_started = false;\n            first_point_set = false;\n            for (i = 0; i < commands.length; i++) {\n                switch (commands[i]) {\n                    case GraphicsPathCommand_1.default.MOVE_TO:\n                        lastPoint.x = data[data_cnt++];\n                        lastPoint.y = data[data_cnt++];\n                        break;\n                    case GraphicsPathCommand_1.default.LINE_TO:\n                        contour_types.push(GraphicsPathCommand_1.default.LINE_TO);\n                        end_point.x = data[data_cnt++];\n                        end_point.y = data[data_cnt++];\n                        tmp_point.x = -1 * (end_point.y - lastPoint.y);\n                        tmp_point.y = end_point.x - lastPoint.x;\n                        tmp_point.normalize();\n                        // rotate point\n                        start_left.x = lastPoint.x + (tmp_point.x * thickness);\n                        start_left.y = lastPoint.y + (tmp_point.y * thickness);\n                        start_right.x = lastPoint.x - (tmp_point.x * thickness);\n                        start_right.y = lastPoint.y - (tmp_point.y * thickness);\n                        // rotate point\n                        end_left.x = end_point.x + (tmp_point.x * thickness);\n                        end_left.y = end_point.y + (tmp_point.y * thickness);\n                        end_right.x = end_point.x - (tmp_point.x * thickness);\n                        end_right.y = end_point.y - (tmp_point.y * thickness);\n                        lastPoint.x = end_point.x;\n                        lastPoint.y = end_point.y;\n                        contour_points.push(new Point_1.default(start_right.x, start_right.y));\n                        contour_points.push(new Point_1.default(start_left.x, start_left.y));\n                        contour_points.push(new Point_1.default(end_right.x, end_right.y));\n                        contour_points.push(new Point_1.default(end_left.x, end_left.y));\n                        break;\n                    case GraphicsPathCommand_1.default.CURVE_TO:\n                        contour_types.push(GraphicsPathCommand_1.default.CURVE_TO);\n                        contour_types.push(GraphicsPathCommand_1.default.CURVE_TO_2);\n                        var curve_direction = data[data_cnt++];\n                        var control_x = data[data_cnt++];\n                        var control_y = data[data_cnt++];\n                        var end_x = data[data_cnt++];\n                        var end_y = data[data_cnt++];\n                        tmp_point.x = -1 * (control_y - lastPoint.y);\n                        tmp_point.y = control_x - lastPoint.x;\n                        tmp_point.normalize();\n                        // rotate point\n                        start_left.x = lastPoint.x + (tmp_point.x * thickness);\n                        start_left.y = lastPoint.y + (tmp_point.y * thickness);\n                        start_right.x = lastPoint.x - (tmp_point.x * thickness);\n                        start_right.y = lastPoint.y - (tmp_point.y * thickness);\n                        // rotate point\n                        ctr_left.x = control_x + (tmp_point.x * thickness);\n                        ctr_left.y = control_y + (tmp_point.y * thickness);\n                        ctr_right.x = control_x - (tmp_point.x * thickness);\n                        ctr_right.y = control_y - (tmp_point.y * thickness);\n                        contour_points.push(new Point_1.default(start_right.x, start_right.y));\n                        contour_points.push(new Point_1.default(start_left.x, start_left.y));\n                        contour_points.push(new Point_1.default(ctr_right.x, ctr_right.y));\n                        contour_points.push(new Point_1.default(ctr_left.x, ctr_left.y));\n                        tmp_point.x = -1 * (end_y - control_y);\n                        tmp_point.y = end_x - control_x;\n                        tmp_point.normalize();\n                        ctr_left2.x = control_x + (tmp_point.x * thickness);\n                        ctr_left2.y = control_y + (tmp_point.y * thickness);\n                        ctr_right2.x = control_x - (tmp_point.x * thickness);\n                        ctr_right2.y = control_y - (tmp_point.y * thickness);\n                        end_left.x = end_x + (tmp_point.x * thickness);\n                        end_left.y = end_y + (tmp_point.y * thickness);\n                        end_right.x = end_x - (tmp_point.x * thickness);\n                        end_right.y = end_y - (tmp_point.y * thickness);\n                        contour_points.push(new Point_1.default(ctr_right2.x, ctr_right2.y));\n                        contour_points.push(new Point_1.default(ctr_left2.x, ctr_left2.y));\n                        contour_points.push(new Point_1.default(end_right.x, end_right.y));\n                        contour_points.push(new Point_1.default(end_left.x, end_left.y));\n                        lastPoint.x = end_x;\n                        lastPoint.y = end_y;\n                        break;\n                }\n            }\n            var con_length = contour_points.length / 4;\n            var next_start_right = new Point_1.default();\n            var next_start_left = new Point_1.default();\n            var next_end_right = new Point_1.default();\n            var next_end_left = new Point_1.default();\n            var prevLeft;\n            var prevRight;\n            for (i = 0; i < con_length; i++) {\n                start_right = contour_points[i * 4];\n                start_left = contour_points[i * 4 + 1];\n                end_right = contour_points[i * 4 + 2];\n                end_left = contour_points[i * 4 + 3];\n                var nextIdx = i + 1;\n                if (i >= con_length - 1) {\n                    // last segment\n                    if (closed) {\n                        nextIdx = 0;\n                    }\n                    else {\n                        nextIdx = -1;\n                    }\n                }\n                if (nextIdx >= 0) {\n                    next_start_right = contour_points[nextIdx * 4];\n                    next_start_left = contour_points[nextIdx * 4 + 1];\n                    next_end_right = contour_points[nextIdx * 4 + 2];\n                    next_end_left = contour_points[nextIdx * 4 + 3];\n                    var cur_vertical = false;\n                    var next_vertical = false;\n                    var cur_horizontal = false;\n                    var next_horizontal = false;\n                    tmp_point.x = end_right.x - start_right.x;\n                    tmp_point.y = end_right.y - start_right.y;\n                    var factor1 = 0;\n                    var offsetY1 = 0;\n                    if (tmp_point.x == 0)\n                        cur_vertical = true;\n                    else if (tmp_point.y == 0)\n                        cur_horizontal = true;\n                    else {\n                        factor1 = tmp_point.y / tmp_point.x;\n                        offsetY1 = -(factor1 * start_right.x - start_right.y);\n                    }\n                    tmp_point.x = next_end_right.x - next_start_right.x;\n                    tmp_point.y = next_end_right.y - next_start_right.y;\n                    var factor2 = 0;\n                    var offsetY2 = 0;\n                    if (tmp_point.x == 0)\n                        next_vertical = true;\n                    else if (tmp_point.y == 0)\n                        next_horizontal = true;\n                    else {\n                        factor2 = tmp_point.y / tmp_point.x;\n                        offsetY2 = -(factor2 * next_start_right.x - next_start_right.y);\n                    }\n                    tmp_point.x = end_left.x - start_left.x;\n                    tmp_point.y = end_left.y - start_left.y;\n                    var factor3 = 0;\n                    var offsetY3 = 0;\n                    if (tmp_point.x == 0)\n                        cur_vertical = true;\n                    else if (tmp_point.y == 0)\n                        cur_horizontal = true;\n                    else {\n                        factor3 = tmp_point.y / tmp_point.x;\n                        offsetY3 = -(factor3 * start_left.x - start_left.y);\n                    }\n                    tmp_point.x = next_end_left.x - next_start_left.x;\n                    tmp_point.y = next_end_left.y - next_start_left.y;\n                    var factor4 = 0;\n                    var offsetY4 = 0;\n                    if (tmp_point.x == 0)\n                        next_vertical = true;\n                    else if (tmp_point.y == 0)\n                        next_horizontal = true;\n                    else {\n                        factor4 = tmp_point.y / tmp_point.x;\n                        offsetY4 = -(factor4 * next_start_left.x - next_start_left.y);\n                    }\n                    if ((cur_vertical && cur_horizontal) || (next_horizontal && next_vertical))\n                        console.log(\"ERROR\");\n                    if ((factor1 == factor2) || (factor3 == factor4)) {\n                        console.log(\"STRAIGHT LINE factor same\");\n                        console.log(\"factor = \" + factor1);\n                        console.log(\"factor = \" + factor2);\n                        console.log(\"factor = \" + factor3);\n                        console.log(\"factor = \" + factor4);\n                    }\n                    //else\n                    if ((cur_horizontal && next_horizontal) || (cur_vertical && next_vertical))\n                        console.log(\"STRAIGHT LINE\");\n                    else {\n                        if ((cur_vertical) && (next_horizontal)) {\n                            console.log(\"(cur_vertical)&&(next_horizontal)\");\n                            next_start_right.x = end_right.x;\n                            end_right.y = next_start_right.y;\n                            next_start_left.x = end_left.x;\n                            end_left.y = next_start_left.y;\n                        }\n                        else if ((cur_vertical) && (!next_horizontal)) {\n                            console.log(\"(cur_vertical)&&(!next_horizontal)\");\n                            next_start_right.x = end_right.x = start_right.x;\n                            next_start_right.y = end_right.y = factor2 * start_right.x + offsetY2;\n                            next_start_left.x = end_left.x = start_left.x;\n                            next_start_left.y = end_left.y = factor4 * start_left.x + offsetY4;\n                        }\n                        else if ((!cur_vertical) && (next_horizontal)) {\n                            console.log(\"(!cur_vertical)&&(next_horizontal)\");\n                            next_start_right.y = end_right.y = next_start_right.y;\n                            next_start_right.x = end_right.x = (next_start_right.y - offsetY1) / factor1;\n                            next_start_left.y = end_left.y = next_start_left.y;\n                            next_start_left.x = end_left.x = (next_start_left.y - offsetY3) / factor3;\n                        }\n                        else if ((next_vertical) && (cur_horizontal)) {\n                            console.log(\"(next_vertical)&&(cur_horizontal)\");\n                            end_right.x = next_start_right.x;\n                            next_start_right.y = end_right.y;\n                            end_left.x = next_start_left.x;\n                            next_start_left.y = end_left.y;\n                        }\n                        else if ((next_vertical) && (!cur_horizontal)) {\n                            console.log(\"(next_vertical)&&(!cur_horizontal)\");\n                            next_start_right.x = end_right.x = next_start_right.x;\n                            next_start_right.y = end_right.y = factor1 * next_start_right.x + offsetY1;\n                            next_start_left.x = end_left.x = next_start_left.x;\n                            next_start_left.y = end_left.y = factor3 * next_start_left.x + offsetY3;\n                        }\n                        else if ((!next_vertical) && (cur_horizontal)) {\n                            console.log(\"(!next_vertical)&&(!cur_horizontal)\");\n                            next_start_right.y = end_right.y;\n                            next_start_right.x = end_right.x = (end_right.y - offsetY2) / factor2;\n                            next_start_left.y = end_left.y;\n                            next_start_left.x = end_left.x = (end_left.y - offsetY4) / factor4;\n                        }\n                        else {\n                            console.log(\"else\");\n                            console.log(\"factor1 - factor2 \" + (factor1 - factor2));\n                            console.log(\"offsetY1 - offsetY2 \" + (offsetY1 - offsetY2));\n                            console.log(\"factor3 - factor4 \" + (factor3 - factor4));\n                            console.log(\"offsetY3 - offsetY4 \" + (offsetY3 - offsetY4));\n                            next_start_right.x = end_right.x = -((offsetY1 - offsetY2) / (factor1 - factor2));\n                            next_start_right.y = end_right.y = factor1 * end_right.x + offsetY1;\n                            next_start_left.x = end_left.x = -((offsetY3 - offsetY4) / (factor3 - factor4));\n                            next_start_left.y = end_left.y = factor3 * end_left.x + offsetY3;\n                        }\n                    }\n                    next_start_right.x = end_right.x;\n                    next_start_right.y = end_right.y;\n                    next_start_left.x = end_left.x;\n                    next_start_left.y = end_left.y;\n                }\n            }\n            for (i = 0; i < con_length; i++) {\n                if (contour_types[i] == GraphicsPathCommand_1.default.CURVE_TO_2)\n                    continue;\n                start_right = contour_points[i * 4];\n                start_left = contour_points[i * 4 + 1];\n                if (contour_types[i] == GraphicsPathCommand_1.default.CURVE_TO) {\n                    i++;\n                    ctr_right = contour_points[i * 4];\n                    ctr_left = contour_points[i * 4 + 1];\n                    end_right = contour_points[i * 4 + 2];\n                    end_left = contour_points[i * 4 + 3];\n                    var finished_curves = [];\n                    var finished_curves_types = [];\n                    var test_concave_curves = [];\n                    var test_convex_curves = [];\n                    var curve_sign = this.getSign(start_right.x, start_right.y, ctr_right.x, ctr_right.y, end_right.x, end_right.y) > 0;\n                    var curve_sign2 = -1;\n                    var curve_sign3 = 1;\n                    tessVerts.length = 0;\n                    if (curve_sign) {\n                        var subdivided = [];\n                        var subdivided2 = [];\n                        this.subdivideCurve(start_right.x, start_right.y, ctr_right.x, ctr_right.y, end_right.x, end_right.y, start_left.x, start_left.y, ctr_left.x, ctr_left.y, end_left.x, end_left.y, subdivided, subdivided2);\n                        for (var sc = 0; sc < subdivided.length / 6; sc++) {\n                            finished_curves.push(new Point_1.default(subdivided[sc * 6], subdivided[sc * 6 + 1]));\n                            finished_curves.push(new Point_1.default(subdivided[sc * 6 + 2], subdivided[sc * 6 + 3]));\n                            finished_curves.push(new Point_1.default(subdivided[sc * 6 + 4], subdivided[sc * 6 + 5]));\n                            finished_curves_types.push(-1);\n                            tessVerts.push(subdivided[sc * 6], subdivided[sc * 6 + 1]);\n                            tessVerts.push(subdivided[sc * 6 + 4], subdivided[sc * 6 + 5]);\n                        }\n                        for (var sc = (subdivided2.length / 6) - 1; sc >= 0; sc--) {\n                            finished_curves.push(new Point_1.default(subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5]));\n                            finished_curves.push(new Point_1.default(subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3]));\n                            finished_curves.push(new Point_1.default(subdivided2[sc * 6], subdivided2[sc * 6 + 1]));\n                            finished_curves_types.push(1);\n                            tessVerts.push(subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5]);\n                            tessVerts.push(subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3]);\n                            tessVerts.push(subdivided2[sc * 6], subdivided2[sc * 6 + 1]);\n                        }\n                    }\n                    else {\n                        var subdivided = [];\n                        var subdivided2 = [];\n                        this.subdivideCurve(start_left.x, start_left.y, ctr_left.x, ctr_left.y, end_left.x, end_left.y, start_right.x, start_right.y, ctr_right.x, ctr_right.y, end_right.x, end_right.y, subdivided, subdivided2);\n                        for (var sc = 0; sc < subdivided.length / 6; sc++) {\n                            finished_curves.push(new Point_1.default(subdivided[sc * 6], subdivided[sc * 6 + 1]));\n                            finished_curves.push(new Point_1.default(subdivided[sc * 6 + 2], subdivided[sc * 6 + 3]));\n                            finished_curves.push(new Point_1.default(subdivided[sc * 6 + 4], subdivided[sc * 6 + 5]));\n                            finished_curves_types.push(-1);\n                            tessVerts.push(subdivided[sc * 6], subdivided[sc * 6 + 1]);\n                            tessVerts.push(subdivided[sc * 6 + 4], subdivided[sc * 6 + 5]);\n                        }\n                        for (var sc = (subdivided2.length / 6) - 1; sc >= 0; sc--) {\n                            finished_curves.push(new Point_1.default(subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5]));\n                            finished_curves.push(new Point_1.default(subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3]));\n                            finished_curves.push(new Point_1.default(subdivided2[sc * 6], subdivided2[sc * 6 + 1]));\n                            finished_curves_types.push(1);\n                            tessVerts.push(subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5]);\n                            tessVerts.push(subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3]);\n                            tessVerts.push(subdivided2[sc * 6], subdivided2[sc * 6 + 1]);\n                        }\n                    }\n                    if (tessVerts.length > 0) {\n                        var verticesF32 = new Float32Array(tessVerts);\n                        if (Graphics._tess_obj == null) {\n                            console.log(\"No libtess2 tesselator available.\\nMake it available using Graphics._tess_obj=new TESS();\");\n                            return;\n                        }\n                        Graphics._tess_obj.addContour(verticesF32, 2, 8, tessVerts.length / 2);\n                    }\n                    var t = 0;\n                    for (t = 0; t < finished_curves_types.length; t++) {\n                        final_vert_list[final_vert_cnt++] = finished_curves[t * 3].x;\n                        final_vert_list[final_vert_cnt++] = finished_curves[t * 3].y;\n                        final_vert_list[final_vert_cnt++] = finished_curves_types[t];\n                        final_vert_list[final_vert_cnt++] = 1.0;\n                        final_vert_list[final_vert_cnt++] = 1.0;\n                        final_vert_list[final_vert_cnt++] = 1.0;\n                        final_vert_list[final_vert_cnt++] = 1.0;\n                        final_vert_list[final_vert_cnt++] = finished_curves[t * 3 + 1].x;\n                        final_vert_list[final_vert_cnt++] = finished_curves[t * 3 + 1].y;\n                        final_vert_list[final_vert_cnt++] = finished_curves_types[t];\n                        final_vert_list[final_vert_cnt++] = 0.5;\n                        final_vert_list[final_vert_cnt++] = 0.0;\n                        final_vert_list[final_vert_cnt++] = 1.0;\n                        final_vert_list[final_vert_cnt++] = 1.0;\n                        final_vert_list[final_vert_cnt++] = finished_curves[t * 3 + 2].x;\n                        final_vert_list[final_vert_cnt++] = finished_curves[t * 3 + 2].y;\n                        final_vert_list[final_vert_cnt++] = finished_curves_types[t];\n                        final_vert_list[final_vert_cnt++] = 0.0;\n                        final_vert_list[final_vert_cnt++] = 0.0;\n                        final_vert_list[final_vert_cnt++] = 1.0;\n                        final_vert_list[final_vert_cnt++] = 1.0;\n                    }\n                }\n                else {\n                    end_right = contour_points[i * 4 + 2];\n                    end_left = contour_points[i * 4 + 3];\n                    final_vert_list[final_vert_cnt++] = start_right.x;\n                    final_vert_list[final_vert_cnt++] = start_right.y;\n                    final_vert_list[final_vert_cnt++] = 1;\n                    final_vert_list[final_vert_cnt++] = 2.0;\n                    final_vert_list[final_vert_cnt++] = 0.0;\n                    final_vert_list[final_vert_cnt++] = 0.0;\n                    final_vert_list[final_vert_cnt++] = 0.0;\n                    final_vert_list[final_vert_cnt++] = start_left.x;\n                    final_vert_list[final_vert_cnt++] = start_left.y;\n                    final_vert_list[final_vert_cnt++] = 1;\n                    final_vert_list[final_vert_cnt++] = 2.0;\n                    final_vert_list[final_vert_cnt++] = 0.0;\n                    final_vert_list[final_vert_cnt++] = 0.0;\n                    final_vert_list[final_vert_cnt++] = 0.0;\n                    final_vert_list[final_vert_cnt++] = end_left.x;\n                    final_vert_list[final_vert_cnt++] = end_left.y;\n                    final_vert_list[final_vert_cnt++] = 1;\n                    final_vert_list[final_vert_cnt++] = 2.0;\n                    final_vert_list[final_vert_cnt++] = 0.0;\n                    final_vert_list[final_vert_cnt++] = 0.0;\n                    final_vert_list[final_vert_cnt++] = 0.0;\n                    final_vert_list[final_vert_cnt++] = start_right.x;\n                    final_vert_list[final_vert_cnt++] = start_right.y;\n                    final_vert_list[final_vert_cnt++] = 1;\n                    final_vert_list[final_vert_cnt++] = 2.0;\n                    final_vert_list[final_vert_cnt++] = 0.0;\n                    final_vert_list[final_vert_cnt++] = 0.0;\n                    final_vert_list[final_vert_cnt++] = 0.0;\n                    final_vert_list[final_vert_cnt++] = end_left.x;\n                    final_vert_list[final_vert_cnt++] = end_left.y;\n                    final_vert_list[final_vert_cnt++] = 1;\n                    final_vert_list[final_vert_cnt++] = 2.0;\n                    final_vert_list[final_vert_cnt++] = 0.0;\n                    final_vert_list[final_vert_cnt++] = 0.0;\n                    final_vert_list[final_vert_cnt++] = 0.0;\n                    final_vert_list[final_vert_cnt++] = end_right.x;\n                    final_vert_list[final_vert_cnt++] = end_right.y;\n                    final_vert_list[final_vert_cnt++] = 1;\n                    final_vert_list[final_vert_cnt++] = 2.0;\n                    final_vert_list[final_vert_cnt++] = 0.0;\n                    final_vert_list[final_vert_cnt++] = 0.0;\n                    final_vert_list[final_vert_cnt++] = 0.0;\n                }\n            }\n        }\n        /*\n         for (i = 0; i < final_vert_list.length/7; ++i)\n         console.log(\"final verts stroke \"+i+\" = \"+final_vert_list[i*7]+\" / \"+final_vert_list[i*7+1]);\n         */\n        Graphics._tess_obj.tesselate(4 /*TESS.WINDING_ODD*/, 0 /*TESS.ELEMENT_POLYGONS*/, 3, 2, null);\n        var verts = [];\n        var all_verts = [];\n        var vertIndicess = [];\n        var elems = [];\n        verts = Graphics._tess_obj.getVertices();\n        elems = Graphics._tess_obj.getElements();\n        var numVerts = verts.length / 2;\n        var numElems = elems.length / 3;\n        for (i = 0; i < numVerts; ++i)\n            all_verts.push(new Point_1.default(verts[i * 2], verts[i * 2 + 1]));\n        for (i = 0; i < numElems; ++i) {\n            var p1 = elems[i * 3];\n            var p2 = elems[i * 3 + 1];\n            var p3 = elems[i * 3 + 2];\n            final_vert_list[final_vert_cnt++] = all_verts[p3].x;\n            final_vert_list[final_vert_cnt++] = all_verts[p3].y;\n            final_vert_list[final_vert_cnt++] = 1;\n            final_vert_list[final_vert_cnt++] = 2.0;\n            final_vert_list[final_vert_cnt++] = 0.0;\n            final_vert_list[final_vert_cnt++] = 1.0;\n            final_vert_list[final_vert_cnt++] = 1.0;\n            final_vert_list[final_vert_cnt++] = all_verts[p2].x;\n            final_vert_list[final_vert_cnt++] = all_verts[p2].y;\n            final_vert_list[final_vert_cnt++] = 1;\n            final_vert_list[final_vert_cnt++] = 2.0;\n            final_vert_list[final_vert_cnt++] = 0.0;\n            final_vert_list[final_vert_cnt++] = 1.0;\n            final_vert_list[final_vert_cnt++] = 1.0;\n            final_vert_list[final_vert_cnt++] = all_verts[p1].x;\n            final_vert_list[final_vert_cnt++] = all_verts[p1].y;\n            final_vert_list[final_vert_cnt++] = 1;\n            final_vert_list[final_vert_cnt++] = 2.0;\n            final_vert_list[final_vert_cnt++] = 0.0;\n            final_vert_list[final_vert_cnt++] = 1.0;\n            final_vert_list[final_vert_cnt++] = 1.0;\n        }\n        // todo: handle material / subsprite settings, and check if a material / subsprite already exists for this settings\n        var attributesView = new AttributesView_1.default(Float32Array, 7);\n        attributesView.set(final_vert_list);\n        var attributesBuffer = attributesView.buffer;\n        attributesView.dispose();\n        var elements = new TriangleElements_1.default(attributesBuffer);\n        elements.setPositions(new Float2Attributes_1.default(attributesBuffer));\n        elements.setCustomAttributes(\"curves\", new Float3Attributes_1.default(attributesBuffer));\n        elements.setUVs(new Float2Attributes_1.default(attributesBuffer));\n        var material = DefaultMaterialManager_1.default.getDefaultMaterial();\n        material.bothSides = true;\n        material.useColorTransform = true;\n        material.curves = true;\n        this._target.graphics.addGraphic(elements, material);\n        this._active_stroke_path = null;\n    };\n    Graphics.prototype.isClockWiseXY = function (point1x, point1y, point2x, point2y, point3x, point3y) {\n        return ((point1x - point2x) * (point3y - point2y) - (point1y - point2y) * (point3x - point2x) < 0);\n    };\n    Graphics.prototype.getSign = function (ax, ay, cx, cy, bx, by) {\n        /*if(this.isClockWiseXY(ax, ay, bx, by, cx, cy)) {\n         return (bx - ax) * (cy - ay) - (by - ay) * (cx - ax);\n         }*/\n        return (ax - bx) * (cy - by) - (ay - by) * (cx - bx);\n    };\n    Graphics.prototype.pointInTri = function (ax, ay, bx, by, cx, cy, xx, xy) {\n        var b1 = this.getSign(ax, ay, xx, xy, bx, by) > 0;\n        var b2 = this.getSign(bx, by, xx, xy, cx, cy) > 0;\n        var b3 = this.getSign(cx, cy, xx, xy, ax, ay) > 0;\n        return ((b1 == b2) && (b2 == b3));\n    };\n    Graphics.prototype.subdivideCurve = function (startx, starty, cx, cy, endx, endy, startx2, starty2, cx2, cy2, endx2, endy2, array_out, array2_out) {\n        /*\n         if(!this.pointInTri(startx2, starty2, cx2, cy2, endx2, endy2, cx, cy)){\n         }\n         */\n        array_out.push(startx, starty, cx, cy, endx, endy);\n        array2_out.push(startx2, starty2, cx2, cy2, endx2, endy2);\n        return;\n        // var c1x = startx + (cx - startx) * 0.5;\n        // var c1y = starty + (cy - starty) * 0.5;\n        // var c2x = cx + (endx - cx) * 0.5;\n        // var c2y = cy + (endy - cy) * 0.5;\n        // var ax = c1x + (c2x - c1x) * 0.5;\n        // var ay = c1y + (c2y - c1y) * 0.5;\n        //\n        // var c1x2 = startx2 + (cx2 - startx2) * 0.5;\n        // var c1y2 = starty2 + (cy2 - starty2) * 0.5;\n        // var c2x2 = cx2 + (endx2 - cx2) * 0.5;\n        // var c2y2 = cy2 + (endy2 - cy2) * 0.5;\n        // var ax2 = c1x2 + (c2x2 - c1x2) * 0.5;\n        // var ay2 = c1y2 + (c2y2 - c1y2) * 0.5;\n        // if(this.pointInTri(startx2, starty2, c1x2, c1y2, ax2, ay2, c1x, c1y)){\n        // \tthis.subdivideCurve(startx, starty, c1x, c1y, ax, ay, startx2, starty2, c1x2, c1y2, ax2, ay2, array_out, array2_out);\n        // }\n        // else{\n        // \tarray_out.push(startx, starty, c1x, c1y, ax, ay);\n        // \tarray2_out.push(startx2, starty2, c1x2, c1y2, ax2, ay2);\n        // }\n        //\n        // if(this.pointInTri(ax2, ay2, c2x2, c2y2,  endx2, endy2, c2x, c2y)){\n        // \tthis.subdivideCurve(ax, ay, c2x, c2y, endx, endy, ax2, ay2, c2x2, c2y2, endx2, endy2, array_out, array2_out);\n        // }\n        // else{\n        // \tarray_out.push(ax, ay, c2x, c2y, endx, endy);\n        // \tarray2_out.push(ax2, ay2, c2x2, c2y2, endx2, endy2);\n        // }\n    };\n    Graphics.prototype.draw_fill = function () {\n        if (this._active_fill_path == null)\n            return;\n        this._active_fill_path.finalizeContour();\n        var contour_commands = this._active_fill_path.commands;\n        var contour_data = this._active_fill_path.data;\n        var contour_draw_directions = this._active_fill_path.draw_directions;\n        var commands;\n        var data;\n        var i = 0;\n        var k = 0;\n        var vert_cnt = 0;\n        var data_cnt = 0;\n        var draw_direction = 0;\n        var contours_vertices = [[]];\n        var final_vert_list = [];\n        var final_vert_cnt = 0;\n        var lastPoint = new Point_1.default();\n        for (k = 0; k < contour_commands.length; k++) {\n            contours_vertices.push([]);\n            vert_cnt = 0;\n            data_cnt = 0;\n            commands = contour_commands[k];\n            data = contour_data[k];\n            draw_direction = contour_draw_directions[k];\n            for (i = 0; i < commands.length; i++) {\n                switch (commands[i]) {\n                    case GraphicsPathCommand_1.default.MOVE_TO:\n                        lastPoint.x = data[data_cnt++];\n                        lastPoint.y = data[data_cnt++];\n                        contours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.x;\n                        contours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.y;\n                        break;\n                    case GraphicsPathCommand_1.default.LINE_TO:\n                        lastPoint.x = data[data_cnt++];\n                        lastPoint.y = data[data_cnt++];\n                        contours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.x;\n                        contours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.y;\n                        break;\n                    case GraphicsPathCommand_1.default.CURVE_TO:\n                        var curve_direction = data[data_cnt++];\n                        var control_x = data[data_cnt++];\n                        var control_y = data[data_cnt++];\n                        var end_x = data[data_cnt++];\n                        var end_y = data[data_cnt++];\n                        var curve_attr_1 = -1;\n                        if (draw_direction > 0) {\n                            if (curve_direction == 1) {\n                                //convex\n                                //console.log(\"convex\";\n                                curve_attr_1 = 1;\n                                contours_vertices[contours_vertices.length - 1][vert_cnt++] = control_x;\n                                contours_vertices[contours_vertices.length - 1][vert_cnt++] = control_y;\n                            }\n                            contours_vertices[contours_vertices.length - 1][vert_cnt++] = end_x;\n                            contours_vertices[contours_vertices.length - 1][vert_cnt++] = end_y;\n                        }\n                        else {\n                            if (curve_direction == 2) {\n                                //convex\n                                //console.log(\"convex\";\n                                curve_attr_1 = 1;\n                                contours_vertices[contours_vertices.length - 1][vert_cnt++] = control_x;\n                                contours_vertices[contours_vertices.length - 1][vert_cnt++] = control_y;\n                            }\n                            contours_vertices[contours_vertices.length - 1][vert_cnt++] = end_x;\n                            contours_vertices[contours_vertices.length - 1][vert_cnt++] = end_y;\n                        }\n                        if (!this.isClockWiseXY(end_x, end_y, control_x, control_y, lastPoint.x, lastPoint.y)) {\n                            final_vert_list[final_vert_cnt++] = end_x;\n                            final_vert_list[final_vert_cnt++] = end_y;\n                            final_vert_list[final_vert_cnt++] = curve_attr_1;\n                            final_vert_list[final_vert_cnt++] = 1.0;\n                            final_vert_list[final_vert_cnt++] = 1.0;\n                            final_vert_list[final_vert_cnt++] = 1.0;\n                            final_vert_list[final_vert_cnt++] = 0.0;\n                            final_vert_list[final_vert_cnt++] = control_x;\n                            final_vert_list[final_vert_cnt++] = control_y;\n                            final_vert_list[final_vert_cnt++] = curve_attr_1;\n                            final_vert_list[final_vert_cnt++] = 0.5;\n                            final_vert_list[final_vert_cnt++] = 0.0;\n                            final_vert_list[final_vert_cnt++] = 1.0;\n                            final_vert_list[final_vert_cnt++] = 0.0;\n                            final_vert_list[final_vert_cnt++] = lastPoint.x;\n                            final_vert_list[final_vert_cnt++] = lastPoint.y;\n                            final_vert_list[final_vert_cnt++] = curve_attr_1;\n                            final_vert_list[final_vert_cnt++] = 0.0;\n                            final_vert_list[final_vert_cnt++] = 0.0;\n                            final_vert_list[final_vert_cnt++] = 1.0;\n                            final_vert_list[final_vert_cnt++] = 0.0;\n                        }\n                        else {\n                            final_vert_list[final_vert_cnt++] = lastPoint.x;\n                            final_vert_list[final_vert_cnt++] = lastPoint.y;\n                            final_vert_list[final_vert_cnt++] = curve_attr_1;\n                            final_vert_list[final_vert_cnt++] = 1.0;\n                            final_vert_list[final_vert_cnt++] = 1.0;\n                            final_vert_list[final_vert_cnt++] = 1.0;\n                            final_vert_list[final_vert_cnt++] = 0.0;\n                            final_vert_list[final_vert_cnt++] = control_x;\n                            final_vert_list[final_vert_cnt++] = control_y;\n                            final_vert_list[final_vert_cnt++] = curve_attr_1;\n                            final_vert_list[final_vert_cnt++] = 0.5;\n                            final_vert_list[final_vert_cnt++] = 0.0;\n                            final_vert_list[final_vert_cnt++] = 1.0;\n                            final_vert_list[final_vert_cnt++] = 0.0;\n                            final_vert_list[final_vert_cnt++] = end_x;\n                            final_vert_list[final_vert_cnt++] = end_y;\n                            final_vert_list[final_vert_cnt++] = curve_attr_1;\n                            final_vert_list[final_vert_cnt++] = 0.0;\n                            final_vert_list[final_vert_cnt++] = 0.0;\n                            final_vert_list[final_vert_cnt++] = 1.0;\n                            final_vert_list[final_vert_cnt++] = 0.0;\n                        }\n                        lastPoint.x = end_x;\n                        lastPoint.y = end_y;\n                        break;\n                    case GraphicsPathCommand_1.default.CUBIC_CURVE:\n                        //todo\n                        break;\n                }\n            }\n        }\n        var verts = [];\n        var all_verts = [];\n        var vertIndicess = [];\n        var elems = [];\n        Graphics._tess_obj.newTess(1024 * 512);\n        for (k = 0; k < contours_vertices.length; k++) {\n            var vertices = contours_vertices[k];\n            /*\n             for (i = 0; i < vertices.length / 2; ++i)\n             console.log(\"vert collected\" + i + \" = \" + vertices[i * 2] + \" / \" + vertices[i * 2 + 1]);\n             */\n            var verticesF32 = new Float32Array(vertices);\n            //var verticesF32 = new Float32Array([0,0, 100,0, 100,100, 0,100]);\n            //console.log(\"in vertices\", vertices);\n            //var tess = new TESS();\n            if (Graphics._tess_obj == null) {\n                console.log(\"No libtess2 tesselator available.\\nMake it available using Graphics._tess_obj=new TESS();\");\n                return;\n            }\n            Graphics._tess_obj.addContour(verticesF32, 2, 8, vertices.length / 2);\n        }\n        Graphics._tess_obj.tesselate(0 /*TESS.WINDING_ODD*/, 0 /*TESS.ELEMENT_POLYGONS*/, 3, 2, null);\n        //console.log(\"out vertices\", Graphics._tess_obj.getVertices());\n        verts = Graphics._tess_obj.getVertices();\n        elems = Graphics._tess_obj.getElements();\n        //console.log(\"out elements\", Graphics._tess_obj.getElements());\n        var numVerts = verts.length / 2;\n        var numElems = elems.length / 3;\n        for (i = 0; i < numVerts; ++i)\n            all_verts.push(new Point_1.default(verts[i * 2], verts[i * 2 + 1]));\n        for (i = 0; i < numElems; ++i) {\n            var p1 = elems[i * 3];\n            var p2 = elems[i * 3 + 1];\n            var p3 = elems[i * 3 + 2];\n            final_vert_list[final_vert_cnt++] = all_verts[p3].x;\n            final_vert_list[final_vert_cnt++] = all_verts[p3].y;\n            final_vert_list[final_vert_cnt++] = 1;\n            final_vert_list[final_vert_cnt++] = 2.0;\n            final_vert_list[final_vert_cnt++] = 0.0;\n            final_vert_list[final_vert_cnt++] = 1.0;\n            final_vert_list[final_vert_cnt++] = 0.0;\n            final_vert_list[final_vert_cnt++] = all_verts[p2].x;\n            final_vert_list[final_vert_cnt++] = all_verts[p2].y;\n            final_vert_list[final_vert_cnt++] = 1;\n            final_vert_list[final_vert_cnt++] = 2.0;\n            final_vert_list[final_vert_cnt++] = 0.0;\n            final_vert_list[final_vert_cnt++] = 1.0;\n            final_vert_list[final_vert_cnt++] = 0.0;\n            final_vert_list[final_vert_cnt++] = all_verts[p1].x;\n            final_vert_list[final_vert_cnt++] = all_verts[p1].y;\n            final_vert_list[final_vert_cnt++] = 1;\n            final_vert_list[final_vert_cnt++] = 2.0;\n            final_vert_list[final_vert_cnt++] = 0.0;\n            final_vert_list[final_vert_cnt++] = 1.0;\n            final_vert_list[final_vert_cnt++] = 0.0;\n        }\n        //for (i = 0; i < final_vert_list.length/7; ++i)\n        //\tconsole.log(\"final verts \"+i+\" = \"+final_vert_list[i*7]+\" / \"+final_vert_list[i*7+1]);\n        var attributesView = new AttributesView_1.default(Float32Array, 7);\n        attributesView.set(final_vert_list);\n        var attributesBuffer = attributesView.buffer;\n        attributesView.dispose();\n        var elements = new TriangleElements_1.default(attributesBuffer);\n        elements.setPositions(new Float2Attributes_1.default(attributesBuffer));\n        elements.setCustomAttributes(\"curves\", new Float3Attributes_1.default(attributesBuffer));\n        elements.setUVs(new Float2Attributes_1.default(attributesBuffer));\n        var material = DefaultMaterialManager_1.default.getDefaultMaterial();\n        material.bothSides = true;\n        material.useColorTransform = true;\n        material.curves = true;\n        this._target.graphics.addGraphic(elements, material);\n        this._active_fill_path = null;\n    };\n    return Graphics;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Graphics;\n\n},{\"awayjs-core/lib/attributes/AttributesView\":undefined,\"awayjs-core/lib/attributes/Float2Attributes\":undefined,\"awayjs-core/lib/attributes/Float3Attributes\":undefined,\"awayjs-core/lib/errors/PartialImplementationError\":undefined,\"awayjs-core/lib/geom/Point\":undefined,\"awayjs-display/lib/draw/GraphicsPath\":\"awayjs-display/lib/draw/GraphicsPath\",\"awayjs-display/lib/draw/GraphicsPathCommand\":\"awayjs-display/lib/draw/GraphicsPathCommand\",\"awayjs-display/lib/graphics/TriangleElements\":\"awayjs-display/lib/graphics/TriangleElements\",\"awayjs-display/lib/managers/DefaultMaterialManager\":\"awayjs-display/lib/managers/DefaultMaterialManager\"}],\"awayjs-display/lib/draw/IGraphicsData\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/draw/InterpolationMethod\":[function(require,module,exports){\n\"use strict\";\n/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nvar InterpolationMethod = (function () {\n    function InterpolationMethod() {\n    }\n    /**\n     * Specifies that the RGB interpolation method should be used. This means\n     * that the gradient is rendered with exponential sRGB(standard RGB) space.\n     * The sRGB space is a W3C-endorsed standard that defines a non-linear\n     * conversion between red, green, and blue component values and the actual\n     * intensity of the visible component color.\n     *\n     * <p>For example, consider a simple linear gradient between two colors(with\n     * the <code>spreadMethod</code> parameter set to\n     * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n     * affect the appearance as follows: </p>\n     */\n    InterpolationMethod.LINEAR_RGB = \"linearRGB\";\n    /**\n     * Specifies that the RGB interpolation method should be used. This means\n     * that the gradient is rendered with exponential sRGB(standard RGB) space.\n     * The sRGB space is a W3C-endorsed standard that defines a non-linear\n     * conversion between red, green, and blue component values and the actual\n     * intensity of the visible component color.\n     *\n     * <p>For example, consider a simple linear gradient between two colors(with\n     * the <code>spreadMethod</code> parameter set to\n     * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n     * affect the appearance as follows: </p>\n     */\n    InterpolationMethod.RGB = \"rgb\";\n    return InterpolationMethod;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = InterpolationMethod;\n\n},{}],\"awayjs-display/lib/draw/JointStyle\":[function(require,module,exports){\n\"use strict\";\n/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nvar JointStyle = (function () {\n    function JointStyle() {\n    }\n    /**\n     * Specifies beveled joints in the <code>joints</code> parameter of the\n     * <code>flash.display.Graphics.lineStyle()</code> method.\n     */\n    JointStyle.BEVEL = \"bevel\";\n    /**\n     * Specifies mitered joints in the <code>joints</code> parameter of the\n     * <code>flash.display.Graphics.lineStyle()</code> method.\n     */\n    JointStyle.MITER = \"miter\";\n    /**\n     * Specifies round joints in the <code>joints</code> parameter of the\n     * <code>flash.display.Graphics.lineStyle()</code> method.\n     */\n    JointStyle.ROUND = \"round\";\n    return JointStyle;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = JointStyle;\n\n},{}],\"awayjs-display/lib/draw/LineScaleMode\":[function(require,module,exports){\n\"use strict\";\n/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nvar LineScaleMode = (function () {\n    function LineScaleMode() {\n    }\n    /**\n     * With this setting used as the <code>scaleMode</code> parameter of the\n     * <code>lineStyle()</code> method, the thickness of the line scales\n     * <i>only</i> vertically. For example, consider the following circles, drawn\n     * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n     * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n     * scaled only vertically, and the circle on the right is scaled both\n     * vertically and horizontally.\n     */\n    LineScaleMode.HORIZONTAL = \"horizontal\";\n    /**\n     * With this setting used as the <code>scaleMode</code> parameter of the\n     * <code>lineStyle()</code> method, the thickness of the line never scales.\n     */\n    LineScaleMode.NONE = \"none\";\n    /**\n     * With this setting used as the <code>scaleMode</code> parameter of the\n     * <code>lineStyle()</code> method, the thickness of the line always scales\n     * when the object is scaled(the default).\n     */\n    LineScaleMode.NORMAL = \"normal\";\n    /**\n     * With this setting used as the <code>scaleMode</code> parameter of the\n     * <code>lineStyle()</code> method, the thickness of the line scales\n     * <i>only</i> horizontally. For example, consider the following circles,\n     * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n     * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n     * left is scaled only horizontally, and the circle on the right is scaled\n     * both vertically and horizontally.\n     */\n    LineScaleMode.VERTICAL = \"vertical\";\n    return LineScaleMode;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LineScaleMode;\n\n},{}],\"awayjs-display/lib/draw/PixelSnapping\":[function(require,module,exports){\n\"use strict\";\n/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nvar PixelSnapping = (function () {\n    function PixelSnapping() {\n    }\n    /**\n     * A constant value used in the <code>pixelSnapping</code> property of a\n     * Bitmap object to specify that the bitmap image is always snapped to the\n     * nearest pixel, independent of any transformation.\n     */\n    PixelSnapping.ALWAYS = \"always\";\n    /**\n     * A constant value used in the <code>pixelSnapping</code> property of a\n     * Bitmap object to specify that the bitmap image is snapped to the nearest\n     * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n     * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n     * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n     * setting allows the image to be drawn as fast as possible by using the\n     * vector renderer.\n     */\n    PixelSnapping.AUTO = \"auto\";\n    /**\n     * A constant value used in the <code>pixelSnapping</code> property of a\n     * Bitmap object to specify that no pixel snapping occurs.\n     */\n    PixelSnapping.NEVER = \"never\";\n    return PixelSnapping;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PixelSnapping;\n\n},{}],\"awayjs-display/lib/draw/SpreadMethod\":[function(require,module,exports){\n\"use strict\";\n/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nvar SpreadMethod = (function () {\n    function SpreadMethod() {\n    }\n    /**\n     * Specifies that the gradient use the <i>pad</i> spread method.\n     */\n    SpreadMethod.PAD = \"pad\";\n    /**\n     * Specifies that the gradient use the <i>reflect</i> spread method.\n     */\n    SpreadMethod.REFLECT = \"reflect\";\n    /**\n     * Specifies that the gradient use the <i>repeat</i> spread method.\n     */\n    SpreadMethod.REPEAT = \"repeat\";\n    return SpreadMethod;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SpreadMethod;\n\n},{}],\"awayjs-display/lib/draw/TriangleCulling\":[function(require,module,exports){\n\"use strict\";\n/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nvar TriangleCulling = (function () {\n    function TriangleCulling() {\n    }\n    /**\n     * Specifies culling of all triangles facing toward the current view point.\n     */\n    TriangleCulling.NEGATIVE = \"negative\";\n    /**\n     * Specifies no culling. All triangles in the path are rendered.\n     */\n    TriangleCulling.NONE = \"none\";\n    /**\n     * Specifies culling of all triangles facing away from the current view\n     * point. This is also known as backface culling.\n     */\n    TriangleCulling.POSITIVE = \"positive\";\n    return TriangleCulling;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TriangleCulling;\n\n},{}],\"awayjs-display/lib/draw\":[function(require,module,exports){\n\"use strict\";\nvar CapsStyle_1 = require(\"awayjs-display/lib/draw/CapsStyle\");\nexports.CapsStyle = CapsStyle_1.default;\nvar GradientType_1 = require(\"awayjs-display/lib/draw/GradientType\");\nexports.GradientType = GradientType_1.default;\nvar Graphics_1 = require(\"awayjs-display/lib/draw/Graphics\");\nexports.Graphics = Graphics_1.default;\nvar GraphicsPath_1 = require(\"awayjs-display/lib/draw/GraphicsPath\");\nexports.GraphicsPath = GraphicsPath_1.default;\nvar GraphicsPathCommand_1 = require(\"awayjs-display/lib/draw/GraphicsPathCommand\");\nexports.GraphicsPathCommand = GraphicsPathCommand_1.default;\nvar GraphicsPathWinding_1 = require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nexports.GraphicsPathWinding = GraphicsPathWinding_1.default;\nvar InterpolationMethod_1 = require(\"awayjs-display/lib/draw/InterpolationMethod\");\nexports.InterpolationMethod = InterpolationMethod_1.default;\nvar JointStyle_1 = require(\"awayjs-display/lib/draw/JointStyle\");\nexports.JointStyle = JointStyle_1.default;\nvar LineScaleMode_1 = require(\"awayjs-display/lib/draw/LineScaleMode\");\nexports.LineScaleMode = LineScaleMode_1.default;\nvar PixelSnapping_1 = require(\"awayjs-display/lib/draw/PixelSnapping\");\nexports.PixelSnapping = PixelSnapping_1.default;\nvar SpreadMethod_1 = require(\"awayjs-display/lib/draw/SpreadMethod\");\nexports.SpreadMethod = SpreadMethod_1.default;\nvar TriangleCulling_1 = require(\"awayjs-display/lib/draw/TriangleCulling\");\nexports.TriangleCulling = TriangleCulling_1.default;\n\n},{\"awayjs-display/lib/draw/CapsStyle\":\"awayjs-display/lib/draw/CapsStyle\",\"awayjs-display/lib/draw/GradientType\":\"awayjs-display/lib/draw/GradientType\",\"awayjs-display/lib/draw/Graphics\":\"awayjs-display/lib/draw/Graphics\",\"awayjs-display/lib/draw/GraphicsPath\":\"awayjs-display/lib/draw/GraphicsPath\",\"awayjs-display/lib/draw/GraphicsPathCommand\":\"awayjs-display/lib/draw/GraphicsPathCommand\",\"awayjs-display/lib/draw/GraphicsPathWinding\":\"awayjs-display/lib/draw/GraphicsPathWinding\",\"awayjs-display/lib/draw/InterpolationMethod\":\"awayjs-display/lib/draw/InterpolationMethod\",\"awayjs-display/lib/draw/JointStyle\":\"awayjs-display/lib/draw/JointStyle\",\"awayjs-display/lib/draw/LineScaleMode\":\"awayjs-display/lib/draw/LineScaleMode\",\"awayjs-display/lib/draw/PixelSnapping\":\"awayjs-display/lib/draw/PixelSnapping\",\"awayjs-display/lib/draw/SpreadMethod\":\"awayjs-display/lib/draw/SpreadMethod\",\"awayjs-display/lib/draw/TriangleCulling\":\"awayjs-display/lib/draw/TriangleCulling\"}],\"awayjs-display/lib/errors/CastError\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ErrorBase_1 = require(\"awayjs-core/lib/errors/ErrorBase\");\nvar CastError = (function (_super) {\n    __extends(CastError, _super);\n    function CastError(message) {\n        _super.call(this, message);\n    }\n    return CastError;\n}(ErrorBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CastError;\n\n},{\"awayjs-core/lib/errors/ErrorBase\":undefined}],\"awayjs-display/lib/errors\":[function(require,module,exports){\n\"use strict\";\nvar CastError_1 = require(\"awayjs-display/lib/errors/CastError\");\nexports.CastError = CastError_1.default;\n\n},{\"awayjs-display/lib/errors/CastError\":\"awayjs-display/lib/errors/CastError\"}],\"awayjs-display/lib/events/CameraEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\n/**\n * @class away.events.CameraEvent\n */\nvar CameraEvent = (function (_super) {\n    __extends(CameraEvent, _super);\n    function CameraEvent(type, camera) {\n        _super.call(this, type);\n        this._camera = camera;\n    }\n    Object.defineProperty(CameraEvent.prototype, \"camera\", {\n        get: function () {\n            return this._camera;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the event.\n     * @return An exact duplicate of the current object.\n     */\n    CameraEvent.prototype.clone = function () {\n        return new CameraEvent(this.type, this._camera);\n    };\n    CameraEvent.PROJECTION_CHANGED = \"projectionChanged\";\n    return CameraEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CameraEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/DisplayObjectEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar DisplayObjectEvent = (function (_super) {\n    __extends(DisplayObjectEvent, _super);\n    function DisplayObjectEvent(type, object) {\n        _super.call(this, type);\n        this._object = object;\n    }\n    Object.defineProperty(DisplayObjectEvent.prototype, \"object\", {\n        get: function () {\n            return this._object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the event.\n     * @return An exact duplicate of the current object.\n     */\n    DisplayObjectEvent.prototype.clone = function () {\n        return new DisplayObjectEvent(this.type, this._object);\n    };\n    /**\n     *\n     */\n    DisplayObjectEvent.VISIBLITY_UPDATED = \"visiblityUpdated\";\n    /**\n     *\n     */\n    DisplayObjectEvent.SCENETRANSFORM_CHANGED = \"scenetransformChanged\";\n    /**\n     *\n     */\n    DisplayObjectEvent.SCENE_CHANGED = \"sceneChanged\";\n    /**\n     *\n     */\n    DisplayObjectEvent.PARTITION_CHANGED = \"partitionChanged\";\n    /**\n     *\n     */\n    DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS = \"invalidatePartitionBounds\";\n    return DisplayObjectEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DisplayObjectEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/ElementsEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.ElementsEvent\n * @see away.core.base.Graphics\n */\nvar ElementsEvent = (function (_super) {\n    __extends(ElementsEvent, _super);\n    /**\n     * Create a new GraphicsEvent\n     * @param type The event type.\n     * @param attributesView An optional data type of the vertex data being updated.\n     */\n    function ElementsEvent(type, attributesView) {\n        _super.call(this, type);\n        this._attributesView = attributesView;\n    }\n    Object.defineProperty(ElementsEvent.prototype, \"attributesView\", {\n        /**\n         * The attributes view of the vertex data.\n         */\n        get: function () {\n            return this._attributesView;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the event.\n     *\n     * @return An exact duplicate of the current object.\n     */\n    ElementsEvent.prototype.clone = function () {\n        return new ElementsEvent(this.type, this._attributesView);\n    };\n    /**\n     * Dispatched when a Elements's index data has been updated.\n     */\n    ElementsEvent.INVALIDATE_INDICES = \"invalidateIndices\";\n    /**\n     * Dispatched when a Elements's index data has been disposed.\n     */\n    ElementsEvent.CLEAR_INDICES = \"clearIndices\";\n    /**\n     * Dispatched when a Elements's vertex data has been updated.\n     */\n    ElementsEvent.INVALIDATE_VERTICES = \"invalidateVertices\";\n    /**\n     * Dispatched when a Elements's vertex data has been disposed.\n     */\n    ElementsEvent.CLEAR_VERTICES = \"clearVertices\";\n    return ElementsEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ElementsEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/LightEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar LightEvent = (function (_super) {\n    __extends(LightEvent, _super);\n    function LightEvent(type) {\n        _super.call(this, type);\n    }\n    //@override\n    LightEvent.prototype.clone = function () {\n        return new LightEvent(this.type);\n    };\n    LightEvent.CASTS_SHADOW_CHANGE = \"castsShadowChange\";\n    return LightEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LightEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/MouseEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nvar MouseEvent = (function (_super) {\n    __extends(MouseEvent, _super);\n    /**\n     * Create a new MouseEvent object.\n     * @param type The type of the MouseEvent.\n     */\n    function MouseEvent(type) {\n        _super.call(this, type);\n        // Private.\n        this._iAllowedToPropagate = true;\n    }\n    Object.defineProperty(MouseEvent.prototype, \"bubbles\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            var doesBubble = this._iAllowedToPropagate;\n            this._iAllowedToPropagate = true;\n            // Don't bubble if propagation has been stopped.\n            return doesBubble;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    MouseEvent.prototype.stopPropagation = function () {\n        this._iAllowedToPropagate = false;\n        if (this._iParentEvent)\n            this._iParentEvent.stopPropagation();\n    };\n    /**\n     * @inheritDoc\n     */\n    MouseEvent.prototype.stopImmediatePropagation = function () {\n        this._iAllowedToPropagate = false;\n        if (this._iParentEvent)\n            this._iParentEvent.stopImmediatePropagation();\n    };\n    /**\n     * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n     */\n    MouseEvent.prototype.clone = function () {\n        var result = new MouseEvent(this.type);\n        /* TODO: Debug / test - look into isDefaultPrevented\n         if (isDefaultPrevented())\n         result.preventDefault();\n         */\n        result.screenX = this.screenX;\n        result.screenY = this.screenY;\n        result.view = this.view;\n        result.entity = this.entity;\n        result.renderable = this.renderable;\n        result.material = this.material;\n        result.uv = this.uv;\n        result.position = this.position;\n        result.normal = this.normal;\n        result.elementIndex = this.elementIndex;\n        result.delta = this.delta;\n        result.ctrlKey = this.ctrlKey;\n        result.shiftKey = this.shiftKey;\n        result._iParentEvent = this;\n        result._iAllowedToPropagate = this._iAllowedToPropagate;\n        return result;\n    };\n    Object.defineProperty(MouseEvent.prototype, \"scenePosition\", {\n        /**\n         * The position in scene space where the event took place\n         */\n        get: function () {\n            return this.entity.sceneTransform.transformVector(this.position);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MouseEvent.prototype, \"sceneNormal\", {\n        /**\n         * The normal in scene space where the event took place\n         */\n        get: function () {\n            var sceneNormal = this.entity.sceneTransform.deltaTransformVector(this.normal);\n            sceneNormal.normalize();\n            return sceneNormal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Defines the value of the type property of a mouseOver3d event object.\n     */\n    MouseEvent.MOUSE_OVER = \"mouseOver3d\";\n    /**\n     * Defines the value of the type property of a mouseOut3d event object.\n     */\n    MouseEvent.MOUSE_OUT = \"mouseOut3d\";\n    /**\n     * Defines the value of the type property of a mouseUp3d event object.\n     */\n    MouseEvent.MOUSE_UP = \"mouseUp3d\";\n    /**\n     * Defines the value of the type property of a mouseDown3d event object.\n     */\n    MouseEvent.MOUSE_DOWN = \"mouseDown3d\";\n    /**\n     * Defines the value of the type property of a mouseMove3d event object.\n     */\n    MouseEvent.MOUSE_MOVE = \"mouseMove3d\";\n    /**\n     * Defines the value of the type property of a rollOver3d event object.\n     */\n    //\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n    /**\n     * Defines the value of the type property of a rollOut3d event object.\n     */\n    //\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n    /**\n     * Defines the value of the type property of a click3d event object.\n     */\n    MouseEvent.CLICK = \"click3d\";\n    /**\n     * Defines the value of the type property of a doubleClick3d event object.\n     */\n    MouseEvent.DOUBLE_CLICK = \"doubleClick3d\";\n    /**\n     * Defines the value of the type property of a mouseWheel3d event object.\n     */\n    MouseEvent.MOUSE_WHEEL = \"mouseWheel3d\";\n    return MouseEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = MouseEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/RenderableEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableEvent\n * @see away.core.base.Graphics\n */\nvar RenderableEvent = (function (_super) {\n    __extends(RenderableEvent, _super);\n    /**\n     * Create a new GraphicsEvent\n     * @param type The event type.\n     * @param dataType An optional data type of the vertex data being updated.\n     */\n    function RenderableEvent(type, renderable) {\n        _super.call(this, type);\n        this._renderable = renderable;\n    }\n    Object.defineProperty(RenderableEvent.prototype, \"renderable\", {\n        /**\n         * The renderobject owner of the renderable owner.\n         */\n        get: function () {\n            return this._renderable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the event.\n     *\n     * @return An exact duplicate of the current object.\n     */\n    RenderableEvent.prototype.clone = function () {\n        return new RenderableEvent(this.type, this._renderable);\n    };\n    /**\n     * Dispatched when a Renderable owners's render object owner has been updated.\n     */\n    RenderableEvent.INVALIDATE_RENDER_OWNER = \"invalidateRenderable\";\n    /**\n     *\n     */\n    RenderableEvent.INVALIDATE_ELEMENTS = \"invalidateElements\";\n    return RenderableEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RenderableEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/RendererEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar RendererEvent = (function (_super) {\n    __extends(RendererEvent, _super);\n    function RendererEvent(type) {\n        _super.call(this, type);\n    }\n    RendererEvent.VIEWPORT_UPDATED = \"viewportUpdated\";\n    RendererEvent.SCISSOR_UPDATED = \"scissorUpdated\";\n    return RendererEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RendererEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/ResizeEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar ResizeEvent = (function (_super) {\n    __extends(ResizeEvent, _super);\n    function ResizeEvent(type, oldHeight, oldWidth) {\n        if (oldHeight === void 0) { oldHeight = NaN; }\n        if (oldWidth === void 0) { oldWidth = NaN; }\n        _super.call(this, type);\n        this._oldHeight = oldHeight;\n        this._oldWidth = oldWidth;\n    }\n    Object.defineProperty(ResizeEvent.prototype, \"oldHeight\", {\n        get: function () {\n            return this._oldHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResizeEvent.prototype, \"oldWidth\", {\n        get: function () {\n            return this._oldWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the event.\n     *\n     * @return An exact duplicate of the current object.\n     */\n    ResizeEvent.prototype.clone = function () {\n        return new ResizeEvent(this.type, this._oldHeight, this._oldWidth);\n    };\n    ResizeEvent.RESIZE = \"resize\";\n    return ResizeEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ResizeEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/StyleEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar StyleEvent = (function (_super) {\n    __extends(StyleEvent, _super);\n    function StyleEvent(type, style) {\n        _super.call(this, type);\n        this._style = style;\n    }\n    Object.defineProperty(StyleEvent.prototype, \"style\", {\n        get: function () {\n            return this._style;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the event.\n     * @return An exact duplicate of the current object.\n     */\n    StyleEvent.prototype.clone = function () {\n        return new StyleEvent(this.type, this._style);\n    };\n    /**\n     *\n     */\n    StyleEvent.INVALIDATE_PROPERTIES = \"invalidateProperties\";\n    return StyleEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = StyleEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/SurfaceEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar SurfaceEvent = (function (_super) {\n    __extends(SurfaceEvent, _super);\n    /**\n     * Create a new GraphicsEvent\n     * @param type The event type.\n     * @param dataType An optional data type of the vertex data being updated.\n     */\n    function SurfaceEvent(type, surface) {\n        _super.call(this, type);\n        this._surface = surface;\n    }\n    Object.defineProperty(SurfaceEvent.prototype, \"surface\", {\n        /**\n         * The surface of the renderable.\n         */\n        get: function () {\n            return this._surface;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the event.\n     *\n     * @return An exact duplicate of the current object.\n     */\n    SurfaceEvent.prototype.clone = function () {\n        return new SurfaceEvent(this.type, this._surface);\n    };\n    SurfaceEvent.INVALIDATE_TEXTURE = \"invalidateTexture\";\n    SurfaceEvent.INVALIDATE_ANIMATION = \"invalidateAnimation\";\n    SurfaceEvent.INVALIDATE_PASSES = \"invalidatePasses\";\n    return SurfaceEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SurfaceEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/TouchEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar TouchEvent = (function (_super) {\n    __extends(TouchEvent, _super);\n    /**\n     * Create a new TouchEvent object.\n     * @param type The type of the TouchEvent.\n     */\n    function TouchEvent(type) {\n        _super.call(this, type);\n        // Private.\n        this._iAllowedToPropagate = true;\n    }\n    Object.defineProperty(TouchEvent.prototype, \"bubbles\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            var doesBubble = this._iAllowedToPropagate;\n            this._iAllowedToPropagate = true;\n            // Don't bubble if propagation has been stopped.\n            return doesBubble;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    TouchEvent.prototype.stopPropagation = function () {\n        this._iAllowedToPropagate = false;\n        if (this._iParentEvent)\n            this._iParentEvent.stopPropagation();\n    };\n    /**\n     * @inheritDoc\n     */\n    TouchEvent.prototype.stopImmediatePropagation = function () {\n        this._iAllowedToPropagate = false;\n        if (this._iParentEvent)\n            this._iParentEvent.stopImmediatePropagation();\n    };\n    /**\n     * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n     */\n    TouchEvent.prototype.clone = function () {\n        var result = new TouchEvent(this.type);\n        /* TODO: Debug / test - look into isDefaultPrevented\n         if (isDefaultPrevented())\n         result.preventDefault();\n         */\n        result.screenX = this.screenX;\n        result.screenY = this.screenY;\n        result.view = this.view;\n        result.entity = this.entity;\n        result.renderable = this.renderable;\n        result.material = this.material;\n        result.uv = this.uv;\n        result.position = this.position;\n        result.normal = this.normal;\n        result.elementIndex = this.elementIndex;\n        result.ctrlKey = this.ctrlKey;\n        result.shiftKey = this.shiftKey;\n        result._iParentEvent = this;\n        return result;\n    };\n    Object.defineProperty(TouchEvent.prototype, \"scenePosition\", {\n        /**\n         * The position in scene space where the event took place\n         */\n        get: function () {\n            return this.entity.sceneTransform.transformVector(this.position);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TouchEvent.prototype, \"sceneNormal\", {\n        /**\n         * The normal in scene space where the event took place\n         */\n        get: function () {\n            var sceneNormal = this.entity.sceneTransform.deltaTransformVector(this.normal);\n            sceneNormal.normalize();\n            return sceneNormal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    TouchEvent.TOUCH_END = \"touchEnd3d\";\n    /**\n     *\n     */\n    TouchEvent.TOUCH_BEGIN = \"touchBegin3d\";\n    /**\n     *\n     */\n    TouchEvent.TOUCH_MOVE = \"touchMove3d\";\n    /**\n     *\n     */\n    TouchEvent.TOUCH_OUT = \"touchOut3d\";\n    /**\n     *\n     */\n    TouchEvent.TOUCH_OVER = \"touchOver3d\";\n    return TouchEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TouchEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/TransformEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar TransformEvent = (function (_super) {\n    __extends(TransformEvent, _super);\n    function TransformEvent(type, transform) {\n        _super.call(this, type);\n        this._transform = transform;\n    }\n    Object.defineProperty(TransformEvent.prototype, \"transform\", {\n        get: function () {\n            return this._transform;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the event.\n     * @return An exact duplicate of the current object.\n     */\n    TransformEvent.prototype.clone = function () {\n        return new TransformEvent(this.type, this._transform);\n    };\n    /**\n     *\n     */\n    TransformEvent.INVALIDATE_MATRIX3D = \"invalidateMatrix3D\";\n    /**\n     *\n     */\n    TransformEvent.INVALIDATE_COLOR_TRANSFORM = \"invalidateColorTransform\";\n    return TransformEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TransformEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events\":[function(require,module,exports){\n\"use strict\";\nvar CameraEvent_1 = require(\"awayjs-display/lib/events/CameraEvent\");\nexports.CameraEvent = CameraEvent_1.default;\nvar DisplayObjectEvent_1 = require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nexports.DisplayObjectEvent = DisplayObjectEvent_1.default;\nvar ElementsEvent_1 = require(\"awayjs-display/lib/events/ElementsEvent\");\nexports.ElementsEvent = ElementsEvent_1.default;\nvar LightEvent_1 = require(\"awayjs-display/lib/events/LightEvent\");\nexports.LightEvent = LightEvent_1.default;\nvar MouseEvent_1 = require(\"awayjs-display/lib/events/MouseEvent\");\nexports.MouseEvent = MouseEvent_1.default;\nvar RenderableEvent_1 = require(\"awayjs-display/lib/events/RenderableEvent\");\nexports.RenderableEvent = RenderableEvent_1.default;\nvar RendererEvent_1 = require(\"awayjs-display/lib/events/RendererEvent\");\nexports.RendererEvent = RendererEvent_1.default;\nvar ResizeEvent_1 = require(\"awayjs-display/lib/events/ResizeEvent\");\nexports.ResizeEvent = ResizeEvent_1.default;\nvar StyleEvent_1 = require(\"awayjs-display/lib/events/StyleEvent\");\nexports.StyleEvent = StyleEvent_1.default;\nvar SurfaceEvent_1 = require(\"awayjs-display/lib/events/SurfaceEvent\");\nexports.SurfaceEvent = SurfaceEvent_1.default;\nvar TouchEvent_1 = require(\"awayjs-display/lib/events/TouchEvent\");\nexports.TouchEvent = TouchEvent_1.default;\nvar TransformEvent_1 = require(\"awayjs-display/lib/events/TransformEvent\");\nexports.TransformEvent = TransformEvent_1.default;\n\n},{\"awayjs-display/lib/events/CameraEvent\":\"awayjs-display/lib/events/CameraEvent\",\"awayjs-display/lib/events/DisplayObjectEvent\":\"awayjs-display/lib/events/DisplayObjectEvent\",\"awayjs-display/lib/events/ElementsEvent\":\"awayjs-display/lib/events/ElementsEvent\",\"awayjs-display/lib/events/LightEvent\":\"awayjs-display/lib/events/LightEvent\",\"awayjs-display/lib/events/MouseEvent\":\"awayjs-display/lib/events/MouseEvent\",\"awayjs-display/lib/events/RenderableEvent\":\"awayjs-display/lib/events/RenderableEvent\",\"awayjs-display/lib/events/RendererEvent\":\"awayjs-display/lib/events/RendererEvent\",\"awayjs-display/lib/events/ResizeEvent\":\"awayjs-display/lib/events/ResizeEvent\",\"awayjs-display/lib/events/StyleEvent\":\"awayjs-display/lib/events/StyleEvent\",\"awayjs-display/lib/events/SurfaceEvent\":\"awayjs-display/lib/events/SurfaceEvent\",\"awayjs-display/lib/events/TouchEvent\":\"awayjs-display/lib/events/TouchEvent\",\"awayjs-display/lib/events/TransformEvent\":\"awayjs-display/lib/events/TransformEvent\"}],\"awayjs-display/lib/factories/ITimelineSceneGraphFactory\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/factories\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/graphics/ElementsBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\nvar Float3Attributes_1 = require(\"awayjs-core/lib/attributes/Float3Attributes\");\nvar Short3Attributes_1 = require(\"awayjs-core/lib/attributes/Short3Attributes\");\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar ElementsEvent_1 = require(\"awayjs-display/lib/events/ElementsEvent\");\n/**\n * @class away.base.TriangleElements\n */\nvar ElementsBase = (function (_super) {\n    __extends(ElementsBase, _super);\n    /**\n     *\n     */\n    function ElementsBase(concatenatedBuffer) {\n        if (concatenatedBuffer === void 0) { concatenatedBuffer = null; }\n        _super.call(this);\n        this._customAttributesNames = new Array();\n        this._customAttributes = new Object();\n        this._numElements = 0;\n        this._verticesDirty = new Object();\n        this._invalidateVertices = new Object();\n        this._concatenatedBuffer = concatenatedBuffer;\n    }\n    Object.defineProperty(ElementsBase.prototype, \"concatenatedBuffer\", {\n        get: function () {\n            return this._concatenatedBuffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ElementsBase.prototype, \"indices\", {\n        /**\n         * The raw index data that define the faces.\n         */\n        get: function () {\n            return this._indices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    ElementsBase.prototype.getCustomAtributesNames = function () {\n        return this._customAttributesNames;\n    };\n    /**\n     *\n     */\n    ElementsBase.prototype.getCustomAtributes = function (name) {\n        return this._customAttributes[name];\n    };\n    Object.defineProperty(ElementsBase.prototype, \"numElements\", {\n        /**\n         * The total amount of triangles in the TriangleElements.\n         */\n        get: function () {\n            return this._numElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ElementsBase.prototype, \"numVertices\", {\n        get: function () {\n            throw new AbstractMethodError_1.default();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ElementsBase.prototype.copyTo = function (elements) {\n        if (this.indices)\n            elements.setIndices(this.indices.clone());\n        for (var name in this._customAttributes)\n            elements.setCustomAttributes(name, this.getCustomAtributes(name).clone());\n    };\n    /**\n     *\n     */\n    ElementsBase.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        if (this._indices) {\n            this._indices.dispose();\n            this._indices = null;\n        }\n        for (var name in this._customAttributes) {\n            this._customAttributes[name].dispose();\n            delete this._customAttributes;\n        }\n    };\n    ElementsBase.prototype.setIndices = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (values instanceof Short3Attributes_1.default) {\n            if (this._indices)\n                this.clearIndices();\n            this._indices = values;\n        }\n        else if (values) {\n            if (!this._indices)\n                this._indices = new Short3Attributes_1.default();\n            this._indices.set(values, offset);\n        }\n        else if (this._indices) {\n            this._indices.dispose();\n            this._indices = null;\n            this.clearIndices();\n        }\n        if (this._indices) {\n            this._numElements = this._indices.count;\n            this.invalidateIndicies();\n        }\n        else {\n            this._numElements = 0;\n        }\n    };\n    ElementsBase.prototype.setCustomAttributes = function (name, values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (values == this._customAttributes[name])\n            return;\n        if (values instanceof AttributesView_1.default) {\n            this.clearVertices(this._customAttributes[name]);\n            this._customAttributes[name] = values;\n        }\n        else if (values) {\n            if (!this._customAttributes[name])\n                this._customAttributes[name] = new Float3Attributes_1.default(this._concatenatedBuffer); //default custom atrributes is Float3\n            this._customAttributes[name].set(values, offset);\n        }\n        else if (this._customAttributes[name]) {\n            this.clearVertices(this._customAttributes[name]);\n            this._customAttributesNames.splice(this._customAttributesNames.indexOf(name), 1);\n            delete this._customAttributes[name];\n            return;\n        }\n        this.invalidateVertices(this._customAttributes[name]);\n        this._verticesDirty[this._customAttributes[name].id] = false;\n        if (this._customAttributesNames.indexOf(name) == -1)\n            this._customAttributesNames.push(name);\n    };\n    /**\n     * Clones the current object\n     * @return An exact duplicate of the current object.\n     */\n    ElementsBase.prototype.clone = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    ElementsBase.prototype.applyTransformation = function (transform) {\n    };\n    /**\n     * Scales the geometry.\n     * @param scale The amount by which to scale.\n     */\n    ElementsBase.prototype.scale = function (scale) {\n    };\n    ElementsBase.prototype.scaleUV = function (scaleU, scaleV) {\n        if (scaleU === void 0) { scaleU = 1; }\n        if (scaleV === void 0) { scaleV = 1; }\n    };\n    ElementsBase.prototype.getBoxBounds = function (target) {\n        if (target === void 0) { target = null; }\n        throw new AbstractMethodError_1.default();\n    };\n    ElementsBase.prototype.getSphereBounds = function (center, target) {\n        if (target === void 0) { target = null; }\n        throw new AbstractMethodError_1.default();\n    };\n    ElementsBase.prototype.hitTestPoint = function (x, y, z, box) {\n        throw new AbstractMethodError_1.default();\n    };\n    ElementsBase.prototype.invalidateIndicies = function () {\n        if (!this._invalidateIndices)\n            this._invalidateIndices = new ElementsEvent_1.default(ElementsEvent_1.default.INVALIDATE_INDICES, this._indices);\n        this.dispatchEvent(this._invalidateIndices);\n    };\n    ElementsBase.prototype.clearIndices = function () {\n        this.dispatchEvent(new ElementsEvent_1.default(ElementsEvent_1.default.CLEAR_INDICES, this._indices));\n    };\n    ElementsBase.prototype.invalidateVertices = function (attributesView) {\n        if (!attributesView || this._verticesDirty[attributesView.id])\n            return;\n        this._verticesDirty[attributesView.id] = true;\n        if (!this._invalidateVertices[attributesView.id])\n            this._invalidateVertices[attributesView.id] = new ElementsEvent_1.default(ElementsEvent_1.default.INVALIDATE_VERTICES, attributesView);\n        this.dispatchEvent(this._invalidateVertices[attributesView.id]);\n    };\n    ElementsBase.prototype.clearVertices = function (attributesView) {\n        if (!attributesView)\n            return;\n        attributesView.dispose();\n        this.dispatchEvent(new ElementsEvent_1.default(ElementsEvent_1.default.CLEAR_VERTICES, attributesView));\n        this._verticesDirty[attributesView.id] = null;\n        this._invalidateVertices[attributesView.id] = null;\n    };\n    ElementsBase.prototype._iTestCollision = function (pickingCollider, material, pickingCollision) {\n        throw new AbstractMethodError_1.default();\n    };\n    return ElementsBase;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ElementsBase;\n\n},{\"awayjs-core/lib/attributes/AttributesView\":undefined,\"awayjs-core/lib/attributes/Float3Attributes\":undefined,\"awayjs-core/lib/attributes/Short3Attributes\":undefined,\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined,\"awayjs-display/lib/events/ElementsEvent\":\"awayjs-display/lib/events/ElementsEvent\"}],\"awayjs-display/lib/graphics/ElementsType\":[function(require,module,exports){\n\"use strict\";\nvar ElementsType = (function () {\n    function ElementsType() {\n    }\n    /**\n     *\n     */\n    ElementsType.TRIANGLE = \"triangle\";\n    /**\n     *\n     */\n    ElementsType.LINE = \"line\";\n    return ElementsType;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ElementsType;\n\n},{}],\"awayjs-display/lib/graphics/Graphics\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Box_1 = require(\"awayjs-core/lib/geom/Box\");\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar Graphic_1 = require(\"awayjs-display/lib/graphics/Graphic\");\nvar ElementsEvent_1 = require(\"awayjs-display/lib/events/ElementsEvent\");\nvar StyleEvent_1 = require(\"awayjs-display/lib/events/StyleEvent\");\nvar ElementsUtils_1 = require(\"awayjs-display/lib/utils/ElementsUtils\");\n/**\n *\n * Graphics is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Graphics object is assigned to a Sprite, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleGraphic objects.\n *\n *\n *\n * @see away.core.base.SubGraphics\n * @see away.entities.Sprite\n *\n * @class Graphics\n */\nvar Graphics = (function (_super) {\n    __extends(Graphics, _super);\n    /**\n     * Creates a new Graphics object.\n     */\n    function Graphics() {\n        var _this = this;\n        _super.call(this);\n        this._boxBoundsInvalid = true;\n        this._sphereBoundsInvalid = true;\n        this._graphics = new Array();\n        this._onInvalidatePropertiesDelegate = function (event) { return _this._onInvalidateProperties(event); };\n        this._onInvalidateVerticesDelegate = function (event) { return _this._onInvalidateVertices(event); };\n    }\n    Object.defineProperty(Graphics.prototype, \"assetType\", {\n        get: function () {\n            return Graphics.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Graphics.prototype, \"count\", {\n        get: function () {\n            return this._graphics.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Graphics.prototype, \"animator\", {\n        /**\n         * Defines the animator of the graphics object.  Default value is <code>null</code>.\n         */\n        get: function () {\n            return this._animator;\n        },\n        set: function (value) {\n            this._animator = value;\n            var len = this._graphics.length;\n            var graphic;\n            for (var i = 0; i < len; ++i) {\n                graphic = this._graphics[i];\n                // cause material to be unregistered and registered again to work with the new animation type (if possible)\n                if (graphic.material) {\n                    graphic.material.iRemoveOwner(graphic);\n                    graphic.material.iAddOwner(graphic);\n                }\n                //invalidate any existing graphic objects in case they need to pull new elements\n                graphic.invalidateElements();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Graphics.prototype, \"style\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._style;\n        },\n        set: function (value) {\n            if (this._style == value)\n                return;\n            if (this._style)\n                this._style.removeEventListener(StyleEvent_1.default.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n            this._style = value;\n            if (this._style)\n                this._style.addEventListener(StyleEvent_1.default.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n            this._iInvalidateSurfaces();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Graphics.prototype, \"material\", {\n        /**\n         * The material with which to render the Graphics.\n         */\n        get: function () {\n            return this._material;\n        },\n        set: function (value) {\n            if (value == this._material)\n                return;\n            var i;\n            var len = this._graphics.length;\n            var graphic;\n            if (this._material)\n                for (i = 0; i < len; i++)\n                    if (!(graphic = this._graphics[i])._iGetExplicitMaterial())\n                        this._material.iRemoveOwner(graphic);\n            this._material = value;\n            if (this._material)\n                for (i = 0; i < len; i++)\n                    if (!(graphic = this._graphics[i])._iGetExplicitMaterial())\n                        this._material.iAddOwner(graphic);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds a GraphicBase wrapping a Elements.\n     *\n     * @param elements\n     */\n    Graphics.prototype.addGraphic = function (elements, material, style) {\n        if (material === void 0) { material = null; }\n        if (style === void 0) { style = null; }\n        var graphic;\n        if (Graphic_1.default._available.length) {\n            graphic = Graphic_1.default._available.pop();\n            graphic._iIndex = this._graphics.length;\n            graphic.parent = this;\n            graphic.elements = elements;\n            graphic.material = material;\n            graphic.style = style;\n        }\n        else {\n            graphic = new Graphic_1.default(this._graphics.length, this, elements, material, style);\n        }\n        this._graphics.push(graphic);\n        elements.addEventListener(ElementsEvent_1.default.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n        this.invalidate();\n        return graphic;\n    };\n    Graphics.prototype.removeGraphic = function (graphic) {\n        this._graphics.splice(this._graphics.indexOf(graphic), 1);\n        graphic.elements.removeEventListener(ElementsEvent_1.default.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n        graphic.elements = null;\n        graphic.material = null;\n        graphic.style = null;\n        graphic.clear();\n        this.invalidate();\n    };\n    Graphics.prototype.getGraphicAt = function (index) {\n        return this._graphics[index];\n    };\n    Graphics.prototype.applyTransformation = function (transform) {\n        var len = this._graphics.length;\n        for (var i = 0; i < len; ++i)\n            this._graphics[i].elements.applyTransformation(transform);\n    };\n    Graphics.prototype.copyTo = function (graphics) {\n        graphics.material = this._material;\n        graphics.style = this.style;\n        graphics.particles = this.particles;\n        graphics.numParticles = this.numParticles;\n        var graphic;\n        var len = this._graphics.length;\n        for (var i = 0; i < len; ++i) {\n            graphic = this._graphics[i];\n            graphics.addGraphic(graphic.elements, graphic._iGetExplicitMaterial(), graphic._iGetExplicitStyle());\n        }\n        if (this._animator)\n            graphics.animator = this._animator.clone();\n    };\n    /**\n     * Scales the geometry.\n     * @param scale The amount by which to scale.\n     */\n    Graphics.prototype.scale = function (scale) {\n        var len = this._graphics.length;\n        for (var i = 0; i < len; ++i)\n            this._graphics[i].elements.scale(scale);\n    };\n    Graphics.prototype.clear = function () {\n        for (var i = this._graphics.length - 1; i >= 0; i--)\n            this._graphics[i].clear();\n    };\n    /**\n     * Clears all resources used by the Graphics object, including SubGeometries.\n     */\n    Graphics.prototype.dispose = function () {\n        this.material = null;\n        for (var i = this._graphics.length - 1; i >= 0; i--)\n            this._graphics[i].dispose();\n        if (this._animator)\n            this._animator.dispose();\n    };\n    /**\n     * Scales the uv coordinates (tiling)\n     * @param scaleU The amount by which to scale on the u axis. Default is 1;\n     * @param scaleV The amount by which to scale on the v axis. Default is 1;\n     */\n    Graphics.prototype.scaleUV = function (scaleU, scaleV) {\n        if (scaleU === void 0) { scaleU = 1; }\n        if (scaleV === void 0) { scaleV = 1; }\n        var len = this._graphics.length;\n        for (var i = 0; i < len; ++i)\n            this._graphics[i].elements.scaleUV(scaleU, scaleV);\n    };\n    Graphics.prototype.getBoxBounds = function () {\n        if (this._boxBoundsInvalid) {\n            this._boxBoundsInvalid = false;\n            if (!this._boxBounds)\n                this._boxBounds = new Box_1.default();\n            if (this._graphics.length) {\n                this._boxBounds.setBoundIdentity();\n                var len = this._graphics.length;\n                for (var i = 0; i < len; i++)\n                    this._boxBounds = this._graphics[i].elements.getBoxBounds(this._boxBounds);\n            }\n            else {\n                this._boxBounds.setEmpty();\n            }\n        }\n        return this._boxBounds;\n    };\n    Graphics.prototype.getSphereBounds = function (center, target) {\n        if (target === void 0) { target = null; }\n        var len = this._graphics.length;\n        for (var i = 0; i < len; i++)\n            target = this._graphics[i].elements.getSphereBounds(center, target);\n        return target;\n    };\n    Graphics.prototype.invalidate = function () {\n        _super.prototype.invalidate.call(this);\n        this._boxBoundsInvalid = true;\n        this._sphereBoundsInvalid = true;\n    };\n    Graphics.prototype._iInvalidateSurfaces = function () {\n        var len = this._graphics.length;\n        for (var i = 0; i < len; ++i)\n            this._graphics[i].invalidateSurface();\n    };\n    Graphics.prototype.invalidateElements = function () {\n        var len = this._graphics.length;\n        for (var i = 0; i < len; ++i)\n            this._graphics[i].invalidateElements();\n    };\n    Graphics.prototype._hitTestPointInternal = function (x, y) {\n        //TODO: handle lines as well\n        var len = this._graphics.length;\n        for (var i = 0; i < len; i++)\n            if (ElementsUtils_1.default.hitTestTriangleElements(x, y, 0, this.getBoxBounds(), this._graphics[i].elements))\n                return true;\n        return false;\n    };\n    Graphics.prototype.acceptTraverser = function (traverser) {\n        var len = this._graphics.length;\n        for (var i = 0; i < len; i++)\n            traverser.applyRenderable(this._graphics[i]);\n    };\n    Graphics.prototype._onInvalidateProperties = function (event) {\n        this._iInvalidateSurfaces();\n    };\n    Graphics.prototype._onInvalidateVertices = function (event) {\n        if (event.attributesView != event.target.positions)\n            return;\n        this.invalidate();\n    };\n    Graphics.assetType = \"[asset Graphics]\";\n    return Graphics;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Graphics;\n\n},{\"awayjs-core/lib/geom/Box\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined,\"awayjs-display/lib/events/ElementsEvent\":\"awayjs-display/lib/events/ElementsEvent\",\"awayjs-display/lib/events/StyleEvent\":\"awayjs-display/lib/events/StyleEvent\",\"awayjs-display/lib/graphics/Graphic\":\"awayjs-display/lib/graphics/Graphic\",\"awayjs-display/lib/utils/ElementsUtils\":\"awayjs-display/lib/utils/ElementsUtils\"}],\"awayjs-display/lib/graphics/Graphic\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar RenderableEvent_1 = require(\"awayjs-display/lib/events/RenderableEvent\");\nvar StyleEvent_1 = require(\"awayjs-display/lib/events/StyleEvent\");\n/**\n * Graphic wraps a Elements as a scene graph instantiation. A Graphic is owned by a Sprite object.\n *\n *\n * @see away.base.ElementsBase\n * @see away.entities.Sprite\n *\n * @class away.base.Graphic\n */\nvar Graphic = (function (_super) {\n    __extends(Graphic, _super);\n    /**\n     * Creates a new Graphic object\n     */\n    function Graphic(index, parent, elements, material, style) {\n        var _this = this;\n        if (material === void 0) { material = null; }\n        if (style === void 0) { style = null; }\n        _super.call(this);\n        this._iIndex = 0;\n        this._onInvalidatePropertiesDelegate = function (event) { return _this._onInvalidateProperties(event); };\n        this._iIndex = index;\n        this.parent = parent;\n        this.elements = elements;\n        this.material = material;\n        this.style = style;\n    }\n    Object.defineProperty(Graphic.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            return Graphic.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Graphic.prototype, \"animator\", {\n        /**\n         *\n         */\n        get: function () {\n            return this.parent.animator;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Graphic.prototype, \"material\", {\n        //TODO test shader picking\n        //\t\tpublic get shaderPickingDetails():boolean\n        //\t\t{\n        //\n        //\t\t\treturn this.sourceEntity.shaderPickingDetails;\n        //\t\t}\n        /**\n         * The material used to render the current TriangleGraphic. If set to null, its parent Sprite's material will be used instead.\n         */\n        get: function () {\n            return this._material || this.parent.material;\n        },\n        set: function (value) {\n            if (this.material)\n                this.material.iRemoveOwner(this);\n            this._material = value;\n            if (this.material)\n                this.material.iAddOwner(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Graphic.prototype, \"style\", {\n        /**\n         * The style used to render the current TriangleGraphic. If set to null, its parent Sprite's style will be used instead.\n         */\n        get: function () {\n            return this._style || this.parent.style;\n        },\n        set: function (value) {\n            if (this._style == value)\n                return;\n            if (this._style)\n                this._style.removeEventListener(StyleEvent_1.default.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n            this._style = value;\n            if (this._style)\n                this._style.addEventListener(StyleEvent_1.default.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n            this.invalidateSurface();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    Graphic.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.parent.removeGraphic(this);\n        this.parent = null;\n        Graphic._available.push(this);\n    };\n    Graphic.prototype.invalidateElements = function () {\n        this.dispatchEvent(new RenderableEvent_1.default(RenderableEvent_1.default.INVALIDATE_ELEMENTS, this));\n    };\n    Graphic.prototype.invalidateSurface = function () {\n        this.dispatchEvent(new RenderableEvent_1.default(RenderableEvent_1.default.INVALIDATE_RENDER_OWNER, this));\n    };\n    Graphic.prototype._iGetExplicitMaterial = function () {\n        return this._material;\n    };\n    Graphic.prototype._iGetExplicitStyle = function () {\n        return this._style;\n    };\n    Graphic.prototype._onInvalidateProperties = function (event) {\n        this.invalidateSurface();\n    };\n    /**\n     * //TODO\n     *\n     * @param shortestCollisionDistance\n     * @param findClosest\n     * @returns {boolean}\n     *\n     * @internal\n     */\n    Graphic.prototype._iTestCollision = function (pickingCollision, pickingCollider) {\n        return this.elements._iTestCollision(pickingCollider, this.material, pickingCollision);\n    };\n    Graphic._available = new Array();\n    Graphic.assetType = \"[asset Graphic]\";\n    return Graphic;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Graphic;\n\n},{\"awayjs-core/lib/library/AssetBase\":undefined,\"awayjs-display/lib/events/RenderableEvent\":\"awayjs-display/lib/events/RenderableEvent\",\"awayjs-display/lib/events/StyleEvent\":\"awayjs-display/lib/events/StyleEvent\"}],\"awayjs-display/lib/graphics/LineElements\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\nvar Byte4Attributes_1 = require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nvar Float1Attributes_1 = require(\"awayjs-core/lib/attributes/Float1Attributes\");\nvar ElementsBase_1 = require(\"awayjs-display/lib/graphics/ElementsBase\");\nvar ElementsUtils_1 = require(\"awayjs-display/lib/utils/ElementsUtils\");\n/**\n * @class LineElements\n */\nvar LineElements = (function (_super) {\n    __extends(LineElements, _super);\n    /**\n     *\n     */\n    function LineElements(concatenatedBuffer) {\n        if (concatenatedBuffer === void 0) { concatenatedBuffer = null; }\n        _super.call(this, concatenatedBuffer);\n        this._numVertices = 0;\n        this._positions = new AttributesView_1.default(Float32Array, 6, concatenatedBuffer);\n    }\n    Object.defineProperty(LineElements.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return LineElements.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineElements.prototype, \"positions\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._positions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineElements.prototype, \"thickness\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._thickness;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineElements.prototype, \"colors\", {\n        /**\n         *\n         */\n        get: function () {\n            if (!this._colors)\n                this.setColors(this._colors);\n            return this._colors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineElements.prototype, \"numVertices\", {\n        /**\n         * The total amount of vertices in the LineElements.\n         */\n        get: function () {\n            return this._numVertices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LineElements.prototype.getBoxBounds = function (target) {\n        if (target === void 0) { target = null; }\n        //TODO bounding calculations for lines\n        return target;\n    };\n    LineElements.prototype.getSphereBounds = function (center, target) {\n        if (target === void 0) { target = null; }\n        //TODO bounding calculations for lines\n        return target;\n    };\n    LineElements.prototype.setPositions = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (values instanceof AttributesView_1.default) {\n            this.clearVertices(this._positions);\n            this._positions = values;\n        }\n        else if (values) {\n            var i = 0;\n            var j = 0;\n            var index = 0;\n            var positions = new Float32Array(values.length * 4);\n            var indices = new Uint16Array(values.length);\n            while (i < values.length) {\n                if (index / 6 & 1) {\n                    positions[index] = values[i + 3];\n                    positions[index + 1] = values[i + 4];\n                    positions[index + 2] = values[i + 5];\n                    positions[index + 3] = values[i];\n                    positions[index + 4] = values[i + 1];\n                    positions[index + 5] = values[i + 2];\n                }\n                else {\n                    positions[index] = values[i];\n                    positions[index + 1] = values[i + 1];\n                    positions[index + 2] = values[i + 2];\n                    positions[index + 3] = values[i + 3];\n                    positions[index + 4] = values[i + 4];\n                    positions[index + 5] = values[i + 5];\n                }\n                index += 6;\n                if (++j == 4) {\n                    var o = index / 6 - 4;\n                    indices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n                    j = 0;\n                    i += 6;\n                }\n            }\n            this._positions.set(positions, offset * 4);\n            this.setIndices(indices, offset);\n        }\n        else {\n            this.clearVertices(this._positions);\n            this._positions = new AttributesView_1.default(Float32Array, 6, this._concatenatedBuffer);\n        }\n        this._numVertices = this._positions.count;\n        this.invalidateVertices(this._positions);\n        this._verticesDirty[this._positions.id] = false;\n    };\n    LineElements.prototype.setThickness = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (values instanceof Float1Attributes_1.default) {\n            this._thickness = values;\n        }\n        else if (values) {\n            if (!this._thickness)\n                this._thickness = new Float1Attributes_1.default(this._concatenatedBuffer);\n            var i = 0;\n            var j = 0;\n            var index = 0;\n            var thickness = new Float32Array(values.length * 4);\n            while (i < values.length) {\n                thickness[index] = (Math.floor(0.5 * index + 0.5) & 1) ? -values[i] : values[i];\n                if (++j == 4) {\n                    j = 0;\n                    i++;\n                }\n                index++;\n            }\n            this._thickness.set(thickness, offset * 4);\n        }\n        else if (this._thickness) {\n            this._thickness.dispose();\n            this._thickness = null;\n        }\n        this.invalidateVertices(this._thickness);\n        this._verticesDirty[this._thickness.id] = false;\n    };\n    LineElements.prototype.setColors = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (values) {\n            if (values == this._colors)\n                return;\n            if (values instanceof Byte4Attributes_1.default) {\n                this.clearVertices(this._colors);\n                this._colors = values;\n            }\n            else {\n                if (!this._colors)\n                    this._colors = new Byte4Attributes_1.default(this._concatenatedBuffer);\n                var i = 0;\n                var j = 0;\n                var index = 0;\n                var colors = new Uint8Array(values.length * 4);\n                while (i < values.length) {\n                    if (index / 4 & 1) {\n                        colors[index] = values[i + 4];\n                        colors[index + 1] = values[i + 5];\n                        colors[index + 2] = values[i + 6];\n                        colors[index + 3] = values[i + 7];\n                    }\n                    else {\n                        colors[index] = values[i];\n                        colors[index + 1] = values[i + 1];\n                        colors[index + 2] = values[i + 2];\n                        colors[index + 3] = values[i + 3];\n                    }\n                    if (++j == 4) {\n                        j = 0;\n                        i += 8;\n                    }\n                    index += 4;\n                }\n                this._colors.set(colors, offset * 4);\n            }\n        }\n        else {\n            //auto-derive colors\n            this._colors = ElementsUtils_1.default.generateColors(this.indices, this._colors, this._concatenatedBuffer, this._numVertices);\n        }\n        this.invalidateVertices(this._colors);\n        this._verticesDirty[this._colors.id] = false;\n    };\n    /**\n     *\n     */\n    LineElements.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._positions.dispose();\n        this._positions = null;\n        this._thickness.dispose();\n        this._thickness = null;\n        this._colors.dispose();\n        this._colors = null;\n    };\n    /**\n     * Clones the current object\n     * @return An exact duplicate of the current object.\n     */\n    LineElements.prototype.clone = function () {\n        var clone = new LineElements(this._concatenatedBuffer ? this._concatenatedBuffer.clone() : null);\n        clone.setIndices(this.indices.clone());\n        clone.setPositions(this._positions.clone());\n        clone.setThickness(this._thickness.clone());\n        clone.setColors(this._colors.clone());\n        return clone;\n    };\n    LineElements.prototype._iTestCollision = function (pickingCollider, material, pickingCollision) {\n        return pickingCollider.testLineCollision(this, material, pickingCollision);\n    };\n    LineElements.assetType = \"[asset LineElements]\";\n    return LineElements;\n}(ElementsBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LineElements;\n\n},{\"awayjs-core/lib/attributes/AttributesView\":undefined,\"awayjs-core/lib/attributes/Byte4Attributes\":undefined,\"awayjs-core/lib/attributes/Float1Attributes\":undefined,\"awayjs-display/lib/graphics/ElementsBase\":\"awayjs-display/lib/graphics/ElementsBase\",\"awayjs-display/lib/utils/ElementsUtils\":\"awayjs-display/lib/utils/ElementsUtils\"}],\"awayjs-display/lib/graphics/TriangleElements\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\nvar Float3Attributes_1 = require(\"awayjs-core/lib/attributes/Float3Attributes\");\nvar Float2Attributes_1 = require(\"awayjs-core/lib/attributes/Float2Attributes\");\nvar ElementsBase_1 = require(\"awayjs-display/lib/graphics/ElementsBase\");\nvar ElementsUtils_1 = require(\"awayjs-display/lib/utils/ElementsUtils\");\n/**\n * @class away.base.TriangleElements\n */\nvar TriangleElements = (function (_super) {\n    __extends(TriangleElements, _super);\n    function TriangleElements() {\n        _super.apply(this, arguments);\n        this._numVertices = 0;\n        this._faceNormalsDirty = true;\n        this._faceTangentsDirty = true;\n        this._autoDeriveNormals = true;\n        this._autoDeriveTangents = true;\n        //used for hittesting geometry\n        this.cells = new Array();\n        this.lastCollisionIndex = -1;\n    }\n    Object.defineProperty(TriangleElements.prototype, \"assetType\", {\n        get: function () {\n            return TriangleElements.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"numVertices\", {\n        get: function () {\n            return this._numVertices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"useCondensedIndices\", {\n        /**\n         * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n         * by condensing the number of joint index values required per sprite. Only applicable to\n         * skeleton animations that utilise more than one sprite object. Defaults to false.\n         */\n        get: function () {\n            return this._useCondensedIndices;\n        },\n        set: function (value) {\n            if (this._useCondensedIndices == value)\n                return;\n            this._useCondensedIndices = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"jointsPerVertex\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._jointsPerVertex;\n        },\n        set: function (value) {\n            if (this._jointsPerVertex == value)\n                return;\n            this._jointsPerVertex = value;\n            if (this._jointIndices)\n                this._jointIndices.dimensions = this._jointsPerVertex;\n            if (this._jointWeights)\n                this._jointWeights.dimensions = this._jointsPerVertex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"autoDeriveNormals\", {\n        /**\n         * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n         * explicitly.\n         */\n        get: function () {\n            return this._autoDeriveNormals;\n        },\n        set: function (value) {\n            if (this._autoDeriveNormals == value)\n                return;\n            this._autoDeriveNormals = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"autoDeriveTangents\", {\n        /**\n         * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n         * explicitly.\n         */\n        get: function () {\n            return this._autoDeriveTangents;\n        },\n        set: function (value) {\n            if (this._autoDeriveTangents == value)\n                return;\n            this._autoDeriveTangents = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"positions\", {\n        /**\n         *\n         */\n        get: function () {\n            if (!this._positions)\n                this.setPositions(new Float3Attributes_1.default(this._concatenatedBuffer));\n            return this._positions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"normals\", {\n        /**\n         *\n         */\n        get: function () {\n            if (!this._normals || this._verticesDirty[this._normals.id])\n                this.setNormals(this._normals);\n            return this._normals;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"tangents\", {\n        /**\n         *\n         */\n        get: function () {\n            if (!this._tangents || this._verticesDirty[this._tangents.id])\n                this.setTangents(this._tangents);\n            return this._tangents;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"faceNormals\", {\n        /**\n         * The raw data of the face normals, in the same order as the faces are listed in the index list.\n         */\n        get: function () {\n            if (this._faceNormalsDirty)\n                this.updateFaceNormals();\n            return this._faceNormals;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"faceTangents\", {\n        /**\n         * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n         */\n        get: function () {\n            if (this._faceTangentsDirty)\n                this.updateFaceTangents();\n            return this._faceTangents;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"uvs\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._uvs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"jointIndices\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._jointIndices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"jointWeights\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._jointWeights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"condensedIndexLookUp\", {\n        get: function () {\n            return this._condensedIndexLookUp;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TriangleElements.prototype.getBoxBounds = function (target) {\n        if (target === void 0) { target = null; }\n        return ElementsUtils_1.default.getTriangleGraphicsBoxBounds(this.positions, target, this._numVertices);\n    };\n    TriangleElements.prototype.getSphereBounds = function (center, target) {\n        if (target === void 0) { target = null; }\n        return ElementsUtils_1.default.getTriangleGraphicsSphereBounds(this.positions, center, target, this._numVertices);\n    };\n    TriangleElements.prototype.hitTestPoint = function (x, y, z) {\n        return true;\n    };\n    TriangleElements.prototype.setPositions = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (values == this._positions)\n            return;\n        if (values instanceof AttributesView_1.default) {\n            this.clearVertices(this._positions);\n            this._positions = values;\n        }\n        else if (values) {\n            if (!this._positions)\n                this._positions = new Float3Attributes_1.default(this._concatenatedBuffer);\n            this._positions.set(values, offset);\n        }\n        else {\n            this.clearVertices(this._positions);\n            this._positions = new Float3Attributes_1.default(this._concatenatedBuffer); //positions cannot be null\n        }\n        this._numVertices = this._positions.count;\n        if (this._autoDeriveNormals)\n            this.invalidateVertices(this._normals);\n        if (this._autoDeriveTangents)\n            this.invalidateVertices(this._tangents);\n        this.invalidateVertices(this._positions);\n        this._verticesDirty[this._positions.id] = false;\n    };\n    TriangleElements.prototype.setNormals = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (!this._autoDeriveNormals) {\n            if (values == this._normals)\n                return;\n            if (values instanceof Float3Attributes_1.default) {\n                this.clearVertices(this._normals);\n                this._normals = values;\n            }\n            else if (values) {\n                if (!this._normals)\n                    this._normals = new Float3Attributes_1.default(this._concatenatedBuffer);\n                this._normals.set(values, offset);\n            }\n            else if (this._normals) {\n                this.clearVertices(this._normals);\n                this._normals = null;\n                return;\n            }\n        }\n        else {\n            this._normals = ElementsUtils_1.default.generateNormals(this.indices, this.faceNormals, this._normals, this._concatenatedBuffer);\n        }\n        this.invalidateVertices(this._normals);\n        this._verticesDirty[this._normals.id] = false;\n    };\n    TriangleElements.prototype.setTangents = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (!this._autoDeriveTangents) {\n            if (values == this._tangents)\n                return;\n            if (values instanceof Float3Attributes_1.default) {\n                this.clearVertices(this._tangents);\n                this._tangents = values;\n            }\n            else if (values) {\n                if (!this._tangents)\n                    this._tangents = new Float3Attributes_1.default(this._concatenatedBuffer);\n                this._tangents.set(values, offset);\n            }\n            else if (this._tangents) {\n                this.clearVertices(this._tangents);\n                this._tangents = null;\n                return;\n            }\n        }\n        else {\n            this._tangents = ElementsUtils_1.default.generateTangents(this.indices, this.faceTangents, this.faceNormals, this._tangents, this._concatenatedBuffer);\n        }\n        this.invalidateVertices(this._tangents);\n        this._verticesDirty[this._tangents.id] = false;\n    };\n    TriangleElements.prototype.setUVs = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (values == this._uvs)\n            return;\n        if (values instanceof AttributesView_1.default) {\n            this.clearVertices(this._uvs);\n            this._uvs = values;\n        }\n        else if (values) {\n            if (!this._uvs)\n                this._uvs = new Float2Attributes_1.default(this._concatenatedBuffer);\n            this._uvs.set(values, offset);\n        }\n        else if (this._uvs) {\n            this.clearVertices(this._uvs);\n            this._uvs = null;\n            return;\n        }\n        this.invalidateVertices(this._uvs);\n        this._verticesDirty[this._uvs.id] = false;\n    };\n    TriangleElements.prototype.setJointIndices = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (values == this._jointIndices)\n            return;\n        if (values instanceof AttributesView_1.default) {\n            this.clearVertices(this._jointIndices);\n            this._jointIndices = values;\n        }\n        else if (values) {\n            if (!this._jointIndices)\n                this._jointIndices = new AttributesView_1.default(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n            if (this._useCondensedIndices) {\n                var i = 0;\n                var oldIndex;\n                var newIndex = 0;\n                var dic = new Object();\n                this._condensedIndexLookUp = new Array();\n                while (i < values.length) {\n                    oldIndex = values[i];\n                    // if we encounter a new index, assign it a new condensed index\n                    if (dic[oldIndex] == undefined) {\n                        dic[oldIndex] = newIndex;\n                        this._condensedIndexLookUp[newIndex++] = oldIndex;\n                    }\n                    //reset value to dictionary lookup\n                    values[i++] = dic[oldIndex];\n                }\n            }\n            this._jointIndices.set(values, offset);\n        }\n        else if (this._jointIndices) {\n            this.clearVertices(this._jointIndices);\n            this._jointIndices = null;\n            return;\n        }\n        this.invalidateVertices(this._jointIndices);\n        this._verticesDirty[this._jointIndices.id] = false;\n    };\n    TriangleElements.prototype.setJointWeights = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (values == this._jointWeights)\n            return;\n        if (values instanceof AttributesView_1.default) {\n            this.clearVertices(this._jointWeights);\n            this._jointWeights = values;\n        }\n        else if (values) {\n            if (!this._jointWeights)\n                this._jointWeights = new AttributesView_1.default(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n            this._jointWeights.set(values, offset);\n        }\n        else if (this._jointWeights) {\n            this.clearVertices(this._jointWeights);\n            this._jointWeights = null;\n            return;\n        }\n        this.invalidateVertices(this._jointWeights);\n        this._verticesDirty[this._jointWeights.id] = false;\n    };\n    /**\n     *\n     */\n    TriangleElements.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        if (this._positions) {\n            this._positions.dispose();\n            this._positions = null;\n        }\n        if (this._normals) {\n            this._normals.dispose();\n            this._normals = null;\n        }\n        if (this._tangents) {\n            this._tangents.dispose();\n            this._tangents = null;\n        }\n        if (this._uvs) {\n            this._uvs.dispose();\n            this._uvs = null;\n        }\n        if (this._jointIndices) {\n            this._jointIndices.dispose();\n            this._jointIndices = null;\n        }\n        if (this._jointWeights) {\n            this._jointWeights.dispose();\n            this._jointWeights = null;\n        }\n        if (this._faceNormals) {\n            this._faceNormals.dispose();\n            this._faceNormals = null;\n        }\n        if (this._faceTangents) {\n            this._faceTangents.dispose();\n            this._faceTangents = null;\n        }\n    };\n    TriangleElements.prototype.setIndices = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        _super.prototype.setIndices.call(this, values, offset);\n        this._faceNormalsDirty = true;\n        this._faceTangentsDirty = true;\n        if (this._autoDeriveNormals)\n            this.invalidateVertices(this._normals);\n        if (this._autoDeriveTangents)\n            this.invalidateVertices(this._tangents);\n    };\n    TriangleElements.prototype.copyTo = function (elements) {\n        _super.prototype.copyTo.call(this, elements);\n        //temp disable auto derives\n        elements.autoDeriveNormals = false;\n        elements.autoDeriveTangents = false;\n        elements.setPositions(this.positions.clone());\n        if (this.normals)\n            elements.setNormals(this.normals.clone());\n        if (this.tangents)\n            elements.setTangents(this.tangents.clone());\n        if (this.uvs)\n            elements.setUVs(this.uvs.clone());\n        elements.jointsPerVertex = this._jointsPerVertex;\n        if (this.jointIndices)\n            elements.setJointIndices(this.jointIndices.clone());\n        if (this.jointWeights)\n            elements.setJointWeights(this.jointWeights.clone());\n        //return auto derives to cloned values\n        elements.autoDeriveNormals = this._autoDeriveNormals;\n        elements.autoDeriveTangents = this._autoDeriveTangents;\n    };\n    /**\n     * Clones the current object\n     * @return An exact duplicate of the current object.\n     */\n    TriangleElements.prototype.clone = function () {\n        var clone = new TriangleElements(this._concatenatedBuffer ? this._concatenatedBuffer.clone() : null);\n        this.copyTo(clone);\n        return clone;\n    };\n    TriangleElements.prototype.scaleUV = function (scaleU, scaleV) {\n        if (scaleU === void 0) { scaleU = 1; }\n        if (scaleV === void 0) { scaleV = 1; }\n        if (this.uvs)\n            ElementsUtils_1.default.scaleUVs(scaleU, scaleV, this.uvs, this._numVertices);\n    };\n    /**\n     * Scales the geometry.\n     * @param scale The amount by which to scale.\n     */\n    TriangleElements.prototype.scale = function (scale) {\n        ElementsUtils_1.default.scale(scale, this.positions, this._numVertices);\n    };\n    TriangleElements.prototype.applyTransformation = function (transform) {\n        ElementsUtils_1.default.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\n    };\n    /**\n     * Updates the tangents for each face.\n     */\n    TriangleElements.prototype.updateFaceTangents = function () {\n        this._faceTangents = ElementsUtils_1.default.generateFaceTangents(this.indices, this.positions, this.uvs || this.positions, this._faceTangents, this.numElements);\n        this._faceTangentsDirty = false;\n    };\n    /**\n     * Updates the normals for each face.\n     */\n    TriangleElements.prototype.updateFaceNormals = function () {\n        this._faceNormals = ElementsUtils_1.default.generateFaceNormals(this.indices, this.positions, this._faceNormals, this.numElements);\n        this._faceNormalsDirty = false;\n    };\n    TriangleElements.prototype._iTestCollision = function (pickingCollider, material, pickingCollision) {\n        return pickingCollider.testTriangleCollision(this, material, pickingCollision);\n    };\n    TriangleElements.assetType = \"[asset TriangleElements]\";\n    return TriangleElements;\n}(ElementsBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TriangleElements;\n\n},{\"awayjs-core/lib/attributes/AttributesView\":undefined,\"awayjs-core/lib/attributes/Float2Attributes\":undefined,\"awayjs-core/lib/attributes/Float3Attributes\":undefined,\"awayjs-display/lib/graphics/ElementsBase\":\"awayjs-display/lib/graphics/ElementsBase\",\"awayjs-display/lib/utils/ElementsUtils\":\"awayjs-display/lib/utils/ElementsUtils\"}],\"awayjs-display/lib/graphics\":[function(require,module,exports){\n\"use strict\";\nvar ElementsBase_1 = require(\"awayjs-display/lib/graphics/ElementsBase\");\nexports.ElementsBase = ElementsBase_1.default;\nvar ElementsType_1 = require(\"awayjs-display/lib/graphics/ElementsType\");\nexports.ElementsType = ElementsType_1.default;\nvar Graphic_1 = require(\"awayjs-display/lib/graphics/Graphic\");\nexports.Graphic = Graphic_1.default;\nvar Graphics_1 = require(\"awayjs-display/lib/graphics/Graphics\");\nexports.Graphics = Graphics_1.default;\nvar LineElements_1 = require(\"awayjs-display/lib/graphics/LineElements\");\nexports.LineElements = LineElements_1.default;\nvar TriangleElements_1 = require(\"awayjs-display/lib/graphics/TriangleElements\");\nexports.TriangleElements = TriangleElements_1.default;\n\n},{\"awayjs-display/lib/graphics/ElementsBase\":\"awayjs-display/lib/graphics/ElementsBase\",\"awayjs-display/lib/graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"awayjs-display/lib/graphics/Graphic\":\"awayjs-display/lib/graphics/Graphic\",\"awayjs-display/lib/graphics/Graphics\":\"awayjs-display/lib/graphics/Graphics\",\"awayjs-display/lib/graphics/LineElements\":\"awayjs-display/lib/graphics/LineElements\",\"awayjs-display/lib/graphics/TriangleElements\":\"awayjs-display/lib/graphics/TriangleElements\"}],\"awayjs-display/lib/managers/DefaultMaterialManager\":[function(require,module,exports){\n\"use strict\";\nvar Sampler2D_1 = require(\"awayjs-core/lib/image/Sampler2D\");\nvar BitmapImage2D_1 = require(\"awayjs-core/lib/image/BitmapImage2D\");\nvar BitmapImageCube_1 = require(\"awayjs-core/lib/image/BitmapImageCube\");\nvar LineElements_1 = require(\"awayjs-display/lib/graphics/LineElements\");\nvar Skybox_1 = require(\"awayjs-display/lib/display/Skybox\");\nvar BasicMaterial_1 = require(\"awayjs-display/lib/materials/BasicMaterial\");\nvar Single2DTexture_1 = require(\"awayjs-display/lib/textures/Single2DTexture\");\nvar SingleCubeTexture_1 = require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nvar Graphic_1 = require(\"awayjs-display/lib/graphics/Graphic\");\nvar DefaultMaterialManager = (function () {\n    function DefaultMaterialManager() {\n    }\n    DefaultMaterialManager.getDefaultMaterial = function (renderable) {\n        if (renderable === void 0) { renderable = null; }\n        if (renderable != null && renderable.isAsset(Graphic_1.default) && renderable.elements.isAsset(LineElements_1.default)) {\n            if (!DefaultMaterialManager._defaultColorMaterial)\n                DefaultMaterialManager.createDefaultColorMaterial();\n            return DefaultMaterialManager._defaultColorMaterial;\n        }\n        if (renderable != null && renderable.isAsset(Skybox_1.default)) {\n            if (!DefaultMaterialManager._defaultCubeTextureMaterial)\n                DefaultMaterialManager.createDefaultCubeTextureMaterial();\n            return DefaultMaterialManager._defaultCubeTextureMaterial;\n        }\n        if (!DefaultMaterialManager._defaultTextureMaterial)\n            DefaultMaterialManager.createDefaultTextureMaterial();\n        return DefaultMaterialManager._defaultTextureMaterial;\n    };\n    DefaultMaterialManager.getDefaultTexture = function (renderable) {\n        if (renderable === void 0) { renderable = null; }\n        if (renderable != null && renderable.isAsset(Skybox_1.default)) {\n            if (!DefaultMaterialManager._defaultCubeTexture)\n                DefaultMaterialManager.createDefaultCubeTexture();\n            return DefaultMaterialManager._defaultCubeTexture;\n        }\n        if (!DefaultMaterialManager._defaultTexture)\n            DefaultMaterialManager.createDefaultTexture();\n        return DefaultMaterialManager._defaultTexture;\n    };\n    DefaultMaterialManager.getDefaultImage2D = function () {\n        if (!DefaultMaterialManager._defaultBitmapImage2D)\n            DefaultMaterialManager.createDefaultImage2D();\n        return DefaultMaterialManager._defaultBitmapImage2D;\n    };\n    DefaultMaterialManager.getDefaultImageCube = function () {\n        if (!DefaultMaterialManager._defaultBitmapImageCube)\n            DefaultMaterialManager.createDefaultImageCube();\n        return DefaultMaterialManager._defaultBitmapImageCube;\n    };\n    DefaultMaterialManager.getDefaultSampler = function () {\n        if (!DefaultMaterialManager._defaultSampler2D)\n            DefaultMaterialManager.createDefaultSampler2D();\n        return DefaultMaterialManager._defaultSampler2D;\n    };\n    DefaultMaterialManager.createDefaultTexture = function () {\n        DefaultMaterialManager._defaultTexture = new Single2DTexture_1.default();\n        DefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n    };\n    DefaultMaterialManager.createDefaultCubeTexture = function () {\n        DefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture_1.default();\n        DefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\n    };\n    DefaultMaterialManager.createDefaultImageCube = function () {\n        if (!DefaultMaterialManager._defaultBitmapImage2D)\n            DefaultMaterialManager.createDefaultImage2D();\n        var b = new BitmapImageCube_1.default(DefaultMaterialManager._defaultBitmapImage2D.width);\n        for (var i = 0; i < 6; i++)\n            b.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\n        DefaultMaterialManager._defaultBitmapImageCube = b;\n    };\n    DefaultMaterialManager.createDefaultImage2D = function () {\n        var b = new BitmapImage2D_1.default(8, 8, false, 0x000000);\n        //create chekerboard\n        var i, j;\n        for (i = 0; i < 8; i++)\n            for (j = 0; j < 8; j++)\n                if ((j & 1) ^ (i & 1))\n                    b.setPixel(i, j, 0XFFFFFF);\n        DefaultMaterialManager._defaultBitmapImage2D = b;\n    };\n    DefaultMaterialManager.createDefaultTextureMaterial = function () {\n        if (!DefaultMaterialManager._defaultTexture)\n            DefaultMaterialManager.createDefaultTexture();\n        DefaultMaterialManager._defaultTextureMaterial = new BasicMaterial_1.default();\n        DefaultMaterialManager._defaultTextureMaterial.texture = DefaultMaterialManager._defaultTexture;\n        DefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\n    };\n    DefaultMaterialManager.createDefaultCubeTextureMaterial = function () {\n        if (!DefaultMaterialManager._defaultCubeTexture)\n            DefaultMaterialManager.createDefaultCubeTexture();\n        DefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial_1.default();\n        DefaultMaterialManager._defaultCubeTextureMaterial.texture = DefaultMaterialManager._defaultCubeTexture;\n        DefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\n    };\n    DefaultMaterialManager.createDefaultColorMaterial = function () {\n        DefaultMaterialManager._defaultColorMaterial = new BasicMaterial_1.default(0xFFFFFF);\n        DefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\n    };\n    DefaultMaterialManager.createDefaultSampler2D = function () {\n        DefaultMaterialManager._defaultSampler2D = new Sampler2D_1.default();\n    };\n    return DefaultMaterialManager;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DefaultMaterialManager;\n\n},{\"awayjs-core/lib/image/BitmapImage2D\":undefined,\"awayjs-core/lib/image/BitmapImageCube\":undefined,\"awayjs-core/lib/image/Sampler2D\":undefined,\"awayjs-display/lib/display/Skybox\":\"awayjs-display/lib/display/Skybox\",\"awayjs-display/lib/graphics/Graphic\":\"awayjs-display/lib/graphics/Graphic\",\"awayjs-display/lib/graphics/LineElements\":\"awayjs-display/lib/graphics/LineElements\",\"awayjs-display/lib/materials/BasicMaterial\":\"awayjs-display/lib/materials/BasicMaterial\",\"awayjs-display/lib/textures/Single2DTexture\":\"awayjs-display/lib/textures/Single2DTexture\",\"awayjs-display/lib/textures/SingleCubeTexture\":\"awayjs-display/lib/textures/SingleCubeTexture\"}],\"awayjs-display/lib/managers/FrameScriptManager\":[function(require,module,exports){\n\"use strict\";\nvar FrameScriptManager = (function () {\n    function FrameScriptManager() {\n    }\n    FrameScriptManager.setInterval = function (func) {\n        this._intervalID++;\n        this._active_intervals[this._intervalID] = func;\n        return this._intervalID;\n    };\n    FrameScriptManager.clearInterval = function (id) {\n        delete this._active_intervals[id];\n    };\n    FrameScriptManager.execute_intervals = function () {\n        for (var key in this._active_intervals) {\n            this._active_intervals[key].call();\n        }\n    };\n    FrameScriptManager.add_child_to_dispose = function (child) {\n        this._queued_dispose.push(child);\n    };\n    FrameScriptManager.add_script_to_queue = function (mc, script) {\n        // whenever we queue scripts of new objects, we first inject the lists of pass2\n        var i = this._queued_mcs_pass2.length;\n        while (i--) {\n            this._queued_mcs.push(this._queued_mcs_pass2[i]);\n            this._queued_scripts.push(this._queued_scripts_pass2[i]);\n        }\n        this._queued_mcs_pass2.length = 0;\n        this._queued_scripts_pass2.length = 0;\n        this._queued_mcs.push(mc);\n        this._queued_scripts.push(script);\n    };\n    FrameScriptManager.add_script_to_queue_pass2 = function (mc, script) {\n        this._queued_mcs_pass2.push(mc);\n        this._queued_scripts_pass2.push(script);\n    };\n    FrameScriptManager.execute_queue = function () {\n        if (this._queued_mcs.length == 0 && this._queued_mcs_pass2.length == 0)\n            return;\n        var i = this._queued_mcs_pass2.length;\n        while (i--) {\n            this._queued_mcs.push(this._queued_mcs_pass2[i]);\n            this._queued_scripts.push(this._queued_scripts_pass2[i]);\n        }\n        this._queued_mcs_pass2.length = 0;\n        this._queued_scripts_pass2.length = 0;\n        var mc;\n        for (i = 0; i < this._queued_mcs.length; i++) {\n            // during the loop we might add more scripts to the queue\n            mc = this._queued_mcs[i];\n            if (mc.scene != null) {\n                var caller = mc.adapter ? mc.adapter : mc;\n                //\ttry {\n                this._queued_scripts[i].call(caller);\n            }\n        }\n        // all scripts executed. clear all\n        this._queued_mcs.length = 0;\n        this._queued_scripts.length = 0;\n    };\n    FrameScriptManager.execute_dispose = function () {\n        var len = this._queued_dispose.length;\n        for (var i = 0; i < len; i++)\n            this._queued_dispose[i].dispose();\n        this._queued_dispose.length = 0;\n    };\n    // FrameScript debugging:\n    // the first line of a FrameScript should be a comment that represents the functions unique name\n    // the exporter creates a js file, containing a object that has the framescripts functions set as properties according to the unique names\n    // this object can be set as \"frameScriptDebug\" in order to enable debug mode\n    FrameScriptManager.frameScriptDebug = undefined;\n    //queue of objects for disposal\n    FrameScriptManager._queued_dispose = new Array();\n    // queues pass1 of scripts.\n    FrameScriptManager._queued_mcs = [];\n    FrameScriptManager._queued_scripts = [];\n    // queues pass2 of scripts. this will be inserted in reversed order into pass1 queue right before something should be added to pass1\n    FrameScriptManager._queued_mcs_pass2 = [];\n    FrameScriptManager._queued_scripts_pass2 = [];\n    FrameScriptManager._active_intervals = new Object(); // maps id to function\n    FrameScriptManager._intervalID = 0;\n    return FrameScriptManager;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = FrameScriptManager;\n\n},{}],\"awayjs-display/lib/managers/MouseManager\":[function(require,module,exports){\n\"use strict\";\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar TouchPoint_1 = require(\"awayjs-display/lib/base/TouchPoint\");\nvar MouseEvent_1 = require(\"awayjs-display/lib/events/MouseEvent\");\nvar FrameScriptManager_1 = require(\"awayjs-display/lib/managers/FrameScriptManager\");\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nvar MouseManager = (function () {\n    /**\n     * Creates a new <code>MouseManager</code> object.\n     */\n    function MouseManager() {\n        var _this = this;\n        this._viewLookup = new Array();\n        this._nullVector = new Vector3D_1.default();\n        this._queuedEvents = new Array();\n        this._mouseUp = new MouseEvent_1.default(MouseEvent_1.default.MOUSE_UP);\n        this._mouseClick = new MouseEvent_1.default(MouseEvent_1.default.CLICK);\n        this._mouseOut = new MouseEvent_1.default(MouseEvent_1.default.MOUSE_OUT);\n        this._mouseDown = new MouseEvent_1.default(MouseEvent_1.default.MOUSE_DOWN);\n        this._mouseMove = new MouseEvent_1.default(MouseEvent_1.default.MOUSE_MOVE);\n        this._mouseOver = new MouseEvent_1.default(MouseEvent_1.default.MOUSE_OVER);\n        this._mouseWheel = new MouseEvent_1.default(MouseEvent_1.default.MOUSE_WHEEL);\n        this._mouseDoubleClick = new MouseEvent_1.default(MouseEvent_1.default.DOUBLE_CLICK);\n        this.onClickDelegate = function (event) { return _this.onClick(event); };\n        this.onDoubleClickDelegate = function (event) { return _this.onDoubleClick(event); };\n        this.onMouseDownDelegate = function (event) { return _this.onMouseDown(event); };\n        this.onMouseMoveDelegate = function (event) { return _this.onMouseMove(event); };\n        this.onMouseUpDelegate = function (event) { return _this.onMouseUp(event); };\n        this.onMouseWheelDelegate = function (event) { return _this.onMouseWheel(event); };\n        this.onMouseOverDelegate = function (event) { return _this.onMouseOver(event); };\n        this.onMouseOutDelegate = function (event) { return _this.onMouseOut(event); };\n    }\n    MouseManager.getInstance = function () {\n        if (this._instance)\n            return this._instance;\n        return (this._instance = new MouseManager());\n    };\n    MouseManager.prototype.fireMouseEvents = function (forceMouseMove) {\n        // If colliding object has changed, queue over/out events.\n        if (this._iCollision != this._previousCollidingObject) {\n            if (this._previousCollidingObject)\n                this.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n            if (this._iCollision)\n                this.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n        }\n        // Fire mouse move events here if forceMouseMove is on.\n        if (forceMouseMove && this._iCollision)\n            this.queueDispatch(this._mouseMove, this._mouseMoveEvent);\n        var event;\n        var dispatcher;\n        // Dispatch all queued events.\n        var len = this._queuedEvents.length;\n        for (var i = 0; i < len; ++i) {\n            event = this._queuedEvents[i];\n            dispatcher = event.entity;\n            // bubble event up the heirarchy until the top level parent is reached\n            while (dispatcher) {\n                if (dispatcher._iIsMouseEnabled())\n                    dispatcher.dispatchEvent(event);\n                dispatcher = dispatcher.parent;\n            }\n            // not totally sure, but i think just calling it is easier and cheaper than any options for that\n            // if nothing is queued, the function will return directly anyway\n            FrameScriptManager_1.default.execute_queue();\n        }\n        this._queuedEvents.length = 0;\n        this._previousCollidingObject = this._iCollision;\n        this._iUpdateDirty = false;\n    };\n    //\t\tpublic addViewLayer(view:View)\n    //\t\t{\n    //\t\t\tvar stg:Stage = view.stage;\n    //\n    //\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n    //\t\t\tif (!view.stageGL.mouse3DManager)\n    //\t\t\t\tview.stageGL.mouse3DManager = this;\n    //\n    //\t\t\tif (!hasKey(view))\n    //\t\t\t\t_view3Ds[view] = 0;\n    //\n    //\t\t\t_childDepth = 0;\n    //\t\t\ttraverseDisplayObjects(stg);\n    //\t\t\t_viewCount = _childDepth;\n    //\t\t}\n    MouseManager.prototype.registerView = function (view) {\n        if (view && view.htmlElement) {\n            view.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n            view.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n            view.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\n            view.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n            view.htmlElement.addEventListener(\"touchmove\", this.onMouseMoveDelegate);\n            view.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n            view.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n            view.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\n            view.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n            view.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n            view.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n            this._viewLookup.push(view);\n        }\n    };\n    MouseManager.prototype.unregisterView = function (view) {\n        if (view && view.htmlElement) {\n            view.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n            view.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n            view.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\n            view.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n            view.htmlElement.removeEventListener(\"touchmove\", this.onMouseMoveDelegate);\n            view.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n            view.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\n            view.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n            view.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n            view.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n            view.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n            this._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n        }\n    };\n    // ---------------------------------------------------------------------\n    // Private.\n    // ---------------------------------------------------------------------\n    MouseManager.prototype.queueDispatch = function (event, sourceEvent, collision) {\n        if (collision === void 0) { collision = null; }\n        // 2D properties.\n        if (sourceEvent) {\n            event.ctrlKey = sourceEvent.ctrlKey;\n            event.altKey = sourceEvent.altKey;\n            event.shiftKey = sourceEvent.shiftKey;\n            event.screenX = (sourceEvent.clientX != null) ? sourceEvent.clientX : sourceEvent.changedTouches[0].clientX;\n            event.screenY = (sourceEvent.clientY != null) ? sourceEvent.clientY : sourceEvent.changedTouches[0].clientY;\n        }\n        if (collision == null)\n            collision = this._iCollision;\n        // 3D properties.\n        if (collision) {\n            // Object.\n            event.entity = collision.entity;\n            event.renderable = collision.renderable;\n            // UV.\n            event.uv = collision.uv;\n            // Position.\n            event.position = collision.position ? collision.position.clone() : null;\n            // Normal.\n            event.normal = collision.normal ? collision.normal.clone() : null;\n            // Face index.\n            event.elementIndex = collision.elementIndex;\n        }\n        else {\n            // Set all to null.\n            event.uv = null;\n            event.entity = null;\n            event.position = this._nullVector;\n            event.normal = this._nullVector;\n            event.elementIndex = 0;\n        }\n        // Store event to be dispatched later.\n        this._queuedEvents.push(event);\n    };\n    // ---------------------------------------------------------------------\n    // Listeners.\n    // ---------------------------------------------------------------------\n    MouseManager.prototype.onMouseMove = function (event) {\n        event.preventDefault();\n        this.updateColliders(event);\n        if (this._iCollision)\n            this.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n    };\n    MouseManager.prototype.onMouseOut = function (event) {\n        this._iActiveDiv = null;\n        this.updateColliders(event);\n        if (this._iCollision)\n            this.queueDispatch(this._mouseOut, event);\n    };\n    MouseManager.prototype.onMouseOver = function (event) {\n        this._iActiveDiv = event.target;\n        this.updateColliders(event);\n        if (this._iCollision)\n            this.queueDispatch(this._mouseOver, event);\n    };\n    MouseManager.prototype.onClick = function (event) {\n        this.updateColliders(event);\n        if (this._iCollision)\n            this.queueDispatch(this._mouseClick, event);\n    };\n    MouseManager.prototype.onDoubleClick = function (event) {\n        this.updateColliders(event);\n        if (this._iCollision)\n            this.queueDispatch(this._mouseDoubleClick, event);\n    };\n    MouseManager.prototype.onMouseDown = function (event) {\n        event.preventDefault();\n        this._iActiveDiv = event.target;\n        this.updateColliders(event);\n        if (this._iCollision)\n            this.queueDispatch(this._mouseDown, event);\n    };\n    MouseManager.prototype.onMouseUp = function (event) {\n        event.preventDefault();\n        this.updateColliders(event);\n        if (this._iCollision)\n            this.queueDispatch(this._mouseUp, event);\n    };\n    MouseManager.prototype.onMouseWheel = function (event) {\n        this.updateColliders(event);\n        if (this._iCollision)\n            this.queueDispatch(this._mouseWheel, event);\n    };\n    MouseManager.prototype.updateColliders = function (event) {\n        var view;\n        var bounds;\n        var mouseX = (event.clientX != null) ? event.clientX : event.changedTouches[0].clientX;\n        var mouseY = (event.clientY != null) ? event.clientY : event.changedTouches[0].clientY;\n        var len = this._viewLookup.length;\n        for (var i = 0; i < len; i++) {\n            view = this._viewLookup[i];\n            view._pTouchPoints.length = 0;\n            bounds = view.htmlElement.getBoundingClientRect();\n            if (event.touches) {\n                var touch;\n                var len = event.touches.length;\n                for (var i = 0; i < len; i++) {\n                    touch = event.touches[i];\n                    view._pTouchPoints.push(new TouchPoint_1.default(touch.clientX + bounds.left, touch.clientY + bounds.top, touch.identifier));\n                }\n            }\n            if (this._iUpdateDirty)\n                continue;\n            if (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n                view._pMouseX = null;\n                view._pMouseY = null;\n            }\n            else {\n                view._pMouseX = mouseX + bounds.left;\n                view._pMouseY = mouseY + bounds.top;\n                view.updateCollider();\n                if (view.layeredView && this._iCollision)\n                    break;\n            }\n        }\n        this._iUpdateDirty = true;\n    };\n    return MouseManager;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = MouseManager;\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-display/lib/base/TouchPoint\":\"awayjs-display/lib/base/TouchPoint\",\"awayjs-display/lib/events/MouseEvent\":\"awayjs-display/lib/events/MouseEvent\",\"awayjs-display/lib/managers/FrameScriptManager\":\"awayjs-display/lib/managers/FrameScriptManager\"}],\"awayjs-display/lib/managers/TouchManager\":[function(require,module,exports){\n\"use strict\";\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar TouchEvent_1 = require(\"awayjs-display/lib/events/TouchEvent\");\nvar TouchManager = (function () {\n    function TouchManager() {\n        var _this = this;\n        this._updateDirty = true;\n        this._nullVector = new Vector3D_1.default();\n        this._queuedEvents = new Array();\n        this._touchOut = new TouchEvent_1.default(TouchEvent_1.default.TOUCH_OUT);\n        this._touchBegin = new TouchEvent_1.default(TouchEvent_1.default.TOUCH_BEGIN);\n        this._touchMove = new TouchEvent_1.default(TouchEvent_1.default.TOUCH_MOVE);\n        this._touchEnd = new TouchEvent_1.default(TouchEvent_1.default.TOUCH_END);\n        this._touchOver = new TouchEvent_1.default(TouchEvent_1.default.TOUCH_OVER);\n        this._touchPoints = new Array();\n        this._touchPointFromId = new Object();\n        TouchManager._iCollisionFromTouchId = new Object();\n        TouchManager._previousCollidingObjectFromTouchId = new Object();\n        this.onTouchBeginDelegate = function (event) { return _this.onTouchBegin(event); };\n        this.onTouchMoveDelegate = function (event) { return _this.onTouchMove(event); };\n        this.onTouchEndDelegate = function (event) { return _this.onTouchEnd(event); };\n    }\n    TouchManager.getInstance = function () {\n        if (this._instance)\n            return this._instance;\n        return (this._instance = new TouchManager());\n    };\n    // ---------------------------------------------------------------------\n    // Interface.\n    // ---------------------------------------------------------------------\n    TouchManager.prototype.updateCollider = function (forceTouchMove) {\n        //if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n        //\tfor (var i:number; i < this._numTouchPoints; ++i) {\n        //\t\tthis._touchPoint = this._touchPoints[ i ];\n        //\t\tthis._iCollision = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n        //\t\tTouchManager._iCollisionFromTouchId[ this._touchPoint.id ] = this._iCollision;\n        //\t}\n        //}\n    };\n    TouchManager.prototype.fireTouchEvents = function (forceTouchMove) {\n        var i;\n        for (i = 0; i < this._numTouchPoints; ++i) {\n            this._touchPoint = this._touchPoints[i];\n            // If colliding object has changed, queue over/out events.\n            this._iCollision = TouchManager._iCollisionFromTouchId[this._touchPoint.id];\n            this._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[this._touchPoint.id];\n            if (this._iCollision != this._previousCollidingObject) {\n                if (this._previousCollidingObject)\n                    this.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n                if (this._iCollision)\n                    this.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollision, this._touchPoint);\n            }\n            // Fire Touch move events here if forceTouchMove is on.\n            if (forceTouchMove && this._iCollision)\n                this.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollision, this._touchPoint);\n        }\n        var event;\n        var dispatcher;\n        // Dispatch all queued events.\n        var len = this._queuedEvents.length;\n        for (i = 0; i < len; ++i) {\n            // Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n            event = this._queuedEvents[i];\n            dispatcher = event.entity;\n            while (dispatcher && !dispatcher._iIsMouseEnabled())\n                dispatcher = dispatcher.parent;\n            if (dispatcher)\n                dispatcher.dispatchEvent(event);\n        }\n        this._queuedEvents.length = 0;\n        this._updateDirty = false;\n        for (i = 0; i < this._numTouchPoints; ++i) {\n            this._touchPoint = this._touchPoints[i];\n            TouchManager._previousCollidingObjectFromTouchId[this._touchPoint.id] = TouchManager._iCollisionFromTouchId[this._touchPoint.id];\n        }\n    };\n    TouchManager.prototype.registerView = function (view) {\n        view.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n        view.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n        view.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n    };\n    TouchManager.prototype.unregisterView = function (view) {\n        view.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n        view.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n        view.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n    };\n    // ---------------------------------------------------------------------\n    // Private.\n    // ---------------------------------------------------------------------\n    TouchManager.prototype.queueDispatch = function (event, sourceEvent, collider, touch) {\n        // 2D properties.\n        event.ctrlKey = sourceEvent.ctrlKey;\n        event.altKey = sourceEvent.altKey;\n        event.shiftKey = sourceEvent.shiftKey;\n        event.screenX = touch.x;\n        event.screenY = touch.y;\n        event.touchPointID = touch.id;\n        // 3D properties.\n        if (collider) {\n            // Object.\n            event.entity = collider.entity;\n            event.renderable = collider.renderable;\n            // UV.\n            event.uv = collider.uv;\n            // Position.\n            event.position = collider.position ? collider.position.clone() : null;\n            // Normal.\n            event.normal = collider.normal ? collider.normal.clone() : null;\n            // ElementsIndex.\n            event.elementIndex = collider.elementIndex;\n        }\n        else {\n            // Set all to null.\n            event.uv = null;\n            event.entity = null;\n            event.position = this._nullVector;\n            event.normal = this._nullVector;\n            event.elementIndex = 0;\n        }\n        // Store event to be dispatched later.\n        this._queuedEvents.push(event);\n    };\n    // ---------------------------------------------------------------------\n    // Event handlers.\n    // ---------------------------------------------------------------------\n    TouchManager.prototype.onTouchBegin = function (event) {\n        var touch = new TouchPoint();\n        //touch.id = event.touchPointID;\n        //touch.x = event.stageX;\n        //touch.y = event.stageY;\n        this._numTouchPoints++;\n        this._touchPoints.push(touch);\n        this._touchPointFromId[touch.id] = touch;\n        //this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n        this._iCollision = TouchManager._iCollisionFromTouchId[touch.id];\n        if (this._iCollision)\n            this.queueDispatch(this._touchBegin, event, this._iCollision, touch);\n        this._updateDirty = true;\n    };\n    TouchManager.prototype.onTouchMove = function (event) {\n        //var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n        //\n        //if (!touch) return;\n        //\n        ////touch.x = event.stageX;\n        ////touch.y = event.stageY;\n        //\n        //this._iCollision = TouchManager._iCollisionFromTouchId[ touch.id ];\n        //\n        //if (this._iCollision)\n        //\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollision, touch);\n        //\n        //this._updateDirty = true;\n    };\n    TouchManager.prototype.onTouchEnd = function (event) {\n        //var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n        //\n        //if (!touch) return;\n        //\n        //this._iCollision = TouchManager._iCollisionFromTouchId[ touch.id ];\n        //if (this._iCollision)\n        //\tthis.queueDispatch(this._touchEnd, event, this._iCollision, touch);\n        //\n        //this._touchPointFromId[ touch.id ] = null;\n        //this._numTouchPoints--;\n        //this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n        //\n        //this._updateDirty = true;\n    };\n    return TouchManager;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TouchManager;\nvar TouchPoint = (function () {\n    function TouchPoint() {\n    }\n    return TouchPoint;\n}());\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-display/lib/events/TouchEvent\":\"awayjs-display/lib/events/TouchEvent\"}],\"awayjs-display/lib/managers\":[function(require,module,exports){\n\"use strict\";\nvar DefaultMaterialManager_1 = require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nexports.DefaultMaterialManager = DefaultMaterialManager_1.default;\nvar FrameScriptManager_1 = require(\"awayjs-display/lib/managers/FrameScriptManager\");\nexports.FrameScriptManager = FrameScriptManager_1.default;\nvar MouseManager_1 = require(\"awayjs-display/lib/managers/MouseManager\");\nexports.MouseManager = MouseManager_1.default;\nvar TouchManager_1 = require(\"awayjs-display/lib/managers/TouchManager\");\nexports.TouchManager = TouchManager_1.default;\n\n},{\"awayjs-display/lib/managers/DefaultMaterialManager\":\"awayjs-display/lib/managers/DefaultMaterialManager\",\"awayjs-display/lib/managers/FrameScriptManager\":\"awayjs-display/lib/managers/FrameScriptManager\",\"awayjs-display/lib/managers/MouseManager\":\"awayjs-display/lib/managers/MouseManager\",\"awayjs-display/lib/managers/TouchManager\":\"awayjs-display/lib/managers/TouchManager\"}],\"awayjs-display/lib/materials/BasicMaterial\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Image2D_1 = require(\"awayjs-core/lib/image/Image2D\");\nvar MaterialBase_1 = require(\"awayjs-display/lib/materials/MaterialBase\");\nvar Single2DTexture_1 = require(\"awayjs-display/lib/textures/Single2DTexture\");\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nvar BasicMaterial = (function (_super) {\n    __extends(BasicMaterial, _super);\n    function BasicMaterial(imageColor, alpha) {\n        if (imageColor === void 0) { imageColor = null; }\n        if (alpha === void 0) { alpha = 1; }\n        _super.call(this, imageColor, alpha);\n        this._preserveAlpha = false;\n        //set a texture if an image is present\n        if (imageColor instanceof Image2D_1.default)\n            this.texture = new Single2DTexture_1.default();\n    }\n    Object.defineProperty(BasicMaterial.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            return BasicMaterial.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BasicMaterial.prototype, \"preserveAlpha\", {\n        /**\n         * Indicates whether alpha should be preserved - defaults to false\n         */\n        get: function () {\n            return this._preserveAlpha;\n        },\n        set: function (value) {\n            if (this._preserveAlpha == value)\n                return;\n            this._preserveAlpha = value;\n            this.invalidate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BasicMaterial.prototype, \"texture\", {\n        /**\n         * The texture object to use for the albedo colour.\n         */\n        get: function () {\n            return this._texture;\n        },\n        set: function (value) {\n            if (this._texture == value)\n                return;\n            if (this._texture)\n                this.removeTexture(this._texture);\n            this._texture = value;\n            if (this._texture)\n                this.addTexture(this._texture);\n            this.invalidateTexture();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BasicMaterial.assetType = \"[materials BasicMaterial]\";\n    return BasicMaterial;\n}(MaterialBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BasicMaterial;\n\n},{\"awayjs-core/lib/image/Image2D\":undefined,\"awayjs-display/lib/materials/MaterialBase\":\"awayjs-display/lib/materials/MaterialBase\",\"awayjs-display/lib/textures/Single2DTexture\":\"awayjs-display/lib/textures/Single2DTexture\"}],\"awayjs-display/lib/materials/LightSources\":[function(require,module,exports){\n\"use strict\";\n/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nvar LightSources = (function () {\n    function LightSources() {\n    }\n    /**\n     * Defines normal lights are to be used as the source for the lighting\n     * component.\n     */\n    LightSources.LIGHTS = 0x01;\n    /**\n     * Defines that global lighting probes are to be used as the source for the\n     * lighting component.\n     */\n    LightSources.PROBES = 0x02;\n    /**\n     * Defines that both normal and global lighting probes  are to be used as the\n     * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n     */\n    LightSources.ALL = 0x03;\n    return LightSources;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LightSources;\n\n},{}],\"awayjs-display/lib/materials/MaterialBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar BlendMode_1 = require(\"awayjs-core/lib/image/BlendMode\");\nvar ImageBase_1 = require(\"awayjs-core/lib/image/ImageBase\");\nvar ColorTransform_1 = require(\"awayjs-core/lib/geom/ColorTransform\");\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar SurfaceEvent_1 = require(\"awayjs-display/lib/events/SurfaceEvent\");\nvar Style_1 = require(\"awayjs-display/lib/base/Style\");\nvar StyleEvent_1 = require(\"awayjs-display/lib/events/StyleEvent\");\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nvar MaterialBase = (function (_super) {\n    __extends(MaterialBase, _super);\n    function MaterialBase(imageColor, alpha) {\n        var _this = this;\n        if (imageColor === void 0) { imageColor = null; }\n        if (alpha === void 0) { alpha = 1; }\n        _super.call(this);\n        this._textures = new Array();\n        this._pUseColorTransform = false;\n        this._alphaBlending = false;\n        this._alpha = 1;\n        this._pAlphaThreshold = 0;\n        this._pAnimateUVs = false;\n        this._enableLightFallOff = true;\n        this._specularLightSources = 0x01;\n        this._diffuseLightSources = 0x03;\n        this._style = new Style_1.default();\n        this._iBaseScreenPassIndex = 0;\n        this._bothSides = false; // update\n        /**\n         * A list of material owners, renderables or custom Entities.\n         */\n        this._owners = new Array();\n        this._pBlendMode = BlendMode_1.default.NORMAL;\n        this._imageRect = false;\n        this._curves = false;\n        this._onInvalidatePropertiesDelegate = function (event) { return _this._onInvalidateProperties(event); };\n        this._style.addEventListener(StyleEvent_1.default.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n        if (imageColor instanceof ImageBase_1.default)\n            this._style.image = imageColor;\n        else if (imageColor)\n            this._style.color = Number(imageColor);\n        this.alpha = alpha;\n        this._onLightChangeDelegate = function (event) { return _this.onLightsChange(event); };\n        this._onTextureInvalidateDelegate = function (event) { return _this.onTextureInvalidate(event); };\n        this.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n    }\n    Object.defineProperty(MaterialBase.prototype, \"alpha\", {\n        /**\n         * The alpha of the surface.\n         */\n        get: function () {\n            return this._alpha;\n        },\n        set: function (value) {\n            if (value > 1)\n                value = 1;\n            else if (value < 0)\n                value = 0;\n            if (this._alpha == value)\n                return;\n            this._alpha = value;\n            if (this._colorTransform == null)\n                this._colorTransform = new ColorTransform_1.default();\n            this._colorTransform.alphaMultiplier = value;\n            this.invalidate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"colorTransform\", {\n        /**\n         * The ColorTransform object to transform the colour of the material with. Defaults to null.\n         */\n        get: function () {\n            return this._colorTransform;\n        },\n        set: function (value) {\n            this._colorTransform = value;\n            this.invalidate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"alphaBlending\", {\n        /**\n         * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n         * example when using textures of foliage, consider using alphaThreshold instead.\n         */\n        get: function () {\n            return this._alphaBlending;\n        },\n        set: function (value) {\n            if (this._alphaBlending == value)\n                return;\n            this._alphaBlending = value;\n            this.invalidate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"animationSet\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._animationSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"lightPicker\", {\n        /**\n         * The light picker used by the material to provide lights to the material if it supports lighting.\n         *\n         * @see LightPickerBase\n         * @see StaticLightPicker\n         */\n        get: function () {\n            return this._pLightPicker;\n        },\n        set: function (value) {\n            if (this._pLightPicker == value)\n                return;\n            if (this._pLightPicker)\n                this._pLightPicker.removeEventListener(AssetEvent_1.default.INVALIDATE, this._onLightChangeDelegate);\n            this._pLightPicker = value;\n            if (this._pLightPicker)\n                this._pLightPicker.addEventListener(AssetEvent_1.default.INVALIDATE, this._onLightChangeDelegate);\n            this.invalidate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"curves\", {\n        /**\n         * Indicates whether material should use curves. Defaults to false.\n         */\n        get: function () {\n            return this._curves;\n        },\n        set: function (value) {\n            if (this._curves == value)\n                return;\n            this._curves = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"imageRect\", {\n        /**\n         * Indicates whether or not any used textures should use an atlas. Defaults to false.\n         */\n        get: function () {\n            return this._imageRect;\n        },\n        set: function (value) {\n            if (this._imageRect == value)\n                return;\n            this._imageRect = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"style\", {\n        /**\n         * The style used to render the current TriangleGraphic. If set to null, its parent Sprite's style will be used instead.\n         */\n        get: function () {\n            return this._style;\n        },\n        set: function (value) {\n            if (this._style == value)\n                return;\n            if (this._style)\n                this._style.removeEventListener(StyleEvent_1.default.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n            this._style = value;\n            if (this._style)\n                this._style.addEventListener(StyleEvent_1.default.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"animateUVs\", {\n        /**\n         * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n         */\n        get: function () {\n            return this._pAnimateUVs;\n        },\n        set: function (value) {\n            if (this._pAnimateUVs == value)\n                return;\n            this._pAnimateUVs = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"useColorTransform\", {\n        /**\n         * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n         */\n        get: function () {\n            return this._pUseColorTransform;\n        },\n        set: function (value) {\n            if (this._pUseColorTransform == value)\n                return;\n            this._pUseColorTransform = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"enableLightFallOff\", {\n        /**\n         * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n         * compatibility for constrained mode.\n         */\n        get: function () {\n            return this._enableLightFallOff;\n        },\n        set: function (value) {\n            if (this._enableLightFallOff == value)\n                return;\n            this._enableLightFallOff = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"diffuseLightSources\", {\n        /**\n         * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n         * and/or light probes for diffuse reflections.\n         *\n         * @see away3d.materials.LightSources\n         */\n        get: function () {\n            return this._diffuseLightSources;\n        },\n        set: function (value) {\n            if (this._diffuseLightSources == value)\n                return;\n            this._diffuseLightSources = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"specularLightSources\", {\n        /**\n         * Define which light source types to use for specular reflections. This allows choosing between regular lights\n         * and/or light probes for specular reflections.\n         *\n         * @see away3d.materials.LightSources\n         */\n        get: function () {\n            return this._specularLightSources;\n        },\n        set: function (value) {\n            if (this._specularLightSources == value)\n                return;\n            this._specularLightSources = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"bothSides\", {\n        /**\n         * Defines whether or not the material should cull triangles facing away from the camera.\n         */\n        get: function () {\n            return this._bothSides;\n        },\n        set: function (value) {\n            if (this._bothSides = value)\n                return;\n            this._bothSides = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"blendMode\", {\n        /**\n         * The blend mode to use when drawing this renderable. The following blend modes are supported:\n         * <ul>\n         * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n         * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n         * <li>BlendMode.MULTIPLY</li>\n         * <li>BlendMode.ADD</li>\n         * <li>BlendMode.ALPHA</li>\n         * </ul>\n         */\n        get: function () {\n            return this._pBlendMode;\n        },\n        set: function (value) {\n            if (this._pBlendMode == value)\n                return;\n            this._pBlendMode = value;\n            this.invalidate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"alphaPremultiplied\", {\n        /**\n         * Indicates whether visible textures (or other pixels) used by this material have\n         * already been premultiplied. Toggle this if you are seeing black halos around your\n         * blended alpha edges.\n         */\n        get: function () {\n            return this._alphaPremultiplied;\n        },\n        set: function (value) {\n            if (this._alphaPremultiplied == value)\n                return;\n            this._alphaPremultiplied = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"alphaThreshold\", {\n        /**\n         * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n         * invisible or entirely opaque, often used with textures for foliage, etc.\n         * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n         */\n        get: function () {\n            return this._pAlphaThreshold;\n        },\n        set: function (value) {\n            if (value < 0)\n                value = 0;\n            else if (value > 1)\n                value = 1;\n            if (this._pAlphaThreshold == value)\n                return;\n            this._pAlphaThreshold = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //\n    // MATERIAL MANAGEMENT\n    //\n    /**\n     * Mark an IRenderable as owner of this material.\n     * Assures we're not using the same material across renderables with different animations, since the\n     * Programs depend on animation. This method needs to be called when a material is assigned.\n     *\n     * @param owner The IRenderable that had this material assigned\n     *\n     * @internal\n     */\n    MaterialBase.prototype.iAddOwner = function (owner) {\n        this._owners.push(owner);\n        var animationSet;\n        var animator = owner.animator;\n        if (animator)\n            animationSet = animator.animationSet;\n        if (owner.animator) {\n            if (this._animationSet && animationSet != this._animationSet) {\n                throw new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n            }\n            else {\n                if (this._animationSet != animationSet) {\n                    this._animationSet = animationSet;\n                    this.invalidateAnimation();\n                }\n            }\n        }\n        owner.invalidateSurface();\n    };\n    /**\n     * Removes an IRenderable as owner.\n     * @param owner\n     *\n     * @internal\n     */\n    MaterialBase.prototype.iRemoveOwner = function (owner) {\n        this._owners.splice(this._owners.indexOf(owner), 1);\n        if (this._owners.length == 0) {\n            this._animationSet = null;\n            this.invalidateAnimation();\n        }\n        owner.invalidateSurface();\n    };\n    Object.defineProperty(MaterialBase.prototype, \"iOwners\", {\n        /**\n         * A list of the IRenderables that use this material\n         *\n         * @private\n         */\n        get: function () {\n            return this._owners;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MaterialBase.prototype.getNumTextures = function () {\n        return this._textures.length;\n    };\n    MaterialBase.prototype.getTextureAt = function (index) {\n        return this._textures[index];\n    };\n    /**\n     * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n     *\n     * @private\n     */\n    MaterialBase.prototype.invalidatePasses = function () {\n        this.dispatchEvent(new SurfaceEvent_1.default(SurfaceEvent_1.default.INVALIDATE_PASSES, this));\n    };\n    MaterialBase.prototype.invalidateAnimation = function () {\n        this.dispatchEvent(new SurfaceEvent_1.default(SurfaceEvent_1.default.INVALIDATE_ANIMATION, this));\n    };\n    MaterialBase.prototype.invalidateSurfaces = function () {\n        var len = this._owners.length;\n        for (var i = 0; i < len; i++)\n            this._owners[i].invalidateSurface();\n    };\n    /**\n     * Called when the light picker's configuration changed.\n     */\n    MaterialBase.prototype.onLightsChange = function (event) {\n        this.invalidate();\n    };\n    MaterialBase.prototype.invalidateTexture = function () {\n        this.dispatchEvent(new SurfaceEvent_1.default(SurfaceEvent_1.default.INVALIDATE_TEXTURE, this));\n    };\n    MaterialBase.prototype.addTextureAt = function (texture, index) {\n        var i = this._textures.indexOf(texture);\n        if (i == index)\n            return;\n        else if (i != -1)\n            this._textures.splice(i, 1);\n        this._textures.splice(index, 0, texture);\n        texture.addEventListener(AssetEvent_1.default.INVALIDATE, this._onTextureInvalidateDelegate);\n        this.onTextureInvalidate();\n    };\n    MaterialBase.prototype.addTexture = function (texture) {\n        if (this._textures.indexOf(texture) != -1)\n            return;\n        this._textures.push(texture);\n        texture.addEventListener(AssetEvent_1.default.INVALIDATE, this._onTextureInvalidateDelegate);\n        this.onTextureInvalidate();\n    };\n    MaterialBase.prototype.removeTexture = function (texture) {\n        this._textures.splice(this._textures.indexOf(texture), 1);\n        texture.removeEventListener(AssetEvent_1.default.INVALIDATE, this._onTextureInvalidateDelegate);\n        this.onTextureInvalidate();\n    };\n    MaterialBase.prototype.onTextureInvalidate = function (event) {\n        if (event === void 0) { event = null; }\n        this.invalidatePasses();\n        //invalidate renderables for number of images getter (in case it has changed)\n        this.invalidateSurfaces();\n    };\n    MaterialBase.prototype._onInvalidateProperties = function (event) {\n        this.invalidatePasses();\n    };\n    return MaterialBase;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = MaterialBase;\n\n},{\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/geom/ColorTransform\":undefined,\"awayjs-core/lib/image/BlendMode\":undefined,\"awayjs-core/lib/image/ImageBase\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined,\"awayjs-display/lib/base/Style\":\"awayjs-display/lib/base/Style\",\"awayjs-display/lib/events/StyleEvent\":\"awayjs-display/lib/events/StyleEvent\",\"awayjs-display/lib/events/SurfaceEvent\":\"awayjs-display/lib/events/SurfaceEvent\"}],\"awayjs-display/lib/materials/lightpickers/LightPickerBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nvar LightPickerBase = (function (_super) {\n    __extends(LightPickerBase, _super);\n    /**\n     * Creates a new LightPickerBase object.\n     */\n    function LightPickerBase() {\n        _super.call(this);\n        this._pNumPointLights = 0;\n        this._pNumDirectionalLights = 0;\n        this._pNumCastingPointLights = 0;\n        this._pNumCastingDirectionalLights = 0;\n        this._pNumLightProbes = 0;\n    }\n    /**\n     * Disposes resources used by the light picker.\n     */\n    LightPickerBase.prototype.dispose = function () {\n    };\n    Object.defineProperty(LightPickerBase.prototype, \"assetType\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            return LightPickerBase.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"numDirectionalLights\", {\n        /**\n         * The maximum amount of directional lights that will be provided.\n         */\n        get: function () {\n            return this._pNumDirectionalLights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"numPointLights\", {\n        /**\n         * The maximum amount of point lights that will be provided.\n         */\n        get: function () {\n            return this._pNumPointLights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"numCastingDirectionalLights\", {\n        /**\n         * The maximum amount of directional lights that cast shadows.\n         */\n        get: function () {\n            return this._pNumCastingDirectionalLights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"numCastingPointLights\", {\n        /**\n         * The amount of point lights that cast shadows.\n         */\n        get: function () {\n            return this._pNumCastingPointLights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"numLightProbes\", {\n        /**\n         * The maximum amount of light probes that will be provided.\n         */\n        get: function () {\n            return this._pNumLightProbes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"pointLights\", {\n        /**\n         * The collected point lights to be used for shading.\n         */\n        get: function () {\n            return this._pPointLights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"directionalLights\", {\n        /**\n         * The collected directional lights to be used for shading.\n         */\n        get: function () {\n            return this._pDirectionalLights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"castingPointLights\", {\n        /**\n         * The collected point lights that cast shadows to be used for shading.\n         */\n        get: function () {\n            return this._pCastingPointLights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"castingDirectionalLights\", {\n        /**\n         * The collected directional lights that cast shadows to be used for shading.\n         */\n        get: function () {\n            return this._pCastingDirectionalLights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"lightProbes\", {\n        /**\n         * The collected light probes to be used for shading.\n         */\n        get: function () {\n            return this._pLightProbes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"lightProbeWeights\", {\n        /**\n         * The weights for each light probe, defining their influence on the object.\n         */\n        get: function () {\n            return this._pLightProbeWeights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"allPickedLights\", {\n        /**\n         * A collection of all the collected lights.\n         */\n        get: function () {\n            return this._pAllPickedLights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n     */\n    LightPickerBase.prototype.collectLights = function (entity) {\n        this.updateProbeWeights(entity);\n    };\n    /**\n     * Updates the weights for the light probes, based on the renderable's position relative to them.\n     * @param renderable The renderble for which to calculate the light probes' influence.\n     */\n    LightPickerBase.prototype.updateProbeWeights = function (entity) {\n        // todo: this will cause the same calculations to occur per TriangleGraphic. See if this can be improved.\n        var objectPos = entity.scenePosition;\n        var lightPos;\n        var rx = objectPos.x, ry = objectPos.y, rz = objectPos.z;\n        var dx, dy, dz;\n        var w, total = 0;\n        var i;\n        // calculates weights for probes\n        for (i = 0; i < this._pNumLightProbes; ++i) {\n            lightPos = this._pLightProbes[i].scenePosition;\n            dx = rx - lightPos.x;\n            dy = ry - lightPos.y;\n            dz = rz - lightPos.z;\n            // weight is inversely proportional to square of distance\n            w = dx * dx + dy * dy + dz * dz;\n            // just... huge if at the same spot\n            w = w > .00001 ? 1 / w : 50000000;\n            this._pLightProbeWeights[i] = w;\n            total += w;\n        }\n        // normalize\n        total = 1 / total;\n        for (i = 0; i < this._pNumLightProbes; ++i)\n            this._pLightProbeWeights[i] *= total;\n    };\n    LightPickerBase.assetType = \"[asset LightPicker]\";\n    return LightPickerBase;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LightPickerBase;\n\n},{\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar DirectionalLight_1 = require(\"awayjs-display/lib/display/DirectionalLight\");\nvar LightProbe_1 = require(\"awayjs-display/lib/display/LightProbe\");\nvar PointLight_1 = require(\"awayjs-display/lib/display/PointLight\");\nvar LightEvent_1 = require(\"awayjs-display/lib/events/LightEvent\");\nvar LightPickerBase_1 = require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nvar StaticLightPicker = (function (_super) {\n    __extends(StaticLightPicker, _super);\n    /**\n     * Creates a new StaticLightPicker object.\n     * @param lights The lights to be used for shading.\n     */\n    function StaticLightPicker(lights) {\n        var _this = this;\n        _super.call(this);\n        this._onCastShadowChangeDelegate = function (event) { return _this.onCastShadowChange(event); };\n        this.lights = lights;\n    }\n    Object.defineProperty(StaticLightPicker.prototype, \"lights\", {\n        /**\n         * The lights used for shading.\n         */\n        get: function () {\n            return this._lights;\n        },\n        set: function (value) {\n            var numPointLights = 0;\n            var numDirectionalLights = 0;\n            var numCastingPointLights = 0;\n            var numCastingDirectionalLights = 0;\n            var numLightProbes = 0;\n            var light;\n            if (this._lights)\n                this.clearListeners();\n            this._lights = value;\n            this._pAllPickedLights = value;\n            this._pPointLights = new Array();\n            this._pCastingPointLights = new Array();\n            this._pDirectionalLights = new Array();\n            this._pCastingDirectionalLights = new Array();\n            this._pLightProbes = new Array();\n            var len = value.length;\n            for (var i = 0; i < len; ++i) {\n                light = value[i];\n                light.addEventListener(LightEvent_1.default.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n                if (light instanceof PointLight_1.default) {\n                    if (light.shadowsEnabled)\n                        this._pCastingPointLights[numCastingPointLights++] = light;\n                    else\n                        this._pPointLights[numPointLights++] = light;\n                }\n                else if (light instanceof DirectionalLight_1.default) {\n                    if (light.shadowsEnabled)\n                        this._pCastingDirectionalLights[numCastingDirectionalLights++] = light;\n                    else\n                        this._pDirectionalLights[numDirectionalLights++] = light;\n                }\n                else if (light instanceof LightProbe_1.default) {\n                    this._pLightProbes[numLightProbes++] = light;\n                }\n            }\n            if (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n                return;\n            this._pNumDirectionalLights = numDirectionalLights;\n            this._pNumCastingDirectionalLights = numCastingDirectionalLights;\n            this._pNumPointLights = numPointLights;\n            this._pNumCastingPointLights = numCastingPointLights;\n            this._pNumLightProbes = numLightProbes;\n            // MUST HAVE MULTIPLE OF 4 ELEMENTS!\n            this._pLightProbeWeights = new Array(Math.ceil(numLightProbes / 4) * 4);\n            // notify material lights have changed\n            this.dispatchEvent(new AssetEvent_1.default(AssetEvent_1.default.INVALIDATE, this));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Remove configuration change listeners on the lights.\n     */\n    StaticLightPicker.prototype.clearListeners = function () {\n        var len = this._lights.length;\n        for (var i = 0; i < len; ++i)\n            this._lights[i].removeEventListener(LightEvent_1.default.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n    };\n    /**\n     * Notifies the material of a configuration change.\n     */\n    StaticLightPicker.prototype.onCastShadowChange = function (event) {\n        // TODO: Assign to special caster collections, just append it to the lights in SinglePass\n        // But keep seperated in multipass\n        var light = event.target;\n        if (light instanceof PointLight_1.default)\n            this.updatePointCasting(light);\n        else if (light instanceof DirectionalLight_1.default)\n            this.updateDirectionalCasting(light);\n        this.dispatchEvent(new AssetEvent_1.default(AssetEvent_1.default.INVALIDATE, this));\n    };\n    /**\n     * Called when a directional light's shadow casting configuration changes.\n     */\n    StaticLightPicker.prototype.updateDirectionalCasting = function (light) {\n        var dl = light;\n        if (light.shadowsEnabled) {\n            --this._pNumDirectionalLights;\n            ++this._pNumCastingDirectionalLights;\n            this._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n            this._pCastingDirectionalLights.push(light);\n        }\n        else {\n            ++this._pNumDirectionalLights;\n            --this._pNumCastingDirectionalLights;\n            this._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n            this._pDirectionalLights.push(light);\n        }\n    };\n    /**\n     * Called when a point light's shadow casting configuration changes.\n     */\n    StaticLightPicker.prototype.updatePointCasting = function (light) {\n        var pl = light;\n        if (light.shadowsEnabled) {\n            --this._pNumPointLights;\n            ++this._pNumCastingPointLights;\n            this._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n            this._pCastingPointLights.push(light);\n        }\n        else {\n            ++this._pNumPointLights;\n            --this._pNumCastingPointLights;\n            this._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n            this._pPointLights.push(light);\n        }\n    };\n    return StaticLightPicker;\n}(LightPickerBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = StaticLightPicker;\n\n},{\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-display/lib/display/DirectionalLight\":\"awayjs-display/lib/display/DirectionalLight\",\"awayjs-display/lib/display/LightProbe\":\"awayjs-display/lib/display/LightProbe\",\"awayjs-display/lib/display/PointLight\":\"awayjs-display/lib/display/PointLight\",\"awayjs-display/lib/events/LightEvent\":\"awayjs-display/lib/events/LightEvent\",\"awayjs-display/lib/materials/lightpickers/LightPickerBase\":\"awayjs-display/lib/materials/lightpickers/LightPickerBase\"}],\"awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar Rectangle_1 = require(\"awayjs-core/lib/geom/Rectangle\");\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar FreeMatrixProjection_1 = require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nvar Camera_1 = require(\"awayjs-display/lib/display/Camera\");\nvar DirectionalShadowMapper_1 = require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nvar CascadeShadowMapper = (function (_super) {\n    __extends(CascadeShadowMapper, _super);\n    function CascadeShadowMapper(numCascades) {\n        if (numCascades === void 0) { numCascades = 3; }\n        _super.call(this);\n        this._pScissorRectsInvalid = true;\n        if (numCascades < 1 || numCascades > 4)\n            throw new Error(\"numCascades must be an integer between 1 and 4\");\n        this._numCascades = numCascades;\n        this.init();\n    }\n    CascadeShadowMapper.prototype.getSplitRatio = function (index /*uint*/) {\n        return this._splitRatios[index];\n    };\n    CascadeShadowMapper.prototype.setSplitRatio = function (index /*uint*/, value) {\n        if (value < 0)\n            value = 0;\n        else if (value > 1)\n            value = 1;\n        if (index >= this._numCascades)\n            throw new Error(\"index must be smaller than the number of cascades!\");\n        this._splitRatios[index] = value;\n    };\n    CascadeShadowMapper.prototype.getDepthProjections = function (partition /*uint*/) {\n        return this._depthCameras[partition].viewProjection;\n    };\n    CascadeShadowMapper.prototype.init = function () {\n        this._splitRatios = new Array(this._numCascades);\n        this._nearPlaneDistances = new Array(this._numCascades);\n        var s = 1;\n        for (var i = this._numCascades - 1; i >= 0; --i) {\n            this._splitRatios[i] = s;\n            s *= .4;\n        }\n        this._texOffsetsX = Array(-1, 1, -1, 1);\n        this._texOffsetsY = Array(1, 1, -1, -1);\n        this._pScissorRects = new Array(4);\n        this._depthLenses = new Array();\n        this._depthCameras = new Array();\n        for (i = 0; i < this._numCascades; ++i) {\n            this._depthLenses[i] = new FreeMatrixProjection_1.default();\n            this._depthCameras[i] = new Camera_1.default(this._depthLenses[i]);\n        }\n    };\n    CascadeShadowMapper.prototype._pSetDepthMapSize = function (value /*uint*/) {\n        _super.prototype._pSetDepthMapSize.call(this, value);\n        this.invalidateScissorRects();\n    };\n    CascadeShadowMapper.prototype.invalidateScissorRects = function () {\n        this._pScissorRectsInvalid = true;\n    };\n    Object.defineProperty(CascadeShadowMapper.prototype, \"numCascades\", {\n        get: function () {\n            return this._numCascades;\n        },\n        set: function (value /*int*/) {\n            if (value == this._numCascades)\n                return;\n            if (value < 1 || value > 4)\n                throw new Error(\"numCascades must be an integer between 1 and 4\");\n            this._numCascades = value;\n            this.invalidateScissorRects();\n            this.init();\n            this.dispatchEvent(new AssetEvent_1.default(AssetEvent_1.default.INVALIDATE, this));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CascadeShadowMapper.prototype.pDrawDepthMap = function (scene, target, renderer) {\n        if (this._pScissorRectsInvalid)\n            this.updateScissorRects();\n        renderer.cullPlanes = this._pCullPlanes;\n        renderer._iRenderCascades(this._pOverallDepthCamera, scene, target.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n    };\n    CascadeShadowMapper.prototype.updateScissorRects = function () {\n        var half = this._pDepthMapSize * .5;\n        this._pScissorRects[0] = new Rectangle_1.default(0, 0, half, half);\n        this._pScissorRects[1] = new Rectangle_1.default(half, 0, half, half);\n        this._pScissorRects[2] = new Rectangle_1.default(0, half, half, half);\n        this._pScissorRects[3] = new Rectangle_1.default(half, half, half, half);\n        this._pScissorRectsInvalid = false;\n    };\n    CascadeShadowMapper.prototype.pUpdateDepthProjection = function (camera) {\n        var matrix;\n        var projection = camera.projection;\n        var projectionNear = projection.near;\n        var projectionRange = projection.far - projectionNear;\n        this.pUpdateProjectionFromFrustumCorners(camera, camera.projection.frustumCorners, this._pMatrix);\n        this._pMatrix.appendScale(.96, .96, 1);\n        this._pOverallDepthProjection.matrix = this._pMatrix;\n        this.pUpdateCullPlanes(camera);\n        for (var i = 0; i < this._numCascades; ++i) {\n            matrix = this._depthLenses[i].matrix;\n            this._nearPlaneDistances[i] = projectionNear + this._splitRatios[i] * projectionRange;\n            this._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n            this.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n            this._depthLenses[i].matrix = matrix;\n        }\n    };\n    CascadeShadowMapper.prototype.updateProjectionPartition = function (matrix, splitRatio, texOffsetX, texOffsetY) {\n        var raw = Matrix3DUtils_1.default.RAW_DATA_CONTAINER;\n        var xN, yN, zN;\n        var xF, yF, zF;\n        var minX = Number.POSITIVE_INFINITY, minY = Number.POSITIVE_INFINITY, minZ;\n        var maxX = Number.NEGATIVE_INFINITY, maxY = Number.NEGATIVE_INFINITY, maxZ = Number.NEGATIVE_INFINITY;\n        var i = 0;\n        while (i < 12) {\n            xN = this._pLocalFrustum[i];\n            yN = this._pLocalFrustum[i + 1];\n            zN = this._pLocalFrustum[i + 2];\n            xF = xN + (this._pLocalFrustum[i + 12] - xN) * splitRatio;\n            yF = yN + (this._pLocalFrustum[i + 13] - yN) * splitRatio;\n            zF = zN + (this._pLocalFrustum[i + 14] - zN) * splitRatio;\n            if (xN < minX)\n                minX = xN;\n            if (xN > maxX)\n                maxX = xN;\n            if (yN < minY)\n                minY = yN;\n            if (yN > maxY)\n                maxY = yN;\n            if (zN > maxZ)\n                maxZ = zN;\n            if (xF < minX)\n                minX = xF;\n            if (xF > maxX)\n                maxX = xF;\n            if (yF < minY)\n                minY = yF;\n            if (yF > maxY)\n                maxY = yF;\n            if (zF > maxZ)\n                maxZ = zF;\n            i += 3;\n        }\n        minZ = 1;\n        var w = (maxX - minX);\n        var h = (maxY - minY);\n        var d = 1 / (maxZ - minZ);\n        if (minX < 0)\n            minX -= this._pSnap; // because int() rounds up for < 0\n        if (minY < 0)\n            minY -= this._pSnap;\n        minX = Math.floor(minX / this._pSnap) * this._pSnap;\n        minY = Math.floor(minY / this._pSnap) * this._pSnap;\n        var snap2 = 2 * this._pSnap;\n        w = Math.floor(w / snap2 + 1) * snap2;\n        h = Math.floor(h / snap2 + 1) * snap2;\n        maxX = minX + w;\n        maxY = minY + h;\n        w = 1 / w;\n        h = 1 / h;\n        raw[0] = 2 * w;\n        raw[5] = 2 * h;\n        raw[10] = d;\n        raw[12] = -(maxX + minX) * w;\n        raw[13] = -(maxY + minY) * h;\n        raw[14] = -minZ * d;\n        raw[15] = 1;\n        raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n        matrix.copyRawDataFrom(raw);\n        matrix.appendScale(.96, .96, 1);\n        matrix.appendTranslation(texOffsetX, texOffsetY, 0);\n        matrix.appendScale(.5, .5, 1);\n    };\n    Object.defineProperty(CascadeShadowMapper.prototype, \"_iNearPlaneDistances\", {\n        get: function () {\n            return this._nearPlaneDistances;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CascadeShadowMapper;\n}(DirectionalShadowMapper_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CascadeShadowMapper;\n\n},{\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-core/lib/geom/Rectangle\":undefined,\"awayjs-core/lib/projections/FreeMatrixProjection\":undefined,\"awayjs-display/lib/display/Camera\":\"awayjs-display/lib/display/Camera\",\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\":\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\"}],\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ImageCube_1 = require(\"awayjs-core/lib/image/ImageCube\");\nvar Camera_1 = require(\"awayjs-display/lib/display/Camera\");\nvar ShadowMapperBase_1 = require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nvar SingleCubeTexture_1 = require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nvar CubeMapShadowMapper = (function (_super) {\n    __extends(CubeMapShadowMapper, _super);\n    function CubeMapShadowMapper() {\n        _super.call(this);\n        this._pDepthMapSize = 512;\n        this._needsRender = new Array();\n        this.initCameras();\n    }\n    CubeMapShadowMapper.prototype.initCameras = function () {\n        this._depthCameras = new Array();\n        this._projections = new Array();\n        // posX, negX, posY, negY, posZ, negZ\n        this.addCamera(0, 90, 0);\n        this.addCamera(0, -90, 0);\n        this.addCamera(-90, 0, 0);\n        this.addCamera(90, 0, 0);\n        this.addCamera(0, 0, 0);\n        this.addCamera(0, 180, 0);\n    };\n    CubeMapShadowMapper.prototype.addCamera = function (rotationX, rotationY, rotationZ) {\n        var cam = new Camera_1.default();\n        cam.rotationX = rotationX;\n        cam.rotationY = rotationY;\n        cam.rotationZ = rotationZ;\n        cam.projection.near = .01;\n        var projection = cam.projection;\n        projection.fieldOfView = 90;\n        this._projections.push(projection);\n        cam.projection._iAspectRatio = 1;\n        this._depthCameras.push(cam);\n    };\n    //@override\n    CubeMapShadowMapper.prototype.pCreateDepthTexture = function () {\n        return new SingleCubeTexture_1.default(new ImageCube_1.default(this._pDepthMapSize));\n    };\n    //@override\n    CubeMapShadowMapper.prototype.pUpdateDepthProjection = function (camera) {\n        var light = (this._pLight);\n        var maxDistance = light._pFallOff;\n        var pos = this._pLight.scenePosition;\n        // todo: faces outside frustum which are pointing away from camera need not be rendered!\n        for (var i = 0; i < 6; ++i) {\n            this._projections[i].far = maxDistance;\n            this._depthCameras[i].transform.moveTo(pos.x, pos.y, pos.z);\n            this._needsRender[i] = true;\n        }\n    };\n    //@override\n    CubeMapShadowMapper.prototype.pDrawDepthMap = function (scene, target, renderer) {\n        for (var i = 0; i < 6; ++i)\n            if (this._needsRender[i])\n                renderer._iRender(this._depthCameras[i], scene, target.imageCube, null, i);\n    };\n    return CubeMapShadowMapper;\n}(ShadowMapperBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CubeMapShadowMapper;\n\n},{\"awayjs-core/lib/image/ImageCube\":undefined,\"awayjs-display/lib/display/Camera\":\"awayjs-display/lib/display/Camera\",\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\":\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\",\"awayjs-display/lib/textures/SingleCubeTexture\":\"awayjs-display/lib/textures/SingleCubeTexture\"}],\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Image2D_1 = require(\"awayjs-core/lib/image/Image2D\");\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar FreeMatrixProjection_1 = require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nvar Camera_1 = require(\"awayjs-display/lib/display/Camera\");\nvar ShadowMapperBase_1 = require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nvar Single2DTexture_1 = require(\"awayjs-display/lib/textures/Single2DTexture\");\nvar DirectionalShadowMapper = (function (_super) {\n    __extends(DirectionalShadowMapper, _super);\n    function DirectionalShadowMapper() {\n        _super.call(this);\n        this._pLightOffset = 10000;\n        this._pSnap = 64;\n        this._pCullPlanes = [];\n        this._pOverallDepthProjection = new FreeMatrixProjection_1.default();\n        this._pOverallDepthCamera = new Camera_1.default(this._pOverallDepthProjection);\n        this._pLocalFrustum = [];\n        this._pMatrix = new Matrix3D_1.default();\n    }\n    Object.defineProperty(DirectionalShadowMapper.prototype, \"snap\", {\n        get: function () {\n            return this._pSnap;\n        },\n        set: function (value) {\n            this._pSnap = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DirectionalShadowMapper.prototype, \"lightOffset\", {\n        get: function () {\n            return this._pLightOffset;\n        },\n        set: function (value) {\n            this._pLightOffset = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DirectionalShadowMapper.prototype, \"iDepthProjection\", {\n        //@arcane\n        get: function () {\n            return this._pOverallDepthCamera.viewProjection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DirectionalShadowMapper.prototype, \"depth\", {\n        //@arcane\n        get: function () {\n            return this._pMaxZ - this._pMinZ;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DirectionalShadowMapper.prototype.iSetDepthMap = function (depthMap) {\n        if (this._depthMap == depthMap)\n            return;\n        _super.prototype.iSetDepthMap.call(this, depthMap);\n        if (this._depthMap) {\n            this._explicitDepthMap = true;\n            this._pDepthMapSize = depthMap.image2D.rect.width;\n        }\n        else {\n            this._explicitDepthMap = false;\n        }\n    };\n    DirectionalShadowMapper.prototype.pCreateDepthTexture = function () {\n        return new Single2DTexture_1.default(new Image2D_1.default(this._pDepthMapSize, this._pDepthMapSize));\n    };\n    //@override\n    DirectionalShadowMapper.prototype.pDrawDepthMap = function (scene, target, renderer) {\n        renderer.cullPlanes = this._pCullPlanes;\n        renderer._iRender(this._pOverallDepthCamera, scene, target.image2D);\n    };\n    //@protected\n    DirectionalShadowMapper.prototype.pUpdateCullPlanes = function (camera) {\n        var lightFrustumPlanes = this._pOverallDepthCamera.frustumPlanes;\n        var viewFrustumPlanes = camera.frustumPlanes;\n        this._pCullPlanes.length = 4;\n        this._pCullPlanes[0] = lightFrustumPlanes[0];\n        this._pCullPlanes[1] = lightFrustumPlanes[1];\n        this._pCullPlanes[2] = lightFrustumPlanes[2];\n        this._pCullPlanes[3] = lightFrustumPlanes[3];\n        var light = this._pLight;\n        var dir = light.sceneDirection;\n        var dirX = dir.x;\n        var dirY = dir.y;\n        var dirZ = dir.z;\n        var j = 4;\n        for (var i = 0; i < 6; ++i) {\n            var plane = viewFrustumPlanes[i];\n            if (plane.a * dirX + plane.b * dirY + plane.c * dirZ < 0)\n                this._pCullPlanes[j++] = plane;\n        }\n    };\n    //@override\n    DirectionalShadowMapper.prototype.pUpdateDepthProjection = function (camera) {\n        this.pUpdateProjectionFromFrustumCorners(camera, camera.projection.frustumCorners, this._pMatrix);\n        this._pOverallDepthProjection.matrix = this._pMatrix;\n        this.pUpdateCullPlanes(camera);\n    };\n    DirectionalShadowMapper.prototype.pUpdateProjectionFromFrustumCorners = function (camera, corners, matrix) {\n        var raw = Matrix3DUtils_1.default.RAW_DATA_CONTAINER;\n        var dir;\n        var x, y, z;\n        var minX, minY;\n        var maxX, maxY;\n        var i;\n        var light = this._pLight;\n        dir = light.sceneDirection;\n        this._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n        x = Math.floor((camera.x - dir.x * this._pLightOffset) / this._pSnap) * this._pSnap;\n        y = Math.floor((camera.y - dir.y * this._pLightOffset) / this._pSnap) * this._pSnap;\n        z = Math.floor((camera.z - dir.z * this._pLightOffset) / this._pSnap) * this._pSnap;\n        this._pOverallDepthCamera.x = x;\n        this._pOverallDepthCamera.y = y;\n        this._pOverallDepthCamera.z = z;\n        this._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n        this._pMatrix.prepend(camera.sceneTransform);\n        this._pMatrix.transformVectors(corners, this._pLocalFrustum);\n        minX = maxX = this._pLocalFrustum[0];\n        minY = maxY = this._pLocalFrustum[1];\n        this._pMaxZ = this._pLocalFrustum[2];\n        i = 3;\n        while (i < 24) {\n            x = this._pLocalFrustum[i];\n            y = this._pLocalFrustum[i + 1];\n            z = this._pLocalFrustum[i + 2];\n            if (x < minX)\n                minX = x;\n            if (x > maxX)\n                maxX = x;\n            if (y < minY)\n                minY = y;\n            if (y > maxY)\n                maxY = y;\n            if (z > this._pMaxZ)\n                this._pMaxZ = z;\n            i += 3;\n        }\n        this._pMinZ = 1;\n        var w = maxX - minX;\n        var h = maxY - minY;\n        var d = 1 / (this._pMaxZ - this._pMinZ);\n        if (minX < 0)\n            minX -= this._pSnap; // because int() rounds up for < 0\n        if (minY < 0)\n            minY -= this._pSnap;\n        minX = Math.floor(minX / this._pSnap) * this._pSnap;\n        minY = Math.floor(minY / this._pSnap) * this._pSnap;\n        var snap2 = 2 * this._pSnap;\n        w = Math.floor(w / snap2 + 2) * snap2;\n        h = Math.floor(h / snap2 + 2) * snap2;\n        maxX = minX + w;\n        maxY = minY + h;\n        w = 1 / w;\n        h = 1 / h;\n        raw[0] = 2 * w;\n        raw[5] = 2 * h;\n        raw[10] = d;\n        raw[12] = -(maxX + minX) * w;\n        raw[13] = -(maxY + minY) * h;\n        raw[14] = -this._pMinZ * d;\n        raw[15] = 1;\n        raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n        matrix.copyRawDataFrom(raw);\n    };\n    return DirectionalShadowMapper;\n}(ShadowMapperBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DirectionalShadowMapper;\n\n},{\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-core/lib/image/Image2D\":undefined,\"awayjs-core/lib/projections/FreeMatrixProjection\":undefined,\"awayjs-display/lib/display/Camera\":\"awayjs-display/lib/display/Camera\",\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\":\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\",\"awayjs-display/lib/textures/Single2DTexture\":\"awayjs-display/lib/textures/Single2DTexture\"}],\"awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar DirectionalShadowMapper_1 = require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nvar NearDirectionalShadowMapper = (function (_super) {\n    __extends(NearDirectionalShadowMapper, _super);\n    function NearDirectionalShadowMapper(coverageRatio) {\n        if (coverageRatio === void 0) { coverageRatio = .5; }\n        _super.call(this);\n        this.coverageRatio = coverageRatio;\n    }\n    Object.defineProperty(NearDirectionalShadowMapper.prototype, \"coverageRatio\", {\n        /**\n         * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n         */\n        get: function () {\n            return this._coverageRatio;\n        },\n        set: function (value) {\n            if (value > 1)\n                value = 1;\n            else if (value < 0)\n                value = 0;\n            this._coverageRatio = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NearDirectionalShadowMapper.prototype.pUpdateDepthProjection = function (camera) {\n        var corners = camera.projection.frustumCorners;\n        for (var i = 0; i < 12; ++i) {\n            var v = corners[i];\n            this._pLocalFrustum[i] = v;\n            this._pLocalFrustum[i + 12] = v + (corners[i + 12] - v) * this._coverageRatio;\n        }\n        this.pUpdateProjectionFromFrustumCorners(camera, this._pLocalFrustum, this._pMatrix);\n        this._pOverallDepthProjection.matrix = this._pMatrix;\n    };\n    return NearDirectionalShadowMapper;\n}(DirectionalShadowMapper_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = NearDirectionalShadowMapper;\n\n},{\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\":\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\"}],\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar ShadowMapperBase = (function (_super) {\n    __extends(ShadowMapperBase, _super);\n    function ShadowMapperBase() {\n        _super.apply(this, arguments);\n        this._pDepthMapSize = 2048;\n        this._autoUpdateShadows = true;\n    }\n    Object.defineProperty(ShadowMapperBase.prototype, \"autoUpdateShadows\", {\n        get: function () {\n            return this._autoUpdateShadows;\n        },\n        set: function (value) {\n            this._autoUpdateShadows = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ShadowMapperBase.prototype.updateShadows = function () {\n        this._iShadowsInvalid = true;\n    };\n    ShadowMapperBase.prototype.iSetDepthMap = function (depthMap) {\n        if (this._depthMap && !this._explicitDepthMap)\n            this._depthMap.dispose();\n        this._depthMap = depthMap;\n    };\n    Object.defineProperty(ShadowMapperBase.prototype, \"light\", {\n        get: function () {\n            return this._pLight;\n        },\n        set: function (value) {\n            this._pLight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShadowMapperBase.prototype, \"depthMap\", {\n        get: function () {\n            if (!this._depthMap)\n                this._depthMap = this.pCreateDepthTexture();\n            return this._depthMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShadowMapperBase.prototype, \"depthMapSize\", {\n        get: function () {\n            return this._pDepthMapSize;\n        },\n        set: function (value) {\n            if (value == this._pDepthMapSize)\n                return;\n            this._pSetDepthMapSize(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ShadowMapperBase.prototype.dispose = function () {\n        if (this._depthMap && !this._explicitDepthMap)\n            this._depthMap.dispose();\n        this._depthMap = null;\n    };\n    ShadowMapperBase.prototype.pCreateDepthTexture = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    ShadowMapperBase.prototype.iRenderDepthMap = function (camera, scene, renderer) {\n        this._iShadowsInvalid = false;\n        this.pUpdateDepthProjection(camera);\n        if (!this._depthMap)\n            this._depthMap = this.pCreateDepthTexture();\n        this.pDrawDepthMap(scene, this._depthMap, renderer);\n    };\n    ShadowMapperBase.prototype.pUpdateDepthProjection = function (camera) {\n        throw new AbstractMethodError_1.default();\n    };\n    ShadowMapperBase.prototype.pDrawDepthMap = function (scene, target, renderer) {\n        throw new AbstractMethodError_1.default();\n    };\n    ShadowMapperBase.prototype._pSetDepthMapSize = function (value) {\n        this._pDepthMapSize = value;\n        if (this._explicitDepthMap) {\n            throw Error(\"Cannot set depth map size for the current renderer.\");\n        }\n        else if (this._depthMap) {\n            this._depthMap.dispose();\n            this._depthMap = null;\n        }\n    };\n    return ShadowMapperBase;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ShadowMapperBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/materials\":[function(require,module,exports){\n\"use strict\";\nvar LightPickerBase_1 = require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nexports.LightPickerBase = LightPickerBase_1.default;\nvar StaticLightPicker_1 = require(\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\");\nexports.StaticLightPicker = StaticLightPicker_1.default;\nvar CascadeShadowMapper_1 = require(\"awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper\");\nexports.CascadeShadowMapper = CascadeShadowMapper_1.default;\nvar CubeMapShadowMapper_1 = require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\nexports.CubeMapShadowMapper = CubeMapShadowMapper_1.default;\nvar DirectionalShadowMapper_1 = require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nexports.DirectionalShadowMapper = DirectionalShadowMapper_1.default;\nvar NearDirectionalShadowMapper_1 = require(\"awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper\");\nexports.NearDirectionalShadowMapper = NearDirectionalShadowMapper_1.default;\nvar ShadowMapperBase_1 = require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nexports.ShadowMapperBase = ShadowMapperBase_1.default;\nvar BasicMaterial_1 = require(\"awayjs-display/lib/materials/BasicMaterial\");\nexports.BasicMaterial = BasicMaterial_1.default;\nvar LightSources_1 = require(\"awayjs-display/lib/materials/LightSources\");\nexports.LightSources = LightSources_1.default;\nvar MaterialBase_1 = require(\"awayjs-display/lib/materials/MaterialBase\");\nexports.MaterialBase = MaterialBase_1.default;\n\n},{\"awayjs-display/lib/materials/BasicMaterial\":\"awayjs-display/lib/materials/BasicMaterial\",\"awayjs-display/lib/materials/LightSources\":\"awayjs-display/lib/materials/LightSources\",\"awayjs-display/lib/materials/MaterialBase\":\"awayjs-display/lib/materials/MaterialBase\",\"awayjs-display/lib/materials/lightpickers/LightPickerBase\":\"awayjs-display/lib/materials/lightpickers/LightPickerBase\",\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\":\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\",\"awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper\":\"awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper\",\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\":\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\",\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\":\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\",\"awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper\":\"awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper\",\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\":\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\"}],\"awayjs-display/lib/partition/BasicPartition\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar NodeBase_1 = require(\"awayjs-display/lib/partition/NodeBase\");\nvar PartitionBase_1 = require(\"awayjs-display/lib/partition/PartitionBase\");\n/**\n * @class away.partition.Partition\n */\nvar BasicPartition = (function (_super) {\n    __extends(BasicPartition, _super);\n    function BasicPartition() {\n        _super.call(this);\n        this._rootNode = new NodeBase_1.default();\n    }\n    return BasicPartition;\n}(PartitionBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BasicPartition;\n\n},{\"awayjs-display/lib/partition/NodeBase\":\"awayjs-display/lib/partition/NodeBase\",\"awayjs-display/lib/partition/PartitionBase\":\"awayjs-display/lib/partition/PartitionBase\"}],\"awayjs-display/lib/partition/CameraNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EntityNode_1 = require(\"awayjs-display/lib/partition/EntityNode\");\n/**\n * @class away.partition.CameraNode\n */\nvar CameraNode = (function (_super) {\n    __extends(CameraNode, _super);\n    function CameraNode() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * @inheritDoc\n     */\n    CameraNode.prototype.acceptTraverser = function (traverser) {\n        // todo: dead end for now, if it has a debug sprite, then sure accept that\n    };\n    return CameraNode;\n}(EntityNode_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CameraNode;\n\n},{\"awayjs-display/lib/partition/EntityNode\":\"awayjs-display/lib/partition/EntityNode\"}],\"awayjs-display/lib/partition/DirectionalLightNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EntityNode_1 = require(\"awayjs-display/lib/partition/EntityNode\");\n/**\n * @class away.partition.DirectionalLightNode\n */\nvar DirectionalLightNode = (function (_super) {\n    __extends(DirectionalLightNode, _super);\n    function DirectionalLightNode() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * @inheritDoc\n     */\n    DirectionalLightNode.prototype.acceptTraverser = function (traverser) {\n        if (traverser.enterNode(this))\n            traverser.applyDirectionalLight(this._displayObject);\n    };\n    /**\n     *\n     * @returns {boolean}\n     */\n    DirectionalLightNode.prototype.isCastingShadow = function () {\n        return false;\n    };\n    return DirectionalLightNode;\n}(EntityNode_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DirectionalLightNode;\n\n},{\"awayjs-display/lib/partition/EntityNode\":\"awayjs-display/lib/partition/EntityNode\"}],\"awayjs-display/lib/partition/DisplayObjectNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractionBase_1 = require(\"awayjs-core/lib/library/AbstractionBase\");\nvar AxisAlignedBoundingBox_1 = require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nvar BoundingSphere_1 = require(\"awayjs-display/lib/bounds/BoundingSphere\");\nvar BoundsType_1 = require(\"awayjs-display/lib/bounds/BoundsType\");\nvar NullBounds_1 = require(\"awayjs-display/lib/bounds/NullBounds\");\nvar DisplayObjectEvent_1 = require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n/**\n * @class away.partition.EntityNode\n */\nvar DisplayObjectNode = (function (_super) {\n    __extends(DisplayObjectNode, _super);\n    function DisplayObjectNode(displayObject, pool) {\n        var _this = this;\n        _super.call(this, displayObject, pool);\n        this.numEntities = 0;\n        this.isSceneGraphNode = false;\n        this._boundsDirty = true;\n        this._onInvalidatePartitionBoundsDelegate = function (event) { return _this._onInvalidatePartitionBounds(event); };\n        this._displayObject = displayObject;\n        this._displayObject.addEventListener(DisplayObjectEvent_1.default.INVALIDATE_PARTITION_BOUNDS, this._onInvalidatePartitionBoundsDelegate);\n        this._boundsType = this._displayObject.boundsType;\n    }\n    Object.defineProperty(DisplayObjectNode.prototype, \"debugVisible\", {\n        get: function () {\n            return this._displayObject.debugVisible;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObjectNode.prototype, \"bounds\", {\n        /**\n         * @internal\n         */\n        get: function () {\n            if (this._boundsDirty)\n                this._updateBounds();\n            return this._bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     * @returns {boolean}\n     */\n    DisplayObjectNode.prototype.isCastingShadow = function () {\n        return this._displayObject.castsShadows;\n    };\n    DisplayObjectNode.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._displayObject.removeEventListener(DisplayObjectEvent_1.default.INVALIDATE_PARTITION_BOUNDS, this._onInvalidatePartitionBoundsDelegate);\n        this._displayObject = null;\n        if (this._bounds)\n            this._bounds.dispose();\n        this._bounds = null;\n    };\n    DisplayObjectNode.prototype.onInvalidate = function (event) {\n        _super.prototype.onInvalidate.call(this, event);\n        if (this._boundsType != this._displayObject.boundsType) {\n            this._boundsType = this._displayObject.boundsType;\n            this._boundsDirty = true;\n        }\n    };\n    /**\n     *\n     * @param planes\n     * @param numPlanes\n     * @returns {boolean}\n     */\n    DisplayObjectNode.prototype.isInFrustum = function (planes, numPlanes) {\n        return true;\n    };\n    /**\n     * @inheritDoc\n     */\n    DisplayObjectNode.prototype.isIntersectingRay = function (rayPosition, rayDirection) {\n        return true;\n    };\n    /**\n     * @inheritDoc\n     */\n    DisplayObjectNode.prototype.acceptTraverser = function (traverser) {\n        // do nothing here\n    };\n    DisplayObjectNode.prototype._onInvalidatePartitionBounds = function (event) {\n        // do nothing here\n    };\n    DisplayObjectNode.prototype._updateBounds = function () {\n        if (this._bounds)\n            this._bounds.dispose();\n        if (this._boundsType == BoundsType_1.default.AXIS_ALIGNED_BOX)\n            this._bounds = new AxisAlignedBoundingBox_1.default(this._displayObject);\n        else if (this._boundsType == BoundsType_1.default.SPHERE)\n            this._bounds = new BoundingSphere_1.default(this._displayObject);\n        else if (this._boundsType == BoundsType_1.default.NULL)\n            this._bounds = new NullBounds_1.default();\n        this._boundsDirty = false;\n    };\n    return DisplayObjectNode;\n}(AbstractionBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DisplayObjectNode;\n\n},{\"awayjs-core/lib/library/AbstractionBase\":undefined,\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\":\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\",\"awayjs-display/lib/bounds/BoundingSphere\":\"awayjs-display/lib/bounds/BoundingSphere\",\"awayjs-display/lib/bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"awayjs-display/lib/bounds/NullBounds\":\"awayjs-display/lib/bounds/NullBounds\",\"awayjs-display/lib/events/DisplayObjectEvent\":\"awayjs-display/lib/events/DisplayObjectEvent\"}],\"awayjs-display/lib/partition/EntityNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar DisplayObjectNode_1 = require(\"awayjs-display/lib/partition/DisplayObjectNode\");\n/**\n * @class away.partition.EntityNode\n */\nvar EntityNode = (function (_super) {\n    __extends(EntityNode, _super);\n    function EntityNode(displayObject, partition) {\n        _super.call(this, displayObject, partition);\n        this.numEntities = 1;\n        this._maskPosition = new Vector3D_1.default();\n        this._partition = partition;\n    }\n    EntityNode.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._partition = null;\n    };\n    /**\n     *\n     * @param planes\n     * @param numPlanes\n     * @returns {boolean}\n     */\n    EntityNode.prototype.isInFrustum = function (planes, numPlanes) {\n        if (!this._displayObject._iIsVisible())\n            return false;\n        return true; // todo: hack for 2d. attention. might break stuff in 3d.\n        //return this._bounds.isInFrustum(planes, numPlanes);\n    };\n    /**\n     * @inheritDoc\n     */\n    EntityNode.prototype.isIntersectingRay = function (globalRayPosition, globalRayDirection) {\n        if (!this._displayObject._iIsVisible() || !this.isIntersectingMasks(globalRayPosition, globalRayDirection, this._displayObject._iAssignedMasks()))\n            return false;\n        var pickingCollision = this._displayObject._iPickingCollision;\n        pickingCollision.rayPosition = this._displayObject.inverseSceneTransform.transformVector(globalRayPosition);\n        pickingCollision.rayDirection = this._displayObject.inverseSceneTransform.deltaTransformVector(globalRayDirection);\n        if (!pickingCollision.normal)\n            pickingCollision.normal = new Vector3D_1.default();\n        var rayEntryDistance = this.bounds.rayIntersection(pickingCollision.rayPosition, pickingCollision.rayDirection, pickingCollision.normal);\n        if (rayEntryDistance < 0)\n            return false;\n        pickingCollision.rayEntryDistance = rayEntryDistance;\n        pickingCollision.globalRayPosition = globalRayPosition;\n        pickingCollision.globalRayDirection = globalRayDirection;\n        pickingCollision.rayOriginIsInsideBounds = rayEntryDistance == 0;\n        return true;\n    };\n    /**\n     * @inheritDoc\n     */\n    EntityNode.prototype.acceptTraverser = function (traverser) {\n        if (traverser.enterNode(this))\n            traverser.applyEntity(this._displayObject);\n    };\n    EntityNode.prototype._onInvalidatePartitionBounds = function (event) {\n        this.bounds.invalidate();\n        this._partition.iMarkForUpdate(this);\n    };\n    EntityNode.prototype.isIntersectingMasks = function (globalRayPosition, globalRayDirection, masks) {\n        //horrible hack for 2d masks\n        if (masks != null) {\n            this._maskPosition.x = globalRayPosition.x + globalRayDirection.x * 1000;\n            this._maskPosition.y = globalRayPosition.y + globalRayDirection.y * 1000;\n            var numLayers = masks.length;\n            var children;\n            var numChildren;\n            var layerHit;\n            for (var i = 0; i < numLayers; i++) {\n                children = masks[i];\n                numChildren = children.length;\n                layerHit = false;\n                for (var j = 0; j < numChildren; j++) {\n                    if (children[j].hitTestPoint(this._maskPosition.x, this._maskPosition.y, true, true)) {\n                        layerHit = true;\n                        break;\n                    }\n                }\n                if (!layerHit)\n                    return false;\n            }\n        }\n        return true;\n    };\n    return EntityNode;\n}(DisplayObjectNode_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = EntityNode;\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-display/lib/partition/DisplayObjectNode\":\"awayjs-display/lib/partition/DisplayObjectNode\"}],\"awayjs-display/lib/partition/IContainerNode\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/partition/IDisplayObjectNode\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/partition/IEntityNodeClass\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/partition/INode\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/partition/LightProbeNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EntityNode_1 = require(\"awayjs-display/lib/partition/EntityNode\");\n/**\n * @class away.partition.LightProbeNode\n */\nvar LightProbeNode = (function (_super) {\n    __extends(LightProbeNode, _super);\n    function LightProbeNode() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * @inheritDoc\n     */\n    LightProbeNode.prototype.acceptTraverser = function (traverser) {\n        if (traverser.enterNode(this))\n            traverser.applyLightProbe(this._displayObject);\n    };\n    /**\n     *\n     * @returns {boolean}\n     */\n    LightProbeNode.prototype.isCastingShadow = function () {\n        return false;\n    };\n    return LightProbeNode;\n}(EntityNode_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LightProbeNode;\n\n},{\"awayjs-display/lib/partition/EntityNode\":\"awayjs-display/lib/partition/EntityNode\"}],\"awayjs-display/lib/partition/NodeBase\":[function(require,module,exports){\n\"use strict\";\nvar NullBounds_1 = require(\"awayjs-display/lib/bounds/NullBounds\");\n/**\n * @class away.partition.NodeBase\n */\nvar NodeBase = (function () {\n    /**\n     *\n     */\n    function NodeBase() {\n        this._bounds = new NullBounds_1.default();\n        this._pChildNodes = new Array();\n        this._pNumChildNodes = 0;\n        this.numEntities = 0;\n    }\n    Object.defineProperty(NodeBase.prototype, \"debugVisible\", {\n        get: function () {\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NodeBase.prototype, \"bounds\", {\n        /**\n         * @internal\n         */\n        get: function () {\n            return this._bounds; //TODO\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     * @param planes\n     * @param numPlanes\n     * @returns {boolean}\n     * @internal\n     */\n    NodeBase.prototype.isInFrustum = function (planes, numPlanes) {\n        return true;\n    };\n    /**\n     *\n     * @param rayPosition\n     * @param rayDirection\n     * @returns {boolean}\n     */\n    NodeBase.prototype.isIntersectingRay = function (rayPosition, rayDirection) {\n        return true;\n    };\n    /**\n     *\n     * @returns {boolean}\n     */\n    NodeBase.prototype.isCastingShadow = function () {\n        return true;\n    };\n    NodeBase.prototype.dispose = function () {\n        this.parent = null;\n        this._pChildNodes = null;\n    };\n    /**\n     *\n     * @param traverser\n     */\n    NodeBase.prototype.acceptTraverser = function (traverser) {\n        if (this.numEntities == 0)\n            return;\n        if (traverser.enterNode(this)) {\n            for (var i = 0; i < this._pNumChildNodes; i++)\n                this._pChildNodes[i].acceptTraverser(traverser);\n        }\n    };\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    NodeBase.prototype.iAddNode = function (node) {\n        node.parent = this;\n        this.numEntities += node.numEntities;\n        this._pChildNodes[this._pNumChildNodes++] = node;\n        var numEntities = node.numEntities;\n        node = this;\n        do {\n            node.numEntities += numEntities;\n        } while ((node = node.parent) != null);\n    };\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    NodeBase.prototype.iRemoveNode = function (node) {\n        var index = this._pChildNodes.indexOf(node);\n        this._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n        this._pChildNodes.pop();\n        var numEntities = node.numEntities;\n        node = this;\n        do {\n            node.numEntities -= numEntities;\n        } while ((node = node.parent) != null);\n    };\n    return NodeBase;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = NodeBase;\n\n},{\"awayjs-display/lib/bounds/NullBounds\":\"awayjs-display/lib/bounds/NullBounds\"}],\"awayjs-display/lib/partition/PartitionBase\":[function(require,module,exports){\n\"use strict\";\n/**\n * @class away.partition.Partition\n */\nvar PartitionBase = (function () {\n    function PartitionBase() {\n        this._abstractionPool = new Object();\n        this._updatesMade = false;\n    }\n    PartitionBase.prototype.getAbstraction = function (displayObject) {\n        return (this._abstractionPool[displayObject.id] || (this._abstractionPool[displayObject.id] = new PartitionBase._abstractionClassPool[displayObject.assetType](displayObject, this)));\n    };\n    /**\n     *\n     * @param image\n     */\n    PartitionBase.prototype.clearAbstraction = function (displayObject) {\n        this._abstractionPool[displayObject.id] = null;\n    };\n    PartitionBase.prototype.traverse = function (traverser) {\n        if (this._updatesMade)\n            this.updateEntities();\n        if (this._rootNode) {\n            this._rootNode.acceptTraverser(traverser);\n        }\n    };\n    PartitionBase.prototype.iMarkForUpdate = function (node) {\n        var t = this._updateQueue;\n        while (t) {\n            if (node == t)\n                return;\n            t = t._iUpdateQueueNext;\n        }\n        node._iUpdateQueueNext = this._updateQueue;\n        this._updateQueue = node;\n        this._updatesMade = true;\n    };\n    PartitionBase.prototype.iRemoveEntity = function (node) {\n        var t;\n        if (node.parent) {\n            node.parent.iRemoveNode(node);\n            node.parent = null;\n        }\n        if (node == this._updateQueue) {\n            this._updateQueue = node._iUpdateQueueNext;\n        }\n        else {\n            t = this._updateQueue;\n            while (t && t._iUpdateQueueNext != node)\n                t = t._iUpdateQueueNext;\n            if (t)\n                t._iUpdateQueueNext = node._iUpdateQueueNext;\n        }\n        node._iUpdateQueueNext = null;\n        if (!this._updateQueue)\n            this._updatesMade = false;\n    };\n    /**\n     *\n     * @param entity\n     * @returns {away.partition.NodeBase}\n     */\n    PartitionBase.prototype.findParentForNode = function (node) {\n        return this._rootNode;\n    };\n    PartitionBase.prototype.updateEntities = function () {\n        var node = this._updateQueue;\n        while (node) {\n            //required for controllers with autoUpdate set to true and queued events\n            node._displayObject._iInternalUpdate();\n            node = node._iUpdateQueueNext;\n        }\n        //reset head\n        node = this._updateQueue;\n        var targetNode;\n        var t;\n        this._updateQueue = null;\n        this._updatesMade = false;\n        do {\n            targetNode = this.findParentForNode(node);\n            if (node.parent != targetNode) {\n                if (node.parent)\n                    node.parent.iRemoveNode(node);\n                targetNode.iAddNode(node);\n            }\n            t = node._iUpdateQueueNext;\n            node._iUpdateQueueNext = null;\n        } while ((node = t) != null);\n    };\n    /**\n     * @internal\n     */\n    PartitionBase.prototype._iRegisterEntity = function (displayObject) {\n        if (displayObject.isEntity)\n            this.iMarkForUpdate(this.getAbstraction(displayObject));\n    };\n    /**\n     * @internal\n     */\n    PartitionBase.prototype._iUnregisterEntity = function (displayObject) {\n        if (displayObject.isEntity)\n            this.iRemoveEntity(this.getAbstraction(displayObject));\n    };\n    /**\n     *\n     * @param imageObjectClass\n     */\n    PartitionBase.registerAbstraction = function (entityNodeClass, assetClass) {\n        PartitionBase._abstractionClassPool[assetClass.assetType] = entityNodeClass;\n    };\n    PartitionBase._abstractionClassPool = new Object();\n    return PartitionBase;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PartitionBase;\n\n},{}],\"awayjs-display/lib/partition/PointLightNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EntityNode_1 = require(\"awayjs-display/lib/partition/EntityNode\");\n/**\n * @class away.partition.PointLightNode\n */\nvar PointLightNode = (function (_super) {\n    __extends(PointLightNode, _super);\n    function PointLightNode() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * @inheritDoc\n     */\n    PointLightNode.prototype.acceptTraverser = function (traverser) {\n        if (traverser.enterNode(this))\n            traverser.applyPointLight(this._displayObject);\n    };\n    /**\n     *\n     * @returns {boolean}\n     */\n    PointLightNode.prototype.isCastingShadow = function () {\n        return false;\n    };\n    return PointLightNode;\n}(EntityNode_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PointLightNode;\n\n},{\"awayjs-display/lib/partition/EntityNode\":\"awayjs-display/lib/partition/EntityNode\"}],\"awayjs-display/lib/partition/SceneGraphNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar DisplayObjectNode_1 = require(\"awayjs-display/lib/partition/DisplayObjectNode\");\n/**\n * Maintains scenegraph heirarchy when collecting nodes\n */\nvar SceneGraphNode = (function (_super) {\n    __extends(SceneGraphNode, _super);\n    function SceneGraphNode() {\n        _super.apply(this, arguments);\n        this.isSceneGraphNode = true;\n        this._pChildNodes = new Array();\n        this._childDepths = new Array();\n        this._childMasks = new Array();\n    }\n    /**\n     *\n     * @param traverser\n     */\n    SceneGraphNode.prototype.acceptTraverser = function (traverser) {\n        //containers nodes are for ordering only, no need to check enterNode or debugVisible\n        if (this.numEntities == 0)\n            return;\n        var i;\n        for (i = this._pChildNodes.length - 1; i >= 0; i--)\n            this._pChildNodes[i].acceptTraverser(traverser);\n        for (i = this._childMasks.length - 1; i >= 0; i--)\n            this._childMasks[i].acceptTraverser(traverser);\n    };\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    SceneGraphNode.prototype.iAddNode = function (node) {\n        node.parent = this;\n        if (node._displayObject.maskMode) {\n            this._childMasks.push(node);\n        }\n        else {\n            var depth = node._displayObject._depthID;\n            var len = this._childDepths.length;\n            var index = len;\n            while (index--)\n                if (this._childDepths[index] < depth)\n                    break;\n            index++;\n            if (index < len) {\n                this._pChildNodes.splice(index, 0, node);\n                this._childDepths.splice(index, 0, depth);\n            }\n            else {\n                this._pChildNodes.push(node);\n                this._childDepths.push(depth);\n            }\n        }\n        var numEntities = node.isSceneGraphNode ? node.numEntities : 1;\n        node = this;\n        do {\n            node.numEntities += numEntities;\n        } while ((node = node.parent) != null);\n    };\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    SceneGraphNode.prototype.iRemoveNode = function (node) {\n        if (node._displayObject.maskMode) {\n            this._childMasks.splice(this._childMasks.indexOf(node), 1);\n        }\n        else {\n            var index = this._pChildNodes.indexOf(node);\n            this._pChildNodes.splice(index, 1);\n            this._childDepths.splice(index, 1);\n        }\n        var numEntities = node.numEntities;\n        node = this;\n        do {\n            node.numEntities -= numEntities;\n        } while ((node = node.parent) != null);\n    };\n    return SceneGraphNode;\n}(DisplayObjectNode_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SceneGraphNode;\n\n},{\"awayjs-display/lib/partition/DisplayObjectNode\":\"awayjs-display/lib/partition/DisplayObjectNode\"}],\"awayjs-display/lib/partition/SceneGraphPartition\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar SceneGraphNode_1 = require(\"awayjs-display/lib/partition/SceneGraphNode\");\nvar PartitionBase_1 = require(\"awayjs-display/lib/partition/PartitionBase\");\n/**\n * @class away.partition.Partition\n */\nvar SceneGraphPartition = (function (_super) {\n    __extends(SceneGraphPartition, _super);\n    function SceneGraphPartition() {\n        _super.call(this);\n        this._sceneGraphNodePool = new SceneGraphNodePool();\n    }\n    SceneGraphPartition.prototype.traverse = function (traverser) {\n        _super.prototype.traverse.call(this, traverser);\n    };\n    /**\n     *\n     * @param entity\n     * @returns {away.partition.NodeBase}\n     */\n    SceneGraphPartition.prototype.findParentForNode = function (node) {\n        if (node.isSceneGraphNode && (node._displayObject.partition == this || node._displayObject._iIsRoot)) {\n            this._rootNode = node;\n            return null;\n        }\n        if (!node.isSceneGraphNode && node._displayObject.isContainer)\n            return this._sceneGraphNodePool.getAbstraction(node._displayObject);\n        return this._sceneGraphNodePool.getAbstraction(node._displayObject.parent);\n    };\n    /**\n     * @internal\n     */\n    SceneGraphPartition.prototype._iRegisterEntity = function (displayObject) {\n        _super.prototype._iRegisterEntity.call(this, displayObject);\n        if (displayObject.isContainer)\n            this.iMarkForUpdate(this._sceneGraphNodePool.getAbstraction(displayObject));\n    };\n    /**\n     * @internal\n     */\n    SceneGraphPartition.prototype._iUnregisterEntity = function (displayObject) {\n        _super.prototype._iUnregisterEntity.call(this, displayObject);\n        if (displayObject.isContainer)\n            this.iRemoveEntity(this._sceneGraphNodePool.getAbstraction(displayObject));\n    };\n    return SceneGraphPartition;\n}(PartitionBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SceneGraphPartition;\n/**\n * @class away.pool.SceneGraphNodePool\n */\nvar SceneGraphNodePool = (function () {\n    function SceneGraphNodePool() {\n        this._abstractionPool = new Object();\n    }\n    /**\n     * //TODO\n     *\n     * @param entity\n     * @returns EntityNode\n     */\n    SceneGraphNodePool.prototype.getAbstraction = function (displayObjectContainer) {\n        return (this._abstractionPool[displayObjectContainer.id] || (this._abstractionPool[displayObjectContainer.id] = new SceneGraphNode_1.default(displayObjectContainer, this)));\n    };\n    /**\n     * //TODO\n     *\n     * @param entity\n     */\n    SceneGraphNodePool.prototype.clearAbstraction = function (displayObjectContainer) {\n        delete this._abstractionPool[displayObjectContainer.id];\n    };\n    return SceneGraphNodePool;\n}());\n\n},{\"awayjs-display/lib/partition/PartitionBase\":\"awayjs-display/lib/partition/PartitionBase\",\"awayjs-display/lib/partition/SceneGraphNode\":\"awayjs-display/lib/partition/SceneGraphNode\"}],\"awayjs-display/lib/partition/SkyboxNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EntityNode_1 = require(\"awayjs-display/lib/partition/EntityNode\");\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nvar SkyboxNode = (function (_super) {\n    __extends(SkyboxNode, _super);\n    function SkyboxNode() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * @inheritDoc\n     */\n    SkyboxNode.prototype.acceptTraverser = function (traverser) {\n        if (traverser.enterNode(this))\n            traverser.applySkybox(this._displayObject);\n    };\n    /**\n     *\n     * @param planes\n     * @param numPlanes\n     * @returns {boolean}\n     */\n    SkyboxNode.prototype.isInFrustum = function (planes, numPlanes) {\n        if (!this._displayObject._iIsVisible)\n            return false;\n        //a skybox is always in view unless its visibility is set to false\n        return true;\n    };\n    return SkyboxNode;\n}(EntityNode_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkyboxNode;\n\n},{\"awayjs-display/lib/partition/EntityNode\":\"awayjs-display/lib/partition/EntityNode\"}],\"awayjs-display/lib/partition\":[function(require,module,exports){\n\"use strict\";\nvar BasicPartition_1 = require(\"awayjs-display/lib/partition/BasicPartition\");\nexports.BasicPartition = BasicPartition_1.default;\nvar CameraNode_1 = require(\"awayjs-display/lib/partition/CameraNode\");\nexports.CameraNode = CameraNode_1.default;\nvar DirectionalLightNode_1 = require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nexports.DirectionalLightNode = DirectionalLightNode_1.default;\nvar DisplayObjectNode_1 = require(\"awayjs-display/lib/partition/DisplayObjectNode\");\nexports.DisplayObjectNode = DisplayObjectNode_1.default;\nvar EntityNode_1 = require(\"awayjs-display/lib/partition/EntityNode\");\nexports.EntityNode = EntityNode_1.default;\nvar LightProbeNode_1 = require(\"awayjs-display/lib/partition/LightProbeNode\");\nexports.LightProbeNode = LightProbeNode_1.default;\nvar NodeBase_1 = require(\"awayjs-display/lib/partition/NodeBase\");\nexports.NodeBase = NodeBase_1.default;\nvar PartitionBase_1 = require(\"awayjs-display/lib/partition/PartitionBase\");\nexports.PartitionBase = PartitionBase_1.default;\nvar PointLightNode_1 = require(\"awayjs-display/lib/partition/PointLightNode\");\nexports.PointLightNode = PointLightNode_1.default;\nvar SceneGraphNode_1 = require(\"awayjs-display/lib/partition/SceneGraphNode\");\nexports.SceneGraphNode = SceneGraphNode_1.default;\nvar SceneGraphPartition_1 = require(\"awayjs-display/lib/partition/SceneGraphPartition\");\nexports.SceneGraphPartition = SceneGraphPartition_1.default;\nvar SkyboxNode_1 = require(\"awayjs-display/lib/partition/SkyboxNode\");\nexports.SkyboxNode = SkyboxNode_1.default;\n\n},{\"awayjs-display/lib/partition/BasicPartition\":\"awayjs-display/lib/partition/BasicPartition\",\"awayjs-display/lib/partition/CameraNode\":\"awayjs-display/lib/partition/CameraNode\",\"awayjs-display/lib/partition/DirectionalLightNode\":\"awayjs-display/lib/partition/DirectionalLightNode\",\"awayjs-display/lib/partition/DisplayObjectNode\":\"awayjs-display/lib/partition/DisplayObjectNode\",\"awayjs-display/lib/partition/EntityNode\":\"awayjs-display/lib/partition/EntityNode\",\"awayjs-display/lib/partition/LightProbeNode\":\"awayjs-display/lib/partition/LightProbeNode\",\"awayjs-display/lib/partition/NodeBase\":\"awayjs-display/lib/partition/NodeBase\",\"awayjs-display/lib/partition/PartitionBase\":\"awayjs-display/lib/partition/PartitionBase\",\"awayjs-display/lib/partition/PointLightNode\":\"awayjs-display/lib/partition/PointLightNode\",\"awayjs-display/lib/partition/SceneGraphNode\":\"awayjs-display/lib/partition/SceneGraphNode\",\"awayjs-display/lib/partition/SceneGraphPartition\":\"awayjs-display/lib/partition/SceneGraphPartition\",\"awayjs-display/lib/partition/SkyboxNode\":\"awayjs-display/lib/partition/SkyboxNode\"}],\"awayjs-display/lib/pick/IPicker\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/pick/IPickingCollider\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/pick/JSPickingCollider\":[function(require,module,exports){\n\"use strict\";\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nvar JSPickingCollider = (function () {\n    /**\n     * Creates a new <code>JSPickingCollider</code> object.\n     *\n     * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n     */\n    function JSPickingCollider(findClosestCollision) {\n        if (findClosestCollision === void 0) { findClosestCollision = false; }\n        this._findClosestCollision = findClosestCollision;\n    }\n    /**\n     * Tests a <code>Billboard</code> object for a collision with the picking ray.\n     *\n     * @param billboard The billboard instance to be tested.\n     * @param pickingCollision The collision object used to store the collision results\n     * @param findClosest\n     */\n    JSPickingCollider.prototype.testBillboardCollision = function (billboard, material, pickingCollision) {\n        pickingCollision.renderable = null;\n        //if (this._testGraphicCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollision, shortestCollisionDistance)) {\n        //\tshortestCollisionDistance = pickingCollision.rayEntryDistance;\n        //\n        //\tpickingCollision.renderable = billboard;\n        //\n        //\treturn true;\n        //}\n        return false;\n    };\n    /**\n     * Tests a <code>TriangleElements</code> object for a collision with the picking ray.\n     *\n     * @param triangleElements\n     * @param material\n     * @param pickingCollision\n     * @returns {boolean}\n     */\n    JSPickingCollider.prototype.testTriangleCollision = function (triangleElements, material, pickingCollision) {\n        var rayPosition = pickingCollision.rayPosition;\n        var rayDirection = pickingCollision.rayDirection;\n        var t;\n        var i0, i1, i2;\n        var rx, ry, rz;\n        var nx, ny, nz;\n        var cx, cy, cz;\n        var coeff, u, v, w;\n        var p0x, p0y, p0z;\n        var p1x, p1y, p1z;\n        var p2x, p2y, p2z;\n        var s0x, s0y, s0z;\n        var s1x, s1y, s1z;\n        var nl, nDotV, D, disToPlane;\n        var Q1Q2, Q1Q1, Q2Q2, RQ1, RQ2;\n        var collisionTriangleIndex = -1;\n        var bothSides = material.bothSides;\n        var positions = triangleElements.positions.get(triangleElements.numVertices);\n        var posDim = triangleElements.positions.dimensions;\n        var indices;\n        var count;\n        if (triangleElements.indices) {\n            indices = triangleElements.indices.get(triangleElements.numElements);\n            count = indices.length;\n        }\n        else {\n            count = triangleElements.numVertices;\n        }\n        for (var index = 0; index < count; index += 3) {\n            // evaluate triangle indices\n            if (indices) {\n                i0 = indices[index] * posDim;\n                i1 = indices[index + 1] * posDim;\n                i2 = indices[index + 2] * posDim;\n            }\n            else {\n                i0 = index * posDim;\n                i1 = (index + 1) * posDim;\n                i2 = (index + 2) * posDim;\n            }\n            // evaluate triangle positions\n            p0x = positions[i0];\n            p1x = positions[i1];\n            p2x = positions[i2];\n            s0x = p1x - p0x; // s0 = p1 - p0\n            s1x = p2x - p0x; // s1 = p2 - p0\n            p0y = positions[i0 + 1];\n            p1y = positions[i1 + 1];\n            p2y = positions[i2 + 1];\n            s0y = p1y - p0y;\n            s1y = p2y - p0y;\n            if (posDim == 3) {\n                p0z = positions[i0 + 2];\n                p1z = positions[i1 + 2];\n                p2z = positions[i2 + 2];\n                s0z = p1z - p0z;\n                s1z = p2z - p0z;\n                // evaluate sides and triangle normal\n                nx = s0y * s1z - s0z * s1y; // n = s0 x s1\n                ny = s0z * s1x - s0x * s1z;\n                nz = s0x * s1y - s0y * s1x;\n                nl = 1 / Math.sqrt(nx * nx + ny * ny + nz * nz); // normalize n\n                nx *= nl;\n                ny *= nl;\n                nz *= nl;\n            }\n            else {\n                nx = 0;\n                ny = 0;\n                nz = 1;\n            }\n            // -- plane intersection test --\n            nDotV = nx * rayDirection.x + ny * +rayDirection.y + nz * rayDirection.z; // rayDirection . normal\n            if ((!bothSides && nDotV < 0.0) || (bothSides && nDotV != 0.0)) {\n                // find collision t\n                D = -(nx * p0x + ny * p0y + nz * p0z);\n                disToPlane = -(nx * rayPosition.x + ny * rayPosition.y + nz * rayPosition.z + D);\n                t = disToPlane / nDotV;\n                // find collision point\n                cx = rayPosition.x + t * rayDirection.x;\n                cy = rayPosition.y + t * rayDirection.y;\n                cz = rayPosition.z + t * rayDirection.z;\n                // collision point inside triangle? ( using barycentric coordinates )\n                Q1Q2 = s0x * s1x + s0y * s1y + s0z * s1z;\n                Q1Q1 = s0x * s0x + s0y * s0y + s0z * s0z;\n                Q2Q2 = s1x * s1x + s1y * s1y + s1z * s1z;\n                rx = cx - p0x;\n                ry = cy - p0y;\n                rz = cz - p0z;\n                RQ1 = rx * s0x + ry * s0y + rz * s0z;\n                RQ2 = rx * s1x + ry * s1y + rz * s1z;\n                coeff = 1 / (Q1Q1 * Q2Q2 - Q1Q2 * Q1Q2);\n                v = coeff * (Q2Q2 * RQ1 - Q1Q2 * RQ2);\n                w = coeff * (-Q1Q2 * RQ1 + Q1Q1 * RQ2);\n                if (v < 0)\n                    continue;\n                if (w < 0)\n                    continue;\n                u = 1 - v - w;\n                if (!(u < 0) && t > 0 && t < pickingCollision.rayEntryDistance) {\n                    collisionTriangleIndex = index / 3;\n                    pickingCollision.rayEntryDistance = t;\n                    pickingCollision.position = new Vector3D_1.default(cx, cy, cz);\n                    pickingCollision.normal = new Vector3D_1.default(nx, ny, nz);\n                    if (triangleElements.uvs) {\n                        var uvs = triangleElements.uvs.get(triangleElements.numVertices);\n                        var uvDim = triangleElements.uvs.dimensions;\n                        var uIndex = indices[index] * uvDim;\n                        var uv0 = new Vector3D_1.default(uvs[uIndex], uvs[uIndex + 1]);\n                        uIndex = indices[index + 1] * uvDim;\n                        var uv1 = new Vector3D_1.default(uvs[uIndex], uvs[uIndex + 1]);\n                        uIndex = indices[index + 2] * uvDim;\n                        var uv2 = new Vector3D_1.default(uvs[uIndex], uvs[uIndex + 1]);\n                        pickingCollision.uv = new Point_1.default(u * uv0.x + v * uv1.x + w * uv2.x, u * uv0.y + v * uv1.y + w * uv2.y);\n                    }\n                    pickingCollision.elementIndex = collisionTriangleIndex;\n                    // if not looking for best hit, first found will do...\n                    if (!this._findClosestCollision)\n                        return true;\n                }\n            }\n        }\n        if (collisionTriangleIndex >= 0)\n            return true;\n        return false;\n    };\n    //\n    ///**\n    // * Tests a <code>CurveElements</code> object for a collision with the picking ray.\n    // *\n    // * @param triangleElements\n    // * @param material\n    // * @param pickingCollision\n    // * @returns {boolean}\n    // */\n    //public testCurveCollision(curveElements:CurveElements, material:MaterialBase, pickingCollision:PickingCollision, shortestCollisionDistance:number):boolean\n    //{\n    //\tvar rayPosition:Vector3D = pickingCollision.localRayPosition;\n    //\tvar rayDirection:Vector3D = pickingCollision.localRayDirection;\n    //\n    //\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n    //\t//this will only work while all points lie on the x/y plane\n    //\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n    //\n    //\tvar result:Vector3D = new Vector3D();\n    //\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n    //\tresult.x = rayPosition.x - ( plane.x*distance);\n    //\tresult.y = rayPosition.y - ( plane.y*distance);\n    //\tresult.z = rayPosition.z - ( plane.z*distance);\n    //\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n    //\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n    //\trayDirection.scaleBy(t);\n    //\tvar p:Vector3D = rayPosition.add(rayDirection);\n    //\n    //\tvar indices:Uint16Array = curveElements.indices.get(curveElements.numElements);\n    //\tvar collisionCurveIndex:number = -1;\n    //\tvar bothSides:boolean = material.bothSides;\n    //\n    //\n    //\tvar positions:Float32Array = curveElements.positions.get(curveElements.numVertices);\n    //\tvar posDim:number = curveElements.positions.dimensions;\n    //\tvar curves:Float32Array = curveElements.curves.get(curveElements.numVertices);\n    //\tvar curveDim:number = curveElements.curves.dimensions;\n    //\tvar uvs:ArrayBufferView = curveElements.uvs.get(curveElements.numVertices);\n    //\tvar uvDim:number = curveElements.uvs.dimensions;\n    //\tvar numIndices:number = indices.length;\n    //\n    //\n    //\tfor(var index:number = 0; index < numIndices; index+=3)\n    //\t{\n    //\t\tvar id0:number = indices[index];\n    //\t\tvar id1:number = indices[index + 1] * posDim;\n    //\t\tvar id2:number = indices[index + 2] * posDim;\n    //\n    //\t\tvar ax:number = positions[id0 * posDim];\n    //\t\tvar ay:number = positions[id0 * posDim + 1];\n    //\t\tvar bx:number = positions[id1];\n    //\t\tvar by:number = positions[id1 + 1];\n    //\t\tvar cx:number = positions[id2];\n    //\t\tvar cy:number = positions[id2 + 1];\n    //\n    //\t\tvar curvex:number = curves[id0 * curveDim];\n    //\t\tvar az:number = positions[id0 * posDim + 2];\n    //\n    //\t\t//console.log(ax, ay, bx, by, cx, cy);\n    //\n    //\t\t//from a to p\n    //\t\tvar dx:number = ax - p.x;\n    //\t\tvar dy:number = ay - p.y;\n    //\n    //\t\t//edge normal (a-b)\n    //\t\tvar nx:number = by - ay;\n    //\t\tvar ny:number = -(bx - ax);\n    //\n    //\t\t//console.log(ax,ay,bx,by,cx,cy);\n    //\n    //\t\tvar dot:number = (dx * nx) + (dy * ny);\n    //\t\t//console.log(\"dot a\",dot);\n    //\t\tif (dot > 0)\n    //\t\t\tcontinue;\n    //\n    //\t\tdx = bx - p.x;\n    //\t\tdy = by - p.y;\n    //\t\tnx = cy - by;\n    //\t\tny = -(cx - bx);\n    //\n    //\t\tdot = (dx * nx) + (dy * ny);\n    //\t\t//console.log(\"dot b\",dot);\n    //\t\tif (dot > 0)\n    //\t\t\tcontinue;\n    //\n    //\t\tdx = cx - p.x;\n    //\t\tdy = cy - p.y;\n    //\t\tnx = ay - cy;\n    //\t\tny = -(ax - cx);\n    //\n    //\t\tdot = (dx * nx) + (dy * ny);\n    //\t\t//console.log(\"dot c\",dot);\n    //\t\tif (dot > 0)\n    //\t\t\tcontinue;\n    //\n    //\t\t//check if not solid\n    //\t\tif (curvex != 2) {\n    //\n    //\t\t\tvar v0x:number = bx - ax;\n    //\t\t\tvar v0y:number = by - ay;\n    //\t\t\tvar v1x:number = cx - ax;\n    //\t\t\tvar v1y:number = cy - ay;\n    //\t\t\tvar v2x:number = p.x - ax;\n    //\t\t\tvar v2y:number = p.y - ay;\n    //\n    //\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n    //\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n    //\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n    //\t\t\tvar u:number = 1 - v - w;\n    //\n    //\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n    //\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n    //\n    //\t\t\tvar d:number = uu * uu - vv;\n    //\n    //\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n    //\t\t\t\tcontinue;\n    //\t\t}\n    //\t\t//TODO optimize away this pointless check as the distance is always the same\n    //\t\t//also this stuff should only be calculated right before the return and not for each hit\n    //\t\tif (distance < shortestCollisionDistance) {\n    //\t\t\tshortestCollisionDistance = distance;\n    //\t\t\tcollisionCurveIndex = index/3;\n    //\t\t\tpickingCollision.rayEntryDistance = distance;\n    //\t\t\tpickingCollision.localPosition = p;\n    //\t\t\tpickingCollision.localNormal = new Vector3D(0, 0, 1);\n    //\t\t\tpickingCollision.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n    //\t\t\tpickingCollision.index = index;\n    //\t\t\t//\t\t\t\t\t\tpickingCollision.elementIndex = this.pGetSpriteGraphicIndex(renderable);\n    //\n    //\t\t\t// if not looking for best hit, first found will do...\n    //\t\t\tif (!this._findClosestCollision)\n    //\t\t\t\treturn true;\n    //\t\t}\n    //\t}\n    //\n    //\tif (collisionCurveIndex >= 0)\n    //\t\treturn true;\n    //\n    //\treturn false;\n    //}\n    /**\n     * Tests a <code>LineElements</code> object for a collision with the picking ray.\n     *\n     * @param triangleElements\n     * @param material\n     * @param pickingCollision\n     * @returns {boolean}\n     */\n    JSPickingCollider.prototype.testLineCollision = function (lineElements, material, pickingCollision) {\n        return false;\n    };\n    return JSPickingCollider;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = JSPickingCollider;\n\n},{\"awayjs-core/lib/geom/Point\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/pick/PickingCollision\":[function(require,module,exports){\n\"use strict\";\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollision\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollision\n */\nvar PickingCollision = (function () {\n    /**\n     * Creates a new <code>PickingCollision</code> object.\n     *\n     * @param entity The entity to which this collision object belongs.\n     */\n    function PickingCollision(entity) {\n        this.entity = entity;\n    }\n    return PickingCollision;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PickingCollision;\n\n},{}],\"awayjs-display/lib/pick/RaycastPicker\":[function(require,module,exports){\n\"use strict\";\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual renderable objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nvar RaycastPicker = (function () {\n    /**\n     * Creates a new <code>RaycastPicker</code> object.\n     *\n     * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n     * or simply returns the first collision encountered. Defaults to false.\n     */\n    function RaycastPicker(findClosestCollision) {\n        if (findClosestCollision === void 0) { findClosestCollision = false; }\n        this._entities = new Array();\n        /**\n         * @inheritDoc\n         */\n        this.onlyMouseEnabled = true;\n        this._findClosestCollision = findClosestCollision;\n    }\n    /**\n     * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n     *\n     * @param node The Partition3DNode object to frustum-test.\n     */\n    RaycastPicker.prototype.enterNode = function (node) {\n        return node.isIntersectingRay(this._rayPosition, this._rayDirection);\n    };\n    /**\n     * @inheritDoc\n     */\n    RaycastPicker.prototype.getViewCollision = function (x, y, view) {\n        this._x = x;\n        this._y = y;\n        this._view = view;\n        //update ray\n        var rayPosition = view.unproject(x, y, 0);\n        var rayDirection = view.unproject(x, y, 1).subtract(rayPosition);\n        return this.getSceneCollision(rayPosition, rayDirection, view.scene);\n    };\n    /**\n     * @inheritDoc\n     */\n    RaycastPicker.prototype.getSceneCollision = function (rayPosition, rayDirection, scene) {\n        this._rayPosition = rayPosition;\n        this._rayDirection = rayDirection;\n        // collect entities to test\n        scene.traversePartitions(this);\n        //early out if no collisions detected\n        if (!this._entities.length)\n            return null;\n        var collision = this.getPickingCollision();\n        //discard entities\n        this._entities.length = 0;\n        return collision;\n    };\n    //\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollision\n    //\t\t{\n    //\t\t\tthis._numRenderables = 0;\n    //\n    //\t\t\tvar renderable:IEntity;\n    //\t\t\tvar l:number = entities.length;\n    //\n    //\t\t\tfor (var c:number = 0; c < l; c++) {\n    //\t\t\t\trenderable = entities[c];\n    //\n    //\t\t\t\tif (renderable.isIntersectingRay(position, direction))\n    //\t\t\t\t\tthis._renderables[this._numRenderables++] = renderable;\n    //\t\t\t}\n    //\n    //\t\t\treturn this.getPickingCollision(this._raycastCollector);\n    //\t\t}\n    RaycastPicker.prototype.setIgnoreList = function (entities) {\n        this._ignoredEntities = entities;\n    };\n    RaycastPicker.prototype.isIgnored = function (entity) {\n        if (this.onlyMouseEnabled && !entity._iIsMouseEnabled())\n            return true;\n        if (this._ignoredEntities) {\n            var len = this._ignoredEntities.length;\n            for (var i = 0; i < len; i++)\n                if (this._ignoredEntities[i] == entity)\n                    return true;\n        }\n        return false;\n    };\n    RaycastPicker.prototype.sortOnNearT = function (entity1, entity2) {\n        return entity1._iPickingCollision.rayEntryDistance > entity2._iPickingCollision.rayEntryDistance ? 1 : -1;\n    };\n    RaycastPicker.prototype.getPickingCollision = function () {\n        // Sort entities from closest to furthest to reduce tests.\n        this._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n        // ---------------------------------------------------------------------\n        // Evaluate triangle collisions when needed.\n        // Replaces collision data provided by bounds collider with more precise data.\n        // ---------------------------------------------------------------------\n        this._bestCollision = null;\n        var entity;\n        var len = this._entities.length;\n        for (var i = 0; i < len; i++) {\n            entity = this._entities[i];\n            this._testCollision = entity._iPickingCollision;\n            if (this._bestCollision == null || this._testCollision.rayEntryDistance < this._bestCollision.rayEntryDistance) {\n                this._testCollider = entity.pickingCollider;\n                if (this._testCollider) {\n                    this._testCollision.rayEntryDistance = Number.MAX_VALUE;\n                    entity._acceptTraverser(this);\n                    // If a collision exists, update the collision data and stop all checks.\n                    if (this._bestCollision && !this._findClosestCollision)\n                        break;\n                }\n                else if (!this._testCollision.rayOriginIsInsideBounds) {\n                    // A bounds collision with no picking collider stops all checks.\n                    // Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n                    // to enable the detection of a corresponsding triangle collision.\n                    // Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n                    // if it has been established that there is NO triangle collider to test\n                    this._bestCollision = this._testCollision;\n                    break;\n                }\n            }\n        }\n        if (this._bestCollision)\n            this.updatePosition(this._bestCollision);\n        return this._bestCollision;\n    };\n    RaycastPicker.prototype.updatePosition = function (pickingCollision) {\n        var collisionPos = pickingCollision.position || (pickingCollision.position = new Vector3D_1.default());\n        var rayDir = pickingCollision.rayDirection;\n        var rayPos = pickingCollision.rayPosition;\n        var t = pickingCollision.rayEntryDistance;\n        collisionPos.x = rayPos.x + t * rayDir.x;\n        collisionPos.y = rayPos.y + t * rayDir.y;\n        collisionPos.z = rayPos.z + t * rayDir.z;\n    };\n    RaycastPicker.prototype.dispose = function () {\n        //TODO\n    };\n    /**\n     *\n     * @param entity\n     */\n    RaycastPicker.prototype.applyEntity = function (entity) {\n        if (!this.isIgnored(entity))\n            this._entities.push(entity);\n    };\n    /**\n     *\n     * @param entity\n     */\n    RaycastPicker.prototype.applyRenderable = function (renderable) {\n        if (renderable._iTestCollision(this._testCollision, this._testCollider))\n            this._bestCollision = this._testCollision;\n    };\n    /**\n     *\n     * @param entity\n     */\n    RaycastPicker.prototype.applyDirectionalLight = function (entity) {\n        //don't do anything here\n    };\n    /**\n     *\n     * @param entity\n     */\n    RaycastPicker.prototype.applyLightProbe = function (entity) {\n        //don't do anything here\n    };\n    /**\n     *\n     * @param entity\n     */\n    RaycastPicker.prototype.applyPointLight = function (entity) {\n        //don't do anything here\n    };\n    /**\n     *\n     * @param entity\n     */\n    RaycastPicker.prototype.applySkybox = function (entity) {\n        //don't do anything here\n    };\n    return RaycastPicker;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RaycastPicker;\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/pick\":[function(require,module,exports){\n\"use strict\";\nvar JSPickingCollider_1 = require(\"awayjs-display/lib/pick/JSPickingCollider\");\nexports.JSPickingCollider = JSPickingCollider_1.default;\nvar PickingCollision_1 = require(\"awayjs-display/lib/pick/PickingCollision\");\nexports.PickingCollision = PickingCollision_1.default;\nvar RaycastPicker_1 = require(\"awayjs-display/lib/pick/RaycastPicker\");\nexports.RaycastPicker = RaycastPicker_1.default;\n\n},{\"awayjs-display/lib/pick/JSPickingCollider\":\"awayjs-display/lib/pick/JSPickingCollider\",\"awayjs-display/lib/pick/PickingCollision\":\"awayjs-display/lib/pick/PickingCollision\",\"awayjs-display/lib/pick/RaycastPicker\":\"awayjs-display/lib/pick/RaycastPicker\"}],\"awayjs-display/lib/prefabs/PrefabBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nvar PrefabBase = (function (_super) {\n    __extends(PrefabBase, _super);\n    //\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n    /**\n     * Creates a new PrefabBase object.\n     */\n    function PrefabBase() {\n        _super.call(this);\n        this._pObjects = new Array();\n    }\n    /**\n     * Returns a display object generated from this prefab\n     */\n    PrefabBase.prototype.getNewObject = function () {\n        var object = this._pCreateObject();\n        this._pObjects.push(object);\n        return object;\n    };\n    //\t\tpublic getNewBatchObject():BatchObject\n    //\t\t{\n    //\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n    //\n    //\t\t\tthis._pBatchObjects.push(object);\n    //\n    //\t\t\treturn object;\n    //\t\t}\n    PrefabBase.prototype._pCreateObject = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    PrefabBase.prototype._iValidate = function () {\n        // To be overridden when necessary\n    };\n    return PrefabBase;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PrefabBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/prefabs/PrimitiveCapsulePrefab\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ElementsType_1 = require(\"awayjs-display/lib/graphics/ElementsType\");\nvar PrimitivePrefabBase_1 = require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n/**\n * A Capsule primitive sprite.\n */\nvar PrimitiveCapsulePrefab = (function (_super) {\n    __extends(PrimitiveCapsulePrefab, _super);\n    /**\n     * Creates a new Capsule object.\n     * @param radius The radius of the capsule.\n     * @param height The height of the capsule.\n     * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n     * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n     * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n     */\n    function PrimitiveCapsulePrefab(material, elementsType, radius, height, segmentsW, segmentsH, yUp) {\n        if (material === void 0) { material = null; }\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\n        if (radius === void 0) { radius = 50; }\n        if (height === void 0) { height = 100; }\n        if (segmentsW === void 0) { segmentsW = 16; }\n        if (segmentsH === void 0) { segmentsH = 15; }\n        if (yUp === void 0) { yUp = true; }\n        _super.call(this, material, elementsType);\n        this._numVertices = 0;\n        this._radius = radius;\n        this._height = height;\n        this._segmentsW = segmentsW;\n        this._segmentsH = (segmentsH % 2 == 0) ? segmentsH + 1 : segmentsH;\n        this._yUp = yUp;\n    }\n    Object.defineProperty(PrimitiveCapsulePrefab.prototype, \"radius\", {\n        /**\n         * The radius of the capsule.\n         */\n        get: function () {\n            return this._radius;\n        },\n        set: function (value) {\n            this._radius = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCapsulePrefab.prototype, \"height\", {\n        /**\n         * The height of the capsule.\n         */\n        get: function () {\n            return this._height;\n        },\n        set: function (value) {\n            this._height = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCapsulePrefab.prototype, \"segmentsW\", {\n        /**\n         * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n         */\n        get: function () {\n            return this._segmentsW;\n        },\n        set: function (value) {\n            this._segmentsW = value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCapsulePrefab.prototype, \"segmentsH\", {\n        /**\n         * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n         */\n        get: function () {\n            return this._segmentsH;\n        },\n        set: function (value) {\n            this._segmentsH = (value % 2 == 0) ? value + 1 : value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCapsulePrefab.prototype, \"yUp\", {\n        /**\n         * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n         */\n        get: function () {\n            return this._yUp;\n        },\n        set: function (value) {\n            this._yUp = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    PrimitiveCapsulePrefab.prototype._pBuildGraphics = function (target, elementsType) {\n        var indices;\n        var positions;\n        var normals;\n        var tangents;\n        var i;\n        var j;\n        var triIndex = 0;\n        var index = 0;\n        var startIndex;\n        var comp1, comp2, t1, t2;\n        var numIndices = 0;\n        if (elementsType == ElementsType_1.default.TRIANGLE) {\n            var triangleGraphics = target;\n            // evaluate target number of vertices, triangles and indices\n            this._numVertices = (this._segmentsH + 1) * (this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n            numIndices = (this._segmentsH - 1) * this._segmentsW * 6; // each level has segmentH quads, each of 2 triangles\n            // need to initialize raw arrays or can be reused?\n            if (this._numVertices == triangleGraphics.numVertices) {\n                indices = triangleGraphics.indices.get(triangleGraphics.numElements);\n                positions = triangleGraphics.positions.get(this._numVertices);\n                normals = triangleGraphics.normals.get(this._numVertices);\n                tangents = triangleGraphics.tangents.get(this._numVertices);\n            }\n            else {\n                indices = new Uint16Array(numIndices);\n                positions = new Float32Array(this._numVertices * 3);\n                normals = new Float32Array(this._numVertices * 3);\n                tangents = new Float32Array(this._numVertices * 3);\n                this._pInvalidateUVs();\n            }\n            for (j = 0; j <= this._segmentsH; ++j) {\n                var horangle = Math.PI * j / this._segmentsH;\n                var z = -this._radius * Math.cos(horangle);\n                var ringradius = this._radius * Math.sin(horangle);\n                startIndex = index;\n                for (i = 0; i <= this._segmentsW; ++i) {\n                    var verangle = 2 * Math.PI * i / this._segmentsW;\n                    var x = ringradius * Math.cos(verangle);\n                    var offset = j > this._segmentsH / 2 ? this._height / 2 : -this._height / 2;\n                    var y = ringradius * Math.sin(verangle);\n                    var normLen = 1 / Math.sqrt(x * x + y * y + z * z);\n                    var tanLen = Math.sqrt(y * y + x * x);\n                    if (this._yUp) {\n                        t1 = 0;\n                        t2 = tanLen > .007 ? x / tanLen : 0;\n                        comp1 = -z;\n                        comp2 = y;\n                    }\n                    else {\n                        t1 = tanLen > .007 ? x / tanLen : 0;\n                        t2 = 0;\n                        comp1 = y;\n                        comp2 = z;\n                    }\n                    if (i == this._segmentsW) {\n                        positions[index] = positions[startIndex];\n                        positions[index + 1] = positions[startIndex + 1];\n                        positions[index + 2] = positions[startIndex + 2];\n                        normals[index] = (normals[startIndex] + (x * normLen)) * .5;\n                        normals[index + 1] = (normals[startIndex + 1] + (comp1 * normLen)) * .5;\n                        normals[index + 2] = (normals[startIndex + 2] + (comp2 * normLen)) * .5;\n                        tangents[index] = (tangents[startIndex] + (tanLen > .007 ? -y / tanLen : 1)) * .5;\n                        tangents[index + 1] = (tangents[startIndex + 1] + t1) * .5;\n                        tangents[index + 2] = (tangents[startIndex + 2] + t2) * .5;\n                    }\n                    else {\n                        // vertex\n                        positions[index] = x;\n                        positions[index + 1] = (this._yUp) ? comp1 - offset : comp1;\n                        positions[index + 2] = (this._yUp) ? comp2 : comp2 + offset;\n                        // normal\n                        normals[index] = x * normLen;\n                        normals[index + 1] = comp1 * normLen;\n                        normals[index + 2] = comp2 * normLen;\n                        // tangent\n                        tangents[index] = tanLen > .007 ? -y / tanLen : 1;\n                        tangents[index + 1] = t1;\n                        tangents[index + 2] = t2;\n                    }\n                    if (i > 0 && j > 0) {\n                        var a = (this._segmentsW + 1) * j + i;\n                        var b = (this._segmentsW + 1) * j + i - 1;\n                        var c = (this._segmentsW + 1) * (j - 1) + i - 1;\n                        var d = (this._segmentsW + 1) * (j - 1) + i;\n                        if (j == this._segmentsH) {\n                            positions[index] = positions[startIndex];\n                            positions[index + 1] = positions[startIndex + 1];\n                            positions[index + 2] = positions[startIndex + 2];\n                            indices[triIndex++] = a;\n                            indices[triIndex++] = c;\n                            indices[triIndex++] = d;\n                        }\n                        else if (j == 1) {\n                            indices[triIndex++] = a;\n                            indices[triIndex++] = b;\n                            indices[triIndex++] = c;\n                        }\n                        else {\n                            indices[triIndex++] = a;\n                            indices[triIndex++] = b;\n                            indices[triIndex++] = c;\n                            indices[triIndex++] = a;\n                            indices[triIndex++] = c;\n                            indices[triIndex++] = d;\n                        }\n                    }\n                    index += 3;\n                }\n            }\n            // build real data from raw data\n            triangleGraphics.setIndices(indices);\n            triangleGraphics.setPositions(positions);\n            triangleGraphics.setNormals(normals);\n            triangleGraphics.setTangents(tangents);\n        }\n        else if (elementsType == ElementsType_1.default.LINE) {\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PrimitiveCapsulePrefab.prototype._pBuildUVs = function (target, elementsType) {\n        var i, j;\n        var uvs;\n        if (elementsType == ElementsType_1.default.TRIANGLE) {\n            var triangleGraphics = target;\n            // need to initialize raw array or can be reused?\n            if (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\n                uvs = triangleGraphics.uvs.get(this._numVertices);\n            }\n            else {\n                uvs = new Float32Array(this._numVertices * 2);\n            }\n            // current uv component index\n            var index = 0;\n            // surface\n            for (j = 0; j <= this._segmentsH; ++j) {\n                for (i = 0; i <= this._segmentsW; ++i) {\n                    // revolution vertex\n                    uvs[index++] = (i / this._segmentsW) * this._scaleU;\n                    uvs[index++] = (j / this._segmentsH) * this._scaleV;\n                }\n            }\n            // build real data from raw data\n            triangleGraphics.setUVs(uvs);\n        }\n        else if (elementsType == ElementsType_1.default.LINE) {\n        }\n    };\n    return PrimitiveCapsulePrefab;\n}(PrimitivePrefabBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PrimitiveCapsulePrefab;\n\n},{\"awayjs-display/lib/graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"awayjs-display/lib/prefabs/PrimitivePrefabBase\":\"awayjs-display/lib/prefabs/PrimitivePrefabBase\"}],\"awayjs-display/lib/prefabs/PrimitiveConePrefab\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar PrimitiveCylinderPrefab_1 = require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n/**\n * A UV Cone primitive sprite.\n */\nvar PrimitiveConePrefab = (function (_super) {\n    __extends(PrimitiveConePrefab, _super);\n    /**\n     * Creates a new Cone object.\n     * @param radius The radius of the bottom end of the cone\n     * @param height The height of the cone\n     * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n     * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n     * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n     */\n    function PrimitiveConePrefab(material, elementsType, radius, height, segmentsW, segmentsH, closed, yUp) {\n        if (material === void 0) { material = null; }\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\n        if (radius === void 0) { radius = 50; }\n        if (height === void 0) { height = 100; }\n        if (segmentsW === void 0) { segmentsW = 16; }\n        if (segmentsH === void 0) { segmentsH = 1; }\n        if (closed === void 0) { closed = true; }\n        if (yUp === void 0) { yUp = true; }\n        _super.call(this, material, elementsType, 0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n    }\n    Object.defineProperty(PrimitiveConePrefab.prototype, \"radius\", {\n        /**\n         * The radius of the bottom end of the cone.\n         */\n        get: function () {\n            return this._pBottomRadius;\n        },\n        set: function (value) {\n            this._pBottomRadius = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PrimitiveConePrefab;\n}(PrimitiveCylinderPrefab_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PrimitiveConePrefab;\n\n},{\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\":\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\"}],\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ElementsType_1 = require(\"awayjs-display/lib/graphics/ElementsType\");\nvar PrimitivePrefabBase_1 = require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n/**\n * A Cube primitive prefab.\n */\nvar PrimitiveCubePrefab = (function (_super) {\n    __extends(PrimitiveCubePrefab, _super);\n    /**\n     * Creates a new Cube object.\n     * @param width The size of the cube along its X-axis.\n     * @param height The size of the cube along its Y-axis.\n     * @param depth The size of the cube along its Z-axis.\n     * @param segmentsW The number of segments that make up the cube along the X-axis.\n     * @param segmentsH The number of segments that make up the cube along the Y-axis.\n     * @param segmentsD The number of segments that make up the cube along the Z-axis.\n     * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n     */\n    function PrimitiveCubePrefab(material, elementsType, width, height, depth, segmentsW, segmentsH, segmentsD, tile6) {\n        if (material === void 0) { material = null; }\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\n        if (width === void 0) { width = 100; }\n        if (height === void 0) { height = 100; }\n        if (depth === void 0) { depth = 100; }\n        if (segmentsW === void 0) { segmentsW = 1; }\n        if (segmentsH === void 0) { segmentsH = 1; }\n        if (segmentsD === void 0) { segmentsD = 1; }\n        if (tile6 === void 0) { tile6 = true; }\n        _super.call(this, material, elementsType);\n        this._width = width;\n        this._height = height;\n        this._depth = depth;\n        this._segmentsW = segmentsW;\n        this._segmentsH = segmentsH;\n        this._segmentsD = segmentsD;\n        this._tile6 = tile6;\n    }\n    Object.defineProperty(PrimitiveCubePrefab.prototype, \"width\", {\n        /**\n         * The size of the cube along its X-axis.\n         */\n        get: function () {\n            return this._width;\n        },\n        set: function (value) {\n            this._width = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCubePrefab.prototype, \"height\", {\n        /**\n         * The size of the cube along its Y-axis.\n         */\n        get: function () {\n            return this._height;\n        },\n        set: function (value) {\n            this._height = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCubePrefab.prototype, \"depth\", {\n        /**\n         * The size of the cube along its Z-axis.\n         */\n        get: function () {\n            return this._depth;\n        },\n        set: function (value) {\n            this._depth = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCubePrefab.prototype, \"tile6\", {\n        /**\n         * The type of uv mapping to use. When false, the entire image is mapped on each face.\n         * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n         * Reading the tiles from left to right, top to bottom they represent the faces of the\n         * cube in the following order: bottom, top, back, left, front, right. This creates\n         * several shared edges (between the top, front, left and right faces) which simplifies\n         * texture painting.\n         */\n        get: function () {\n            return this._tile6;\n        },\n        set: function (value) {\n            this._tile6 = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCubePrefab.prototype, \"segmentsW\", {\n        /**\n         * The number of segments that make up the cube along the X-axis. Defaults to 1.\n         */\n        get: function () {\n            return this._segmentsW;\n        },\n        set: function (value) {\n            this._segmentsW = value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCubePrefab.prototype, \"segmentsH\", {\n        /**\n         * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n         */\n        get: function () {\n            return this._segmentsH;\n        },\n        set: function (value) {\n            this._segmentsH = value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCubePrefab.prototype, \"segmentsD\", {\n        /**\n         * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n         */\n        get: function () {\n            return this._segmentsD;\n        },\n        set: function (value) {\n            this._segmentsD = value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    PrimitiveCubePrefab.prototype._pBuildGraphics = function (target, elementsType) {\n        var indices;\n        var positions;\n        var normals;\n        var tangents;\n        var tl, tr, bl, br;\n        var i, j, inc = 0;\n        var vidx, fidx; // indices\n        var hw, hh, hd; // halves\n        var dw, dh, dd; // deltas\n        var outer_pos;\n        // half cube dimensions\n        hw = this._width / 2;\n        hh = this._height / 2;\n        hd = this._depth / 2;\n        if (elementsType == ElementsType_1.default.TRIANGLE) {\n            var triangleGraphics = target;\n            var numVertices = ((this._segmentsW + 1) * (this._segmentsH + 1) + (this._segmentsW + 1) * (this._segmentsD + 1) + (this._segmentsH + 1) * (this._segmentsD + 1)) * 2;\n            var numIndices = ((this._segmentsW * this._segmentsH + this._segmentsW * this._segmentsD + this._segmentsH * this._segmentsD) * 12);\n            if (numVertices == triangleGraphics.numVertices && triangleGraphics.indices != null) {\n                indices = triangleGraphics.indices.get(triangleGraphics.numElements);\n                positions = triangleGraphics.positions.get(numVertices);\n                normals = triangleGraphics.normals.get(numVertices);\n                tangents = triangleGraphics.tangents.get(numVertices);\n            }\n            else {\n                indices = new Uint16Array(numIndices);\n                positions = new Float32Array(numVertices * 3);\n                normals = new Float32Array(numVertices * 3);\n                tangents = new Float32Array(numVertices * 3);\n                this._pInvalidateUVs();\n            }\n            vidx = 0;\n            fidx = 0;\n            // Segment dimensions\n            dw = this._width / this._segmentsW;\n            dh = this._height / this._segmentsH;\n            dd = this._depth / this._segmentsD;\n            for (i = 0; i <= this._segmentsW; i++) {\n                outer_pos = -hw + i * dw;\n                for (j = 0; j <= this._segmentsH; j++) {\n                    // front\n                    positions[vidx] = outer_pos;\n                    positions[vidx + 1] = -hh + j * dh;\n                    positions[vidx + 2] = -hd;\n                    normals[vidx] = 0;\n                    normals[vidx + 1] = 0;\n                    normals[vidx + 2] = -1;\n                    tangents[vidx] = 1;\n                    tangents[vidx + 1] = 0;\n                    tangents[vidx + 2] = 0;\n                    vidx += 3;\n                    // back\n                    positions[vidx] = outer_pos;\n                    positions[vidx + 1] = -hh + j * dh;\n                    positions[vidx + 2] = hd;\n                    normals[vidx] = 0;\n                    normals[vidx + 1] = 0;\n                    normals[vidx + 2] = 1;\n                    tangents[vidx] = -1;\n                    tangents[vidx + 1] = 0;\n                    tangents[vidx + 2] = 0;\n                    vidx += 3;\n                    if (i && j) {\n                        tl = 2 * ((i - 1) * (this._segmentsH + 1) + (j - 1));\n                        tr = 2 * (i * (this._segmentsH + 1) + (j - 1));\n                        bl = tl + 2;\n                        br = tr + 2;\n                        indices[fidx++] = tl;\n                        indices[fidx++] = bl;\n                        indices[fidx++] = br;\n                        indices[fidx++] = tl;\n                        indices[fidx++] = br;\n                        indices[fidx++] = tr;\n                        indices[fidx++] = tr + 1;\n                        indices[fidx++] = br + 1;\n                        indices[fidx++] = bl + 1;\n                        indices[fidx++] = tr + 1;\n                        indices[fidx++] = bl + 1;\n                        indices[fidx++] = tl + 1;\n                    }\n                }\n            }\n            inc += 2 * (this._segmentsW + 1) * (this._segmentsH + 1);\n            for (i = 0; i <= this._segmentsW; i++) {\n                outer_pos = -hw + i * dw;\n                for (j = 0; j <= this._segmentsD; j++) {\n                    // top\n                    positions[vidx] = outer_pos;\n                    positions[vidx + 1] = hh;\n                    positions[vidx + 2] = -hd + j * dd;\n                    normals[vidx] = 0;\n                    normals[vidx + 1] = 1;\n                    normals[vidx + 2] = 0;\n                    tangents[vidx] = 1;\n                    tangents[vidx + 1] = 0;\n                    tangents[vidx + 2] = 0;\n                    vidx += 3;\n                    // bottom\n                    positions[vidx] = outer_pos;\n                    positions[vidx + 1] = -hh;\n                    positions[vidx + 2] = -hd + j * dd;\n                    normals[vidx] = 0;\n                    normals[vidx + 1] = -1;\n                    normals[vidx + 2] = 0;\n                    tangents[vidx] = 1;\n                    tangents[vidx + 1] = 0;\n                    tangents[vidx + 2] = 0;\n                    vidx += 3;\n                    if (i && j) {\n                        tl = inc + 2 * ((i - 1) * (this._segmentsD + 1) + (j - 1));\n                        tr = inc + 2 * (i * (this._segmentsD + 1) + (j - 1));\n                        bl = tl + 2;\n                        br = tr + 2;\n                        indices[fidx++] = tl;\n                        indices[fidx++] = bl;\n                        indices[fidx++] = br;\n                        indices[fidx++] = tl;\n                        indices[fidx++] = br;\n                        indices[fidx++] = tr;\n                        indices[fidx++] = tr + 1;\n                        indices[fidx++] = br + 1;\n                        indices[fidx++] = bl + 1;\n                        indices[fidx++] = tr + 1;\n                        indices[fidx++] = bl + 1;\n                        indices[fidx++] = tl + 1;\n                    }\n                }\n            }\n            inc += 2 * (this._segmentsW + 1) * (this._segmentsD + 1);\n            for (i = 0; i <= this._segmentsD; i++) {\n                outer_pos = hd - i * dd;\n                for (j = 0; j <= this._segmentsH; j++) {\n                    // left\n                    positions[vidx] = -hw;\n                    positions[vidx + 1] = -hh + j * dh;\n                    positions[vidx + 2] = outer_pos;\n                    normals[vidx] = -1;\n                    normals[vidx + 1] = 0;\n                    normals[vidx + 2] = 0;\n                    tangents[vidx] = 0;\n                    tangents[vidx + 1] = 0;\n                    tangents[vidx + 2] = -1;\n                    vidx += 3;\n                    // right\n                    positions[vidx] = hw;\n                    positions[vidx + 1] = -hh + j * dh;\n                    positions[vidx + 2] = outer_pos;\n                    normals[vidx] = 1;\n                    normals[vidx + 1] = 0;\n                    normals[vidx + 2] = 0;\n                    tangents[vidx] = 0;\n                    tangents[vidx + 1] = 0;\n                    tangents[vidx + 2] = 1;\n                    vidx += 3;\n                    if (i && j) {\n                        tl = inc + 2 * ((i - 1) * (this._segmentsH + 1) + (j - 1));\n                        tr = inc + 2 * (i * (this._segmentsH + 1) + (j - 1));\n                        bl = tl + 2;\n                        br = tr + 2;\n                        indices[fidx++] = tl;\n                        indices[fidx++] = bl;\n                        indices[fidx++] = br;\n                        indices[fidx++] = tl;\n                        indices[fidx++] = br;\n                        indices[fidx++] = tr;\n                        indices[fidx++] = tr + 1;\n                        indices[fidx++] = br + 1;\n                        indices[fidx++] = bl + 1;\n                        indices[fidx++] = tr + 1;\n                        indices[fidx++] = bl + 1;\n                        indices[fidx++] = tl + 1;\n                    }\n                }\n            }\n            triangleGraphics.setIndices(indices);\n            triangleGraphics.setPositions(positions);\n            triangleGraphics.setNormals(normals);\n            triangleGraphics.setTangents(tangents);\n        }\n        else if (elementsType == ElementsType_1.default.LINE) {\n            var lineGraphics = target;\n            var numSegments = this._segmentsH * 4 + this._segmentsW * 4 + this._segmentsD * 4;\n            var thickness;\n            positions = new Float32Array(numSegments * 6);\n            thickness = new Float32Array(numSegments);\n            vidx = 0;\n            fidx = 0;\n            //front/back face\n            for (i = 0; i < this._segmentsH; ++i) {\n                positions[vidx++] = -hw;\n                positions[vidx++] = i * this._height / this._segmentsH - hh;\n                positions[vidx++] = -hd;\n                positions[vidx++] = hw;\n                positions[vidx++] = i * this._height / this._segmentsH - hh;\n                positions[vidx++] = -hd;\n                thickness[fidx++] = 1;\n                positions[vidx++] = -hw;\n                positions[vidx++] = hh - i * this._height / this._segmentsH;\n                positions[vidx++] = hd;\n                positions[vidx++] = hw;\n                positions[vidx++] = hh - i * this._height / this._segmentsH;\n                positions[vidx++] = hd;\n                thickness[fidx++] = 1;\n            }\n            for (i = 0; i < this._segmentsW; ++i) {\n                positions[vidx++] = i * this._width / this._segmentsW - hw;\n                positions[vidx++] = -hh;\n                positions[vidx++] = -hd;\n                positions[vidx++] = i * this._width / this._segmentsW - hw;\n                positions[vidx++] = hh;\n                positions[vidx++] = -hd;\n                thickness[fidx++] = 1;\n                positions[vidx++] = hw - i * this._width / this._segmentsW;\n                positions[vidx++] = -hh;\n                positions[vidx++] = hd;\n                positions[vidx++] = hw - i * this._width / this._segmentsW;\n                positions[vidx++] = hh;\n                positions[vidx++] = hd;\n                thickness[fidx++] = 1;\n            }\n            //left/right face\n            for (i = 0; i < this._segmentsH; ++i) {\n                positions[vidx++] = -hw;\n                positions[vidx++] = i * this._height / this._segmentsH - hh;\n                positions[vidx++] = -hd;\n                positions[vidx++] = -hw;\n                positions[vidx++] = i * this._height / this._segmentsH - hh;\n                positions[vidx++] = hd;\n                thickness[fidx++] = 1;\n                positions[vidx++] = hw;\n                positions[vidx++] = hh - i * this._height / this._segmentsH;\n                positions[vidx++] = -hd;\n                positions[vidx++] = hw;\n                positions[vidx++] = hh - i * this._height / this._segmentsH;\n                positions[vidx++] = hd;\n                thickness[fidx++] = 1;\n            }\n            for (i = 0; i < this._segmentsD; ++i) {\n                positions[vidx++] = hw;\n                positions[vidx++] = -hh;\n                positions[vidx++] = i * this._depth / this._segmentsD - hd;\n                positions[vidx++] = hw;\n                positions[vidx++] = hh;\n                positions[vidx++] = i * this._depth / this._segmentsD - hd;\n                thickness[fidx++] = 1;\n                positions[vidx++] = -hw;\n                positions[vidx++] = -hh;\n                positions[vidx++] = hd - i * this._depth / this._segmentsD;\n                positions[vidx++] = -hw;\n                positions[vidx++] = hh;\n                positions[vidx++] = hd - i * this._depth / this._segmentsD;\n                thickness[fidx++] = 1;\n            }\n            //top/bottom face\n            for (i = 0; i < this._segmentsD; ++i) {\n                positions[vidx++] = -hw;\n                positions[vidx++] = -hh;\n                positions[vidx++] = hd - i * this._depth / this._segmentsD;\n                positions[vidx++] = hw;\n                positions[vidx++] = -hh;\n                positions[vidx++] = hd - i * this._depth / this._segmentsD;\n                thickness[fidx++] = 1;\n                positions[vidx++] = -hw;\n                positions[vidx++] = hh;\n                positions[vidx++] = i * this._depth / this._segmentsD - hd;\n                positions[vidx++] = hw;\n                positions[vidx++] = hh;\n                positions[vidx++] = i * this._depth / this._segmentsD - hd;\n                thickness[fidx++] = 1;\n            }\n            for (i = 0; i < this._segmentsW; ++i) {\n                positions[vidx++] = hw - i * this._width / this._segmentsW;\n                positions[vidx++] = -hh;\n                positions[vidx++] = -hd;\n                positions[vidx++] = hw - i * this._width / this._segmentsW;\n                positions[vidx++] = -hh;\n                positions[vidx++] = hd;\n                thickness[fidx++] = 1;\n                positions[vidx++] = i * this._width / this._segmentsW - hw;\n                positions[vidx++] = hh;\n                positions[vidx++] = -hd;\n                positions[vidx++] = i * this._width / this._segmentsW - hw;\n                positions[vidx++] = hh;\n                positions[vidx++] = hd;\n                thickness[fidx++] = 1;\n            }\n            // build real data from raw data\n            lineGraphics.setPositions(positions);\n            lineGraphics.setThickness(thickness);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PrimitiveCubePrefab.prototype._pBuildUVs = function (target, elementsType) {\n        var i, j, index;\n        var uvs;\n        var u_tile_dim, v_tile_dim;\n        var u_tile_step, v_tile_step;\n        var tl0u, tl0v;\n        var tl1u, tl1v;\n        var du, dv;\n        var numVertices;\n        if (elementsType == ElementsType_1.default.TRIANGLE) {\n            numVertices = ((this._segmentsW + 1) * (this._segmentsH + 1) + (this._segmentsW + 1) * (this._segmentsD + 1) + (this._segmentsH + 1) * (this._segmentsD + 1)) * 2;\n            var triangleGraphics = target;\n            if (numVertices == triangleGraphics.numVertices && triangleGraphics.uvs != null) {\n                uvs = triangleGraphics.uvs.get(numVertices);\n            }\n            else {\n                uvs = new Float32Array(numVertices * 2);\n            }\n            if (this._tile6) {\n                u_tile_dim = u_tile_step = 1 / 3;\n                v_tile_dim = v_tile_step = 1 / 2;\n            }\n            else {\n                u_tile_dim = v_tile_dim = 1;\n                u_tile_step = v_tile_step = 0;\n            }\n            // Create planes two and two, the same way that they were\n            // constructed in the buildGraphics() function. First calculate\n            // the top-left UV coordinate for both planes, and then loop\n            // over the points, calculating the UVs from these numbers.\n            // When tile6 is true, the layout is as follows:\n            //       .-----.-----.-----. (1,1)\n            //       | Bot |  T  | Bak |\n            //       |-----+-----+-----|\n            //       |  L  |  F  |  R  |\n            // (0,0)'-----'-----'-----'\n            index = 0;\n            // FRONT / BACK\n            tl0u = 1 * u_tile_step;\n            tl0v = 1 * v_tile_step;\n            tl1u = 2 * u_tile_step;\n            tl1v = 0 * v_tile_step;\n            du = u_tile_dim / this._segmentsW;\n            dv = v_tile_dim / this._segmentsH;\n            for (i = 0; i <= this._segmentsW; i++) {\n                for (j = 0; j <= this._segmentsH; j++) {\n                    uvs[index++] = (tl0u + i * du) * this._scaleU;\n                    uvs[index++] = (tl0v + (v_tile_dim - j * dv)) * this._scaleV;\n                    uvs[index++] = (tl1u + (u_tile_dim - i * du)) * this._scaleU;\n                    uvs[index++] = (tl1v + (v_tile_dim - j * dv)) * this._scaleV;\n                }\n            }\n            // TOP / BOTTOM\n            tl0u = 1 * u_tile_step;\n            tl0v = 0 * v_tile_step;\n            tl1u = 0 * u_tile_step;\n            tl1v = 0 * v_tile_step;\n            du = u_tile_dim / this._segmentsW;\n            dv = v_tile_dim / this._segmentsD;\n            for (i = 0; i <= this._segmentsW; i++) {\n                for (j = 0; j <= this._segmentsD; j++) {\n                    uvs[index++] = (tl0u + i * du) * this._scaleU;\n                    uvs[index++] = (tl0v + (v_tile_dim - j * dv)) * this._scaleV;\n                    uvs[index++] = (tl1u + i * du) * this._scaleU;\n                    uvs[index++] = (tl1v + j * dv) * this._scaleV;\n                }\n            }\n            // LEFT / RIGHT\n            tl0u = 0 * u_tile_step;\n            tl0v = 1 * v_tile_step;\n            tl1u = 2 * u_tile_step;\n            tl1v = 1 * v_tile_step;\n            du = u_tile_dim / this._segmentsD;\n            dv = v_tile_dim / this._segmentsH;\n            for (i = 0; i <= this._segmentsD; i++) {\n                for (j = 0; j <= this._segmentsH; j++) {\n                    uvs[index++] = (tl0u + i * du) * this._scaleU;\n                    uvs[index++] = (tl0v + (v_tile_dim - j * dv)) * this._scaleV;\n                    uvs[index++] = (tl1u + (u_tile_dim - i * du)) * this._scaleU;\n                    uvs[index++] = (tl1v + (v_tile_dim - j * dv)) * this._scaleV;\n                }\n            }\n            triangleGraphics.setUVs(uvs);\n        }\n        else if (elementsType == ElementsType_1.default.LINE) {\n        }\n    };\n    return PrimitiveCubePrefab;\n}(PrimitivePrefabBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PrimitiveCubePrefab;\n\n},{\"awayjs-display/lib/graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"awayjs-display/lib/prefabs/PrimitivePrefabBase\":\"awayjs-display/lib/prefabs/PrimitivePrefabBase\"}],\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ElementsType_1 = require(\"awayjs-display/lib/graphics/ElementsType\");\nvar PrimitivePrefabBase_1 = require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n/**\n * A Cylinder primitive sprite.\n */\nvar PrimitiveCylinderPrefab = (function (_super) {\n    __extends(PrimitiveCylinderPrefab, _super);\n    /**\n     * Creates a new Cylinder object.\n     * @param topRadius The radius of the top end of the cylinder.\n     * @param bottomRadius The radius of the bottom end of the cylinder\n     * @param height The radius of the bottom end of the cylinder\n     * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n     * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n     * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n     * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n     * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n     */\n    function PrimitiveCylinderPrefab(material, elementsType, topRadius, bottomRadius, height, segmentsW, segmentsH, topClosed, bottomClosed, surfaceClosed, yUp) {\n        if (material === void 0) { material = null; }\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\n        if (topRadius === void 0) { topRadius = 50; }\n        if (bottomRadius === void 0) { bottomRadius = 50; }\n        if (height === void 0) { height = 100; }\n        if (segmentsW === void 0) { segmentsW = 16; }\n        if (segmentsH === void 0) { segmentsH = 1; }\n        if (topClosed === void 0) { topClosed = true; }\n        if (bottomClosed === void 0) { bottomClosed = true; }\n        if (surfaceClosed === void 0) { surfaceClosed = true; }\n        if (yUp === void 0) { yUp = true; }\n        _super.call(this, material, elementsType);\n        this._numVertices = 0;\n        this._topRadius = topRadius;\n        this._pBottomRadius = bottomRadius;\n        this._height = height;\n        this._pSegmentsW = segmentsW;\n        this._pSegmentsH = segmentsH;\n        this._topClosed = topClosed;\n        this._bottomClosed = bottomClosed;\n        this._surfaceClosed = surfaceClosed;\n        this._yUp = yUp;\n    }\n    Object.defineProperty(PrimitiveCylinderPrefab.prototype, \"topRadius\", {\n        /**\n         * The radius of the top end of the cylinder.\n         */\n        get: function () {\n            return this._topRadius;\n        },\n        set: function (value) {\n            this._topRadius = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCylinderPrefab.prototype, \"bottomRadius\", {\n        /**\n         * The radius of the bottom end of the cylinder.\n         */\n        get: function () {\n            return this._pBottomRadius;\n        },\n        set: function (value) {\n            this._pBottomRadius = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCylinderPrefab.prototype, \"height\", {\n        /**\n         * The radius of the top end of the cylinder.\n         */\n        get: function () {\n            return this._height;\n        },\n        set: function (value) {\n            this._height = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCylinderPrefab.prototype, \"segmentsW\", {\n        /**\n         * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n         */\n        get: function () {\n            return this._pSegmentsW;\n        },\n        set: function (value) {\n            this.setSegmentsW(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PrimitiveCylinderPrefab.prototype.setSegmentsW = function (value) {\n        this._pSegmentsW = value;\n        this._pInvalidatePrimitive();\n        this._pInvalidateUVs();\n    };\n    Object.defineProperty(PrimitiveCylinderPrefab.prototype, \"segmentsH\", {\n        /**\n         * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n         */\n        get: function () {\n            return this._pSegmentsH;\n        },\n        set: function (value) {\n            this.setSegmentsH(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PrimitiveCylinderPrefab.prototype.setSegmentsH = function (value) {\n        this._pSegmentsH = value;\n        this._pInvalidatePrimitive();\n        this._pInvalidateUVs();\n    };\n    Object.defineProperty(PrimitiveCylinderPrefab.prototype, \"topClosed\", {\n        /**\n         * Defines whether the top end of the cylinder is closed (true) or open.\n         */\n        get: function () {\n            return this._topClosed;\n        },\n        set: function (value) {\n            this._topClosed = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCylinderPrefab.prototype, \"bottomClosed\", {\n        /**\n         * Defines whether the bottom end of the cylinder is closed (true) or open.\n         */\n        get: function () {\n            return this._bottomClosed;\n        },\n        set: function (value) {\n            this._bottomClosed = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCylinderPrefab.prototype, \"yUp\", {\n        /**\n         * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n         */\n        get: function () {\n            return this._yUp;\n        },\n        set: function (value) {\n            this._yUp = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    PrimitiveCylinderPrefab.prototype._pBuildGraphics = function (target, elementsType) {\n        var indices;\n        var positions;\n        var normals;\n        var tangents;\n        var i;\n        var j;\n        var x;\n        var y;\n        var z;\n        var vidx;\n        var fidx;\n        var radius;\n        var revolutionAngle;\n        var dr;\n        var latNormElev;\n        var latNormBase;\n        var numIndices = 0;\n        var comp1;\n        var comp2;\n        var startIndex = 0;\n        var nextVertexIndex = 0;\n        var centerVertexIndex = 0;\n        var t1;\n        var t2;\n        // reset utility variables\n        this._numVertices = 0;\n        // evaluate revolution steps\n        var revolutionAngleDelta = 2 * Math.PI / this._pSegmentsW;\n        if (elementsType == ElementsType_1.default.TRIANGLE) {\n            var triangleGraphics = target;\n            // evaluate target number of vertices, triangles and indices\n            if (this._surfaceClosed) {\n                this._numVertices += (this._pSegmentsH + 1) * (this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n                numIndices += this._pSegmentsH * this._pSegmentsW * 6; // each level has segmentW quads, each of 2 triangles\n            }\n            if (this._topClosed) {\n                this._numVertices += 2 * (this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n                numIndices += this._pSegmentsW * 3; // one triangle for each segment\n            }\n            if (this._bottomClosed) {\n                this._numVertices += 2 * (this._pSegmentsW + 1);\n                numIndices += this._pSegmentsW * 3;\n            }\n            // need to initialize raw arrays or can be reused?\n            if (this._numVertices == triangleGraphics.numVertices) {\n                indices = triangleGraphics.indices.get(triangleGraphics.numElements);\n                positions = triangleGraphics.positions.get(this._numVertices);\n                normals = triangleGraphics.normals.get(this._numVertices);\n                tangents = triangleGraphics.tangents.get(this._numVertices);\n            }\n            else {\n                indices = new Uint16Array(numIndices);\n                positions = new Float32Array(this._numVertices * 3);\n                normals = new Float32Array(this._numVertices * 3);\n                tangents = new Float32Array(this._numVertices * 3);\n                this._pInvalidateUVs();\n            }\n            vidx = 0;\n            fidx = 0;\n            // top\n            if (this._topClosed && this._topRadius > 0) {\n                z = -0.5 * this._height;\n                // central vertex\n                if (this._yUp) {\n                    t1 = 1;\n                    t2 = 0;\n                    comp1 = -z;\n                    comp2 = 0;\n                }\n                else {\n                    t1 = 0;\n                    t2 = -1;\n                    comp1 = 0;\n                    comp2 = z;\n                }\n                positions[vidx] = 0;\n                positions[vidx + 1] = comp1;\n                positions[vidx + 2] = comp2;\n                normals[vidx] = 0;\n                normals[vidx + 1] = t1;\n                normals[vidx + 2] = t2;\n                tangents[vidx] = 1;\n                tangents[vidx + 1] = 0;\n                tangents[vidx + 2] = 0;\n                vidx += 3;\n                nextVertexIndex += 1;\n                for (i = 0; i <= this._pSegmentsW; ++i) {\n                    // revolution vertex\n                    revolutionAngle = i * revolutionAngleDelta;\n                    x = this._topRadius * Math.cos(revolutionAngle);\n                    y = this._topRadius * Math.sin(revolutionAngle);\n                    if (this._yUp) {\n                        comp1 = -z;\n                        comp2 = y;\n                    }\n                    else {\n                        comp1 = y;\n                        comp2 = z;\n                    }\n                    if (i == this._pSegmentsW) {\n                        positions[vidx] = positions[startIndex + 3];\n                        positions[vidx + 1] = positions[startIndex + 4];\n                        positions[vidx + 2] = positions[startIndex + 5];\n                    }\n                    else {\n                        positions[vidx] = x;\n                        positions[vidx + 1] = comp1;\n                        positions[vidx + 2] = comp2;\n                    }\n                    normals[vidx] = 0;\n                    normals[vidx + 1] = t1;\n                    normals[vidx + 2] = t2;\n                    tangents[vidx] = 1;\n                    tangents[vidx + 1] = 0;\n                    tangents[vidx + 2] = 0;\n                    vidx += 3;\n                    if (i > 0) {\n                        // add triangle\n                        indices[fidx++] = nextVertexIndex - 1;\n                        indices[fidx++] = centerVertexIndex;\n                        indices[fidx++] = nextVertexIndex;\n                    }\n                    nextVertexIndex += 1;\n                }\n            }\n            // bottom\n            if (this._bottomClosed && this._pBottomRadius > 0) {\n                z = 0.5 * this._height;\n                startIndex = nextVertexIndex * 3;\n                centerVertexIndex = nextVertexIndex;\n                // central vertex\n                if (this._yUp) {\n                    t1 = -1;\n                    t2 = 0;\n                    comp1 = -z;\n                    comp2 = 0;\n                }\n                else {\n                    t1 = 0;\n                    t2 = 1;\n                    comp1 = 0;\n                    comp2 = z;\n                }\n                if (i > 0) {\n                    positions[vidx] = 0;\n                    positions[vidx + 1] = comp1;\n                    positions[vidx + 2] = comp2;\n                    normals[vidx] = 0;\n                    normals[vidx + 1] = t1;\n                    normals[vidx + 2] = t2;\n                    tangents[vidx] = 1;\n                    tangents[vidx + 1] = 0;\n                    tangents[vidx + 2] = 0;\n                    vidx += 3;\n                }\n                nextVertexIndex += 1;\n                for (i = 0; i <= this._pSegmentsW; ++i) {\n                    // revolution vertex\n                    revolutionAngle = i * revolutionAngleDelta;\n                    x = this._pBottomRadius * Math.cos(revolutionAngle);\n                    y = this._pBottomRadius * Math.sin(revolutionAngle);\n                    if (this._yUp) {\n                        comp1 = -z;\n                        comp2 = y;\n                    }\n                    else {\n                        comp1 = y;\n                        comp2 = z;\n                    }\n                    if (i == this._pSegmentsW) {\n                        positions[vidx] = positions[startIndex + 3];\n                        positions[vidx + 1] = positions[startIndex + 4];\n                        positions[vidx + 2] = positions[startIndex + 5];\n                    }\n                    else {\n                        positions[vidx] = x;\n                        positions[vidx + 1] = comp1;\n                        positions[vidx + 2] = comp2;\n                    }\n                    normals[vidx] = 0;\n                    normals[vidx + 1] = t1;\n                    normals[vidx + 2] = t2;\n                    tangents[vidx] = 1;\n                    tangents[vidx + 1] = 0;\n                    tangents[vidx + 2] = 0;\n                    vidx += 3;\n                    if (i > 0) {\n                        // add triangle\n                        indices[fidx++] = nextVertexIndex - 1;\n                        indices[fidx++] = nextVertexIndex;\n                        indices[fidx++] = centerVertexIndex;\n                    }\n                    nextVertexIndex += 1;\n                }\n            }\n            // The normals on the lateral surface all have the same incline, i.e.\n            // the \"elevation\" component (Y or Z depending on yUp) is constant.\n            // Same principle goes for the \"base\" of these vectors, which will be\n            // calculated such that a vector [base,elev] will be a unit vector.\n            dr = (this._pBottomRadius - this._topRadius);\n            latNormElev = dr / this._height;\n            latNormBase = (latNormElev == 0) ? 1 : this._height / dr;\n            // lateral surface\n            if (this._surfaceClosed) {\n                var a;\n                var b;\n                var c;\n                var d;\n                var na0, na1, naComp1, naComp2;\n                for (j = 0; j <= this._pSegmentsH; ++j) {\n                    radius = this._topRadius - ((j / this._pSegmentsH) * (this._topRadius - this._pBottomRadius));\n                    z = -(this._height / 2) + (j / this._pSegmentsH * this._height);\n                    startIndex = nextVertexIndex * 3;\n                    for (i = 0; i <= this._pSegmentsW; ++i) {\n                        // revolution vertex\n                        revolutionAngle = i * revolutionAngleDelta;\n                        x = radius * Math.cos(revolutionAngle);\n                        y = radius * Math.sin(revolutionAngle);\n                        na0 = latNormBase * Math.cos(revolutionAngle);\n                        na1 = latNormBase * Math.sin(revolutionAngle);\n                        if (this._yUp) {\n                            t1 = 0;\n                            t2 = -na0;\n                            comp1 = -z;\n                            comp2 = y;\n                            naComp1 = latNormElev;\n                            naComp2 = na1;\n                        }\n                        else {\n                            t1 = -na0;\n                            t2 = 0;\n                            comp1 = y;\n                            comp2 = z;\n                            naComp1 = na1;\n                            naComp2 = latNormElev;\n                        }\n                        if (i == this._pSegmentsW) {\n                            positions[vidx] = positions[startIndex];\n                            positions[vidx + 1] = positions[startIndex + 1];\n                            positions[vidx + 2] = positions[startIndex + 2];\n                            normals[vidx] = na0;\n                            normals[vidx + 1] = latNormElev;\n                            normals[vidx + 2] = na1;\n                            tangents[vidx] = na1;\n                            tangents[vidx + 1] = t1;\n                            tangents[vidx + 2] = t2;\n                        }\n                        else {\n                            positions[vidx] = x;\n                            positions[vidx + 1] = comp1;\n                            positions[vidx + 2] = comp2;\n                            normals[vidx] = na0;\n                            normals[vidx + 1] = naComp1;\n                            normals[vidx + 2] = naComp2;\n                            tangents[vidx] = -na1;\n                            tangents[vidx + 1] = t1;\n                            tangents[vidx + 2] = t2;\n                        }\n                        vidx += 3;\n                        // close triangle\n                        if (i > 0 && j > 0) {\n                            a = nextVertexIndex; // current\n                            b = nextVertexIndex - 1; // previous\n                            c = b - this._pSegmentsW - 1; // previous of last level\n                            d = a - this._pSegmentsW - 1; // current of last level\n                            indices[fidx++] = a;\n                            indices[fidx++] = b;\n                            indices[fidx++] = c;\n                            indices[fidx++] = a;\n                            indices[fidx++] = c;\n                            indices[fidx++] = d;\n                        }\n                        nextVertexIndex++;\n                    }\n                }\n            }\n            // build real data from raw data\n            triangleGraphics.setIndices(indices);\n            triangleGraphics.setPositions(positions);\n            triangleGraphics.setNormals(normals);\n            triangleGraphics.setTangents(tangents);\n        }\n        else if (elementsType == ElementsType_1.default.LINE) {\n            var lineGraphics = target;\n            var numSegments = this._pSegmentsH * this._pSegmentsW * 2 + this._pSegmentsW;\n            positions = new Float32Array(numSegments * 6);\n            var thickness = new Float32Array(numSegments);\n            vidx = 0;\n            fidx = 0;\n            var _radius = 50;\n            for (j = 0; j <= this._pSegmentsH; ++j) {\n                radius = this._topRadius - ((j / this._pSegmentsH) * (this._topRadius - this._pBottomRadius));\n                z = -(this._height / 2) + (j / this._pSegmentsH * this._height);\n                for (i = 0; i <= this._pSegmentsW; ++i) {\n                    // revolution vertex\n                    revolutionAngle = i * revolutionAngleDelta;\n                    x = radius * Math.cos(revolutionAngle);\n                    y = radius * Math.sin(revolutionAngle);\n                    if (this._yUp) {\n                        comp1 = -z;\n                        comp2 = y;\n                    }\n                    else {\n                        comp1 = y;\n                        comp2 = z;\n                    }\n                    if (i > 0) {\n                        //horizonal lines\n                        positions[vidx++] = x;\n                        positions[vidx++] = comp1;\n                        positions[vidx++] = comp2;\n                        thickness[fidx++] = 1;\n                        //vertical lines\n                        if (j > 0) {\n                            var addx = (j == 1) ? 3 - (6 * (this._pSegmentsW - i) + 12 * i) : 3 - this._pSegmentsW * 12;\n                            positions[vidx] = positions[vidx++ + addx];\n                            positions[vidx] = positions[vidx++ + addx];\n                            positions[vidx] = positions[vidx++ + addx];\n                            positions[vidx++] = x;\n                            positions[vidx++] = comp1;\n                            positions[vidx++] = comp2;\n                            thickness[fidx++] = 1;\n                        }\n                    }\n                    //horizonal lines\n                    if (i < this._pSegmentsW) {\n                        positions[vidx++] = x;\n                        positions[vidx++] = comp1;\n                        positions[vidx++] = comp2;\n                    }\n                }\n            }\n            // build real data from raw data\n            lineGraphics.setPositions(positions);\n            lineGraphics.setThickness(thickness);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PrimitiveCylinderPrefab.prototype._pBuildUVs = function (target, elementsType) {\n        var i;\n        var j;\n        var x;\n        var y;\n        var revolutionAngle;\n        var uvs;\n        if (elementsType == ElementsType_1.default.TRIANGLE) {\n            var triangleGraphics = target;\n            // need to initialize raw array or can be reused?\n            if (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\n                uvs = triangleGraphics.uvs.get(this._numVertices);\n            }\n            else {\n                uvs = new Float32Array(this._numVertices * 2);\n            }\n            // evaluate revolution steps\n            var revolutionAngleDelta = 2 * Math.PI / this._pSegmentsW;\n            // current uv component index\n            var index = 0;\n            // top\n            if (this._topClosed) {\n                uvs[index++] = 0.5 * this._scaleU; // central vertex\n                uvs[index++] = 0.5 * this._scaleV;\n                for (i = 0; i <= this._pSegmentsW; ++i) {\n                    revolutionAngle = i * revolutionAngleDelta;\n                    x = 0.5 + 0.5 * -Math.cos(revolutionAngle);\n                    y = 0.5 + 0.5 * Math.sin(revolutionAngle);\n                    uvs[index++] = x * this._scaleU; // revolution vertex\n                    uvs[index++] = y * this._scaleV;\n                }\n            }\n            // bottom\n            if (this._bottomClosed) {\n                uvs[index++] = 0.5 * this._scaleU; // central vertex\n                uvs[index++] = 0.5 * this._scaleV;\n                for (i = 0; i <= this._pSegmentsW; ++i) {\n                    revolutionAngle = i * revolutionAngleDelta;\n                    x = 0.5 + 0.5 * Math.cos(revolutionAngle);\n                    y = 0.5 + 0.5 * Math.sin(revolutionAngle);\n                    uvs[index++] = x * this._scaleU; // revolution vertex\n                    uvs[index++] = y * this._scaleV;\n                }\n            }\n            // lateral surface\n            if (this._surfaceClosed) {\n                for (j = 0; j <= this._pSegmentsH; ++j) {\n                    for (i = 0; i <= this._pSegmentsW; ++i) {\n                        // revolution vertex\n                        uvs[index++] = (i / this._pSegmentsW) * this._scaleU;\n                        uvs[index++] = (j / this._pSegmentsH) * this._scaleV;\n                    }\n                }\n            }\n            // build real data from raw data\n            triangleGraphics.setUVs(uvs);\n        }\n        else if (elementsType == ElementsType_1.default.LINE) {\n        }\n    };\n    return PrimitiveCylinderPrefab;\n}(PrimitivePrefabBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PrimitiveCylinderPrefab;\n\n},{\"awayjs-display/lib/graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"awayjs-display/lib/prefabs/PrimitivePrefabBase\":\"awayjs-display/lib/prefabs/PrimitivePrefabBase\"}],\"awayjs-display/lib/prefabs/PrimitivePlanePrefab\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ElementsType_1 = require(\"awayjs-display/lib/graphics/ElementsType\");\nvar PrimitivePrefabBase_1 = require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n/**\n * A Plane primitive sprite.\n */\nvar PrimitivePlanePrefab = (function (_super) {\n    __extends(PrimitivePlanePrefab, _super);\n    /**\n     * Creates a new Plane object.\n     * @param width The width of the plane.\n     * @param height The height of the plane.\n     * @param segmentsW The number of segments that make up the plane along the X-axis.\n     * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n     * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n     * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n     */\n    function PrimitivePlanePrefab(material, elementsType, width, height, segmentsW, segmentsH, yUp, doubleSided) {\n        if (material === void 0) { material = null; }\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\n        if (width === void 0) { width = 100; }\n        if (height === void 0) { height = 100; }\n        if (segmentsW === void 0) { segmentsW = 1; }\n        if (segmentsH === void 0) { segmentsH = 1; }\n        if (yUp === void 0) { yUp = true; }\n        if (doubleSided === void 0) { doubleSided = false; }\n        _super.call(this, material, elementsType);\n        this._segmentsW = segmentsW;\n        this._segmentsH = segmentsH;\n        this._yUp = yUp;\n        this._width = width;\n        this._height = height;\n        this._doubleSided = doubleSided;\n    }\n    Object.defineProperty(PrimitivePlanePrefab.prototype, \"segmentsW\", {\n        /**\n         * The number of segments that make up the plane along the X-axis. Defaults to 1.\n         */\n        get: function () {\n            return this._segmentsW;\n        },\n        set: function (value) {\n            this._segmentsW = value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePlanePrefab.prototype, \"segmentsH\", {\n        /**\n         * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n         * false, respectively. Defaults to 1.\n         */\n        get: function () {\n            return this._segmentsH;\n        },\n        set: function (value) {\n            this._segmentsH = value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePlanePrefab.prototype, \"yUp\", {\n        /**\n         *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n         */\n        get: function () {\n            return this._yUp;\n        },\n        set: function (value) {\n            this._yUp = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePlanePrefab.prototype, \"doubleSided\", {\n        /**\n         * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n         */\n        get: function () {\n            return this._doubleSided;\n        },\n        set: function (value) {\n            this._doubleSided = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePlanePrefab.prototype, \"width\", {\n        /**\n         * The width of the plane.\n         */\n        get: function () {\n            return this._width;\n        },\n        set: function (value) {\n            this._width = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePlanePrefab.prototype, \"height\", {\n        /**\n         * The height of the plane.\n         */\n        get: function () {\n            return this._height;\n        },\n        set: function (value) {\n            this._height = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    PrimitivePlanePrefab.prototype._pBuildGraphics = function (target, elementsType) {\n        var indices;\n        var x, y;\n        var numIndices;\n        var base;\n        var tw = this._segmentsW + 1;\n        var vidx, fidx; // indices\n        var xi;\n        var yi;\n        if (elementsType == ElementsType_1.default.TRIANGLE) {\n            var triangleGraphics = target;\n            var numVertices = (this._segmentsH + 1) * tw;\n            var positions;\n            var normals;\n            var tangents;\n            if (this._doubleSided)\n                numVertices *= 2;\n            numIndices = this._segmentsH * this._segmentsW * 6;\n            if (this._doubleSided)\n                numIndices *= 2;\n            if (triangleGraphics.indices != null && numIndices == triangleGraphics.indices.length) {\n                indices = triangleGraphics.indices.get(triangleGraphics.numElements);\n            }\n            else {\n                indices = new Uint16Array(numIndices);\n                this._pInvalidateUVs();\n            }\n            if (numVertices == triangleGraphics.numVertices) {\n                positions = triangleGraphics.positions.get(numVertices);\n                normals = triangleGraphics.normals.get(numVertices);\n                tangents = triangleGraphics.tangents.get(numVertices);\n            }\n            else {\n                positions = new Float32Array(numVertices * 3);\n                normals = new Float32Array(numVertices * 3);\n                tangents = new Float32Array(numVertices * 3);\n                this._pInvalidateUVs();\n            }\n            fidx = 0;\n            vidx = 0;\n            for (yi = 0; yi <= this._segmentsH; ++yi) {\n                for (xi = 0; xi <= this._segmentsW; ++xi) {\n                    x = (xi / this._segmentsW - .5) * this._width;\n                    y = (yi / this._segmentsH - .5) * this._height;\n                    positions[vidx] = x;\n                    if (this._yUp) {\n                        positions[vidx + 1] = 0;\n                        positions[vidx + 2] = y;\n                    }\n                    else {\n                        positions[vidx + 1] = y;\n                        positions[vidx + 2] = 0;\n                    }\n                    normals[vidx] = 0;\n                    if (this._yUp) {\n                        normals[vidx + 1] = 1;\n                        normals[vidx + 2] = 0;\n                    }\n                    else {\n                        normals[vidx + 1] = 0;\n                        normals[vidx + 2] = -1;\n                    }\n                    tangents[vidx] = 1;\n                    tangents[vidx + 1] = 0;\n                    tangents[vidx + 2] = 0;\n                    vidx += 3;\n                    // add vertex with same position, but with inverted normal & tangent\n                    if (this._doubleSided) {\n                        for (var i = vidx; i < vidx + 3; ++i) {\n                            positions[i] = positions[i - 3];\n                            normals[i] = -normals[i - 3];\n                            tangents[i] = -tangents[i - 3];\n                        }\n                        vidx += 3;\n                    }\n                    if (xi != this._segmentsW && yi != this._segmentsH) {\n                        base = xi + yi * tw;\n                        var mult = this._doubleSided ? 2 : 1;\n                        indices[fidx++] = base * mult;\n                        indices[fidx++] = (base + tw) * mult;\n                        indices[fidx++] = (base + tw + 1) * mult;\n                        indices[fidx++] = base * mult;\n                        indices[fidx++] = (base + tw + 1) * mult;\n                        indices[fidx++] = (base + 1) * mult;\n                        if (this._doubleSided) {\n                            indices[fidx++] = (base + tw + 1) * mult + 1;\n                            indices[fidx++] = (base + tw) * mult + 1;\n                            indices[fidx++] = base * mult + 1;\n                            indices[fidx++] = (base + 1) * mult + 1;\n                            indices[fidx++] = (base + tw + 1) * mult + 1;\n                            indices[fidx++] = base * mult + 1;\n                        }\n                    }\n                }\n            }\n            triangleGraphics.setIndices(indices);\n            triangleGraphics.setPositions(positions);\n            triangleGraphics.setNormals(normals);\n            triangleGraphics.setTangents(tangents);\n        }\n        else if (elementsType == ElementsType_1.default.LINE) {\n            var lineGraphics = target;\n            var numSegments = (this._segmentsH + 1) + tw;\n            var positions;\n            var thickness;\n            var hw = this._width / 2;\n            var hh = this._height / 2;\n            positions = new Float32Array(numSegments * 6);\n            thickness = new Float32Array(numSegments);\n            fidx = 0;\n            vidx = 0;\n            for (yi = 0; yi <= this._segmentsH; ++yi) {\n                positions[vidx++] = -hw;\n                positions[vidx++] = 0;\n                positions[vidx++] = yi * this._height - hh;\n                positions[vidx++] = hw;\n                positions[vidx++] = 0;\n                positions[vidx++] = yi * this._height - hh;\n                thickness[fidx++] = 1;\n            }\n            for (xi = 0; xi <= this._segmentsW; ++xi) {\n                positions[vidx++] = xi * this._width - hw;\n                positions[vidx++] = 0;\n                positions[vidx++] = -hh;\n                positions[vidx++] = xi * this._width - hw;\n                positions[vidx++] = 0;\n                positions[vidx++] = hh;\n                thickness[fidx++] = 1;\n            }\n            // build real data from raw data\n            lineGraphics.setPositions(positions);\n            lineGraphics.setThickness(thickness);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PrimitivePlanePrefab.prototype._pBuildUVs = function (target, elementsType) {\n        var uvs;\n        var numVertices;\n        if (elementsType == ElementsType_1.default.TRIANGLE) {\n            numVertices = (this._segmentsH + 1) * (this._segmentsW + 1);\n            if (this._doubleSided)\n                numVertices *= 2;\n            var triangleGraphics = target;\n            if (triangleGraphics.uvs && numVertices == triangleGraphics.numVertices) {\n                uvs = triangleGraphics.uvs.get(numVertices);\n            }\n            else {\n                uvs = new Float32Array(numVertices * 2);\n                this._pInvalidatePrimitive();\n            }\n            var index = 0;\n            for (var yi = 0; yi <= this._segmentsH; ++yi) {\n                for (var xi = 0; xi <= this._segmentsW; ++xi) {\n                    uvs[index] = (xi / this._segmentsW) * this._scaleU;\n                    uvs[index + 1] = (1 - yi / this._segmentsH) * this._scaleV;\n                    index += 2;\n                    if (this._doubleSided) {\n                        uvs[index] = (xi / this._segmentsW) * this._scaleU;\n                        uvs[index + 1] = (1 - yi / this._segmentsH) * this._scaleV;\n                        index += 2;\n                    }\n                }\n            }\n            triangleGraphics.setUVs(uvs);\n        }\n        else if (elementsType == ElementsType_1.default.LINE) {\n        }\n    };\n    return PrimitivePlanePrefab;\n}(PrimitivePrefabBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PrimitivePlanePrefab;\n\n},{\"awayjs-display/lib/graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"awayjs-display/lib/prefabs/PrimitivePrefabBase\":\"awayjs-display/lib/prefabs/PrimitivePrefabBase\"}],\"awayjs-display/lib/prefabs/PrimitivePolygonPrefab\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar PrimitiveCylinderPrefab_1 = require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n/**\n * A UV RegularPolygon primitive sprite.\n */\nvar PrimitivePolygonPrefab = (function (_super) {\n    __extends(PrimitivePolygonPrefab, _super);\n    /**\n     * Creates a new RegularPolygon disc object.\n     * @param radius The radius of the regular polygon\n     * @param sides Defines the number of sides of the regular polygon.\n     * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n     */\n    function PrimitivePolygonPrefab(material, elementsType, radius, sides, yUp) {\n        if (material === void 0) { material = null; }\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\n        if (radius === void 0) { radius = 100; }\n        if (sides === void 0) { sides = 16; }\n        if (yUp === void 0) { yUp = true; }\n        _super.call(this, material, elementsType, radius, 0, 0, sides, 1, true, false, false, yUp);\n    }\n    Object.defineProperty(PrimitivePolygonPrefab.prototype, \"radius\", {\n        /**\n         * The radius of the regular polygon.\n         */\n        get: function () {\n            return this._pBottomRadius;\n        },\n        set: function (value) {\n            this._pBottomRadius = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePolygonPrefab.prototype, \"sides\", {\n        /**\n         * The number of sides of the regular polygon.\n         */\n        get: function () {\n            return this._pSegmentsW;\n        },\n        set: function (value) {\n            this.setSegmentsW(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePolygonPrefab.prototype, \"subdivisions\", {\n        /**\n         * The number of subdivisions from the edge to the center of the regular polygon.\n         */\n        get: function () {\n            return this._pSegmentsH;\n        },\n        set: function (value) {\n            this.setSegmentsH(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PrimitivePolygonPrefab;\n}(PrimitiveCylinderPrefab_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PrimitivePolygonPrefab;\n\n},{\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\":\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\"}],\"awayjs-display/lib/prefabs/PrimitivePrefabBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesBuffer_1 = require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar ElementsType_1 = require(\"awayjs-display/lib/graphics/ElementsType\");\nvar TriangleElements_1 = require(\"awayjs-display/lib/graphics/TriangleElements\");\nvar LineElements_1 = require(\"awayjs-display/lib/graphics/LineElements\");\nvar Sprite_1 = require(\"awayjs-display/lib/display/Sprite\");\nvar PrefabBase_1 = require(\"awayjs-display/lib/prefabs/PrefabBase\");\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nvar PrimitivePrefabBase = (function (_super) {\n    __extends(PrimitivePrefabBase, _super);\n    /**\n     * Creates a new PrimitivePrefabBase object.\n     *\n     * @param material The material with which to render the object\n     */\n    function PrimitivePrefabBase(material, elementsType) {\n        if (material === void 0) { material = null; }\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\n        _super.call(this);\n        this._primitiveDirty = true;\n        this._uvDirty = true;\n        this._scaleU = 1;\n        this._scaleV = 1;\n        this._material = material;\n        this._elementsType = elementsType;\n        if (this._elementsType == ElementsType_1.default.TRIANGLE) {\n            var triangleElements = new TriangleElements_1.default(new AttributesBuffer_1.default());\n            triangleElements.autoDeriveNormals = false;\n            triangleElements.autoDeriveTangents = false;\n            this._elements = triangleElements;\n        }\n        else if (this._elementsType == ElementsType_1.default.LINE) {\n            this._elements = new LineElements_1.default(new AttributesBuffer_1.default());\n        }\n    }\n    Object.defineProperty(PrimitivePrefabBase.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            return PrimitivePrefabBase.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePrefabBase.prototype, \"elementsType\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._elementsType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePrefabBase.prototype, \"material\", {\n        /**\n         * The material with which to render the primitive.\n         */\n        get: function () {\n            return this._material;\n        },\n        set: function (value) {\n            if (value == this._material)\n                return;\n            this._material = value;\n            var len = this._pObjects.length;\n            for (var i = 0; i < len; i++)\n                this._pObjects[i].material = this._material;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePrefabBase.prototype, \"scaleU\", {\n        get: function () {\n            return this._scaleU;\n        },\n        set: function (value) {\n            if (this._scaleU = value)\n                return;\n            this._scaleU = value;\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePrefabBase.prototype, \"scaleV\", {\n        get: function () {\n            return this._scaleV;\n        },\n        set: function (value) {\n            if (this._scaleV = value)\n                return;\n            this._scaleV = value;\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n     * be triggered by the invalidateGraphics method (and in turn by updateGraphics).\n     */\n    PrimitivePrefabBase.prototype._pBuildGraphics = function (target, elementsType) {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n     * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n     */\n    PrimitivePrefabBase.prototype._pBuildUVs = function (target, elementsType) {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * Invalidates the primitive, causing it to be updated when requested.\n     */\n    PrimitivePrefabBase.prototype._pInvalidatePrimitive = function () {\n        this._primitiveDirty = true;\n    };\n    /**\n     * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n     */\n    PrimitivePrefabBase.prototype._pInvalidateUVs = function () {\n        this._uvDirty = true;\n    };\n    /**\n     * Updates the geometry when invalid.\n     */\n    PrimitivePrefabBase.prototype.updateGraphics = function () {\n        this._pBuildGraphics(this._elements, this._elementsType);\n        this._primitiveDirty = false;\n    };\n    /**\n     * Updates the uv coordinates when invalid.\n     */\n    PrimitivePrefabBase.prototype.updateUVs = function () {\n        this._pBuildUVs(this._elements, this._elementsType);\n        this._uvDirty = false;\n    };\n    PrimitivePrefabBase.prototype._iValidate = function () {\n        if (this._primitiveDirty)\n            this.updateGraphics();\n        if (this._uvDirty)\n            this.updateUVs();\n    };\n    PrimitivePrefabBase.prototype._pCreateObject = function () {\n        var sprite = new Sprite_1.default(this._material);\n        sprite.graphics.addGraphic(this._elements);\n        sprite._iSourcePrefab = this;\n        return sprite;\n    };\n    PrimitivePrefabBase.assetType = \"[asset PrimitivePrefab]\";\n    return PrimitivePrefabBase;\n}(PrefabBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PrimitivePrefabBase;\n\n},{\"awayjs-core/lib/attributes/AttributesBuffer\":undefined,\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-display/lib/display/Sprite\":\"awayjs-display/lib/display/Sprite\",\"awayjs-display/lib/graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"awayjs-display/lib/graphics/LineElements\":\"awayjs-display/lib/graphics/LineElements\",\"awayjs-display/lib/graphics/TriangleElements\":\"awayjs-display/lib/graphics/TriangleElements\",\"awayjs-display/lib/prefabs/PrefabBase\":\"awayjs-display/lib/prefabs/PrefabBase\"}],\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ElementsType_1 = require(\"awayjs-display/lib/graphics/ElementsType\");\nvar PrimitivePrefabBase_1 = require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n/**\n * A UV Sphere primitive sprite.\n */\nvar PrimitiveSpherePrefab = (function (_super) {\n    __extends(PrimitiveSpherePrefab, _super);\n    /**\n     * Creates a new Sphere object.\n     *\n     * @param radius The radius of the sphere.\n     * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n     * @param segmentsH Defines the number of vertical segments that make up the sphere.\n     * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n     */\n    function PrimitiveSpherePrefab(material, elementsType, radius, segmentsW, segmentsH, yUp) {\n        if (material === void 0) { material = null; }\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\n        if (radius === void 0) { radius = 50; }\n        if (segmentsW === void 0) { segmentsW = 16; }\n        if (segmentsH === void 0) { segmentsH = 12; }\n        if (yUp === void 0) { yUp = true; }\n        _super.call(this, material, elementsType);\n        this._radius = radius;\n        this._segmentsW = segmentsW;\n        this._segmentsH = segmentsH;\n        this._yUp = yUp;\n    }\n    Object.defineProperty(PrimitiveSpherePrefab.prototype, \"radius\", {\n        /**\n         * The radius of the sphere.\n         */\n        get: function () {\n            return this._radius;\n        },\n        set: function (value) {\n            this._radius = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveSpherePrefab.prototype, \"segmentsW\", {\n        /**\n         * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n         */\n        get: function () {\n            return this._segmentsW;\n        },\n        set: function (value) {\n            this._segmentsW = value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveSpherePrefab.prototype, \"segmentsH\", {\n        /**\n         * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n         */\n        get: function () {\n            return this._segmentsH;\n        },\n        set: function (value) {\n            this._segmentsH = value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveSpherePrefab.prototype, \"yUp\", {\n        /**\n         * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n         */\n        get: function () {\n            return this._yUp;\n        },\n        set: function (value) {\n            this._yUp = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    PrimitiveSpherePrefab.prototype._pBuildGraphics = function (target, elementsType) {\n        var indices;\n        var positions;\n        var normals;\n        var tangents;\n        var i;\n        var j;\n        var vidx, fidx; // indices\n        var comp1;\n        var comp2;\n        var numVertices;\n        if (elementsType == ElementsType_1.default.TRIANGLE) {\n            var triangleGraphics = target;\n            numVertices = (this._segmentsH + 1) * (this._segmentsW + 1);\n            if (numVertices == triangleGraphics.numVertices && triangleGraphics.indices != null) {\n                indices = triangleGraphics.indices.get(triangleGraphics.numElements);\n                positions = triangleGraphics.positions.get(numVertices);\n                normals = triangleGraphics.normals.get(numVertices);\n                tangents = triangleGraphics.tangents.get(numVertices);\n            }\n            else {\n                indices = new Uint16Array((this._segmentsH - 1) * this._segmentsW * 6);\n                positions = new Float32Array(numVertices * 3);\n                normals = new Float32Array(numVertices * 3);\n                tangents = new Float32Array(numVertices * 3);\n                this._pInvalidateUVs();\n            }\n            vidx = 0;\n            fidx = 0;\n            var startIndex;\n            var t1;\n            var t2;\n            for (j = 0; j <= this._segmentsH; ++j) {\n                startIndex = vidx;\n                var horangle = Math.PI * j / this._segmentsH;\n                var z = -this._radius * Math.cos(horangle);\n                var ringradius = this._radius * Math.sin(horangle);\n                for (i = 0; i <= this._segmentsW; ++i) {\n                    var verangle = 2 * Math.PI * i / this._segmentsW;\n                    var x = ringradius * Math.cos(verangle);\n                    var y = ringradius * Math.sin(verangle);\n                    var normLen = 1 / Math.sqrt(x * x + y * y + z * z);\n                    var tanLen = Math.sqrt(y * y + x * x);\n                    if (this._yUp) {\n                        t1 = 0;\n                        t2 = tanLen > .007 ? x / tanLen : 0;\n                        comp1 = -z;\n                        comp2 = y;\n                    }\n                    else {\n                        t1 = tanLen > .007 ? x / tanLen : 0;\n                        t2 = 0;\n                        comp1 = y;\n                        comp2 = z;\n                    }\n                    if (i == this._segmentsW) {\n                        positions[vidx] = positions[startIndex];\n                        positions[vidx + 1] = positions[startIndex + 1];\n                        positions[vidx + 2] = positions[startIndex + 2];\n                        normals[vidx] = normals[startIndex] + (x * normLen) * .5;\n                        normals[vidx + 1] = normals[startIndex + 1] + (comp1 * normLen) * .5;\n                        normals[vidx + 2] = normals[startIndex + 2] + (comp2 * normLen) * .5;\n                        tangents[vidx] = tanLen > .007 ? -y / tanLen : 1;\n                        tangents[vidx + 1] = t1;\n                        tangents[vidx + 2] = t2;\n                    }\n                    else {\n                        positions[vidx] = x;\n                        positions[vidx + 1] = comp1;\n                        positions[vidx + 2] = comp2;\n                        normals[vidx] = x * normLen;\n                        normals[vidx + 1] = comp1 * normLen;\n                        normals[vidx + 2] = comp2 * normLen;\n                        tangents[vidx] = tanLen > .007 ? -y / tanLen : 1;\n                        tangents[vidx + 1] = t1;\n                        tangents[vidx + 2] = t2;\n                    }\n                    if (i > 0 && j > 0) {\n                        var a = (this._segmentsW + 1) * j + i;\n                        var b = (this._segmentsW + 1) * j + i - 1;\n                        var c = (this._segmentsW + 1) * (j - 1) + i - 1;\n                        var d = (this._segmentsW + 1) * (j - 1) + i;\n                        if (j == this._segmentsH) {\n                            positions[vidx] = positions[startIndex];\n                            positions[vidx + 1] = positions[startIndex + 1];\n                            positions[vidx + 2] = positions[startIndex + 2];\n                            indices[fidx++] = a;\n                            indices[fidx++] = c;\n                            indices[fidx++] = d;\n                        }\n                        else if (j == 1) {\n                            indices[fidx++] = a;\n                            indices[fidx++] = b;\n                            indices[fidx++] = c;\n                        }\n                        else {\n                            indices[fidx++] = a;\n                            indices[fidx++] = b;\n                            indices[fidx++] = c;\n                            indices[fidx++] = a;\n                            indices[fidx++] = c;\n                            indices[fidx++] = d;\n                        }\n                    }\n                    vidx += 3;\n                }\n            }\n            triangleGraphics.setIndices(indices);\n            triangleGraphics.setPositions(positions);\n            triangleGraphics.setNormals(normals);\n            triangleGraphics.setTangents(tangents);\n        }\n        else if (elementsType == ElementsType_1.default.LINE) {\n            var lineGraphics = target;\n            var numSegments = this._segmentsH * this._segmentsW * 2 + this._segmentsW;\n            var positions = new Float32Array(numSegments * 6);\n            var thickness = new Float32Array(numSegments);\n            vidx = 0;\n            fidx = 0;\n            for (j = 0; j <= this._segmentsH; ++j) {\n                var horangle = Math.PI * j / this._segmentsH;\n                var z = -this._radius * Math.cos(horangle);\n                var ringradius = this._radius * Math.sin(horangle);\n                for (i = 0; i <= this._segmentsW; ++i) {\n                    var verangle = 2 * Math.PI * i / this._segmentsW;\n                    var x = ringradius * Math.cos(verangle);\n                    var y = ringradius * Math.sin(verangle);\n                    if (this._yUp) {\n                        comp1 = -z;\n                        comp2 = y;\n                    }\n                    else {\n                        comp1 = y;\n                        comp2 = z;\n                    }\n                    if (i > 0) {\n                        //horizonal lines\n                        positions[vidx++] = x;\n                        positions[vidx++] = comp1;\n                        positions[vidx++] = comp2;\n                        thickness[fidx++] = 1;\n                        //vertical lines\n                        if (j > 0) {\n                            var addx = (j == 1) ? 3 - (6 * (this._segmentsW - i) + 12 * i) : 3 - this._segmentsW * 12;\n                            positions[vidx] = positions[vidx++ + addx];\n                            positions[vidx] = positions[vidx++ + addx];\n                            positions[vidx] = positions[vidx++ + addx];\n                            positions[vidx++] = x;\n                            positions[vidx++] = comp1;\n                            positions[vidx++] = comp2;\n                            thickness[fidx++] = 1;\n                        }\n                    }\n                    //horizonal lines\n                    if (i < this._segmentsW) {\n                        positions[vidx++] = x;\n                        positions[vidx++] = comp1;\n                        positions[vidx++] = comp2;\n                    }\n                }\n            }\n            // build real data from raw data\n            lineGraphics.setPositions(positions);\n            lineGraphics.setThickness(thickness);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PrimitiveSpherePrefab.prototype._pBuildUVs = function (target, elementsType) {\n        var i, j;\n        var numVertices = (this._segmentsH + 1) * (this._segmentsW + 1);\n        var uvs;\n        if (elementsType == ElementsType_1.default.TRIANGLE) {\n            numVertices = (this._segmentsH + 1) * (this._segmentsW + 1);\n            var triangleGraphics = target;\n            if (numVertices == triangleGraphics.numVertices && triangleGraphics.uvs != null) {\n                uvs = triangleGraphics.uvs.get(numVertices);\n            }\n            else {\n                uvs = new Float32Array(numVertices * 2);\n            }\n            var index = 0;\n            for (j = 0; j <= this._segmentsH; ++j) {\n                for (i = 0; i <= this._segmentsW; ++i) {\n                    uvs[index++] = (i / this._segmentsW) * this._scaleU;\n                    uvs[index++] = (j / this._segmentsH) * this._scaleV;\n                }\n            }\n            triangleGraphics.setUVs(uvs);\n        }\n        else if (elementsType == ElementsType_1.default.LINE) {\n        }\n    };\n    return PrimitiveSpherePrefab;\n}(PrimitivePrefabBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PrimitiveSpherePrefab;\n\n},{\"awayjs-display/lib/graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"awayjs-display/lib/prefabs/PrimitivePrefabBase\":\"awayjs-display/lib/prefabs/PrimitivePrefabBase\"}],\"awayjs-display/lib/prefabs/PrimitiveTorusPrefab\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ElementsType_1 = require(\"awayjs-display/lib/graphics/ElementsType\");\nvar PrimitivePrefabBase_1 = require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n/**\n * A UV Cylinder primitive sprite.\n */\nvar PrimitiveTorusPrefab = (function (_super) {\n    __extends(PrimitiveTorusPrefab, _super);\n    /**\n     * Creates a new <code>Torus</code> object.\n     * @param radius The radius of the torus.\n     * @param tuebRadius The radius of the inner tube of the torus.\n     * @param segmentsR Defines the number of horizontal segments that make up the torus.\n     * @param segmentsT Defines the number of vertical segments that make up the torus.\n     * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n     */\n    function PrimitiveTorusPrefab(material, elementsType, radius, tubeRadius, segmentsR, segmentsT, yUp) {\n        if (material === void 0) { material = null; }\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\n        if (radius === void 0) { radius = 50; }\n        if (tubeRadius === void 0) { tubeRadius = 50; }\n        if (segmentsR === void 0) { segmentsR = 16; }\n        if (segmentsT === void 0) { segmentsT = 8; }\n        if (yUp === void 0) { yUp = true; }\n        _super.call(this, material, elementsType);\n        this._numVertices = 0;\n        this._radius = radius;\n        this._tubeRadius = tubeRadius;\n        this._segmentsR = segmentsR;\n        this._segmentsT = segmentsT;\n        this._yUp = yUp;\n    }\n    Object.defineProperty(PrimitiveTorusPrefab.prototype, \"radius\", {\n        /**\n         * The radius of the torus.\n         */\n        get: function () {\n            return this._radius;\n        },\n        set: function (value) {\n            this._radius = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveTorusPrefab.prototype, \"tubeRadius\", {\n        /**\n         * The radius of the inner tube of the torus.\n         */\n        get: function () {\n            return this._tubeRadius;\n        },\n        set: function (value) {\n            this._tubeRadius = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveTorusPrefab.prototype, \"segmentsR\", {\n        /**\n         * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n         */\n        get: function () {\n            return this._segmentsR;\n        },\n        set: function (value) {\n            this._segmentsR = value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveTorusPrefab.prototype, \"segmentsT\", {\n        /**\n         * Defines the number of vertical segments that make up the torus. Defaults to 8.\n         */\n        get: function () {\n            return this._segmentsT;\n        },\n        set: function (value) {\n            this._segmentsT = value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveTorusPrefab.prototype, \"yUp\", {\n        /**\n         * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n         */\n        get: function () {\n            return this._yUp;\n        },\n        set: function (value) {\n            this._yUp = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    PrimitiveTorusPrefab.prototype._pBuildGraphics = function (target, elementsType) {\n        var indices;\n        var positions;\n        var normals;\n        var tangents;\n        var i, j;\n        var x, y, z, nx, ny, nz, revolutionAngleR, revolutionAngleT;\n        var vidx;\n        var fidx;\n        var numIndices = 0;\n        if (elementsType == ElementsType_1.default.TRIANGLE) {\n            var triangleGraphics = target;\n            // evaluate target number of vertices, triangles and indices\n            this._numVertices = (this._segmentsT + 1) * (this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n            numIndices = this._segmentsT * this._segmentsR * 6; // each level has segmentR quads, each of 2 triangles\n            // need to initialize raw arrays or can be reused?\n            if (this._numVertices == triangleGraphics.numVertices) {\n                indices = triangleGraphics.indices.get(triangleGraphics.numElements);\n                positions = triangleGraphics.positions.get(this._numVertices);\n                normals = triangleGraphics.normals.get(this._numVertices);\n                tangents = triangleGraphics.tangents.get(this._numVertices);\n            }\n            else {\n                indices = new Uint16Array(numIndices);\n                positions = new Float32Array(this._numVertices * 3);\n                normals = new Float32Array(this._numVertices * 3);\n                tangents = new Float32Array(this._numVertices * 3);\n                this._pInvalidateUVs();\n            }\n            vidx = 0;\n            fidx = 0;\n            // evaluate revolution steps\n            var revolutionAngleDeltaR = 2 * Math.PI / this._segmentsR;\n            var revolutionAngleDeltaT = 2 * Math.PI / this._segmentsT;\n            var comp1, comp2;\n            var t1, t2, n1, n2;\n            var startIndex = 0;\n            var nextVertexIndex = 0;\n            // surface\n            var a, b, c, d, length;\n            for (j = 0; j <= this._segmentsT; ++j) {\n                startIndex = nextVertexIndex * 3;\n                for (i = 0; i <= this._segmentsR; ++i) {\n                    // revolution vertex\n                    revolutionAngleR = i * revolutionAngleDeltaR;\n                    revolutionAngleT = j * revolutionAngleDeltaT;\n                    length = Math.cos(revolutionAngleT);\n                    nx = length * Math.cos(revolutionAngleR);\n                    ny = length * Math.sin(revolutionAngleR);\n                    nz = Math.sin(revolutionAngleT);\n                    x = this._radius * Math.cos(revolutionAngleR) + this._tubeRadius * nx;\n                    y = this._radius * Math.sin(revolutionAngleR) + this._tubeRadius * ny;\n                    z = (j == this._segmentsT) ? 0 : this._tubeRadius * nz;\n                    if (this._yUp) {\n                        n1 = -nz;\n                        n2 = ny;\n                        t1 = 0;\n                        t2 = (length ? nx / length : x / this._radius);\n                        comp1 = -z;\n                        comp2 = y;\n                    }\n                    else {\n                        n1 = ny;\n                        n2 = nz;\n                        t1 = (length ? nx / length : x / this._radius);\n                        t2 = 0;\n                        comp1 = y;\n                        comp2 = z;\n                    }\n                    if (i == this._segmentsR) {\n                        positions[vidx] = x;\n                        positions[vidx + 1] = positions[startIndex + 1];\n                        positions[vidx + 2] = positions[startIndex + 2];\n                    }\n                    else {\n                        positions[vidx] = x;\n                        positions[vidx + 1] = comp1;\n                        positions[vidx + 2] = comp2;\n                    }\n                    normals[vidx] = nx;\n                    normals[vidx + 1] = n1;\n                    normals[vidx + 2] = n2;\n                    tangents[vidx] = -(length ? ny / length : y / this._radius);\n                    tangents[vidx + 1] = t1;\n                    tangents[vidx + 2] = t2;\n                    vidx += 3;\n                    // close triangle\n                    if (i > 0 && j > 0) {\n                        a = nextVertexIndex; // current\n                        b = nextVertexIndex - 1; // previous\n                        c = b - this._segmentsR - 1; // previous of last level\n                        d = a - this._segmentsR - 1; // current of last level\n                        indices[fidx++] = a;\n                        indices[fidx++] = b;\n                        indices[fidx++] = c;\n                        indices[fidx++] = a;\n                        indices[fidx++] = c;\n                        indices[fidx++] = d;\n                    }\n                    nextVertexIndex++;\n                }\n            }\n            // build real data from raw data\n            triangleGraphics.setIndices(indices);\n            triangleGraphics.setPositions(positions);\n            triangleGraphics.setNormals(normals);\n            triangleGraphics.setTangents(tangents);\n        }\n        else if (elementsType == ElementsType_1.default.LINE) {\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PrimitiveTorusPrefab.prototype._pBuildUVs = function (target, elementsType) {\n        var i, j;\n        var uvs;\n        if (elementsType == ElementsType_1.default.TRIANGLE) {\n            var triangleGraphics = target;\n            // need to initialize raw array or can be reused?\n            if (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\n                uvs = triangleGraphics.uvs.get(this._numVertices);\n            }\n            else {\n                uvs = new Float32Array(this._numVertices * 2);\n            }\n            // current uv component index\n            var index = 0;\n            // surface\n            for (j = 0; j <= this._segmentsT; ++j) {\n                for (i = 0; i <= this._segmentsR; ++i) {\n                    // revolution vertex\n                    uvs[index++] = (i / this._segmentsR) * this._scaleU;\n                    uvs[index++] = (j / this._segmentsT) * this._scaleV;\n                }\n            }\n            // build real data from raw data\n            triangleGraphics.setUVs(uvs);\n        }\n        else if (elementsType == ElementsType_1.default.LINE) {\n        }\n    };\n    return PrimitiveTorusPrefab;\n}(PrimitivePrefabBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PrimitiveTorusPrefab;\n\n},{\"awayjs-display/lib/graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"awayjs-display/lib/prefabs/PrimitivePrefabBase\":\"awayjs-display/lib/prefabs/PrimitivePrefabBase\"}],\"awayjs-display/lib/prefabs\":[function(require,module,exports){\n\"use strict\";\nvar PrefabBase_1 = require(\"awayjs-display/lib/prefabs/PrefabBase\");\nexports.PrefabBase = PrefabBase_1.default;\nvar PrimitiveCapsulePrefab_1 = require(\"awayjs-display/lib/prefabs/PrimitiveCapsulePrefab\");\nexports.PrimitiveCapsulePrefab = PrimitiveCapsulePrefab_1.default;\nvar PrimitiveConePrefab_1 = require(\"awayjs-display/lib/prefabs/PrimitiveConePrefab\");\nexports.PrimitiveConePrefab = PrimitiveConePrefab_1.default;\nvar PrimitiveCubePrefab_1 = require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\nexports.PrimitiveCubePrefab = PrimitiveCubePrefab_1.default;\nvar PrimitiveCylinderPrefab_1 = require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\nexports.PrimitiveCylinderPrefab = PrimitiveCylinderPrefab_1.default;\nvar PrimitivePlanePrefab_1 = require(\"awayjs-display/lib/prefabs/PrimitivePlanePrefab\");\nexports.PrimitivePlanePrefab = PrimitivePlanePrefab_1.default;\nvar PrimitivePolygonPrefab_1 = require(\"awayjs-display/lib/prefabs/PrimitivePolygonPrefab\");\nexports.PrimitivePolygonPrefab = PrimitivePolygonPrefab_1.default;\nvar PrimitivePrefabBase_1 = require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\nexports.PrimitivePrefabBase = PrimitivePrefabBase_1.default;\nvar PrimitiveSpherePrefab_1 = require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\nexports.PrimitiveSpherePrefab = PrimitiveSpherePrefab_1.default;\nvar PrimitiveTorusPrefab_1 = require(\"awayjs-display/lib/prefabs/PrimitiveTorusPrefab\");\nexports.PrimitiveTorusPrefab = PrimitiveTorusPrefab_1.default;\n\n},{\"awayjs-display/lib/prefabs/PrefabBase\":\"awayjs-display/lib/prefabs/PrefabBase\",\"awayjs-display/lib/prefabs/PrimitiveCapsulePrefab\":\"awayjs-display/lib/prefabs/PrimitiveCapsulePrefab\",\"awayjs-display/lib/prefabs/PrimitiveConePrefab\":\"awayjs-display/lib/prefabs/PrimitiveConePrefab\",\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\":\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\",\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\":\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\",\"awayjs-display/lib/prefabs/PrimitivePlanePrefab\":\"awayjs-display/lib/prefabs/PrimitivePlanePrefab\",\"awayjs-display/lib/prefabs/PrimitivePolygonPrefab\":\"awayjs-display/lib/prefabs/PrimitivePolygonPrefab\",\"awayjs-display/lib/prefabs/PrimitivePrefabBase\":\"awayjs-display/lib/prefabs/PrimitivePrefabBase\",\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\":\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\",\"awayjs-display/lib/prefabs/PrimitiveTorusPrefab\":\"awayjs-display/lib/prefabs/PrimitiveTorusPrefab\"}],\"awayjs-display/lib/text/AntiAliasType\":[function(require,module,exports){\n\"use strict\";\n/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nvar AntiAliasType = (function () {\n    function AntiAliasType() {\n    }\n    /**\n     * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n     * allows font faces to be rendered at very high quality at small sizes. It\n     * is best used with applications that have a lot of small text. Advanced\n     * anti-aliasing is not recommended for very large fonts(larger than 48\n     * points). This constant is used for the <code>antiAliasType</code> property\n     * in the TextField class. Use the syntax\n     * <code>AntiAliasType.ADVANCED</code>.\n     */\n    AntiAliasType.ADVANCED = \"advanced\";\n    /**\n     * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n     * earlier. This setting is recommended for applications that do not have a\n     * lot of text. This constant is used for the <code>antiAliasType</code>\n     * property in the TextField class. Use the syntax\n     * <code>AntiAliasType.NORMAL</code>.\n     */\n    AntiAliasType.NORMAL = \"normal\";\n    return AntiAliasType;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AntiAliasType;\n\n},{}],\"awayjs-display/lib/text/Font\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar TesselatedFontTable_1 = require(\"awayjs-display/lib/text/TesselatedFontTable\");\n/**\n * GraphicBase wraps a TriangleElements as a scene graph instantiation. A GraphicBase is owned by a Sprite object.\n *\n *\n * @see away.base.TriangleElements\n * @see away.entities.Sprite\n *\n * @class away.base.GraphicBase\n */\nvar Font = (function (_super) {\n    __extends(Font, _super);\n    //TODO test shader picking\n    //\t\tpublic get shaderPickingDetails():boolean\n    //\t\t{\n    //\n    //\t\t\treturn this.sourceEntity.shaderPickingDetails;\n    //\t\t}\n    /**\n     * Creates a new TesselatedFont object\n     */\n    function Font() {\n        _super.call(this);\n        this._font_styles = new Array();\n    }\n    Object.defineProperty(Font.prototype, \"font_styles\", {\n        get: function () {\n            return this._font_styles;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Font.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            return Font.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    Font.prototype.dispose = function () {\n    };\n    /**\n     *Get a font-table for a specific name, or create one if it does not exists.\n     */\n    Font.prototype.get_font_table = function (style_name) {\n        var len = this._font_styles.length;\n        for (var i = 0; i < len; ++i) {\n            if (this._font_styles[i].name == style_name)\n                return this._font_styles[i];\n        }\n        var font_style = new TesselatedFontTable_1.default();\n        font_style.name = style_name;\n        this._font_styles.push(font_style);\n        return font_style;\n    };\n    Font.assetType = \"[asset Font]\";\n    return Font;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Font;\n\n},{\"awayjs-core/lib/library/AssetBase\":undefined,\"awayjs-display/lib/text/TesselatedFontTable\":\"awayjs-display/lib/text/TesselatedFontTable\"}],\"awayjs-display/lib/text/GridFitType\":[function(require,module,exports){\n\"use strict\";\n/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nvar GridFitType = (function () {\n    function GridFitType() {\n    }\n    /**\n     * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n     * not forced to the pixel grid. This constant is used in setting the\n     * <code>gridFitType</code> property of the TextField class. This is often a\n     * good setting for animation or for large font sizes. Use the syntax\n     * <code>GridFitType.NONE</code>.\n     */\n    GridFitType.NONE = \"none\";\n    /**\n     * Fits strong horizontal and vertical lines to the pixel grid. This constant\n     * is used in setting the <code>gridFitType</code> property of the TextField\n     * class. This setting only works for left-justified text fields and acts\n     * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n     * setting generally provides the best readability for left-aligned text. Use\n     * the syntax <code>GridFitType.PIXEL</code>.\n     */\n    GridFitType.PIXEL = \"pixel\";\n    /**\n     * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n     * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n     * is often a good setting for right-aligned or center-aligned dynamic text,\n     * and it is sometimes a useful tradeoff for animation vs. text quality. This\n     * constant is used in setting the <code>gridFitType</code> property of the\n     * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n     */\n    GridFitType.SUBPIXEL = \"subpixel\";\n    return GridFitType;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GridFitType;\n\n},{}],\"awayjs-display/lib/text/TesselatedFontChar\":[function(require,module,exports){\n\"use strict\";\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nvar TesselatedFontChar = (function () {\n    function TesselatedFontChar(elements) {\n        /**\n         * the char_codes that this geom has kerning set for\n         */\n        this.kerningCharCodes = new Array();\n        /**\n         * the kerning values per char_code\n         */\n        this.kerningValues = new Array();\n        this.elements = elements;\n    }\n    return TesselatedFontChar;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TesselatedFontChar;\n\n},{}],\"awayjs-display/lib/text/TesselatedFontTable\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar TesselatedFontChar_1 = require(\"awayjs-display/lib/text/TesselatedFontChar\");\n/**\n * GraphicBase wraps a TriangleElements as a scene graph instantiation. A GraphicBase is owned by a Sprite object.\n *\n *\n * @see away.base.TriangleElements\n * @see away.entities.Sprite\n *\n * @class away.base.GraphicBase\n */\nvar TesselatedFontTable = (function (_super) {\n    __extends(TesselatedFontTable, _super);\n    //TODO test shader picking\n    //\t\tpublic get shaderPickingDetails():boolean\n    //\t\t{\n    //\n    //\t\t\treturn this.sourceEntity.shaderPickingDetails;\n    //\t\t}\n    /**\n     * Creates a new TesselatedFont object\n     */\n    function TesselatedFontTable() {\n        _super.call(this);\n        this._font_chars = new Array();\n        this._font_chars_dic = new Object();\n        this._ascent = 0;\n        this._descent = 0;\n    }\n    /**\n     *\n     */\n    TesselatedFontTable.prototype.dispose = function () {\n    };\n    Object.defineProperty(TesselatedFontTable.prototype, \"ascent\", {\n        get: function () {\n            return this._ascent;\n        },\n        set: function (value) {\n            this._ascent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TesselatedFontTable.prototype, \"descent\", {\n        get: function () {\n            return this._descent;\n        },\n        set: function (value) {\n            this._descent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TesselatedFontTable.prototype, \"offset_x\", {\n        get: function () {\n            return this._offset_x;\n        },\n        set: function (value) {\n            this._offset_x = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TesselatedFontTable.prototype, \"offset_y\", {\n        get: function () {\n            return this._offset_y;\n        },\n        set: function (value) {\n            this._offset_y = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TesselatedFontTable.prototype.get_font_chars = function () {\n        return this._font_chars;\n    };\n    TesselatedFontTable.prototype.get_font_em_size = function () {\n        return this._font_em_size;\n    };\n    TesselatedFontTable.prototype.set_whitespace_width = function (value) {\n        this._whitespace_width = value;\n    };\n    TesselatedFontTable.prototype.get_whitespace_width = function () {\n        return this._whitespace_width;\n    };\n    TesselatedFontTable.prototype.set_font_em_size = function (font_em_size) {\n        this._font_em_size = font_em_size;\n    };\n    /**\n     *\n     */\n    TesselatedFontTable.prototype.getChar = function (name) {\n        return this._font_chars_dic[name];\n    };\n    /**\n     *\n     */\n    TesselatedFontTable.prototype.setChar = function (name, elements, char_width) {\n        var tesselated_font_char = new TesselatedFontChar_1.default(elements);\n        tesselated_font_char.char_width = char_width;\n        elements.name = name;\n        this._font_chars.push(tesselated_font_char);\n        this._font_chars_dic[name] = tesselated_font_char;\n    };\n    return TesselatedFontTable;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TesselatedFontTable;\n\n},{\"awayjs-core/lib/library/AssetBase\":undefined,\"awayjs-display/lib/text/TesselatedFontChar\":\"awayjs-display/lib/text/TesselatedFontChar\"}],\"awayjs-display/lib/text/TextFieldAutoSize\":[function(require,module,exports){\n\"use strict\";\n/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nvar TextFieldAutoSize = (function () {\n    function TextFieldAutoSize() {\n    }\n    /**\n     * Specifies that the text is to be treated as center-justified text. Any\n     * resizing of a single line of a text field is equally distributed to both\n     * the right and left sides.\n     */\n    TextFieldAutoSize.CENTER = \"center\";\n    /**\n     * Specifies that the text is to be treated as left-justified text, meaning\n     * that the left side of the text field remains fixed and any resizing of a\n     * single line is on the right side.\n     */\n    TextFieldAutoSize.LEFT = \"left\";\n    /**\n     * Specifies that no resizing is to occur.\n     */\n    TextFieldAutoSize.NONE = \"none\";\n    /**\n     * Specifies that the text is to be treated as right-justified text, meaning\n     * that the right side of the text field remains fixed and any resizing of a\n     * single line is on the left side.\n     */\n    TextFieldAutoSize.RIGHT = \"right\";\n    return TextFieldAutoSize;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TextFieldAutoSize;\n\n},{}],\"awayjs-display/lib/text/TextFieldType\":[function(require,module,exports){\n\"use strict\";\n/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nvar TextFieldType = (function () {\n    function TextFieldType() {\n    }\n    /**\n     * Used to specify a <code>dynamic</code> TextField.\n     */\n    TextFieldType.DYNAMIC = \"dynamic\";\n    /**\n     * Used to specify an <code>input</code> TextField.\n     */\n    TextFieldType.INPUT = \"input\";\n    /**\n     * Used to specify an <code>static</code> TextField.\n     */\n    TextFieldType.STATIC = \"input\";\n    return TextFieldType;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TextFieldType;\n\n},{}],\"awayjs-display/lib/text/TextFormatAlign\":[function(require,module,exports){\n\"use strict\";\n/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nvar TextFormatAlign = (function () {\n    function TextFormatAlign() {\n        /**\n         * Constant; centers the text in the text field. Use the syntax\n         * <code>TextFormatAlign.CENTER</code>.\n         */\n        this.CENTER = \"center\";\n        /**\n         * Constant; justifies text within the text field. Use the syntax\n         * <code>TextFormatAlign.JUSTIFY</code>.\n         */\n        this.JUSTIFY = \"justify\";\n        /**\n         * Constant; aligns text to the left within the text field. Use the syntax\n         * <code>TextFormatAlign.LEFT</code>.\n         */\n        this.LEFT = \"left\";\n        /**\n         * Constant; aligns text to the right within the text field. Use the syntax\n         * <code>TextFormatAlign.RIGHT</code>.\n         */\n        this.RIGHT = \"right\";\n    }\n    return TextFormatAlign;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TextFormatAlign;\n\n},{}],\"awayjs-display/lib/text/TextFormat\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nvar TextFormat = (function (_super) {\n    __extends(TextFormat, _super);\n    /**\n     * Creates a TextFormat object with the specified properties. You can then\n     * change the properties of the TextFormat object to change the formatting of\n     * text fields.\n     *\n     * <p>Any parameter may be set to <code>null</code> to indicate that it is\n     * not defined. All of the parameters are optional; any omitted parameters\n     * are treated as <code>null</code>.</p>\n     *\n     * @param font        The name of a font for text as a string.\n     * @param size        An integer that indicates the size in pixels.\n     * @param color       The color of text using this text format. A number\n     *                    containing three 8-bit RGB components; for example,\n     *                    0xFF0000 is red, and 0x00FF00 is green.\n     * @param bold        A Boolean value that indicates whether the text is\n     *                    boldface.\n     * @param italic      A Boolean value that indicates whether the text is\n     *                    italicized.\n     * @param underline   A Boolean value that indicates whether the text is\n     *                    underlined.\n     * @param url         The URL to which the text in this text format\n     *                    hyperlinks. If <code>url</code> is an empty string, the\n     *                    text does not have a hyperlink.\n     * @param target      The target window where the hyperlink is displayed. If\n     *                    the target window is an empty string, the text is\n     *                    displayed in the default target window\n     *                    <code>_self</code>. If the <code>url</code> parameter\n     *                    is set to an empty string or to the value\n     *                    <code>null</code>, you can get or set this property,\n     *                    but the property will have no effect.\n     * @param align       The alignment of the paragraph, as a TextFormatAlign\n     *                    value.\n     * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n     * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n     * @param indent      An integer that indicates the indentation from the left\n     *                    margin to the first character in the paragraph.\n     * @param leading     A number that indicates the amount of leading vertical\n     *                    space between lines.\n     */\n    function TextFormat(font, size, color, bold, italic, underline, url, link_target, align, leftMargin, rightMargin, indent, leading) {\n        if (font === void 0) { font = \"Times New Roman\"; }\n        if (size === void 0) { size = 12; }\n        if (color === void 0) { color = 0x000000; }\n        if (bold === void 0) { bold = false; }\n        if (italic === void 0) { italic = false; }\n        if (underline === void 0) { underline = false; }\n        if (url === void 0) { url = \"\"; }\n        if (link_target === void 0) { link_target = \"\"; }\n        if (align === void 0) { align = \"left\"; }\n        if (leftMargin === void 0) { leftMargin = 0; }\n        if (rightMargin === void 0) { rightMargin = 0; }\n        if (indent === void 0) { indent = 0; }\n        if (leading === void 0) { leading = 0; }\n        _super.call(this);\n        /**\n         * Specifies custom tab stops as an array of non-negative integers. Each tab\n         * stop is specified in pixels. If custom tab stops are not specified\n         * (<code>null</code>), the default tab stop is 4(average character width).\n         */\n        //todo: not used with in tesselated-font-table yet\n        this.tabStops = new Array();\n        this.font_name = font;\n        this.size = size;\n        this.bold = bold;\n        this.italic = italic;\n        this.underline = underline;\n        this.url = url;\n        this.link_target = link_target;\n        this.align = align;\n        this.leftMargin = leftMargin;\n        this.rightMargin = rightMargin;\n        this.indent = indent;\n        this.leading = leading;\n    }\n    Object.defineProperty(TextFormat.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            return TextFormat.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TextFormat.assetType = \"[asset TextFormat]\";\n    return TextFormat;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TextFormat;\n\n},{\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/text/TextInteractionMode\":[function(require,module,exports){\n\"use strict\";\n/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nvar TextInteractionMode = (function () {\n    function TextInteractionMode() {\n    }\n    /**\n     * The text field's default interaction mode is NORMAL and it varies across\n     * platform. On Desktop, the normal mode implies that the text field is in\n     * scrollable + selection mode. On Mobile platforms like Android, normal mode\n     * implies that the text field can only be scrolled but the text can not be\n     * selected.\n     */\n    TextInteractionMode.NORMAL = \"normal\";\n    /**\n     * On mobile platforms like Android, the text field starts in normal mode\n     * (which implies scroll and non-selectable mode). The user can switch to\n     * selection mode through the in-built context menu of the text field object.\n     */\n    TextInteractionMode.SELECTION = \"selection\";\n    return TextInteractionMode;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TextInteractionMode;\n\n},{}],\"awayjs-display/lib/text/TextLineMetrics\":[function(require,module,exports){\n\"use strict\";\n/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the\n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nvar TextLineMetrics = (function () {\n    /**\n     * Creates a TextLineMetrics object. The TextLineMetrics object contains\n     * information about the text metrics of a line of text in a text field.\n     * Objects of this class are returned by the\n     * away.entities.TextField.getLineMetrics() method.\n     *\n     * @param x           The left position of the first character in pixels.\n     * @param width       The width of the text of the selected lines (not\n     *                    necessarily the complete text) in pixels.\n     * @param height      The height of the text of the selected lines (not\n     *                    necessarily the complete text) in pixels.\n     * @param ascent      The length from the baseline to the top of the line\n     *                    height in pixels.\n     * @param descent     The length from the baseline to the bottom depth of\n     *                    the line in pixels.\n     * @param leading     The measurement of the vertical distance between the\n     *                    lines of text.\n     */\n    function TextLineMetrics(x, width, height, ascent, descent, leading) {\n        if (x === void 0) { x = NaN; }\n        if (width === void 0) { width = NaN; }\n        if (height === void 0) { height = NaN; }\n        if (ascent === void 0) { ascent = NaN; }\n        if (descent === void 0) { descent = NaN; }\n        if (leading === void 0) { leading = NaN; }\n    }\n    return TextLineMetrics;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TextLineMetrics;\n\n},{}],\"awayjs-display/lib/text\":[function(require,module,exports){\n\"use strict\";\nvar AntiAliasType_1 = require(\"awayjs-display/lib/text/AntiAliasType\");\nexports.AntiAliasType = AntiAliasType_1.default;\nvar Font_1 = require(\"awayjs-display/lib/text/Font\");\nexports.Font = Font_1.default;\nvar GridFitType_1 = require(\"awayjs-display/lib/text/GridFitType\");\nexports.GridFitType = GridFitType_1.default;\nvar TesselatedFontChar_1 = require(\"awayjs-display/lib/text/TesselatedFontChar\");\nexports.TesselatedFontChar = TesselatedFontChar_1.default;\nvar TesselatedFontTable_1 = require(\"awayjs-display/lib/text/TesselatedFontTable\");\nexports.TesselatedFontTable = TesselatedFontTable_1.default;\nvar TextFieldAutoSize_1 = require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nexports.TextFieldAutoSize = TextFieldAutoSize_1.default;\nvar TextFieldType_1 = require(\"awayjs-display/lib/text/TextFieldType\");\nexports.TextFieldType = TextFieldType_1.default;\nvar TextFormat_1 = require(\"awayjs-display/lib/text/TextFormat\");\nexports.TextFormat = TextFormat_1.default;\nvar TextFormatAlign_1 = require(\"awayjs-display/lib/text/TextFormatAlign\");\nexports.TextFormatAlign = TextFormatAlign_1.default;\nvar TextInteractionMode_1 = require(\"awayjs-display/lib/text/TextInteractionMode\");\nexports.TextInteractionMode = TextInteractionMode_1.default;\nvar TextLineMetrics_1 = require(\"awayjs-display/lib/text/TextLineMetrics\");\nexports.TextLineMetrics = TextLineMetrics_1.default;\n\n},{\"awayjs-display/lib/text/AntiAliasType\":\"awayjs-display/lib/text/AntiAliasType\",\"awayjs-display/lib/text/Font\":\"awayjs-display/lib/text/Font\",\"awayjs-display/lib/text/GridFitType\":\"awayjs-display/lib/text/GridFitType\",\"awayjs-display/lib/text/TesselatedFontChar\":\"awayjs-display/lib/text/TesselatedFontChar\",\"awayjs-display/lib/text/TesselatedFontTable\":\"awayjs-display/lib/text/TesselatedFontTable\",\"awayjs-display/lib/text/TextFieldAutoSize\":\"awayjs-display/lib/text/TextFieldAutoSize\",\"awayjs-display/lib/text/TextFieldType\":\"awayjs-display/lib/text/TextFieldType\",\"awayjs-display/lib/text/TextFormat\":\"awayjs-display/lib/text/TextFormat\",\"awayjs-display/lib/text/TextFormatAlign\":\"awayjs-display/lib/text/TextFormatAlign\",\"awayjs-display/lib/text/TextInteractionMode\":\"awayjs-display/lib/text/TextInteractionMode\",\"awayjs-display/lib/text/TextLineMetrics\":\"awayjs-display/lib/text/TextLineMetrics\"}],\"awayjs-display/lib/textures/MappingMode\":[function(require,module,exports){\n\"use strict\";\n/**\n\n\n */\nvar MappingMode = (function () {\n    function MappingMode() {\n    }\n    /**\n     *\n     */\n    MappingMode.NORMAL = \"normal\";\n    /**\n     *\n     */\n    MappingMode.LINEAR_GRADIENT = \"linearGradient\";\n    /**\n     *\n     */\n    MappingMode.RADIAL_GRADIENT = \"radialGradient\";\n    return MappingMode;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = MappingMode;\n\n},{}],\"awayjs-display/lib/textures/Single2DTexture\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ErrorBase_1 = require(\"awayjs-core/lib/errors/ErrorBase\");\nvar ImageUtils_1 = require(\"awayjs-core/lib/utils/ImageUtils\");\nvar MappingMode_1 = require(\"awayjs-display/lib/textures/MappingMode\");\nvar TextureBase_1 = require(\"awayjs-display/lib/textures/TextureBase\");\nvar Single2DTexture = (function (_super) {\n    __extends(Single2DTexture, _super);\n    function Single2DTexture(image2D) {\n        if (image2D === void 0) { image2D = null; }\n        _super.call(this);\n        this.setNumImages(1);\n        this.image2D = image2D;\n        this._mappingMode = MappingMode_1.default.NORMAL;\n    }\n    Object.defineProperty(Single2DTexture.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return Single2DTexture.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Single2DTexture.prototype, \"mappingMode\", {\n        get: function () {\n            return this._mappingMode;\n        },\n        set: function (value) {\n            if (this._mappingMode == value)\n                return;\n            this._mappingMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Single2DTexture.prototype, \"sampler2D\", {\n        /**\n         *\n         * @returns {Image2D}\n         */\n        get: function () {\n            return this._samplers[0];\n        },\n        set: function (value) {\n            if (this._samplers[0] == value)\n                return;\n            this.setSamplerAt(value, 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Single2DTexture.prototype, \"image2D\", {\n        /**\n         *\n         * @returns {Image2D}\n         */\n        get: function () {\n            return this._images[0];\n        },\n        set: function (value) {\n            if (this._images[0] == value)\n                return;\n            if (!ImageUtils_1.default.isImage2DValid(value))\n                throw new ErrorBase_1.default(\"Invalid image2DData: Width and height must be power of 2 and cannot exceed 2048\");\n            this.setImageAt(value, 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Single2DTexture.assetType = \"[texture Single2DTexture]\";\n    return Single2DTexture;\n}(TextureBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Single2DTexture;\n\n},{\"awayjs-core/lib/errors/ErrorBase\":undefined,\"awayjs-core/lib/utils/ImageUtils\":undefined,\"awayjs-display/lib/textures/MappingMode\":\"awayjs-display/lib/textures/MappingMode\",\"awayjs-display/lib/textures/TextureBase\":\"awayjs-display/lib/textures/TextureBase\"}],\"awayjs-display/lib/textures/SingleCubeTexture\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar TextureBase_1 = require(\"awayjs-display/lib/textures/TextureBase\");\nvar SingleCubeTexture = (function (_super) {\n    __extends(SingleCubeTexture, _super);\n    function SingleCubeTexture(imageCube) {\n        if (imageCube === void 0) { imageCube = null; }\n        _super.call(this);\n        this.setNumImages(1);\n        this.imageCube = imageCube;\n    }\n    Object.defineProperty(SingleCubeTexture.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return SingleCubeTexture.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SingleCubeTexture.prototype, \"samplerCube\", {\n        /**\n         *\n         * @returns {Image2D}\n         */\n        get: function () {\n            return this._samplers[0];\n        },\n        set: function (value) {\n            if (this._samplers[0] == value)\n                return;\n            this.setSamplerAt(value, 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SingleCubeTexture.prototype, \"imageCube\", {\n        /**\n         *\n         * @returns {ImageCube}\n         */\n        get: function () {\n            return this._images[0];\n        },\n        set: function (value) {\n            if (this._images[0] == value)\n                return;\n            this.setImageAt(value, 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SingleCubeTexture.assetType = \"[texture SingleCubeTexture]\";\n    return SingleCubeTexture;\n}(TextureBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SingleCubeTexture;\n\n},{\"awayjs-display/lib/textures/TextureBase\":\"awayjs-display/lib/textures/TextureBase\"}],\"awayjs-display/lib/textures/TextureBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\n/**\n *\n */\nvar TextureBase = (function (_super) {\n    __extends(TextureBase, _super);\n    /**\n     *\n     */\n    function TextureBase() {\n        _super.call(this);\n        this._numImages = 0;\n        this._images = new Array();\n        this._samplers = new Array();\n    }\n    TextureBase.prototype.getNumImages = function () {\n        return this._numImages;\n    };\n    TextureBase.prototype.setNumImages = function (value) {\n        if (this._numImages == value)\n            return;\n        this._numImages = value;\n        this._images.length = value;\n        this._samplers.length = value;\n        this.invalidate();\n    };\n    TextureBase.prototype.getImageAt = function (index) {\n        return this._images[index];\n    };\n    TextureBase.prototype.setImageAt = function (image, index) {\n        this._images[index] = image;\n        this.invalidate();\n    };\n    TextureBase.prototype.getSamplerAt = function (index) {\n        return this._samplers[index];\n    };\n    TextureBase.prototype.setSamplerAt = function (sampler, index) {\n        this._samplers[index] = sampler;\n        this.invalidate();\n    };\n    return TextureBase;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TextureBase;\n\n},{\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/textures\":[function(require,module,exports){\n\"use strict\";\nvar MappingMode_1 = require(\"awayjs-display/lib/textures/MappingMode\");\nexports.MappingMode = MappingMode_1.default;\nvar Single2DTexture_1 = require(\"awayjs-display/lib/textures/Single2DTexture\");\nexports.Single2DTexture = Single2DTexture_1.default;\nvar SingleCubeTexture_1 = require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nexports.SingleCubeTexture = SingleCubeTexture_1.default;\nvar TextureBase_1 = require(\"awayjs-display/lib/textures/TextureBase\");\nexports.TextureBase = TextureBase_1.default;\n\n},{\"awayjs-display/lib/textures/MappingMode\":\"awayjs-display/lib/textures/MappingMode\",\"awayjs-display/lib/textures/Single2DTexture\":\"awayjs-display/lib/textures/Single2DTexture\",\"awayjs-display/lib/textures/SingleCubeTexture\":\"awayjs-display/lib/textures/SingleCubeTexture\",\"awayjs-display/lib/textures/TextureBase\":\"awayjs-display/lib/textures/TextureBase\"}],\"awayjs-display/lib/utils/Cast\":[function(require,module,exports){\n\"use strict\";\nvar Image2D_1 = require(\"awayjs-core/lib/image/Image2D\");\nvar ByteArray_1 = require(\"awayjs-core/lib/utils/ByteArray\");\nvar CastError_1 = require(\"awayjs-display/lib/errors/CastError\");\nvar Single2DTexture_1 = require(\"awayjs-display/lib/textures/Single2DTexture\");\n/**\n * Helper class for casting assets to usable objects\n */\nvar Cast = (function () {\n    function Cast() {\n    }\n    Cast.string = function (data) {\n        if (typeof (data) == 'function')\n            data = new data;\n        if (typeof (data) == 'string')\n            return data;\n        return data;\n    };\n    Cast.byteArray = function (data) {\n        if (typeof (data) == 'function')\n            data = new data;\n        if (data instanceof ByteArray_1.default)\n            return data;\n        return data;\n    };\n    //        public static xml(data:any):XML\n    //        {\n    //            if (typeof(data) == 'function')\n    //                data = new data;\n    //\n    //            if (data is XML)\n    //                return data;\n    //\n    //            return XML(data);\n    //        }\n    Cast.isHex = function (str) {\n        var length = str.length;\n        for (var i = 0; i < length; ++i) {\n            if (this._hexChars.indexOf(str.charAt(i)) == -1)\n                return false;\n        }\n        return true;\n    };\n    Cast.tryColor = function (data) {\n        if (typeof (data) == 'number' /*uint*/)\n            return Math.floor(data);\n        if (typeof (data) == 'string') {\n            if (data == \"random\")\n                return Math.floor(Math.random() * 0x1000000);\n            if (this._colorNames == null) {\n                this._colorNames = new Object();\n                this._colorNames[\"steelblue\"] = 0x4682B4;\n                this._colorNames[\"royalblue\"] = 0x041690;\n                this._colorNames[\"cornflowerblue\"] = 0x6495ED;\n                this._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n                this._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n                this._colorNames[\"slateblue\"] = 0x6A5ACD;\n                this._colorNames[\"darkslateblue\"] = 0x483D8B;\n                this._colorNames[\"midnightblue\"] = 0x191970;\n                this._colorNames[\"navy\"] = 0x000080;\n                this._colorNames[\"darkblue\"] = 0x00008B;\n                this._colorNames[\"mediumblue\"] = 0x0000CD;\n                this._colorNames[\"blue\"] = 0x0000FF;\n                this._colorNames[\"dodgerblue\"] = 0x1E90FF;\n                this._colorNames[\"deepskyblue\"] = 0x00BFFF;\n                this._colorNames[\"lightskyblue\"] = 0x87CEFA;\n                this._colorNames[\"skyblue\"] = 0x87CEEB;\n                this._colorNames[\"lightblue\"] = 0xADD8E6;\n                this._colorNames[\"powderblue\"] = 0xB0E0E6;\n                this._colorNames[\"azure\"] = 0xF0FFFF;\n                this._colorNames[\"lightcyan\"] = 0xE0FFFF;\n                this._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n                this._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n                this._colorNames[\"lightseagreen\"] = 0x20B2AA;\n                this._colorNames[\"darkcyan\"] = 0x008B8B;\n                this._colorNames[\"teal\"] = 0x008080;\n                this._colorNames[\"cadetblue\"] = 0x5F9EA0;\n                this._colorNames[\"darkturquoise\"] = 0x00CED1;\n                this._colorNames[\"aqua\"] = 0x00FFFF;\n                this._colorNames[\"cyan\"] = 0x00FFFF;\n                this._colorNames[\"turquoise\"] = 0x40E0D0;\n                this._colorNames[\"aquamarine\"] = 0x7FFFD4;\n                this._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n                this._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n                this._colorNames[\"mediumseagreen\"] = 0x3CB371;\n                this._colorNames[\"seagreen\"] = 0x2E8B57;\n                this._colorNames[\"darkgreen\"] = 0x006400;\n                this._colorNames[\"green\"] = 0x008000;\n                this._colorNames[\"forestgreen\"] = 0x228B22;\n                this._colorNames[\"limegreen\"] = 0x32CD32;\n                this._colorNames[\"lime\"] = 0x00FF00;\n                this._colorNames[\"chartreuse\"] = 0x7FFF00;\n                this._colorNames[\"lawngreen\"] = 0x7CFC00;\n                this._colorNames[\"greenyellow\"] = 0xADFF2F;\n                this._colorNames[\"yellowgreen\"] = 0x9ACD32;\n                this._colorNames[\"palegreen\"] = 0x98FB98;\n                this._colorNames[\"lightgreen\"] = 0x90EE90;\n                this._colorNames[\"springgreen\"] = 0x00FF7F;\n                this._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n                this._colorNames[\"darkolivegreen\"] = 0x556B2F;\n                this._colorNames[\"olivedrab\"] = 0x6B8E23;\n                this._colorNames[\"olive\"] = 0x808000;\n                this._colorNames[\"darkkhaki\"] = 0xBDB76B;\n                this._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n                this._colorNames[\"goldenrod\"] = 0xDAA520;\n                this._colorNames[\"gold\"] = 0xFFD700;\n                this._colorNames[\"yellow\"] = 0xFFFF00;\n                this._colorNames[\"khaki\"] = 0xF0E68C;\n                this._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n                this._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n                this._colorNames[\"moccasin\"] = 0xFFE4B5;\n                this._colorNames[\"wheat\"] = 0xF5DEB3;\n                this._colorNames[\"navajowhite\"] = 0xFFDEAD;\n                this._colorNames[\"burlywood\"] = 0xDEB887;\n                this._colorNames[\"tan\"] = 0xD2B48C;\n                this._colorNames[\"rosybrown\"] = 0xBC8F8F;\n                this._colorNames[\"sienna\"] = 0xA0522D;\n                this._colorNames[\"saddlebrown\"] = 0x8B4513;\n                this._colorNames[\"chocolate\"] = 0xD2691E;\n                this._colorNames[\"peru\"] = 0xCD853F;\n                this._colorNames[\"sandybrown\"] = 0xF4A460;\n                this._colorNames[\"darkred\"] = 0x8B0000;\n                this._colorNames[\"maroon\"] = 0x800000;\n                this._colorNames[\"brown\"] = 0xA52A2A;\n                this._colorNames[\"firebrick\"] = 0xB22222;\n                this._colorNames[\"indianred\"] = 0xCD5C5C;\n                this._colorNames[\"lightcoral\"] = 0xF08080;\n                this._colorNames[\"salmon\"] = 0xFA8072;\n                this._colorNames[\"darksalmon\"] = 0xE9967A;\n                this._colorNames[\"lightsalmon\"] = 0xFFA07A;\n                this._colorNames[\"coral\"] = 0xFF7F50;\n                this._colorNames[\"tomato\"] = 0xFF6347;\n                this._colorNames[\"darkorange\"] = 0xFF8C00;\n                this._colorNames[\"orange\"] = 0xFFA500;\n                this._colorNames[\"orangered\"] = 0xFF4500;\n                this._colorNames[\"crimson\"] = 0xDC143C;\n                this._colorNames[\"red\"] = 0xFF0000;\n                this._colorNames[\"deeppink\"] = 0xFF1493;\n                this._colorNames[\"fuchsia\"] = 0xFF00FF;\n                this._colorNames[\"magenta\"] = 0xFF00FF;\n                this._colorNames[\"hotpink\"] = 0xFF69B4;\n                this._colorNames[\"lightpink\"] = 0xFFB6C1;\n                this._colorNames[\"pink\"] = 0xFFC0CB;\n                this._colorNames[\"palevioletred\"] = 0xDB7093;\n                this._colorNames[\"mediumvioletred\"] = 0xC71585;\n                this._colorNames[\"purple\"] = 0x800080;\n                this._colorNames[\"darkmagenta\"] = 0x8B008B;\n                this._colorNames[\"mediumpurple\"] = 0x9370DB;\n                this._colorNames[\"blueviolet\"] = 0x8A2BE2;\n                this._colorNames[\"indigo\"] = 0x4B0082;\n                this._colorNames[\"darkviolet\"] = 0x9400D3;\n                this._colorNames[\"darkorchid\"] = 0x9932CC;\n                this._colorNames[\"mediumorchid\"] = 0xBA55D3;\n                this._colorNames[\"orchid\"] = 0xDA70D6;\n                this._colorNames[\"violet\"] = 0xEE82EE;\n                this._colorNames[\"plum\"] = 0xDDA0DD;\n                this._colorNames[\"thistle\"] = 0xD8BFD8;\n                this._colorNames[\"lavender\"] = 0xE6E6FA;\n                this._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n                this._colorNames[\"aliceblue\"] = 0xF0F8FF;\n                this._colorNames[\"mintcream\"] = 0xF5FFFA;\n                this._colorNames[\"honeydew\"] = 0xF0FFF0;\n                this._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n                this._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n                this._colorNames[\"cornsilk\"] = 0xFFF8DC;\n                this._colorNames[\"lightyellow\"] = 0xFFFFE0;\n                this._colorNames[\"ivory\"] = 0xFFFFF0;\n                this._colorNames[\"floralwhite\"] = 0xFFFAF0;\n                this._colorNames[\"linen\"] = 0xFAF0E6;\n                this._colorNames[\"oldlace\"] = 0xFDF5E6;\n                this._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n                this._colorNames[\"bisque\"] = 0xFFE4C4;\n                this._colorNames[\"peachpuff\"] = 0xFFDAB9;\n                this._colorNames[\"papayawhip\"] = 0xFFEFD5;\n                this._colorNames[\"beige\"] = 0xF5F5DC;\n                this._colorNames[\"seashell\"] = 0xFFF5EE;\n                this._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n                this._colorNames[\"mistyrose\"] = 0xFFE4E1;\n                this._colorNames[\"snow\"] = 0xFFFAFA;\n                this._colorNames[\"white\"] = 0xFFFFFF;\n                this._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n                this._colorNames[\"gainsboro\"] = 0xDCDCDC;\n                this._colorNames[\"lightgrey\"] = 0xD3D3D3;\n                this._colorNames[\"silver\"] = 0xC0C0C0;\n                this._colorNames[\"darkgrey\"] = 0xA9A9A9;\n                this._colorNames[\"grey\"] = 0x808080;\n                this._colorNames[\"lightslategrey\"] = 0x778899;\n                this._colorNames[\"slategrey\"] = 0x708090;\n                this._colorNames[\"dimgrey\"] = 0x696969;\n                this._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n                this._colorNames[\"black\"] = 0x000000;\n                this._colorNames[\"transparent\"] = 0xFF000000;\n            }\n            if (this._colorNames[data] != null)\n                return this._colorNames[data];\n            if ((data.length == 6) && this.isHex(data))\n                return parseInt(\"0x\" + data);\n        }\n        return null;\n    };\n    Cast.color = function (data) {\n        var result = this.tryColor(data);\n        if (result == null)\n            throw new CastError_1.default(\"Can't cast to color: \" + data);\n        return result;\n    };\n    Cast.tryClass = function (name) {\n        if (this._notClasses[name])\n            return name;\n        var result = this._classes[name];\n        if (result != null)\n            return result;\n        try {\n            result = window[name];\n            this._classes[name] = result;\n            return result;\n        }\n        catch (e /*ReferenceError*/) {\n        }\n        this._notClasses[name] = true;\n        return name;\n    };\n    Cast.image2D = function (data) {\n        if (data == null)\n            return null;\n        if (typeof (data) == 'string')\n            data = this.tryClass(data);\n        if (typeof (data) == 'function') {\n            try {\n                data = new data();\n            }\n            catch (e /*ArgumentError*/) {\n                data = new data(0, 0);\n            }\n        }\n        if (data instanceof Image2D_1.default)\n            return data;\n        if (data instanceof Single2DTexture_1.default)\n            data = data.image2D;\n        throw new CastError_1.default(\"Can't cast to BitmapImage2D: \" + data);\n    };\n    Cast.bitmapTexture = function (data) {\n        if (data == null)\n            return null;\n        if (typeof (data) == 'string')\n            data = this.tryClass(data);\n        if (typeof (data) == 'function') {\n            try {\n                data = new data();\n            }\n            catch (e /*ArgumentError*/) {\n                data = new data(0, 0);\n            }\n        }\n        if (data instanceof Single2DTexture_1.default)\n            return data;\n        try {\n            var bmd = Cast.image2D(data);\n            return new Single2DTexture_1.default(bmd);\n        }\n        catch (e /*CastError*/) {\n        }\n        throw new CastError_1.default(\"Can't cast to Single2DTexture: \" + data);\n    };\n    Cast._hexChars = \"0123456789abcdefABCDEF\";\n    Cast._notClasses = new Object();\n    Cast._classes = new Object();\n    return Cast;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Cast;\n\n},{\"awayjs-core/lib/image/Image2D\":undefined,\"awayjs-core/lib/utils/ByteArray\":undefined,\"awayjs-display/lib/errors/CastError\":\"awayjs-display/lib/errors/CastError\",\"awayjs-display/lib/textures/Single2DTexture\":\"awayjs-display/lib/textures/Single2DTexture\"}],\"awayjs-display/lib/utils/ElementsUtils\":[function(require,module,exports){\n\"use strict\";\nvar AttributesBuffer_1 = require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nvar Float3Attributes_1 = require(\"awayjs-core/lib/attributes/Float3Attributes\");\nvar Float4Attributes_1 = require(\"awayjs-core/lib/attributes/Float4Attributes\");\nvar Byte4Attributes_1 = require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar Box_1 = require(\"awayjs-core/lib/geom/Box\");\nvar Sphere_1 = require(\"awayjs-core/lib/geom/Sphere\");\nvar ElementsUtils = (function () {\n    function ElementsUtils() {\n    }\n    ElementsUtils.generateFaceNormals = function (indexAttributes, positionAttributes, output, count, offset) {\n        if (offset === void 0) { offset = 0; }\n        var indices = indexAttributes.get(count, offset);\n        var positions = positionAttributes.get(positionAttributes.count);\n        if (output == null)\n            output = new Float4Attributes_1.default(count + offset);\n        else if (output.count < count + offset)\n            output.count = count + offset;\n        var indexDim = indexAttributes.dimensions;\n        var positionDim = positionAttributes.dimensions;\n        var faceNormals = output.get(count, offset);\n        //multiply by dimension to get index length\n        count *= indexDim;\n        var i = 0;\n        var j = 0;\n        var index;\n        var x1, x2, x3;\n        var y1, y2, y3;\n        var z1, z2, z3;\n        var dx1, dy1, dz1;\n        var dx2, dy2, dz2;\n        var cx, cy, cz;\n        var d;\n        if (positionDim == 3) {\n            while (i < count) {\n                index = indices[i++] * 3;\n                x1 = positions[index];\n                y1 = positions[index + 1];\n                z1 = positions[index + 2];\n                index = indices[i++] * 3;\n                x2 = positions[index];\n                y2 = positions[index + 1];\n                z2 = positions[index + 2];\n                index = indices[i++] * 3;\n                x3 = positions[index];\n                y3 = positions[index + 1];\n                z3 = positions[index + 2];\n                dx1 = x3 - x1;\n                dy1 = y3 - y1;\n                dz1 = z3 - z1;\n                dx2 = x2 - x1;\n                dy2 = y2 - y1;\n                dz2 = z2 - z1;\n                cx = dz1 * dy2 - dy1 * dz2;\n                cy = dx1 * dz2 - dz1 * dx2;\n                cz = dy1 * dx2 - dx1 * dy2;\n                d = Math.sqrt(cx * cx + cy * cy + cz * cz);\n                // length of cross product = 2*triangle area\n                faceNormals[j++] = cx;\n                faceNormals[j++] = cy;\n                faceNormals[j++] = cz;\n                faceNormals[j++] = d;\n            }\n        }\n        else if (positionDim == 2) {\n            while (i < count) {\n                faceNormals[j++] = 0;\n                faceNormals[j++] = 0;\n                faceNormals[j++] = 1;\n                faceNormals[j++] = 1;\n                i += 3;\n            }\n        }\n        output.set(faceNormals, offset);\n        return output;\n    };\n    ElementsUtils.generateNormals = function (indexAttributes, faceNormalAttributes, output, concatenatedBuffer) {\n        var indices = indexAttributes.get(indexAttributes.count);\n        var faceNormals = faceNormalAttributes.get(faceNormalAttributes.count);\n        if (output == null)\n            output = new Float3Attributes_1.default(concatenatedBuffer);\n        var indexDim = indexAttributes.dimensions;\n        var outputDim = output.dimensions;\n        var normals = output.get(output.count);\n        var i = 0;\n        var len = output.count * outputDim;\n        //clear normal values\n        while (i < len) {\n            normals[i++] = 0;\n            normals[i++] = 0;\n            normals[i++] = 0;\n        }\n        i = 0;\n        len = indexAttributes.count * indexDim;\n        var index;\n        var f1 = 0;\n        var f2 = 1;\n        var f3 = 2;\n        //collect face normals\n        while (i < len) {\n            index = indices[i++] * outputDim;\n            normals[index] += faceNormals[f1];\n            normals[index + 1] += faceNormals[f2];\n            normals[index + 2] += faceNormals[f3];\n            index = indices[i++] * outputDim;\n            normals[index] += faceNormals[f1];\n            normals[index + 1] += faceNormals[f2];\n            normals[index + 2] += faceNormals[f3];\n            index = indices[i++] * outputDim;\n            normals[index] += faceNormals[f1];\n            normals[index + 1] += faceNormals[f2];\n            normals[index + 2] += faceNormals[f3];\n            f1 += 4;\n            f2 += 4;\n            f3 += 4;\n        }\n        i = 0;\n        len = output.count * outputDim;\n        var vx;\n        var vy;\n        var vz;\n        var d;\n        //normalise normals collections\n        while (i < len) {\n            vx = normals[i];\n            vy = normals[i + 1];\n            vz = normals[i + 2];\n            d = 1.0 / Math.sqrt(vx * vx + vy * vy + vz * vz);\n            normals[i++] = vx * d;\n            normals[i++] = vy * d;\n            normals[i++] = vz * d;\n        }\n        output.set(normals);\n        return output;\n    };\n    ElementsUtils.generateFaceTangents = function (indexAttributes, positionAttributes, uvAttributes, output, count, offset, useFaceWeights) {\n        if (offset === void 0) { offset = 0; }\n        if (useFaceWeights === void 0) { useFaceWeights = false; }\n        var indices = indexAttributes.get(count, offset);\n        var positions = positionAttributes.get(positionAttributes.count);\n        var uvs = uvAttributes.get(uvAttributes.count);\n        if (output == null)\n            output = new Float3Attributes_1.default(count + offset);\n        else if (output.count < count + offset)\n            output.count = count + offset;\n        var positionDim = positionAttributes.dimensions;\n        var uvDim = uvAttributes.dimensions;\n        var indexDim = indexAttributes.dimensions;\n        var faceTangents = output.get(count, offset);\n        var i = 0;\n        var index1;\n        var index2;\n        var index3;\n        var v0;\n        var v1;\n        var v2;\n        var dv1;\n        var dv2;\n        var denom;\n        var x0, y0, z0;\n        var dx1, dy1, dz1;\n        var dx2, dy2, dz2;\n        var cx, cy, cz;\n        //multiply by dimension to get index length\n        count *= indexDim;\n        while (i < count) {\n            index1 = indices[i];\n            index2 = indices[i + 1];\n            index3 = indices[i + 2];\n            v0 = uvs[index1 * uvDim + 1];\n            dv1 = uvs[index2 * uvDim + 1] - v0;\n            dv2 = uvs[index3 * uvDim + 1] - v0;\n            v0 = index1 * positionDim;\n            v1 = index2 * positionDim;\n            v2 = index3 * positionDim;\n            x0 = positions[v0];\n            dx1 = positions[v1] - x0;\n            dx2 = positions[v2] - x0;\n            cx = dv2 * dx1 - dv1 * dx2;\n            y0 = positions[v0 + 1];\n            dy1 = positions[v1 + 1] - y0;\n            dy2 = positions[v2 + 1] - y0;\n            cy = dv2 * dy1 - dv1 * dy2;\n            if (positionDim == 3) {\n                z0 = positions[v0 + 2];\n                dz1 = positions[v1 + 2] - z0;\n                dz2 = positions[v2 + 2] - z0;\n                cz = dv2 * dz1 - dv1 * dz2;\n            }\n            else {\n                cz = 0;\n            }\n            denom = 1 / Math.sqrt(cx * cx + cy * cy + cz * cz);\n            faceTangents[i++] = denom * cx;\n            faceTangents[i++] = denom * cy;\n            faceTangents[i++] = denom * cz;\n        }\n        output.set(faceTangents, offset);\n        return output;\n    };\n    ElementsUtils.generateTangents = function (indexAttributes, faceTangentAttributes, faceNormalAttributes, output, concatenatedBuffer) {\n        var indices = indexAttributes.get(indexAttributes.count);\n        var faceTangents = faceTangentAttributes.get(faceTangentAttributes.count);\n        var faceNormals = faceNormalAttributes.get(faceNormalAttributes.count);\n        if (output == null)\n            output = new Float3Attributes_1.default(concatenatedBuffer);\n        var indexDim = indexAttributes.dimensions;\n        var outputDim = output.dimensions;\n        var tangents = output.get(output.count);\n        var i = 0;\n        var len = output.count * outputDim;\n        //clear tangent values\n        while (i < len) {\n            tangents[i++] = 0;\n            tangents[i++] = 0;\n            tangents[i++] = 0;\n        }\n        var weight;\n        var index;\n        var f1 = 0;\n        var f2 = 1;\n        var f3 = 2;\n        var f4 = 3;\n        i = 0;\n        len = indexAttributes.count * indexDim;\n        //collect face tangents\n        while (i < len) {\n            weight = faceNormals[f4];\n            index = indices[i++] * outputDim;\n            tangents[index++] += faceTangents[f1] * weight;\n            tangents[index++] += faceTangents[f2] * weight;\n            tangents[index] += faceTangents[f3] * weight;\n            index = indices[i++] * outputDim;\n            tangents[index++] += faceTangents[f1] * weight;\n            tangents[index++] += faceTangents[f2] * weight;\n            tangents[index] += faceTangents[f3] * weight;\n            index = indices[i++] * outputDim;\n            tangents[index++] += faceTangents[f1] * weight;\n            tangents[index++] += faceTangents[f2] * weight;\n            tangents[index] += faceTangents[f3] * weight;\n            f1 += 3;\n            f2 += 3;\n            f3 += 3;\n            f4 += 4;\n        }\n        i = 0;\n        len = output.count * outputDim;\n        var vx;\n        var vy;\n        var vz;\n        var d;\n        //normalise tangents collections\n        while (i < len) {\n            vx = tangents[i];\n            vy = tangents[i + 1];\n            vz = tangents[i + 2];\n            d = 1.0 / Math.sqrt(vx * vx + vy * vy + vz * vz);\n            tangents[i++] = vx * d;\n            tangents[i++] = vy * d;\n            tangents[i++] = vz * d;\n        }\n        output.set(tangents);\n        return output;\n    };\n    ElementsUtils.generateColors = function (indexAttributes, output, concatenatedBuffer, count, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (output == null)\n            output = new Byte4Attributes_1.default(concatenatedBuffer);\n        var index = 0;\n        var colors = new Uint8Array(count * 4);\n        while (index < count * 4) {\n            if (index / 4 & 1) {\n                colors[index] = 0xFF;\n                colors[index + 1] = 0xFF;\n                colors[index + 2] = 0xFF;\n                colors[index + 3] = 0xFF;\n            }\n            else {\n                colors[index] = 0xFF;\n                colors[index + 1] = 0xFF;\n                colors[index + 2] = 0xFF;\n                colors[index + 3] = 0xFF;\n            }\n            index += 4;\n        }\n        output.set(colors, offset);\n        return output;\n    };\n    ElementsUtils.scaleUVs = function (scaleU, scaleV, output, count, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (output.count < count + offset)\n            output.count = count + offset;\n        var outputDim = output.dimensions;\n        var uvs = output.get(count, offset);\n        var i = 0;\n        var j = 0;\n        var len = count * outputDim;\n        while (i < len) {\n            uvs[i++] *= scaleU;\n            uvs[i++] *= scaleV;\n        }\n        output.set(uvs, offset);\n    };\n    ElementsUtils.scale = function (scale, output, count, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (output.count < count + offset)\n            output.count = count + offset;\n        var outputDim = output.dimensions;\n        var positions = output.get(count, offset);\n        var i = 0;\n        var j = 0;\n        var len = count * outputDim;\n        while (i < len) {\n            positions[i++] *= scale;\n            positions[i++] *= scale;\n            positions[i++] *= scale;\n        }\n        output.set(positions, offset);\n    };\n    ElementsUtils.applyTransformation = function (transform, positionAttributes, normalAttributes, tangentAttributes, count, offset) {\n        if (offset === void 0) { offset = 0; }\n        //todo: make this compatible with 2-dimensional positions\n        var positions = positionAttributes.get(count, offset);\n        var positionDim = positionAttributes.dimensions;\n        var normals;\n        var normalDim;\n        if (normalAttributes) {\n            normals = normalAttributes.get(count, offset);\n            normalDim = normalAttributes.dimensions;\n        }\n        var tangents;\n        var tangentDim;\n        if (tangentAttributes) {\n            tangents = tangentAttributes.get(count, offset);\n            tangentDim = tangentAttributes.dimensions;\n        }\n        var i;\n        var i1;\n        var i2;\n        var vector = new Vector3D_1.default();\n        var invTranspose;\n        if (normalAttributes || tangentAttributes) {\n            invTranspose = transform.clone();\n            invTranspose.invert();\n            invTranspose.transpose();\n        }\n        var vi0 = 0;\n        var ni0 = 0;\n        var ti0 = 0;\n        for (i = 0; i < count; ++i) {\n            // bake position\n            i1 = vi0 + 1;\n            i2 = vi0 + 2;\n            vector.x = positions[vi0];\n            vector.y = positions[i1];\n            vector.z = positions[i2];\n            vector = transform.transformVector(vector);\n            positions[vi0] = vector.x;\n            positions[i1] = vector.y;\n            positions[i2] = vector.z;\n            vi0 += positionDim;\n            if (normals) {\n                // bake normal\n                i1 = ni0 + 1;\n                i2 = ni0 + 2;\n                vector.x = normals[ni0];\n                vector.y = normals[i1];\n                vector.z = normals[i2];\n                vector = invTranspose.deltaTransformVector(vector);\n                vector.normalize();\n                normals[ni0] = vector.x;\n                normals[i1] = vector.y;\n                normals[i2] = vector.z;\n                ni0 += normalDim;\n            }\n            if (tangents) {\n                // bake tangent\n                i1 = ti0 + 1;\n                i2 = ti0 + 2;\n                vector.x = tangents[ti0];\n                vector.y = tangents[i1];\n                vector.z = tangents[i2];\n                vector = invTranspose.deltaTransformVector(vector);\n                vector.normalize();\n                tangents[ti0] = vector.x;\n                tangents[i1] = vector.y;\n                tangents[i2] = vector.z;\n                ti0 += tangentDim;\n            }\n        }\n        positionAttributes.set(positions, offset);\n        if (normalAttributes)\n            normalAttributes.set(normals, offset);\n        if (tangentAttributes)\n            tangentAttributes.set(tangents, offset);\n    };\n    ElementsUtils.getSubIndices = function (indexAttributes, numVertices, indexMappings, indexOffset) {\n        if (indexOffset === void 0) { indexOffset = 0; }\n        var buffer = indexAttributes.buffer;\n        var numIndices = indexAttributes.length;\n        //reset mappings\n        indexMappings.length = 0;\n        //shortcut for those buffers that fit into the maximum buffer sizes\n        if (numIndices < ElementsUtils.LIMIT_INDICES && numVertices < ElementsUtils.LIMIT_VERTS)\n            return buffer;\n        var i;\n        var indices = indexAttributes.get(indexAttributes.count, indexOffset);\n        var splitIndices = new Array();\n        var indexSwap = ElementsUtils._indexSwap;\n        indexSwap.length = numIndices;\n        for (i = 0; i < numIndices; i++)\n            indexSwap[i] = -1;\n        var originalIndex;\n        var splitIndex;\n        var index = 0;\n        var offsetLength = indexOffset * indexAttributes.dimensions;\n        // Loop over all triangles\n        i = 0;\n        while (i < numIndices + offsetLength && i + 1 < ElementsUtils.LIMIT_INDICES && index + 1 < ElementsUtils.LIMIT_VERTS) {\n            originalIndex = indices[i];\n            if (indexSwap[originalIndex] >= 0) {\n                splitIndex = indexSwap[originalIndex];\n            }\n            else {\n                // This vertex does not yet exist in the split list and\n                // needs to be copied from the long list.\n                splitIndex = index++;\n                indexSwap[originalIndex] = splitIndex;\n                indexMappings[splitIndex] = originalIndex;\n            }\n            // Store new index, which may have come from the swap look-up,\n            // or from copying a new set of vertex data from the original vector\n            splitIndices[i++] = splitIndex;\n        }\n        buffer = new AttributesBuffer_1.default(indexAttributes.size * indexAttributes.dimensions, splitIndices.length / indexAttributes.dimensions);\n        indexAttributes = indexAttributes.clone(buffer);\n        indexAttributes.set(splitIndices);\n        return buffer;\n    };\n    ElementsUtils.getSubVertices = function (vertexBuffer, indexMappings) {\n        if (!indexMappings.length)\n            return vertexBuffer;\n        var stride = vertexBuffer.stride;\n        var vertices = vertexBuffer.bufferView;\n        var splitVerts = new Uint8Array(indexMappings.length * stride);\n        var splitIndex;\n        var originalIndex;\n        var i = 0;\n        var j = 0;\n        var len = indexMappings.length;\n        for (i = 0; i < len; i++) {\n            splitIndex = i * stride;\n            originalIndex = indexMappings[i] * stride;\n            for (j = 0; j < stride; j++)\n                splitVerts[splitIndex + j] = vertices[originalIndex + j];\n        }\n        vertexBuffer = new AttributesBuffer_1.default(stride, len);\n        vertexBuffer.bufferView = splitVerts;\n        return vertexBuffer;\n    };\n    //TODO - generate this dyanamically based on num tris\n    ElementsUtils.hitTestTriangleElements = function (x, y, z, boundingBox, triangleElements) {\n        var positionAttributes = triangleElements.positions;\n        var curveAttributes = triangleElements.getCustomAtributes(\"curves\");\n        var count = triangleElements.numVertices;\n        var posDim = positionAttributes.dimensions;\n        var curveDim = curveAttributes.dimensions;\n        var positions = positionAttributes.get(count);\n        var curves = curveAttributes ? curveAttributes.get(count) : null;\n        var id0;\n        var id1;\n        var id2;\n        var ax;\n        var ay;\n        var bx;\n        var by;\n        var cx;\n        var cy;\n        var index = triangleElements.lastCollisionIndex;\n        if (index != -1 && index < count) {\n            precheck: {\n                id0 = index + 2;\n                id1 = index + 1;\n                id2 = index + 0;\n                ax = positions[id0 * posDim];\n                ay = positions[id0 * posDim + 1];\n                bx = positions[id1 * posDim];\n                by = positions[id1 * posDim + 1];\n                cx = positions[id2 * posDim];\n                cy = positions[id2 * posDim + 1];\n                //console.log(ax, ay, bx, by, cx, cy);\n                //from a to p\n                var dx = ax - x;\n                var dy = ay - y;\n                //edge normal (a-b)\n                var nx = by - ay;\n                var ny = -(bx - ax);\n                //console.log(ax,ay,bx,by,cx,cy);\n                var dot = (dx * nx) + (dy * ny);\n                if (dot > 0)\n                    break precheck;\n                dx = bx - x;\n                dy = by - y;\n                nx = cy - by;\n                ny = -(cx - bx);\n                dot = (dx * nx) + (dy * ny);\n                if (dot > 0)\n                    break precheck;\n                dx = cx - x;\n                dy = cy - y;\n                nx = ay - cy;\n                ny = -(ax - cx);\n                dot = (dx * nx) + (dy * ny);\n                if (dot > 0)\n                    break precheck;\n                if (curves) {\n                    var curvey0 = curves[id0 * curveDim + 2];\n                    var curvey1 = curves[id1 * curveDim + 2];\n                    var curvey2 = curves[id2 * curveDim + 2];\n                    //check if not solid\n                    if (curvey0 || curvey1 || curvey2) {\n                        var v0x = bx - ax;\n                        var v0y = by - ay;\n                        var v1x = cx - ax;\n                        var v1y = cy - ay;\n                        var v2x = x - ax;\n                        var v2y = y - ay;\n                        var den = v0x * v1y - v1x * v0y;\n                        var v = (v2x * v1y - v1x * v2y) / den;\n                        var w = (v0x * v2y - v2x * v0y) / den;\n                        //var u:number = 1 - v - w;\t//commented out as inlined away\n                        //here be dragons\n                        var uu = 0.5 * v + w;\n                        var vv = w;\n                        var d = uu * uu - vv;\n                        var az = curves[id0 * curveDim];\n                        if (d > 0 && az == -128) {\n                            break precheck;\n                            ;\n                        }\n                        else if (d < 0 && az == 127) {\n                            break precheck;\n                            ;\n                        }\n                    }\n                }\n                return true;\n            }\n        }\n        //hard coded min vertex count to bother using a grid for\n        if (count > 150) {\n            var cells = triangleElements.cells;\n            var divisions = cells.length ? triangleElements.divisions : (triangleElements.divisions = Math.min(Math.ceil(Math.sqrt(count)), 32));\n            var conversionX = divisions / boundingBox.width;\n            var conversionY = divisions / boundingBox.height;\n            var minx = boundingBox.x;\n            var miny = boundingBox.y;\n            if (!cells.length) {\n                //now we have bounds start creating grid cells and filling\n                cells.length = divisions * divisions;\n                for (var k = 0; k < count; k += 3) {\n                    id0 = k + 2;\n                    id1 = k + 1;\n                    id2 = k + 0;\n                    ax = positions[id0 * posDim];\n                    ay = positions[id0 * posDim + 1];\n                    bx = positions[id1 * posDim];\n                    by = positions[id1 * posDim + 1];\n                    cx = positions[id2 * posDim];\n                    cy = positions[id2 * posDim + 1];\n                    //subtractions to push into positive space\n                    var min_index_x = Math.floor((Math.min(ax, bx, cx) - minx) * conversionX);\n                    var min_index_y = Math.floor((Math.min(ay, by, cy) - miny) * conversionY);\n                    var max_index_x = Math.floor((Math.max(ax, bx, cx) - minx) * conversionX);\n                    var max_index_y = Math.floor((Math.max(ay, by, cy) - miny) * conversionY);\n                    for (var i = min_index_x; i <= max_index_x; i++) {\n                        for (var j = min_index_y; j <= max_index_y; j++) {\n                            var index = i + j * divisions;\n                            var nodes = cells[index] || (cells[index] = new Array());\n                            //push in the triangle ids\n                            nodes.push(id0, id1, id2);\n                        }\n                    }\n                }\n            }\n            var index_x = Math.floor((x - minx) * conversionX);\n            var index_y = Math.floor((y - miny) * conversionY);\n            if ((index_x < 0 || index_x > divisions || index_y < 0 || index_y > divisions))\n                return false;\n            var nodes = cells[index_x + index_y * divisions];\n            if (nodes == null)\n                return false;\n            var nodeCount = nodes.length;\n            for (var k = 0; k < nodeCount; k += 3) {\n                id0 = nodes[k];\n                id1 = nodes[k + 1];\n                id2 = nodes[k + 2];\n                if (id2 == index)\n                    continue;\n                ax = positions[id0 * posDim];\n                ay = positions[id0 * posDim + 1];\n                bx = positions[id1 * posDim];\n                by = positions[id1 * posDim + 1];\n                cx = positions[id2 * posDim];\n                cy = positions[id2 * posDim + 1];\n                //from a to p\n                var dx = ax - x;\n                var dy = ay - y;\n                //edge normal (a-b)\n                var nx = by - ay;\n                var ny = -(bx - ax);\n                var dot = (dx * nx) + (dy * ny);\n                if (dot > 0)\n                    continue;\n                dx = bx - x;\n                dy = by - y;\n                nx = cy - by;\n                ny = -(cx - bx);\n                dot = (dx * nx) + (dy * ny);\n                if (dot > 0)\n                    continue;\n                dx = cx - x;\n                dy = cy - y;\n                nx = ay - cy;\n                ny = -(ax - cx);\n                dot = (dx * nx) + (dy * ny);\n                if (dot > 0)\n                    continue;\n                if (curves) {\n                    var curvey0 = curves[id0 * curveDim + 2];\n                    var curvey1 = curves[id1 * curveDim + 2];\n                    var curvey2 = curves[id2 * curveDim + 2];\n                    //check if not solid\n                    if (curvey0 || curvey1 || curvey2) {\n                        var v0x = bx - ax;\n                        var v0y = by - ay;\n                        var v1x = cx - ax;\n                        var v1y = cy - ay;\n                        var v2x = x - ax;\n                        var v2y = y - ay;\n                        var den = v0x * v1y - v1x * v0y;\n                        var v = (v2x * v1y - v1x * v2y) / den;\n                        var w = (v0x * v2y - v2x * v0y) / den;\n                        //var u:number = 1 - v - w;\t//commented out as inlined away\n                        //here be dragons\n                        var uu = 0.5 * v + w;\n                        var vv = w;\n                        var d = uu * uu - vv;\n                        var az = curves[id0 * curveDim];\n                        if (d > 0 && az == -128)\n                            continue;\n                        else if (d < 0 && az == 127)\n                            continue;\n                    }\n                }\n                triangleElements.lastCollisionIndex = id2;\n                return true;\n            }\n            return false;\n        }\n        //brute force\n        for (var k = 0; k < count; k += 3) {\n            id0 = k + 2;\n            id1 = k + 1;\n            id2 = k + 0;\n            if (id2 == index)\n                continue;\n            ax = positions[id0 * posDim];\n            ay = positions[id0 * posDim + 1];\n            bx = positions[id1 * posDim];\n            by = positions[id1 * posDim + 1];\n            cx = positions[id2 * posDim];\n            cy = positions[id2 * posDim + 1];\n            //console.log(ax, ay, bx, by, cx, cy);\n            //from a to p\n            var dx = ax - x;\n            var dy = ay - y;\n            //edge normal (a-b)\n            var nx = by - ay;\n            var ny = -(bx - ax);\n            //console.log(ax,ay,bx,by,cx,cy);\n            var dot = (dx * nx) + (dy * ny);\n            if (dot > 0)\n                continue;\n            dx = bx - x;\n            dy = by - y;\n            nx = cy - by;\n            ny = -(cx - bx);\n            dot = (dx * nx) + (dy * ny);\n            if (dot > 0)\n                continue;\n            dx = cx - x;\n            dy = cy - y;\n            nx = ay - cy;\n            ny = -(ax - cx);\n            dot = (dx * nx) + (dy * ny);\n            if (dot > 0)\n                continue;\n            if (curves) {\n                var curvey0 = curves[id0 * curveDim + 2];\n                var curvey1 = curves[id1 * curveDim + 2];\n                var curvey2 = curves[id2 * curveDim + 2];\n                //check if not solid\n                if (curvey0 || curvey1 || curvey2) {\n                    var v0x = bx - ax;\n                    var v0y = by - ay;\n                    var v1x = cx - ax;\n                    var v1y = cy - ay;\n                    var v2x = x - ax;\n                    var v2y = y - ay;\n                    var den = v0x * v1y - v1x * v0y;\n                    var v = (v2x * v1y - v1x * v2y) / den;\n                    var w = (v0x * v2y - v2x * v0y) / den;\n                    //var u:number = 1 - v - w;\t//commented out as inlined away\n                    //here be dragons\n                    var uu = 0.5 * v + w;\n                    var vv = w;\n                    var d = uu * uu - vv;\n                    var az = curves[id0 * curveDim];\n                    if (d > 0 && az == -128) {\n                        continue;\n                    }\n                    else if (d < 0 && az == 127) {\n                        continue;\n                    }\n                }\n            }\n            triangleElements.lastCollisionIndex = id2;\n            return true;\n        }\n        return false;\n    };\n    ElementsUtils.getTriangleGraphicsBoxBounds = function (positionAttributes, output, count, offset) {\n        if (offset === void 0) { offset = 0; }\n        var positions = positionAttributes.get(count, offset);\n        var posDim = positionAttributes.dimensions;\n        if (output == null)\n            output = new Box_1.default();\n        var pos;\n        var minX = 0, minY = 0, minZ = 0;\n        var maxX = 0, maxY = 0, maxZ = 0;\n        var len = count * posDim;\n        for (var i = 0; i < len; i += posDim) {\n            if (i == 0) {\n                maxX = minX = positions[i];\n                maxY = minY = positions[i + 1];\n                maxZ = minZ = (posDim == 3) ? positions[i + 2] : 0;\n            }\n            else {\n                pos = positions[i];\n                if (pos < minX)\n                    minX = pos;\n                else if (pos > maxX)\n                    maxX = pos;\n                pos = positions[i + 1];\n                if (pos < minY)\n                    minY = pos;\n                else if (pos > maxY)\n                    maxY = pos;\n                if (posDim == 3) {\n                    pos = positions[i + 2];\n                    if (pos < minZ)\n                        minZ = pos;\n                    else if (pos > maxZ)\n                        maxZ = pos;\n                }\n            }\n        }\n        if (output.x > minX)\n            output.x = minX;\n        if (output.y > minY)\n            output.y = minY;\n        if (output.z > minZ)\n            output.z = minZ;\n        if (output.right < maxX)\n            output.right = maxX;\n        if (output.bottom < maxY)\n            output.bottom = maxY;\n        if (output.back < maxZ)\n            output.back = maxZ;\n        return output;\n    };\n    ElementsUtils.getTriangleGraphicsSphereBounds = function (positionAttributes, center, output, count, offset) {\n        if (offset === void 0) { offset = 0; }\n        var positions = positionAttributes.get(count, offset);\n        var posDim = positionAttributes.dimensions;\n        if (output == null)\n            output = new Sphere_1.default();\n        var maxRadiusSquared = 0;\n        var radiusSquared;\n        var len = count * posDim;\n        var distanceX;\n        var distanceY;\n        var distanceZ;\n        for (var i = 0; i < len; i += posDim) {\n            distanceX = positions[i] - center.x;\n            distanceY = positions[i + 1] - center.y;\n            distanceZ = (posDim == 3) ? positions[i + 2] - center.z : -center.z;\n            radiusSquared = distanceX * distanceX + distanceY * distanceY + distanceZ * distanceZ;\n            if (maxRadiusSquared < radiusSquared)\n                maxRadiusSquared = radiusSquared;\n        }\n        output.x = center.x;\n        output.y = center.y;\n        output.z = center.z;\n        output.radius = Math.sqrt(maxRadiusSquared);\n        return output;\n    };\n    ElementsUtils.tempFloat32x4 = new Float32Array(4);\n    ElementsUtils.LIMIT_VERTS = 0xffff;\n    ElementsUtils.LIMIT_INDICES = 0xffffff;\n    ElementsUtils._indexSwap = new Array();\n    return ElementsUtils;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ElementsUtils;\n\n},{\"awayjs-core/lib/attributes/AttributesBuffer\":undefined,\"awayjs-core/lib/attributes/Byte4Attributes\":undefined,\"awayjs-core/lib/attributes/Float3Attributes\":undefined,\"awayjs-core/lib/attributes/Float4Attributes\":undefined,\"awayjs-core/lib/geom/Box\":undefined,\"awayjs-core/lib/geom/Sphere\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/utils\":[function(require,module,exports){\n\"use strict\";\nvar Cast_1 = require(\"awayjs-display/lib/utils/Cast\");\nexports.Cast = Cast_1.default;\nvar ElementsUtils_1 = require(\"awayjs-display/lib/utils/ElementsUtils\");\nexports.ElementsUtils = ElementsUtils_1.default;\n\n},{\"awayjs-display/lib/utils/Cast\":\"awayjs-display/lib/utils/Cast\",\"awayjs-display/lib/utils/ElementsUtils\":\"awayjs-display/lib/utils/ElementsUtils\"}]},{},[1])\n\n",
    "import * as adapters\t\t\t\tfrom \"awayjs-display/lib/adapters\";\nimport * as animators\t\t\t\tfrom \"awayjs-display/lib/animators\";\nimport * as base\t\t\t\t\tfrom \"awayjs-display/lib/base\";\nimport * as bounds\t\t\t\t\tfrom \"awayjs-display/lib/bounds\";\nimport * as controllers\t\t\t\tfrom \"awayjs-display/lib/controllers\";\nimport * as display\t\t\t\t\tfrom \"awayjs-display/lib/display\";\nimport * as draw\t\t\t\t\tfrom \"awayjs-display/lib/draw\";\nimport * as errors\t\t\t\t\tfrom \"awayjs-display/lib/errors\";\nimport * as events\t\t\t\t\tfrom \"awayjs-display/lib/events\";\nimport * as factories\t\t\t\tfrom \"awayjs-display/lib/factories\";\nimport * as graphics\t\t\t\tfrom \"awayjs-display/lib/graphics\";\nimport * as managers\t\t\t\tfrom \"awayjs-display/lib/managers\";\nimport * as materials\t\t\t\tfrom \"awayjs-display/lib/materials\";\nimport * as partition\t\t\t\tfrom \"awayjs-display/lib/partition\";\nimport * as pick\t\t\t\t\tfrom \"awayjs-display/lib/pick\";\nimport * as prefabs\t\t\t\t\tfrom \"awayjs-display/lib/prefabs\";\nimport * as text\t\t\t\t\tfrom \"awayjs-display/lib/text\";\nimport * as textures\t\t\t\tfrom \"awayjs-display/lib/textures\";\nimport * as utils\t\t\t\t\tfrom \"awayjs-display/lib/utils\";\nimport IRenderer\t\t\t\t\tfrom \"awayjs-display/lib/IRenderer\";\nimport ITraverser\t\t\t\t\tfrom \"awayjs-display/lib/ITraverser\";\nimport View\t\t\t\t\t\t\tfrom \"awayjs-display/lib/View\";\n\npartition.PartitionBase.registerAbstraction(partition.CameraNode, display.Camera);\npartition.PartitionBase.registerAbstraction(partition.DirectionalLightNode, display.DirectionalLight);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.Sprite);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.Shape);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.MovieClip);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.Billboard);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.LineSegment);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.TextField);\npartition.PartitionBase.registerAbstraction(partition.LightProbeNode, display.LightProbe);\npartition.PartitionBase.registerAbstraction(partition.PointLightNode, display.PointLight);\npartition.PartitionBase.registerAbstraction(partition.SkyboxNode, display.Skybox);\n\nexport {\n\tadapters,\n\tanimators,\n\tbase,\n\tbounds,\n\tcontrollers,\n\tdisplay,\n\tdraw,\n\terrors,\n\tevents,\n\tfactories,\n\tgraphics,\n\tmanagers,\n\tmaterials,\n\tpartition,\n\tpick,\n\tprefabs,\n\ttext,\n\ttextures,\n\tutils,\n\tIRenderer,\n\tITraverser,\n\tView\n}\n\n",
    "import Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport getTimer\t\t\t\t\t\tfrom \"awayjs-core/lib/utils/getTimer\";\n\nimport IRenderer\t\t\t\t\tfrom \"./IRenderer\";\nimport DisplayObject\t\t\t\tfrom \"./display/DisplayObject\";\nimport TouchPoint\t\t\t\t\tfrom \"./base/TouchPoint\";\nimport Scene\t\t\t\t\t\tfrom \"./display/Scene\";\nimport IPicker\t\t\t\t\t\tfrom \"./pick/IPicker\";\nimport PickingCollision\t\t\t\tfrom \"./pick/PickingCollision\";\nimport RaycastPicker\t\t\t\tfrom \"./pick/RaycastPicker\";\nimport Camera\t\t\t\t\t\tfrom \"./display/Camera\";\nimport CameraEvent\t\t\t\t\tfrom \"./events/CameraEvent\";\nimport DisplayObjectEvent\t\t\tfrom \"./events/DisplayObjectEvent\";\nimport RendererEvent\t\t\t\tfrom \"./events/RendererEvent\";\nimport MouseManager\t\t\t\t\tfrom \"./managers/MouseManager\";\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t ******************clear********************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onPartitionChangedDelegate:(event:DisplayObjectEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\tpublic _pTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onPartitionChangedDelegate = (event:DisplayObjectEvent) => this._onPartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this._onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this._onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this._onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tif(document) {\n\t\t\tdocument.body.style.margin = \"0px\";\n\n\t\t\tthis._htmlElement = document.createElement(\"div\");\n\t\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\t\tdocument.body.appendChild(this._htmlElement);\n\t\t}\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\tget touchPoints():Array<TouchPoint>\n\t{\n\t\treturn this._pTouchPoints;\n\t}\n\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\n\t}\n\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\n\t}\n\n\tpublic getLocalTouchPoints(displayObject:DisplayObject):Array<TouchPoint>\n\t{\n\t\tvar localPosition:Vector3D;\n\t\tvar localTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t\tvar len:number = this._pTouchPoints.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tlocalPosition = displayObject.inverseSceneTransform.transformVector(this.unproject(this._pTouchPoints[i].x, this._pTouchPoints[i].y, 1000));\n\t\t\tlocalTouchPoints.push(new TouchPoint(localPosition.x, localPosition.y, this._pTouchPoints[i].id));\n\t\t}\n\n\t\treturn localTouchPoints;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.width = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.height = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.left = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.top = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement && this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t}\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollision = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//render the contents of the scene\n\t\tthis._pRenderer.render(this._pCamera, this._pScene);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t}\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate _onPartitionChanged(event:DisplayObjectEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollision = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollision = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollision == null || collidingObject.rayEntryDistance < this._mouseManager._iCollision.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollision = collidingObject;\n\t\t}\n\t}\n}\n\nexport default View;",
    "import TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\n\nclass ParticleData\n{\n\tpublic particleIndex:number /*uint*/;\n\tpublic numVertices:number /*uint*/;\n\tpublic startVertexIndex:number /*uint*/;\n\tpublic elements:TriangleElements;\n}\n\nexport default ParticleData",
    "import AssetBase\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends AssetBase\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}\n\nexport default AnimationNodeBase;",
    "export {default as ParticleData}\t\t\t\t\tfrom \"awayjs-display/lib/animators/data/ParticleData\";\nexport {default as AnimationNodeBase}\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\nexport {default as IAnimationSet}\t\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimationSet\";\nexport {default as IAnimator}\t\t\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimator\";",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport default AlignmentMode;",
    "/**\n *\n */\nclass HierarchicalProperties\n{\n\t/**\n\t *\n\t */\n\tpublic static MOUSE_ENABLED:number = 1;\n\n\t/**\n\t *\n\t */\n\tpublic static VISIBLE:number = 2;\n\n\t/**\n\t *\n\t */\n\tpublic static MASK_ID:number = 4;\n\n\t/**\n\t *\n\t */\n\tpublic static MASKS:number = 8;\n\n\t/**\n\t *\n\t */\n\tpublic static COLOR_TRANSFORM:number = 16;\n\n\t/**\n\t *\n\t */\n\tpublic static SCENE_TRANSFORM:number = 32;\n\n\t/**\n\t *\n\t */\n\tpublic static ALL:number = 63;\n}\n\nexport default HierarchicalProperties;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport default OrientationMode;",
    "import ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport SamplerBase\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerBase\";\nimport Matrix\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\n\nimport EventDispatcher\t\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\nimport StyleEvent\t\t\t\t\tfrom \"awayjs-display/lib/events/StyleEvent\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\n/**\n *\n */\nclass Style extends EventDispatcher\n{\n\tprivate _sampler:SamplerBase;\n\tprivate _samplers:Object = new Object();\n\tprivate _image:ImageBase;\n\tprivate _images:Object = new Object();\n\tprivate _uvMatrix:Matrix;\n\tprivate _color:number = 0xFFFFFF;\n\n\tpublic get sampler():SamplerBase\n\t{\n\t\treturn this._sampler;\n\t}\n\n\tpublic set sampler(value:SamplerBase)\n\t{\n\t\tif (this._sampler == value)\n\t\t\treturn;\n\n\t\tthis._sampler = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tpublic get image():ImageBase\n\t{\n\t\treturn this._image;\n\t}\n\n\tpublic set image(value:ImageBase)\n\t{\n\t\tif (this._image == value)\n\t\t\treturn;\n\n\t\tthis._image = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tpublic get uvMatrix():Matrix\n\t{\n\t\treturn this._uvMatrix;\n\t}\n\n\tpublic set uvMatrix(value:Matrix)\n\t{\n\t\tif (this._uvMatrix == value)\n\t\t\treturn;\n\n\t\tthis._uvMatrix = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\t\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic getImageAt(texture:TextureBase, index:number = 0):ImageBase\n\t{\n\t\treturn (this._images[texture.id]? this._images[texture.id][index] : null) || this._image;\n\t}\n\n\tpublic getSamplerAt(texture:TextureBase, index:number = 0):SamplerBase\n\t{\n\t\treturn (this._samplers[texture.id]? this._samplers[texture.id][index] : null) || this._sampler;\n\t}\n\n\tpublic addImageAt(image:ImageBase, texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._images[texture.id])\n\t\t\tthis._images[texture.id] = new Array<ImageBase>();\n\n\t\tthis._images[texture.id][index] = image;\n\t}\n\n\tpublic addSamplerAt(sampler:SamplerBase, texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._samplers[texture.id])\n\t\t\tthis._samplers[texture.id] = new Array<SamplerBase>();\n\n\t\tthis._samplers[texture.id][index] = sampler;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\n\tpublic removeImageAt(texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._images[texture.id])\n\t\t\treturn;\n\n\t\tthis._images[texture.id][index] = null;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tpublic removeSamplerAt(texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._samplers[texture.id])\n\t\t\treturn;\n\n\t\tthis._samplers[texture.id][index] = null;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tprivate _invalidateProperties()\n\t{\n\t\tthis.dispatchEvent(new StyleEvent(StyleEvent.INVALIDATE_PROPERTIES, this));\n\t}\n}\n\nexport default Style;\n",
    "import HierarchicalProperties\t\t\tfrom \"awayjs-display/lib/base/HierarchicalProperties\";\nimport MovieClip\t\t\t\t\t\tfrom \"awayjs-display/lib/display/MovieClip\";\nimport DisplayObject                    from \"awayjs-display/lib/display/DisplayObject\";\nimport ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport FrameScriptManager\t\t\t\tfrom \"awayjs-display/lib/managers/FrameScriptManager\";\n\n\nclass Timeline\n{\n\tprivate _functions:Array<(child:DisplayObject, target_mc:MovieClip, i:number) => void> = [];\n\tprivate _blocked:boolean;\n\tpublic _update_indices:Array<number> = [];\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\n\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\n\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\n\n\t// synched:\n\tpublic frame_command_indices:ArrayBufferView;\n\tpublic frame_recipe:ArrayBufferView;\n\n\t// synched:\n\tpublic command_index_stream:ArrayBufferView;\n\tpublic command_length_stream:ArrayBufferView;\n\n\tpublic add_child_stream:ArrayBufferView;\n\tpublic remove_child_stream:ArrayBufferView;\n\tpublic update_child_stream:ArrayBufferView;\n\n\tpublic update_child_props_length_stream:ArrayBufferView;\n\tpublic update_child_props_indices_stream:ArrayBufferView;\n\n\tpublic property_index_stream:ArrayBufferView;\n\tpublic property_type_stream:ArrayBufferView;\n\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\n\n\t// propertiy_values_stream:\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_strings:Array<string>;\n\n\tprivate _potentialPrototypes:Array<DisplayObject>;\n\n\tpublic numKeyFrames:number=0;\n\n\tconstructor()\n\t{\n\t\tthis.keyframe_indices = [];\n\n\t\tthis._potentialPrototypes = [];\n\t\tthis._labels = {};\n\t\tthis._framescripts = {};\n\t\tthis._framescripts_translated = {};\n\n\t\t//cache functions\n\t\tthis._functions[1] = this.update_mtx_all;\n\t\tthis._functions[2] = this.update_colortransform;\n\t\tthis._functions[3] = this.update_masks;\n\t\tthis._functions[4] = this.update_name;\n\t\tthis._functions[5] = this.update_button_name;\n\t\tthis._functions[6] = this.update_visibility;\n\t\tthis._functions[11] = this.update_mtx_scale_rot;\n\t\tthis._functions[12] = this.update_mtx_pos;\n\t\tthis._functions[200] = this.enable_maskmode;\n\t\tthis._functions[201] = this.remove_masks;\n\n\t}\n\n\tpublic init():void\n\t{\n\t\tif((this.frame_command_indices == null)||(this.frame_recipe == null)||(this.keyframe_durations == null))\n\t\t\treturn;\n\n\t\tthis.keyframe_firstframes = [];\n\t\tthis.keyframe_constructframes = [];\n\t\tvar frame_cnt = 0;\n\t\tvar ic = 0;\n\t\tvar ic2 = 0;\n\t\tvar keyframe_cnt = 0;\n\t\tvar last_construct_frame = 0;\n\t\tfor(ic = 0; ic < this.numKeyFrames; ic++){\n\t\t\tvar duration=this.keyframe_durations[(ic)];\n\n\t\t\tif(this.frame_recipe[ic] & 1)\n\t\t\t\tlast_construct_frame = keyframe_cnt;\n\n\t\t\tthis.keyframe_firstframes[keyframe_cnt] = frame_cnt;\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++] = last_construct_frame;\n\n\t\t\tfor(ic2 = 0; ic2 < duration; ic2++)\n\t\t\t\tthis.keyframe_indices[frame_cnt++] = ic;\n\t\t}\n\t}\n\n\tpublic get_framescript(keyframe_index:number):string\n\t{\n\t\tif(this._framescripts[keyframe_index] == null)\n\t\t\treturn \"\";\n\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\n\t\t\treturn this._framescripts[keyframe_index];\n\t\telse{\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\n\t\t}\n\t}\n\tpublic add_framescript(value:string, keyframe_index:number)\n\t{\n\t\tif(FrameScriptManager.frameScriptDebug){\n\t\t\t// if we are in debug mode, we try to extract the function name from the first line of framescript code,\n\t\t\t// and check if this function is available on the object that is set as frameScriptDebug\n\t\t\t// try to get the functions name (it should be the first line as comment)\n\t\t\tvar functionname = value.split(/[\\r\\n]+/g)[0].split(\"//\")[1];\n\t\t\tif(FrameScriptManager.frameScriptDebug[functionname]){\n\t\t\t\tthis._framescripts[keyframe_index] = FrameScriptManager.frameScriptDebug[functionname];\n\t\t\t\tthis._framescripts_translated[keyframe_index]=true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthrow new Error(\"Framescript could not be found on FrameScriptManager.frameScriptDebug.\\n the Object set as FrameScriptmanager.frameScriptDebug should contain a function with the name '\"+functionname+\"' !!!\");\n\t\t\t}\n\t\t}\n\t\tthis._framescripts[keyframe_index] = value;\n\t}\n\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\n\t}\n\n\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number, scriptPass1:Boolean=false) : void\n\t{\n\t\tif(this._framescripts[keyframe_idx]!=null){\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\n\t\t\t}\n\t\t\tif(scriptPass1)\n\t\t\t\tFrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\n\t\t\telse\n\t\t\t\tFrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\n\n\t\t}\n\t}\n\n\tpublic get numFrames():number\n\t{\n\t\treturn this.keyframe_indices.length;\n\t}\n\n\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\n\t{\n\t\treturn this._potentialPrototypes[id];\n\n\t}\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\n\t{\n\t\treturn this.keyframe_indices[frame_index];\n\t}\n\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\n\t{\n\t\tvar this_clone:DisplayObject = this._potentialPrototypes[id].clone();\n\t\tthis_clone.name = \"\";\n\t\treturn this_clone;\n\t}\n\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\n\t{\n\t\tvar id = this._potentialPrototypes.length;\n\t\tthis._potentialPrototypes[id] = prototype;\n\t}\n\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\n\t{\n\t\tvar key_frame_index:number = this._labels[label];\n\t\tif(key_frame_index >= 0)\n\t\t\ttarget_mc.currentFrameIndex = this.keyframe_firstframes[key_frame_index];\n\t}\n\n\tpublic gotoFrame(target_mc:MovieClip, value:number, skip_script:boolean = false)\n\t{\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\n\n\t\tif (current_keyframe_idx == target_keyframe_idx) // already constructed - exit\n\t\t\treturn;\n\n\t\tif (current_keyframe_idx + 1 == target_keyframe_idx) { // target_keyframe_idx is the next keyframe. we can just use constructnext for this\n\t\t\tthis.constructNextFrame(target_mc, !skip_script, true);\n\t\t\treturn;\n\t\t}\n\n\t\tvar break_frame_idx:number = this.keyframe_constructframes[target_keyframe_idx];\n\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\n\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\n\n\t\t// in case we jump forward, but not jump a gap, we start at current_keyframe_idx + 1\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\n\t\tvar start_construct_idx:number = (jump_forward && !jump_gap)? current_keyframe_idx + 1 : break_frame_idx;\n\n\t\tvar i:number;\n\t\tvar k:number;\n\n\t\tif (jump_gap) // if we jump a gap forward, we just can remove all childs from mc. all script blockage will be gone\n\t\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\tif (target_mc._children[i]._depthID < 0)\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\n\t\t//if we jump back, we want to reset all objects (but not the timelines of the mcs)\n\t\tif (!jump_forward)\n\t\t\ttarget_mc.resetSessionIDs();\n\n\t\t// in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\n\t\tvar depth_sessionIDs:Object = target_mc.getSessionIDDepths();\n\n\t\t//pass1: only apply add/remove commands into depth_sessionIDs.\n\t\tthis.pass1(start_construct_idx, target_keyframe_idx, depth_sessionIDs);\n\n\t\t// check what childs are alive on both frames.\n\t\t// childs that are not alive anymore get removed and unregistered\n\t\t// childs that are alive on both frames have their properties reset if we are jumping back\n\t\tvar child:DisplayObject;\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\n\t\t\tchild = target_mc._children[i];\n\t\t\tif (child._depthID < 0) {\n\t\t\t\tif (depth_sessionIDs[child._depthID] != child._sessionID) {\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t\t} else if (!jump_forward) {\n\t\t\t\t\tif(child.adapter) {\n\t\t\t\t\t\tif (!child.adapter.isBlockedByScript()) {\n\t\t\t\t\t\t\tchild.transform.clearMatrix3D();\n\t\t\t\t\t\t\tchild.transform.clearColorTransform();\n\t\t\t\t\t\t\t//this.name=\"\";\n\t\t\t\t\t\t\tchild.masks = null;\n\t\t\t\t\t\t\tchild.maskMode = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!child.adapter.isVisibilityByScript()) {\n\t\t\t\t\t\t\tchild.visible = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// now we need to addchild the objects that were added before targetframe first\n\t\t// than we can add the script of the targetframe\n\t\t// than we can addchild objects added on targetframe\n\t\tfor (var key in depth_sessionIDs) {\n\t\t\tchild = target_mc.getPotentialChildInstance(this.add_child_stream[depth_sessionIDs[key]*2]);\n\t\t\tif (child._sessionID == -1)\n\t\t\t\ttarget_mc._addTimelineChildAt(child, Number(key), depth_sessionIDs[key]);\n\t\t}\n\n\t\tif (!skip_script && this.keyframe_firstframes[target_keyframe_idx] == value) //frame changed. and firstframe of keyframe. execute framescript if available\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\n\n\n\t\t//pass2: apply update commands for objects on stage (only if they are not blocked by script)\n\t\tthis.pass2(target_mc);\n\n\t\ttarget_mc.constructedKeyFrameIndex = target_keyframe_idx;\n\t}\n\n\tpublic pass1(start_construct_idx:number, target_keyframe_idx:number, depth_sessionIDs:Object)\n\t{\n\t\tvar i:number;\n\t\tvar k:number;\n\n\t\tthis._update_indices.length = 0;// store a list of updatecommand_indices, so we dont have to read frame_recipe again\n\t\tvar update_cnt = 0;\n\t\tvar start_index:number;\n\t\tvar end_index:number;\n\t\tfor (k = start_construct_idx; k <= target_keyframe_idx; k++) {\n\t\t\tvar frame_command_idx:number = this.frame_command_indices[k];\n\t\t\tvar frame_recipe:number = this.frame_recipe[k];\n\n\t\t\tif (frame_recipe & 2) {\n\t\t\t\t// remove childs\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\tfor (i = start_index; i < end_index; i++)\n\t\t\t\t\tdelete depth_sessionIDs[this.remove_child_stream[i] - 16383];\n\t\t\t}\n\n\t\t\tif (frame_recipe & 4) {\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t\t\t// this could be changed in exporter\n\t\t\t\tfor (i = end_index - 1; i >= start_index; i--)\n\t\t\t\t\tdepth_sessionIDs[this.add_child_stream[i*2 + 1] - 16383] = i;\n\t\t\t}\n\n\t\t\tif (frame_recipe & 8)\n\t\t\t\tthis._update_indices[update_cnt++] = frame_command_idx;// execute update command later\n\t\t}\n\t}\n\n\tpublic pass2(target_mc:MovieClip)\n\t{\n\t\tvar k:number;\n\t\tvar len:number = this._update_indices.length;\n\t\tfor (k = 0; k < len; k++)\n\t\t\tthis.update_childs(target_mc, this._update_indices[k]);\n\t}\n\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean = true, scriptPass1:Boolean = false)\n\t{\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\n\n\t\tif(queueScript && this.keyframe_firstframes[new_keyFrameIndex] == frameIndex)\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\n\n\t\tif(target_mc.constructedKeyFrameIndex != new_keyFrameIndex) {\n\t\t\ttarget_mc.constructedKeyFrameIndex = new_keyFrameIndex;\n\n\t\t\tvar frame_command_idx = this.frame_command_indices[new_keyFrameIndex];\n\t\t\tvar frame_recipe = this.frame_recipe[new_keyFrameIndex];\n\n\t\t\tif(frame_recipe & 1) {\n\t\t\t\tfor (var i:number = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\t\tif (target_mc._children[i]._depthID < 0)\n\t\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t} else if (frame_recipe & 2) {\n\t\t\t\tthis.remove_childs_continous(target_mc, frame_command_idx++);\n\t\t\t}\n\n\t\t\tif(frame_recipe & 4)\n\t\t\t\tthis.add_childs_continous(target_mc, frame_command_idx++);\n\n\t\t\tif(frame_recipe & 8)\n\t\t\t\tthis.update_childs(target_mc, frame_command_idx++);\n\t\t}\n\t}\n\n\n\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, frame_command_idx:number)\n\t{\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tfor(var i:number = start_index; i < end_index; i++)\n\t\t\tsourceMovieClip.removeChildAt(sourceMovieClip.getDepthIndexInternal(this.remove_child_stream[i] - 16383));\n\t}\n\n\n\t// used to add childs when jumping between frames\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, frame_command_idx:number)\n\t{\n\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t// this could be changed in exporter\n\t\tvar idx:number;\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tfor (var i:number = end_index - 1; i >= start_index; i--) {\n\t\t\tidx = i*2;\n\t\t\tsourceMovieClip._addTimelineChildAt(sourceMovieClip.getPotentialChildInstance(this.add_child_stream[idx]), this.add_child_stream[idx + 1] - 16383, i);\n\t\t}\n\t}\n\n\tpublic update_childs(target_mc:MovieClip, frame_command_idx:number)\n\t{\n\t\tvar p:number;\n\t\tvar props_start_idx:number;\n\t\tvar props_end_index:number;\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tvar child:DisplayObject;\n\t\tfor(var i:number = start_index; i < end_index; i++) {\n\t\t\tchild = target_mc.getChildAtSessionID(this.update_child_stream[i]);\n\t\t\tif (child) {\n\t\t\t\t// check if the child is active + not blocked by script\n\t\t\t\tthis._blocked = Boolean(child.adapter && child.adapter.isBlockedByScript());\n\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[i];\n\t\t\t\tprops_end_index = props_start_idx + this.update_child_props_length_stream[i];\n\t\t\t\tfor(p = props_start_idx; p < props_end_index; p++)\n\t\t\t\t\tthis._functions[this.property_type_stream[p]].call(this, child, target_mc, this.property_index_stream[p]);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic update_mtx_all(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 6;\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\n\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[i];\n\n\t\tchild.transform.invalidateComponents();\n\t}\n\n\tpublic update_colortransform(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 8;\n\t\tvar new_ct:ColorTransform = child.transform.colorTransform || (child.transform.colorTransform = new ColorTransform());\n\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.redOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[i];\n\n\t\tchild.transform.invalidateColorTransform();\n\t}\n\n\tpublic update_masks(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\t// an object could have multiple groups of masks, in case a graphic clip was merged into the timeline\n\t\t// this is not implmeented in the runtime yet\n\t\t// for now, a second mask-groupd would overwrite the first one\n\t\tvar mask:DisplayObject;\n\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\n\t\tvar numMasks:number = this.properties_stream_int[i++];\n\n\t\t//mask may not exist if a goto command moves the playhead to a point in the timeline after\n\t\t//one of the masks in a mask array has already been removed. Therefore a check is needed.\n\t\tfor(var m:number = 0; m < numMasks; m++)\n\t\t\tif((mask = target_mc.getChildAtSessionID(this.properties_stream_int[i++])))\n\t\t\t\tmasks.push(mask);\n\n\n\t\tchild.masks = masks;\n\t}\n\n\tpublic update_name(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.name = this.properties_stream_strings[i];\n\t\ttarget_mc.adapter.registerScriptObject(child);\n\t}\n\n\tpublic update_button_name(target:DisplayObject, sourceMovieClip:MovieClip, i:number)\n\t{\n\t\ttarget.name = this.properties_stream_strings[i];\n\t\t// todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\n\t\t(<MovieClip> target).addButtonListeners();\n\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\t}\n\n\tpublic update_visibility(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (!child.adapter || !child.adapter.isVisibilityByScript())\n\t\t\tchild.visible = Boolean(i);\n\t}\n\n\tpublic update_mtx_scale_rot(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 4;\n\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\n\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[i];\n\n\t\tchild.transform.invalidateComponents();\n\n\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\tpublic update_mtx_pos(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 2;\n\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\n\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_pos[i++];\n\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_pos[i];\n\n\t\tchild.transform.invalidatePosition();\n\t}\n\n\tpublic enable_maskmode(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.maskMode = true;\n\t}\n\n\tpublic remove_masks(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.masks = null;\n\t}\n}\n\nexport default Timeline;",
    "/**\n *\n */\nclass TouchPoint\n{\n\tx:number;\n\n\ty:number;\n\n\tid:number;\n\n\tconstructor(x:number, y:number, id:number)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.id = id;\n\t}\n}\n\nexport default TouchPoint;",
    "import EventDispatcher\t\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\nimport ColorTransform\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport Matrix\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Matrix3DUtils\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport PerspectiveProjection\t\tfrom \"awayjs-core/lib/projections/PerspectiveProjection\";\n\n\nimport DisplayObject\t\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport TransformEvent\t\t\t\tfrom \"awayjs-display/lib/events/TransformEvent\";\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform extends EventDispatcher\n{\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean;\n\tprivate _rotation:Vector3D = new Vector3D();\n\tprivate _skew:Vector3D = new Vector3D();\n\tprivate _scale:Vector3D = new Vector3D(1, 1, 1);\n\tprivate _components:Array<Vector3D>;\n\tprivate _componentsDirty:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._matrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(val:ColorTransform)\n\t{\n\t\tif (this._colorTransform == val)\n\t\t\treturn;\n\n\t\tthis._colorTransform = val;\n\n\t\tthis.invalidateColorTransform();\n\t}\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Scene.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._matrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._matrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._matrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._updateMatrix3D();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tfor (var i:number = 0; i < 15; i++)\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\n\t\t\n\t\tthis.invalidateComponents();\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._matrix3D.position;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this.matrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\treturn this._rotation;\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\tthis._rotation.x = ax;\n\t\tthis._rotation.y = ay;\n\t\tthis._rotation.z = az;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\treturn this._scale;\n\t}\n\n\tpublic scaleTo(sx:number, sy:number, sz:number)\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\tthis._scale.x = sx;\n\t\tthis._scale.y = sy;\n\t\tthis._scale.z = sz;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get skew():Vector3D\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\treturn this._skew;\n\t}\n\n\tpublic skewTo(sx:number, sy:number, sz:number)\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\tthis._skew.x = sx;\n\t\tthis._skew.y = sy;\n\t\tthis._skew.z = sz;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this.matrix3D);\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n\t\tthis._components = new Array<Vector3D>(4);\n\n\t\tthis._components[1] = this._rotation;\n\t\tthis._components[2] = this._skew;\n\t\tthis._components[3] = this._scale;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tthis._matrix3D.rawData[12] = dx;\n\t\tthis._matrix3D.rawData[13] = dy;\n\t\tthis._matrix3D.rawData[14] = dz;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tthis.matrix3D.prependRotation(angle, axis);\n\n\t\tthis.invalidateComponents();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.matrix3D.appendTranslation(x*len, y*len, z*len);\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.matrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis.invalidatePosition();\n\t}\n\n\tpublic clearMatrix3D()\n\t{\n\t\tthis._matrix3D.identity();\n\t\tthis.invalidateComponents();\n\t}\n\n\tpublic clearColorTransform()\n\t{\n\t\tif (!this._colorTransform)\n\t\t\treturn;\n\t\t\n\t\tthis._colorTransform.clear();\n\t\tthis.invalidateColorTransform();\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tpublic invalidateMatrix3D():void\n\t{\n\t\tthis._matrix3DDirty = true;\n\t\t\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_MATRIX3D, this));\n\t}\n\n\tpublic invalidateComponents()\n\t{\n\t\tthis.invalidatePosition();\n\t\t\n\t\tthis._componentsDirty = true;\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic invalidatePosition()\n\t{\n\t\tthis._matrix3D.invalidatePosition();\n\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_MATRIX3D, this));\n\t}\n\n\tpublic invalidateColorTransform()\n\t{\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_COLOR_TRANSFORM, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _updateMatrix3D()\n\t{\n\t\tthis._matrix3D.recompose(this._components);\n\n\t\tthis._matrix3DDirty = false;\n\t}\n\n\n\tprivate _updateComponents()\n\t{\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[1];\n\n\t\tthis._rotation.x = vec.x;\n\t\tthis._rotation.y = vec.y;\n\t\tthis._rotation.z = vec.z;\n\n\t\tvec = elements[2];\n\n\t\tthis._skew.x = vec.x;\n\t\tthis._skew.y = vec.y;\n\t\tthis._skew.z = vec.z;\n\n\t\tvec = elements[3];\n\n\t\tthis._scale.x = vec.x;\n\t\tthis._scale.y = vec.y;\n\t\tthis._scale.z = vec.z;\n\n\t\tthis._componentsDirty = false;\n\t}\n}\n\nexport default Transform;\n",
    "export {default as AlignmentMode}\t\t\t\t\tfrom \"awayjs-display/lib/base/AlignmentMode\";\nexport {default as HierarchicalProperties}\t\t\tfrom \"awayjs-display/lib/base/HierarchicalProperties\";\nexport {default as IBitmapDrawable}\t\t\t\t\tfrom \"awayjs-display/lib/base/IBitmapDrawable\";\nexport {default as IRenderable}\t\t\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nexport {default as ISurface}\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nexport {default as OrientationMode}\t\t\t\t\tfrom \"awayjs-display/lib/base/OrientationMode\";\nexport {default as Style}\t\t\t\t\t\t\tfrom \"awayjs-display/lib/base/Style\";\nexport {default as Timeline}\t\t\t\t\t\tfrom \"awayjs-display/lib/base/Timeline\";\nexport {default as TouchPoint}\t\t\t\t\t\tfrom \"awayjs-display/lib/base/TouchPoint\";\nexport {default as Transform}\t\t\t\t\t\tfrom \"awayjs-display/lib/base/Transform\";",
    "import Box\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport PlaneClassification\t\t\tfrom \"awayjs-core/lib/geom/PlaneClassification\";\nimport Plane3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport ElementsType\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsType\";\nimport BoundingVolumeBase\t\t\tfrom \"awayjs-display/lib/bounds/BoundingVolumeBase\";\nimport IEntity\t\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport Sprite\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\nimport PrimitiveCubePrefab\t\t\tfrom \"awayjs-display/lib/prefabs/PrimitiveCubePrefab\";\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most sprites.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tpublic _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Sprite\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab(null, ElementsType.LINE);\n\n\t\treturn <Sprite> this._prefab.getNewObject();\n\t}\n}\n\nexport default AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport PlaneClassification\t\t\tfrom \"awayjs-core/lib/geom/PlaneClassification\";\nimport Plane3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\nimport Sphere\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Sphere\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport ElementsType\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsType\";\nimport BoundingVolumeBase\t\t\tfrom \"awayjs-display/lib/bounds/BoundingVolumeBase\";\nimport IEntity\t\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport Sprite\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\nimport PrimitiveSpherePrefab\t\tfrom \"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\";\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Sprite\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab(null, ElementsType.LINE);\n\n\t\treturn <Sprite> this._prefab.getNewObject();\n\t}\n}\n\nexport default BoundingSphere;",
    "import Box\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Plane3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\n\nimport IEntity\t\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport Sprite\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Sprite;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pEntity = null;\n\t\tthis._pBoundsPrimitive = null;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pInvalidated = true;\n\t\t}\n\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Sprite\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport default BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport default BoundsType;",
    "import PlaneClassification\t\t\tfrom \"awayjs-core/lib/geom/PlaneClassification\";\nimport Plane3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\n\nimport BoundingVolumeBase\t\t\tfrom \"awayjs-display/lib/bounds/BoundingVolumeBase\";\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport default NullBounds;",
    "export {default as AxisAlignedBoundingBox}\t\t\tfrom \"awayjs-display/lib/bounds/AxisAlignedBoundingBox\";\nexport {default as BoundingSphere}\t\t\t\t\tfrom \"awayjs-display/lib/bounds/BoundingSphere\";\nexport {default as BoundingVolumeBase}\t\t\t\tfrom \"awayjs-display/lib/bounds/BoundingVolumeBase\";\nexport {default as BoundsType}\t\t\t\t\t\tfrom \"awayjs-display/lib/bounds/BoundsType\";\nexport {default as NullBounds}\t\t\t\t\t\tfrom \"awayjs-display/lib/bounds/NullBounds\";",
    "import AbstractMethodError\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\n\nimport DisplayObject\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\n\nclass ControllerBase\n{\n\tpublic _pControllerDirty:boolean;\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject)\n\t\t\tthis._pTargetObject.invalidatePartitionBounds();\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val)\n\t\t\treturn;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = null;\n\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = this;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val)\n\t\t\treturn;\n\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pAutoUpdate)\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\telse\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic updateController()\n\t{\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\n\t\t\tthis._pControllerDirty = false;\n\t\t\tthis.pNotifyUpdate();\n\t\t}\n\t}\n}\n\nexport default ControllerBase;",
    "import MathConsts\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\n\nimport ControllerBase\t\t\tfrom \"awayjs-display/lib/controllers/ControllerBase\";\nimport DisplayObject\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport default FirstPersonController;",
    "import DisplayObject\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport HoverController\t\t\tfrom \"awayjs-display/lib/controllers/HoverController\";\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport default FollowController;",
    "import MathConsts\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\nimport Vector3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport DisplayObject\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport LookAtController\t\t\tfrom \"awayjs-display/lib/controllers/LookAtController\";\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport default HoverController;",
    "import Vector3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport DisplayObject\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport ControllerBase\t\t\tfrom \"awayjs-display/lib/controllers/ControllerBase\";\nimport DisplayObjectEvent\t\tfrom \"awayjs-display/lib/events/DisplayObjectEvent\";\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport default LookAtController;",
    "import Vector3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport DisplayObject\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport LookAtController\t\t\tfrom \"awayjs-display/lib/controllers/LookAtController\";\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\tthis._pControllerDirty = true;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tvar position:Vector3D = this._pTargetObject.transform.position.add(this._velocity);\n\t\tthis._pTargetObject.transform.moveTo(position.x, position.y, position.z);\n\n\t\tsuper.update();\n\t}\n}\n\nexport default SpringController;",
    "export {default as ControllerBase}\t\t\t\t\tfrom \"awayjs-display/lib/controllers/ControllerBase\";\nexport {default as FirstPersonController}\t\t\tfrom \"awayjs-display/lib/controllers/FirstPersonController\";\nexport {default as FollowController}\t\t\t\tfrom \"awayjs-display/lib/controllers/FollowController\";\nexport {default as HoverController}\t\t\t\t\tfrom \"awayjs-display/lib/controllers/HoverController\";\nexport {default as LookAtController}\t\t\t\tfrom \"awayjs-display/lib/controllers/LookAtController\";\nexport {default as SpringController}\t\t\t\tfrom \"awayjs-display/lib/controllers/SpringController\";",
    "import Sampler2D\t\t\t\t\tfrom \"awayjs-core/lib/image/Sampler2D\";\nimport Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\nimport Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\n\nimport ITraverser\t\t\t\t\tfrom \"awayjs-display/lib/ITraverser\";\nimport IAnimator\t\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimator\";\nimport DisplayObject\t\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport IRenderable\t\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nimport BoundsType\t\t\t\t\tfrom \"awayjs-display/lib/bounds/BoundsType\";\nimport IEntity\t\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport RenderableEvent\t\t\t\tfrom \"awayjs-display/lib/events/RenderableEvent\";\nimport SurfaceEvent\t\t\t\t\tfrom \"awayjs-display/lib/events/SurfaceEvent\";\nimport DefaultMaterialManager\t\tfrom \"awayjs-display/lib/managers/DefaultMaterialManager\";\nimport MaterialBase\t\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\nimport Style\t\t\t\t\t\tfrom \"awayjs-display/lib/base/Style\";\nimport StyleEvent\t\t\t\t\tfrom \"awayjs-display/lib/events/StyleEvent\";\nimport IPickingCollider\t\t\t\tfrom \"awayjs-display/lib/pick/IPickingCollider\";\nimport PickingCollision\t\t\t\tfrom \"awayjs-display/lib/pick/PickingCollision\";\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderable\n{\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _billboardRect:Rectangle;\n\tprivate _material:MaterialBase;\n\n\tprivate _style:Style;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate onInvalidateTextureDelegate:(event:SurfaceEvent) => void;\n\n\n\t/**\n\t * Defines the animator of the sprite. Act on the sprite's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardRect():Rectangle\n\t{\n\t\treturn this._billboardRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(SurfaceEvent.INVALIDATE_TEXTURE, this.onInvalidateTextureDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(SurfaceEvent.INVALIDATE_TEXTURE, this.onInvalidateTextureDelegate);\n\t\t}\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onInvalidateTextureDelegate = (event:SurfaceEvent) => this.onInvalidateTexture(event);\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\n\t\tthis.material = material;\n\n\t\tthis._updateDimensions();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Billboard = new Billboard(this.material);\n\t\treturn clone;\n\t}\n\n\t/**\n\t * The style used to render the current Billboard. If set to null, the default style of the material will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._onInvalidateProperties();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(pickingCollision:PickingCollision, pickingCollider:IPickingCollider):boolean\n\t{\n\t\treturn pickingCollider.testBillboardCollision(this, this.material, pickingCollision);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onInvalidateTexture(event:SurfaceEvent)\n\t{\n\t\tthis._updateDimensions();\n\t}\n\n\tpublic _acceptTraverser(traverser:ITraverser)\n\t{\n\t\ttraverser.applyRenderable(this);\n\t}\n\n\tprivate _updateDimensions()\n\t{\n\t\tvar texture:TextureBase = this.material.getTextureAt(0);\n\n\t\tvar image:Image2D = texture? <Image2D> ((this._style? this._style.getImageAt(texture) : null) || (this.material.style? this.material.style.getImageAt(texture) : null) || texture.getImageAt(0)) : null;\n\n\t\tif (image) {\n\t\t\tvar sampler:Sampler2D = <Sampler2D> ((this._style? this._style.getSamplerAt(texture) : null) || (this.material.style? this.material.style.getSamplerAt(texture) : null) || texture.getSamplerAt(0) || DefaultMaterialManager.getDefaultSampler());\n\t\t\tif (sampler.imageRect) {\n\t\t\t\tthis._billboardWidth = sampler.imageRect.width*image.width;\n\t\t\t\tthis._billboardHeight = sampler.imageRect.height*image.height;\n\t\t\t} else {\n\t\t\t\tthis._billboardWidth = image.rect.width;\n\t\t\t\tthis._billboardHeight = image.rect.height;\n\t\t\t}\n\n\t\t\tthis._billboardRect = sampler.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\t\t} else {\n\t\t\tthis._billboardWidth = 1;\n\t\t\tthis._billboardHeight = 1;\n\t\t\tthis._billboardRect = new Rectangle(0, 0, 1, 1);\n\t\t}\n\n\t\tthis._pInvalidateBounds();\n\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_ELEMENTS, this));\n\t}\n\n\n\tpublic invalidateSurface()\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_RENDER_OWNER, this));\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent = null)\n\t{\n\t\tthis.invalidateSurface();\n\n\t\tthis._updateDimensions();\n\t}\n}\n\nexport default Billboard;",
    "import Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Plane3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport ProjectionEvent\t\t\t\tfrom \"awayjs-core/lib/events/ProjectionEvent\";\nimport IProjection\t\t\t\t\tfrom \"awayjs-core/lib/projections/IProjection\";\nimport PerspectiveProjection\t\tfrom \"awayjs-core/lib/projections/PerspectiveProjection\";\n\nimport HierarchicalProperties\t\tfrom \"awayjs-display/lib/base/HierarchicalProperties\";\nimport IRenderer\t\t\t\t\tfrom \"awayjs-display/lib/IRenderer\";\nimport BoundsType\t\t\t\t\tfrom \"awayjs-display/lib/bounds/BoundsType\";\nimport DisplayObjectContainer\t\tfrom \"awayjs-display/lib/display/DisplayObjectContainer\";\nimport IEntity\t\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport CameraEvent\t\t\t\t\tfrom \"awayjs-display/lib/events/CameraEvent\";\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:Float32Array = this.viewProjection.rawData;\n\t\tvar invLen:number;\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number):boolean\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._viewProjectionDirty = true;\n\t\t\tthis._frustumPlanesDirty = true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-sprites, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//nothing to do here\n\t}\n}\n\nexport default Camera;",
    "import Matrix3DUtils\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport LightBase\t\t\t\t\tfrom \"awayjs-display/lib/display/LightBase\";\nimport HierarchicalProperties\t\tfrom \"awayjs-display/lib/base/HierarchicalProperties\";\nimport BoundsType\t\t\t\t\tfrom \"awayjs-display/lib/bounds/BoundsType\";\nimport IEntity\t\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport DirectionalShadowMapper\t\tfrom \"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\";\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light DirectionalLight]\";\n\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn DirectionalLight.assetType;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, cameraTransform:Matrix3D, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(cameraTransform));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport default DirectionalLight;",
    "import Box\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport Point\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport ArgumentError\t\t\t\tfrom \"awayjs-core/lib/errors/ArgumentError\";\nimport RangeError\t\t\t\t\tfrom \"awayjs-core/lib/errors/RangeError\";\nimport Extensions\t\t\t\t\tfrom \"awayjs-core/lib/utils/Extensions\";\n\nimport DisplayObject\t\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport HierarchicalProperties\t\tfrom \"awayjs-display/lib/base/HierarchicalProperties\";\nimport PartitionBase\t\t\t\tfrom \"awayjs-display/lib/partition/PartitionBase\";\nimport Scene\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Scene\";\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _mouseChildren:boolean = true;\n\tprivate _depth_childs:Object = {};\n\tprivate _nextHighestDepth:number = 0;\n\tprivate _nextHighestDepthDirty:boolean;\n\tpublic _children:Array<DisplayObject> = new Array<DisplayObject>();\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MOUSE_ENABLED);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this.addChildAt(child, this._children.length);\n\t}\n\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new ArgumentError(\"Parameter child cannot be null.\");\n\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\n\n\n\t\tvar index = this.getDepthIndexInternal(depth);\n\n\t\tif (index != -1) {\n\t\t\tif (replace) {\n\t\t\t\tthis.removeChildAt(index);\n\t\t\t} else {\n\t\t\t\t//move depth of existing child up by 1\n\t\t\t\tthis.addChildAtDepth(this._children[index], depth + 1, false);\n\t\t\t}\n\t\t}\n\n\t\tif (this._nextHighestDepth < depth + 1)\n\t\t\tthis._nextHighestDepth = depth + 1;\n\n\t\tthis._depth_childs[depth] = child;\n\t\tthis._children.push(child);\n\n\t\tchild._depthID = depth;\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._invalidateChildren();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\n\t{\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._children[index]._depthID : this.getNextHighestDepth(), false);\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObjectContainer\n\t{\n\t\tvar newInstance:DisplayObjectContainer = new DisplayObjectContainer();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObjectContainer)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.mouseChildren = this._mouseChildren;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance.addChild(this._children[i].clone());\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeValues()\n\t{\n\t\tfor (var i:number = this._children.length - 1; i >= 0; i--)\n\t\t\tthis.removeChild(this._children[i]);\n\n\t\tsuper.disposeValues();\n\t}\n\n\tpublic getChildAtDepth(depth:number):DisplayObject\n\t{\n\t\treturn this._depth_childs[depth];\n\t}\n\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\tpublic getNextHighestDepth()\n\t{\n\t\tif (this._nextHighestDepthDirty)\n\t\t\tthis._updateNextHighestDepth();\n\n\t\treturn this._nextHighestDepth;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new ArgumentError(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildAt(this.getChildIndex(child));\n\n\t\treturn child;\n\t}\n\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\n\t}\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\n\n\t\tchild.iSetParent(null);\n\n\t\tthis._invalidateChildren();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number, index2:number)\n\t{\n\t\tvar depth:number = this._children[index2]._depthID;\n\t\tvar child:DisplayObject = this._children[index1];\n\n\t\tthis.addChildAtDepth(this._children[index2], this._children[index1]._depthID);\n\t\tthis.addChildAtDepth(child, depth);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar box:Box;\n\t\tvar numChildren:number = this._children.length;\n\n\t\tif (numChildren > 0) {\n\t\t\tvar min:number;\n\t\t\tvar max:number;\n\t\t\tvar minX:number, minY:number, minZ:number;\n\t\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\n\t\t\t\tbox = this._children[i].getBox(this);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\n\t\t\t\t} else {\n\t\t\t\t\tmax = box.width + (min = box.x);\n\t\t\t\t\tif (min < minX)\n\t\t\t\t\t\tminX = min;\n\t\t\t\t\tif (max > maxX)\n\t\t\t\t\t\tmaxX = max;\n\n\t\t\t\t\tmax = box.height + (min = box.y);\n\t\t\t\t\tif (min < minY)\n\t\t\t\t\t\tminY = min;\n\t\t\t\t\tif (max > maxY)\n\t\t\t\t\t\tmaxY = max;\n\n\t\t\t\t\tmax = box.depth + (min = box.z);\n\t\t\t\t\tif (min < minZ)\n\t\t\t\t\t\tminZ = min;\n\t\t\t\t\tif (max > maxZ)\n\t\t\t\t\t\tmaxZ = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number)\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateHierarchicalProperties(bitFlag);\n\n\t\treturn false;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene, partition:PartitionBase)\n\t{\n\t\tsuper._iSetScene(value, partition);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._iSetScene(value, partition);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tpublic removeChildAtInternal(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\n\n\t\t//update next highest depth\n\t\tif (this._nextHighestDepth == child._depthID + 1)\n\t\t\tthis._nextHighestDepthDirty = true;\n\n\t\tdelete this._depth_childs[child._depthID];\n\n\t\tchild._depthID = -16384;\n\n\t\treturn child;\n\t}\n\n\tpublic getDepthIndexInternal(depth:number /*int*/):number\n\t{\n\t\tif (!this._depth_childs[depth])\n\t\t\treturn -1;\n\n\t\treturn this._children.indexOf(this._depth_childs[depth]);\n\t}\n\n\tprivate _updateNextHighestDepth()\n\t{\n\t\tthis._nextHighestDepthDirty = false;\n\n\t\tthis._nextHighestDepth = 0;\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._nextHighestDepth < this._children[i]._depthID)\n\t\t\t\tthis._nextHighestDepth = this._children[i]._depthID;\n\n\t\tthis._nextHighestDepth += 1;\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tvar numChildren:number = this._children.length;\n\t\tfor(var i:number = 0; i < numChildren; i++)\n\t\t\tif(this._children[i].hitTestPoint(x,y, shapeFlag, masksFlag))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tpublic _updateMaskMode()\n\t{\n\t\tif (this.maskMode)\n\t\t\tthis.mouseChildren = false;\n\n\t\tsuper._updateMaskMode();\n\t}\n\n\tprivate _invalidateChildren()\n\t{\n\t\tif (this._pIsContainer != Boolean(this._children.length)) {\n\t\t\tif (this._pImplicitPartition)\n\t\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\n\t\t\tthis._pIsContainer = Boolean(this._children.length);\n\n\t\t\tif (this._pImplicitPartition)\n\t\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tthis._pInvalidateBounds();\n\t}\n}\n\nexport default DisplayObjectContainer;",
    "import BlendMode\t\t\t\t\tfrom \"awayjs-core/lib/image/BlendMode\";\nimport Box\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport ColorTransform\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport Sphere\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Sphere\";\nimport MathConsts\t\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Matrix3DUtils\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport Point\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport AssetBase\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\nimport LoaderInfo\t\t\t\t\tfrom \"awayjs-core/lib/library/LoaderInfo\";\nimport EventBase\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport IRenderer\t\t\t\t\tfrom \"awayjs-display/lib/IRenderer\";\nimport IDisplayObjectAdapter\t\tfrom \"awayjs-display/lib/adapters/IDisplayObjectAdapter\";\nimport HierarchicalProperties\t\tfrom \"awayjs-display/lib/base/HierarchicalProperties\";\nimport BoundsType\t\t\t\t\tfrom \"awayjs-display/lib/bounds/BoundsType\";\nimport DisplayObjectContainer\t\tfrom \"awayjs-display/lib/display/DisplayObjectContainer\";\nimport Scene\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Scene\";\nimport ControllerBase\t\t\t\tfrom \"awayjs-display/lib/controllers/ControllerBase\";\nimport AlignmentMode\t\t\t\tfrom \"awayjs-display/lib/base/AlignmentMode\";\nimport OrientationMode\t\t\t\tfrom \"awayjs-display/lib/base/OrientationMode\";\nimport IBitmapDrawable\t\t\t\tfrom \"awayjs-display/lib/base/IBitmapDrawable\";\nimport Transform\t\t\t\t\tfrom \"awayjs-display/lib/base/Transform\";\nimport PartitionBase\t\t\t\tfrom \"awayjs-display/lib/partition/PartitionBase\";\nimport IPickingCollider\t\t\t\tfrom \"awayjs-display/lib/pick/IPickingCollider\";\nimport PickingCollision\t\t\t\tfrom \"awayjs-display/lib/pick/PickingCollision\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport IEntity\t\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport DisplayObjectEvent\t\t\tfrom \"awayjs-display/lib/events/DisplayObjectEvent\";\nimport TransformEvent\t\t\t\tfrom \"awayjs-display/lib/events/TransformEvent\";\nimport PrefabBase\t\t\t\t\tfrom \"awayjs-display/lib/prefabs/PrefabBase\";\nimport ITraverser\t\t\t\tfrom \"awayjs-display/lib/ITraverser\";\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\n{\n\tpublic _iIsRoot:boolean;\n\tpublic _adapter:IDisplayObjectAdapter;\n\tprivate _queuedEvents:Array<EventBase> = new Array<EventBase>();\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\tpublic _pName:string;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pIsEntity:boolean = false;\n\tpublic _pIsContainer:boolean = false;\n\tpublic _sessionID:number = -1;\n\tpublic _depthID:number = -16384;\n\n\tprivate _explicitPartition:PartitionBase;\n\tpublic _pImplicitPartition:PartitionBase;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _sceneChanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean;\n\tprivate _explicitVisibility:boolean = true;\n\tprivate _explicitMaskId:number = -1;\n\tpublic _explicitMasks:Array<DisplayObject>;\n\tpublic _pImplicitVisibility:boolean = true;\n\tpublic _pImplicitMaskId:number = -1;\n\tpublic _pImplicitMasks:Array<Array<DisplayObject>>;\n\tpublic _pImplicitMaskIds:Array<Array<number>> = new Array<Array<number>>();\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tpublic _pImplicitColorTransform:ColorTransform;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _matrix3DDirty:boolean;\n\tprivate _positionDirty:boolean;\n\tprivate _rotationDirty:boolean;\n\tprivate _skewDirty:boolean;\n\tprivate _scaleDirty:boolean;\n\n\tprivate _eulers:Vector3D;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tprivate _pivot:Vector3D;\n\tprivate _pivotScale:Vector3D;\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pickingCollider:IPickingCollider;\n\tprivate _pickingCollision:PickingCollision;\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _boundsType:string;\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n    private _inheritColorTransform:boolean = false;\n\tprivate _maskMode:boolean = false;\n\n\tpublic _hierarchicalPropsDirty:number;\n\n\t//temp vector used in global to local\n\tprivate _tempVector3D:Vector3D = new Vector3D();\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IDisplayObjectAdapter\n\t{\n\t\treturn this._adapter;\n\t}\n\n\tpublic set adapter(value:IDisplayObjectAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    public get inheritColorTransform():boolean\n    {\n        return this._inheritColorTransform;\n    }\n\n    public set inheritColorTransform(value:boolean)\n    {\n\t\tif (this._inheritColorTransform == value)\n\t\t\treturn;\n\n        this._inheritColorTransform = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n    }\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic get alpha():number\n    {\n        return this._transform.colorTransform? this._transform.colorTransform.alphaMultiplier : 1;\n    }\n\n    public set alpha(value:number)\n    {\n\t\tif (!this._transform.colorTransform)\n\t\t\tthis._transform.colorTransform = new ColorTransform();\n\n        this._transform.colorTransform.alphaMultiplier = value;\n    }\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis.invalidate();\n\t\t\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this.scaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._setScaleZ(val/this.getBox().depth);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tif (!this._eulers)\n\t\t\tthis._eulers = new Vector3D();\n\n\t\tthis._eulers.x = this.rotationX;\n\t\tthis._eulers.y = this.rotationY;\n\t\tthis._eulers.z = this.rotationZ;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis.rotationX = value.x;\n\t\tthis.rotationY = value.y;\n\t\tthis.rotationZ = value.z;\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this.scaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._setScaleY(val/this.getBox().height);\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isContainer()\n\t{\n\t\treturn this._pIsContainer;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\tpublic get maskMode():boolean\n\t{\n\t\treturn this._maskMode;\n\t}\n\n\tpublic set maskMode(value:boolean)\n\t{\n\t\tif (this._maskMode == value)\n\t\t\treturn;\n\n\t\tthis._maskMode = value;\n\n\t\tthis._explicitMaskId = value? this.id : -1;\n\n\t\tthis._updateMaskMode();\n\t}\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic get name() :string\n    {\n        return this._pName;\n    }\n\n    public set name(value : string)\n    {\n        this._pName = value;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():PartitionBase\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:PartitionBase)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._iSetScene(this._pScene, this._pParent? this._pParent._iAssignedPartition : null);\n\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.PARTITION_CHANGED, this));\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pickingCollider:IPickingCollider;\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tif (this._pivot && this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\n\t\t\treturn;\n\n\t\tif (!pivot) {\n\t\t\tthis._pivot = null;\n\t\t\tthis._pivotScale = null;\n\t\t} else {\n\t\t\tif (!this._pivot)\n\t\t\t\tthis._pivot = new Vector3D();\n\n\t\t\tthis._pivot.x = pivot.x;\n\t\t\tthis._pivot.y = pivot.y;\n\t\t\tthis._pivot.z = pivot.z;\n\t\t}\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\treturn this._transform.rotation.x*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._transform.rotation.x = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\treturn this._transform.rotation.y*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._transform.rotation.y = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\treturn this._transform.rotation.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._transform.rotation.z = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\treturn this._transform.scale.x;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tthis._setScaleX(val);\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\treturn this._transform.scale.y;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tthis._setScaleY(val);\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\treturn this._transform.scale.z;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tthis._setScaleZ(val);\n\t}\n\n\t/**\n\t * Indicates the horizontal skew(angle) of the object as applied from\n\t * the registration point. The default registration point is(0,0).\n\t */\n\tpublic get skewX():number\n\t{\n\t\treturn this._transform.skew.x;\n\t}\n\n\tpublic set skewX(val:number)\n\t{\n\t\tif (this.skewX == val)\n\t\t\treturn;\n\n\t\tthis._transform.skew.x = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the vertical skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewY():number\n\t{\n\t\treturn this._transform.skew.y;\n\t}\n\n\tpublic set skewY(val:number)\n\t{\n\t\tif (this.skewY == val)\n\t\t\treturn;\n\n\t\tthis._transform.skew.y = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the depth skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewZ():number\n\t{\n\t\treturn this._transform.skew.z;\n\t}\n\n\tpublic set skewZ(val:number)\n\t{\n\t\tif (this.skewZ == val)\n\t\t\treturn;\n\n\t\tthis._transform.skew.z = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (this._pivot && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.VISIBLE);\n\t}\n\n\tpublic get masks():Array<DisplayObject>\n\t{\n\t\treturn this._explicitMasks;\n\t}\n\n\tpublic set masks(value:Array<DisplayObject>)\n\t{\n\t\tif (this._explicitMasks == value)\n\t\t\treturn;\n\n\t\tthis._explicitMasks = value;\n\n\t\t//make sure maskMode is set to true for all masks\n\t\tif (value != null && value.length) {\n\t\t\tvar len:number = value.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tvalue[i].maskMode = true;\n\t\t}\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASKS);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this.scaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._setScaleX(val/this.getBox().width);\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._transform.position.x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._transform.position.x == val)\n\t\t\treturn;\n\n\t\tthis._transform.matrix3D.rawData[12] = val;\n\n\t\tthis._transform.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._transform.position.y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._transform.position.y == val)\n\t\t\treturn;\n\n\t\tthis._transform.matrix3D.rawData[13] = val;\n\n\t\tthis._transform.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._transform.position.z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._transform.position.z == val)\n\t\t\treturn;\n\n\t\tthis._transform.matrix3D.rawData[14] = val;\n\n\t\tthis._transform.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic zOffset:number = 0;\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform();\n\n\t\t//setup transform listeners\n\t\tthis._transform.addEventListener(TransformEvent.INVALIDATE_MATRIX3D, (event:TransformEvent) => this._onInvalidateMatrix3D(event));\n\t\tthis._transform.addEventListener(TransformEvent.INVALIDATE_COLOR_TRANSFORM, (event:TransformEvent) => this._onInvalidateColorTransform(event));\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:(event:EventBase) => void)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar newInstance:DisplayObject = new DisplayObject();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObject)\n\t{\n\t\tnewInstance.partition = this._explicitPartition;\n\t\tnewInstance.boundsType = this._boundsType;\n\t\tnewInstance.pivot = this._pivot;\n\t\tnewInstance.name = this._pName;\n\t\tnewInstance.mouseEnabled = this._explicitMouseEnabled;\n\t\tnewInstance.extra = this.extra;\n\t\tnewInstance.maskMode = this._maskMode;\n\t\tnewInstance.castsShadows = this.castsShadows;\n\n\t\tif (this._explicitMasks)\n\t\t\tnewInstance.masks = this._explicitMasks;\n\n\t\tif (this._adapter)\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\n\n\t\tnewInstance._transform.matrix3D = this._transform.matrix3D;\n\n\t\tif (this._transform.colorTransform)\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\t}\n\n\tpublic disposeValues()\n\t{\n\t\tif (this._pParent)\n\t\t\tthis._pParent.removeChild(this);\n\n\t\t//if (this._adapter) {\n\t\t//\tthis._adapter.dispose();\n\t\t//\tthis._adapter = null;\n\t\t//}\n\n\t\t//this._pos = null;\n\t\t//this._rot = null;\n\t\t//this._sca = null;\n\t\t//this._ske = null;\n\t\t//this._transformComponents = null;\n\t\t//this._transform.dispose();\n\t\t//this._transform = null;\n\t\t//\n\t\t//this._matrix3D = null;\n\t\t//this._pSceneTransform = null;\n\t\t//this._inverseSceneTransform = null;\n\n\t\tthis._explicitMasks = null;\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\t//scale updates if absolute dimensions are detected\n\t\t\tif (this._width != null)\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\n\n\t\t\tif (this._height != null)\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\n\n\t\t\tif (this._depth != null)\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\n\t\t}\n\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\n\t\t\treturn this._pBoxBounds;\n\n\t\tif (targetCoordinateSpace == this._pParent)\n\t\t\treturn this._transform.matrix3D.transformBox(this._pBoxBounds);\n\t\telse\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid)\n\t\t\tthis._pUpdateSphereBounds();\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\tvar objBox:Box = obj.getBox();\n\t\tif(!objBox) return false;\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\n\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n\n\t\tvar box:Box = this.getBox();\n\t\tif(!box) return false;\n\n\t\t//first check all points against targer box\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\n\n\t\t//now test against obj box\n\t\tvar n0x:number = topRight.y - topLeft.y;\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\n\n\t\tvar n1x:number = bottomRight.y - topRight.y;\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\n\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\n\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\n\n\t\tvar p0x:number = box.left - topLeft.x;\n\t\tvar p0y:number = box.top - topLeft.y;\n\t\tvar p1x:number = box.left - topRight.x;\n\t\tvar p1y:number = box.top - topRight.y;\n\t\tvar p2x:number = box.left - bottomRight.x;\n\t\tvar p2y:number = box.top - bottomRight.y;\n\t\tvar p3x:number = box.left - bottomLeft.x;\n\t\tvar p3y:number = box.top - bottomLeft.y;\n\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.top - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.top - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.top - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.top - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.left - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.left - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.left - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.left - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @param maskFlag Whether to check against the object when it is used as mask\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag = false):boolean\n\t{\n\t\tif(!this._pImplicitVisibility)\n\t\t\treturn;\n\n\t\tif(this._pImplicitMaskId != -1 && !masksFlag)\n\t\t\treturn;\n\n\t\tif (this._explicitMasks) {\n\t\t\tvar numMasks:number = this._explicitMasks.length;\n\t\t\tvar maskHit:boolean = false;\n\t\t\tfor (var i:number = 0; i < numMasks; i++) {\n\t\t\t\tif (this._explicitMasks[i].hitTestPoint(x, y, shapeFlag, true)) {\n\t\t\t\t\tmaskHit = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!maskHit)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn this._hitTestPointInternal(x, y, shapeFlag, masksFlag);\n\t}\n\n\tpublic isMask():boolean\n\t{\n\t\treturn this._explicitMaskId == -1;\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Float32Array;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._transform.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (dx == 0 && dy == 0 && dz == 0)\n\t\t\treturn;\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\tpublic reset():void\n\t{\n\t\tthis.visible = true;\n\n\t\tif(this._transform.matrix3D)\n\t\t\tthis._transform.clearMatrix3D();\n\n\t\tif(this._transform.colorTransform)\n\t\t\tthis._transform.clearColorTransform();\n\n\t\t//this.name=\"\";\n\t\tthis.masks = null;\n\n\t\tthis.maskMode = false;\n\t}\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(cameraTransform:Matrix3D):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = cameraTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[3];\n\t\t\tcomps[0].copyFrom(this.scenePosition);\n\t\t\tscale.x = this.scaleX;\n\t\t\tscale.y = this.scaleY;\n\t\t\tscale.z = this.scaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (this._pivot && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:(event:EventBase) => void)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():PartitionBase\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollision():PickingCollision\n\t{\n\t\tif (!this._pickingCollision)\n\t\t\tthis._pickingCollision = new PickingCollision(this);\n\n\t\treturn this._pickingCollision;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tthis._pParent = value;\n\n        if (value)\n\t\t\tthis._iSetScene(value._pScene, value._iAssignedPartition);\n\t\telse\n\t\t\tthis._iSetScene(null, null);\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.ALL);\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(propDirty:number):boolean\n\t{\n\t\tvar newPropDirty:number = (this._hierarchicalPropsDirty ^ propDirty) & propDirty;\n\t\tif (!newPropDirty)\n\t\t\treturn true;\n\n\t\tthis._hierarchicalPropsDirty |= propDirty;\n\n\t\tif (newPropDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._inverseSceneTransformDirty = true;\n\t\t\tthis._scenePositionDirty = true;\n\n\t\t\tif (this.isEntity)\n\t\t\t\tthis.invalidatePartitionBounds();\n\n\t\t\tif (this._pParent)\n\t\t\t\tthis._pParent._pInvalidateBounds();\n\n\t\t\tif (this._listenToSceneTransformChanged)\n\t\t\t\tthis.queueDispatch(this._sceneTransformChanged || (this._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this)));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _iSetScene(scene:Scene, partition:PartitionBase)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\n\t\t\t//gc abstraction objects\n\t\t\tthis.clear();\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tif (sceneChanged && this._listenToSceneChanged)\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.updateController();\n\n\t\tthis._pSceneTransform.copyFrom(this._transform.matrix3D);\n\n\t\tif (this._pivot) {\n\t\t\tif (!this._pivotScale)\n\t\t\t\tthis._pivotScale = new Vector3D();\n\n\t\t\tthis._pivotScale.x = this._pivot.x/this._transform.scale.x;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._transform.scale.y;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._transform.scale.z;\n\t\t\tthis._pSceneTransform.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._pSceneTransform.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\n\t\tif (this._pParent && !this._pParent._iIsRoot)\n\t\t\tthis._pSceneTransform.append(this._pParent.sceneTransform);\n\n\t\tthis._matrix3DDirty = false;\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._skewDirty = false;\n\t\tthis._scaleDirty = false;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.SCENE_TRANSFORM;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\n\n\t\tthis._queuedEvents.length = 0;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.VISIBLE)\n\t\t\tthis._updateVisible();\n\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMaskId():number\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASK_ID)\n\t\t\tthis._updateMaskId();\n\n\t\treturn this._pImplicitMaskId;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMasks():Array<Array<DisplayObject>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMasks;\n\t}\n\n\tpublic _iMasksConfig():Array<Array<number>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMaskIds;\n\t}\n\n\tpublic _iAssignedColorTransform():ColorTransform\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.COLOR_TRANSFORM)\n\t\t\tthis._updateColorTransform();\n\n\t\treturn this._pImplicitColorTransform;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n\t}\n\n\tpublic _acceptTraverser(collector:ITraverser)\n\t{\n\t\t//nothing to do here\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate _onInvalidateMatrix3D(event:TransformEvent)\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate _onInvalidateColorTransform(event:TransformEvent)\n\t{\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartitionBounds();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n\n\tprivate queueDispatch(event:EventBase)\n\t{\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\tprivate _setScaleX(val:number)\n\t{\n\t\tif (this.scaleX == val)\n\t\t\treturn;\n\n\t\tthis._transform.scale.x = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\tprivate _setScaleY(val:number)\n\t{\n\t\tif (this.scaleY == val)\n\t\t\treturn;\n\n\t\tthis._transform.scale.y = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\tprivate _setScaleZ(val:number)\n\t{\n\t\tif (this.scaleZ == val)\n\t\t\treturn;\n\n\t\tthis._transform.scale.z = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\tpublic _updateMouseEnabled()\n\t{\n\t\tthis._pImplicitMouseEnabled = (this._pParent)? this._pParent.mouseChildren && this._pParent._pImplicitMouseEnabled : true;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this.pickingCollider)\n\t\t\tthis.pickingCollider =  this._pParent.pickingCollider;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MOUSE_ENABLED;\n\t}\n\n\tprivate _updateVisible()\n\t{\n\t\tthis._pImplicitVisibility = (this._pParent)? this._explicitVisibility && this._pParent._iIsVisible() : this._explicitVisibility;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.VISIBLE;\n\t}\n\n\tprivate _updateMaskId()\n\t{\n\t\tthis._pImplicitMaskId = (this._pParent && this._pParent._iAssignedMaskId() != -1)? this._pParent._iAssignedMaskId() : this._explicitMaskId;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASK_ID;\n\t}\n\n\tprivate _updateMasks()\n\t{\n\t\tthis._pImplicitMasks = (this._pParent && this._pParent._iAssignedMasks())? (this._explicitMasks != null)? this._pParent._iAssignedMasks().concat([this._explicitMasks]) : this._pParent._iAssignedMasks().concat() : (this._explicitMasks != null)? [this._explicitMasks] : null;\n\n\t\tthis._pImplicitMaskIds.length = 0;\n\n\t\tif (this._pImplicitMasks && this._pImplicitMasks.length) {\n\t\t\tvar numLayers:number = this._pImplicitMasks.length;\n\t\t\tvar numChildren:number;\n\t\t\tvar implicitChildren:Array<DisplayObject>;\n\t\t\tvar implicitChildIds:Array<number>;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\timplicitChildren = this._pImplicitMasks[i];\n\t\t\t\tnumChildren = implicitChildren.length;\n\t\t\t\timplicitChildIds = new Array<number>();\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++)\n\t\t\t\t\timplicitChildIds.push(implicitChildren[j].id);\n\n\t\t\t\tthis._pImplicitMaskIds.push(implicitChildIds);\n\t\t\t}\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASKS;\n\t}\n\n\tprivate _updateColorTransform()\n\t{\n\t\tif (!this._pImplicitColorTransform)\n\t\t\tthis._pImplicitColorTransform = new ColorTransform();\n\n\t\tif (this._inheritColorTransform && this._pParent && this._pParent._iAssignedColorTransform()) {\n\t\t\tthis._pImplicitColorTransform.copyFrom(this._pParent._iAssignedColorTransform());\n\n\t\t\tif (this._transform.colorTransform)\n\t\t\t\tthis._pImplicitColorTransform.prepend(this._transform.colorTransform);\n\t\t} else {\n\t\t\tif (this._transform.colorTransform)\n\t\t\t\tthis._pImplicitColorTransform.copyFrom(this._transform.colorTransform);\n\t\t\telse\n\t\t\t\tthis._pImplicitColorTransform.clear();\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.COLOR_TRANSFORM;\n\t}\n\n\tpublic _updateMaskMode()\n\t{\n\t\tif (this.maskMode)\n\t\t\tthis.mouseEnabled = false;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASK_ID);\n\t}\n\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tvar i:number;\n\n\t\tthis._pImplicitColorTransform = null;\n\t\tthis._pImplicitMasks = null;\n\t}\n\n\tpublic invalidatePartitionBounds()\n\t{\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this));\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport default DisplayObject;",
    "import Matrix3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport AbstractMethodError\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\n\nimport DisplayObjectContainer\tfrom \"awayjs-display/lib/display/DisplayObjectContainer\";\nimport Camera\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport IEntity\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport LightEvent\t\t\t\tfrom \"awayjs-display/lib/events/LightEvent\";\nimport ShadowMapperBase\t\t\tfrom \"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\";\n\nclass LightBase extends DisplayObjectContainer\n{\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _shadowsEnabled:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get shadowsEnabled():boolean\n\t{\n\t\treturn this._shadowsEnabled;\n\t}\n\n\tpublic set shadowsEnabled(value:boolean)\n\t{\n\t\tif (this._shadowsEnabled == value)\n\t\t\treturn;\n\n\t\tthis._shadowsEnabled = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, cameraTransform:Matrix3D, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport default LightBase;",
    "import ImageCube\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageCube\";\nimport SamplerCube\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerCube\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport ErrorBase\t\t\t\t\tfrom \"awayjs-core/lib/errors/ErrorBase\";\n\nimport LightBase\t\t\t\t\tfrom \"awayjs-display/lib/display/LightBase\";\nimport BoundsType\t\t\t\t\tfrom \"awayjs-display/lib/bounds/BoundsType\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport IEntity\t\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light LightProbe]\";\n\n\tpublic diffuseMap:ImageCube;\n\n\tpublic diffuseSampler:SamplerCube = new SamplerCube();\n\n\tpublic specularMap:ImageCube;\n\n\tpublic specularSampler:SamplerCube = new SamplerCube();\n\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.diffuseMap = diffuseMap;\n\t\tthis.specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn LightProbe.assetType;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, cameraTransform:Matrix3D, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new ErrorBase(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n}\n\nexport default LightProbe;",
    "﻿import Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport ITraverser\t\t\t\t\tfrom \"awayjs-display/lib/ITraverser\";\nimport IAnimator\t\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimator\";\nimport DisplayObject\t\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport IRenderable\t\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nimport BoundsType\t\t\t\t\tfrom \"awayjs-display/lib/bounds/BoundsType\";\nimport RenderableEvent\t\t\t\tfrom \"awayjs-display/lib/events/RenderableEvent\";\nimport IEntity\t\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport MaterialBase\t\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\nimport Style\t\t\t\t\t\tfrom \"awayjs-display/lib/base/Style\";\nimport StyleEvent\t\t\t\t\tfrom \"awayjs-display/lib/events/StyleEvent\";\nimport IPickingCollider\t\t\t\tfrom \"awayjs-display/lib/pick/IPickingCollider\";\nimport PickingCollision\t\t\t\tfrom \"awayjs-display/lib/pick/PickingCollision\";\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderable\n{\n\tprivate _style:Style;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.invalidateGraphics();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.invalidateGraphics();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.invalidateGraphics();\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t * The style used to render the current LineSegment. If set to null, the default style of the material will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis.invalidateSurface();\n\t}\n\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateGraphics()\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_ELEMENTS, this));//TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic invalidateSurface()\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_RENDER_OWNER, this));\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidateSurface();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(pickingCollision:PickingCollision, pickingCollider:IPickingCollider):boolean\n\t{\n\t\treturn false; //TODO: detect line collisions\n\t}\n\n\tpublic _acceptTraverser(traverser:ITraverser)\n\t{\n\t\ttraverser.applyRenderable(this);\n\t}\n}\n\nexport default LineSegment;",
    "import AssetLibraryBundle\t\t\tfrom \"awayjs-core/lib/library/AssetLibraryBundle\";\nimport Loader\t\t\t\t\t\tfrom \"awayjs-core/lib/library/Loader\";\nimport LoaderContext\t\t\t\tfrom \"awayjs-core/lib/library/LoaderContext\";\nimport URLRequest\t\t\t\t\tfrom \"awayjs-core/lib/net/URLRequest\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport EventDispatcher\t\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\nimport URLLoaderEvent\t\t\t\tfrom \"awayjs-core/lib/events/URLLoaderEvent\";\nimport LoaderEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/LoaderEvent\";\nimport ParserEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/ParserEvent\";\nimport ParserBase\t\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserBase\";\n\nimport DisplayObjectContainer\t\tfrom \"awayjs-display/lib/display/DisplayObjectContainer\";\nimport DisplayObject\t\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\n\n/**\n * The LoaderContainer class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the LoaderContainer object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The LoaderContainer class overrides the following methods that it inherits,\n * because a LoaderContainer object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>LoaderContainer</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The LoaderContainer and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the LoaderContainer class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the LoaderContainer object's root SWF file), you may want to define a\n * mask for the LoaderContainer object, to prevent the loaded content(which is a child\n * of the LoaderContainer object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass LoaderContainer extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (sprites, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loader:Loader;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onLoadCompleteDelegate:(event:LoaderEvent) => void;\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:URLLoaderEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\tprivate _content:DisplayObject;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onLoadCompleteDelegate = (event:LoaderEvent) => this.onLoadComplete(event);\n\t\tthis._onLoadErrorDelegate = (event:URLLoaderEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (!this._loader)\n\t\t\treturn;\n\t\t\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.disposeLoader(this._loader);\n\t\t}\n\t\t\n\t\tthis._disposeLoader();\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, Loader will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoader().load(request, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoader().loadData(data, '', context, ns, parser);\n\t}\n\n\tprivate _getLoader()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tthis._loader = lib.getLoader();\n\t\t} else {\n\t\t\tthis._loader = new Loader();\n\t\t}\n\n\t\tthis._loader.addEventListener(LoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n\t\tthis._loader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tthis._loader._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tthis._loader._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn this._loader;\n\t}\n\n\tprivate _disposeLoader()\n\t{\n\t\tthis._loader.removeEventListener(LoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n\t\tthis._loader.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loader.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\tif (!this._useAssetLib)\n\t\t\tthis._loader.stop();\n\n\t\tthis._loader = null;\n\t}\n\t\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoader.enableParsers(parserClasses);\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:URLLoaderEvent):boolean\n\t{\n\t\tif (this.hasEventListener(URLLoaderEvent.LOAD_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onLoadComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis._disposeLoader();\n\t}\n}\n\nexport default LoaderContainer;",
    "import AssetEvent                   from \"awayjs-core/lib/events/AssetEvent\";\n\nimport DisplayObject                from \"awayjs-display/lib/display/DisplayObject\";\nimport Sprite                       from \"awayjs-display/lib/display/Sprite\";\nimport TextField                    from \"awayjs-display/lib/display/TextField\";\nimport MouseEvent                   from \"awayjs-display/lib/events/MouseEvent\";\nimport IMovieClipAdapter\t    \tfrom \"awayjs-display/lib/adapters/IMovieClipAdapter\";\nimport Timeline                     from \"awayjs-display/lib/base/Timeline\";\nimport FrameScriptManager           from \"awayjs-display/lib/managers/FrameScriptManager\";\n\nclass MovieClip extends Sprite\n{\n\tprivate static _skipAdvance:boolean;\n\n\tprivate static _movieClips:Array<MovieClip> = new Array<MovieClip>();\n\n\tpublic static assetType:string = \"[asset MovieClip]\";\n\n\tprivate _timeline:Timeline;\n\n\tprivate _isButton:boolean = false;\n\tprivate _onMouseOver:(event:MouseEvent) => void;\n\tprivate _onMouseOut:(event:MouseEvent) => void;\n\tprivate _onMouseDown:(event:MouseEvent) => void;\n\tprivate _onMouseUp:(event:MouseEvent) => void;\n\n\tprivate _time:number = 0;// the current time inside the animation\n\tprivate _currentFrameIndex:number = -1;// the current frame\n\n\tprivate _isPlaying:boolean = true;// false if paused or stopped\n\n\t// not sure if needed\n\tprivate _enterFrame:AssetEvent;\n\tprivate _skipAdvance : boolean;\n\tprivate _isInit:boolean = true;\n\n\tprivate _potentialInstances:Array<DisplayObject> = [];\n\tprivate _depth_sessionIDs:Object = {};\n\tprivate _sessionID_childs:Object = {};\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IMovieClipAdapter\n\t{\n\t\treturn <IMovieClipAdapter> this._adapter;\n\t}\n\n\tpublic set adapter(value:IMovieClipAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n\tconstructor(timeline:Timeline = null)\n\t{\n\t\tsuper();\n\n\t\tthis._enterFrame = new AssetEvent(AssetEvent.ENTER_FRAME, this);\n\n\t\tthis.inheritColorTransform = true;\n\n\t\tthis._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\n\t\tthis._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\n\t\tthis._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\n\t\tthis._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\n\n\t\tthis._timeline = timeline || new Timeline();\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\n\t\tMovieClip._movieClips.push(this);\n\t}\n\n\tpublic disposeValues()\n\t{\n\t\tsuper.disposeValues();\n\n\t\tthis._potentialInstances = [];\n\t\tthis._depth_sessionIDs = {};\n\t\tthis._sessionID_childs = {};\n\t}\n\n\tpublic reset_textclones()\n\t{\n\t\tif(this.timeline) {\n\t\t\tvar len:number = this._potentialInstances.length;\n\t\t\tfor (var i:number = 0; i< len; i++) {\n\t\t\t\tif (this._potentialInstances[i] != null) {\n\t\t\t\t\tif (this._potentialInstances[i].isAsset(TextField))\n\t\t\t\t\t\t(<TextField>this._potentialInstances[i]).text = (<TextField>this.timeline.getPotentialChildPrototype(i)).text;\n\t\t\t\t\telse if (this._potentialInstances[i].isAsset(MovieClip))\n\t\t\t\t\t\t(<MovieClip>this._potentialInstances[i]).reset_textclones();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get isInit():boolean\n\t{\n\t\treturn this._isInit;\n\t}\n\tpublic set isInit(value:boolean)\n\t{\n\t\tthis._isInit = value;\n\t}\n\n\tpublic get timeline():Timeline\n\t{\n\t\treturn this._timeline;\n\t}\n\n\tpublic set timeline(value:Timeline)\n\t{\n\t\tthis._timeline = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic loop:boolean = true;\n\n\tpublic get numFrames() : number\n\t{\n\t\treturn this._timeline.numFrames;\n\t}\n\n\tpublic jumpToLabel(label:string)\n\t{\n\t\t// the timeline.jumpTolabel will set currentFrameIndex\n\t\tthis._timeline.jumpToLabel(this, label);\n\t}\n\n\t/**\n\t * the current index of the current active frame\n\t */\n\tpublic constructedKeyFrameIndex:number = -1;\n\n\tpublic reset():void\n\t{\n\t\tsuper.reset();\n\n\t\t// time only is relevant for the root mc, as it is the only one that executes the update function\n\t\tthis._time = 0;\n\n\t\tif(this.adapter)\n\t\t\tthis.adapter.freeFromScript();\n\n\t\tthis.constructedKeyFrameIndex = -1;\n\t\tfor (var i:number = this.numChildren - 1; i >= 0; i--)\n\t\t\tthis.removeChildAt(i);\n\n\t\tthis._skipAdvance = MovieClip._skipAdvance;\n\n\t\tvar numFrames:number = this._timeline.keyframe_indices.length;\n\t\tthis._isPlaying = Boolean(numFrames > 1);\n\t\tif (numFrames) {\n\t\t\tthis._currentFrameIndex = 0;\n\t\t\tthis._timeline.constructNextFrame(this, true, true);\n\t\t} else {\n\t\t\tthis._currentFrameIndex = -1;\n\t\t}\n\t}\n\n\n\tpublic resetSessionIDs()\n\t{\n\t\tthis._depth_sessionIDs = {};\n\t}\n\n\t/*\n\t* Setting the currentFrameIndex will move the playhead for this movieclip to the new position\n\t */\n\tpublic get currentFrameIndex():number\n\t{\n\t\treturn this._currentFrameIndex;\n\t}\n\n\tpublic set currentFrameIndex(value:number)\n\t{\n\t\t//if currentFrame is set greater than the available number of\n\t\t//frames, the playhead is moved to the last frame in the timeline.\n\t\t//But because the frame specified was not a keyframe, no scripts are\n\t\t//executed, even if they exist on the last frame.\n\t\tvar skip_script:boolean = false;\n\n\t\tvar numFrames:number = this._timeline.keyframe_indices.length;\n\n\t\tif (!numFrames)\n\t\t\treturn;\n\n\t\tif (value < 0) {\n\t\t\tvalue = 0;\n\t\t} else if (value >= numFrames) {\n\t\t\tvalue = numFrames - 1;\n\t\t\tskip_script = true;\n\t\t}\n\n\t\tif (this._currentFrameIndex == value)\n\t\t\treturn;\n\n\t\tthis._currentFrameIndex = value;\n\n\t\t//changing current frame will ignore advance command for that\n\t\t//update's advanceFrame function, unless advanceFrame has\n\t\t//already been executed\n\t\tthis._skipAdvance = MovieClip._skipAdvance;\n\n\t\tthis._timeline.gotoFrame(this, value, skip_script);\n\t}\n\n\tpublic addButtonListeners()\n\t{\n\t\tthis._isButton = true;\n\n\t\tthis.stop();\n\n\t\tthis.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n\t\tthis.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n\t\tthis.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n\t\tthis.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n\t}\n\n\tpublic removeButtonListeners()\n\t{\n\t\tthis.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n\t\tthis.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n\t\tthis.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n\t\tthis.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n\n\t}\n\n\tpublic getChildAtSessionID(sessionID:number):DisplayObject\n\t{\n\t\treturn this._sessionID_childs[sessionID];\n\t}\n\n\tpublic getSessionIDDepths():Object\n\t{\n\t\treturn this._depth_sessionIDs;\n\t}\n\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n\t{\n\t\t//this should be implemented for all display objects\n\t\tchild.inheritColorTransform = true;\n\n\t\tchild.reset();// this takes care of transform and visibility\n\n\t\treturn super.addChildAtDepth(child, depth, replace);\n\t}\n\n\tpublic _addTimelineChildAt(child:DisplayObject, depth:number, sessionID:number):DisplayObject\n\t{\n\t\tthis._depth_sessionIDs[depth] = child._sessionID = sessionID;\n\n\t\tthis._sessionID_childs[sessionID] = child;\n\n\t\treturn this.addChildAtDepth(child, depth);\n\t}\n\n\tpublic removeChildAtInternal(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif(child.adapter)\n\t\t\tchild.adapter.freeFromScript();\n\n\t\tthis.adapter.unregisterScriptObject(child);\n\n\t\t//check to make sure _depth_sessionIDs wasn't modified with a new child\n\t\tif (this._depth_sessionIDs[child._depthID] == child._sessionID)\n\t\t\tdelete this._depth_sessionIDs[child._depthID];\n\n\t\tdelete this._sessionID_childs[child._sessionID];\n\n\t\tchild._sessionID = -1;\n\n\t\treturn super.removeChildAtInternal(index);\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn MovieClip.assetType;\n\t}\n\n\t/**\n\t * Starts playback of animation from current position\n\t */\n\tpublic play()\n\t{\n\t\tif (this._timeline.keyframe_indices.length > 1)\n\t\t\tthis._isPlaying = true;\n\t}\n\n\t/**\n\t * should be called right before the call to away3d-render.\n\t */\n\tpublic update()\n\t{\n\t\tMovieClip._skipAdvance = true;\n\n\t\tthis.advanceFrame();\n\n\t\tMovieClip._skipAdvance = false;\n\n\t\t// after we advanced the scenegraph, we might have some script that needs executing\n\t\tFrameScriptManager.execute_queue();\n\n\t\t// now we want to execute the onEnter\n\t\tthis.dispatchEvent(this._enterFrame);\n\n\t\t// after we executed the onEnter, we might have some script that needs executing\n\t\tFrameScriptManager.execute_queue();\n\n\t\t// now we execute any intervals queued\n\t\tFrameScriptManager.execute_intervals();\n\n\t\t// finally, we execute any scripts that were added from intervals\n\t\tFrameScriptManager.execute_queue();\n\n\t\t//execute any disposes as a result of framescripts\n\t\tFrameScriptManager.execute_dispose();\n\t}\n\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\n\t{\n\t\tif (!this._potentialInstances[id])\n\t\t\tthis._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\n\n\t\treturn this._potentialInstances[id];\n\t}\n\n\n\t/**\n\t * Stop playback of animation and hold current position\n\t */\n\tpublic stop()\n\t{\n\t\tthis._isPlaying = false;\n\t}\n\n\tpublic clone():MovieClip\n\t{\n\t\tvar newInstance:MovieClip = (MovieClip._movieClips.length)? MovieClip._movieClips.pop() : new MovieClip(this._timeline);\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:MovieClip)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.timeline = this._timeline;\n\t\tnewInstance.loop = this.loop;\n\t}\n\n\tpublic advanceFrame()\n\t{\n\t\tif (this._isPlaying && !this._skipAdvance) {\n\t\t\tif (this._currentFrameIndex == this._timeline.keyframe_indices.length - 1) {\n\t\t\t\tif (this.loop) // end of loop - jump to first frame.\n\t\t\t\t\tthis.currentFrameIndex = 0;\n\t\t\t\telse //end of timeline, stop playing\n\t\t\t\t\tthis._isPlaying = false;\n\t\t\t} else { // not end - construct next frame\n\t\t\t\tthis._currentFrameIndex++;\n\t\t\t\tthis._timeline.constructNextFrame(this);\n\t\t\t}\n\t\t}\n\n\t\tvar len:number = this._children.length;\n\t\tvar child:DisplayObject;\n\t\tfor (var i:number = 0; i <  len; ++i) {\n\t\t\tchild = this._children[i];\n\n\t\t\tif (child.isAsset(MovieClip))\n\t\t\t\t(<MovieClip> child).advanceFrame();\n\t\t}\n\n\t\tthis._skipAdvance = false;\n\t}\n\n// DEBUG CODE:\n\tlogHierarchy(depth: number = 0):void\n\t{\n\t\tthis.printHierarchyName(depth, this);\n\n\t\tvar len = this._children.length;\n\t\tvar child:DisplayObject;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tchild = this._children[i];\n\n\t\t\tif (child.isAsset(MovieClip))\n\t\t\t\t(<MovieClip> child).logHierarchy(depth + 1);\n\t\t\telse\n\t\t\t\tthis.printHierarchyName(depth + 1, child);\n\t\t}\n\t}\n\n\tprintHierarchyName(depth:number, target:DisplayObject)\n\t{\n\t\tvar str = \"\";\n\t\tfor (var i = 0; i < depth; ++i)\n\t\t\tstr += \"--\";\n\n\t\tstr += \" \" + target.name + \" = \" + target.id;\n\t\tconsole.log(str);\n\t}\n\n\tpublic clear()\n\t{\n\t\t//clear out potential instances\n\t\tvar len:number = this._potentialInstances.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tvar instance:DisplayObject = this._potentialInstances[i];\n\n\t\t\t//only dispose instances that are not used in script ie. do not have an instance name\n\t\t\tif (instance && instance.name == \"\") {\n\t\t\t\tFrameScriptManager.add_child_to_dispose(instance);\n\t\t\t\tdelete this._potentialInstances[i];\n\t\t\t}\n\t\t}\n\n\t\tsuper.clear();\n\t}\n}\nexport default MovieClip;\n",
    "import Box\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Matrix3DUtils\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport LightBase\t\t\t\t\tfrom \"awayjs-display/lib/display/LightBase\";\nimport BoundsType\t\t\t\t\tfrom \"awayjs-display/lib/bounds/BoundsType\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport IEntity\t\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport CubeMapShadowMapper\t\t\tfrom \"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\";\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light PointLight]\";\n\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\n\tpublic get assetType():string\n\t{\n\t\treturn PointLight.assetType;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, cameraTransform:Matrix3D, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(cameraTransform));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(cameraTransform));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n}\n\nexport default PointLight;",
    "import ITraverser\t\t\t\t\tfrom \"awayjs-display/lib/ITraverser\";\nimport DisplayObject\t\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport DisplayObjectContainer\t\tfrom \"awayjs-display/lib/display/DisplayObjectContainer\";\nimport BasicPartition\t\t\t\tfrom \"awayjs-display/lib/partition/BasicPartition\";\nimport PartitionBase\t\t\t\tfrom \"awayjs-display/lib/partition/PartitionBase\";\n\nclass Scene extends DisplayObjectContainer\n{\n\tprivate _expandedPartitions:Array<PartitionBase> = new Array<PartitionBase>();\n\tprivate _partitions:Array<PartitionBase> = new Array<PartitionBase>();\n\n\tpublic _iCollectionMark = 0;\n\n\tconstructor(partition:PartitionBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis.partition = partition || new BasicPartition();\n\n\t\tthis._iIsRoot = true;\n\t\tthis._pScene = this;\n\t}\n\n\tpublic traversePartitions(traverser:ITraverser)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport default Scene;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Box\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport Point\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport ITraverser\t\t\t\t\tfrom \"awayjs-display/lib/ITraverser\";\nimport IAnimator\t\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimator\";\nimport DisplayObject\t\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport Graphics\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport DisplayObjectContainer\t\tfrom \"awayjs-display/lib/display/DisplayObjectContainer\";\nimport MaterialBase\t\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\nimport ElementsUtils\t\t\t\tfrom \"awayjs-display/lib/utils/ElementsUtils\";\nimport Style\t\t\t\t\t\tfrom \"awayjs-display/lib/base/Style\";\nimport StyleEvent\t\t\t\t\tfrom \"awayjs-display/lib/events/StyleEvent\";\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Shape class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Shape object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Shape objects that contain the same graphics.\n * However, a Shape object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate static _shapes:Array<Shape> = new Array<Shape>();\n\n\tpublic static assetType:string = \"[asset Shape]\";\n\n\tprivate _center:Vector3D;\n\tprivate _graphics:Graphics;\n\tprivate _onGraphicsInvalidateDelegate:(event:AssetEvent) => void;\n\n\t//temp point used in hit testing\n\tprivate _tempPoint:Point = new Point();\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Shape.assetType;\n\t}\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where\n\t * drawing commands can occur.\n\t */\n\tpublic get graphics():Graphics\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Defines the animator of the graphics object.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._graphics.animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._graphics.animator)\n\t\t\tthis._graphics.animator.removeOwner(this);\n\n\t\tthis._graphics.animator = value;\n\n\t\tif (this._graphics.animator)\n\t\t\tthis._graphics.animator.addOwner(this);\n\t}\n\n\t/**\n\t * The material with which to render the Shape.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._graphics.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tthis._graphics.material = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._graphics.style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tthis._graphics.style = value;\n\t}\n\n\t/**\n\t * Create a new Shape object.\n\t *\n\t * @param material    [optional]        The material with which to render the Shape.\n\t */\n\tconstructor(material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onGraphicsInvalidateDelegate = (event:AssetEvent) => this._onGraphicsInvalidate(event);\n\n\t\tthis._graphics = new Graphics(); //unique graphics object for each Sprite\n\t\tthis._graphics.addEventListener(AssetEvent.INVALIDATE, this._onGraphicsInvalidateDelegate);\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis._graphics.applyTransformation(this.transform.matrix3D);\n\t\tthis.transform.clearMatrix3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\n\t\tShape._shapes.push(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeValues()\n\t{\n\t\tsuper.disposeValues();\n\n\t\tthis._graphics.dispose();\n\t}\n\n\t/**\n\t * Clones this Shape instance along with all it's children, while re-using the same\n\t * material, graphics and animation set. The returned result will be a copy of this shape,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * graphics, and material. Properties that are cloned or created anew for the copy\n\t * include subShapees, children of the shape, and the animator.\n\t *\n\t * If you want to copy just the shape, reusing it's graphics and material while not\n\t * cloning it's children, the simplest way is to create a new shape manually:\n\t *\n\t * <code>\n\t * var clone : Shape = new Shape(original.graphics, original.material);\n\t * </code>\n\t */\n\tpublic clone():Shape\n\t{\n\t\tvar newInstance:Shape = (Shape._shapes.length)? Shape._shapes.pop() : new Shape();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(shape:Shape)\n\t{\n\t\tsuper.copyTo(shape);\n\n\t\tthis._graphics.copyTo(shape.graphics);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.union(this._graphics.getBoxBounds(), this._pBoxBounds);\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\n\t\tif (!this._center)\n\t\t\tthis._center = new Vector3D();\n\n\t\tthis._center.x = box.x + box.width/2;\n\t\tthis._center.y = box.y + box.height/2;\n\t\tthis._center.z = box.z + box.depth/2;\n\n\t\tthis._pSphereBounds = this._graphics.getSphereBounds(this._center, this._pSphereBounds);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate _onGraphicsInvalidate(event:AssetEvent)\n\t{\n\t\tif (this._pIsEntity != Boolean(this._graphics.count)) {\n\t\t\tif (this._pImplicitPartition)\n\t\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\n\t\t\tthis._pIsEntity = Boolean(this._graphics.count);\n\n\t\t\tif (this._pImplicitPartition)\n\t\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _acceptTraverser(traverser:ITraverser)\n\t{\n\t\tthis.graphics.acceptTraverser(traverser);\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tif(this._graphics.count) {\n\t\t\tthis._tempPoint.setTo(x,y);\n\t\t\tvar local:Point = this.globalToLocal(this._tempPoint, this._tempPoint);\n\t\t\tvar box:Box;\n\n\t\t\t//early out for box test\n\t\t\tif(!(box = this.getBox()).contains(local.x, local.y, 0))\n\t\t\t\treturn false;\n\n\t\t\t//early out for non-shape tests\n\t\t\tif (!shapeFlag)\n\t\t\t\treturn true;\n\n\t\t\t//ok do the graphics thing\n\t\t\tif (this._graphics._hitTestPointInternal(local.x, local.y))\n\t\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._graphics.clear();\n\t}\n}\n\nexport default Shape;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport BlendMode\t\t\t\t\tfrom \"awayjs-core/lib/image/BlendMode\";\nimport ImageCube\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageCube\";\nimport ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport SamplerBase\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerBase\";\nimport Matrix\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport ColorTransform\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\n\nimport IAnimationSet\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimationSet\";\nimport IAnimator\t\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimator\";\nimport DisplayObject\t\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport IRenderable\t\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport BoundsType\t\t\t\t\tfrom \"awayjs-display/lib/bounds/BoundsType\";\nimport IEntity\t\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport RenderableEvent\t\t\t\tfrom \"awayjs-display/lib/events/RenderableEvent\";\nimport SurfaceEvent\t\t\t\t\tfrom \"awayjs-display/lib/events/SurfaceEvent\";\nimport LightPickerBase\t\t\t\tfrom \"awayjs-display/lib/materials/lightpickers/LightPickerBase\";\nimport MaterialBase\t\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\nimport SingleCubeTexture\t\t\tfrom \"awayjs-display/lib/textures/SingleCubeTexture\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\nimport Style\t\t\t\t\t\tfrom \"awayjs-display/lib/base/Style\";\nimport StyleEvent\t\t\t\t\tfrom \"awayjs-display/lib/events/StyleEvent\";\nimport IPickingCollider\t\t\t\tfrom \"awayjs-display/lib/pick/IPickingCollider\";\nimport PickingCollision\t\t\t\tfrom \"awayjs-display/lib/pick/PickingCollision\";\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderable, ISurface\n{\n\tprivate _textures:Array<TextureBase> = new Array<TextureBase>();\n\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _texture:SingleCubeTexture;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _owners:Array<IRenderable>;\n\tprivate _curves:boolean = false;\n\tprivate _imageRect:boolean = false;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate _style:Style = new Style();\n\n\tprivate _animator:IAnimator;\n\n\tprivate _onTextureInvalidateDelegate:(event:AssetEvent) => void;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether skybox should use curves. Defaults to false.\n\t */\n\tpublic get curves():boolean\n\t{\n\t\treturn this._curves;\n\t}\n\n\tpublic set curves(value:boolean)\n\t{\n\t\tif (this._curves == value)\n\t\t\treturn;\n\n\t\tthis._curves = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use imageRects. Defaults to false.\n\t */\n\tpublic get imageRect():boolean\n\t{\n\t\treturn this._imageRect;\n\t}\n\n\tpublic set imageRect(value:boolean)\n\t{\n\t\tif (this._imageRect == value)\n\t\t\treturn;\n\n\t\tthis._imageRect = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis.invalidate();\n\t}\n\n\n\t/**\n\t * A list of the IRenderables that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderable>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get texture():SingleCubeTexture\n\t{\n\t\treturn this._texture;\n\t}\n\n\tpublic set texture(value:SingleCubeTexture)\n\t{\n\t\tif (this._texture == value)\n\t\t\treturn;\n\n\t\tif (this._texture)\n\t\t\tthis.removeTexture(this._texture);\n\n\t\tthis._texture = value;\n\n\t\tif (this._texture)\n\t\t\tthis.addTexture(this._texture);\n\n\t\tthis.invalidatePasses();\n\t}\n\n\tpublic getNumTextures():number\n\t{\n\t\treturn this._textures.length;\n\t}\n\n\tpublic getTextureAt(index:number):TextureBase\n\t{\n\t\treturn this._textures[index];\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(image:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onTextureInvalidateDelegate = (event:AssetEvent) => this.onTextureInvalidate(event);\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._owners = new Array<IRenderable>(this);\n\n\t\tthis._style.image = image;\n\t\tthis.texture =  new SingleCubeTexture();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic invalidatePasses()\n\t{\n\t\tthis.dispatchEvent(new SurfaceEvent(SurfaceEvent.INVALIDATE_PASSES, this));\n\t}\n\n\tpublic invalidateSurface()\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_RENDER_OWNER, this));\n\t}\n\n\tpublic addTexture(texture:TextureBase)\n\t{\n\t\tthis._textures.push(texture);\n\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\n\tpublic removeTexture(texture:TextureBase)\n\t{\n\t\tthis._textures.splice(this._textures.indexOf(texture), 1);\n\n\t\ttexture.removeEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\n\tprivate onTextureInvalidate(event:AssetEvent = null)\n\t{\n\t\tthis.invalidate();\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidatePasses();\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(pickingCollision:PickingCollision, pickingCollider:IPickingCollider):boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport default Skybox;",
    "﻿﻿import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Box\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport Point\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport ITraverser\t\t\t\t\tfrom \"awayjs-display/lib/ITraverser\";\nimport IAnimator\t\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimator\";\nimport DisplayObject\t\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport Graphics\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport DisplayObjectContainer\t\tfrom \"awayjs-display/lib/display/DisplayObjectContainer\";\nimport MaterialBase\t\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\nimport ElementsUtils\t\t\t\tfrom \"awayjs-display/lib/utils/ElementsUtils\";\nimport Style\t\t\t\t\t\tfrom \"awayjs-display/lib/base/Style\";\nimport StyleEvent\t\t\t\t\tfrom \"awayjs-display/lib/events/StyleEvent\";\n\n/**\n * Sprite is an instance of a Graphics, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of Graphices, which in turn correspond to SubGeometries. Graphices allow different parts\n * of the graphics to be assigned different materials.\n */\nclass Sprite extends DisplayObjectContainer\n{\n\tprivate static _sprites:Array<Sprite> = new Array<Sprite>();\n\n\tpublic static assetType:string = \"[asset Sprite]\";\n\n\tprivate _center:Vector3D;\n\tpublic _graphics:Graphics; //TODO\n\tprivate _onGraphicsInvalidateDelegate:(event:AssetEvent) => void;\n\n\t//temp point used in hit testing\n\tprivate _tempPoint:Point = new Point();\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Sprite.assetType;\n\t}\n\n\t/**\n\t * Specifies the Graphics object belonging to this Sprite object, where\n\t * drawing commands can occur.\n\t */\n\tpublic get graphics():Graphics\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Defines the animator of the graphics object.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._graphics.animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._graphics.animator)\n\t\t\tthis._graphics.animator.removeOwner(this);\n\n\t\tthis._graphics.animator = value;\n\n\t\tif (this._graphics.animator)\n\t\t\tthis._graphics.animator.addOwner(this);\n\t}\n\n\t/**\n\t * The material with which to render the Sprite.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._graphics.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tthis._graphics.material = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._graphics.style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tthis._graphics.style = value;\n\t}\n\n\t/**\n\t * Create a new Sprite object.\n\t *\n\t * @param material    [optional]        The material with which to render the Sprite.\n\t */\n\tconstructor(material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onGraphicsInvalidateDelegate = (event:AssetEvent) => this._onGraphicsInvalidate(event);\n\n\t\tthis._graphics = new Graphics(); //unique graphics object for each Sprite\n\t\tthis._graphics.addEventListener(AssetEvent.INVALIDATE, this._onGraphicsInvalidateDelegate);\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis._graphics.applyTransformation(this.transform.matrix3D);\n\t\tthis.transform.clearMatrix3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\n\t\tSprite._sprites.push(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeValues()\n\t{\n\t\tsuper.disposeValues();\n\n\t\tthis._graphics.dispose();\n\t}\n\n\t/**\n\t * Clones this Sprite instance along with all it's children, while re-using the same\n\t * material, graphics and animation set. The returned result will be a copy of this sprite,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * graphics, and material. Properties that are cloned or created anew for the copy\n\t * include subSpritees, children of the sprite, and the animator.\n\t *\n\t * If you want to copy just the sprite, reusing it's graphics and material while not\n\t * cloning it's children, the simplest way is to create a new sprite manually:\n\t *\n\t * <code>\n\t * var clone : Sprite = new Sprite(original.graphics, original.material);\n\t * </code>\n\t */\n\tpublic clone():Sprite\n\t{\n\t\tvar newInstance:Sprite = (Sprite._sprites.length)? Sprite._sprites.pop() : new Sprite();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(sprite:Sprite)\n\t{\n\t\tsuper.copyTo(sprite);\n\n\t\tthis._graphics.copyTo(sprite.graphics);\n    }\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.union(this._graphics.getBoxBounds(), this._pBoxBounds);\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\n\t\tif (!this._center)\n\t\t\tthis._center = new Vector3D();\n\n\t\tthis._center.x = box.x + box.width/2;\n\t\tthis._center.y = box.y + box.height/2;\n\t\tthis._center.z = box.z + box.depth/2;\n\n\t\tthis._pSphereBounds = this._graphics.getSphereBounds(this._center, this._pSphereBounds);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate _onGraphicsInvalidate(event:AssetEvent)\n\t{\n\t\tif (this._pIsEntity != Boolean(this._graphics.count)) {\n\t\t\tif (this._pImplicitPartition)\n\t\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\n\t\t\tthis._pIsEntity = Boolean(this._graphics.count);\n\n\t\t\tif (this._pImplicitPartition)\n\t\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _acceptTraverser(traverser:ITraverser)\n\t{\n\t\tthis.graphics.acceptTraverser(traverser);\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tif(this._graphics.count) {\n\t\t\tthis._tempPoint.setTo(x,y);\n\t\t\tvar local:Point = this.globalToLocal(this._tempPoint, this._tempPoint);\n\t\t\tvar box:Box;\n\n\t\t\t//early out for box test\n\t\t\tif(!(box = this.getBox()).contains(local.x, local.y, 0))\n\t\t\t\treturn false;\n\n\t\t\t//early out for non-shape tests\n\t\t\tif (!shapeFlag)\n\t\t\t\treturn true;\n\n\t\t\t//ok do the graphics thing\n\t\t\tif (this._graphics._hitTestPointInternal(local.x, local.y))\n\t\t\t\treturn true;\n\t\t}\n\n\t\treturn super._hitTestPointInternal(x, y, shapeFlag, masksFlag);\n\t}\n\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._graphics.clear();\n\t}\n}\n\nexport default Sprite;",
    "import AttributesBuffer\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AttributesView\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\nimport Float2Attributes\t\t\t\tfrom \"awayjs-core/lib/attributes/Float2Attributes\";\nimport Byte4Attributes\t\t\t\tfrom \"awayjs-core/lib/attributes/Byte4Attributes\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Matrix\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport ColorTransform\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport Sampler2D\t\t\t\t\tfrom \"awayjs-core/lib/image/Sampler2D\";\n\nimport HierarchicalProperties\t\tfrom \"awayjs-display/lib/base/HierarchicalProperties\";\nimport Style \t\t\t\t\t\tfrom \"awayjs-display/lib/base/Style\";\nimport DisplayObject\t\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport AntiAliasType\t\t\t\tfrom \"awayjs-display/lib/text/AntiAliasType\";\nimport GridFitType\t\t\t\t\tfrom \"awayjs-display/lib/text/GridFitType\";\nimport TextFieldAutoSize\t\t\tfrom \"awayjs-display/lib/text/TextFieldAutoSize\";\nimport TextFieldType\t\t\t\tfrom \"awayjs-display/lib/text/TextFieldType\";\nimport TextFormat\t\t\t\t\tfrom \"awayjs-display/lib/text/TextFormat\";\nimport TextInteractionMode\t\t\tfrom \"awayjs-display/lib/text/TextInteractionMode\";\nimport TextLineMetrics\t\t\t\tfrom \"awayjs-display/lib/text/TextLineMetrics\";\nimport Sprite\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\nimport Graphics\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\nimport Graphic\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport TesselatedFontChar\t\t\tfrom \"awayjs-display/lib/text/TesselatedFontChar\";\nimport TextFormatAlign\t\t\t\tfrom \"awayjs-display/lib/text/TextFormatAlign\";\nimport DisplayObjectContainer\t\tfrom \"awayjs-display/lib/display/DisplayObjectContainer\";\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Sprite\n{\n\tprivate static _textFields:Array<TextField> = new Array<TextField>();\n\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _textGraphicsDirty:boolean;\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\tprivate _textElements:TriangleElements;\n\tprivate _textGraphic:Graphic;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean;\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tvalue = value.toString();\n\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\n\t\tthis._textGraphicsDirty = true;\n\t}\n\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\n\t\tthis._textFormat = value;\n\n\t\tthis._textGraphicsDirty = true;\n\t}\n\n\n\t/**\n\t * The graphics used by the sprite that provides it with its shape.\n\t */\n\tpublic get graphics():Graphics\n\t{\n\t\tif (this._textGraphicsDirty)\n\t\t\tthis.reConstruct();\n\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic _textColor:number /*int*/;\n\n\tpublic get textColor()\n\t{\n\t\treturn this._textColor;\n\t}\n\n\tpublic set textColor(value:number)\n\t{\n\t\tthis._textColor = value;\n\t\tif(!this.transform.colorTransform)\n\t\t\tthis.transform.colorTransform = new ColorTransform();\n\n\t\tthis.transform.colorTransform.color = value;\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\n\tpublic set textWidth(value:number)\n\t{\n\t\tthis._textWidth = value;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\n\tpublic set textHeight(value:number)\n\t{\n\t\tthis._textHeight = value;\n\t}\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn true; //TODO do this better\n\t}\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis.type = TextFieldType.STATIC;\n\t}\n\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tif (this._textElements)\n\t\t\tthis._textElements.clear();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\n\t\tTextField._textFields.push(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeValues()\n\t{\n\t\tsuper.disposeValues();\n\n\t\tthis._textFormat = null;\n\t\tthis._textGraphic = null;\n\n\t\tif (this._textElements) {\n\t\t\tthis._textElements.dispose();\n\t\t\tthis._textElements = null;\n\t\t}\n\t}\n\n\t/**\n\t * Reconstructs the Graphics for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\t\tthis._textGraphicsDirty = false;\n\n\t\tif(this._textFormat == null)\n\t\t\treturn;\n\n\n\t\tif (this._textGraphic) {\n\t\t\tthis._textGraphic.dispose();\n\t\t\tthis._textGraphic = null;\n\n\t\t\tthis._textElements.clear();\n\t\t\tthis._textElements.dispose();\n\t\t\tthis._textElements = null;\n\t\t}\n\n\n\t\tif(this._text == \"\")\n\t\t\treturn;\n\n\t\tvar numVertices:number = 0;\n\t\tvar elements:TriangleElements;\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar y_offset:number=0;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar whitespace_width=(this._textFormat.font_table.get_whitespace_width() * char_scale)+this._textFormat.letterSpacing;\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\\\n\");\n\t\tvar final_lines_chars:Array<Array<TesselatedFontChar>> = [];\n\t\tvar final_lines_char_scale:Array<Array<number>> = [];\n\t\tvar final_lines_width:Array<number> = [];\n\t\tvar final_lines_justify_bool:Array<Boolean> = [];\n\t\tvar final_lines_justify:Array<number> = [];\n\t\tvar maxlineWidth:number=this.textWidth - (4 + this._textFormat.leftMargin + this._textFormat.rightMargin + this._textFormat.indent);\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\n\n\t\t\tfinal_lines_chars.push([]);\n\t\t\tfinal_lines_char_scale.push([]);\n\t\t\tfinal_lines_width.push(0);\n\t\t\tfinal_lines_justify.push(0);\n\t\t\tfinal_lines_justify_bool.push(false);\n\n\n\t\t\tvar words:Array<string> = textlines[tl].split(\" \");\n\t\t\tfor (var i = 0; i < words.length; i++) {\n\t\t\t\tvar word_width:number = 0;\n\t\t\t\tvar word_chars:Array<TesselatedFontChar> = [];\n\t\t\t\tvar word_chars_scale:Array<number> = [];\n\t\t\t\tvar c_cnt:number = 0;\n\t\t\t\tfor (var w = 0; w < words[i].length; w++) {\n\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.font_table.get_font_em_size();\n\t\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.getChar(words[i].charCodeAt(w).toString());\n\t\t\t\t\tif (this_char == null) {\n\t\t\t\t\t\tif (this._textFormat.fallback_font_table) {\n\t\t\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.fallback_font_table.get_font_em_size();\n\t\t\t\t\t\t\tthis_char = this._textFormat.fallback_font_table.getChar(words[i].charCodeAt(w).toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (this_char != null) {\n\t\t\t\t\t\telements = this_char.elements;\n\t\t\t\t\t\tif (elements != null) {\n\t\t\t\t\t\t\tnumVertices += elements.numVertices;\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == words[i].charCodeAt(w)) {\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tword_width += ((2 + this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// if no char-elements was found, we insert a \"space\"\n\t\t\t\t\t\t\tword_width += whitespace_width;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-elements was found, we insert a \"space\"\n\t\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\t\tword_width += whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t\tword_chars_scale[c_cnt] = char_scale;\n\t\t\t\t\tword_chars[c_cnt++] = this_char;\n\t\t\t\t}\n\n\t\t\t\tif (((final_lines_width[final_lines_width.length - 1] + word_width) <= maxlineWidth)||(final_lines_chars[final_lines_chars.length - 1].length==0)) {\n\t\t\t\t\t// if line can hold this word without breaking the bounds, we can just add all chars\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += word_width;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// word does not fit\n\t\t\t\t\t// todo respect autowrapping properties.\n\t\t\t\t\t// right now we just pretend everything has autowrapping and multiline\n\t\t\t\t\tif(final_lines_chars[final_lines_chars.length - 1][final_lines_chars[final_lines_chars.length - 1].length-1]==null){\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].pop();\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].pop();\n\t\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] -= whitespace_width;\n\t\t\t\t\t\tfinal_lines_justify[final_lines_justify.length - 1]-=1;\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_justify_bool[final_lines_justify_bool.length - 1]=true;\n\t\t\t\t\tfinal_lines_chars.push([]);\n\t\t\t\t\tfinal_lines_char_scale.push([]);\n\t\t\t\t\tfinal_lines_width.push(0);\n\t\t\t\t\tfinal_lines_justify.push(0);\n\t\t\t\t\tfinal_lines_justify_bool.push(false);\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] = word_width;\n\t\t\t\t}\n\t\t\t\tif (i < (words.length - 1)) {\n\t\t\t\t\tif ((final_lines_width[final_lines_width.length - 1]) <= maxlineWidth) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(null);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(char_scale);\n\t\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += whitespace_width;\n\t\t\t\t\t\tfinal_lines_justify[final_lines_justify.length - 1]+=1;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ty_offset=2+(this._textFormat.font_table.ascent-this._textFormat.font_table.get_font_em_size())*char_scale;\n\n\t\tvar vertices:Float32Array = new Float32Array(numVertices*3);\n\n\t\tfor (var i = 0; i < final_lines_chars.length; i++) {\n\n\t\t\tvar x_offset:number= 2 + this._textFormat.leftMargin + this._textFormat.indent;\n\t\t\tvar justify_addion:number=0;\n\t\t\tif(this._textFormat.align==\"center\"){\n\t\t\t\tx_offset=2 + this._textFormat.leftMargin + this._textFormat.indent+(maxlineWidth-final_lines_width[i])/2;\n\t\t\t}\n\t\t\telse if(this._textFormat.align==\"justify\"){\n\t\t\t\tif(final_lines_justify_bool[i]){\n\t\t\t\t\tjustify_addion=((maxlineWidth)-final_lines_width[i])/final_lines_justify[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(this._textFormat.align==\"right\"){\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])-(2 + this._textFormat.rightMargin);\n\t\t\t}\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\n\t\t\t//console.log(\"this._width=\"+this._width);\n\t\t\tfor (var t = 0; t < final_lines_chars[i].length; t++) {\n\t\t\t\tvar this_char:TesselatedFontChar = final_lines_chars[i][t];\n\t\t\t\tchar_scale = final_lines_char_scale[i][t];\n\t\t\t\tif (this_char != null) {\n\t\t\t\t\telements = this_char.elements;\n\t\t\t\t\tif (elements != null) {\n\t\t\t\t\t\tvar buffer:Float32Array = new Float32Array(elements.concatenatedBuffer.buffer);\n\t\t\t\t\t\tfor (var v:number = 0; v < elements.numVertices; v++) {\n\t\t\t\t\t\t\tvertices[j++] = buffer[v*3]*char_scale + x_offset;\n\t\t\t\t\t\t\tvertices[j++] = buffer[v*3 + 1]*char_scale + y_offset;\n\t\t\t\t\t\t\tvertices[j++] = buffer[v*3 + 2];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-elements was found, we insert a \"space\"\n\t\t\t\t\t\tx_offset+=whitespace_width+justify_addion;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tx_offset+=whitespace_width+justify_addion;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// hack for multiline textfield in icycle.\n\n\t\t\ty_offset+=(this._textFormat.font_table.ascent + this._textFormat.font_table.descent)*char_scale;\n\t\t\t//y_offset+=(this._textFormat.font_table.get_font_em_size()-this._textFormat.font_table.descent)*char_scale;\n\t\t\ty_offset+= this._textFormat.leading;\n\n\n\t\t}\n\n\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 3);\n\t\tattributesView.set(vertices);\n\t\tvar vertexBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\n\t\tthis._textElements = new TriangleElements(vertexBuffer);\n\t\tthis._textElements.setPositions(new Float2Attributes(vertexBuffer));\n\t\tthis._textElements.setCustomAttributes(\"curves\", new Byte4Attributes(vertexBuffer, false));\n\n\t\tthis._textGraphic = this._graphics.addGraphic(this._textElements);\n\n\t\tthis.material = this._textFormat.material;\n\t\tvar sampler:Sampler2D = new Sampler2D();\n\t\tthis.style = new Style();\n\t\tthis.style.addSamplerAt(sampler, this.material.getTextureAt(0));\n\t\tthis.style.uvMatrix = new Matrix(0,0,0,0, this._textFormat.uv_values[0], this._textFormat.uv_values[1]);\n\t\tthis.material.animateUVs = true;\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n\n    public clone():TextField\n    {\n\t\tvar newInstance:TextField = (TextField._textFields.length)? TextField._textFields.pop() : new TextField();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n    }\n\n\n\tpublic copyTo(newInstance:TextField)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.textWidth = this._textWidth;\n\t\tnewInstance.textHeight = this._textHeight;\n\t\tnewInstance.textFormat = this._textFormat;\n\t\t//newInstance.textColor = this._textColor;\n\t\tnewInstance.text = this._text;\n\t}\n}\n\nexport default TextField;",
    "export {default as Billboard}\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Billboard\";\nexport {default as Camera}\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nexport {default as DirectionalLight}\t\t\t\tfrom \"awayjs-display/lib/display/DirectionalLight\";\nexport {default as DisplayObject}\t\t\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nexport {default as DisplayObjectContainer}\t\t\tfrom \"awayjs-display/lib/display/DisplayObjectContainer\";\nexport {default as IEntity}\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nexport {default as LightBase}\t\t\t\t\t\tfrom \"awayjs-display/lib/display/LightBase\";\nexport {default as LightProbe}\t\t\t\t\t\tfrom \"awayjs-display/lib/display/LightProbe\";\nexport {default as LineSegment}\t\t\t\t\t\tfrom \"awayjs-display/lib/display/LineSegment\";\nexport {default as LoaderContainer}\t\t\t\t\tfrom \"awayjs-display/lib/display/LoaderContainer\";\nexport {default as MovieClip}\t\t\t\t\t\tfrom \"awayjs-display/lib/display/MovieClip\";\nexport {default as PointLight}\t\t\t\t\t\tfrom \"awayjs-display/lib/display/PointLight\";\nexport {default as Scene}\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Scene\";\nexport {default as Shape}\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Shape\";\nexport {default as Skybox}\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Skybox\";\nexport {default as Sprite}\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\nexport {default as TextField}\t\t\t\t\t\tfrom \"awayjs-display/lib/display/TextField\";\n",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport default CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport default GradientType;",
    "/**\n* Defines the values to use for specifying path-drawing commands.\n* The values in this class are used by the Graphics.drawPath() method,\n *or stored in the commands vector of a GraphicsPath object.\n */\nclass GraphicsPathCommand\n{\n\t/**\n\t * Represents the default \"do nothing\" command.\n\t */\n\tpublic static NO_OP:number = 0;\n\t/**\n\t * Specifies a drawing command that moves the current drawing position\n\t * to the x- and y-coordinates specified in the data vector.\n\t */\n\tpublic static MOVE_TO:number = 1;\n\n\t/**\n\t * Specifies a drawing command that draws a line from the current drawing position\n\t * to the x- and y-coordinates specified in the data vector.\n\t */\n\tpublic static LINE_TO:number = 2;\n\n\t/**\n\t *  Specifies a drawing command that draws a curve from the current drawing position\n\t *  to the x- and y-coordinates specified in the data vector, using a control point.\n\t */\n\tpublic static CURVE_TO:number = 3;\n\t/**\n\t *  Specifies a drawing command that draws a curve from the current drawing position\n\t *  to the x- and y-coordinates specified in the data vector, using a control point.\n\t */\n\tpublic static CURVE_TO_2:number = 13;\n\n\t/**\n\t * Specifies a \"line to\" drawing command,\n\t * but uses two sets of coordinates (four values) instead of one set.\n\t */\n\tpublic static WIDE_LINE_TO:number = 4;\n\n\t/**\n\t *   Specifies a \"move to\" drawing command,\n\t *   but uses two sets of coordinates (four values) instead of one set.\n\t */\n\tpublic static WIDE_MOVE_TO:number = 5;\n\n\t/**\n\t * Specifies a drawing command that draws a curve from the current drawing position\n\t * to the x- and y-coordinates specified in the data vector, using 2 control points.\n\t */\n\tpublic static CUBIC_CURVE:number = 6;\n}\n\nexport default GraphicsPathCommand;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport default GraphicsPathWinding;",
    "import GraphicsPathWinding\t\tfrom \"awayjs-display/lib/draw/GraphicsPathWinding\";\nimport GraphicsPathCommand\t\tfrom \"awayjs-display/lib/draw/GraphicsPathCommand\";\nimport Point\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\n/**\n\n * Defines the values to use for specifying path-drawing commands.\n * The values in this class are used by the Graphics.drawPath() method,\n *or stored in the commands vector of a GraphicsPath object.\n */\nclass GraphicsPath\n{\n    /**\n     * The Vector of drawing commands as integers representing the path.\n     */\n    private _commands:Array<Array<number>>;\n    /**\n     * The Vector of Numbers containing the parameters used with the drawing commands.\n     */\n    private _data:Array<Array<number>>;\n\n    private _draw_directions:Array<number>;\n    private _contours_closed:Array<boolean>;\n\n    /**\n     * Specifies the winding rule using a value defined in the GraphicsPathWinding class.\n     */\n    private _winding:string;\n\n    private _startPoint:Point;\n    private _tmp_point:Point;\n    private _cur_point:Point;\n    private _direction:Point;\n    private _isFill:boolean;\n\n    constructor(commands:Array<number> = null, data:Array<number> = null, winding:string = GraphicsPathWinding.EVEN_ODD)\n    {\n        this._data=[];\n        this._commands=[];\n        this._draw_directions=[0];\n        this._contours_closed=[false];\n\n        if(commands!=null && data!=null){\n            this._data[0]=data;\n            this._commands[0]=commands;\n        }\n        else{\n            this._data[0]=[];\n            this._commands[0]=[];\n\n        }\n\n        this._direction=new Point(0, -1);\n        this._startPoint=new Point();\n        this._cur_point=new Point();\n        this._tmp_point=new Point();\n        this.isFill=false;\n        this._winding=winding;\n    }\n\n    public get draw_directions():Array<number>\n    {\n        return this._draw_directions;\n    }\n    public get contours_closed():Array<boolean>\n    {\n        return this._contours_closed;\n    }\n\n    public get isFill():boolean\n    {\n        return this._isFill;\n    }\n    public set isFill(value:boolean)\n    {\n        this._isFill=value;\n    }\n    public get commands():Array<Array<number>>\n    {\n        return this._commands;\n    }\n\n    public get data():Array<Array<number>>\n    {\n        return this._data;\n    }\n\n    public curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n    {\n        if(this._commands[this._commands.length-1].length==0){\n            // every contour must start with a moveTo command, so we make sure we have correct startpoint\n            this._commands[this._commands.length-1].push(GraphicsPathCommand.MOVE_TO);\n            this._data[this._data.length-1].push(this._cur_point.x);\n            this._data[this._data.length-1].push(this._cur_point.y);\n        }\n        this._commands[this._commands.length-1].push(GraphicsPathCommand.CURVE_TO);\n\n        if(this.isFill){\n            this._tmp_point.x=anchorX-this._cur_point.x;\n            this._tmp_point.y=anchorY-this._cur_point.y;\n            this._tmp_point.normalize();\n\n            var testpoint:Point=new Point(this._tmp_point.x, this._tmp_point.y);\n            testpoint.normalize();\n            var degree_anchor:number=Math.acos(this._tmp_point.x * this._direction.x + this._tmp_point.y * this._direction.y) * 180 / Math.PI;\n            if(degree_anchor>180)degree_anchor-=360;\n            //var degree_anchor:number=Math.atan2(this._tmp_point.x, this._tmp_point.y) * 180 / Math.PI;\n            this._draw_directions[this._draw_directions.length-1]+=degree_anchor;\n            this._tmp_point.x=controlX-this._cur_point.x;\n            this._tmp_point.y=controlY-this._cur_point.y;\n            this._tmp_point.normalize();\n            //angle = atan2( a.x*b.y - a.y*b.x, a.x*b.x + a.y*b.y );\n            var degree_control:number=(Math.atan2(this._tmp_point.x* testpoint.y - this._tmp_point.y* testpoint.x, this._tmp_point.x* testpoint.x + this._tmp_point.y* testpoint.y));\n            if(degree_control>180)degree_control-=360;\n            //var degree_control:number=(Math.atan2(this._tmp_point.x, this._tmp_point.y) * 180 / Math.PI);\n            console.log(\"degree_control \"+degree_control);\n            console.log(\"degree_anchor \"+degree_anchor);\n            console.log(\"this._draw_directions[this._draw_directions.length-1] \"+this._draw_directions[this._draw_directions.length-1]);\n            this._direction.x=testpoint.x;\n            this._direction.y=testpoint.y;\n            if((degree_control)<0)\n                this._data[this._data.length-1].push(1);\n            else\n                this._data[this._data.length-1].push(2);\n\n        }\n        else{\n            this._data[this._data.length-1].push(1);\n        }\n        this._cur_point.x=anchorX;\n        this._cur_point.y=anchorY;\n        this._data[this._data.length-1].push(controlX);\n        this._data[this._data.length-1].push(controlY);\n        this._data[this._data.length-1].push(anchorX);\n        this._data[this._data.length-1].push(anchorY);\n\n    }\n\n    public lineTo(x:number, y:number)\n    {\n        if(this._commands[this._commands.length-1].length==0){\n            // every contour must start with a moveTo command, so we make sure we have correct startpoint\n            this._commands[this._commands.length-1].push(GraphicsPathCommand.MOVE_TO);\n            this._data[this._data.length-1].push(this._cur_point.x);\n            this._data[this._data.length-1].push(this._cur_point.y);\n        }\n        this._commands[this._commands.length-1].push(GraphicsPathCommand.LINE_TO);\n        this._data[this._data.length-1].push(x);\n        this._data[this._data.length-1].push(y);\n        if(this.isFill) {\n            this._tmp_point.x = x - this._cur_point.x;\n            this._tmp_point.y = y - this._cur_point.y;\n            this._tmp_point.normalize();\n            this._direction.x=this._tmp_point.x;\n            this._direction.y=this._tmp_point.y;\n            var degree_anchor:number = Math.atan2(this._tmp_point.x, this._tmp_point.y) * 180 / Math.PI;\n            this._draw_directions[this._draw_directions.length-1]+=degree_anchor;\n        }\n        this._cur_point.x=x;\n        this._cur_point.y=y;\n    }\n\n    public moveTo(x:number, y:number)\n    {\n        if(this._commands[this._commands.length-1].length>0){\n            this.finalizeContour();\n            this._draw_directions.push(0);\n            this._contours_closed.push(false);\n            this._commands.push([]);\n            this._data.push([]);\n        }\n        this._startPoint.x = x;\n        this._startPoint.y = y;\n        this._cur_point.x = x;\n        this._cur_point.y = y;\n    }\n\n    public finalizeContour()\n    {\n        if((this._startPoint.x != this._cur_point.x) || (this._startPoint.y != this._cur_point.y)){\n            if(this.isFill) {\n                this.lineTo(this._startPoint.x, this._startPoint.y);\n            }\n        }\n        else{\n            this._contours_closed[this._contours_closed.length-1]=true;\n        }\n\n    }\n    public wideLineTo(x:number, y:number)\n    {\n        // not used\n        /*\n         this._commands.push(GraphicsPathCommand.WIDE_LINE_TO);\n         this._data.push(0);\n         this._data.push(0);\n         this._data.push(x);\n         this._data.push(y);\n         */\n    }\n\n    public wideMoveTo(x:number, y:number)\n    {\n        // not used\n        /*\n         this._commands.push(GraphicsPathCommand.WIDE_MOVE_TO);\n         this._data.push(0);\n         this._data.push(0);\n         this._data.push(x);\n         this._data.push(y);\n         */\n    }\n\n}\n\nexport default GraphicsPath;",
    "import BitmapImage2D\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport Matrix\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\n\nimport CapsStyle\t\t\t\tfrom \"awayjs-display/lib/draw/CapsStyle\";\nimport GradientType\t\t\t\tfrom \"awayjs-display/lib/draw/GradientType\";\nimport GraphicsPathWinding\t\tfrom \"awayjs-display/lib/draw/GraphicsPathWinding\";\nimport IGraphicsData\t\t\tfrom \"awayjs-display/lib/draw/IGraphicsData\";\nimport InterpolationMethod\t\tfrom \"awayjs-display/lib/draw/InterpolationMethod\";\nimport JointStyle\t\t\t\tfrom \"awayjs-display/lib/draw/JointStyle\";\nimport LineScaleMode\t\t\tfrom \"awayjs-display/lib/draw/LineScaleMode\";\nimport TriangleCulling\t\t\tfrom \"awayjs-display/lib/draw/TriangleCulling\";\nimport SpreadMethod\t\t\t\tfrom \"awayjs-display/lib/draw/SpreadMethod\";\n\nimport GraphicsPath\t\t\t\tfrom \"awayjs-display/lib/draw/GraphicsPath\";\nimport GraphicsPathCommand\t\tfrom \"awayjs-display/lib/draw/GraphicsPathCommand\";\nimport DefaultMaterialManager\tfrom \"awayjs-display/lib/managers/DefaultMaterialManager\";\n\nimport Point\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport AttributesBuffer\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AttributesView\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\nimport Sprite\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\nimport Float3Attributes\t\t\tfrom \"awayjs-core/lib/attributes/Float3Attributes\";\nimport Float2Attributes\t\t\tfrom \"awayjs-core/lib/attributes/Float2Attributes\";\n\n\nimport PartialImplementationError\t\tfrom \"awayjs-core/lib/errors/PartialImplementationError\";\nimport TriangleElements from \"awayjs-display/lib/graphics/TriangleElements\";\nimport MaterialBase from \"awayjs-display/lib/materials/MaterialBase\";\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\tprivate _queued_fill_pathes:Array<GraphicsPath>;\n\tprivate _queued_stroke_pathes:Array<GraphicsPath>;\n\n\tpublic static _tess_obj:any;\n\n\tpublic _target:Sprite;\n\n\tprivate _active_fill_path:GraphicsPath;\n\tprivate _active_stroke_path:GraphicsPath;\n\n\tprivate _current_position:Point=new Point();\n\n\tconstructor(target:Sprite){\n\t\tthis._target=target;\n\t\tthis._queued_fill_pathes=[];\n\t\tthis._queued_stroke_pathes=[];\n\t\tthis._active_fill_path=null;\n\t\tthis._active_stroke_path=null;\n\t\tthis._current_position=new Point();\n\t}\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\t\tthis.draw_fill();\n\t\t// start a new fill path\n\t\tthis._active_fill_path=new GraphicsPath();\n\t\tthis._active_fill_path.isFill=true;\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_fill_pathes.push(this._active_fill_path);\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\t\tthis.draw_fill();\n\t\t// start a new fill path\n\t\tthis._active_fill_path=new GraphicsPath();\n\t\tthis._active_fill_path.isFill=true;\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_fill_pathes.push(this._active_fill_path);\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\t\tthis.draw_fill();\n\t\t// start a new fill path\n\t\tthis._active_fill_path=new GraphicsPath();\n\t\tthis._active_fill_path.isFill=true;\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_fill_pathes.push(this._active_fill_path);\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\t// todo: do this the correct way\n\t\tthis._target.graphics.dispose();\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\t\tsourceGraphics._target.graphics.copyTo(this._target.graphics);\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t\tthrow new PartialImplementationError(\"cubicCurveTo\");\n\t\t/*\n\t\t t = 0.5; // given example value\n\t\t x = (1 - t) * (1 - t) * p[0].x + 2 * (1 - t) * t * p[1].x + t * t * p[2].x;\n\t\t y = (1 - t) * (1 - t) * p[0].y + 2 * (1 - t) * t * p[1].y + t * t * p[2].y;\n\n\t\t this.queued_command_types.push(Graphics.CMD_BEZIER);\n\t\t this.queued_command_data.push(controlX1);\n\t\t this.queued_command_data.push(controlY1);\n\t\t this.queued_command_data.push(controlX2);\n\t\t this.queued_command_data.push(controlY2);\n\t\t this.queued_command_data.push(anchorX);\n\t\t this.queued_command_data.push(anchorY);\n\n\t\t // todo: somehow convert cubic bezier curve into 2 quadric curves...\n\n\t\t this.draw_direction+=0;\n\t\t */\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.curveTo(controlX, controlY, anchorX, anchorY);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.curveTo(controlX, controlY, anchorX, anchorY);\n\t\t}\n\t\tthis._current_position.x=anchorX;\n\t\tthis._current_position.y=anchorY;\n\t\t/*\n\t\tthis.queued_command_types.push(Graphics.CMD_CURVE);\n\t\tthis.queued_command_data.push(controlX);\n\t\tthis.queued_command_data.push(controlY);\n\t\tthis.queued_command_data.push(anchorX);\n\t\tthis.queued_command_data.push(anchorY);\n\t\t*/\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\t\tvar radius2=radius*1.065;\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.moveTo(x-radius, y);\n\t\t\tfor(var i=8; i>=0;i--){\n\n\t\t\t\tvar degree = (i) *(360/8)*Math.PI/180;\n\t\t\t\tvar degree2 = degree + ((360/16)*Math.PI/180);\n\t\t\t\tthis._active_fill_path.curveTo(x-(Math.cos(degree2)*radius2), y+(Math.sin(degree2)*radius2),x-(Math.cos(degree)*radius), y+(Math.sin(degree)*radius));\n\t\t\t}\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x, y+radius);\n\t\t\tvar radius2=radius*0.93;\n\t\t\tthis._active_stroke_path.curveTo(x-(radius2), y+(radius2), x-radius, y);\n\t\t\tthis._active_stroke_path.curveTo(x-(radius2), y-(radius2), x, y-radius);\n\t\t\tthis._active_stroke_path.curveTo(x+(radius2), y-(radius2), x+radius, y);\n\t\t\tthis._active_stroke_path.curveTo(x+(radius2), y+(radius2), x, y+radius);\n\t\t}\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\t\twidth/=2;\n\t\theight/=2;\n\t\tif(this._active_fill_path!=null){\n\n\t\t\tthis._active_fill_path.moveTo(x, y+height);\n\t\t\tthis._active_fill_path.curveTo(x-(width), y+(height), x-width, y);\n\t\t\tthis._active_fill_path.curveTo(x-(width), y-(height), x, y-height);\n\t\t\tthis._active_fill_path.curveTo(x+(width), y-(height), x+width, y);\n\t\t\tthis._active_fill_path.curveTo(x+(width), y+(height), x, y+height);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x, y+height);\n\t\t\tthis._active_stroke_path.curveTo(x-(width), y+(height), x-width, y);\n\t\t\tthis._active_stroke_path.curveTo(x-(width), y-(height), x, y-height);\n\t\t\tthis._active_stroke_path.curveTo(x+(width), y-(height), x+width, y);\n\t\t\tthis._active_stroke_path.curveTo(x+(width), y+(height), x, y+height);\n\t\t}\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\t\t//this.draw_fill();\n\t\t/*\n\t\t for (var i:number=0; i<graphicsData.length; i++){\n\t\t //todo\n\t\t if(graphicsData[i].dataType==\"beginFill\"){\n\n\t\t }\n\t\t else if(graphicsData[i].dataType==\"endFill\"){\n\n\t\t }\n\t\t else if(graphicsData[i].dataType==\"endFill\"){\n\n\t\t }\n\t\t else if(graphicsData[i].dataType==\"Path\"){\n\n\t\t }\n\n\t\t }\n\t\t */\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\t\t//todo\n\t\t/*\n\t\t if(this._active_fill_path!=null){\n\t\t this._active_fill_path.curveTo(controlX, controlY, anchorX, anchorY);\n\t\t }\n\t\t if(this._active_stroke_path!=null){\n\t\t this._active_stroke_path.curveTo(controlX, controlY, anchorX, anchorY);\n\t\t }\n\t\t this._current_position.x=anchorX;\n\t\t this._current_position.y=anchorY;\n\t\t */\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.moveTo(x, y);\n\t\t\tthis._active_fill_path.lineTo(x+width, y);\n\t\t\tthis._active_fill_path.lineTo(x+width, y+height);\n\t\t\tthis._active_fill_path.lineTo(x, y+height);\n\t\t\tthis._active_fill_path.lineTo(x, y);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x, y);\n\t\t\tthis._active_stroke_path.lineTo(x+width, y);\n\t\t\tthis._active_stroke_path.lineTo(x+width, y+height);\n\t\t\tthis._active_stroke_path.lineTo(x, y+height);\n\t\t\tthis._active_stroke_path.lineTo(x, y);\n\t\t}\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t\tif(!ellipseHeight){\n\t\t\tellipseHeight=ellipseWidth;\n\t\t}\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.moveTo(x+ellipseWidth, y);\n\t\t\tthis._active_fill_path.lineTo(x+width-ellipseWidth, y);\n\t\t\tthis._active_fill_path.curveTo(x+width, y, x+width, y+ellipseHeight);\n\t\t\tthis._active_fill_path.lineTo(x+width, y+height-ellipseHeight);\n\t\t\tthis._active_fill_path.curveTo(x+width, y+height, x+width-ellipseWidth, y+height);\n\t\t\tthis._active_fill_path.lineTo(x+ellipseWidth, y+height);\n\t\t\tthis._active_fill_path.curveTo(x, y+height, x, y+height-ellipseHeight);\n\t\t\tthis._active_fill_path.lineTo(x, y+ellipseHeight);\n\t\t\tthis._active_fill_path.curveTo(x, y, x+ellipseWidth, y);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x+ellipseWidth, y);\n\t\t\tthis._active_stroke_path.lineTo(x+width-ellipseWidth, y);\n\t\t\tthis._active_stroke_path.curveTo(x+width, y, x+width, y+ellipseHeight);\n\t\t\tthis._active_stroke_path.lineTo(x+width, y+height-ellipseHeight);\n\t\t\tthis._active_stroke_path.curveTo(x+width, y+height, x+width-ellipseWidth, y+height);\n\t\t\tthis._active_stroke_path.lineTo(x+ellipseWidth, y+height);\n\t\t\tthis._active_stroke_path.curveTo(x, y+height, x, y+height-ellipseHeight);\n\t\t\tthis._active_stroke_path.lineTo(x, y+ellipseHeight);\n\t\t\tthis._active_stroke_path.curveTo(x, y, x+ellipseWidth, y);\n\t\t}\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\t\tif(this._active_fill_path!=null){\n\t\t\t//todo\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\t//todo\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\t\tthis.draw_strokes();\n\t\tthis.draw_fill();\n\t\tthis._active_fill_path=null;\n\t\tthis._active_stroke_path=null;\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\t\t// start a new stroke path\n\t\tthis._active_stroke_path=new GraphicsPath();\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_stroke_pathes.push(this._active_stroke_path);\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\t\t// start a new stroke path\n\t\tthis._active_stroke_path=new GraphicsPath();\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_stroke_pathes.push(this._active_stroke_path);\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t\t// start a new stroke path\n\t\tthis._active_stroke_path=new GraphicsPath();\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_stroke_pathes.push(this._active_stroke_path);\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.lineTo(x, y);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.lineTo(x, y);\n\t\t}\n\t\tthis._current_position.x=x;\n\t\tthis._current_position.y=y;\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.moveTo(x, y);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x, y);\n\t\t}\n\t\tthis._current_position.x=x;\n\t\tthis._current_position.y=y;\n\t}\n\n\tpublic draw_strokes(){\n\t\tif(this._active_stroke_path==null)return;\n\t\tthis._active_stroke_path.finalizeContour();\n\t\tvar contour_commands:Array<Array<number> >=this._active_stroke_path.commands;\n\t\tvar contour_data:Array<Array<number> >=this._active_stroke_path.data;\n\t\tvar contour_closed:Array<boolean >=this._active_stroke_path.contours_closed;\n\n\t\tvar commands:Array<number>;\n\t\tvar data:Array<number>;\n\t\tvar i:number=0;\n\t\tvar k:number=0;\n\t\tvar vert_cnt:number=0;\n\t\tvar data_cnt:number=0;\n\t\tvar draw_started:boolean=false;\n\t\tvar final_vert_list:Array<number> = [];\n\t\tvar final_vert_cnt:number=0;\n\t\tvar lastPoint:Point=new Point();\n\t\tvar start_point:Point=new Point();\n\t\tvar end_point:Point=new Point();\n\t\tvar start_left:Point=new Point();\n\t\tvar start_right:Point=new Point();\n\t\tvar ctr_left:Point=new Point();\n\t\tvar ctr_right:Point=new Point();\n\t\tvar ctr_left2:Point=new Point();\n\t\tvar ctr_right2:Point=new Point();\n\t\tvar end_left:Point=new Point();\n\t\tvar end_right:Point=new Point();\n\t\tvar tmp_point:Point=new Point();\n\t\tvar tmp_point2:Point=new Point();\n\t\tvar first_point:Point=new Point();\n\t\tvar first_point_set:boolean=false;\n\t\tvar closed:boolean=false;\n\t\tvar thickness:number=3;\n\t\tvar tessVerts:Array<number>=[];\n\n\t\tGraphics._tess_obj.newTess(1024 * 512);\n\t\tfor(k=0; k<contour_commands.length; k++) {\n\t\t\tvar contour_points:Array<Point>=[];\n\t\t\tvar contour_types:Array<number>=[];\n\t\t\tcommands = contour_commands[k];\n\t\t\tdata = contour_data[k];\n\t\t\tclosed=contour_closed[k];\n\t\t\tvert_cnt = 0;\n\t\t\tdata_cnt = 0;\n\t\t\tdraw_started=false;\n\t\t\tfirst_point_set=false;\n\t\t\tfor (i = 0; i < commands.length; i++) {\n\t\t\t\tswitch (commands[i]) {\n\t\t\t\t\tcase GraphicsPathCommand.MOVE_TO:\n\t\t\t\t\t\tlastPoint.x = data[data_cnt++];\n\t\t\t\t\t\tlastPoint.y = data[data_cnt++];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase GraphicsPathCommand.LINE_TO:\n\t\t\t\t\t\tcontour_types.push(GraphicsPathCommand.LINE_TO);\n\t\t\t\t\t\tend_point.x = data[data_cnt++];\n\t\t\t\t\t\tend_point.y = data[data_cnt++];\n\n\t\t\t\t\t\ttmp_point.x = -1*(end_point.y-lastPoint.y);\n\t\t\t\t\t\ttmp_point.y = end_point.x-lastPoint.x;\n\t\t\t\t\t\ttmp_point.normalize();\n\n\t\t\t\t\t\t// rotate point\n\t\t\t\t\t\tstart_left.x  = lastPoint.x + (tmp_point.x * thickness);\n\t\t\t\t\t\tstart_left.y  = lastPoint.y + (tmp_point.y * thickness);\n\t\t\t\t\t\tstart_right.x = lastPoint.x - (tmp_point.x * thickness);\n\t\t\t\t\t\tstart_right.y = lastPoint.y - (tmp_point.y * thickness);\n\t\t\t\t\t\t// rotate point\n\t\t\t\t\t\tend_left.x  = end_point.x + (tmp_point.x * thickness);\n\t\t\t\t\t\tend_left.y  = end_point.y + (tmp_point.y * thickness);\n\t\t\t\t\t\tend_right.x = end_point.x - (tmp_point.x * thickness);\n\t\t\t\t\t\tend_right.y = end_point.y - (tmp_point.y * thickness);\n\n\t\t\t\t\t\tlastPoint.x=end_point.x;\n\t\t\t\t\t\tlastPoint.y=end_point.y;\n\n\t\t\t\t\t\tcontour_points.push(new Point(start_right.x, start_right.y));\n\t\t\t\t\t\tcontour_points.push(new Point(start_left.x, start_left.y));\n\t\t\t\t\t\tcontour_points.push(new Point(end_right.x, end_right.y));\n\t\t\t\t\t\tcontour_points.push(new Point(end_left.x, end_left.y));\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase GraphicsPathCommand.CURVE_TO:\n\t\t\t\t\t\tcontour_types.push(GraphicsPathCommand.CURVE_TO);\n\t\t\t\t\t\tcontour_types.push(GraphicsPathCommand.CURVE_TO_2);\n\t\t\t\t\t\tvar curve_direction:number = data[data_cnt++];\n\t\t\t\t\t\tvar control_x:number = data[data_cnt++];\n\t\t\t\t\t\tvar control_y:number = data[data_cnt++];\n\t\t\t\t\t\tvar end_x:number = data[data_cnt++];\n\t\t\t\t\t\tvar end_y:number = data[data_cnt++];\n\n\n\t\t\t\t\t\ttmp_point.x = -1*(control_y-lastPoint.y);\n\t\t\t\t\t\ttmp_point.y = control_x-lastPoint.x;\n\t\t\t\t\t\ttmp_point.normalize();\n\n\t\t\t\t\t\t// rotate point\n\t\t\t\t\t\tstart_left.x  = lastPoint.x + (tmp_point.x * thickness);\n\t\t\t\t\t\tstart_left.y  = lastPoint.y + (tmp_point.y * thickness);\n\t\t\t\t\t\tstart_right.x = lastPoint.x - (tmp_point.x * thickness);\n\t\t\t\t\t\tstart_right.y = lastPoint.y - (tmp_point.y * thickness);\n\t\t\t\t\t\t// rotate point\n\t\t\t\t\t\tctr_left.x  = control_x + (tmp_point.x * thickness);\n\t\t\t\t\t\tctr_left.y  = control_y + (tmp_point.y * thickness);\n\t\t\t\t\t\tctr_right.x = control_x - (tmp_point.x * thickness);\n\t\t\t\t\t\tctr_right.y = control_y - (tmp_point.y * thickness);\n\n\t\t\t\t\t\tcontour_points.push(new Point(start_right.x, start_right.y));\n\t\t\t\t\t\tcontour_points.push(new Point(start_left.x, start_left.y));\n\t\t\t\t\t\tcontour_points.push(new Point(ctr_right.x, ctr_right.y));\n\t\t\t\t\t\tcontour_points.push(new Point(ctr_left.x, ctr_left.y));\n\n\t\t\t\t\t\ttmp_point.x = -1*(end_y-control_y);\n\t\t\t\t\t\ttmp_point.y = end_x-control_x;\n\t\t\t\t\t\ttmp_point.normalize();\n\n\t\t\t\t\t\tctr_left2.x  = control_x + (tmp_point.x * thickness);\n\t\t\t\t\t\tctr_left2.y  = control_y + (tmp_point.y * thickness);\n\t\t\t\t\t\tctr_right2.x = control_x - (tmp_point.x * thickness);\n\t\t\t\t\t\tctr_right2.y = control_y - (tmp_point.y * thickness);\n\n\t\t\t\t\t\tend_left.x  = end_x + (tmp_point.x * thickness);\n\t\t\t\t\t\tend_left.y  = end_y + (tmp_point.y * thickness);\n\t\t\t\t\t\tend_right.x = end_x - (tmp_point.x * thickness);\n\t\t\t\t\t\tend_right.y = end_y - (tmp_point.y * thickness);\n\n\t\t\t\t\t\tcontour_points.push(new Point(ctr_right2.x, ctr_right2.y));\n\t\t\t\t\t\tcontour_points.push(new Point(ctr_left2.x, ctr_left2.y));\n\t\t\t\t\t\tcontour_points.push(new Point(end_right.x, end_right.y));\n\t\t\t\t\t\tcontour_points.push(new Point(end_left.x, end_left.y));\n\n\t\t\t\t\t\tlastPoint.x=end_x;\n\t\t\t\t\t\tlastPoint.y=end_y;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar con_length:number=contour_points.length/4;\n\t\t\tvar next_start_right:Point=new Point();\n\t\t\tvar next_start_left:Point=new Point();\n\t\t\tvar next_end_right:Point=new Point();\n\t\t\tvar next_end_left:Point=new Point();\n\t\t\tvar prevLeft:Point;\n\t\t\tvar prevRight:Point;\n\t\t\tfor (i = 0; i < con_length; i++) {\n\t\t\t\tstart_right = contour_points[i * 4];\n\t\t\t\tstart_left = contour_points[i * 4 + 1];\n\t\t\t\tend_right = contour_points[i * 4 + 2];\n\t\t\t\tend_left = contour_points[i * 4 + 3];\n\t\t\t\tvar nextIdx:number = i + 1;\n\t\t\t\tif (i >= con_length - 1) {\n\t\t\t\t\t// last segment\n\t\t\t\t\tif (closed) {\n\t\t\t\t\t\tnextIdx = 0;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnextIdx = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (nextIdx >= 0) {\n\t\t\t\t\tnext_start_right = contour_points[nextIdx * 4];\n\t\t\t\t\tnext_start_left = contour_points[nextIdx * 4 + 1];\n\t\t\t\t\tnext_end_right = contour_points[nextIdx * 4 + 2];\n\t\t\t\t\tnext_end_left = contour_points[nextIdx * 4 + 3];\n\n\t\t\t\t\tvar cur_vertical:boolean = false;\n\t\t\t\t\tvar next_vertical:boolean = false;\n\t\t\t\t\tvar cur_horizontal:boolean = false;\n\t\t\t\t\tvar next_horizontal:boolean = false;\n\n\t\t\t\t\ttmp_point.x = end_right.x - start_right.x;\n\t\t\t\t\ttmp_point.y = end_right.y - start_right.y;\n\t\t\t\t\tvar factor1:number=0;\n\t\t\t\t\tvar offsetY1:number=0;\n\t\t\t\t\tif (tmp_point.x == 0)cur_vertical = true;\n\t\t\t\t\telse if (tmp_point.y == 0)cur_horizontal = true;\n\t\t\t\t\telse {\n\t\t\t\t\t\tfactor1 = tmp_point.y / tmp_point.x;\n\t\t\t\t\t\toffsetY1 = -(factor1 * start_right.x - start_right.y);\n\t\t\t\t\t}\n\n\t\t\t\t\ttmp_point.x = next_end_right.x - next_start_right.x;\n\t\t\t\t\ttmp_point.y = next_end_right.y - next_start_right.y;\n\t\t\t\t\tvar factor2:number=0;\n\t\t\t\t\tvar offsetY2:number=0;\n\t\t\t\t\tif (tmp_point.x == 0)next_vertical = true;\n\t\t\t\t\telse if (tmp_point.y == 0)next_horizontal = true;\n\t\t\t\t\telse {\n\t\t\t\t\t\tfactor2 = tmp_point.y / tmp_point.x;\n\t\t\t\t\t\toffsetY2 = -(factor2 * next_start_right.x - next_start_right.y);\n\t\t\t\t\t}\n\n\n\t\t\t\t\ttmp_point.x = end_left.x - start_left.x;\n\t\t\t\t\ttmp_point.y = end_left.y - start_left.y;\n\t\t\t\t\tvar factor3:number=0;\n\t\t\t\t\tvar offsetY3:number=0;\n\t\t\t\t\tif (tmp_point.x == 0)cur_vertical = true;\n\t\t\t\t\telse if (tmp_point.y == 0)cur_horizontal = true;\n\t\t\t\t\telse {\n\t\t\t\t\t\tfactor3 = tmp_point.y / tmp_point.x;\n\t\t\t\t\t\toffsetY3 = -(factor3 * start_left.x - start_left.y);\n\t\t\t\t\t}\n\n\t\t\t\t\ttmp_point.x = next_end_left.x - next_start_left.x;\n\t\t\t\t\ttmp_point.y = next_end_left.y - next_start_left.y;\n\t\t\t\t\tvar factor4:number=0;\n\t\t\t\t\tvar offsetY4:number=0;\n\t\t\t\t\tif (tmp_point.x == 0)next_vertical = true;\n\t\t\t\t\telse if (tmp_point.y == 0)next_horizontal = true;\n\t\t\t\t\telse {\n\t\t\t\t\t\tfactor4 = tmp_point.y / tmp_point.x;\n\t\t\t\t\t\toffsetY4 = -(factor4 * next_start_left.x - next_start_left.y);\n\t\t\t\t\t}\n\t\t\t\t\tif ((cur_vertical && cur_horizontal)||(next_horizontal && next_vertical)) console.log(\"ERROR\");\n\t\t\t\t\tif((factor1==factor2)||(factor3==factor4)) {\n\t\t\t\t\t\tconsole.log(\"STRAIGHT LINE factor same\");\n\t\t\t\t\t\tconsole.log(\"factor = \"+ factor1);\n\t\t\t\t\t\tconsole.log(\"factor = \"+ factor2);\n\t\t\t\t\t\tconsole.log(\"factor = \"+ factor3);\n\t\t\t\t\t\tconsole.log(\"factor = \"+ factor4);\n\t\t\t\t\t}\n\t\t\t\t\t//else\n\t\t\t\t\tif ((cur_horizontal && next_horizontal)||(cur_vertical && next_vertical)) console.log(\"STRAIGHT LINE\");\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ((cur_vertical)&&(next_horizontal)) {\n\t\t\t\t\t\t\tconsole.log(\"(cur_vertical)&&(next_horizontal)\");\n\t\t\t\t\t\t\tnext_start_right.x = end_right.x;\n\t\t\t\t\t\t\tend_right.y = next_start_right.y;\n\t\t\t\t\t\t\tnext_start_left.x = end_left.x;\n\t\t\t\t\t\t\tend_left.y = next_start_left.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ((cur_vertical)&&(!next_horizontal)) {\n\t\t\t\t\t\t\tconsole.log(\"(cur_vertical)&&(!next_horizontal)\");\n\t\t\t\t\t\t\tnext_start_right.x = end_right.x = start_right.x;\n\t\t\t\t\t\t\tnext_start_right.y = end_right.y = factor2 * start_right.x + offsetY2;\n\t\t\t\t\t\t\tnext_start_left.x = end_left.x = start_left.x;\n\t\t\t\t\t\t\tnext_start_left.y = end_left.y = factor4 * start_left.x + offsetY4;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ((!cur_vertical)&&(next_horizontal)) {\n\t\t\t\t\t\t\tconsole.log(\"(!cur_vertical)&&(next_horizontal)\");\n\t\t\t\t\t\t\tnext_start_right.y = end_right.y = next_start_right.y;\n\t\t\t\t\t\t\tnext_start_right.x = end_right.x = (next_start_right.y - offsetY1)/factor1;\n\t\t\t\t\t\t\tnext_start_left.y = end_left.y = next_start_left.y;\n\t\t\t\t\t\t\tnext_start_left.x = end_left.x = (next_start_left.y - offsetY3)/factor3;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ((next_vertical)&&(cur_horizontal)) {\n\t\t\t\t\t\t\tconsole.log(\"(next_vertical)&&(cur_horizontal)\");\n\t\t\t\t\t\t\tend_right.x = next_start_right.x;\n\t\t\t\t\t\t\tnext_start_right.y = end_right.y;\n\t\t\t\t\t\t\tend_left.x = next_start_left.x;\n\t\t\t\t\t\t\tnext_start_left.y = end_left.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ((next_vertical)&&(!cur_horizontal)) {\n\t\t\t\t\t\t\tconsole.log(\"(next_vertical)&&(!cur_horizontal)\");\n\t\t\t\t\t\t\tnext_start_right.x = end_right.x = next_start_right.x;\n\t\t\t\t\t\t\tnext_start_right.y = end_right.y = factor1 * next_start_right.x + offsetY1;\n\t\t\t\t\t\t\tnext_start_left.x = end_left.x = next_start_left.x;\n\t\t\t\t\t\t\tnext_start_left.y = end_left.y = factor3 * next_start_left.x + offsetY3;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ((!next_vertical)&&(cur_horizontal)) {\n\t\t\t\t\t\t\tconsole.log(\"(!next_vertical)&&(!cur_horizontal)\");\n\t\t\t\t\t\t\tnext_start_right.y = end_right.y;\n\t\t\t\t\t\t\tnext_start_right.x = end_right.x = (end_right.y - offsetY2)/factor2;\n\t\t\t\t\t\t\tnext_start_left.y = end_left.y;\n\t\t\t\t\t\t\tnext_start_left.x = end_left.x = (end_left.y - offsetY4)/factor4;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconsole.log(\"else\");\n\t\t\t\t\t\t\tconsole.log(\"factor1 - factor2 \"+(factor1 - factor2));\n\t\t\t\t\t\t\tconsole.log(\"offsetY1 - offsetY2 \"+(offsetY1 - offsetY2));\n\t\t\t\t\t\t\tconsole.log(\"factor3 - factor4 \"+(factor3 - factor4));\n\t\t\t\t\t\t\tconsole.log(\"offsetY3 - offsetY4 \"+(offsetY3 - offsetY4));\n\n\t\t\t\t\t\t\tnext_start_right.x = end_right.x = -((offsetY1 - offsetY2) / (factor1 - factor2));\n\t\t\t\t\t\t\tnext_start_right.y = end_right.y = factor1 * end_right.x + offsetY1;\n\t\t\t\t\t\t\tnext_start_left.x = end_left.x = -((offsetY3 - offsetY4) / (factor3 - factor4));\n\t\t\t\t\t\t\tnext_start_left.y = end_left.y = factor3 * end_left.x + offsetY3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tnext_start_right.x = end_right.x;\n\t\t\t\t\tnext_start_right.y = end_right.y;\n\t\t\t\t\tnext_start_left.x = end_left.x;\n\t\t\t\t\tnext_start_left.y = end_left.y;\n\n\n\t\t\t\t\t// calculate the correct end points\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < con_length; i++) {\n\t\t\t\tif(contour_types[i]==GraphicsPathCommand.CURVE_TO_2)\n\t\t\t\t\tcontinue;\n\t\t\t\tstart_right = contour_points[i * 4];\n\t\t\t\tstart_left = contour_points[i * 4 + 1];\n\t\t\t\tif(contour_types[i]==GraphicsPathCommand.CURVE_TO) {\n\t\t\t\t\ti++;\n\t\t\t\t\tctr_right = contour_points[i * 4];\n\t\t\t\t\tctr_left = contour_points[i * 4 + 1];\n\t\t\t\t\tend_right = contour_points[i * 4 + 2];\n\t\t\t\t\tend_left = contour_points[i * 4 + 3];\n\n\t\t\t\t\tvar finished_curves:Array<Point>=[];\n\t\t\t\t\tvar finished_curves_types:Array<number>=[];\n\t\t\t\t\tvar test_concave_curves:Array<Point>=[];\n\t\t\t\t\tvar test_convex_curves:Array<Point>=[];\n\t\t\t\t\tvar curve_sign:boolean=this.getSign(start_right.x, start_right.y,  ctr_right.x, ctr_right.y, end_right.x, end_right.y )>0;\n\t\t\t\t\tvar curve_sign2:number=-1;\n\t\t\t\t\tvar curve_sign3:number=1;\n\t\t\t\t\ttessVerts.length=0;\n\t\t\t\t\tif(curve_sign){\n\t\t\t\t\t\tvar subdivided:Array<number> = [];\n\t\t\t\t\t\tvar subdivided2:Array<number> = [];\n\t\t\t\t\t\tthis.subdivideCurve(start_right.x, start_right.y, ctr_right.x, ctr_right.y, end_right.x, end_right.y, start_left.x, start_left.y, ctr_left.x, ctr_left.y, end_left.x, end_left.y, subdivided, subdivided2);\n\t\t\t\t\t\tfor(var sc:number=0; sc<subdivided.length/6; sc++) {\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided[sc * 6], subdivided[sc * 6 + 1]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided[sc * 6 + 2], subdivided[sc * 6 + 3]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided[sc * 6 + 4], subdivided[sc * 6 + 5]));\n\t\t\t\t\t\t\tfinished_curves_types.push(-1);\n\t\t\t\t\t\t\ttessVerts.push(subdivided[sc * 6], subdivided[sc * 6 + 1]);\n\t\t\t\t\t\t\ttessVerts.push(subdivided[sc * 6 + 4], subdivided[sc * 6 + 5]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor(var sc:number=(subdivided2.length/6)-1; sc>=0; sc--) {\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided2[sc * 6], subdivided2[sc * 6 + 1]));\n\t\t\t\t\t\t\tfinished_curves_types.push(1);\n\t\t\t\t\t\t\ttessVerts.push(subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5]);\n\t\t\t\t\t\t\ttessVerts.push(subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3]);\n\t\t\t\t\t\t\ttessVerts.push(subdivided2[sc * 6], subdivided2[sc * 6 + 1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tvar subdivided:Array<number> = [];\n\t\t\t\t\t\tvar subdivided2:Array<number> = [];\n\t\t\t\t\t\tthis.subdivideCurve(start_left.x, start_left.y, ctr_left.x, ctr_left.y, end_left.x, end_left.y, start_right.x, start_right.y, ctr_right.x, ctr_right.y, end_right.x, end_right.y,subdivided, subdivided2);\n\t\t\t\t\t\tfor(var sc:number=0; sc<subdivided.length/6; sc++) {\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided[sc * 6], subdivided[sc * 6 + 1]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided[sc * 6 + 2], subdivided[sc * 6 + 3]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided[sc * 6 + 4], subdivided[sc * 6 + 5]));\n\t\t\t\t\t\t\tfinished_curves_types.push(-1);\n\t\t\t\t\t\t\ttessVerts.push(subdivided[sc * 6], subdivided[sc * 6 + 1]);\n\t\t\t\t\t\t\ttessVerts.push(subdivided[sc * 6 + 4], subdivided[sc * 6 + 5]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor(var sc:number=(subdivided2.length/6)-1; sc>=0; sc--) {\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided2[sc * 6], subdivided2[sc * 6 + 1]));\n\t\t\t\t\t\t\tfinished_curves_types.push(1);\n\t\t\t\t\t\t\ttessVerts.push(subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5]);\n\t\t\t\t\t\t\ttessVerts.push(subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3]);\n\t\t\t\t\t\t\ttessVerts.push(subdivided2[sc * 6], subdivided2[sc * 6 + 1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(tessVerts.length>0){\n\n\t\t\t\t\t\tvar verticesF32 = new Float32Array(tessVerts);\n\t\t\t\t\t\tif (Graphics._tess_obj == null) {\n\t\t\t\t\t\t\tconsole.log(\"No libtess2 tesselator available.\\nMake it available using Graphics._tess_obj=new TESS();\");\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tGraphics._tess_obj.addContour(verticesF32, 2, 8, tessVerts.length / 2);\n\t\t\t\t\t}\n\t\t\t\t\tvar t:number=0;\n\t\t\t\t\tfor(t=0; t<finished_curves_types.length;t++){\n\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves[t*3].x;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves[t*3].y;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves_types[t];\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves[t*3+1].x;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves[t*3+1].y;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves_types[t];\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 0.5;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves[t*3+2].x;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves[t*3+2].y;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves_types[t];\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tend_right = contour_points[i * 4 + 2];\n\t\t\t\t\tend_left = contour_points[i * 4 + 3];\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = start_right.x;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = start_right.y;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = start_left.x;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = start_left.y;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_left.x;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_left.y;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = start_right.x;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = start_right.y;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_left.x;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_left.y;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_right.x;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_right.y;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t/*\n\t\t for (i = 0; i < final_vert_list.length/7; ++i)\n\t\t console.log(\"final verts stroke \"+i+\" = \"+final_vert_list[i*7]+\" / \"+final_vert_list[i*7+1]);\n\t\t */\n\t\tGraphics._tess_obj.tesselate(4/*TESS.WINDING_ODD*/, 0/*TESS.ELEMENT_POLYGONS*/, 3, 2, null);\n\n\t\tvar verts:Array<number>=[];\n\t\tvar all_verts:Array<Point>=[];\n\t\tvar vertIndicess:Array<number>=[];\n\t\tvar elems:Array<number>=[];\n\t\tverts = Graphics._tess_obj.getVertices();\n\t\telems = Graphics._tess_obj.getElements();\n\n\n\t\tvar numVerts:number = verts.length / 2;\n\t\tvar numElems:number = elems.length / 3;\n\t\tfor (i = 0; i < numVerts; ++i)\n\t\t\tall_verts.push(new Point(verts[i * 2], verts[i * 2 + 1]));\n\n\t\tfor (i = 0; i < numElems; ++i) {\n\t\t\tvar p1 = elems[i * 3];\n\t\t\tvar p2 = elems[i * 3 + 1];\n\t\t\tvar p3 = elems[i * 3 + 2];\n\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p3].x;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p3].y;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p2].x;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p2].y;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p1].x;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p1].y;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\n\t\t}\n\n\t\t// todo: handle material / subsprite settings, and check if a material / subsprite already exists for this settings\n\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(final_vert_list);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar elements:TriangleElements = new TriangleElements(attributesBuffer);\n\t\telements.setPositions(new Float2Attributes(attributesBuffer));\n\t\telements.setCustomAttributes(\"curves\", new Float3Attributes(attributesBuffer));\n\t\telements.setUVs(new Float2Attributes(attributesBuffer));\n\t\tvar material:MaterialBase = DefaultMaterialManager.getDefaultMaterial();\n\t\tmaterial.bothSides = true;\n\t\tmaterial.useColorTransform = true;\n\t\tmaterial.curves = true;\n\t\tthis._target.graphics.addGraphic(elements, material);\n\t\tthis._active_stroke_path=null;\n\t}\n\n\tpublic isClockWiseXY(point1x:number, point1y:number, point2x:number, point2y:number, point3x:number, point3y:number):boolean\n\t{\n\t\treturn ((point1x - point2x) * (point3y - point2y) - (point1y - point2y) * (point3x - point2x) < 0);\n\t}\n\n\tpublic getSign(ax:number, ay:number, cx:number, cy:number, bx:number, by:number):number\n\t{\n\t\t/*if(this.isClockWiseXY(ax, ay, bx, by, cx, cy)) {\n\t\t return (bx - ax) * (cy - ay) - (by - ay) * (cx - ax);\n\t\t }*/\n\t\treturn (ax - bx) * (cy - by) - (ay - by) * (cx - bx);\n\n\t}\n\n\tpublic pointInTri(ax:number, ay:number, bx:number, by:number ,cx:number, cy:number, xx:number, xy:number):boolean\n\t{\n\t\tvar b1:boolean = this.getSign(ax, ay, xx, xy, bx, by) > 0;\n\t\tvar b2:boolean = this.getSign(bx, by, xx, xy, cx, cy) > 0;\n\t\tvar b3:boolean = this.getSign(cx, cy, xx, xy, ax, ay) > 0;\n\t\treturn ((b1 == b2) && (b2 == b3));\n\t}\n\tpublic subdivideCurve(startx:number, starty:number, cx:number, cy:number, endx:number, endy:number, startx2:number, starty2:number, cx2:number, cy2:number, endx2:number, endy2:number, array_out:Array<number>, array2_out:Array<number>):void\n\t{\n\t\t/*\n\t\t if(!this.pointInTri(startx2, starty2, cx2, cy2, endx2, endy2, cx, cy)){\n\t\t }\n\t\t */\n\t\tarray_out.push(startx, starty, cx, cy,  endx, endy);\n\t\tarray2_out.push(startx2, starty2, cx2, cy2, endx2, endy2);\n\t\treturn;\n\t\t// var c1x = startx + (cx - startx) * 0.5;\n\t\t// var c1y = starty + (cy - starty) * 0.5;\n\t\t// var c2x = cx + (endx - cx) * 0.5;\n\t\t// var c2y = cy + (endy - cy) * 0.5;\n\t\t// var ax = c1x + (c2x - c1x) * 0.5;\n\t\t// var ay = c1y + (c2y - c1y) * 0.5;\n\t\t//\n\t\t// var c1x2 = startx2 + (cx2 - startx2) * 0.5;\n\t\t// var c1y2 = starty2 + (cy2 - starty2) * 0.5;\n\t\t// var c2x2 = cx2 + (endx2 - cx2) * 0.5;\n\t\t// var c2y2 = cy2 + (endy2 - cy2) * 0.5;\n\t\t// var ax2 = c1x2 + (c2x2 - c1x2) * 0.5;\n\t\t// var ay2 = c1y2 + (c2y2 - c1y2) * 0.5;\n\t\t// if(this.pointInTri(startx2, starty2, c1x2, c1y2, ax2, ay2, c1x, c1y)){\n\t\t// \tthis.subdivideCurve(startx, starty, c1x, c1y, ax, ay, startx2, starty2, c1x2, c1y2, ax2, ay2, array_out, array2_out);\n\t\t// }\n\t\t// else{\n\t\t// \tarray_out.push(startx, starty, c1x, c1y, ax, ay);\n\t\t// \tarray2_out.push(startx2, starty2, c1x2, c1y2, ax2, ay2);\n\t\t// }\n\t\t//\n\t\t// if(this.pointInTri(ax2, ay2, c2x2, c2y2,  endx2, endy2, c2x, c2y)){\n\t\t// \tthis.subdivideCurve(ax, ay, c2x, c2y, endx, endy, ax2, ay2, c2x2, c2y2, endx2, endy2, array_out, array2_out);\n\t\t// }\n\t\t// else{\n\t\t// \tarray_out.push(ax, ay, c2x, c2y, endx, endy);\n\t\t// \tarray2_out.push(ax2, ay2, c2x2, c2y2, endx2, endy2);\n\t\t// }\n\t}\n\tpublic draw_fill(){\n\t\tif(this._active_fill_path==null)return;\n\t\tthis._active_fill_path.finalizeContour();\n\n\t\tvar contour_commands:Array<Array<number> >=this._active_fill_path.commands;\n\t\tvar contour_data:Array<Array<number> >=this._active_fill_path.data;\n\t\tvar contour_draw_directions:Array<number>=this._active_fill_path.draw_directions;\n\t\tvar commands:Array<number>;\n\t\tvar data:Array<number>;\n\t\tvar i:number=0;\n\t\tvar k:number=0;\n\t\tvar vert_cnt:number=0;\n\t\tvar data_cnt:number=0;\n\t\tvar draw_direction:number=0;\n\t\tvar contours_vertices:Array<Array<number>> = [[]];\n\t\tvar final_vert_list:Array<number> = [];\n\t\tvar final_vert_cnt:number=0;\n\t\tvar lastPoint:Point=new Point();\n\t\tfor(k=0; k<contour_commands.length; k++) {\n\t\t\tcontours_vertices.push([]);\n\t\t\tvert_cnt = 0;\n\t\t\tdata_cnt = 0;\n\t\t\tcommands=contour_commands[k];\n\t\t\tdata=contour_data[k];\n\t\t\tdraw_direction=contour_draw_directions[k];\n\t\t\tfor (i = 0; i < commands.length; i++) {\n\t\t\t\tswitch (commands[i]) {\n\t\t\t\t\tcase GraphicsPathCommand.MOVE_TO:\n\t\t\t\t\t\tlastPoint.x = data[data_cnt++];\n\t\t\t\t\t\tlastPoint.y = data[data_cnt++];\n\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.x;\n\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.y;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase GraphicsPathCommand.LINE_TO:\n\t\t\t\t\t\tlastPoint.x = data[data_cnt++];\n\t\t\t\t\t\tlastPoint.y = data[data_cnt++];\n\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.x;\n\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.y;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase GraphicsPathCommand.CURVE_TO:\n\t\t\t\t\t\tvar curve_direction:number = data[data_cnt++];\n\t\t\t\t\t\tvar control_x:number = data[data_cnt++];\n\t\t\t\t\t\tvar control_y:number = data[data_cnt++];\n\t\t\t\t\t\tvar end_x:number = data[data_cnt++];\n\t\t\t\t\t\tvar end_y:number = data[data_cnt++];\n\t\t\t\t\t\tvar curve_attr_1 = -1;\n\t\t\t\t\t\tif (draw_direction > 0) {\n\t\t\t\t\t\t\tif (curve_direction == 1) {\n\t\t\t\t\t\t\t\t//convex\n\t\t\t\t\t\t\t\t//console.log(\"convex\";\n\t\t\t\t\t\t\t\tcurve_attr_1 = 1;\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = control_x;\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = control_y;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = end_x;\n\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = end_y;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif (curve_direction == 2) {\n\t\t\t\t\t\t\t\t//convex\n\t\t\t\t\t\t\t\t//console.log(\"convex\";\n\t\t\t\t\t\t\t\tcurve_attr_1 = 1;\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = control_x;\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = control_y;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = end_x;\n\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = end_y;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(!this.isClockWiseXY(end_x, end_y, control_x, control_y, lastPoint.x, lastPoint.y)){\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_x;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_y;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = control_x;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = control_y;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.5;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = lastPoint.x;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = lastPoint.y;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = lastPoint.x;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = lastPoint.y;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = control_x;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = control_y;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.5;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_x;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_y;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastPoint.x = end_x;\n\t\t\t\t\t\tlastPoint.y = end_y;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase GraphicsPathCommand.CUBIC_CURVE:\n\t\t\t\t\t\t//todo\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar verts:Array<number>=[];\n\t\tvar all_verts:Array<Point>=[];\n\t\tvar vertIndicess:Array<number>=[];\n\t\tvar elems:Array<number>=[];\n\t\tGraphics._tess_obj.newTess(1024 * 512);\n\t\tfor(k=0; k<contours_vertices.length; k++) {\n\t\t\tvar vertices=contours_vertices[k];\n\t\t\t/*\n\t\t\t for (i = 0; i < vertices.length / 2; ++i)\n\t\t\t console.log(\"vert collected\" + i + \" = \" + vertices[i * 2] + \" / \" + vertices[i * 2 + 1]);\n\t\t\t */\n\t\t\tvar verticesF32 = new Float32Array(vertices);\n\t\t\t//var verticesF32 = new Float32Array([0,0, 100,0, 100,100, 0,100]);\n\t\t\t//console.log(\"in vertices\", vertices);\n\t\t\t//var tess = new TESS();\n\t\t\tif (Graphics._tess_obj == null) {\n\t\t\t\tconsole.log(\"No libtess2 tesselator available.\\nMake it available using Graphics._tess_obj=new TESS();\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tGraphics._tess_obj.addContour(verticesF32, 2, 8, vertices.length / 2);\n\n\t\t}\n\t\tGraphics._tess_obj.tesselate(0/*TESS.WINDING_ODD*/, 0/*TESS.ELEMENT_POLYGONS*/, 3, 2, null);\n\n\t\t//console.log(\"out vertices\", Graphics._tess_obj.getVertices());\n\t\tverts = Graphics._tess_obj.getVertices();\n\t\telems = Graphics._tess_obj.getElements();\n\t\t//console.log(\"out elements\", Graphics._tess_obj.getElements());\n\n\n\t\tvar numVerts:number = verts.length / 2;\n\t\tvar numElems:number = elems.length / 3;\n\t\tfor (i = 0; i < numVerts; ++i)\n\t\t\tall_verts.push(new Point(verts[i * 2], verts[i * 2 + 1]));\n\n\t\tfor (i = 0; i < numElems; ++i) {\n\t\t\tvar p1 = elems[i * 3];\n\t\t\tvar p2 = elems[i * 3 + 1];\n\t\t\tvar p3 = elems[i * 3 + 2];\n\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p3].x;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p3].y;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p2].x;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p2].y;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p1].x;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p1].y;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\n\t\t}\n\t\t//for (i = 0; i < final_vert_list.length/7; ++i)\n\t\t//\tconsole.log(\"final verts \"+i+\" = \"+final_vert_list[i*7]+\" / \"+final_vert_list[i*7+1]);\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(final_vert_list);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar elements:TriangleElements = new TriangleElements(attributesBuffer);\n\t\telements.setPositions(new Float2Attributes(attributesBuffer));\n\t\telements.setCustomAttributes(\"curves\", new Float3Attributes(attributesBuffer));\n\t\telements.setUVs(new Float2Attributes(attributesBuffer));\n\t\tvar material:MaterialBase = DefaultMaterialManager.getDefaultMaterial();\n\t\tmaterial.bothSides = true;\n\t\tmaterial.useColorTransform = true;\n\t\tmaterial.curves = true;\n\t\tthis._target.graphics.addGraphic(elements, material);\n\t\tthis._active_fill_path=null;\n\t}\n}\n\nexport default Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport default InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport default JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport default LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport default PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport default SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport default TriangleCulling;",
    "export {default as CapsStyle}\t\t\t\t\t\tfrom \"awayjs-display/lib/draw/CapsStyle\";\nexport {default as GradientType}\t\t\t\t\tfrom \"awayjs-display/lib/draw/GradientType\";\nexport {default as Graphics}\t\t\t\t\t\tfrom \"awayjs-display/lib/draw/Graphics\";\nexport {default as GraphicsPath}\t\t\t\t\tfrom \"awayjs-display/lib/draw/GraphicsPath\";\nexport {default as GraphicsPathCommand}\t\t\t\tfrom \"awayjs-display/lib/draw/GraphicsPathCommand\";\nexport {default as GraphicsPathWinding}\t\t\t\tfrom \"awayjs-display/lib/draw/GraphicsPathWinding\";\nexport {default as IGraphicsData}\t\t\t\t\tfrom \"awayjs-display/lib/draw/IGraphicsData\";\nexport {default as InterpolationMethod}\t\t\t\tfrom \"awayjs-display/lib/draw/InterpolationMethod\";\nexport {default as JointStyle}\t\t\t\t\t\tfrom \"awayjs-display/lib/draw/JointStyle\";\nexport {default as LineScaleMode}\t\t\t\t\tfrom \"awayjs-display/lib/draw/LineScaleMode\";\nexport {default as PixelSnapping}\t\t\t\t\tfrom \"awayjs-display/lib/draw/PixelSnapping\";\nexport {default as SpreadMethod}\t\t\t\t\tfrom \"awayjs-display/lib/draw/SpreadMethod\";\nexport {default as TriangleCulling}\t\t\t\t\tfrom \"awayjs-display/lib/draw/TriangleCulling\";",
    "import ErrorBase\t\t\t\tfrom \"awayjs-core/lib/errors/ErrorBase\";\n\nclass CastError extends ErrorBase\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport default CastError;",
    "export {default as CastError}\t\t\t\t\t\tfrom \"awayjs-display/lib/errors/CastError\";",
    "import EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport Camera\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends EventBase\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CameraEvent\n\t{\n\t\treturn new CameraEvent(this.type, this._camera);\n\t}\n}\n\nexport default CameraEvent;",
    "import EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport DisplayObject\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\n\nclass DisplayObjectEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\n\t/**\n\t *\n\t */\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_PARTITION_BOUNDS:string = \"invalidatePartitionBounds\";\n\n\tprivate _object:DisplayObject;\n\n\tpublic get object():DisplayObject\n\t{\n\t\treturn this._object;\n\t}\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis._object = object;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():DisplayObjectEvent\n\t{\n\t\treturn new DisplayObjectEvent(this.type, this._object);\n\t}\n}\n\nexport default DisplayObjectEvent;",
    "import AttributesView\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\nimport EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.ElementsEvent\n * @see away.core.base.Graphics\n */\nclass ElementsEvent extends EventBase\n{\n\t/**\n\t * Dispatched when a Elements's index data has been updated.\n\t */\n\tpublic static INVALIDATE_INDICES:string = \"invalidateIndices\";\n\n\t/**\n\t * Dispatched when a Elements's index data has been disposed.\n\t */\n\tpublic static CLEAR_INDICES:string = \"clearIndices\";\n\t\n\t/**\n\t * Dispatched when a Elements's vertex data has been updated.\n\t */\n\tpublic static INVALIDATE_VERTICES:string = \"invalidateVertices\";\n\n\t/**\n\t * Dispatched when a Elements's vertex data has been disposed.\n\t */\n\tpublic static CLEAR_VERTICES:string = \"clearVertices\";\n\n\t\n\tprivate _attributesView:AttributesView;\n\n\t/**\n\t * Create a new GraphicsEvent\n\t * @param type The event type.\n\t * @param attributesView An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, attributesView:AttributesView)\n\t{\n\t\tsuper(type);\n\n\t\tthis._attributesView = attributesView;\n\t}\n\n\t/**\n\t * The attributes view of the vertex data.\n\t */\n\tpublic get attributesView():AttributesView\n\t{\n\t\treturn this._attributesView;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():ElementsEvent\n\t{\n\t\treturn new ElementsEvent(this.type, this._attributesView);\n\t}\n}\n\nexport default ElementsEvent;",
    "import EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nclass LightEvent extends EventBase\n{\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():LightEvent\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport default LightEvent;",
    "import Point\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport Vector3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport IEntity\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport IRenderable\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nimport View\t\t\t\t\t\tfrom \"awayjs-display/lib/View\";\nimport MaterialBase\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends EventBase\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The entity inside which the event took place.\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderable:IRenderable;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the elements where the event took place.\n\t */\n\tpublic elementIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic position:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic normal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():MouseEvent\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.entity = this.entity;\n\t\tresult.renderable = this.renderable;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.position = this.position;\n\t\tresult.normal = this.normal;\n\t\tresult.elementIndex = this.elementIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.entity.sceneTransform.transformVector(this.position);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.entity.sceneTransform.deltaTransformVector(this.normal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport default MouseEvent;",
    "import EventBase\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport IRenderable\t\t\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableEvent\n * @see away.core.base.Graphics\n */\nclass RenderableEvent extends EventBase\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static INVALIDATE_RENDER_OWNER:string = \"invalidateRenderable\";\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_ELEMENTS:string = \"invalidateElements\";\n\n\tprivate _renderable:IRenderable;\n\n\t/**\n\t * Create a new GraphicsEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderable:IRenderable)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderable = renderable;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderable():IRenderable\n\t{\n\t\treturn this._renderable;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():RenderableEvent\n\t{\n\t\treturn new RenderableEvent(this.type, this._renderable);\n\t}\n}\n\nexport default RenderableEvent;",
    "import EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nclass RendererEvent extends EventBase\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport default RendererEvent;",
    "import EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nclass ResizeEvent extends EventBase\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():ResizeEvent\n\t{\n\t\treturn new ResizeEvent(this.type, this._oldHeight, this._oldWidth);\n\t}\n}\n\nexport default ResizeEvent;",
    "import EventBase\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport Style\t\t\t\t\t\tfrom \"awayjs-display/lib/base/Style\";\n\nclass StyleEvent extends EventBase\n{\n\tprivate _style:Style;\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_PROPERTIES:string = \"invalidateProperties\";\n\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tconstructor(type:string, style:Style)\n\t{\n\t\tsuper(type);\n\n\t\tthis._style = style;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():StyleEvent\n\t{\n\t\treturn new StyleEvent(this.type, this._style);\n\t}\n}\n\nexport default StyleEvent;",
    "import EventBase\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\n\nclass SurfaceEvent extends EventBase\n{\n\tpublic static INVALIDATE_TEXTURE:string = \"invalidateTexture\";\n\n\tpublic static INVALIDATE_ANIMATION:string = \"invalidateAnimation\";\n\n\tpublic static INVALIDATE_PASSES:string = \"invalidatePasses\";\n\n\tprivate _surface:ISurface;\n\n\n\t/**\n\t * Create a new GraphicsEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, surface:ISurface)\n\t{\n\t\tsuper(type);\n\n\t\tthis._surface = surface;\n\t}\n\n\t/**\n\t * The surface of the renderable.\n\t */\n\tpublic get surface():ISurface\n\t{\n\t\treturn this._surface;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SurfaceEvent\n\t{\n\t\treturn new SurfaceEvent(this.type, this._surface);\n\t}\n}\n\nexport default SurfaceEvent;",
    "import Point\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport Vector3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport IEntity\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport IRenderable\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nimport View\t\t\t\t\t\tfrom \"awayjs-display/lib/View\";\nimport MaterialBase\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\n\nclass TouchEvent extends EventBase\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:TouchEvent;\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\t\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\t\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic entity:IEntity;\n\t\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderable:IRenderable;\n\t\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\t\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\t\n\t/**\n\t * The index of the elements where the event took place.\n\t */\n\tpublic elementIndex:number;\n\t\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic position:Vector3D;\n\t\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic normal:Vector3D;\n\t\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\n\tpublic touchPointID:number;\n\t\n\t/**\n\t * Create a new TouchEvent object.\n\t * @param type The type of the TouchEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\t\t\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\t\n\t/**\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():TouchEvent\n\t{\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\t\t\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\t\t\n\t\tresult.view = this.view;\n\t\tresult.entity = this.entity;\n\t\tresult.renderable = this.renderable;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.position = this.position;\n\t\tresult.normal = this.normal;\n\t\tresult.elementIndex = this.elementIndex;\n\t\t\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\t\t\n\t\tresult._iParentEvent = this;\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.entity.sceneTransform.transformVector(this.position);\n\t}\n\t\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.entity.sceneTransform.deltaTransformVector(this.normal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport default TouchEvent;",
    "import EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport Transform\t\t\t\tfrom \"awayjs-display/lib/base/Transform\";\n\nclass TransformEvent extends EventBase\n{\n\tprivate _transform:Transform;\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_MATRIX3D:string = \"invalidateMatrix3D\";\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_COLOR_TRANSFORM:string = \"invalidateColorTransform\";\n\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\tconstructor(type:string, transform:Transform)\n\t{\n\t\tsuper(type);\n\n\t\tthis._transform = transform;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TransformEvent\n\t{\n\t\treturn new TransformEvent(this.type, this._transform);\n\t}\n}\n\nexport default TransformEvent;",
    "export {default as CameraEvent}\t\t\t\t\t\tfrom \"awayjs-display/lib/events/CameraEvent\";\nexport {default as DisplayObjectEvent}\t\t\t\tfrom \"awayjs-display/lib/events/DisplayObjectEvent\";\nexport {default as ElementsEvent}\t\t\t\t\tfrom \"awayjs-display/lib/events/ElementsEvent\";\nexport {default as LightEvent}\t\t\t\t\t\tfrom \"awayjs-display/lib/events/LightEvent\";\nexport {default as MouseEvent}\t\t\t\t\t\tfrom \"awayjs-display/lib/events/MouseEvent\";\nexport {default as RenderableEvent}\t\t\t\t\tfrom \"awayjs-display/lib/events/RenderableEvent\";\nexport {default as RendererEvent}\t\t\t\t\tfrom \"awayjs-display/lib/events/RendererEvent\";\nexport {default as ResizeEvent}\t\t\t\t\t\tfrom \"awayjs-display/lib/events/ResizeEvent\";\nexport {default as StyleEvent}\t\t\t\t\t\tfrom \"awayjs-display/lib/events/StyleEvent\";\nexport {default as SurfaceEvent}\t\t\t\t\tfrom \"awayjs-display/lib/events/SurfaceEvent\";\nexport {default as TouchEvent}\t\t\t\t\t\tfrom \"awayjs-display/lib/events/TouchEvent\";\nexport {default as TransformEvent}\t\t\t\t\tfrom \"awayjs-display/lib/events/TransformEvent\";",
    "import AttributesBuffer\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AttributesView\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\nimport Float3Attributes\t\t\t\tfrom \"awayjs-core/lib/attributes/Float3Attributes\";\nimport Short3Attributes\t\t\t\tfrom \"awayjs-core/lib/attributes/Short3Attributes\";\nimport AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport Box\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport Sphere\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Sphere\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport AssetBase\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nimport ElementsEvent\t\t\t\tfrom \"awayjs-display/lib/events/ElementsEvent\";\nimport IPickingCollider\t\t\t\tfrom \"awayjs-display/lib/pick/IPickingCollider\";\nimport PickingCollision\t\t\t\tfrom \"awayjs-display/lib/pick/PickingCollision\";\nimport MaterialBase\t\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\n\n/**\n * @class away.base.TriangleElements\n */\nclass ElementsBase extends AssetBase\n{\n\tprivate _indices:Short3Attributes;\n\tprivate _customAttributesNames:Array<string> = new Array<string>();\n\tprivate _customAttributes:Object = new Object();\n\t\n\tprivate _numElements:number = 0;\n\n\tpublic _concatenatedBuffer:AttributesBuffer;\n\n\tprivate _invalidateIndices:ElementsEvent;\n\n\tpublic _verticesDirty:Object = new Object();\n\tpublic _invalidateVertices:Object = new Object();\n\n\t\n\tpublic get concatenatedBuffer():AttributesBuffer\n\t{\n\t\treturn this._concatenatedBuffer;\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Short3Attributes\n\t{\n\t\treturn this._indices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getCustomAtributesNames():Array<string>\n\t{\n\t\treturn this._customAttributesNames;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getCustomAtributes(name:string):AttributesView\n\t{\n\t\treturn this._customAttributes[name];\n\t}\n\t\n\t/**\n\t * The total amount of triangles in the TriangleElements.\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._numElements;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper();\n\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\n\t}\n\n\n\tpublic copyTo(elements:ElementsBase)\n\t{\n\t\tif (this.indices)\n\t\t\telements.setIndices(this.indices.clone());\n\t\t\n\t\tfor (var name in this._customAttributes)\n\t\t\telements.setCustomAttributes(name, this.getCustomAtributes(name).clone());\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tif (this._indices) {\n\t\t\tthis._indices.dispose();\n\t\t\tthis._indices = null;\n\t\t}\n\t\t\n\t\tfor (var name in this._customAttributes) {\n\t\t\tthis._customAttributes[name].dispose();\n\t\t\tdelete this._customAttributes;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleElements.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Short3Attributes) {\n\t\t\tif (this._indices)\n\t\t\t\tthis.clearIndices();\n\n\t\t\tthis._indices = <Short3Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._indices)\n\t\t\t\tthis._indices = new Short3Attributes();\n\n\t\t\tthis._indices.set(values, offset);\n\t\t} else if (this._indices) {\n\t\t\tthis._indices.dispose();\n\t\t\tthis._indices = null;\n\n\t\t\tthis.clearIndices();\n\t\t}\n\n\t\tif (this._indices) {\n\t\t\tthis._numElements = this._indices.count;\n\n\t\t\tthis.invalidateIndicies();\n\t\t} else {\n\t\t\tthis._numElements = 0;\n\t\t}\n\t}\n\t\n\t/**\n\t * Updates custom attributes.\n\t */\n\tpublic setCustomAttributes(name:string, array:Array<number>, offset?:number);\n\tpublic setCustomAttributes(name:string, arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic setCustomAttributes(name:string, attributesView:AttributesView, offset?:number);\n\tpublic setCustomAttributes(name:string, values:any, offset:number = 0)\n\t{\n\t\tif (values == this._customAttributes[name])\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._customAttributes[name]);\n\t\t\tthis._customAttributes[name] = values;\n\t\t} else if (values) {\n\t\t\tif (!this._customAttributes[name])\n\t\t\t\tthis._customAttributes[name] = new Float3Attributes(this._concatenatedBuffer); //default custom atrributes is Float3\n\n\t\t\tthis._customAttributes[name].set(values, offset);\n\t\t} else if (this._customAttributes[name]) {\n\t\t\tthis.clearVertices(this._customAttributes[name]);\n\t\t\tthis._customAttributesNames.splice(this._customAttributesNames.indexOf(name), 1);\n\t\t\tdelete this._customAttributes[name];\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._customAttributes[name]);\n\n\t\tthis._verticesDirty[this._customAttributes[name].id] = false;\n\n\t\tif (this._customAttributesNames.indexOf(name) == -1)\n\t\t\tthis._customAttributesNames.push(name);\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():ElementsBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number, box:Box):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate invalidateIndicies()\n\t{\n\t\tif (!this._invalidateIndices)\n\t\t\tthis._invalidateIndices = new ElementsEvent(ElementsEvent.INVALIDATE_INDICES, this._indices);\n\n\t\tthis.dispatchEvent(this._invalidateIndices);\n\t}\n\n\tprivate clearIndices()\n\t{\n\t\tthis.dispatchEvent(new ElementsEvent(ElementsEvent.CLEAR_INDICES, this._indices));\n\t}\n\n\tpublic invalidateVertices(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\n\t\t\treturn;\n\n\t\tthis._verticesDirty[attributesView.id] = true;\n\n\t\tif (!this._invalidateVertices[attributesView.id])\n\t\t\tthis._invalidateVertices[attributesView.id] = new ElementsEvent(ElementsEvent.INVALIDATE_VERTICES, attributesView);\n\n\t\tthis.dispatchEvent(this._invalidateVertices[attributesView.id]);\n\t}\n\n\n\tpublic clearVertices(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tattributesView.dispose();\n\n\t\tthis.dispatchEvent(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, attributesView));\n\n\t\tthis._verticesDirty[attributesView.id] = null;\n\t\tthis._invalidateVertices[attributesView.id] = null;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollision:PickingCollision):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport default ElementsBase;",
    "class ElementsType\n{\n\t/**\n\t *\n\t */\n\tpublic static TRIANGLE:string = \"triangle\";\n\n\t/**\n\t *\n\t */\n\tpublic static LINE:string = \"line\";\n}\n\nexport default ElementsType;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Point\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport Box\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport Sphere\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Sphere\";\nimport Matrix\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport AssetBase\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Graphic\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\nimport Style\t\t\t\t\t\tfrom \"awayjs-display/lib/base/Style\";\nimport MaterialBase\t\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\nimport IAnimator \t\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimator\";\nimport ElementsEvent\t\t\t\tfrom \"awayjs-display/lib/events/ElementsEvent\";\nimport StyleEvent\t\t\t\t\tfrom \"awayjs-display/lib/events/StyleEvent\";\nimport IPickingCollider\t\t\t\tfrom \"awayjs-display/lib/pick/IPickingCollider\";\nimport PickingCollision\t\t\t\tfrom \"awayjs-display/lib/pick/PickingCollision\";\nimport ITraverser\t\t\t\t\tfrom \"awayjs-display/lib/ITraverser\";\nimport ElementsUtils\t\t\t\tfrom \"awayjs-display/lib/utils/ElementsUtils\";\nimport ParticleData\t\t\t\t\tfrom \"awayjs-display/lib/animators/data/ParticleData\";\n\n/**\n *\n * Graphics is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Graphics object is assigned to a Sprite, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleGraphic objects.\n *\n *\n *\n * @see away.core.base.SubGraphics\n * @see away.entities.Sprite\n *\n * @class Graphics\n */\nclass Graphics extends AssetBase\n{\n\tpublic static assetType:string = \"[asset Graphics]\";\n\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate _onInvalidateVerticesDelegate:(event:ElementsEvent) => void;\n\n\tprivate _boxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tprivate _sphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid = true;\n\n\tprivate _material:MaterialBase;\n\tprivate _graphics:Array<Graphic> = new Array<Graphic>();\n\tprivate _animator:IAnimator;\n\tprivate _style:Style;\n\n\tpublic get assetType():string\n\t{\n\t\treturn Graphics.assetType;\n\t}\n\n\tpublic particles:Array<ParticleData>;\n\n\tpublic numParticles:number /*uint*/;\n\n\tpublic get count():number\n\t{\n\t\treturn this._graphics.length;\n\t}\n\n\t/**\n\t * Defines the animator of the graphics object.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._graphics.length;\n\t\tvar graphic:Graphic;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tgraphic = this._graphics[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (graphic.material) {\n\t\t\t\tgraphic.material.iRemoveOwner(graphic);\n\t\t\t\tgraphic.material.iAddOwner(graphic);\n\t\t\t}\n\n\t\t\t//invalidate any existing graphic objects in case they need to pull new elements\n\t\t\tgraphic.invalidateElements();\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._iInvalidateSurfaces();\n\t}\n\n\t/**\n\t * The material with which to render the Graphics.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._graphics.length;\n\t\tvar graphic:Graphic;\n\n\t\tif (this._material)\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!(graphic = this._graphics[i])._iGetExplicitMaterial())\n\t\t\t\t\tthis._material.iRemoveOwner(graphic);\n\n\t\tthis._material = value;\n\n\t\tif (this._material)\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!(graphic = this._graphics[i])._iGetExplicitMaterial())\n\t\t\t\t\tthis._material.iAddOwner(graphic);\n\t}\n\n\t/**\n\t * Creates a new Graphics object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\t\tthis._onInvalidateVerticesDelegate = (event:ElementsEvent) => this._onInvalidateVertices(event);\n\t}\n\n\t/**\n\t * Adds a GraphicBase wrapping a Elements.\n\t *\n\t * @param elements\n\t */\n\tpublic addGraphic(elements:ElementsBase, material:MaterialBase = null, style:Style = null):Graphic\n\t{\n\t\tvar graphic:Graphic;\n\n\t\tif (Graphic._available.length) {\n\t\t\tgraphic = Graphic._available.pop();\n\t\t\tgraphic._iIndex = this._graphics.length;\n\t\t\tgraphic.parent = this;\n\t\t\tgraphic.elements = elements;\n\t\t\tgraphic.material = material;\n\t\t\tgraphic.style = style;\n\t\t} else {\n\t\t\tgraphic = new Graphic(this._graphics.length, this, elements, material, style);\n\t\t}\n\n\t\tthis._graphics.push(graphic);\n\n\t\telements.addEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n\n\t\tthis.invalidate();\n\n\t\treturn graphic;\n\t}\n\n\tpublic removeGraphic(graphic:Graphic)\n\t{\n\t\tthis._graphics.splice(this._graphics.indexOf(graphic), 1);\n\n\t\tgraphic.elements.removeEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n\n\t\tgraphic.elements = null;\n\t\tgraphic.material = null;\n\t\tgraphic.style = null;\n\t\tgraphic.clear();\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic getGraphicAt(index:number):Graphic\n\t{\n\t\treturn this._graphics[index];\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].elements.applyTransformation(transform);\n\t}\n\n\tpublic copyTo(graphics:Graphics)\n\t{\n\t\tgraphics.material = this._material;\n\t\tgraphics.style = this.style;\n\t\tgraphics.particles = this.particles;\n\t\tgraphics.numParticles = this.numParticles;\n\t\tvar graphic:Graphic;\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tgraphic = this._graphics[i];\n\t\t\tgraphics.addGraphic(graphic.elements, graphic._iGetExplicitMaterial(), graphic._iGetExplicitStyle());\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tgraphics.animator = this._animator.clone();\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].elements.scale(scale);\n\t}\n\n\tpublic clear()\n\t{\n\t\tfor (var i:number = this._graphics.length - 1; i>=0; i--)\n\t\t\tthis._graphics[i].clear();\n\t}\n\n\t/**\n\t * Clears all resources used by the Graphics object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\t\tfor (var i:number = this._graphics.length - 1; i>=0; i--)\n\t\t\tthis._graphics[i].dispose();\n\n\t\tif (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar len:number = this._graphics.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].elements.scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic getBoxBounds():Box\n\t{\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._boxBoundsInvalid = false;\n\n\t\t\tif (!this._boxBounds)\n\t\t\t\tthis._boxBounds = new Box();\n\n\t\t\tif (this._graphics.length) {\n\t\t\t\tthis._boxBounds.setBoundIdentity();\n\t\t\t\tvar len:number = this._graphics.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\t\tthis._boxBounds = this._graphics[i].elements.getBoxBounds(this._boxBounds);\n\t\t\t} else {\n\t\t\t\tthis._boxBounds.setEmpty();\n\t\t\t}\n\t\t}\n\n\t\treturn this._boxBounds;\n\t}\n\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\ttarget = this._graphics[i].elements.getSphereBounds(center, target);\n\n\t\treturn target;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tsuper.invalidate();\n\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\t}\n\n\tpublic _iInvalidateSurfaces()\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].invalidateSurface();\n\t}\n\n\n\tpublic invalidateElements()\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].invalidateElements();\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number):boolean\n\t{\n\t\t//TODO: handle lines as well\n\t\tvar len:number = this._graphics.length;\n\t\tfor(var i:number = 0; i < len; i++)\n\t\t\tif (ElementsUtils.hitTestTriangleElements(x, y, 0, this.getBoxBounds(), <TriangleElements> this._graphics[i].elements))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\ttraverser.applyRenderable(this._graphics[i]);\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis._iInvalidateSurfaces();\n\t}\n\n\tprivate _onInvalidateVertices(event:ElementsEvent)\n\t{\n\t\tif (event.attributesView != (<TriangleElements> event.target).positions)\n\t\t\treturn;\n\n\t\tthis.invalidate();\n\t}\n}\n\nexport default Graphics;",
    "import AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Matrix\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport ColorTransform\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport AssetBase\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nimport IAnimator\t\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimator\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport Sprite\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\nimport RenderableEvent\t\t\tfrom \"awayjs-display/lib/events/RenderableEvent\";\nimport MaterialBase\t\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\nimport Style\t\t\t\t\t\tfrom \"awayjs-display/lib/base/Style\";\nimport StyleEvent\t\t\t\t\tfrom \"awayjs-display/lib/events/StyleEvent\";\nimport IRenderable \t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nimport Graphics\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport IPickingCollider from \"awayjs-display/lib/pick/IPickingCollider\";\nimport PickingCollision from \"awayjs-display/lib/pick/PickingCollision\";\nimport DisplayObject from \"awayjs-display/lib/display/DisplayObject\";\n\n/**\n * Graphic wraps a Elements as a scene graph instantiation. A Graphic is owned by a Sprite object.\n *\n *\n * @see away.base.ElementsBase\n * @see away.entities.Sprite\n *\n * @class away.base.Graphic\n */\nclass Graphic extends AssetBase implements IRenderable\n{\n\tpublic static _available:Array<Graphic> = new Array<Graphic>();\n\n\tpublic static assetType:string = \"[asset Graphic]\";\n\n\tpublic _iIndex:number = 0;\n\n\tprivate _style:Style;\n\tprivate _material:MaterialBase;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\n\tpublic parent:Graphics;\n\n\t/**\n\t * The Elements object which provides the geometry data for this Graphic.\n\t */\n\tpublic elements:ElementsBase;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Graphic.assetType;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this.parent.animator;\n\t}\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The material used to render the current TriangleGraphic. If set to null, its parent Sprite's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this.parent.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The style used to render the current TriangleGraphic. If set to null, its parent Sprite's style will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style || this.parent.style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis.invalidateSurface();\n\t}\n\n\n\t/**\n\t * Creates a new Graphic object\n\t */\n\tconstructor(index:number, parent:Graphics, elements:ElementsBase, material:MaterialBase = null, style:Style = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\n\t\tthis._iIndex = index;\n\t\tthis.parent = parent;\n\t\tthis.elements = elements;\n\t\tthis.material = material;\n\t\tthis.style = style;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.parent.removeGraphic(this);\n\t\tthis.parent = null;\n\n\t\tGraphic._available.push(this);\n\t}\n\n\tpublic invalidateElements()\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_ELEMENTS, this));\n\t}\n\n\tpublic invalidateSurface()\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_RENDER_OWNER, this));\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic _iGetExplicitStyle():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidateSurface();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(pickingCollision:PickingCollision, pickingCollider:IPickingCollider):boolean\n\t{\n\t\treturn this.elements._iTestCollision(pickingCollider, this.material, pickingCollision)\n\t}\n\n}\n\nexport default Graphic;",
    "import AttributesBuffer\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AttributesView\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\nimport Byte4Attributes\t\t\t\tfrom \"awayjs-core/lib/attributes/Byte4Attributes\";\nimport Float3Attributes\t\t\t\tfrom \"awayjs-core/lib/attributes/Float3Attributes\";\nimport Float1Attributes\t\t\t\tfrom \"awayjs-core/lib/attributes/Float1Attributes\";\nimport Box\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport Sphere\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Sphere\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport MaterialBase\t\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\nimport ElementsUtils\t\t\t\tfrom \"awayjs-display/lib/utils/ElementsUtils\";\nimport IPickingCollider\t\t\t\tfrom \"awayjs-display/lib/pick/IPickingCollider\";\nimport PickingCollision\t\t\t\tfrom \"awayjs-display/lib/pick/PickingCollision\";\n\n/**\n * @class LineElements\n */\nclass LineElements extends ElementsBase\n{\n\tpublic static assetType:string = \"[asset LineElements]\";\n\n\tprivate _numVertices:number = 0;\n\n\tprivate _positions:AttributesView;\n\tprivate _thickness:Float1Attributes;\n\tprivate _colors:Byte4Attributes;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineElements.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Float1Attributes\n\t{\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colors():Byte4Attributes\n\t{\n\t\tif (!this._colors)\n\t\t\tthis.setColors(this._colors);\n\n\t\treturn this._colors;\n\t}\n\n\t/**\n\t * The total amount of vertices in the LineElements.\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\t\t\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\t//TODO bounding calculations for lines\n\t\treturn target;\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\t//TODO bounding calculations for lines\n\t\treturn target;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tif (index/6 & 1) {\n\t\t\t\t\tpositions[index] = values[i + 3];\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\n\t\t\t\t\tpositions[index + 3] = values[i];\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[index] = values[i];\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\n\t\t\t\t}\n\n\t\t\t\tindex += 6;\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tvar o:number = index/6 - 4;\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._positions.set(positions, offset*4);\n\n\t\t\tthis.setIndices(indices, offset);\n\t\t} else {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.invalidateVertices(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic setThickness(array:Array<number>, offset?:number);\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\n\tpublic setThickness(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Float1Attributes) {\n\t\t\tthis._thickness = <Float1Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._thickness)\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\n\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis._thickness.set(thickness, offset*4);\n\t\t} else if (this._thickness) {\n\t\t\tthis._thickness.dispose();\n\t\t\tthis._thickness = null;\n\t\t}\n\n\t\tthis.invalidateVertices(this._thickness);\n\n\t\tthis._verticesDirty[this._thickness.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setColors(array:Array<number>, offset?:number);\n\tpublic setColors(float32Array:Float32Array, offset?:number);\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\n\tpublic setColors(values:any, offset:number = 0)\n\t{\n\t\tif (values) {\n\t\t\tif (values == this._colors)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Byte4Attributes) {\n\t\t\t\tthis.clearVertices(this._colors);\n\t\t\t\tthis._colors = <Byte4Attributes> values;\n\t\t\t} else {\n\t\t\t\tif (!this._colors)\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\n\n\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\tvar index:number = 0;\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tif (index/4 & 1) {\n\t\t\t\t\t\tcolors[index] = values[i + 4];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors[index] = values[i];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (++j == 4) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\ti += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\n\t\t\t\tthis._colors.set(colors, offset*4);\n\t\t\t}\n\t\t} else {\n\t\t\t//auto-derive colors\n\t\t\tthis._colors = ElementsUtils.generateColors(this.indices, this._colors, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.invalidateVertices(this._colors);\n\n\t\tthis._verticesDirty[this._colors.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._thickness.dispose();\n\t\tthis._thickness = null;\n\n\t\tthis._colors.dispose();\n\t\tthis._colors = null;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineElements\n\t{\n\t\tvar clone:LineElements = new LineElements(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this.indices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\t\tclone.setThickness(this._thickness.clone());\n\t\tclone.setColors(this._colors.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollision:PickingCollision):boolean\n\t{\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollision);\n\t}\n}\n\nexport default LineElements;",
    "import AttributesBuffer\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AttributesView\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\nimport Float4Attributes\t\t\t\tfrom \"awayjs-core/lib/attributes/Float4Attributes\";\nimport Float3Attributes\t\t\t\tfrom \"awayjs-core/lib/attributes/Float3Attributes\";\nimport Float2Attributes\t\t\t\tfrom \"awayjs-core/lib/attributes/Float2Attributes\";\nimport Float1Attributes\t\t\t\tfrom \"awayjs-core/lib/attributes/Float1Attributes\";\nimport Short3Attributes\t\t\t\tfrom \"awayjs-core/lib/attributes/Short3Attributes\";\nimport Box\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport Sphere\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Sphere\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport MaterialBase\t\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\nimport ElementsUtils\t\t\t\tfrom \"awayjs-display/lib/utils/ElementsUtils\";\nimport IPickingCollider\t\t\t\tfrom \"awayjs-display/lib/pick/IPickingCollider\";\nimport PickingCollision\t\t\t\tfrom \"awayjs-display/lib/pick/PickingCollision\";\n\n/**\n * @class away.base.TriangleElements\n */\nclass TriangleElements extends ElementsBase\n{\n\tpublic static assetType:string = \"[asset TriangleElements]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\n\tprivate _positions:AttributesView;\n\tprivate _normals:Float3Attributes;\n\tprivate _tangents:Float3Attributes;\n\tprivate _uvs:AttributesView;\n\tprivate _jointIndices:AttributesView;\n\tprivate _jointWeights:AttributesView;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\n\tprivate _faceNormals:Float4Attributes;\n\tprivate _faceTangents:Float3Attributes;\n\n\t//used for hittesting geometry\n\tpublic cells:Array<Array<number>> = new Array<Array<number>>();\n\tpublic lastCollisionIndex:number = - 1;\n\tpublic divisions:number;\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleElements.assetType;\n\t}\n\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per sprite. Only applicable to\n\t * skeleton animations that utilise more than one sprite object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tif (this._jointIndices)\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\n\n\t\tif (this._jointWeights)\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\tif (!this._positions)\n\t\t\tthis.setPositions(new Float3Attributes(this._concatenatedBuffer));\n\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get normals():Float3Attributes\n\t{\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\n\t\t\tthis.setNormals(this._normals);\n\n\t\treturn this._normals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get tangents():Float3Attributes\n\t{\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\n\t\t\tthis.setTangents(this._tangents);\n\n\t\treturn this._tangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Float4Attributes\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Float3Attributes\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():AttributesView\n\t{\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():AttributesView\n\t{\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():AttributesView\n\t{\n\t\treturn this._jointWeights;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\treturn ElementsUtils.getTriangleGraphicsBoxBounds(this.positions, target, this._numVertices);\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\treturn ElementsUtils.getTriangleGraphicsSphereBounds(this.positions, center, target, this._numVertices);\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._positions)\n\t\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer); //positions cannot be null\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.invalidateVertices(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.invalidateVertices(this._tangents);\n\n\t\tthis.invalidateVertices(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setNormals(array:Array<number>, offset?:number);\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setNormals(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif (values == this._normals)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.clearVertices(this._normals);\n\t\t\t\tthis._normals = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._normals)\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._normals.set(values, offset);\n\t\t\t} else if (this._normals) {\n\t\t\t\tthis.clearVertices(this._normals);\n\t\t\t\tthis._normals = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._normals = ElementsUtils.generateNormals(this.indices, this.faceNormals, this._normals, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.invalidateVertices(this._normals);\n\n\t\tthis._verticesDirty[this._normals.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic setTangents(array:Array<number>, offset?:number);\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setTangents(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif (values == this._tangents)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.clearVertices(this._tangents);\n\t\t\t\tthis._tangents = values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._tangents)\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._tangents.set(values, offset);\n\t\t\t} else if (this._tangents) {\n\t\t\t\tthis.clearVertices(this._tangents);\n\t\t\t\tthis._tangents = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._tangents = ElementsUtils.generateTangents(this.indices, this.faceTangents, this.faceNormals, this._tangents, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.invalidateVertices(this._tangents);\n\n\t\tthis._verticesDirty[this._tangents.id] = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic setUVs(attributesView:AttributesView, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._uvs)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._uvs);\n\t\t\tthis._uvs = values;\n\t\t} else if (values) {\n\t\t\tif (!this._uvs)\n\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._uvs.set(values, offset);\n\t\t} else if (this._uvs) {\n\t\t\tthis.clearVertices(this._uvs);\n\t\t\tthis._uvs = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic setJointIndices(array:Array<number>, offset?:number);\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\n\tpublic setJointIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointIndices)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._jointIndices);\n\t\t\tthis._jointIndices = values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointIndices)\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\toldIndex = values[i];\n\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value to dictionary lookup\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._jointIndices.set(values, offset);\n\n\t\t} else if (this._jointIndices) {\n\t\t\tthis.clearVertices(this._jointIndices);\n\t\t\tthis._jointIndices = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._jointIndices);\n\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic setJointWeights(array:Array<number>, offset?:number);\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\n\tpublic setJointWeights(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointWeights)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._jointWeights);\n\t\t\tthis._jointWeights = values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointWeights)\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tthis._jointWeights.set(values, offset);\n\n\t\t} else if (this._jointWeights) {\n\t\t\tthis.clearVertices(this._jointWeights);\n\t\t\tthis._jointWeights = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._jointWeights);\n\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tif (this._positions) {\n\t\t\tthis._positions.dispose();\n\t\t\tthis._positions = null;\n\t\t}\n\n\t\tif (this._normals) {\n\t\t\tthis._normals.dispose();\n\t\t\tthis._normals = null;\n\t\t}\n\n\t\tif (this._tangents) {\n\t\t\tthis._tangents.dispose();\n\t\t\tthis._tangents = null;\n\t\t}\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t\tif (this._jointIndices) {\n\t\t\tthis._jointIndices.dispose();\n\t\t\tthis._jointIndices = null;\n\t\t}\n\n\t\tif (this._jointWeights) {\n\t\t\tthis._jointWeights.dispose();\n\t\t\tthis._jointWeights = null;\n\t\t}\n\n\t\tif (this._faceNormals) {\n\t\t\tthis._faceNormals.dispose();\n\t\t\tthis._faceNormals = null;\n\t\t}\n\n\t\tif (this._faceTangents) {\n\t\t\tthis._faceTangents.dispose();\n\t\t\tthis._faceTangents = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleElements.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tsuper.setIndices(values, offset);\n\n\t\tthis._faceNormalsDirty = true;\n\t\tthis._faceTangentsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.invalidateVertices(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.invalidateVertices(this._tangents);\n\t}\n\n\tpublic copyTo(elements:TriangleElements)\n\t{\n\t\tsuper.copyTo(elements);\n\n\t\t//temp disable auto derives\n\t\telements.autoDeriveNormals = false;\n\t\telements.autoDeriveTangents = false;\n\n\t\telements.setPositions(this.positions.clone());\n\n\t\tif (this.normals)\n\t\t\telements.setNormals(this.normals.clone());\n\n\t\tif (this.tangents)\n\t\t\telements.setTangents(this.tangents.clone());\n\n\t\tif (this.uvs)\n\t\t\telements.setUVs(this.uvs.clone());\n\n\t\telements.jointsPerVertex = this._jointsPerVertex;\n\n\t\tif (this.jointIndices)\n\t\t\telements.setJointIndices(this.jointIndices.clone());\n\n\t\tif (this.jointWeights)\n\t\t\telements.setJointWeights(this.jointWeights.clone());\n\n\t\t//return auto derives to cloned values\n\t\telements.autoDeriveNormals = this._autoDeriveNormals;\n\t\telements.autoDeriveTangents = this._autoDeriveTangents;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleElements\n\t{\n\t\tvar clone:TriangleElements = new TriangleElements(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tthis.copyTo(clone);\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tif (this.uvs) // only scale if uvs exist\n\t\t\tElementsUtils.scaleUVs(scaleU, scaleV, this.uvs, this._numVertices);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tElementsUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tElementsUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tthis._faceTangents = ElementsUtils.generateFaceTangents(this.indices, this.positions, this.uvs || this.positions, this._faceTangents, this.numElements);\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tthis._faceNormals = ElementsUtils.generateFaceNormals(this.indices, this.positions, this._faceNormals, this.numElements);\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollision:PickingCollision):boolean\n\t{\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollision);\n\t}\n}\n\nexport default TriangleElements;",
    "export {default as ElementsBase}\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nexport {default as ElementsType}\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsType\";\nexport {default as Graphic}\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\nexport {default as Graphics}\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\nexport {default as LineElements}\t\t\t\t\tfrom \"awayjs-display/lib/graphics/LineElements\";\nexport {default as TriangleElements}\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";",
    "import Sampler2D\t\t\t\t\tfrom \"awayjs-core/lib/image/Sampler2D\";\nimport BitmapImage2D\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport BitmapImageCube\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImageCube\";\n\nimport IRenderable\t\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nimport LineElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/LineElements\";\nimport Skybox\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Skybox\";\nimport MaterialBase\t\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\nimport BasicMaterial\t\t\t\tfrom \"awayjs-display/lib/materials/BasicMaterial\";\nimport Single2DTexture\t\t\t\tfrom \"awayjs-display/lib/textures/Single2DTexture\";\nimport SingleCubeTexture\t\t\tfrom \"awayjs-display/lib/textures/SingleCubeTexture\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\nimport Graphic\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultSampler2D:Sampler2D;\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\n\tprivate static _defaultTextureMaterial:BasicMaterial;\n\tprivate static _defaultColorMaterial:BasicMaterial;\n\tprivate static _defaultTexture:Single2DTexture;\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\n\n\tpublic static getDefaultMaterial(renderable:IRenderable = null):MaterialBase\n\t{\n\t\tif (renderable != null && renderable.isAsset(Graphic) && (<Graphic> renderable).elements.isAsset(LineElements)) {\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\n\t\t}\n\n\t\tif (renderable != null && renderable.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\n\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\n\t}\n\n\tpublic static getDefaultTexture(renderable:IRenderable = null):TextureBase\n\t{\n\t\tif (renderable != null && renderable.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tpublic static getDefaultImage2D():BitmapImage2D\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createDefaultImage2D();\n\n\t\treturn DefaultMaterialManager._defaultBitmapImage2D;\n\t}\n\n\tpublic static getDefaultImageCube():BitmapImageCube\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\n\t\t\tDefaultMaterialManager.createDefaultImageCube();\n\n\t\treturn DefaultMaterialManager._defaultBitmapImageCube;\n\t}\n\n\tpublic static getDefaultSampler():Sampler2D\n\t{\n\t\tif (!DefaultMaterialManager._defaultSampler2D)\n\t\t\tDefaultMaterialManager.createDefaultSampler2D();\n\n\t\treturn DefaultMaterialManager._defaultSampler2D;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture();\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tprivate static createDefaultCubeTexture()\n\t{\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture();\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t}\n\n\tprivate static createDefaultImageCube()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createDefaultImage2D();\n\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\n\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\n\t}\n\n\tprivate static createDefaultImage2D()\n\t{\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++)\n\t\t\tfor (j = 0; j < 8; j++)\n\t\t\t\tif ((j & 1) ^ (i & 1))\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\n\t}\n\n\tprivate static createDefaultTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultTextureMaterial.texture = DefaultMaterialManager._defaultTexture;\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\n\t}\n\n\tprivate static createDefaultCubeTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.texture = DefaultMaterialManager._defaultCubeTexture;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\n\t}\n\n\tprivate static createDefaultColorMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial(0xFFFFFF);\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\n\t}\n\n\tprivate static createDefaultSampler2D()\n\t{\n\t\tDefaultMaterialManager._defaultSampler2D = new Sampler2D();\n\t}\n\n}\n\nexport default DefaultMaterialManager;",
    "import DisplayObject\t\t\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport MovieClip\t\t\t\t\t\tfrom \"awayjs-display/lib/display/MovieClip\";\n\nclass FrameScriptManager\n{\n\t// FrameScript debugging:\n\t// the first line of a FrameScript should be a comment that represents the functions unique name\n\t// the exporter creates a js file, containing a object that has the framescripts functions set as properties according to the unique names\n\t// this object can be set as \"frameScriptDebug\" in order to enable debug mode\n\n\n\tpublic static frameScriptDebug:Object = undefined;\n\n\t//queue of objects for disposal\n\tprivate static _queued_dispose:Array<DisplayObject> = new Array<DisplayObject>();\n\n\t// queues pass1 of scripts.\n\tprivate static _queued_mcs:Array<MovieClip> = [];\n\tprivate static _queued_scripts:Array<Function> = [];\n\n\t// queues pass2 of scripts. this will be inserted in reversed order into pass1 queue right before something should be added to pass1\n\tprivate static _queued_mcs_pass2:Array<MovieClip> = [];\n\tprivate static _queued_scripts_pass2:Array<Function> = [];\n\n\tprivate static _active_intervals:Object = new Object(); // maps id to function\n\n\tprivate static _intervalID:number=0;\n\tpublic static setInterval(func:any):number\n\t{\n\t\tthis._intervalID++;\n\t\tthis._active_intervals[this._intervalID]=func;\n\t\treturn this._intervalID\n\t}\n\n\tpublic static clearInterval(id:number):void\n\t{\n\t\tdelete this._active_intervals[id];\n\t}\n\n\tpublic static execute_intervals():void\n\t{\n\t\tfor(var key in this._active_intervals){\n\t\t\tthis._active_intervals[key].call();\n\t\t}\n\t}\n\n\tpublic static add_child_to_dispose(child:DisplayObject)\n\t{\n\t\tthis._queued_dispose.push(child);\n\t}\n\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\n\t{\n\t\t// whenever we queue scripts of new objects, we first inject the lists of pass2\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2.length = 0;\n\t\tthis._queued_scripts_pass2.length = 0;\n\t\tthis._queued_mcs.push(mc);\n\t\tthis._queued_scripts.push(script);\n\t}\n\n\tpublic static add_script_to_queue_pass2(mc:MovieClip, script:Function):void\n\t{\n\t\tthis._queued_mcs_pass2.push(mc);\n\t\tthis._queued_scripts_pass2.push(script);\n\t}\n\n\tpublic static execute_queue():void\n\t{\n\t\tif(this._queued_mcs.length==0 && this._queued_mcs_pass2.length==0)\n\t\t\treturn;\n\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2.length = 0;\n\t\tthis._queued_scripts_pass2.length = 0;\n\n\t\tvar mc:MovieClip;\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\n\t\t\t// during the loop we might add more scripts to the queue\n\t\t\tmc=this._queued_mcs[i];\n\t\t\tif(mc.scene!=null) {\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\n\t\t\t//\ttry {\n\t\t\t\tthis._queued_scripts[i].call(caller);\n\t\t\t//\t}\n\t\t\t/*\tcatch (err) {\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\n\t\t\t\t\tconsole.log(err.message);\n\t\t\t\t\tthrow err;\n\t\t\t\t}*/\n\t\t\t}\n\t\t}\n\t\t// all scripts executed. clear all\n\t\tthis._queued_mcs.length = 0;\n\t\tthis._queued_scripts.length = 0;\n\t}\n\n\tpublic static execute_dispose()\n\t{\n\t\tvar len:number = this._queued_dispose.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._queued_dispose[i].dispose();\n\n\t\tthis._queued_dispose.length = 0;\n\t}\n}\nexport default FrameScriptManager;",
    "import Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport DisplayObject\t\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport TouchPoint\t\t\t\t\tfrom \"awayjs-display/lib/base/TouchPoint\";\nimport View\t\t\t\t\t\t\tfrom \"awayjs-display/lib/View\";\nimport PickingCollision\t\t\t\tfrom \"awayjs-display/lib/pick/PickingCollision\";\nimport AwayMouseEvent\t\t\t\tfrom \"awayjs-display/lib/events/MouseEvent\";\nimport FrameScriptManager\t\t\tfrom \"awayjs-display/lib/managers/FrameScriptManager\";\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollision:PickingCollision;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollision;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollision != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollision)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\t if (forceMouseMove && this._iCollision)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = <DisplayObject> event.entity;\n\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\n\t\t\twhile (dispatcher) {\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\n\t\t\t\t\tdispatcher.dispatchEvent(event);\n\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t}\n\t\t\t// not totally sure, but i think just calling it is easier and cheaper than any options for that\n\t\t\t// if nothing is queued, the function will return directly anyway\n\t\t\tFrameScriptManager.execute_queue();\n\n\t\t}\n\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollision;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tif(view && view.htmlElement) {\n\t\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\t\t\tthis._viewLookup.push(view);\n\t\t}\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tif(view && view.htmlElement) {\n\t\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t\t}\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent, collision:PickingCollision = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = (sourceEvent.clientX != null)? sourceEvent.clientX : sourceEvent.changedTouches[0].clientX;\n\t\t\tevent.screenY = (sourceEvent.clientY != null)? sourceEvent.clientY : sourceEvent.changedTouches[0].clientY;\n\t\t}\n\n\t\tif (collision == null)\n\t\t\tcollision = this._iCollision;\n\n\t\t// 3D properties.\n\t\tif (collision) {\n\t\t\t// Object.\n\t\t\tevent.entity = collision.entity;\n\t\t\tevent.renderable = collision.renderable;\n\t\t\t// UV.\n\t\t\tevent.uv = collision.uv;\n\t\t\t// Position.\n\t\t\tevent.position = collision.position? collision.position.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.normal = collision.normal? collision.normal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.elementIndex = collision.elementIndex;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.entity = null;\n\t\t\tevent.position = this._nullVector;\n\t\t\tevent.normal = this._nullVector;\n\t\t\tevent.elementIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event)\n\t{\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tview._pTouchPoints.length = 0;\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\n\t\t\tif (event.touches) {\n\t\t\t\tvar touch;\n\t\t\t\tvar len:number = event.touches.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\t\ttouch = event.touches[i];\n\t\t\t\t\tview._pTouchPoints.push(new TouchPoint(touch.clientX + bounds.left, touch.clientY + bounds.top, touch.identifier));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._iUpdateDirty)\n\t\t\t\tcontinue;\n\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollision)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport default MouseManager;",
    "import Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport DisplayObject\t\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport View\t\t\t\t\t\t\tfrom \"awayjs-display/lib/View\";\nimport PickingCollision\t\t\t\tfrom \"awayjs-display/lib/pick/PickingCollision\";\nimport AwayTouchEvent\t\t\t\tfrom \"awayjs-display/lib/events/TouchEvent\";\n\nclass TouchManager\n{\n\tprivate static _instance:TouchManager;\n\n\tprivate _updateDirty:boolean = true;\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _numTouchPoints:number;\n\tprivate _touchPoint:TouchPoint;\n\tprivate _iCollision:PickingCollision;\n\tprivate _previousCollidingObject:PickingCollision;\n\tpublic static _iCollisionFromTouchId:Object;\n\tpublic static _previousCollidingObjectFromTouchId:Object;\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\n\t\n\tprivate _touchPoints:Array<TouchPoint>;\n\tprivate _touchPointFromId:Object;\n\t\n\tprivate _touchMoveEvent:TouchEvent;\n\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\n\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\n\t\n\tconstructor()\n\t{\n\t\tthis._touchPoints = new Array<TouchPoint>();\n\t\tthis._touchPointFromId = new Object();\n\t\tTouchManager._iCollisionFromTouchId = new Object();\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\n\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\n\t}\n\n\tpublic static getInstance():TouchManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new TouchManager());\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Interface.\n\t// ---------------------------------------------------------------------\n\t\n\tpublic updateCollider(forceTouchMove:boolean)\n\t{\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t//\t\tthis._iCollision = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n\t\t//\t\tTouchManager._iCollisionFromTouchId[ this._touchPoint.id ] = this._iCollision;\n\t\t//\t}\n\t\t//}\n\t}\n\t\n\tpublic fireTouchEvents(forceTouchMove:boolean)\n\t{\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[i];\n\t\t\t// If colliding object has changed, queue over/out events.\n\t\t\tthis._iCollision = TouchManager._iCollisionFromTouchId[ this._touchPoint.id ];\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tif (this._iCollision != this._previousCollidingObject) {\n\t\t\t\tif (this._previousCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n\t\t\t\tif (this._iCollision)\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollision, this._touchPoint);\n\t\t\t}\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\n\t\t\tif (forceTouchMove && this._iCollision)\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollision, this._touchPoint);\n\t\t}\n\n\t\tvar event:AwayTouchEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = <DisplayObject> event.entity;\n\t\t\t\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._updateDirty = false;\n\t\t\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollisionFromTouchId[ this._touchPoint.id ];\n\t\t}\n\t}\n\t\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollision, touch:TouchPoint)\n\t{\n\t\t// 2D properties.\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\tevent.altKey = sourceEvent.altKey;\n\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\tevent.screenX = touch.x;\n\t\tevent.screenY = touch.y;\n\t\tevent.touchPointID = touch.id;\n\t\t\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.entity = collider.entity;\n\t\t\tevent.renderable = collider.renderable;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.position = collider.position? collider.position.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.normal = collider.normal? collider.normal.clone() : null;\n\t\t\t// ElementsIndex.\n\t\t\tevent.elementIndex = collider.elementIndex;\n\t\t\t\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.entity = null;\n\t\t\tevent.position = this._nullVector;\n\t\t\tevent.normal = this._nullVector;\n\t\t\tevent.elementIndex = 0;\n\t\t}\n\t\t\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Event handlers.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate onTouchBegin(event:TouchEvent)\n\t{\n\t\t\n\t\tvar touch:TouchPoint = new TouchPoint();\n\t\t//touch.id = event.touchPointID;\n\t\t//touch.x = event.stageX;\n\t\t//touch.y = event.stageY;\n\t\tthis._numTouchPoints++;\n\t\tthis._touchPoints.push(touch);\n\t\tthis._touchPointFromId[ touch.id ] = touch;\n\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n\n\t\tthis._iCollision = TouchManager._iCollisionFromTouchId[ touch.id ];\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollision, touch);\n\n\t\tthis._updateDirty = true;\n\t}\n\t\n\tprivate onTouchMove(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t////touch.x = event.stageX;\n\t\t////touch.y = event.stageY;\n\t\t//\n\t\t//this._iCollision = TouchManager._iCollisionFromTouchId[ touch.id ];\n\t\t//\n\t\t//if (this._iCollision)\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollision, touch);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n\t\n\tprivate onTouchEnd(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t//this._iCollision = TouchManager._iCollisionFromTouchId[ touch.id ];\n\t\t//if (this._iCollision)\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollision, touch);\n\t\t//\n\t\t//this._touchPointFromId[ touch.id ] = null;\n\t\t//this._numTouchPoints--;\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n}\n\n\nexport default TouchManager;\n\nclass TouchPoint\n{\n\tpublic id:number;\n\tpublic x:number;\n\tpublic y:number;\n}\n\n\n/**\n * Classes for Touch Interfaces\n */\ninterface TouchEvent extends UIEvent {\n\ttouches: TouchList;\n\ttargetTouches: TouchList;\n\tchangedTouches: TouchList;\n\taltKey: boolean;\n\tmetaKey: boolean;\n\tctrlKey: boolean;\n\tshiftKey: boolean;\n\trotation: number;\n\tscale: number;\n\n\t// for iOS\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\n\n\t// for Android\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\n}\n\ndeclare var TouchEvent: {\n\tprototype: TouchEvent;\n\tnew (): TouchEvent;\n}\n\ninterface TouchList {\n\tlength: number;\n\t[index: number]: Touch;\n\titem: (index: number) => Touch;\n}\n\ninterface Touch {\n\tidentifier: number;\n\ttarget: EventTarget;\n\tscreenX: number;\n\tscreenY: number;\n\tclientX: number;\n\tclientY: number;\n\tpageX: number;\n\tpageY: number;\n}\n\ninterface Window {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface Document {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface HTMLElement {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ndeclare var ontouchstart: (ev: TouchEvent) => any;\ndeclare var ontouchmove: (ev: TouchEvent) => any;\ndeclare var ontouchend: (ev: TouchEvent) => any;\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\n\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n\n",
    "export {default as DefaultMaterialManager}\t\t\tfrom \"awayjs-display/lib/managers/DefaultMaterialManager\";\nexport {default as FrameScriptManager}\t\t\t\tfrom \"awayjs-display/lib/managers/FrameScriptManager\";\nexport {default as MouseManager}\t\t\t\t\tfrom \"awayjs-display/lib/managers/MouseManager\";\nexport {default as TouchManager}\t\t\t\t\tfrom \"awayjs-display/lib/managers/TouchManager\";",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport MaterialBase\t\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\nimport Single2DTexture\t\t\t\tfrom \"awayjs-display/lib/textures/Single2DTexture\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase\n{\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\n\n    private _preserveAlpha:boolean = false;\n    private _texture:TextureBase;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BasicMaterial.assetType;\n\t}\n\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(image?:Image2D, alpha?:number);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(imageColor:any = null, alpha:number = 1)\n\t{\n\t\tsuper(imageColor, alpha);\n\n        //set a texture if an image is present\n        if (imageColor instanceof Image2D)\n            this.texture = new Single2DTexture();\n\t}\n\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n\n        this._preserveAlpha = value;\n\n        this.invalidate();\n    }\n\n\n    /**\n     * The texture object to use for the albedo colour.\n     */\n    public get texture():TextureBase\n    {\n        return this._texture;\n    }\n\n    public set texture(value:TextureBase)\n    {\n        if (this._texture == value)\n            return;\n\n        if (this._texture)\n            this.removeTexture(this._texture);\n\n        this._texture = value;\n\n        if (this._texture)\n            this.addTexture(this._texture);\n\n        this.invalidateTexture();\n    }\n}\n\nexport default BasicMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport default LightSources;",
    "import BlendMode\t\t\t\t\tfrom \"awayjs-core/lib/image/BlendMode\";\nimport ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport ColorTransform\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport AssetBase\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nimport IAnimationSet\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimationSet\";\nimport IAnimator\t\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimator\";\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport IRenderable\t\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nimport SurfaceEvent\t\t\t\t\tfrom \"awayjs-display/lib/events/SurfaceEvent\";\nimport LightPickerBase\t\t\t\tfrom \"awayjs-display/lib/materials/lightpickers/LightPickerBase\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\nimport Style\t\t\t\t\t\tfrom \"awayjs-display/lib/base/Style\";\nimport StyleEvent\t\t\t\t\tfrom \"awayjs-display/lib/events/StyleEvent\";\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends AssetBase implements ISurface\n{\n\tprivate _textures:Array<TextureBase> = new Array<TextureBase>();\n\tprivate _colorTransform:ColorTransform;\n\tprivate _pUseColorTransform:boolean = false;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate _style:Style = new Style();\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderable> = new Array<IRenderable>();\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _imageRect:boolean = false;\n\tprivate _curves:boolean = false;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tprivate _onLightChangeDelegate:(event:AssetEvent) => void;\n\tprivate _onTextureInvalidateDelegate:(event:AssetEvent) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor(image?:ImageBase, alpha?:number);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(imageColor:any = null, alpha:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tif (imageColor instanceof ImageBase)\n\t\t\tthis._style.image = <ImageBase> imageColor;\n\t\telse if (imageColor)\n\t\t\tthis._style.color = Number(imageColor);\n\n\t\tthis.alpha = alpha;\n\n\t\tthis._onLightChangeDelegate = (event:AssetEvent) => this.onLightsChange(event);\n\t\tthis._onTextureInvalidateDelegate = (event:AssetEvent) => this.onTextureInvalidate(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(AssetEvent.INVALIDATE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(AssetEvent.INVALIDATE, this._onLightChangeDelegate);\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether material should use curves. Defaults to false.\n\t */\n\tpublic get curves():boolean\n\t{\n\t\treturn this._curves;\n\t}\n\n\tpublic set curves(value:boolean)\n\t{\n\t\tif (this._curves == value)\n\t\t\treturn;\n\n\t\tthis._curves = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use an atlas. Defaults to false.\n\t */\n\tpublic get imageRect():boolean\n\t{\n\t\treturn this._imageRect;\n\t}\n\n\tpublic set imageRect(value:boolean)\n\t{\n\t\tif (this._imageRect == value)\n\t\t\treturn;\n\n\t\tthis._imageRect = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\n\t/**\n\t * The style used to render the current TriangleGraphic. If set to null, its parent Sprite's style will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get useColorTransform():boolean\n\t{\n\t\treturn this._pUseColorTransform;\n\t}\n\n\tpublic set useColorTransform(value:boolean)\n\t{\n\t\tif (this._pUseColorTransform == value)\n\t\t\treturn;\n\n\t\tthis._pUseColorTransform = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderable as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderable that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderable)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.invalidateSurface();\n\t}\n\n\t/**\n\t * Removes an IRenderable as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderable)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.invalidateSurface();\n\t}\n\n\t/**\n\t * A list of the IRenderables that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderable>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic getNumTextures():number\n\t{\n\t\treturn this._textures.length;\n\t}\n\n\tpublic getTextureAt(index:number):TextureBase\n\t{\n\t\treturn this._textures[index];\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic invalidatePasses()\n\t{\n\t\tthis.dispatchEvent(new SurfaceEvent(SurfaceEvent.INVALIDATE_PASSES, this));\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tthis.dispatchEvent(new SurfaceEvent(SurfaceEvent.INVALIDATE_ANIMATION, this));\n\t}\n\n\tpublic invalidateSurfaces()\n\t{\n\t\tvar len:number = this._owners.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._owners[i].invalidateSurface();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:AssetEvent)\n\t{\n\t\tthis.invalidate();\n\t}\n\n\tpublic invalidateTexture()\n\t{\n\t\tthis.dispatchEvent(new SurfaceEvent(SurfaceEvent.INVALIDATE_TEXTURE, this));\n\t}\n\n\tpublic addTextureAt(texture:TextureBase, index:number)\n\t{\n\t\tvar i:number = this._textures.indexOf(texture);\n\n\t\tif (i == index)\n\t\t\treturn;\n\t\telse if (i != -1)\n\t\t\tthis._textures.splice(i, 1);\n\n\t\tthis._textures.splice(index, 0, texture);\n\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\n\tpublic addTexture(texture:TextureBase)\n\t{\n\t\tif (this._textures.indexOf(texture) != -1)\n\t\t\treturn;\n\n\t\tthis._textures.push(texture);\n\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\t\n\tpublic removeTexture(texture:TextureBase)\n\t{\n\t\tthis._textures.splice(this._textures.indexOf(texture), 1);\n\n\t\ttexture.removeEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\t\n\tprivate onTextureInvalidate(event:AssetEvent = null)\n\t{\n\t\tthis.invalidatePasses();\n\n\t\t//invalidate renderables for number of images getter (in case it has changed)\n\t\tthis.invalidateSurfaces();\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidatePasses();\n\t}\n}\n\nexport default MaterialBase;",
    "import Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport AssetBase\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nimport IEntity\t\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport LightBase\t\t\t\t\tfrom \"awayjs-display/lib/display/LightBase\";\nimport DirectionalLight\t\t\t\tfrom \"awayjs-display/lib/display/DirectionalLight\";\nimport LightProbe\t\t\t\t\tfrom \"awayjs-display/lib/display/LightProbe\";\nimport PointLight\t\t\t\t\tfrom \"awayjs-display/lib/display/PointLight\";\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends AssetBase\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(entity:IEntity)\n\t{\n\t\tthis.updateProbeWeights(entity);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(entity:IEntity)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleGraphic. See if this can be improved.\n\t\tvar objectPos:Vector3D = entity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport default LightPickerBase;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\n\nimport LightBase\t\t\t\t\tfrom \"awayjs-display/lib/display/LightBase\";\nimport DirectionalLight\t\t\t\tfrom \"awayjs-display/lib/display/DirectionalLight\";\nimport LightProbe\t\t\t\t\tfrom \"awayjs-display/lib/display/LightProbe\";\nimport PointLight\t\t\t\t\tfrom \"awayjs-display/lib/display/PointLight\";\nimport LightEvent\t\t\t\t\tfrom \"awayjs-display/lib/events/LightEvent\";\nimport LightPickerBase\t\t\t\tfrom \"awayjs-display/lib/materials/lightpickers/LightPickerBase\";\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:(event:LightEvent) => void;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.shadowsEnabled)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.shadowsEnabled)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.shadowsEnabled) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.shadowsEnabled) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport default StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Matrix3DUtils\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport FreeMatrixProjection\t\t\tfrom \"awayjs-core/lib/projections/FreeMatrixProjection\";\nimport IProjection\t\t\t\t\tfrom \"awayjs-core/lib/projections/IProjection\";\n\nimport IRenderer\t\t\t\t\tfrom \"awayjs-display/lib/IRenderer\";\nimport Scene\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Scene\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport DirectionalShadowMapper\t\tfrom \"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\";\nimport Single2DTexture\t\t\t\tfrom \"awayjs-display/lib/textures/Single2DTexture\";\n\nclass CascadeShadowMapper extends DirectionalShadowMapper\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\t}\n\n\tpublic pDrawDepthMap(scene:Scene, target:Single2DTexture, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\trenderer.cullPlanes = this._pCullPlanes;\n\t\trenderer._iRenderCascades(this._pOverallDepthCamera, scene, target.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(camera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = camera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(camera, camera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(camera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport default CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageCube\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport PerspectiveProjection\t\tfrom \"awayjs-core/lib/projections/PerspectiveProjection\";\n\nimport Scene\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Scene\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport PointLight\t\t\t\t\tfrom \"awayjs-display/lib/display/PointLight\";\nimport ShadowMapperBase\t\t\t\tfrom \"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\";\nimport IRenderer\t\t\t\t\tfrom \"awayjs-display/lib/IRenderer\";\nimport SingleCubeTexture\t\t\tfrom \"awayjs-display/lib/textures/SingleCubeTexture\";\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():SingleCubeTexture\n\t{\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(camera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.moveTo(pos.x, pos.y, pos.z);\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(scene:Scene, target:SingleCubeTexture, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tif (this._needsRender[i])\n\t\t\t\trenderer._iRender(this._depthCameras[i], scene, target.imageCube, null, i)\n\t}\n}\n\nexport default CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Matrix3DUtils\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport Plane3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport FreeMatrixProjection\t\t\tfrom \"awayjs-core/lib/projections/FreeMatrixProjection\";\n\nimport Scene\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Scene\";\nimport IRenderer\t\t\t\t\tfrom \"awayjs-display/lib/IRenderer\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport DirectionalLight\t\t\t\tfrom \"awayjs-display/lib/display/DirectionalLight\";\nimport ShadowMapperBase\t\t\t\tfrom \"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\";\nimport Single2DTexture\t\t\t\tfrom \"awayjs-display/lib/textures/Single2DTexture\";\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tsuper.iSetDepthMap(depthMap);\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = depthMap.image2D.rect.width;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic pCreateDepthTexture():Single2DTexture\n\t{\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(scene:Scene, target:Single2DTexture, renderer:IRenderer)\n\t{\n\t\trenderer.cullPlanes = this._pCullPlanes;\n\t\trenderer._iRender(this._pOverallDepthCamera, scene, target.image2D);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(camera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = camera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(camera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(camera, camera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(camera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(camera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((camera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((camera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((camera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(camera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport default DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport DirectionalShadowMapper\t\tfrom \"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\";\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(camera:Camera)\n\t{\n\t\tvar corners:Array<number> = camera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(camera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport default NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport AssetBase\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nimport Scene\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Scene\";\nimport LightBase\t\t\t\t\tfrom \"awayjs-display/lib/display/LightBase\";\nimport IRenderer\t\t\t\t\tfrom \"awayjs-display/lib/IRenderer\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\nclass ShadowMapperBase extends AssetBase\n{\n\tpublic _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tpublic _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase)\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic iRenderDepthMap(camera:Camera, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(scene, this._depthMap, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(camera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(scene:Scene, target:TextureBase, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport default ShadowMapperBase;",
    "export {default as LightPickerBase}\t\t\t\t\tfrom \"awayjs-display/lib/materials/lightpickers/LightPickerBase\";\nexport {default as StaticLightPicker}\t\t\t\tfrom \"awayjs-display/lib/materials/lightpickers/StaticLightPicker\";\nexport {default as CascadeShadowMapper}\t\t\t\tfrom \"awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper\";\nexport {default as CubeMapShadowMapper}\t\t\t\tfrom \"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\";\nexport {default as DirectionalShadowMapper}\t\t\tfrom \"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\";\nexport {default as NearDirectionalShadowMapper}\t\tfrom \"awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper\";\nexport {default as ShadowMapperBase}\t\t\t\tfrom \"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\";\nexport {default as BasicMaterial}\t\t\t\t\tfrom \"awayjs-display/lib/materials/BasicMaterial\";\nexport {default as LightSources}\t\t\t\t\tfrom \"awayjs-display/lib/materials/LightSources\";\nexport {default as MaterialBase}\t\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";",
    "import DisplayObject from \"awayjs-display/lib/display/DisplayObject\";\n\nimport NodeBase\t\t\t\t\t\tfrom \"awayjs-display/lib/partition/NodeBase\";\nimport PartitionBase\t\t\t\tfrom \"awayjs-display/lib/partition/PartitionBase\";\n\n\n/**\n * @class away.partition.Partition\n */\nclass BasicPartition extends PartitionBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._rootNode = new NodeBase();\n\t}\n}\n\nexport default BasicPartition;",
    "import EntityNode\t\t\t\t\tfrom \"awayjs-display/lib/partition/EntityNode\";\nimport ITraverser\t\t\t\tfrom \"awayjs-display/lib/ITraverser\";\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\t// todo: dead end for now, if it has a debug sprite, then sure accept that\n\t}\n}\n\nexport default CameraNode;",
    "import EntityNode\t\t\t\t\tfrom \"awayjs-display/lib/partition/EntityNode\";\nimport ITraverser\t\t\t\tfrom \"awayjs-display/lib/ITraverser\";\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport default DirectionalLightNode;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\nimport AbstractionBase\t\t\t\tfrom \"awayjs-core/lib/library/AbstractionBase\";\n\nimport Plane3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport DisplayObject\t\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport AxisAlignedBoundingBox\t\tfrom \"awayjs-display/lib/bounds/AxisAlignedBoundingBox\";\nimport BoundingSphere\t\t\t\tfrom \"awayjs-display/lib/bounds/BoundingSphere\";\nimport BoundingVolumeBase\t\t\tfrom \"awayjs-display/lib/bounds/BoundingVolumeBase\";\nimport BoundsType\t\t\t\t\tfrom \"awayjs-display/lib/bounds/BoundsType\";\nimport NullBounds\t\t\t\t\tfrom \"awayjs-display/lib/bounds/NullBounds\";\nimport SceneGraphNode\t\t\t\tfrom \"awayjs-display/lib/partition/SceneGraphNode\";\nimport ITraverser\t\t\t\t\tfrom \"awayjs-display/lib/ITraverser\";\nimport IEntity\t\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport DisplayObjectEvent\t\t\tfrom \"awayjs-display/lib/events/DisplayObjectEvent\";\nimport INode\t\t\t\t\t\tfrom \"awayjs-display/lib/partition/INode\";\n\n/**\n * @class away.partition.EntityNode\n */\nclass DisplayObjectNode extends AbstractionBase implements INode\n{\n\tpublic numEntities:number = 0;\n\n\tpublic isSceneGraphNode:boolean = false;\n\n\tpublic _iUpdateQueueNext:DisplayObjectNode;\n\n\tprivate _onInvalidatePartitionBoundsDelegate:(event:DisplayObjectEvent) => void;\n\t\n\tpublic _displayObject:DisplayObject;\n\tprivate _boundsDirty:boolean = true;\n\tprivate _bounds:BoundingVolumeBase;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic parent:SceneGraphNode;\n\n\tprivate _boundsType:string;\n\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._displayObject.debugVisible;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get bounds():BoundingVolumeBase\n\t{\n\t\tif (this._boundsDirty)\n\t\t\tthis._updateBounds();\n\n\t\treturn this._bounds;\n\t}\n\n\tconstructor(displayObject:DisplayObject, pool:IAbstractionPool)\n\t{\n\t\tsuper(displayObject, pool);\n\n\t\tthis._onInvalidatePartitionBoundsDelegate = (event:DisplayObjectEvent) => this._onInvalidatePartitionBounds(event);\n\n\t\tthis._displayObject = displayObject;\n\t\tthis._displayObject.addEventListener(DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this._onInvalidatePartitionBoundsDelegate);\n\n\t\tthis._boundsType = this._displayObject.boundsType;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this._displayObject.castsShadows;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._displayObject.removeEventListener(DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this._onInvalidatePartitionBoundsDelegate);\n\t\tthis._displayObject = null;\n\n\t\tif (this._bounds)\n\t\t\tthis._bounds.dispose();\n\n\t\tthis._bounds = null;\n\t}\n\n\tpublic onInvalidate(event:AssetEvent)\n\t{\n\t\tsuper.onInvalidate(event);\n\n\t\tif (this._boundsType != this._displayObject.boundsType) {\n\t\t\tthis._boundsType = this._displayObject.boundsType;\n\t\t\tthis._boundsDirty = true;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\t// do nothing here\n\t}\n\n\tpublic _onInvalidatePartitionBounds(event:DisplayObjectEvent)\n\t{\n\t\t// do nothing here\n\t}\n\n\tprivate _updateBounds()\n\t{\n\t\tif (this._bounds)\n\t\t\tthis._bounds.dispose();\n\n\t\tif (this._boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._displayObject);\n\t\telse if (this._boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._displayObject);\n\t\telse if (this._boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis._boundsDirty = false;\n\t}\n}\n\nexport default DisplayObjectNode;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Plane3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport DisplayObject\t\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport ITraverser\t\t\t\t\tfrom \"awayjs-display/lib/ITraverser\";\nimport DisplayObjectEvent\t\t\tfrom \"awayjs-display/lib/events/DisplayObjectEvent\";\nimport PickingCollision\t\t\t\tfrom \"awayjs-display/lib/pick/PickingCollision\";\nimport DisplayObjectNode\t\t\tfrom \"awayjs-display/lib/partition/DisplayObjectNode\";\nimport PartitionBase\t\t\t\tfrom \"awayjs-display/lib/partition/PartitionBase\";\n\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends DisplayObjectNode\n{\n\tpublic numEntities:number = 1;\n\n\tprivate _partition:PartitionBase;\n\tprivate _maskPosition:Vector3D = new Vector3D();\n\n\n\tconstructor(displayObject:DisplayObject, partition:PartitionBase)\n\t{\n\t\tsuper(displayObject, partition);\n\n\t\tthis._partition = partition;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._partition = null;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._displayObject._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(globalRayPosition:Vector3D, globalRayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._displayObject._iIsVisible() || !this.isIntersectingMasks(globalRayPosition, globalRayDirection, this._displayObject._iAssignedMasks()))\n\t\t\treturn false;\n\n\t\tvar pickingCollision:PickingCollision = this._displayObject._iPickingCollision;\n\t\tpickingCollision.rayPosition = this._displayObject.inverseSceneTransform.transformVector(globalRayPosition);\n\t\tpickingCollision.rayDirection = this._displayObject.inverseSceneTransform.deltaTransformVector(globalRayDirection);\n\n\t\tif (!pickingCollision.normal)\n\t\t\tpickingCollision.normal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this.bounds.rayIntersection(pickingCollision.rayPosition, pickingCollision.rayDirection, pickingCollision.normal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollision.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollision.globalRayPosition = globalRayPosition;\n\t\tpickingCollision.globalRayDirection = globalRayDirection;\n\t\tpickingCollision.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyEntity(this._displayObject);\n\t}\n\n\tpublic _onInvalidatePartitionBounds(event:DisplayObjectEvent)\n\t{\n\t\tthis.bounds.invalidate();\n\n\t\tthis._partition.iMarkForUpdate(this);\n\t}\n\n\tprivate isIntersectingMasks(globalRayPosition:Vector3D, globalRayDirection:Vector3D, masks:Array<Array<DisplayObject>>)\n\t{\n\t\t//horrible hack for 2d masks\n\t\tif (masks != null) {\n\t\t\tthis._maskPosition.x = globalRayPosition.x + globalRayDirection.x*1000;\n\t\t\tthis._maskPosition.y = globalRayPosition.y + globalRayDirection.y*1000;\n\t\t\tvar numLayers:number = masks.length;\n\t\t\tvar children:Array<DisplayObject>;\n\t\t\tvar numChildren:number;\n\t\t\tvar layerHit:boolean;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\tchildren = masks[i];\n\t\t\t\tnumChildren = children.length;\n\t\t\t\tlayerHit = false;\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++) {\n\t\t\t\t\tif (children[j].hitTestPoint(this._maskPosition.x, this._maskPosition.y, true, true)) {\n\t\t\t\t\t\tlayerHit = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!layerHit)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n}\n\nexport default EntityNode;",
    "import EntityNode\t\t\t\t\tfrom \"awayjs-display/lib/partition/EntityNode\";\nimport ITraverser\t\t\t\tfrom \"awayjs-display/lib/ITraverser\";\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport default LightProbeNode;",
    "import DisplayObject\t\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport Plane3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\n\nimport ITraverser\t\t\t\t\tfrom \"awayjs-display/lib/ITraverser\";\nimport IEntity\t\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport INode\t\t\t\t\t\tfrom \"awayjs-display/lib/partition/INode\";\nimport IContainerNode\t\t\t\tfrom \"awayjs-display/lib/partition/IContainerNode\";\nimport BoundingVolumeBase\t\t\tfrom \"awayjs-display/lib/bounds/BoundingVolumeBase\";\nimport NullBounds from \"awayjs-display/lib/bounds/NullBounds\";\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase implements IContainerNode\n{\n\tprivate _bounds:BoundingVolumeBase = new NullBounds();\n\tpublic _pChildNodes:Array<INode> = new Array<INode>();\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic numEntities:number = 0;\n\n\tpublic parent:IContainerNode;\n\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get bounds():BoundingVolumeBase\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.parent = null;\n\t\tthis._pChildNodes = null;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\tif (this.numEntities == 0)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tfor (var i:number = 0; i < this._pNumChildNodes; i++)\n\t\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:INode)\n\t{\n\t\tnode.parent = this;\n\t\tthis.numEntities += node.numEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities += numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:INode)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities -= numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n}\n\nexport default NodeBase;",
    "import IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\nimport IAssetClass\t\t\t\t\tfrom \"awayjs-core/lib/library/IAssetClass\";\n\nimport ITraverser\t\t\t\t\tfrom \"awayjs-display/lib/ITraverser\";\nimport DisplayObject\t\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport EntityNode\t\t\t\t\tfrom \"awayjs-display/lib/partition/EntityNode\";\nimport IEntityNodeClass\t\t\t\tfrom \"awayjs-display/lib/partition/IEntityNodeClass\";\nimport DisplayObjectNode\t\t\tfrom \"awayjs-display/lib/partition/DisplayObjectNode\";\nimport IContainerNode\t\t\t\tfrom \"awayjs-display/lib/partition/IContainerNode\";\n\n/**\n * @class away.partition.Partition\n */\nclass PartitionBase implements IAbstractionPool\n{\n\tprivate static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\n\tpublic _rootNode:IContainerNode;\n\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:DisplayObjectNode;\n\n\tconstructor()\n\t{\n\t}\n\n\tpublic getAbstraction(displayObject:DisplayObject):EntityNode\n\t{\n\t\treturn (this._abstractionPool[displayObject.id] || (this._abstractionPool[displayObject.id] = new (<IEntityNodeClass> PartitionBase._abstractionClassPool[displayObject.assetType])(displayObject, this)));\n\t}\n\n\t/**\n\t *\n\t * @param image\n\t */\n\tpublic clearAbstraction(displayObject:DisplayObject)\n\t{\n\t\tthis._abstractionPool[displayObject.id] = null;\n\t}\n\n\tpublic traverse(traverser:ITraverser)\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tif (this._rootNode) {\n\t\t\tthis._rootNode.acceptTraverser(traverser);\n\t\t}\n\t}\n\n\tpublic iMarkForUpdate(node:DisplayObjectNode)\n\t{\n\t\tvar t:DisplayObjectNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:DisplayObjectNode)\n\t{\n\t\tvar t:DisplayObjectNode;\n\n\t\tif (node.parent) {\n\t\t\tnode.parent.iRemoveNode(node);\n\t\t\tnode.parent = null;\n\t\t}\n\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:DisplayObjectNode):IContainerNode\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:DisplayObjectNode = this._updateQueue;\n\t\twhile (node) {\n\t\t\t//required for controllers with autoUpdate set to true and queued events\n\t\t\tnode._displayObject._iInternalUpdate();\n\t\t\tnode = node._iUpdateQueueNext;\n\t\t}\n\n\t\t//reset head\n\t\tnode = this._updateQueue;\n\t\tvar targetNode:IContainerNode;\n\t\tvar t:DisplayObjectNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this.findParentForNode(node);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node.parent)\n\t\t\t\t\tnode.parent.iRemoveNode(node);\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t} while ((node = t) != null);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iMarkForUpdate(this.getAbstraction(displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iRemoveEntity(this.getAbstraction(displayObject));\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(entityNodeClass:IEntityNodeClass, assetClass:IAssetClass)\n\t{\n\t\tPartitionBase._abstractionClassPool[assetClass.assetType] = entityNodeClass;\n\t}\n}\n\nexport default PartitionBase;",
    "import EntityNode\t\t\t\t\tfrom \"awayjs-display/lib/partition/EntityNode\";\nimport ITraverser\t\t\t\tfrom \"awayjs-display/lib/ITraverser\";\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport default PointLightNode;",
    "import ITraverser\t\t\t\tfrom \"awayjs-display/lib/ITraverser\";\nimport DisplayObjectNode\t\t\tfrom \"awayjs-display/lib/partition/DisplayObjectNode\";\nimport EntityNode\t\t\t\t\tfrom \"awayjs-display/lib/partition/EntityNode\";\nimport IContainerNode\t\t\t\tfrom \"awayjs-display/lib/partition/IContainerNode\";\n\n/**\n * Maintains scenegraph heirarchy when collecting nodes\n */\nclass SceneGraphNode extends DisplayObjectNode implements IContainerNode\n{\n\tpublic isSceneGraphNode:boolean = true;\n\n\tprivate _pChildNodes:Array<DisplayObjectNode> = new Array<DisplayObjectNode>();\n\tprivate _childDepths:Array<number> = new Array<number>();\n\tprivate _childMasks:Array<DisplayObjectNode> = new Array<DisplayObjectNode>();\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\t//containers nodes are for ordering only, no need to check enterNode or debugVisible\n\t\tif (this.numEntities == 0)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tfor (i = this._pChildNodes.length - 1; i >= 0; i--)\n\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\n\n\t\tfor (i = this._childMasks.length - 1; i >= 0; i--)\n\t\t\tthis._childMasks[i].acceptTraverser(traverser);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:DisplayObjectNode)\n\t{\n\t\tnode.parent = this;\n\n\t\tif (node._displayObject.maskMode) {\n\t\t\tthis._childMasks.push(node);\n\t\t} else {\n\t\t\tvar depth:number = node._displayObject._depthID;\n\t\t\tvar len:number = this._childDepths.length;\n\t\t\tvar index:number = len;\n\n\t\t\twhile (index--)\n\t\t\t\tif (this._childDepths[index] < depth)\n\t\t\t\t\tbreak;\n\n\t\t\tindex++;\n\n\t\t\tif (index < len) {\n\t\t\t\tthis._pChildNodes.splice(index, 0, node);\n\t\t\t\tthis._childDepths.splice(index, 0, depth);\n\t\t\t} else {\n\t\t\t\tthis._pChildNodes.push(node);\n\t\t\t\tthis._childDepths.push(depth);\n\t\t\t}\n\t\t}\n\n\t\tvar numEntities:number = node.isSceneGraphNode? (<SceneGraphNode> node).numEntities : 1;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities += numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:DisplayObjectNode)\n\t{\n\t\tif (node._displayObject.maskMode) {\n\t\t\tthis._childMasks.splice(this._childMasks.indexOf(node), 1);\n\t\t} else {\n\t\t\tvar index:number = this._pChildNodes.indexOf(node);\n\n\t\t\tthis._pChildNodes.splice(index, 1);\n\t\t\tthis._childDepths.splice(index, 1);\n\t\t}\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities -= numEntities;\n\t\t} while ((node = <DisplayObjectNode> node.parent) != null);\n\t}\n}\nexport default SceneGraphNode;",
    "import IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\n\nimport DisplayObject\t\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport DisplayObjectContainer\t\tfrom \"awayjs-display/lib/display/DisplayObjectContainer\";\nimport ITraverser\t\t\t\tfrom \"awayjs-display/lib/ITraverser\";\nimport SceneGraphNode\t\t\t\tfrom \"awayjs-display/lib/partition/SceneGraphNode\";\nimport PartitionBase\t\t\t\tfrom \"awayjs-display/lib/partition/PartitionBase\";\nimport IContainerNode\t\t\t\tfrom \"awayjs-display/lib/partition/IContainerNode\";\nimport DisplayObjectNode\t\t\tfrom \"awayjs-display/lib/partition/DisplayObjectNode\";\n\n/**\n * @class away.partition.Partition\n */\nclass SceneGraphPartition extends PartitionBase\n{\n\tprivate _sceneGraphNodePool:SceneGraphNodePool;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._sceneGraphNodePool = new SceneGraphNodePool();\n\t}\n\n\tpublic traverse(traverser:ITraverser)\n\t{\n\t\tsuper.traverse(traverser);\n\t}\n\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:DisplayObjectNode):IContainerNode\n\t{\n\t\tif (node.isSceneGraphNode && (node._displayObject.partition == this || node._displayObject._iIsRoot)) {\n\t\t\tthis._rootNode = <SceneGraphNode> node;\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!node.isSceneGraphNode && node._displayObject.isContainer)\n\t\t\treturn this._sceneGraphNodePool.getAbstraction(<DisplayObjectContainer> node._displayObject);\n\n\t\treturn this._sceneGraphNodePool.getAbstraction(node._displayObject.parent);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iRegisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iMarkForUpdate(this._sceneGraphNodePool.getAbstraction(<DisplayObjectContainer> displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iUnregisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iRemoveEntity(this._sceneGraphNodePool.getAbstraction(<DisplayObjectContainer> displayObject));\n\t}\n}\n\nexport default SceneGraphPartition;\n\n\n/**\n * @class away.pool.SceneGraphNodePool\n */\nclass SceneGraphNodePool implements IAbstractionPool\n{\n\tprivate _abstractionPool:Object = new Object();\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getAbstraction(displayObjectContainer:DisplayObjectContainer):SceneGraphNode\n\t{\n\t\treturn (this._abstractionPool[displayObjectContainer.id] || (this._abstractionPool[displayObjectContainer.id] = new SceneGraphNode(displayObjectContainer, this)));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic clearAbstraction(displayObjectContainer:DisplayObjectContainer)\n\t{\n\t\tdelete this._abstractionPool[displayObjectContainer.id];\n\t}\n}",
    "import Plane3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\n\nimport EntityNode\t\t\t\t\tfrom \"awayjs-display/lib/partition/EntityNode\";\nimport ITraverser\t\t\t\tfrom \"awayjs-display/lib/ITraverser\";\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applySkybox(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._displayObject._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport default SkyboxNode;",
    "export {default as BasicPartition}\t\t\t\t\tfrom \"awayjs-display/lib/partition/BasicPartition\";\nexport {default as CameraNode}\t\t\t\t\t\tfrom \"awayjs-display/lib/partition/CameraNode\";\nexport {default as DirectionalLightNode}\t\t\tfrom \"awayjs-display/lib/partition/DirectionalLightNode\";\nexport {default as DisplayObjectNode}\t\t\t\tfrom \"awayjs-display/lib/partition/DisplayObjectNode\";\nexport {default as EntityNode}\t\t\t\t\t\tfrom \"awayjs-display/lib/partition/EntityNode\";\nexport {default as IContainerNode}\t\t\t\t\tfrom \"awayjs-display/lib/partition/IContainerNode\";\nexport {default as IDisplayObjectNode}\t\t\t\tfrom \"awayjs-display/lib/partition/IDisplayObjectNode\";\nexport {default as IEntityNodeClass}\t\t\t\tfrom \"awayjs-display/lib/partition/IEntityNodeClass\";\nexport {default as INode}\t\t\t\t\t\t\tfrom \"awayjs-display/lib/partition/INode\";\nexport {default as LightProbeNode}\t\t\t\t\tfrom \"awayjs-display/lib/partition/LightProbeNode\";\nexport {default as NodeBase}\t\t\t\t\t\tfrom \"awayjs-display/lib/partition/NodeBase\";\nexport {default as PartitionBase}\t\t\t\t\tfrom \"awayjs-display/lib/partition/PartitionBase\";\nexport {default as PointLightNode}\t\t\t\t\tfrom \"awayjs-display/lib/partition/PointLightNode\";\nexport {default as SceneGraphNode}\t\t\t\t\tfrom \"awayjs-display/lib/partition/SceneGraphNode\";\nexport {default as SceneGraphPartition}\t\t\t\tfrom \"awayjs-display/lib/partition/SceneGraphPartition\";\nexport {default as SkyboxNode}\t\t\t\t\t\tfrom \"awayjs-display/lib/partition/SkyboxNode\";\n",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport Point\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport LineElements\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/LineElements\";\nimport TriangleElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Billboard\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Billboard\";\nimport PickingCollision\t\t\t\t\tfrom \"awayjs-display/lib/pick/PickingCollision\";\nimport IPickingCollider\t\t\t\t\tfrom \"awayjs-display/lib/pick/IPickingCollider\";\nimport MaterialBase\t\t\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\n\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollision The collision object used to store the collision results\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollision:PickingCollision)\n\t{\n\t\tpickingCollision.renderable = null;\n\n\t\t//if (this._testGraphicCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollision, shortestCollisionDistance)) {\n\t\t//\tshortestCollisionDistance = pickingCollision.rayEntryDistance;\n\t\t//\n\t\t//\tpickingCollision.renderable = billboard;\n\t\t//\n\t\t//\treturn true;\n\t\t//}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>TriangleElements</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleElements\n\t * @param material\n\t * @param pickingCollision\n\t * @returns {boolean}\n\t */\n\tpublic testTriangleCollision(triangleElements:TriangleElements, material:MaterialBase, pickingCollision:PickingCollision):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollision.rayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollision.rayDirection;\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\t\tvar positions:ArrayBufferView = triangleElements.positions.get(triangleElements.numVertices);\n\t\tvar posDim:number = triangleElements.positions.dimensions;\n\n\t\tvar indices:Uint16Array;\n\t\tvar count:number;\n\t\tif (triangleElements.indices) {\n\t\t\tindices = triangleElements.indices.get(triangleElements.numElements);\n\t\t\tcount = indices.length;\n\t\t} else {\n\t\t\tcount = triangleElements.numVertices;\n\t\t}\n\n\t\tfor (var index:number = 0; index < count; index+=3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\tif (indices) {\n\t\t\t\ti0 = indices[index]*posDim;\n\t\t\t\ti1 = indices[index + 1]*posDim;\n\t\t\t\ti2 = indices[index + 2]*posDim;\n\t\t\t} else {\n\t\t\t\ti0 = index*posDim;\n\t\t\t\ti1 = (index + 1)*posDim;\n\t\t\t\ti2 = (index + 2)*posDim;\n\t\t\t}\n\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positions[i0];\n\t\t\tp1x = positions[i1];\n\t\t\tp2x = positions[i2];\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\n\t\t\tp0y = positions[i0 + 1];\n\t\t\tp1y = positions[i1 + 1];\n\t\t\tp2y = positions[i2 + 1];\n\t\t\ts0y = p1y - p0y;\n\t\t\ts1y = p2y - p0y;\n\n\t\t\tif (posDim == 3) {\n\t\t\t\tp0z = positions[i0 + 2];\n\t\t\t\tp1z = positions[i1 + 2];\n\t\t\t\tp2z = positions[i2 + 2];\n\t\t\t\ts0z = p1z - p0z;\n\t\t\t\ts1z = p2z - p0z;\n\n\t\t\t\t// evaluate sides and triangle normal\n\t\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\t\tnx *= nl;\n\t\t\t\tny *= nl;\n\t\t\t\tnz *= nl;\n\t\t\t} else { //2d hittest\n\t\t\t\tnx = 0;\n\t\t\t\tny = 0;\n\t\t\t\tnz = 1;\n\t\t\t}\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < pickingCollision.rayEntryDistance) { // all tests passed\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollision.rayEntryDistance = t;\n\t\t\t\t\tpickingCollision.position = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollision.normal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tif (triangleElements.uvs) { //uv calculations\n\t\t\t\t\t\tvar uvs:ArrayBufferView = triangleElements.uvs.get(triangleElements.numVertices);\n\t\t\t\t\t\tvar uvDim:number = triangleElements.uvs.dimensions;\n\n\t\t\t\t\t\tvar uIndex:number = indices[index]*uvDim;\n\t\t\t\t\t\tvar uv0:Vector3D = new Vector3D(uvs[uIndex], uvs[uIndex + 1]);\n\t\t\t\t\t\tuIndex = indices[index + 1]*uvDim;\n\t\t\t\t\t\tvar uv1:Vector3D = new Vector3D(uvs[uIndex], uvs[uIndex + 1]);\n\t\t\t\t\t\tuIndex = indices[index + 2]*uvDim;\n\t\t\t\t\t\tvar uv2:Vector3D = new Vector3D(uvs[uIndex], uvs[uIndex + 1]);\n\t\t\t\t\t\tpickingCollision.uv = new Point(u*uv0.x + v*uv1.x + w*uv2.x, u*uv0.y + v*uv1.y + w*uv2.y);\n\t\t\t\t\t}\n\t\t\t\t\tpickingCollision.elementIndex = collisionTriangleIndex;\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\t//\n\t///**\n\t// * Tests a <code>CurveElements</code> object for a collision with the picking ray.\n\t// *\n\t// * @param triangleElements\n\t// * @param material\n\t// * @param pickingCollision\n\t// * @returns {boolean}\n\t// */\n\t//public testCurveCollision(curveElements:CurveElements, material:MaterialBase, pickingCollision:PickingCollision, shortestCollisionDistance:number):boolean\n\t//{\n\t//\tvar rayPosition:Vector3D = pickingCollision.localRayPosition;\n\t//\tvar rayDirection:Vector3D = pickingCollision.localRayDirection;\n\t//\n\t//\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n\t//\t//this will only work while all points lie on the x/y plane\n\t//\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n\t//\n\t//\tvar result:Vector3D = new Vector3D();\n\t//\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n\t//\tresult.x = rayPosition.x - ( plane.x*distance);\n\t//\tresult.y = rayPosition.y - ( plane.y*distance);\n\t//\tresult.z = rayPosition.z - ( plane.z*distance);\n\t//\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n\t//\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n\t//\trayDirection.scaleBy(t);\n\t//\tvar p:Vector3D = rayPosition.add(rayDirection);\n\t//\n\t//\tvar indices:Uint16Array = curveElements.indices.get(curveElements.numElements);\n\t//\tvar collisionCurveIndex:number = -1;\n\t//\tvar bothSides:boolean = material.bothSides;\n\t//\n\t//\n\t//\tvar positions:Float32Array = curveElements.positions.get(curveElements.numVertices);\n\t//\tvar posDim:number = curveElements.positions.dimensions;\n\t//\tvar curves:Float32Array = curveElements.curves.get(curveElements.numVertices);\n\t//\tvar curveDim:number = curveElements.curves.dimensions;\n\t//\tvar uvs:ArrayBufferView = curveElements.uvs.get(curveElements.numVertices);\n\t//\tvar uvDim:number = curveElements.uvs.dimensions;\n\t//\tvar numIndices:number = indices.length;\n\t//\n\t//\n\t//\tfor(var index:number = 0; index < numIndices; index+=3)\n\t//\t{\n\t//\t\tvar id0:number = indices[index];\n\t//\t\tvar id1:number = indices[index + 1] * posDim;\n\t//\t\tvar id2:number = indices[index + 2] * posDim;\n\t//\n\t//\t\tvar ax:number = positions[id0 * posDim];\n\t//\t\tvar ay:number = positions[id0 * posDim + 1];\n\t//\t\tvar bx:number = positions[id1];\n\t//\t\tvar by:number = positions[id1 + 1];\n\t//\t\tvar cx:number = positions[id2];\n\t//\t\tvar cy:number = positions[id2 + 1];\n\t//\n\t//\t\tvar curvex:number = curves[id0 * curveDim];\n\t//\t\tvar az:number = positions[id0 * posDim + 2];\n\t//\n\t//\t\t//console.log(ax, ay, bx, by, cx, cy);\n\t//\n\t//\t\t//from a to p\n\t//\t\tvar dx:number = ax - p.x;\n\t//\t\tvar dy:number = ay - p.y;\n\t//\n\t//\t\t//edge normal (a-b)\n\t//\t\tvar nx:number = by - ay;\n\t//\t\tvar ny:number = -(bx - ax);\n\t//\n\t//\t\t//console.log(ax,ay,bx,by,cx,cy);\n\t//\n\t//\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t//\t\t//console.log(\"dot a\",dot);\n\t//\t\tif (dot > 0)\n\t//\t\t\tcontinue;\n\t//\n\t//\t\tdx = bx - p.x;\n\t//\t\tdy = by - p.y;\n\t//\t\tnx = cy - by;\n\t//\t\tny = -(cx - bx);\n\t//\n\t//\t\tdot = (dx * nx) + (dy * ny);\n\t//\t\t//console.log(\"dot b\",dot);\n\t//\t\tif (dot > 0)\n\t//\t\t\tcontinue;\n\t//\n\t//\t\tdx = cx - p.x;\n\t//\t\tdy = cy - p.y;\n\t//\t\tnx = ay - cy;\n\t//\t\tny = -(ax - cx);\n\t//\n\t//\t\tdot = (dx * nx) + (dy * ny);\n\t//\t\t//console.log(\"dot c\",dot);\n\t//\t\tif (dot > 0)\n\t//\t\t\tcontinue;\n\t//\n\t//\t\t//check if not solid\n\t//\t\tif (curvex != 2) {\n\t//\n\t//\t\t\tvar v0x:number = bx - ax;\n\t//\t\t\tvar v0y:number = by - ay;\n\t//\t\t\tvar v1x:number = cx - ax;\n\t//\t\t\tvar v1y:number = cy - ay;\n\t//\t\t\tvar v2x:number = p.x - ax;\n\t//\t\t\tvar v2y:number = p.y - ay;\n\t//\n\t//\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t//\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t//\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t//\t\t\tvar u:number = 1 - v - w;\n\t//\n\t//\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n\t//\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n\t//\n\t//\t\t\tvar d:number = uu * uu - vv;\n\t//\n\t//\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n\t//\t\t\t\tcontinue;\n\t//\t\t}\n\t//\t\t//TODO optimize away this pointless check as the distance is always the same\n\t//\t\t//also this stuff should only be calculated right before the return and not for each hit\n\t//\t\tif (distance < shortestCollisionDistance) {\n\t//\t\t\tshortestCollisionDistance = distance;\n\t//\t\t\tcollisionCurveIndex = index/3;\n\t//\t\t\tpickingCollision.rayEntryDistance = distance;\n\t//\t\t\tpickingCollision.localPosition = p;\n\t//\t\t\tpickingCollision.localNormal = new Vector3D(0, 0, 1);\n\t//\t\t\tpickingCollision.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t//\t\t\tpickingCollision.index = index;\n\t//\t\t\t//\t\t\t\t\t\tpickingCollision.elementIndex = this.pGetSpriteGraphicIndex(renderable);\n\t//\n\t//\t\t\t// if not looking for best hit, first found will do...\n\t//\t\t\tif (!this._findClosestCollision)\n\t//\t\t\t\treturn true;\n\t//\t\t}\n\t//\t}\n\t//\n\t//\tif (collisionCurveIndex >= 0)\n\t//\t\treturn true;\n\t//\n\t//\treturn false;\n\t//}\n\n\t/**\n\t * Tests a <code>LineElements</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleElements\n\t * @param material\n\t * @param pickingCollision\n\t * @returns {boolean}\n\t */\n\tpublic testLineCollision(lineElements:LineElements, material:MaterialBase, pickingCollision:PickingCollision):boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport default JSPickingCollider;",
    "import Point\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport IEntity\t\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport IRenderable\t\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollision\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollision\n */\nclass PickingCollision\n{\n\t/**\n\t * The entity to which this collision object belongs.\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t * The renderable associated with a collision.\n\t */\n\tpublic renderable:IRenderable;\n\n\t/**\n\t * The local position of the collision on the renderable's surface.\n\t */\n\tpublic position:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic normal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the element where the collision took place.\n\t */\n\tpublic elementIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic globalRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic globalRayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * Creates a new <code>PickingCollision</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tthis.entity = entity;\n\t}\n}\n\nexport default PickingCollision;",
    "import Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\n\nimport ITraverser\t\t\t\t\tfrom \"awayjs-display/lib/ITraverser\";\nimport DisplayObject\t\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport Scene\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Scene\";\nimport View\t\t\t\t\t\t\tfrom \"awayjs-display/lib/View\";\nimport IPicker\t\t\t\t\t\tfrom \"awayjs-display/lib/pick/IPicker\";\nimport PickingCollision\t\t\t\tfrom \"awayjs-display/lib/pick/PickingCollision\";\nimport IEntity\t\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport IRenderable\t\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nimport INode\t\t\t\t\t\tfrom \"awayjs-display/lib/partition/INode\";\nimport IPickingCollider\t\t\t\tfrom \"awayjs-display/lib/pick/IPickingCollider\";\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual renderable objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker, ITraverser\n{\n\tprivate _rayPosition:Vector3D;\n\tprivate _rayDirection:Vector3D;\n\tprivate _x:number;\n\tprivate _y:number;\n\tprivate _view:View;\n\tprivate _findClosestCollision:boolean;\n\tprivate _bestCollision:PickingCollision;\n\tprivate _testCollision:PickingCollision;\n\tprivate _testCollider:IPickingCollider;\n\tprivate _ignoredEntities:Array<IEntity>;\n\n\tprivate _entities:Array<IEntity> = new Array<IEntity>();\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic onlyMouseEnabled:boolean = true;\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollision\n\t{\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._view = view;\n\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollision\n\t{\n\t\tthis._rayPosition = rayPosition;\n\t\tthis._rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this);\n\n\t\t//early out if no collisions detected\n\t\tif (!this._entities.length)\n\t\t\treturn null;\n\n\t\tvar collision:PickingCollision = this.getPickingCollision();\n\n\t\t//discard entities\n\t\tthis._entities.length = 0;\n\n\t\treturn collision;\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollision\n//\t\t{\n//\t\t\tthis._numRenderables = 0;\n//\n//\t\t\tvar renderable:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\trenderable = entities[c];\n//\n//\t\t\t\tif (renderable.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._renderables[this._numRenderables++] = renderable;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollision(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities:Array<IEntity>)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\t\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this.onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tif (this._ignoredEntities) {\n\t\t\tvar len:number = this._ignoredEntities.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\t\treturn true;\n\t\t}\n\t\t\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollision.rayEntryDistance > entity2._iPickingCollision.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollision():PickingCollision\n\t{\n\t\t// Sort entities from closest to furthest to reduce tests.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tthis._bestCollision = null;\n\t\t\n\t\tvar entity:IEntity;\n\t\tvar len:number = this._entities.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tentity = this._entities[i];\n\t\t\tthis._testCollision = entity._iPickingCollision;\n\t\t\tif (this._bestCollision == null || this._testCollision.rayEntryDistance < this._bestCollision.rayEntryDistance) {\n\t\t\t\tthis._testCollider = entity.pickingCollider;\n\t\t\t\tif (this._testCollider) {\n\t\t\t\t\tthis._testCollision.rayEntryDistance = Number.MAX_VALUE;\n\t\t\t\t\tentity._acceptTraverser(this);\n\t\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\t\tif (this._bestCollision && !this._findClosestCollision)\n\t\t\t\t\t\tbreak;\n\t\t\t\t} else if (!this._testCollision.rayOriginIsInsideBounds) {\n\t\t\t\t\t// A bounds collision with no picking collider stops all checks.\n\t\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\t\tthis._bestCollision = this._testCollision;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._bestCollision)\n\t\t\tthis.updatePosition(this._bestCollision);\n\n\t\treturn this._bestCollision;\n\t}\n\n\tprivate updatePosition(pickingCollision:PickingCollision)\n\t{\n\t\tvar collisionPos:Vector3D = pickingCollision.position || (pickingCollision.position = new Vector3D());\n\n\t\tvar rayDir:Vector3D = pickingCollision.rayDirection;\n\t\tvar rayPos:Vector3D = pickingCollision.rayPosition;\n\t\tvar t:number = pickingCollision.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tif (!this.isIgnored(entity))\n\t\t\tthis._entities.push(entity);\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyRenderable(renderable:IRenderable)\n\t{\n\t\tif (renderable._iTestCollision(this._testCollision, this._testCollider))\n\t\t\tthis._bestCollision = this._testCollision;\n\t}\n\t\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport default RaycastPicker;",
    "export {default as IPicker}\t\t\t\t\t\t\tfrom \"awayjs-display/lib/pick/IPicker\";\nexport {default as IPickingCollider}\t\t\t\tfrom \"awayjs-display/lib/pick/IPickingCollider\";\nexport {default as JSPickingCollider}\t\t\t\tfrom \"awayjs-display/lib/pick/JSPickingCollider\";\nexport {default as PickingCollision}\t\t\t\tfrom \"awayjs-display/lib/pick/PickingCollision\";\nexport {default as RaycastPicker}\t\t\t\t\tfrom \"awayjs-display/lib/pick/RaycastPicker\";",
    "import AssetBase\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\nimport AbstractMethodError\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\n\nimport DisplayObject\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport default PrefabBase;",
    "import IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\n\nimport ElementsType\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsType\";\nimport LineElements\t\t\t\tfrom \"awayjs-display/lib/graphics/LineElements\";\nimport ElementsBase\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport TriangleElements\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport MaterialBase\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\nimport PrimitivePrefabBase\t\tfrom \"awayjs-display/lib/prefabs/PrimitivePrefabBase\";\n\n/**\n * A Capsule primitive sprite.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:ArrayBufferView;\n\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport default PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\n\nimport MaterialBase\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\nimport PrimitiveCylinderPrefab\tfrom \"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\";\n\n/**\n * A UV Cone primitive sprite.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType, 0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport default PrimitiveConePrefab;",
    "﻿﻿import IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\n\nimport ElementsType\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsType\";\nimport LineElements\t\t\t\tfrom \"awayjs-display/lib/graphics/LineElements\";\nimport ElementsBase\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport TriangleElements\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport MaterialBase\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\nimport PrimitivePrefabBase\t\tfrom \"awayjs-display/lib/prefabs/PrimitivePrefabBase\";\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tvar numVertices:number = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar numIndices:number = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGraphics.numVertices && triangleGraphics.indices != null) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\tvar lineGraphics:LineElements = <LineElements> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar thickness:Float32Array;\n\t\t\t\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = hw\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGraphics.setPositions(positions);\n\t\t\tlineGraphics.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:ArrayBufferView;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tif (numVertices == triangleGraphics.numVertices && triangleGraphics.uvs != null) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGraphics() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport default PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\n\nimport ElementsType\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsType\";\nimport LineElements\t\t\t\tfrom \"awayjs-display/lib/graphics/LineElements\";\nimport ElementsBase\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport TriangleElements\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport MaterialBase\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\nimport PrimitivePrefabBase\t\tfrom \"awayjs-display/lib/prefabs/PrimitivePrefabBase\";\n\n/**\n * A Cylinder primitive sprite.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\tvar lineGraphics:LineElements = <LineElements> target;\n\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\t\t\tvar _radius = 50;\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGraphics.setPositions(positions);\n\t\t\tlineGraphics.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:ArrayBufferView;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport default PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\n\nimport ElementsType\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsType\";\nimport LineElements\t\t\t\tfrom \"awayjs-display/lib/graphics/LineElements\";\nimport ElementsBase\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport TriangleElements\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport MaterialBase\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\nimport PrimitivePrefabBase\t\tfrom \"awayjs-display/lib/prefabs/PrimitivePrefabBase\";\n\n/**\n * A Plane primitive sprite.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper(material, elementsType);\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:ArrayBufferView;\n\t\t\tvar normals:Float32Array;\n\t\t\tvar tangents:Float32Array;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGraphics.indices != null && numIndices == triangleGraphics.indices.length) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGraphics.numVertices) {\n\t\t\t\tpositions = triangleGraphics.positions.get(numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\tvar lineGraphics:LineElements = <LineElements> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar positions:ArrayBufferView;\n\t\t\tvar thickness:Float32Array;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = -hh;\n\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGraphics.setPositions(positions);\n\t\t\tlineGraphics.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar uvs:ArrayBufferView;\n\t\tvar numVertices:number;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tif (triangleGraphics.uvs && numVertices == triangleGraphics.numVertices) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t\tthis._pInvalidatePrimitive()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport default PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\n\nimport MaterialBase\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\nimport PrimitiveCylinderPrefab\tfrom \"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\";\n\n/**\n * A UV RegularPolygon primitive sprite.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType, radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport default PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AbstractMethodError\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\n\nimport DisplayObject\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport ElementsType\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsType\";\nimport ElementsBase\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport TriangleElements\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport LineElements\t\t\t\tfrom \"awayjs-display/lib/graphics/LineElements\";\nimport Sprite\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\nimport MaterialBase\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\nimport PrefabBase\t\t\t\tfrom \"awayjs-display/lib/prefabs/PrefabBase\";\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _primitiveDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\tpublic _scaleU:number = 1;\n\tpublic _scaleV:number = 1;\n\n\tprivate _material:MaterialBase;\n\tprivate _elements:ElementsBase;\n\tprivate _elementsType:string;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get elementsType():string\n\t{\n\t\treturn this._elementsType;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Sprite> this._pObjects[i]).material = this._material;\n\t}\n\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (this._scaleU = value)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (this._scaleV = value)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\")\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._material = material;\n\t\tthis._elementsType = elementsType;\n\n\t\tif (this._elementsType == ElementsType.TRIANGLE) {\n\t\t\tvar triangleElements:TriangleElements = new TriangleElements(new AttributesBuffer());\n\t\t\ttriangleElements.autoDeriveNormals = false;\n\t\t\ttriangleElements.autoDeriveTangents = false;\n\t\t\tthis._elements = triangleElements;\n\t\t} else if (this._elementsType == ElementsType.LINE) {\n\t\t\tthis._elements = new LineElements(new AttributesBuffer());\n\t\t}\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGraphics method (and in turn by updateGraphics).\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\t\n\t/**\n\t * Invalidates the primitive, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidatePrimitive()\n\t{\n\t\tthis._primitiveDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGraphics()\n\t{\n\t\tthis._pBuildGraphics(this._elements, this._elementsType);\n\n\t\tthis._primitiveDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._elements, this._elementsType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._primitiveDirty)\n\t\t\tthis.updateGraphics();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar sprite:Sprite = new Sprite(this._material);\n\t\tsprite.graphics.addGraphic(this._elements);\n\t\tsprite._iSourcePrefab = this;\n\n\t\treturn sprite;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport default PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\n\nimport ElementsType\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsType\";\nimport LineElements\t\t\t\tfrom \"awayjs-display/lib/graphics/LineElements\";\nimport ElementsBase\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport TriangleElements\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport MaterialBase\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\nimport PrimitivePrefabBase\t\tfrom \"awayjs-display/lib/prefabs/PrimitivePrefabBase\";\n\n/**\n * A UV Sphere primitive sprite.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGraphics.numVertices && triangleGraphics.indices != null) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\n\t\t\tvar lineGraphics:LineElements = <LineElements> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\n\t\t\tvar positions:ArrayBufferView = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGraphics.setPositions(positions);\n\t\t\tlineGraphics.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:ArrayBufferView;\n\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tif (numVertices == triangleGraphics.numVertices && triangleGraphics.uvs != null) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport default PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\n\nimport ElementsType\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsType\";\nimport ElementsBase\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport TriangleElements\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport MaterialBase\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\nimport PrimitivePrefabBase\t\tfrom \"awayjs-display/lib/prefabs/PrimitivePrefabBase\";\n\n/**\n * A UV Cylinder primitive sprite.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:ArrayBufferView;\n\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport default PrimitiveTorusPrefab;",
    "export {default as PrefabBase}\t\t\t\t\t\tfrom \"awayjs-display/lib/prefabs/PrefabBase\";\nexport {default as PrimitiveCapsulePrefab}\t\t\tfrom \"awayjs-display/lib/prefabs/PrimitiveCapsulePrefab\";\nexport {default as PrimitiveConePrefab}\t\t\t\tfrom \"awayjs-display/lib/prefabs/PrimitiveConePrefab\";\nexport {default as PrimitiveCubePrefab}\t\t\t\tfrom \"awayjs-display/lib/prefabs/PrimitiveCubePrefab\";\nexport {default as PrimitiveCylinderPrefab}\t\t\tfrom \"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\";\nexport {default as PrimitivePlanePrefab}\t\t\tfrom \"awayjs-display/lib/prefabs/PrimitivePlanePrefab\";\nexport {default as PrimitivePolygonPrefab}\t\t\tfrom \"awayjs-display/lib/prefabs/PrimitivePolygonPrefab\";\nexport {default as PrimitivePrefabBase}\t\t\t\tfrom \"awayjs-display/lib/prefabs/PrimitivePrefabBase\";\nexport {default as PrimitiveSpherePrefab}\t\t\tfrom \"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\";\nexport {default as PrimitiveTorusPrefab}\t\t\tfrom \"awayjs-display/lib/prefabs/PrimitiveTorusPrefab\";",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport default AntiAliasType;",
    "import AssetBase\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nimport FontTable\t\t\t\t\tfrom \"awayjs-display/lib/text/TesselatedFontTable\";\n\n/**\n * GraphicBase wraps a TriangleElements as a scene graph instantiation. A GraphicBase is owned by a Sprite object.\n *\n *\n * @see away.base.TriangleElements\n * @see away.entities.Sprite\n *\n * @class away.base.GraphicBase\n */\nclass Font extends AssetBase\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get font_styles():Array<FontTable>\n\t{\n\t\treturn this._font_styles;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport default Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport default GridFitType;",
    "import TesselatedFontTable\t\t\tfrom \"awayjs-display/lib/text/TesselatedFontTable\";\nimport MaterialBase\t\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\nimport TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\n\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * Elements for this char\n\t */\n\tpublic elements:TriangleElements;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(elements:TriangleElements)\n\t{\n\t\tthis.elements = elements;\n\t}\n\n}\n\nexport default TesselatedFontChar;",
    "import AssetBase\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport TesselatedFontChar\t\t\tfrom \"awayjs-display/lib/text/TesselatedFontChar\";\n\n/**\n * GraphicBase wraps a TriangleElements as a scene graph instantiation. A GraphicBase is owned by a Sprite object.\n *\n *\n * @see away.base.TriangleElements\n * @see away.entities.Sprite\n *\n * @class away.base.GraphicBase\n */\nclass TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tpublic _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _whitespace_width:number;\n\tprivate _offset_x:number;\n\tprivate _offset_y:number;\n\tprivate _ascent:number;\n\tprivate _descent:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t\tthis._ascent=0;\n\t\tthis._descent=0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tget ascent():number {\n\t\treturn this._ascent;\n\t}\n\n\tset ascent(value:number){\n\t\tthis._ascent=value;\n\t}\n\tget descent():number {\n\t\treturn this._descent;\n\t}\n\n\tset descent(value:number){\n\t\tthis._descent=value;\n\t}\n\n\tget offset_x():number {\n\t\treturn this._offset_x;\n\t}\n\n\tset offset_x(value:number){\n\t\tthis._offset_x=value;\n\t}\n\tget offset_y():number {\n\t\treturn this._offset_y;\n\t}\n\n\tset offset_y(value:number){\n\t\tthis._offset_y=value;\n\t}\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_whitespace_width(value:number):void\n\t{\n\t\tthis._whitespace_width=value;\n\t}\n\tpublic get_whitespace_width():number\n\t{\n\t\treturn this._whitespace_width\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic getChar(name:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[name];\n\t}\n\t/**\n\t *\n\t */\n\tpublic setChar(name:string, elements:ElementsBase, char_width:number):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<TriangleElements> elements);\n\t\ttesselated_font_char.char_width=char_width;\n\t\telements.name = name;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[name]=tesselated_font_char;\n\t}\n\n}\n\nexport default TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport default TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n\n\t/**\n\t * Used to specify an <code>static</code> TextField.\n\t */\n\tpublic static STATIC:string = \"input\";\n}\n\nexport default TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport default TextFormatAlign;",
    "import AssetBase\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nimport TesselatedFontTable\t\t\tfrom \"awayjs-display/lib/text/TesselatedFontTable\";\nimport MaterialBase\t\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends AssetBase\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic fallback_font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}\n\nexport default TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport default TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport default TextLineMetrics;",
    "export {default as AntiAliasType}\t\t\t\t\tfrom \"awayjs-display/lib/text/AntiAliasType\";\nexport {default as Font}\t\t\t\t\t\t\tfrom \"awayjs-display/lib/text/Font\";\nexport {default as GridFitType}\t\t\t\t\t\tfrom \"awayjs-display/lib/text/GridFitType\";\nexport {default as TesselatedFontChar}\t\t\t\tfrom \"awayjs-display/lib/text/TesselatedFontChar\";\nexport {default as TesselatedFontTable}\t\t\t\tfrom \"awayjs-display/lib/text/TesselatedFontTable\";\nexport {default as TextFieldAutoSize}\t\t\t\tfrom \"awayjs-display/lib/text/TextFieldAutoSize\";\nexport {default as TextFieldType}\t\t\t\t\tfrom \"awayjs-display/lib/text/TextFieldType\";\nexport {default as TextFormat}\t\t\t\t\t\tfrom \"awayjs-display/lib/text/TextFormat\";\nexport {default as TextFormatAlign}\t\t\t\t\tfrom \"awayjs-display/lib/text/TextFormatAlign\";\nexport {default as TextInteractionMode}\t\t\t\tfrom \"awayjs-display/lib/text/TextInteractionMode\";\nexport {default as TextLineMetrics}\t\t\t\t\tfrom \"awayjs-display/lib/text/TextLineMetrics\";",
    "/**\n\n\n */\nclass MappingMode\n{\n\t/**\n\t *\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t *\n\t */\n\tpublic static LINEAR_GRADIENT:string = \"linearGradient\";\n\n\t/**\n\t *\n\t */\n\tpublic static RADIAL_GRADIENT:string = \"radialGradient\";\n}\n\nexport default MappingMode;",
    "﻿﻿import Sampler2D\t\t\t\tfrom \"awayjs-core/lib/image/Sampler2D\";\nimport Image2D\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\nimport ErrorBase\t\t\t\tfrom \"awayjs-core/lib/errors/ErrorBase\";\nimport ImageUtils\t\t\t\tfrom \"awayjs-core/lib/utils/ImageUtils\";\n\nimport MappingMode\t\t\t\tfrom \"awayjs-display/lib/textures/MappingMode\";\nimport TextureBase\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\nclass Single2DTexture extends TextureBase\n{\n\tprivate _mappingMode:string;\n\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Single2DTexture.assetType;\n\t}\n\n\tpublic get mappingMode():string\n\t{\n\t\treturn this._mappingMode;\n\t}\n\n\tpublic set mappingMode(value:string)\n\t{\n\t\tif (this._mappingMode == value)\n\t\t\treturn;\n\n\t\tthis._mappingMode = value;\n\n\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get sampler2D():Sampler2D\n\t{\n\t\treturn <Sampler2D> this._samplers[0];\n\t}\n\n\tpublic set sampler2D(value:Sampler2D)\n\t{\n\t\tif (this._samplers[0] == value)\n\t\t\treturn;\n\n\t\tthis.setSamplerAt(value, 0);\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get image2D():Image2D\n\t{\n\t\treturn <Image2D> this._images[0];\n\t}\n\n\tpublic set image2D(value:Image2D)\n\t{\n\t\tif (this._images[0] == value)\n\t\t\treturn;\n\n\t\tif (!ImageUtils.isImage2DValid(value))\n\t\t\tthrow new ErrorBase(\"Invalid image2DData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis.setImageAt(value, 0);\n\t}\n\n\tconstructor(image2D:Image2D = null)\n\t{\n\t\tsuper();\n\n\t\tthis.setNumImages(1);\n\n\t\tthis.image2D = image2D;\n\n\t\tthis._mappingMode = MappingMode.NORMAL;\n\t}\n}\n\nexport default Single2DTexture;",
    "import SamplerCube\t\t\t\tfrom \"awayjs-core/lib/image/SamplerCube\";\nimport ImageCube\t\t\t\tfrom \"awayjs-core/lib/image/ImageCube\";\n\nimport TextureBase\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\n\nclass SingleCubeTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SingleCubeTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get samplerCube():SamplerCube\n\t{\n\t\treturn <SamplerCube> this._samplers[0];\n\t}\n\n\tpublic set samplerCube(value:SamplerCube)\n\t{\n\t\tif (this._samplers[0] == value)\n\t\t\treturn;\n\n\t\tthis.setSamplerAt(value, 0);\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageCube}\n\t */\n\tpublic get imageCube():ImageCube\n\t{\n\t\treturn <ImageCube> this._images[0];\n\t}\n\n\tpublic set imageCube(value:ImageCube)\n\t{\n\t\tif (this._images[0] == value)\n\t\t\treturn;\n\n\t\tthis.setImageAt(value, 0);\n\t}\n\n\t\n\tconstructor(imageCube:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis.setNumImages(1);\n\n\t\tthis.imageCube = imageCube;\n\t}\n}\n\nexport default SingleCubeTexture;",
    "import ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport SamplerBase\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerBase\";\nimport AssetBase\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\nimport AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\n\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\n/**\n *\n */\nclass TextureBase extends AssetBase\n{\n\tpublic _numImages:number = 0;\n\tpublic _images:Array<ImageBase> = new Array<ImageBase>();\n\tpublic _samplers:Array<SamplerBase> = new Array<SamplerBase>();\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic getNumImages():number\n\t{\n\t\treturn this._numImages;\n\t}\n\n\tpublic setNumImages(value:number)\n\t{\n\t\tif (this._numImages == value)\n\t\t\treturn;\n\n\t\tthis._numImages = value;\n\n\t\tthis._images.length = value;\n\t\tthis._samplers.length = value;\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic getImageAt(index:number):ImageBase\n\t{\n\t\treturn this._images[index];\n\t}\n\n\tpublic setImageAt(image:ImageBase, index:number)\n\t{\n\t\tthis._images[index] = image;\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic getSamplerAt(index:number):SamplerBase\n\t{\n\t\treturn this._samplers[index];\n\t}\n\n\tpublic setSamplerAt(sampler:SamplerBase, index:number)\n\t{\n\t\tthis._samplers[index] = sampler;\n\n\t\tthis.invalidate();\n\t}\n}\n\nexport default TextureBase;",
    "export {default as MappingMode}\t\t\t\t\t\tfrom \"awayjs-display/lib/textures/MappingMode\";\nexport {default as Single2DTexture}\t\t\t\t\tfrom \"awayjs-display/lib/textures/Single2DTexture\";\nexport {default as SingleCubeTexture}\t\t\t\tfrom \"awayjs-display/lib/textures/SingleCubeTexture\";\nexport {default as TextureBase}\t\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";",
    "import Image2D\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\nimport ByteArray\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\n\nimport CastError\t\t\t\tfrom \"awayjs-display/lib/errors/CastError\";\nimport Single2DTexture\t\t\tfrom \"awayjs-display/lib/textures/Single2DTexture\";\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static image2D(data:any):Image2D\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Image2D)\n\t\t\treturn data;\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\tdata = (<Single2DTexture> data).image2D;\n\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):Single2DTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\n\t\t\treturn new Single2DTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\n\t}\n}\n\nexport default Cast;",
    "import AttributesBuffer\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AttributesView\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\nimport Short2Attributes\t\t\tfrom \"awayjs-core/lib/attributes/Short2Attributes\";\nimport Short3Attributes\t\t\tfrom \"awayjs-core/lib/attributes/Short3Attributes\";\nimport Float3Attributes\t\t\tfrom \"awayjs-core/lib/attributes/Float3Attributes\";\nimport Float4Attributes\t\t\tfrom \"awayjs-core/lib/attributes/Float4Attributes\";\nimport Byte4Attributes\t\t\tfrom \"awayjs-core/lib/attributes/Byte4Attributes\";\nimport Matrix3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport Box\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport Sphere\t\t\t\t\tfrom \"awayjs-core/lib/geom/Sphere\";\n\nimport TriangleElements\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\n\nclass ElementsUtils\n{\n\tprivate static tempFloat32x4:Float32Array = new Float32Array(4);\n\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\t\n\tprivate static _indexSwap:Array<number> = new Array<number>();\n\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:AttributesView, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:ArrayBufferView = positionAttributes.get(positionAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float4Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\tif (positionDim == 3) {\n\t\t\twhile (i < count) {\n\t\t\t\tindex = indices[i++]*3;\n\t\t\t\tx1 = positions[index];\n\t\t\t\ty1 = positions[index + 1];\n\t\t\t\tz1 = positions[index + 2];\n\t\t\t\tindex = indices[i++]*3;\n\t\t\t\tx2 = positions[index];\n\t\t\t\ty2 = positions[index + 1];\n\t\t\t\tz2 = positions[index + 2];\n\t\t\t\tindex = indices[i++]*3;\n\t\t\t\tx3 = positions[index];\n\t\t\t\ty3 = positions[index + 1];\n\t\t\t\tz3 = positions[index + 2];\n\t\t\t\tdx1 = x3 - x1;\n\t\t\t\tdy1 = y3 - y1;\n\t\t\t\tdz1 = z3 - z1;\n\t\t\t\tdx2 = x2 - x1;\n\t\t\t\tdy2 = y2 - y1;\n\t\t\t\tdz2 = z2 - z1;\n\t\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t\t// length of cross product = 2*triangle area\n\n\t\t\t\tfaceNormals[j++] = cx;\n\t\t\t\tfaceNormals[j++] = cy;\n\t\t\t\tfaceNormals[j++] = cz;\n\t\t\t\tfaceNormals[j++] = d;\n\t\t\t}\n\t\t} else if (positionDim == 2) {\n\t\t\twhile (i < count) {\n\t\t\t\tfaceNormals[j++] = 0;\n\t\t\t\tfaceNormals[j++] = 0;\n\t\t\t\tfaceNormals[j++] = 1;\n\t\t\t\tfaceNormals[j++] = 1;\n\t\t\t\ti += 3;\n\t\t\t}\n\t\t}\n\n\t\toutput.set(faceNormals, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar normals:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear normal values\n\t\twhile (i < len) {\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\n\t\t//collect face normals\n\t\twhile (i < len) {\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise normals collections\n\t\twhile (i < len) {\n\t\t\tvx = normals[i];\n\t\t\tvy = normals[i + 1];\n\t\t\tvz = normals[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\tnormals[i++] = vx*d;\n\t\t\tnormals[i++] = vy*d;\n\t\t\tnormals[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(normals);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:AttributesView, uvAttributes:AttributesView, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:ArrayBufferView = positionAttributes.get(positionAttributes.count);\n\t\tvar uvs:Float32Array = <Float32Array> uvAttributes.get(uvAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\t\tvar uvDim:number = uvAttributes.dimensions;\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar v0:number;\n\t\tvar v1:number;\n\t\tvar v2:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\twhile (i < count) {\n\t\t\tindex1 = indices[i];\n\t\t\tindex2 = indices[i + 1];\n\t\t\tindex3 = indices[i + 2];\n\n\t\t\tv0 = uvs[index1*uvDim + 1];\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\n\n\t\t\tv0 = index1*positionDim;\n\t\t\tv1 = index2*positionDim;\n\t\t\tv2 = index3*positionDim;\n\n\t\t\tx0 = positions[v0];\n\t\t\tdx1 = positions[v1] - x0;\n\t\t\tdx2 = positions[v2] - x0;\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\n\t\t\ty0 = positions[v0 + 1];\n\t\t\tdy1 = positions[v1 + 1] - y0;\n\t\t\tdy2 = positions[v2 + 1] - y0;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\n\t\t\tif (positionDim == 3) {\n\t\t\t\tz0 = positions[v0 + 2];\n\t\t\t\tdz1 = positions[v1 + 2] - z0;\n\t\t\t\tdz2 = positions[v2 + 2] - z0;\n\t\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\t} else {\n\t\t\t\tcz = 0;\n\t\t\t}\n\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tfaceTangents[i++] = denom*cx;\n\t\t\tfaceTangents[i++] = denom*cy;\n\t\t\tfaceTangents[i++] = denom*cz;\n\t\t}\n\n\t\toutput.set(faceTangents, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar tangents:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear tangent values\n\t\twhile (i < len) {\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t}\n\n\t\tvar weight:number;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\t\tvar f4:number = 3;\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\n\t\t//collect face tangents\n\t\twhile (i < len) {\n\t\t\tweight = faceNormals[f4];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tf1 += 3;\n\t\t\tf2 += 3;\n\t\t\tf3 += 3;\n\t\t\tf4 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise tangents collections\n\t\twhile (i < len) {\n\t\t\tvx = tangents[i];\n\t\t\tvy = tangents[i + 1];\n\t\t\tvz = tangents[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\ttangents[i++] = vx*d;\n\t\t\ttangents[i++] = vy*d;\n\t\t\ttangents[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(tangents);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\n\n\t\tvar index:number = 0;\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\n\n\t\twhile (index < count*4) {\n\t\t\tif (index/4 & 1) {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t} else {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t}\n\n\t\t\tindex += 4;\n\t\t}\n\n\t\toutput.set(colors, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:AttributesView, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:ArrayBufferView = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] *= scaleU;\n\t\t\tuvs[i++] *= scaleV;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\t}\n\n\tpublic static scale(scale:number, output:AttributesView, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar positions:ArrayBufferView = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t}\n\n\t\toutput.set(positions, offset);\n\t}\n\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:AttributesView, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\t//todo: make this compatible with 2-dimensional positions\n\t\tvar positions:ArrayBufferView = positionAttributes.get(count, offset);\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar normals:Float32Array;\n\t\tvar normalDim:number;\n\n\t\tif (normalAttributes) {\n\t\t\tnormals = normalAttributes.get(count, offset);\n\t\t\tnormalDim = normalAttributes.dimensions;\n\t\t}\n\n\t\tvar tangents:Float32Array;\n\t\tvar tangentDim:number;\n\n\t\tif (tangentAttributes) {\n\t\t\ttangents = tangentAttributes.get(count, offset);\n\t\t\ttangentDim = tangentAttributes.dimensions;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (normalAttributes || tangentAttributes) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = 0;\n\t\tvar ni0:number = 0;\n\t\tvar ti0:number = 0;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\t// bake position\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += positionDim;\n\n\t\t\tif\t(normals) {\n\t\t\t\t// bake normal\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += normalDim;\n\t\t\t}\n\n\t\t\tif (tangents) {\n\t\t\t\t// bake tangent\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tangentDim;\n\t\t\t}\n\t\t}\n\n\t\tpositionAttributes.set(positions, offset);\n\n\t\tif (normalAttributes)\n\t\t\tnormalAttributes.set(normals, offset);\n\n\t\tif (tangentAttributes)\n\t\t\ttangentAttributes.set(tangents, offset);\n\t}\n\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\n\t{\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\n\t\tvar numIndices:number = indexAttributes.length;\n\t\t\n\t\t//reset mappings\n\t\tindexMappings.length = 0;\n\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\tif (numIndices < ElementsUtils.LIMIT_INDICES && numVertices < ElementsUtils.LIMIT_VERTS)\n\t\t\treturn buffer;\n\n\t\tvar i:number;\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\n\t\tvar splitIndices:Array<number> = new Array<number>();\n\t\tvar indexSwap:Array<number> = ElementsUtils._indexSwap;\n\t\t\n\n\t\tindexSwap.length = numIndices;\n\t\tfor (i = 0; i < numIndices; i++)\n\t\t\tindexSwap[i] = -1;\n\n\t\tvar originalIndex:number;\n\t\tvar splitIndex:number;\n\t\tvar index:number = 0;\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\n\t\t\n\t\t// Loop over all triangles\n\t\t\n\t\ti = 0;\n\t\twhile (i < numIndices + offsetLength && i + 1 < ElementsUtils.LIMIT_INDICES && index + 1 < ElementsUtils.LIMIT_VERTS) {\n\t\t\toriginalIndex = indices[i];\n\n\t\t\tif (indexSwap[originalIndex] >= 0) {\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\n\t\t\t} else {\n\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t// needs to be copied from the long list.\n\t\t\t\tsplitIndex = index++;\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\n\t\t\t}\n\n\t\t\t// Store new index, which may have come from the swap look-up,\n\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\tsplitIndices[i++] = splitIndex;\n\t\t}\n\t\t\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\n\t\t\n\t\tindexAttributes = indexAttributes.clone(buffer);\n\t\tindexAttributes.set(splitIndices);\n\t\t\n\t\treturn buffer;\n\t}\n\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\n\t{\n\t\tif (!indexMappings.length)\n\t\t\treturn vertexBuffer;\n\n\t\tvar stride:number = vertexBuffer.stride;\n\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\n\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\n\t\tvar splitIndex:number;\n\t\tvar originalIndex:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = indexMappings.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tsplitIndex = i*stride;\n\t\t\toriginalIndex = indexMappings[i]*stride;\n\n\t\t\tfor (j = 0; j < stride; j++)\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\t\t}\n\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\n\t\tvertexBuffer.bufferView = splitVerts;\n\n\t\treturn vertexBuffer;\n\t}\n\n\t//TODO - generate this dyanamically based on num tris\n\n\tpublic static hitTestTriangleElements(x:number, y:number, z:number, boundingBox:Box, triangleElements:TriangleElements):boolean\n\t{\n\t\tvar positionAttributes:AttributesView = triangleElements.positions;\n\t\tvar curveAttributes:AttributesView = triangleElements.getCustomAtributes(\"curves\");\n\t\tvar count:number = triangleElements.numVertices;\n\n\t\tvar posDim:number = positionAttributes.dimensions;\n\t\tvar curveDim:number = curveAttributes.dimensions;\n\n\t\tvar positions:ArrayBufferView = positionAttributes.get(count);\n\t\tvar curves:ArrayBufferView = curveAttributes? curveAttributes.get(count) : null;\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\tvar index:number = triangleElements.lastCollisionIndex;\n\t\tif(index != -1 && index < count)\n\t\t{\n\t\t\tprecheck:\n\t\t\t{\n\t\t\t\tid0 = index + 2;\n\t\t\t\tid1 = index + 1;\n\t\t\t\tid2 = index + 0;\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tif (curves) {\n\t\t\t\t\tvar curvey0:number = curves[id0 * curveDim + 2];\n\t\t\t\t\tvar curvey1:number = curves[id1 * curveDim + 2];\n\t\t\t\t\tvar curvey2:number = curves[id2 * curveDim + 2];\n\t\t\t\t\t//check if not solid\n\t\t\t\t\tif (curvey0 || curvey1 || curvey2) {\n\n\t\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t\t//here be dragons\n\t\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\t\t\tvar az:number = curves[id0 * curveDim];\n\t\t\t\t\t\tif (d > 0 && az == -128) {\n\t\t\t\t\t\t\tbreak precheck;;\n\t\t\t\t\t\t} else if (d < 0 && az == 127) {\n\t\t\t\t\t\t\tbreak precheck;;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\n\n\t\t//hard coded min vertex count to bother using a grid for\n\t\tif (count > 150) {\n\t\t\tvar cells:Array<Array<number>> = triangleElements.cells;\n\t\t\tvar divisions:number = cells.length? triangleElements.divisions : (triangleElements.divisions = Math.min(Math.ceil(Math.sqrt(count)), 32));\n\t\t\tvar conversionX:number = divisions/boundingBox.width;\n\t\t\tvar conversionY:number = divisions/boundingBox.height;\n\t\t\tvar minx:number = boundingBox.x;\n\t\t\tvar miny:number = boundingBox.y;\n\n\t\t\tif (!cells.length) { //build grid\n\n\t\t\t\t//now we have bounds start creating grid cells and filling\n\t\t\t\tcells.length = divisions * divisions;\n\n\t\t\t\tfor(var k:number = 0; k < count; k+=3) {\n\t\t\t\t\tid0 = k + 2;\n\t\t\t\t\tid1 = k + 1;\n\t\t\t\t\tid2 = k + 0;\n\n\t\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t\t//subtractions to push into positive space\n\t\t\t\t\tvar min_index_x:number = Math.floor((Math.min(ax, bx, cx) - minx)*conversionX);\n\t\t\t\t\tvar min_index_y:number = Math.floor((Math.min(ay, by, cy) - miny)*conversionY);\n\n\t\t\t\t\tvar max_index_x:number = Math.floor((Math.max(ax, bx, cx) - minx)*conversionX);\n\t\t\t\t\tvar max_index_y:number = Math.floor((Math.max(ay, by, cy) - miny)*conversionY);\n\n\n\t\t\t\t\tfor (var i:number = min_index_x; i <= max_index_x; i++) {\n\t\t\t\t\t\tfor (var j:number = min_index_y; j <= max_index_y; j++) {\n\t\t\t\t\t\t\tvar index:number = i + j*divisions;\n\t\t\t\t\t\t\tvar nodes:Array<number> = cells[index] || (cells[index] = new Array<number>());\n\n\t\t\t\t\t\t\t//push in the triangle ids\n\t\t\t\t\t\t\tnodes.push(id0, id1, id2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar index_x:number = Math.floor((x - minx)*conversionX);\n\t\t\tvar index_y:number = Math.floor((y - miny)*conversionY);\n\n\t\t\tif ((index_x < 0 || index_x > divisions || index_y < 0 || index_y > divisions))\n\t\t\t\treturn false;\n\n\t\t\tvar nodes:Array<number> = cells[index_x + index_y*divisions];\n\n\t\t\tif (nodes == null)\n\t\t\t\treturn false;\n\n\t\t\tvar nodeCount:number = nodes.length;\n\t\t\tfor (var k:number = 0; k < nodeCount; k += 3) {\n\t\t\t\tid0 = nodes[k];\n\t\t\t\tid1 = nodes[k + 1];\n\t\t\t\tid2 = nodes[k + 2];\n\n\t\t\t\tif(id2 == index) continue;\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tif (curves) {\n\t\t\t\t\tvar curvey0:number = curves[id0 * curveDim + 2];\n\t\t\t\t\tvar curvey1:number = curves[id1 * curveDim + 2];\n\t\t\t\t\tvar curvey2:number = curves[id2 * curveDim + 2];\n\t\t\t\t\t//check if not solid\n\t\t\t\t\tif (curvey0 || curvey1 || curvey2) {\n\n\t\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t\t//here be dragons\n\t\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\t\tvar d:number = uu * uu - vv;\n\t\t\t\t\t\tvar az:number = curves[id0 * curveDim];\n\n\t\t\t\t\t\tif (d > 0 && az == -128)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\telse if (d < 0 && az == 127)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttriangleElements.lastCollisionIndex = id2;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t//brute force\n\t\tfor(var k:number = 0; k < count; k += 3) {\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tif(id2 == index) continue;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - x;\n\t\t\tvar dy:number = ay - y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - x;\n\t\t\tdy = by - y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - x;\n\t\t\tdy = cy - y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tif (curves) {\n\t\t\t\tvar curvey0:number = curves[id0 * curveDim + 2];\n\t\t\t\tvar curvey1:number = curves[id1 * curveDim + 2];\n\t\t\t\tvar curvey2:number = curves[id2 * curveDim + 2];\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvey0 || curvey1 || curvey2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\t\tvar az:number = curves[id0 * curveDim];\n\t\t\t\t\tif (d > 0 && az == -128) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (d < 0 && az == 127) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttriangleElements.lastCollisionIndex = id2;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic static getTriangleGraphicsBoxBounds(positionAttributes:AttributesView, output:Box, count:number, offset:number = 0):Box\n\t{\n\t\tvar positions:ArrayBufferView = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\n\t\tif (output == null)\n\t\t\toutput = new Box();\n\n\t\tvar pos:number;\n\t\tvar minX:number = 0, minY:number = 0, minZ:number = 0;\n\t\tvar maxX:number = 0, maxY:number = 0, maxZ:number = 0;\n\n\t\tvar len:number = count*posDim;\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tif (i == 0) {\n\t\t\t\tmaxX = minX = positions[i];\n\t\t\t\tmaxY = minY = positions[i + 1];\n\t\t\t\tmaxZ = minZ = (posDim == 3)? positions[i + 2] : 0;\n\t\t\t} else {\n\t\t\t\tpos = positions[i];\n\t\t\t\tif (pos < minX)\n\t\t\t\t\tminX = pos;\n\t\t\t\telse if (pos > maxX)\n\t\t\t\t\tmaxX = pos;\n\n\t\t\t\tpos = positions[i + 1];\n\n\t\t\t\tif (pos < minY)\n\t\t\t\t\tminY = pos;\n\t\t\t\telse if (pos > maxY)\n\t\t\t\t\tmaxY = pos;\n\n\t\t\t\tif (posDim == 3) {\n\t\t\t\t\tpos = positions[i + 2];\n\n\t\t\t\t\tif (pos < minZ)\n\t\t\t\t\t\tminZ = pos;\n\t\t\t\t\telse if (pos > maxZ)\n\t\t\t\t\t\tmaxZ = pos;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (output.x > minX)\n\t\t\toutput.x = minX;\n\n\t\tif (output.y > minY)\n\t\t\toutput.y = minY;\n\n\t\tif (output.z > minZ)\n\t\t\toutput.z = minZ;\n\n\t\tif (output.right < maxX)\n\t\t\toutput.right = maxX;\n\n\t\tif (output.bottom < maxY)\n\t\t\toutput.bottom = maxY;\n\n\t\tif (output.back < maxZ)\n\t\t\toutput.back = maxZ;\n\n\t\treturn output;\n\t}\n\n\tpublic static getTriangleGraphicsSphereBounds(positionAttributes:AttributesView, center:Vector3D, output:Sphere, count:number, offset:number = 0):Sphere\n\t{\n\t\tvar positions:ArrayBufferView = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\n\t\tif (output == null)\n\t\t\toutput = new Sphere();\n\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar len = count*posDim;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tdistanceX = positions[i] - center.x;\n\t\t\tdistanceY = positions[i + 1] - center.y;\n\t\t\tdistanceZ = (posDim == 3)? positions[i + 2] - center.z : -center.z;\n\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t}\n\n\t\toutput.x = center.x;\n\t\toutput.y = center.y;\n\t\toutput.z = center.z;\n\t\toutput.radius = Math.sqrt(maxRadiusSquared);\n\n\t\treturn output;\n\t}\n\n}\n\nexport default ElementsUtils;",
    "export {default as Cast}\t\t\t\t\t\t\tfrom \"awayjs-display/lib/utils/Cast\";\nexport {default as ElementsUtils}\t\t\t\t\tfrom \"awayjs-display/lib/utils/ElementsUtils\";"
  ],
  "sourceRoot": ""
}
{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/HierarchicalProperties.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Timeline.ts",
    "awayjs-display/lib/base/TouchPoint.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/MovieClip.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/FrameScriptManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/BasicPartition.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/ContainerNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/PartitionBase.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SceneGraphPartition.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/ContainerNodePool.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "cells",
    "Array",
    "lastCollisionIndex",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoxBounds",
    "target",
    "getCurveGeometryBoxBounds",
    "getSphereBounds",
    "center",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "positions",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "HierarchicalProperties",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "DisplayObject",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pIsEntity",
    "_pIsContainer",
    "_sessionID",
    "_depthID",
    "_matrix3D",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_explicitMaskId",
    "_pImplicitVisibility",
    "_pImplicitMaskId",
    "_pImplicitMaskIds",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_pImplicitColorTransform",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_skewX",
    "_skewY",
    "_skewZ",
    "_scaleX",
    "_scaleY",
    "_scaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pos",
    "_rot",
    "_ske",
    "_sca",
    "_pRenderables",
    "_entityNodes",
    "_inheritColorTransform",
    "_maskMode",
    "_tempVector3D",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "zOffset",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_adapter",
    "pInvalidateHierarchicalProperties",
    "COLOR_TRANSFORM",
    "_explicitColorTransform",
    "alphaMultiplier",
    "_iColorTransform",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "x",
    "rotationX",
    "y",
    "rotationY",
    "z",
    "rotationZ",
    "height",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "_loaderInfo",
    "_updateMaskMode",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_iSetScene",
    "_pScene",
    "_iAssignedPartition",
    "dispatchEvent",
    "PARTITION_CHANGED",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "_elementsDirty",
    "updateElements",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "_width",
    "_setScaleX",
    "skewX",
    "invalidateSkew",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_hierarchicalPropsDirty",
    "SCENE_TRANSFORM",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "VISIBLE",
    "_explicitMasks",
    "maskMode",
    "MASKS",
    "width",
    "scaleX",
    "rawData",
    "invalidatePosition",
    "addEventListener",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SKEW_CHANGED",
    "_listenToSkewChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "newInstance",
    "copyTo",
    "partition",
    "boundsType",
    "name",
    "mouseEnabled",
    "extra",
    "masks",
    "_iMatrix3D",
    "adapter",
    "colorTransform",
    "removeChild",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "setTo",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "left",
    "top",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "hitTestPoint",
    "shapeFlag",
    "maskFlag",
    "isMask",
    "lookAt",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dx",
    "dy",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "reset",
    "visible",
    "clear",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "removeEventListener",
    "hasEventListener",
    "translate",
    "distance",
    "Math",
    "sqrt",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_matrix3DDirty",
    "_pUpdateMatrix3D",
    "_pivotDirty",
    "_pUpdatePivot",
    "_pPickingCollisionVO",
    "iSetParent",
    "ALL",
    "propDirty",
    "newPropDirty",
    "isEntity",
    "invalidatePartition",
    "queueDispatch",
    "_sceneTransformChanged",
    "scene",
    "sceneChanged",
    "_iUnregisterPartition",
    "_iUnregisterEntity",
    "_clearInterfaces",
    "_iRegisterPartition",
    "_iRegisterEntity",
    "_sceneChanged",
    "appendTranslation",
    "_iController",
    "updateController",
    "_iIsRoot",
    "prepend",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iAddRenderable",
    "renderable",
    "push",
    "_iRemoveRenderable",
    "index",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "update",
    "_iIsVisible",
    "_updateVisible",
    "_iAssignedMaskId",
    "MASK_ID",
    "_updateMaskId",
    "_iAssignedMasks",
    "_updateMasks",
    "_pImplicitMasks",
    "_iMasksConfig",
    "_iAssignedColorTransform",
    "_updateColorTransform",
    "_iIsMouseEnabled",
    "MOUSE_ENABLED",
    "_updateMouseEnabled",
    "_applyRenderer",
    "renderer",
    "invalidateMatrix3D",
    "_positionChanged",
    "matrixDirty",
    "_rotationChanged",
    "_skewChanged",
    "invalidateScale",
    "_scaleChanged",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "event",
    "elements",
    "mouseChildren",
    "concat",
    "numLayers",
    "numChildren",
    "implicitChildren",
    "implicitChildIds",
    "j",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/HierarchicalProperties",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "AbstractMethodError",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "thickness",
    "floor",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "awayjs-display/lib/base/Timeline",
    "FrameScriptManager",
    "Timeline",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "scriptPass1",
    "evalScript",
    "add_script_to_queue",
    "add_script_to_queue_pass2",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChildInstance",
    "this_clone",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "skip_script",
    "frameIndex",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "firstframe",
    "set_currentFrameIndex",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "k",
    "child",
    "removeChildAt",
    "resetSessionIDs",
    "depth_sessionIDs",
    "getSessionIDDepths",
    "update_indices",
    "update_cnt",
    "frame_command_idx",
    "start_index",
    "end_index",
    "command_index_stream",
    "command_length_stream",
    "remove_child_stream",
    "add_child_stream",
    "_children",
    "isBlockedByScript",
    "isVisibilityByScript",
    "key",
    "addChildAtDepth",
    "Number",
    "update_childs",
    "queueScript",
    "constructed_keyFrameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "removeChildAtDepth",
    "idx",
    "props_start_idx",
    "props_len",
    "props_end_index",
    "value_start_index",
    "props_type",
    "doit",
    "getChildAtSessionID",
    "update_child_stream",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "properties_stream_f32_mtx_all",
    "new_ct",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "mask",
    "numMasks",
    "properties_stream_int",
    "properties_stream_strings",
    "registerScriptObject",
    "addButtonListeners",
    "Boolean",
    "properties_stream_f32_mtx_scale_rot",
    "properties_stream_f32_mtx_pos",
    "awayjs-display/lib/managers/FrameScriptManager",
    "awayjs-display/lib/base/TouchPoint",
    "TouchPoint",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "dimensions",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "getTriangleGeometryBoxBounds",
    "getTriangleGeometrySphereBounds",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cx",
    "cy",
    "cz",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "Extensions",
    "_containerNodes",
    "_mouseChildren",
    "_depth_childs",
    "_nextHighestDepth",
    "addChild",
    "addChildAt",
    "replace",
    "removeChildAtInternal",
    "getDepthIndexInternal",
    "getNextHighestDepth",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "getChildAtDepth",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "_nextHighestDepthDirty",
    "_updateNextHighestDepth",
    "getObjectsUnderPoint",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "SIMD",
    "f32x4",
    "float32x4",
    "Float32x4",
    "load",
    "loadXYZ",
    "load3",
    "store",
    "storeXYZ",
    "store3",
    "minP",
    "maxP",
    "minB",
    "maxB",
    "add",
    "min",
    "max",
    "sub",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "bitFlag",
    "masksFlag",
    "maskHit",
    "_hitTestPointInternal",
    "_iAddContainerNode",
    "containerNode",
    "_iRemoveContainerNode",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-core/lib/utils/Extensions",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_this",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "BasicPartition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "traversePartitions",
    "traverser",
    "traverse",
    "awayjs-display/lib/partition/BasicPartition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_pTouchPoints",
    "_onPartitionChangedDelegate",
    "_onPartitionChanged",
    "_onProjectionChangedDelegate",
    "_onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "_onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "_onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "getLocalTouchPoints",
    "localPosition",
    "localTouchPoints",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_pCamera",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "_colorTransform",
    "_applyColorTransform",
    "_parentColorTransform",
    "testBillboardCollision",
    "_iApplyRenderableOwner",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "viewProjection",
    "invLen",
    "append",
    "nX",
    "nY",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_tempPoint",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "shareAnimationGeometry",
    "getSubMeshFromSubGeometry",
    "_center",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "subGeometriesCount",
    "hitTestCurveGeometry",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/MovieClip",
    "Event",
    "TextField",
    "MouseEvent",
    "MovieClip",
    "timeline",
    "_isButton",
    "_currentFrameIndex",
    "_isPlaying",
    "_isInit",
    "_potentialInstances",
    "_depth_sessionIDs",
    "_sessionID_childs",
    "loop",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "reset_textclones",
    "isAsset",
    "text",
    "numFrames",
    "exit_frame",
    "_skipAdvance",
    "freeFromScript",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "sessionID",
    "unregisterScriptObject",
    "play",
    "advanceFrame",
    "execute_queue",
    "execute_intervals",
    "skipChildren",
    "logHierarchy",
    "printHierarchyName",
    "console",
    "log",
    "instance",
    "awayjs-core/lib/events/Event",
    "awayjs-display/lib/entities/TextField",
    "awayjs-display/lib/events/MouseEvent",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "awayjs-core/lib/data/BlendMode",
    "TextFieldType",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "toString",
    "reConstruct",
    "_textFormat",
    "_textColor",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "additional_margin_x",
    "offset_x",
    "additional_margin_y",
    "offset_y",
    "y_offset",
    "prev_char",
    "whitespace_width",
    "get_whitespace_width",
    "textlines",
    "split",
    "final_lines_chars",
    "final_lines_char_scale",
    "final_lines_width",
    "tl",
    "words",
    "word_width",
    "word_chars",
    "word_chars_scale",
    "c_cnt",
    "w",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "fallback_font_table",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "textWidth",
    "fw",
    "x_offset",
    "align",
    "positions2",
    "numVertices",
    "curveData2",
    "curves",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "_camera",
    "object",
    "VISIBLITY_UPDATED",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "setInterval",
    "func",
    "_intervalID",
    "_active_intervals",
    "clearInterval",
    "mc",
    "script",
    "_queued_mcs_pass2",
    "_queued_mcs",
    "_queued_scripts",
    "_queued_scripts_pass2",
    "caller",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "parent",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "changedTouches",
    "clientY",
    "preventDefault",
    "updateColliders",
    "bounds",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "touches",
    "touch",
    "identifier",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touchPointID",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "NodeBase",
    "PartitionBase",
    "_rootNode",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/PartitionBase",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/ContainerNode",
    "ContainerNode",
    "container",
    "isContainerNode",
    "_childDepths",
    "_childMasks",
    "_numChildMasks",
    "_pool",
    "_container",
    "_partition",
    "numEntities",
    "_pEntityNode",
    "_pNumChildNodes",
    "_pChildNodes",
    "iAddNode",
    "node",
    "isContainer",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "disposeItem",
    "iRemoveEntity",
    "iRemoveNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_entity",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "updateDebugEntity",
    "awayjs-display/lib/partition/IDisplayObjectNode",
    "awayjs-display/lib/partition/INode",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_explicitDebugVisible",
    "_debugChildrenVisible",
    "applyDebugEntity",
    "pop",
    "EntityNodePool",
    "_updatesMade",
    "_entityNodePool",
    "updateEntities",
    "iMarkForUpdate",
    "_updateQueue",
    "_iUpdateQueueNext",
    "findParentForNode",
    "targetNode",
    "getItem",
    "awayjs-display/lib/pool/EntityNodePool",
    "awayjs-display/lib/partition/PointLightNode",
    "PointLightNode",
    "pointLight",
    "_pointLight",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphPartition",
    "ContainerNodePool",
    "SceneGraphPartition",
    "_containerNodePool",
    "awayjs-display/lib/pool/ContainerNodePool",
    "awayjs-display/lib/partition/SkyboxNode",
    "SkyboxNode",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nx",
    "ny",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "posDim",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "curveDim",
    "id0",
    "id1",
    "id2",
    "bx",
    "by",
    "curvex",
    "dot",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "uu",
    "vv",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "_view",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "updateLocalPosition",
    "getMasksCollision",
    "children",
    "layerHit",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "displayObjectContainer",
    "_classPool",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "registerClass",
    "entityNodeClass",
    "addDefaults",
    "main",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "subMeshClass",
    "classPool",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "_offset_x",
    "_offset_y",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumEntities",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "boundingBox",
    "curveAttributes",
    "precheck",
    "divisions",
    "conversionX",
    "conversionY",
    "minx",
    "miny",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "nodes",
    "index_x",
    "index_y",
    "nodeCount",
    "posDim2",
    "load2",
    "loadXY",
    "store2",
    "storeXY",
    "swizzle",
    "shuffle",
    "maxRadiusSquared",
    "radiusSquared",
    "load123",
    "store123",
    "temp",
    "tempFloat32x4",
    "mul",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "AAAAA,QAAA,QAAAC,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,SAAAR,UAAA,YAAAA,OAAA,KAAAO,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAG,EAAA,MAAAA,GAAAH,GAAA,EAAA,IAAAI,GAAA,GAAAC,OAAA,uBAAAL,EAAA,IAAA,MAAAI,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAV,EAAAG,IAAAQ,WAAAZ,GAAAI,GAAA,GAAAS,KAAAF,EAAAC,QAAA,SAAAb,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAC,QAAAb,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAQ,QAAA,GAAAL,SAAAT,UAAA,YAAAA,OAAA,KAAA,GAAAM,GAAA,EAAAA,EAAAF,EAAAY,OAAAV,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAY,gCAAA,SAAAjB,EAAAkB,EAAAJ,SCEMK,qDAAqD,SAASnB,EAAQkB,EAAOJ,SAE7EM,iDAAiD,SAASpB,EAAQkB,EAAOJ,SAEzEO,8CAA8C,SAASrB,EAAQkB,EAAOJ,SAEtEQ,0CAA0C,SAAStB,EAAQkB,EAAOJ,SAElES,wDAAwD,SAASvB,EAAQkB,EAAOJ,GACtF,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GCdtB,IAAOG,GAASjC,EAAc,oCDoB9B,ICfMkC,GAAiB,SAAAC,GAASX,EAA1BU,EAAiBC,EActB,SAdKD,KAgBJC,EAAApB,KAAAU,MAVDW,OAAAC,eAAWH,EAAAF,UAAA,cDkBJM,IClBP,WAEC,MAAOb,MAAKc,cDmBNC,WAAY,KACZC,aAAc,MCNdP,GAAAF,UAAAU,QAAP,YAOAN,QAAAC,eAAWH,EAAAF,UAAA,aDUJM,ICVP,WAEC,MAAOJ,GAAkBS,WDWnBH,WAAY,KACZC,aAAc,MCzCPP,GAAAS,UAAmB,2BA+BlC,OAAAT,IAjCgCD,EAmChCf,GAA2BJ,QAAlBoB,IDeNU,oCAAoCC,YAAYC,yCAAyC,SAAS9C,EAAQkB,EAAOJ,GAIpH,GEzDMiC,GAAa,WAAnB,QAAMA,MAKSA,EAAAC,mBAA4B,mBAK5BD,GAAAE,YAAqB,OACpC,OAAAF,KAEA7B,GAAuBJ,QAAdiC,OF2DHG,4CAA4C,SAASlD,EAAQkB,EAAOJ,GAC1E,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GG/EtB,IAAOqB,GAAgBnD,EAAc,8CACrC,IAAOoD,GAAgBpD,EAAc,8CAOrC,IAAOqD,GAAerD,EAAc,0CAEpC,IAAOsD,GAAgBtD,EAAc,4CH8ErC,IGvEMuD,GAAgB,SAAApB,GAASX,EAAzB+B,EAAgBpB,EAoGrB,SApGKoB,GAoGOC,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEXrB,EAAApB,KAAAU,KAAM+B,EAlGC/B,MAAAgC,aAAsB,CACtBhC,MAAAiC,UAAoB,IAMpBjC,MAAAkC,eAAyB,KAEzBlC,MAAAmC,QAAiB,CACjBnC,MAAAoC,QAAiB,CAGlBpC,MAAAqC,MAA6B,GAAIC,MACjCtC,MAAAuC,oBAA6B,CAsFnCvC,MAAKwC,WAAaxC,KAAKyC,oBAAwCzC,KAAKyC,oBAAoBC,QAAQ,IAAM,GAAIhB,GAAiB1B,KAAKyC,qBAAuB,GAAIf,EAE3J1B,MAAK2C,QAAU3C,KAAKyC,oBAAwCzC,KAAKyC,oBAAoBC,QAAQ,IAAM,GAAIf,GAAiB3B,KAAKyC,qBAAuB,GAAId,EAExJ3B,MAAKgC,aAAehC,KAAKwC,WAAWI,MAvFrCjC,OAAAC,eAAWkB,EAAAvB,UAAA,aHuEJM,IGvEP,WAEC,MAAOiB,GAAiBZ,WHwElBH,WAAY,KACZC,aAAc,MGtErBL,QAAAC,eAAWkB,EAAAvB,UAAA,eHyEJM,IGzEP,WAEC,MAAOb,MAAKgC,cH0ENjB,WAAY,KACZC,aAAc,MGnErBL,QAAAC,eAAWkB,EAAAvB,UAAA,iBH2EJM,IG3EP,WAEC,MAAOb,MAAKkC,gBH4ENW,IGzEP,SAAyBC,GAExB,GAAI9C,KAAKkC,gBAAkBY,EAC1B,MAED9C,MAAKkC,eAAiBY,CAEtB,IAAIA,EACH9C,KAAKiC,UAAY,MHwEZlB,WAAY,KACZC,aAAc,MGnErBL,QAAAC,eAAWkB,EAAAvB,UAAA,UHyEJM,IGzEP,WAEC,MAAOb,MAAKmC,SH0ENpB,WAAY,KACZC,aAAc,MGrErBL,QAAAC,eAAWkB,EAAAvB,UAAA,UH2EJM,IG3EP,WAEC,MAAOb,MAAKoC,SH4ENrB,WAAY,KACZC,aAAc,MGvErBL,QAAAC,eAAWkB,EAAAvB,UAAA,aH6EJM,IG7EP,WAEC,MAAOb,MAAKwC,YH8ENzB,WAAY,KACZC,aAAc,MGzErBL,QAAAC,eAAWkB,EAAAvB,UAAA,UH+EJM,IG/EP,WAEC,MAAOb,MAAK2C,SHgFN5B,WAAY,KACZC,aAAc,MGzErBL,QAAAC,eAAWkB,EAAAvB,UAAA,OH+EJM,IG/EP,WAEC,GAAIb,KAAKiC,UACRjC,KAAK+C,OAAO/C,KAAKgD,KAElB,OAAOhD,MAAKgD,MH+ENjC,WAAY,KACZC,aAAc,MG/Ddc,GAAAvB,UAAA0C,aAAP,SAAoBC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,KAEnB,MAAOrB,GAAiBsB,0BAA0BnD,KAAKwC,WAAYU,EAAQlD,KAAKgC,cAG1EF,GAAAvB,UAAA6C,gBAAP,SAAuBC,EAAiBH,GAAA,GAAAA,QAAA,GAAoB,CAApBA,EAAA,KAGvC,MAAOA,GASDpB,GAAAvB,UAAA+C,aAAP,SAAoBC,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/B,GAAID,GAAUvD,KAAKwC,WAClB,MAED,IAAIe,YAAkB7B,GAAkB,CACvC1B,KAAKyD,sBAAsBzD,KAAKwC,WAChCxC,MAAKwC,WAAgCe,MAC/B,IAAIA,EAAQ,CAClBvD,KAAKwC,WAAWK,IAAIU,EAAQC,OACtB,CACNxD,KAAKyD,sBAAsBzD,KAAKwC,WAChCxC,MAAKwC,WAAa,GAAId,GAAiB1B,KAAKyC,qBAG7CzC,KAAKgC,aAAehC,KAAKwC,WAAWI,KAEpC,IAAI5C,KAAKkC,eACRlC,KAAK0D,qBAAqB1D,KAAKgD,KAEhChD,MAAK2D,mBAEL3D,MAAK0D,qBAAqB1D,KAAKwC,WAE/BxC,MAAK4D,eAAe5D,KAAKwC,WAAWqB,IAAM,MASpC/B,GAAAvB,UAAAuD,UAAP,SAAiBP,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE5B,GAAID,GAAUvD,KAAK2C,QAClB,MAED,IAAIY,YAAkB5B,GAAkB,CACvC3B,KAAKyD,sBAAsBzD,KAAK2C,QAChC3C,MAAK2C,QAA6BY,MAC5B,IAAIA,EAAQ,CAClBvD,KAAK2C,QAAQE,IAAIU,EAAQC,OACnB,CACNxD,KAAKyD,sBAAsBzD,KAAK2C,QAChC3C,MAAK2C,QAAU,GAAIhB,GAAiB3B,KAAKyC,qBAG1CzC,KAAK0D,qBAAqB1D,KAAK2C,QAE/B3C,MAAK4D,eAAe5D,KAAK2C,QAAQkB,IAAM,MAUjC/B,GAAAvB,UAAAwC,OAAP,SAAcQ,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEzB,IAAKxD,KAAKkC,eAAgB,CACzB,GAAIqB,GAAUvD,KAAKgD,KAClB,MAED,IAAIO,YAAkB5B,GAAkB,CACvC3B,KAAKyD,sBAAsBzD,KAAKgD,KAChChD,MAAKgD,KAA0BO,MACzB,IAAIA,EAAQ,CAClB,IAAKvD,KAAKgD,KACThD,KAAKgD,KAAO,GAAIrB,GAAiB3B,KAAKyC,oBAEvCzC,MAAKgD,KAAKH,IAAIU,EAAQC,OAChB,IAAIxD,KAAKgD,KAAM,CACrBhD,KAAKyD,sBAAsBzD,KAAKgD,KAChChD,MAAKgD,KAAO,IACZ,aAEK,CACNhD,KAAKgD,KAAOnB,EAAiBkC,YAAY/D,KAAKgE,UAAWhE,KAAKgD,KAAMhD,KAAKyC,oBAAqBzC,KAAKgC,cAGpGhC,KAAK0D,qBAAqB1D,KAAKgD,KAE/BhD,MAAK4D,eAAe5D,KAAKgD,KAAKa,IAAM,MAO9B/B,GAAAvB,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAO3B,KAAAU,KAEbA,MAAKwC,WAAWvB,SAChBjB,MAAKwC,WAAa,IAElBxC,MAAK2C,QAAQ1B,SACbjB,MAAK2C,QAAU,IAEf,IAAI3C,KAAKgD,KAAM,CACdhD,KAAKgD,KAAK/B,SACVjB,MAAKgD,KAAO,MASPlB,GAAAvB,UAAA0D,MAAP,WAEC,GAAIA,GAAyB,GAAInC,GAAiB9B,KAAKyC,oBAAqBzC,KAAKyC,oBAAoBwB,QAAU,KAG/GA,GAAMC,cAAgB,KAEtB,IAAIlE,KAAKmE,QACRF,EAAMG,WAAWpE,KAAKmE,QAAQF,QAE/B,IAAIjE,KAAKqE,IACRJ,EAAMlB,OAAO/C,KAAKqE,IAAIJ,QAGvBA,GAAMC,cAAgBlE,KAAKkC,cAE3B,OAAO+B,GAGDnC,GAAAvB,UAAA+D,QAAP,SAAeC,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAEjC3C,EAAiB4C,SAASF,EAAQC,EAAQxE,KAAKqE,IAAKrE,KAAKqE,IAAIzB,OAYvDd,GAAAvB,UAAAmE,MAAP,SAAaA,GAEZ7C,EAAiB6C,MAAMA,EAAO1E,KAAK2E,UAAW3E,KAAKgC,cAG7CF,GAAAvB,UAAAqE,oBAAP,SAA2BC,GAE1BhD,EAAiB+C,oBAAoBC,EAAW7E,KAAK2E,UAAW,KAAM,KAAM3E,KAAK2E,UAAU/B,OAGrFd,GAAAvB,UAAAuE,gBAAP,SAAuBC,EAAkCC,EAAuBC,EAAuCC,GAEtH,MAAOH,GAAgBI,mBAAmBnF,KAAMgF,EAAUC,EAAoBC,GA5RjEpD,GAAAZ,UAAmB,0BA8RlC,OAAAY,IAhS+BF,EAkS/BnC,GAA0BJ,QAAjByC,IHkBNsD,8CAA8ChE,UAAUiE,8CAA8CjE,UAAUkE,0CAA0C,0CAA0CC,4CAA4C,8CAA8CC,wCAAwC,SAASjH,EAAQkB,EAAOJ,GACjW,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GIzUtB,IAAOyB,GAAgBvD,EAAa,2CAEpC,IAAOkH,GAAWlH,EAAc,sCJoVhC,IItUMmH,GAAY,SAAAhF,GAASX,EAArB2F,EAAYhF,EA8BjB,SA9BKgF,GA8BOC,EAA8BC,EAAiBZ,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAE1DtE,EAAApB,KAAAU,KAEAA,MAAK6F,aAAeD,CACpB5F,MAAK8F,aAAeH,CACpB3F,MAAKgF,SAAWA,EAzBjBrE,OAAAC,eAAW8E,EAAAnF,UAAA,aJ8UJM,II9UP,WAEC,MAAO6E,GAAaxE,WJ+UdH,WAAY,KACZC,aAAc,MI1UrBL,QAAAC,eAAW8E,EAAAnF,UAAA,eJgVJM,IIhVP,WAEC,MAAOb,MAAK8F,cJiVN/E,WAAY,KACZC,aAAc,MI7Td0E,GAAAnF,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAO3B,KAAAU,MA1CA0F,GAAAxE,UAAmB,sBAEnBwE,GAAAK,WAAyBjE,CA0CxC,OAAA4D,IA9C2BD,EAgDLhG,GAAAJ,QAAbqG,IJqUNjE,2CAA2C,2CAA2CuE,sCAAsC,wCAAwCC,yCAAyC,SAAS1H,EAAQkB,EAAOJ,GACxO,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GK3YtB,IAAO6F,GAAG3H,EAAiB,2BAC3B,IAAO4H,GAAc5H,EAAc,sCACnC,IAAO6H,GAAM7H,EAAgB,8BAC7B,IAAO8H,GAAU9H,EAAe,kCAChC,IAAO+H,GAAQ/H,EAAgB,gCAC/B,IAAOgI,GAAahI,EAAc,qCAClC,IAAOiI,GAAKjI,EAAgB,6BAE5B,IAAOkI,GAAQlI,EAAgB,gCAC/B,IAAOiC,GAASjC,EAAe,oCAM/B,IAAOmI,GAAsBnI,EAAY,iDACzC,IAAOoI,GAAUpI,EAAe,uCAIhC,IAAO+C,GAAa/C,EAAc,wCAElC,IAAOqI,GAAerI,EAAc,0CAEpC,IAAOsI,GAAStI,EAAe,oCAI/B,IAAOuI,GAAkBvI,EAAa,6CAItC,IAAOwI,GAAkBxI,EAAa,+CL8ftC,IKtXMyI,GAAa,SAAAtG,GAASX,EAAtBiH,EAAatG,EAkxClB,SAlxCKsG,KAoxCJtG,EAAApB,KAAAU,KAhxCOA,MAAAiH,cAA6B,GAAI3E,MAQjCtC,MAAAkH,kBAA4B,IAE5BlH,MAAAmH,qBAA+B,IAMhCnH,MAAAoH,iBAA4B,GAAId,EAChCtG,MAAAqH,WAAqB,KACrBrH,MAAAsH,cAAwB,KACxBtH,MAAAuH,YAAqB,CACrBvH,MAAAwH,UAAmB,KAQlBxH,MAAAyH,UAAqB,GAAInB,EAGzBtG,MAAA0H,uBAAkC,GAAIpB,EAEtCtG,MAAA2H,eAA0B,GAAIlB,EAE9BzG,MAAA4H,oBAA8B,IAC9B5H,MAAA6H,iBAA0B,CAE3B7H,MAAA8H,qBAA+B,IAC/B9H,MAAA+H,kBAA2B,CAE3B/H,MAAAgI,kBAAyC,GAAI1F,MAC5CtC,MAAAiI,sBAAgC,IACjCjI,MAAAkI,uBAAiC,IAEjClI,MAAAmI,yBAA0C,GAAIhC,EAc7CnG,MAAAoI,WAAoB,CACpBpI,MAAAqI,WAAoB,CACpBrI,MAAAsI,WAAoB,CACpBtI,MAAAuI,QAAmB,GAAI9B,EACvBzG,MAAAwI,OAAkB,GAAIlC,EAWtBtG,MAAAyI,OAAgB,CAChBzI,MAAA0I,OAAgB,CAChB1I,MAAA2I,OAAgB,CAChB3I,MAAA4I,QAAiB,CACjB5I,MAAA6I,QAAiB,CACjB7I,MAAA8I,QAAiB,CACjB9I,MAAA+I,GAAY,CACZ/I,MAAAgJ,GAAY,CACZhJ,MAAAiJ,GAAY,CACZjJ,MAAAkJ,OAAkB,GAAIzC,EACtBzG,MAAAmJ,YAAuB,GAAI1C,EAC3BzG,MAAAoJ,mBAA8B,GAAI9C,EAClCtG,MAAAqJ,WAAqB,IAErBrJ,MAAAsJ,KAAgB,GAAI7C,EACpBzG,MAAAuJ,KAAgB,GAAI9C,EACpBzG,MAAAwJ,KAAgB,GAAI/C,EACpBzG,MAAAyJ,KAAgB,GAAIhD,EAWrBzG,MAAA0J,cAAmC,GAAIpH,MACtCtC,MAAA2J,aAAiC,GAAIrH,MAIlCtC,MAAA4J,uBAAiC,KACpC5J,MAAA6J,UAAoB,KAKpB7J,MAAA8J,cAAyB,GAAIrD,EAkC9BzG,MAAA+J,cAAuBzI,EAAcC,kBAmIrCvB,MAAAgK,aAAuB,IA0VvBhK,MAAAiK,gBAAyBrD,EAAgBsD,OAypBzClK,MAAAmK,QAAiB,CAYvBnK,MAAKoK,qBAAuB,GAAI9H,OAAgB,EAEhDtC,MAAKoK,qBAAqB,GAAKpK,KAAKsJ,IACpCtJ,MAAKoK,qBAAqB,GAAKpK,KAAKuJ,IACpCvJ,MAAKoK,qBAAqB,GAAKpK,KAAKwJ,IACpCxJ,MAAKoK,qBAAqB,GAAKpK,KAAKyJ,IAGpCzJ,MAAKqK,WAAa,GAAIxD,GAAU7G,KAEhCA,MAAKyH,UAAU6C,UAEftK,MAAKwI,OAAO+B,YAAY,GAAI,EAAG,EAG/BvK,MAAKwK,YAAc7D,EAAW8D,iBA7qC/B9J,OAAAC,eAAWoG,EAAAzG,UAAA,WLoVJM,IKpVP,WAEC,MAAOb,MAAK0K,ULqVN7H,IKlVP,SAAmBC,GAElB9C,KAAK0K,SAAW5H,GLmVV/B,WAAY,KACZC,aAAc,MKjVlBL,QAAAC,eAAWoG,EAAAzG,UAAA,yBLoVPM,IKpVJ,WAEI,MAAOb,MAAK4J,wBLqVZ/G,IKlVJ,SAAiCC,GAEnC,GAAI9C,KAAK4J,wBAA0B9G,EAClC,MAEK9C,MAAK4J,uBAAyB9G,CAEpC9C,MAAK2K,kCAAkCjE,EAAuBkE,kBLiVxD7J,WAAY,KACZC,aAAc,MKpUrBL,QAAAC,eAAWoG,EAAAzG,UAAA,SL6UJM,IK7UP,WAEO,MAAOb,MAAK6K,wBAAyB7K,KAAK6K,wBAAwBC,gBAAkB,GL8UpFjI,IK3UJ,SAAiBC,GAEnB,IAAK9C,KAAK6K,wBACT7K,KAAK+K,iBAAmB,GAAI5E,EAEvBnG,MAAK6K,wBAAwBC,gBAAkBhI,GL2U/C/B,WAAY,KACZC,aAAc,MK5SrBL,QAAAC,eAAWoG,EAAAzG,UAAA,cLkTJM,IKlTP,WAEC,MAAOb,MAAKwK,aLmTN3H,IKhTP,SAAsBC,GAErB,GAAI9C,KAAKwK,aAAe1H,EACvB,MAED9C,MAAKwK,YAAc1H,CAEnB9C,MAAKgL,oBAEL,IAAIC,GAAajL,KAAK2J,aAAapK,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,EAAKjM,IAC/BgB,KAAK2J,aAAa3K,GAAGkM,gBL8ShBnK,WAAY,KACZC,aAAc,MKlOrBL,QAAAC,eAAWoG,EAAAzG,UAAA,SL+OJM,IK/OP,WAEC,MAAOb,MAAKmL,SAASC,MAAMpL,KAAKqL,QLgP1BxI,IK7OP,SAAiByI,GAEhB,GAAItL,KAAKuL,QAAUD,EAClB,MAEDtL,MAAKuL,OAASD,CAEdtL,MAAKwL,WAAWF,EAAItL,KAAKmL,SAASC,QL4O5BrK,WAAY,KACZC,aAAc,MKvOrBL,QAAAC,eAAWoG,EAAAzG,UAAA,UL6OJM,IK7OP,WAECb,KAAKuI,QAAQkD,EAAIzL,KAAK0L,SACtB1L,MAAKuI,QAAQoD,EAAI3L,KAAK4L,SACtB5L,MAAKuI,QAAQsD,EAAI7L,KAAK8L,SAEtB,OAAO9L,MAAKuI,SL6ON1F,IK1OP,SAAkBC,GAEjB9C,KAAK0L,UAAY5I,EAAM2I,CACvBzL,MAAK4L,UAAY9I,EAAM6I,CACvB3L,MAAK8L,UAAYhJ,EAAM+I,GL2OjB9K,WAAY,KACZC,aAAc,MKzIrBL,QAAAC,eAAWoG,EAAAzG,UAAA,ULsOJM,IKtOP,WAEC,MAAOb,MAAKmL,SAASY,OAAO/L,KAAKgM,QLuO3BnJ,IKpOP,SAAkByI,GAEjB,GAAItL,KAAKiM,SAAWX,EACnB,MAEDtL,MAAKiM,QAAUX,CAEftL,MAAKkM,WAAWZ,EAAItL,KAAKmL,SAASY,SLmO5BhL,WAAY,KACZC,aAAc,MKzNrBL,QAAAC,eAAWoG,EAAAzG,UAAA,SLoOJM,IKpOP,WAEC,GAAIb,KAAKmM,SACR,MAAOnM,MAAKmM,SAASC,cAAcpM,KAEpC,OAAO,ILoODe,WAAY,KACZC,aAAc,MK/NrBL,QAAAC,eAAWoG,EAAAzG,UAAA,yBLqOJM,IKrOP,WAEC,GAAIb,KAAKqM,4BAA6B,CACrCrM,KAAK0H,uBAAuB4E,SAAStM,KAAKuM,eAC1CvM,MAAK0H,uBAAuB8E,QAC5BxM,MAAKqM,4BAA8B,MAEpC,MAAOrM,MAAK0H,wBLsON3G,WAAY,KACZC,aAAc,MKjOrBL,QAAAC,eAAWoG,EAAAzG,UAAA,YLuOJM,IKvOP,WAEC,MAAOb,MAAKqH,YLwONtG,WAAY,KACZC,aAAc,MKnOrBL,QAAAC,eAAWoG,EAAAzG,UAAA,eLyOJM,IKzOP,WAEC,MAAOb,MAAKsH,eL0ONvG,WAAY,KACZC,aAAc,MK3NrBL,QAAAC,eAAWoG,EAAAzG,UAAA,cL2OJM,IK3OP,WAEC,MAAOb,MAAKyM,aL4ON1L,WAAY,KACZC,aAAc,MKzMrBL,QAAAC,eAAWoG,EAAAzG,UAAA,YL4MJM,IK5MP,WAEC,MAAOb,MAAK6J,WL6MNhH,IK1MP,SAAoBC,GAEnB,GAAI9C,KAAK6J,WAAa/G,EACrB,MAED9C,MAAK6J,UAAY/G,CAEjB9C,MAAK6H,gBAAkB/E,EAAO9C,KAAK6D,IAAM,CAEzC7D,MAAK0M,mBLwMC3L,WAAY,KACZC,aAAc,MKvLrBL,QAAAC,eAAWoG,EAAAzG,UAAA,gBL0MJM,IK1MP,WAEC,MAAOb,MAAKiI,uBL2MNpF,IKxMP,SAAwBC,GAEvB,GAAI9C,KAAKiI,uBAAyBnF,EACjC,MAED9C,MAAKiI,sBAAwBnF,GLwMvB/B,WAAY,KACZC,aAAc,MK9LrBL,QAAAC,eAAWoG,EAAAzG,UAAA,ULwMJM,IKxMP,WAEC,MAAOb,MAAK2M,SLyMN5L,WAAY,KACZC,aAAc,MKhMrBL,QAAAC,eAAWoG,EAAAzG,UAAA,UL0MJM,IK1MP,WAEC,MAAOb,MAAK4M,SL2MN7L,WAAY,KACZC,aAAc,MK/LrBL,QAAAC,eAAWoG,EAAAzG,UAAA,QL4MJM,IK5MP,WAEO,MAAOb,MAAK6M,QL6MZhK,IK1MJ,SAAgBC,GAEZ9C,KAAK6M,OAAS/J,GL2Md/B,WAAY,KACZC,aAAc,MKtLrBL,QAAAC,eAAWoG,EAAAzG,UAAA,ULuMJM,IKvMP,WAEC,MAAOb,MAAKmM,ULwMNpL,WAAY,KACZC,aAAc,MKnMrBL,QAAAC,eAAWoG,EAAAzG,UAAA,aLyMJM,IKzMP,WAEC,MAAOb,MAAK8M,oBL0MNjK,IKvMP,SAAqBC,GAEpB,GAAI9C,KAAK8M,oBAAsBhK,EAC9B,MAED9C,MAAK8M,mBAAqBhK,CAE1B9C,MAAK+M,WAAW/M,KAAKgN,QAAShN,KAAKmM,SAAUnM,KAAKmM,SAASc,oBAAsB,KAEjFjN,MAAKkN,cAAc,GAAInG,GAAmBA,EAAmBoG,kBAAmBnN,QLqM1Ee,WAAY,KACZC,aAAc,MKhMrBL,QAAAC,eAAWoG,EAAAzG,UAAA,mBLsMJM,IKtMP,WAEC,MAAOb,MAAKoN,mBLuMNvK,IKpMP,SAA2BC,GAE1B9C,KAAKoN,kBAAoBtK,GLqMnB/B,WAAY,KACZC,aAAc,MKhMrBL,QAAAC,eAAWoG,EAAAzG,UAAA,SLsMJM,IKtMP,WAEC,MAAOb,MAAKkJ,QLuMNrG,IKnMP,SAAiBwK,GAEhB,GAAIrN,KAAKkJ,OAAOuC,GAAK4B,EAAM5B,GAAKzL,KAAKkJ,OAAOyC,GAAK0B,EAAM1B,GAAK3L,KAAKkJ,OAAO2C,GAAKwB,EAAMxB,EAClF,MAED7L,MAAKkJ,OAAOuC,EAAI4B,EAAM5B,CACtBzL,MAAKkJ,OAAOyC,EAAI0B,EAAM1B,CACtB3L,MAAKkJ,OAAO2C,EAAIwB,EAAMxB,CAEtB7L,MAAKsN,mBLkMCvM,WAAY,KACZC,aAAc,MKtKrBL,QAAAC,eAAWoG,EAAAzG,UAAA,QLmMJM,IKnMP,WAEC,MAAOb,MAAKuN,OLoMNxM,WAAY,KACZC,aAAc,MKjLrBL,QAAAC,eAAWoG,EAAAzG,UAAA,aL2LJM,IK3LP,WAEC,GAAIb,KAAKwN,eACRxN,KAAKyN,gBAEN,OAAOzN,MAAKoI,WAAW/B,EAAWqH,oBL2L5B7K,IKxLP,SAAqByI,GAEpB,GAAItL,KAAK0L,WAAaJ,EACrB,MAEDtL,MAAKoI,WAAakD,EAAIjF,EAAWsH,kBAEjC3N,MAAK4N,sBLuLC7M,WAAY,KACZC,aAAc,MK9KrBL,QAAAC,eAAWoG,EAAAzG,UAAA,aLwLJM,IKxLP,WAEC,GAAIb,KAAKwN,eACRxN,KAAKyN,gBAEN,OAAOzN,MAAKqI,WAAWhC,EAAWqH,oBLwL5B7K,IKrLP,SAAqByI,GAEpB,GAAItL,KAAK4L,WAAaN,EACrB,MAEDtL,MAAKqI,WAAaiD,EAAIjF,EAAWsH,kBAEjC3N,MAAK4N,sBLoLC7M,WAAY,KACZC,aAAc,MK3KrBL,QAAAC,eAAWoG,EAAAzG,UAAA,aLqLJM,IKrLP,WAEC,GAAIb,KAAKwN,eACRxN,KAAKyN,gBAEN,OAAOzN,MAAKsI,WAAWjC,EAAWqH,oBLqL5B7K,IKlLP,SAAqByI,GAEpB,GAAItL,KAAK8L,WAAaR,EACrB,MAEDtL,MAAKsI,WAAagD,EAAIjF,EAAWsH,kBAEjC3N,MAAK4N,sBLiLC7M,WAAY,KACZC,aAAc,MKnHrBL,QAAAC,eAAWoG,EAAAzG,UAAA,UL8HJM,IK9HP,WAEC,GAAIb,KAAKwN,eACRxN,KAAKyN,gBAEN,OAAOzN,MAAK4I,SL8HN/F,IK3HP,SAAkByI,GAGjBtL,KAAK6N,OAAS,IAEd7N,MAAK8N,WAAWxC,IL2HVvK,WAAY,KACZC,aAAc,MKjHrBL,QAAAC,eAAWoG,EAAAzG,UAAA,UL4HJM,IK5HP,WAEC,GAAIb,KAAKwN,eACRxN,KAAKyN,gBAEN,OAAOzN,MAAK6I,SL4HNhG,IKzHP,SAAkByI,GAGjBtL,KAAKiM,QAAU,IAEfjM,MAAKkM,WAAWZ,ILyHVvK,WAAY,KACZC,aAAc,MK9GrBL,QAAAC,eAAWoG,EAAAzG,UAAA,UL0HJM,IK1HP,WAEC,GAAIb,KAAKwN,eACRxN,KAAKyN,gBAEN,OAAOzN,MAAK8I,SL0HNjG,IKvHP,SAAkByI,GAGjBtL,KAAKuL,OAAS,IAEdvL,MAAKwL,WAAWF,ILuHVvK,WAAY,KACZC,aAAc,MKjHrBL,QAAAC,eAAWoG,EAAAzG,UAAA,SLwHJM,IKxHP,WAEC,GAAIb,KAAKwN,eACRxN,KAAKyN,gBAEN,OAAOzN,MAAKyI,QLwHN5F,IKrHP,SAAiByI,GAEhB,GAAItL,KAAK+N,OAASzC,EACjB,MAEDtL,MAAKyI,OAAS6C,CAEdtL,MAAKgO,kBLoHCjN,WAAY,KACZC,aAAc,MK9GrBL,QAAAC,eAAWoG,EAAAzG,UAAA,SLqHJM,IKrHP,WAEC,GAAIb,KAAKwN,eACRxN,KAAKyN,gBAEN,OAAOzN,MAAK0I,QLqHN7F,IKlHP,SAAiByI,GAEhB,GAAItL,KAAKiO,OAAS3C,EACjB,MAEDtL,MAAK0I,OAAS4C,CAEdtL,MAAKgO,kBLiHCjN,WAAY,KACZC,aAAc,MK3GrBL,QAAAC,eAAWoG,EAAAzG,UAAA,SLkHJM,IKlHP,WAEC,GAAIb,KAAKwN,eACRxN,KAAKyN,gBAEN,OAAOzN,MAAK2I,QLkHN9F,IK/GP,SAAiByI,GAEhB,GAAItL,KAAKkO,OAAS5C,EACjB,MAEDtL,MAAK2I,OAAS2C,CAEdtL,MAAKgO,kBL8GCjN,WAAY,KACZC,aAAc,MKzGrBL,QAAAC,eAAWoG,EAAAzG,UAAA,SL+GJM,IK/GP,WAEC,MAAOb,MAAKgN,SLgHNjM,WAAY,KACZC,aAAc,MK3GrBL,QAAAC,eAAWoG,EAAAzG,UAAA,iBLiHJM,IKjHP,WAEC,GAAIb,KAAKmO,oBAAqB,CAC7B,IAAKnO,KAAKqJ,YAAcrJ,KAAK+J,eAAiBzI,EAAcE,YAAa,CACxExB,KAAK2H,eAAiB3H,KAAKuM,eAAe6B,gBAAgBpO,KAAKmJ,iBAEzD,CACNnJ,KAAKuM,eAAe8B,aAAa,EAAGrO,KAAK2H,gBAG1C3H,KAAKmO,oBAAsB,MAE5B,MAAOnO,MAAK2H,gBLiHN5G,WAAY,KACZC,aAAc,MK/GrBL,QAAAC,eAAWoG,EAAAzG,UAAA,kBLkHJM,IKlHP,WAEC,GAAIb,KAAKsO,wBAA0B5H,EAAuB6H,gBACzDvO,KAAKwO,uBAEN,OAAOxO,MAAKoH,kBLkHNrG,WAAY,KACZC,aAAc,MKrFrBL,QAAAC,eAAWoG,EAAAzG,UAAA,wBL2FJM,IK3FP,WAEC,MAAOb,MAAKyO,uBL4FN1N,WAAY,KACZC,aAAc,MKvFrBL,QAAAC,eAAWoG,EAAAzG,UAAA,gBL6FJM,IK7FP,WAEC,MAAOb,MAAK0O,eL8FN7L,IK3FP,SAAwBC,GAEvB,GAAIA,GAAS9C,KAAK0O,cACjB,MAED1O,MAAK0O,cAAgB5L,CAErB,IAAImI,GAAajL,KAAK2J,aAAapK,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,EAAKjM,IAC/BgB,KAAK2J,aAAa3K,GAAG2P,aAAe3O,KAAK0O,eL0FpC3N,WAAY,KACZC,aAAc,MKlDrBL,QAAAC,eAAWoG,EAAAzG,UAAA,aL2FJM,IK3FP,WAEC,MAAOb,MAAKqK,YL4FNtJ,WAAY,KACZC,aAAc,MKrFrBL,QAAAC,eAAWoG,EAAAzG,UAAA,WL6FJM,IK7FP,WAEC,MAAOb,MAAK4H,qBL8FN/E,IK3FP,SAAmBC,GAElB,GAAI9C,KAAK4H,qBAAuB9E,EAC/B,MAED9C,MAAK4H,oBAAsB9E,CAE3B9C,MAAK2K,kCAAkCjE,EAAuBkI,UL0FxD7N,WAAY,KACZC,aAAc,MKxFrBL,QAAAC,eAAWoG,EAAAzG,UAAA,SL2FJM,IK3FP,WAEC,MAAOb,MAAK6O,gBL4FNhM,IKzFP,SAAiBC,GAEhB,GAAI9C,KAAK6O,gBAAkB/L,EAC1B,MAED9C,MAAK6O,eAAiB/L,CAGtB,IAAIA,GAAS,MAAQA,EAAMvD,OAAQ,CAClC,GAAI0L,GAAanI,EAAMvD,MACvB,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,EAAKjM,IAC/B8D,EAAM9D,GAAG8P,SAAW,KAGtB9O,KAAK2K,kCAAkCjE,EAAuBqI,QLuFxDhO,WAAY,KACZC,aAAc,MK3ErBL,QAAAC,eAAWoG,EAAAzG,UAAA,SLwFJM,IKxFP,WAEC,MAAOb,MAAKmL,SAAS6D,MAAMhP,KAAKiP,QLyF1BpM,IKtFP,SAAiByI,GAEhB,GAAItL,KAAK6N,QAAUvC,EAClB,MAEDtL,MAAK6N,OAASvC,CAEdtL,MAAK8N,WAAWxC,EAAItL,KAAKmL,SAAS6D,QLqF5BjO,WAAY,KACZC,aAAc,MKzErBL,QAAAC,eAAWoG,EAAAzG,UAAA,KLsFJM,IKtFP,WAEC,MAAOb,MAAK+I,ILuFNlG,IKpFP,SAAayI,GAEZ,GAAItL,KAAK+I,IAAMuC,EACd,MAEDtL,MAAK+I,GAAK/I,KAAKyH,UAAUyH,QAAQ,IAAM5D,CAEvCtL,MAAKmP,sBLmFCpO,WAAY,KACZC,aAAc,MKvErBL,QAAAC,eAAWoG,EAAAzG,UAAA,KLoFJM,IKpFP,WAEC,MAAOb,MAAKgJ,ILqFNnG,IKlFP,SAAayI,GAEZ,GAAItL,KAAKgJ,IAAMsC,EACd,MAEDtL,MAAKgJ,GAAKhJ,KAAKyH,UAAUyH,QAAQ,IAAM5D,CAEvCtL,MAAKmP,sBLiFCpO,WAAY,KACZC,aAAc,MK5DrBL,QAAAC,eAAWoG,EAAAzG,UAAA,KLkFJM,IKlFP,WAEC,MAAOb,MAAKiJ,ILmFNpG,IKhFP,SAAayI,GAEZ,GAAItL,KAAKiJ,IAAMqC,EACd,MAEDtL,MAAKiJ,GAAKjJ,KAAKyH,UAAUyH,QAAQ,IAAM5D,CAEvCtL,MAAKmP,sBL+ECpO,WAAY,KACZC,aAAc,MKzCdgG,GAAAzG,UAAA6O,iBAAP,SAAwBC,EAAaC,GAEpC5O,EAAAH,UAAM6O,iBAAgB9P,KAAAU,KAACqP,EAAMC,EAE7B,QAAQD,GACP,IAAKtI,GAAmBwI,iBACvBvP,KAAKwP,yBAA2B,IAChC,MACD,KAAKzI,GAAmB0I,iBACvBzP,KAAK0P,yBAA2B,IAChC,MACD,KAAK3I,GAAmB4I,aACvB3P,KAAK4P,qBAAuB,IAC5B,MACD,KAAK7I,GAAmB8I,cACvB7P,KAAK8P,sBAAwB,IAC7B,MACD,KAAK/I,GAAmBgJ,cACvB/P,KAAKgQ,sBAAwB,IAC7B,MACD,KAAKjJ,GAAmBkJ,uBACvBjQ,KAAKkQ,+BAAiC,IACtC,QAOIlJ,GAAAzG,UAAA0D,MAAP,WAEC,GAAIkM,GAA4B,GAAInJ,EAEpChH,MAAKoQ,OAAOD,EAEZ,OAAOA,GAGDnJ,GAAAzG,UAAA6P,OAAP,SAAcD,GAEbA,EAAYE,UAAYrQ,KAAK8M,kBAC7BqD,GAAYG,WAAatQ,KAAKwK,WAC9B2F,GAAY9C,MAAQrN,KAAKkJ,MACzBiH,GAAYI,KAAOvQ,KAAK6M,MACxBsD,GAAYK,aAAexQ,KAAKiI,qBAChCkI,GAAYM,MAAQzQ,KAAKyQ,KACzBN,GAAYrB,SAAW9O,KAAK6J,SAE5B,IAAI7J,KAAK6O,eACRsB,EAAYO,MAAQ1Q,KAAK6O,cAE1BsB,GAAYQ,WAAa3Q,KAAK2Q,UAE9B,IAAI3Q,KAAK0K,SACRyF,EAAYS,QAAU5Q,KAAK0K,SAASzG,MAAMkM,EAE3C,IAAInQ,KAAKqK,WAAWwG,eACnBV,EAAYtL,UAAUgM,eAAiB7Q,KAAKqK,WAAWwG,eAAe5M,QAMjE+C,GAAAzG,UAAAU,QAAP,WAEC,GAAIjB,KAAKmM,SACRnM,KAAKmM,SAAS2E,YAAY9Q,MA2BrBgH,GAAAzG,UAAAwQ,UAAP,SAAiBC,GAEhB,MAAOhR,MAAKiR,QAqBNjK,GAAAzG,UAAA2Q,QAAP,SAAeF,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEd,MAAOhR,MAAKiR,QAGNjK,GAAAzG,UAAA4K,OAAP,SAAc6F,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEb,GAAIhR,KAAKmR,eACRnR,KAAKmR,eAAeC,YAGrB,IAAIpR,KAAKkH,kBAAmB,CAC3BlH,KAAKqR,mBAGL,IAAIrR,KAAK6N,QAAU,KAClB7N,KAAK8N,WAAW9N,KAAK6N,OAAO7N,KAAKsR,YAAYtC,MAE9C,IAAIhP,KAAKiM,SAAW,KACnBjM,KAAKkM,WAAWlM,KAAKiM,QAAQjM,KAAKsR,YAAYvF,OAE/C,IAAI/L,KAAKuL,QAAU,KAClBvL,KAAKwL,WAAWxL,KAAKuL,OAAOvL,KAAKsR,YAAYlG,OAG/C,GAAI4F,GAAyB,MAAQA,GAAyBhR,KAC7D,MAAOA,MAAKsR,WAEb,IAAIN,GAAyBhR,KAAKmM,SACjC,MAAOnM,MAAK2Q,WAAWY,aAAavR,KAAKsR,iBAEzC,OAAON,GAAsBQ,sBAAsBD,aAAavR,KAAKuM,eAAegF,aAAavR,KAAKsR,cAGjGtK,GAAAzG,UAAAkR,UAAP,SAAiBT,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEhB,GAAIhR,KAAKmR,eACRnR,KAAKmR,eAAeC,YAErB,IAAIpR,KAAKmH,qBACRnH,KAAK0R,sBAEN,OAAO1R,MAAK2R,eAoBN3K,GAAAzG,UAAAqR,cAAP,SAAqBC,EAAa3O,GAAA,GAAAA,QAAA,GAAmB,CAAnBA,EAAA,KAEjClD,KAAK8J,cAAcgI,MAAMD,EAAMpG,EAAGoG,EAAMlG,EAAG,EAC3C,IAAIoG,GAAe/R,KAAKwR,sBAAsBpD,gBAAgBpO,KAAK8J,cAAe9J,KAAK8J,cAEvF,KAAK5G,EACJA,EAAS,GAAIsD,EAEdtD,GAAOuI,EAAIsG,EAAItG,CACfvI,GAAOyI,EAAIoG,EAAIpG,CAEf,OAAOzI,GAqBD8D,GAAAzG,UAAAyR,gBAAP,SAAuBC,GAEtB,MAAOjS,MAAKwR,sBAAsBpD,gBAAgB6D,GAW5CjL,GAAAzG,UAAA2R,cAAP,SAAqBC,GAEpB,GAAIC,GAAaD,EAAIhH,QACrB,KAAIiH,EAAQ,MAAO,MACnB,IAAIC,GAAgB,GAAI7L,GAAM4L,EAAO3G,EAAE2G,EAAOzG,EAC9C,IAAI2G,GAAmB,GAAI9L,GAAM4L,EAAO3G,EAAE2G,EAAOzG,EAAEyG,EAAOrG,OAC1D,IAAIwG,GAAiB,GAAI/L,GAAM4L,EAAO3G,EAAE2G,EAAOpD,MAAMoD,EAAOzG,EAC5D,IAAI6G,GAAoB,GAAIhM,GAAM4L,EAAO3G,EAAE2G,EAAOpD,MAAMoD,EAAOzG,EAAEyG,EAAOrG,OAExEsG,GAAUrS,KAAK4R,cAAcO,EAAIM,cAAcJ,GAC/CC,GAAatS,KAAK4R,cAAcO,EAAIM,cAAcH,GAClDC,GAAWvS,KAAK4R,cAAcO,EAAIM,cAAcF,GAChDC,GAAcxS,KAAK4R,cAAcO,EAAIM,cAAcD,GAEnD,IAAIE,GAAU1S,KAAKmL,QACnB,KAAIuH,EAAK,MAAO,MAGhB,IAAGL,EAAQ5G,GAAKiH,EAAIC,MAAQN,EAAQ5G,GAAKiH,EAAIC,MAAQN,EAAQ1G,GAAK+G,EAAIE,KAAOP,EAAQ1G,GAAK+G,EAAIG,OAAQ,MAAO,KAC7G,IAAGP,EAAW7G,GAAKiH,EAAIC,MAAQL,EAAW7G,GAAKiH,EAAIC,MAAQL,EAAW3G,GAAK+G,EAAIE,KAAON,EAAW3G,GAAK+G,EAAIG,OAAQ,MAAO,KACzH,IAAGN,EAAS9G,GAAKiH,EAAIC,MAAQJ,EAAS9G,GAAKiH,EAAIC,MAAQJ,EAAS5G,GAAK+G,EAAIE,KAAOL,EAAS5G,GAAK+G,EAAIG,OAAQ,MAAO,KACjH,IAAGL,EAAY/G,GAAKiH,EAAIC,MAAQH,EAAY/G,GAAKiH,EAAIC,MAAQH,EAAY7G,GAAK+G,EAAIE,KAAOJ,EAAY7G,GAAK+G,EAAIG,OAAQ,MAAO,KLgBvH,IKbFC,GAAaP,EAAS5G,EAAI0G,EAAQ1G,CACtC,IAAIoH,KAAeR,EAAS9G,EAAI4G,EAAQ5G,EAExC,IAAIuH,GAAaR,EAAY7G,EAAI4G,EAAS5G,CAC1C,IAAIsH,KAAeT,EAAY/G,EAAI8G,EAAS9G,EAE5C,IAAIyH,GAAaZ,EAAW3G,EAAI6G,EAAY7G,CAC5C,IAAIwH,KAAeb,EAAW7G,EAAI+G,EAAY/G,EAE9C,IAAI2H,GAAaf,EAAQ1G,EAAI2G,EAAW3G,CACxC,IAAI0H,KAAehB,EAAQ5G,EAAI6G,EAAW7G,EAE1C,IAAI6H,GAAaZ,EAAIC,KAAON,EAAQ5G,CACpC,IAAI8H,GAAab,EAAIE,IAAMP,EAAQ1G,CACnC,IAAI6H,GAAad,EAAIC,KAAOJ,EAAS9G,CACrC,IAAIgI,GAAaf,EAAIE,IAAML,EAAS5G,CACpC,IAAI+H,GAAahB,EAAIC,KAAOH,EAAY/G,CACxC,IAAIkI,GAAajB,EAAIE,IAAMJ,EAAY7G,CACvC,IAAIiI,GAAalB,EAAIC,KAAOL,EAAW7G,CACvC,IAAIoI,GAAanB,EAAIE,IAAMN,EAAW3G,CAEtC,IAAImI,GAAehB,EAAIQ,EAAMP,EAAIQ,CACjC,IAAIQ,GAAef,EAAIQ,EAAMP,EAAIQ,CACjC,IAAIO,GAAed,EAAIQ,EAAMP,EAAIQ,CACjC,IAAIM,GAAeb,EAAIQ,EAAMP,EAAIQ,CAGjC,IAAGC,EAAO,GAAKC,EAAO,GAAKC,EAAO,GAAKC,EAAO,EAAG,MAAO,KAExDX,GAAMZ,EAAIwB,MAAQ7B,EAAQ5G,CAC1B8H,GAAMb,EAAIE,IAAMP,EAAQ1G,CACxB6H,GAAMd,EAAIwB,MAAQ3B,EAAS9G,CAC3BgI,GAAMf,EAAIE,IAAML,EAAS5G,CACzB+H,GAAMhB,EAAIwB,MAAQ1B,EAAY/G,CAC9BkI,GAAMjB,EAAIE,IAAMJ,EAAY7G,CAC5BiI,GAAMlB,EAAIwB,MAAQ5B,EAAW7G,CAC7BoI,GAAMnB,EAAIE,IAAMN,EAAW3G,CAE3BmI,GAAQhB,EAAIQ,EAAMP,EAAIQ,CACtBQ,GAAQf,EAAIQ,EAAMP,EAAIQ,CACtBO,GAAQd,EAAIQ,EAAMP,EAAIQ,CACtBM,GAAQb,EAAIQ,EAAMP,EAAIQ,CAGtB,IAAGC,EAAO,GAAKC,EAAO,GAAKC,EAAO,GAAKC,EAAO,EAAG,MAAO,KAExDX,GAAMZ,EAAIC,KAAON,EAAQ5G,CACzB8H,GAAMb,EAAIG,OAASR,EAAQ1G,CAC3B6H,GAAMd,EAAIC,KAAOJ,EAAS9G,CAC1BgI,GAAMf,EAAIG,OAASN,EAAS5G,CAC5B+H,GAAMhB,EAAIC,KAAOH,EAAY/G,CAC7BkI,GAAMjB,EAAIG,OAASL,EAAY7G,CAC/BiI,GAAMlB,EAAIC,KAAOL,EAAW7G,CAC5BoI,GAAMnB,EAAIG,OAASP,EAAW3G,CAE9BmI,GAAQhB,EAAIQ,EAAMP,EAAIQ,CACtBQ,GAAQf,EAAIQ,EAAMP,EAAIQ,CACtBO,GAAQd,EAAIQ,EAAMP,EAAIQ,CACtBM,GAAQb,EAAIQ,EAAMP,EAAIQ,CAGtB,IAAGC,EAAO,GAAKC,EAAO,GAAKC,EAAO,GAAKC,EAAO,EAAG,MAAO,KAExDX,GAAMZ,EAAIwB,MAAQ7B,EAAQ5G,CAC1B8H,GAAMb,EAAIG,OAASR,EAAQ1G,CAC3B6H,GAAMd,EAAIwB,MAAQ3B,EAAS9G,CAC3BgI,GAAMf,EAAIG,OAASN,EAAS5G,CAC5B+H,GAAMhB,EAAIwB,MAAQ1B,EAAY/G,CAC9BkI,GAAMjB,EAAIG,OAASL,EAAY7G,CAC/BiI,GAAMlB,EAAIwB,MAAQ5B,EAAW7G,CAC7BoI,GAAMnB,EAAIG,OAASP,EAAW3G,CAE9BmI,GAAQhB,EAAIQ,EAAMP,EAAIQ,CACtBQ,GAAQf,EAAIQ,EAAMP,EAAIQ,CACtBO,GAAQd,EAAIQ,EAAMP,EAAIQ,CACtBM,GAAQb,EAAIQ,EAAMP,EAAIQ,CAGtB,IAAGC,EAAO,GAAKC,EAAO,GAAKC,EAAO,GAAKC,EAAO,EAAG,MAAO,KAExD,OAAO,OAqBDjN,GAAAzG,UAAA4T,aAAP,SAAoB1I,EAAUE,EAAUyI,EAA2BC,GAA3B,GAAAD,QAAA,GAAyB,CAAzBA,EAAA,MAA2B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,MAElE,MAAO,OAGDrN,GAAAzG,UAAA+T,OAAP,WAEC,MAAOtU,MAAK6H,kBAAoB,EAS1Bb,GAAAzG,UAAAgU,OAAP,SAAcrR,EAAiBsR,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAG9B,GAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EAEJ,IAAIJ,GAAU,KACbA,EAAS/N,EAASoO,WAElBL,GAAOM,WAERJ,GAAQxR,EAAO6R,SAAS/U,KAAK2Q,WAAWsB,SACxCyC,GAAMI,WAENH,GAAQH,EAAOQ,aAAaN,EAC5BC,GAAMG,WAEN,IAAIH,EAAMpV,OAAS,IAAM,CACxBoV,EAAMlJ,EAAI+I,EAAO7I,CACjBgJ,GAAMhJ,EAAI6I,EAAO/I,CACjBkJ,GAAM9I,EAAI,CACV8I,GAAMG,YAGPL,EAAQC,EAAMM,aAAaL,EAE3BC,GAAMrO,EAAc0O,kBAEpBL,GAAI,GAAKD,EAAMlJ,CACfmJ,GAAI,GAAKD,EAAMhJ,CACfiJ,GAAI,GAAKD,EAAM9I,CACf+I,GAAI,GAAK,CAETA,GAAI,GAAKH,EAAMhJ,CACfmJ,GAAI,GAAKH,EAAM9I,CACfiJ,GAAI,GAAKH,EAAM5I,CACf+I,GAAI,GAAK,CAETA,GAAI,GAAKF,EAAMjJ,CACfmJ,GAAI,GAAKF,EAAM/I,CACfiJ,GAAI,IAAMF,EAAM7I,CAChB+I,GAAI,IAAM,CAEV,IAAIM,GAAa,GAAI5O,EACrB4O,GAAEC,gBAAgBP,EAElB,IAAIQ,GAAeF,EAAEG,YAAY,EAEjCrV,MAAK0L,UAAY0J,EAAI3J,EAAEpF,EAAWqH,kBAClC1N,MAAK4L,UAAYwJ,EAAIzJ,EAAEtF,EAAWqH,kBAClC1N,MAAK8L,UAAYsJ,EAAIvJ,EAAExF,EAAWqH,mBA0B5B1G,GAAAzG,UAAAkS,cAAP,SAAqBZ,EAAa3O,GAAA,GAAAA,QAAA,GAAmB,CAAnBA,EAAA,KAEjClD,KAAK8J,cAAcgI,MAAMD,EAAMpG,EAAGoG,EAAMlG,EAAG,EAC3C,IAAIoG,GAAe/R,KAAKuM,eAAe6B,gBAAgBpO,KAAK8J,cAAe9J,KAAK8J,cAEhF,KAAK5G,EACJA,EAAS,GAAIsD,EAEdtD,GAAOuI,EAAIsG,EAAItG,CACfvI,GAAOyI,EAAIoG,EAAIpG,CAEf,OAAOzI,GA4BD8D,GAAAzG,UAAA+U,gBAAP,SAAuBrD,GAEtB,MAAOjS,MAAKuM,eAAe6B,gBAAgB6D,GAWrCjL,GAAAzG,UAAAgV,OAAP,SAAcC,EAAWC,EAAWC,GAEnC,GAAI1V,KAAK+I,IAAMyM,GAAMxV,KAAKgJ,IAAMyM,GAAMzV,KAAKiJ,IAAMyM,EAChD,MAED1V,MAAKyL,EAAI+J,CACTxV,MAAK2L,EAAI8J,CACTzV,MAAK6L,EAAI6J,EAUH1O,GAAAzG,UAAAoV,UAAP,SAAiBH,EAAWC,EAAWC,GAEtC,GAAIF,GAAM,GAAKC,GAAM,GAAKC,GAAM,EAC/B,MAED1V,MAAKkJ,OAAOuC,GAAK+J,CACjBxV,MAAKkJ,OAAOyC,GAAK8J,CACjBzV,MAAKkJ,OAAO2C,GAAK6J,CAEjB1V,MAAKsN,kBAQCtG,GAAAzG,UAAAqV,MAAP,SAAaC,GAEZ7V,KAAK8V,OAAOrP,EAASsP,OAAQF,GAGvB7O,GAAAzG,UAAAyV,MAAP,WAEChW,KAAKiW,QAAU,IAEf,IAAGjW,KAAK2Q,WACP3Q,KAAK2Q,WAAWrG,UAEjB,IAAGtK,KAAK+K,iBACP/K,KAAK+K,iBAAiBmL,OAGvBlW,MAAK0Q,MAAQ,IAEb1Q,MAAK8O,SAAW,MAKV9H,GAAAzG,UAAA4V,wBAAP,SAA+BC,GAE9B,GAAIpW,KAAKiK,iBAAmBrD,EAAgByP,aAAc,CACzD,GAAIC,GAAwBF,EAAO7J,eAAe8I,WAClD,IAAI3Q,GAAiB4R,EAAM,EAC3BA,GAAM,GAAKtW,KAAKuW,aAChB7R,GAAM+G,EAAIzL,KAAKiP,MACfvK,GAAMiH,EAAI3L,KAAKgM,MACftH,GAAMmH,EAAI7L,KAAKqL,MACfrL,MAAKoJ,mBAAmBoN,UAAUF,EAGlC,KAAKtW,KAAKqJ,YAAcrJ,KAAK+J,eAAiBzI,EAAcE,YAC3DxB,KAAKoJ,mBAAmBqN,oBAAoBzW,KAAKkJ,OAAOuC,EAAEzL,KAAKiP,QAASjP,KAAKkJ,OAAOyC,EAAE3L,KAAKgM,QAAShM,KAAKkJ,OAAO2C,EAAE7L,KAAKqL,OAExH,OAAOrL,MAAKoJ,mBAGb,MAAOpJ,MAAKuM,eAQNvF,GAAAzG,UAAAmW,KAAP,SAAYb,GAEX7V,KAAK8V,OAAOrP,EAASkQ,OAAQd,GASvB7O,GAAAzG,UAAAuV,OAAP,SAAcc,EAAef,GAE5B,GAAIX,GAAa,GAAI5O,EACrB4O,GAAE2B,gBAAgBhB,EAAOe,EAEzB,IAAIxB,GAAeF,EAAEG,YAAY,EAEjCrV,MAAK0L,WAAa0J,EAAI3J,EAAEpF,EAAWqH,kBACnC1N,MAAK4L,WAAawJ,EAAIzJ,EAAEtF,EAAWqH,kBACnC1N,MAAK8L,WAAasJ,EAAIvJ,EAAExF,EAAWqH,mBAU7B1G,GAAAzG,UAAAuW,SAAP,SAAgBC,EAAWC,EAAWC,GAErCjX,KAAK0L,UAAYqL,CACjB/W,MAAK4L,UAAYoL,CACjBhX,MAAK8L,UAAYmL,EAMXjQ,GAAAzG,UAAA2W,oBAAP,SAA2B7H,EAAaC,GAEvC5O,EAAAH,UAAM2W,oBAAmB5X,KAAAU,KAACqP,EAAMC,EAEhC,IAAItP,KAAKmX,iBAAiB9H,GACzB,MAED,QAAQA,GACP,IAAKtI,GAAmBwI,iBACvBvP,KAAKwP,yBAA2B,KAChC,MACD,KAAKzI,GAAmB0I,iBACvBzP,KAAK0P,yBAA2B,KAChC,MACD,KAAK3I,GAAmB4I,aACvB3P,KAAK4P,qBAAuB,KAC7B,KAAK7I,GAAmB8I,cACvB7P,KAAK8P,sBAAwB,KAC7B,MACD,KAAK/I,GAAmBgJ,cACvB/P,KAAKgQ,sBAAwB,KAC7B,MACD,KAAKjJ,GAAmBkJ,uBACvBjQ,KAAKkQ,+BAAiC,IACtC,QAUIlJ,GAAAzG,UAAA6W,UAAP,SAAiBR,EAAeS,GAE/B,GAAI5L,GAAWmL,EAAKnL,EAAGE,EAAWiL,EAAKjL,EAAGE,EAAW+K,EAAK/K,CAC1D,IAAIZ,GAAaoM,EAASC,KAAKC,KAAK9L,EAAEA,EAAIE,EAAEA,EAAIE,EAAEA,EAElD7L,MAAKyL,GAAKA,EAAER,CACZjL,MAAK2L,GAAKA,EAAEV,CACZjL,MAAK6L,GAAKA,EAAEZ,EASNjE,GAAAzG,UAAAiX,eAAP,SAAsBZ,EAAeS,GAEpC,GAAI5L,GAAWmL,EAAKnL,EAAGE,EAAWiL,EAAKjL,EAAGE,EAAW+K,EAAK/K,CAC1D,IAAIZ,GAAaoM,EAASC,KAAKC,KAAK9L,EAAEA,EAAIE,EAAEA,EAAIE,EAAEA,EAElD7L,MAAK2Q,WAAW8F,mBAAmBhL,EAAER,EAAKU,EAAEV,EAAKY,EAAEZ,EAEnDjL,MAAKyH,UAAU4G,aAAa,EAAGrO,KAAKsJ,KAEpCtJ,MAAKyL,EAAIzL,KAAKsJ,KAAKmC,CACnBzL,MAAK2L,EAAI3L,KAAKsJ,KAAKqC,CACnB3L,MAAK6L,EAAI7L,KAAKsJ,KAAKuC,EAQb7E,GAAAzG,UAAAkX,IAAP,SAAW5B,GAEV7V,KAAK8V,OAAOrP,EAASoO,OAAQgB,GAW9BlV,QAAAC,eAAWoG,EAAAzG,UAAA,uBLpEJM,IKoEP,WAEC,MAAOb,MAAK0X,qBLnEN3W,WAAY,KACZC,aAAc,MK0ErBL,QAAAC,eAAWoG,EAAAzG,UAAA,cLlEJM,IKkEP,WAEC,GAAIb,KAAK2X,eACR3X,KAAK4X,kBAEN,IAAI5X,KAAK6X,YACR7X,KAAK8X,eAEN,OAAO9X,MAAKyH,WLnEN5E,IKsEP,SAAsByI,GAErB,IAAK,GAAItM,GAAW,EAAGA,EAAI,GAAIA,IAC9BgB,KAAKyH,UAAUyH,QAAQlQ,GAAKsM,EAAI4D,QAAQlQ,EAEzCgB,MAAKyL,EAAIH,EAAI4D,QAAQ,GACrBlP,MAAK2L,EAAIL,EAAI4D,QAAQ,GACrBlP,MAAK6L,EAAIP,EAAI4D,QAAQ,GAErBlP,MAAKwN,eAAiB,IAEtBxN,MAAK2K,kCAAkCjE,EAAuB6H,kBLxExDxN,WAAY,KACZC,aAAc,MK0ErBL,QAAAC,eAAWoG,EAAAzG,UAAA,oBLvEJM,IKuEP,WAEC,MAAOb,MAAK6K,yBLtENhI,IKyEP,SAA4BC,GAE3B9C,KAAK6K,wBAA0B/H,CAE/B9C,MAAK2K,kCAAkCjE,EAAuBkE,kBLzExD7J,WAAY,KACZC,aAAc,MK8ErBL,QAAAC,eAAWoG,EAAAzG,UAAA,wBLxEJM,IKwEP,WAEC,IAAKb,KAAK+X,qBACT/X,KAAK+X,qBAAuB,GAAIjR,GAAmB9G,KAEpD,OAAOA,MAAK+X,sBLxENhX,WAAY,KACZC,aAAc,MK6EdgG,GAAAzG,UAAAyX,WAAP,SAAkBlV,GAEjB9C,KAAKmM,SAAWrJ,CAEV,IAAIA,EACT9C,KAAK+M,WAAWjK,EAAMkK,QAASlK,EAAMmK,yBAErCjN,MAAK+M,WAAW,KAAM,KAEvB/M,MAAK2K,kCAAkCjE,EAAuBuR,KAGxDjR,GAAAzG,UAAAoK,kCAAP,SAAyCuN,GAExC,GAAIC,IAAuBnY,KAAKsO,wBAA0B4J,GAAaA,CACvE,KAAKC,EACJ,MAAO,KAERnY,MAAKsO,yBAA2B4J,CAEhC,IAAIC,EAAezR,EAAuB6H,gBAAiB,CAC1DvO,KAAKqM,4BAA8B,IACnCrM,MAAKmO,oBAAsB,IAE3B,IAAInO,KAAKoY,SACRpY,KAAKqY,qBAEN,IAAIrY,KAAKmM,SACRnM,KAAKmM,SAASnB,oBAEf,IAAIhL,KAAKkQ,+BACRlQ,KAAKsY,cAActY,KAAKuY,yBAA2BvY,KAAKuY,uBAAyB,GAAIxR,GAAmBA,EAAmBkJ,uBAAwBjQ,QAGrJ,MAAO,OAMDgH,GAAAzG,UAAAwM,WAAP,SAAkByL,EAAanI,GAE9B,GAAIoI,GAAuBzY,KAAKgN,SAAWwL,CAE3C,IAAIxY,KAAKgN,SAAWhN,KAAK0X,oBAAqB,CAE7C1X,KAAKgN,QAAQ0L,sBAAsB1Y,KAAK0X,oBAGxC1X,MAAK0X,oBAAoBiB,mBAAmB3Y,KAG5CA,MAAK4Y,mBAIN5Y,KAAK0X,oBAAsB1X,KAAK8M,oBAAsBuD,CAGtD,IAAIoI,EACHzY,KAAKgN,QAAUwL,CAEhB,IAAIxY,KAAKgN,SAAWhN,KAAK0X,oBAAqB,CAE7C1X,KAAKgN,QAAQ6L,oBAAoB7Y,KAAK0X,oBAGtC1X,MAAK0X,oBAAoBoB,iBAAiB9Y,MAG3C,GAAIyY,GAAgBzY,KAAKgQ,sBACxBhQ,KAAKsY,cAActY,KAAK+Y,gBAAkB/Y,KAAK+Y,cAAgB,GAAIhS,GAAmBA,EAAmBgJ,cAAe/P,QAMnHgH,GAAAzG,UAAAqX,iBAAP,WAEC,GAAI5X,KAAKwN,eACRxN,KAAKyN,gBAENzN,MAAKsJ,KAAKmC,EAAIzL,KAAK+I,EACnB/I,MAAKsJ,KAAKqC,EAAI3L,KAAKgJ,EACnBhJ,MAAKsJ,KAAKuC,EAAI7L,KAAKiJ,EAEnBjJ,MAAKuJ,KAAKkC,EAAIzL,KAAKoI,UACnBpI,MAAKuJ,KAAKoC,EAAI3L,KAAKqI,UACnBrI,MAAKuJ,KAAKsC,EAAI7L,KAAKsI,UAEnBtI,MAAKwJ,KAAKiC,EAAIzL,KAAKyI,MACnBzI,MAAKwJ,KAAKmC,EAAI3L,KAAK0I,MACnB1I,MAAKwJ,KAAKqC,EAAI7L,KAAK2I,MAEnB3I,MAAKyJ,KAAKgC,EAAIzL,KAAK4I,OACnB5I,MAAKyJ,KAAKkC,EAAI3L,KAAK6I,OACnB7I,MAAKyJ,KAAKoC,EAAI7L,KAAK8I,OAEnB9I,MAAKyH,UAAU+O,UAAUxW,KAAKoK,qBAE9BpK,MAAK2X,eAAiB,MAGhB3Q,GAAAzG,UAAAuX,cAAP,WAEC,IAAK9X,KAAKqJ,WAAY,CACrBrJ,KAAKmJ,YAAYsC,EAAIzL,KAAKkJ,OAAOuC,EAAEzL,KAAK4I,OACxC5I,MAAKmJ,YAAYwC,EAAI3L,KAAKkJ,OAAOyC,EAAE3L,KAAK6I,OACxC7I,MAAKmJ,YAAY0C,EAAI7L,KAAKkJ,OAAO2C,EAAE7L,KAAK8I,OACxC9I,MAAKyH,UAAUgP,oBAAoBzW,KAAKmJ,YAAYsC,GAAIzL,KAAKmJ,YAAYwC,GAAI3L,KAAKmJ,YAAY0C,EAC9F,IAAI7L,KAAK+J,eAAiBzI,EAAcE,YACvCxB,KAAKyH,UAAUuR,kBAAkBhZ,KAAKkJ,OAAOuC,EAAGzL,KAAKkJ,OAAOyC,EAAG3L,KAAKkJ,OAAO2C,GAG7E7L,KAAK6X,YAAc,MAMb7Q,GAAAzG,UAAAiO,sBAAP,WAEC,GAAIxO,KAAKiZ,aACRjZ,KAAKiZ,aAAaC,kBAEnB,IAAIlZ,KAAKmM,WAAanM,KAAKmM,SAASgN,SAAU,CAC7CnZ,KAAKoH,iBAAiBkF,SAAStM,KAAKmM,SAASI,eAC7CvM,MAAKoH,iBAAiBgS,QAAQpZ,KAAK2Q,gBAC7B,CACN3Q,KAAKoH,iBAAiBkF,SAAStM,KAAK2Q,YAGrC3Q,KAAKqZ,eAAiB,KACtBrZ,MAAKsZ,eAAiB,KACtBtZ,MAAKuZ,WAAa,KAClBvZ,MAAKwZ,YAAc,KAEnBxZ,MAAKsO,yBAA2B5H,EAAuB6H,gBAGjDvH,GAAAzG,UAAAkZ,gBAAP,SAAuBC,GAEtB1Z,KAAK0J,cAAciQ,KAAKD,EAExB,OAAOA,GAID1S,GAAAzG,UAAAqZ,mBAAP,SAA0BF,GAEzB,GAAIG,GAAe7Z,KAAK0J,cAAcoQ,QAAQJ,EAE9C1Z,MAAK0J,cAAcqQ,OAAOF,EAAO,EAEjC,OAAOH,GAYD1S,GAAAzG,UAAAuE,gBAAP,SAAuBI,EAAkC8U,GAExD,MAAO,OAMDhT,GAAAzG,UAAA0Z,iBAAP,WAEC,GAAIja,KAAKiZ,aACRjZ,KAAKiZ,aAAaiB,QLtHb,IKyHFjP,GAAajL,KAAKiH,cAAc1H,MACpC,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,IAAOjM,EACjCgB,KAAKkN,cAAclN,KAAKiH,cAAcjI,GAEvCgB,MAAKiH,cAAc1H,OAAS,EAMtByH,GAAAzG,UAAA4Z,YAAP,WAEC,GAAIna,KAAKsO,wBAA0B5H,EAAuBkI,QACzD5O,KAAKoa,gBAEN,OAAOpa,MAAK8H,qBAMNd,GAAAzG,UAAA8Z,iBAAP,WAEC,GAAIra,KAAKsO,wBAA0B5H,EAAuB4T,QACzDta,KAAKua,eAEN,OAAOva,MAAK+H,iBAMNf,GAAAzG,UAAAia,gBAAP,WAEC,GAAIxa,KAAKsO,wBAA0B5H,EAAuBqI,MACzD/O,KAAKya,cAEN,OAAOza,MAAK0a,gBAGN1T,GAAAzG,UAAAoa,cAAP,WAEC,GAAI3a,KAAKsO,wBAA0B5H,EAAuBqI,MACzD/O,KAAKya,cAEN,OAAOza,MAAKgI,kBAGNhB,GAAAzG,UAAAqa,yBAAP,WAEC,GAAI5a,KAAKsO,wBAA0B5H,EAAuBkE,gBACzD5K,KAAK6a,uBAEN,OAAO7a,MAAKmI,yBAONnB,GAAAzG,UAAAua,iBAAP,WAEC,GAAI9a,KAAKsO,wBAA0B5H,EAAuBqU,cACzD/a,KAAKgb,qBAEN,OAAOhb,MAAKkI,wBAA0BlI,KAAKiI,sBAGrCjB,GAAAzG,UAAA0a,eAAP,SAAsBC,IAUdlU,GAAAzG,UAAA4a,mBAAR,WAEC,GAAInb,KAAK2X,eACR,MAED3X,MAAK2X,eAAiB,IAEtB3X,MAAK2K,kCAAkCjE,EAAuB6H,iBAMxDvH,GAAAzG,UAAA8X,oBAAP,WAEC,GAAIpN,GAAajL,KAAK2J,aAAapK,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,EAAKjM,IAC/BgB,KAAK2J,aAAa3K,GAAGqZ,sBAMfrR,GAAAzG,UAAA+M,gBAAR,WAECtN,KAAKqJ,WAAcrJ,KAAKkJ,OAAOuC,GAAK,GAAOzL,KAAKkJ,OAAOyC,GAAK,GAAO3L,KAAKkJ,OAAO2C,GAAK,CAEpF;GAAI7L,KAAK6X,YACR,MAED7X,MAAK6X,YAAc,IAEnB7X,MAAKmb,qBAMEnU,GAAAzG,UAAA4O,mBAAR,WAEC,GAAInP,KAAKqZ,eACR,MAEDrZ,MAAKqZ,eAAiB,IAEtBrZ,MAAK2K,kCAAkCjE,EAAuB6H,gBAE9D,KAAKvO,KAAKqJ,WACTrJ,KAAKsN,iBAEN,IAAItN,KAAKwP,yBACRxP,KAAKsY,cAActY,KAAKob,mBAAqBpb,KAAKob,iBAAmB,GAAIrU,GAAmBA,EAAmBwI,iBAAkBvP,QAM3HgH,GAAAzG,UAAAqN,mBAAR,SAA2ByN,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAE1B,GAAIA,EACHrb,KAAKmb,oBAEN,IAAInb,KAAKsZ,eACR,MAEDtZ,MAAKsZ,eAAiB,IAEtB,IAAItZ,KAAK0P,yBACR1P,KAAKsY,cAActY,KAAKsb,mBAAqBtb,KAAKsb,iBAAmB,GAAIvU,GAAmBA,EAAmB0I,iBAAkBzP,QAM3HgH,GAAAzG,UAAAyN,eAAR,SAAuBqN,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEtB,GAAIA,EACHrb,KAAKmb,oBAEN,IAAInb,KAAKuZ,WACR,MAEDvZ,MAAKuZ,WAAa,IAElB,IAAIvZ,KAAK4P,qBACR5P,KAAKsY,cAActY,KAAKub,eAAiBvb,KAAKub,aAAe,GAAIxU,GAAmBA,EAAmB4I,aAAc3P,QAM/GgH,GAAAzG,UAAAib,gBAAR,SAAwBH,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEvB,GAAIA,EACHrb,KAAKmb,oBAEN,IAAInb,KAAKwZ,YACR,MAEDxZ,MAAKwZ,YAAc,IAEnB,IAAIxZ,KAAK8P,sBACR9P,KAAKsY,cAActY,KAAKyb,gBAAkBzb,KAAKyb,cAAgB,GAAI1U,GAAmBA,EAAmB8I,cAAe7P,QAInHgH,GAAAzG,UAAAmb,gBAAP,SAAuBC,GAEtB3b,KAAK2J,aAAagQ,KAAKgC,EAEvB,OAAOA,GAID3U,GAAAzG,UAAAqb,mBAAP,SAA0BD,GAEzB3b,KAAK2J,aAAaoQ,OAAO/Z,KAAK2J,aAAamQ,QAAQ6B,GAAa,EAEhE,OAAOA,GAGD3U,GAAAzG,UAAAyK,mBAAP,WAEChL,KAAKkH,kBAAoB,IACzBlH,MAAKmH,qBAAuB,IAE5B,IAAInH,KAAKoY,SACRpY,KAAKqY,qBAEN,IAAIrY,KAAKmM,SACRnM,KAAKmM,SAASnB,qBAGThE,GAAAzG,UAAA8Q,kBAAP,WAECrR,KAAKkH,kBAAoB,KAEzB,IAAIlH,KAAKsR,aAAe,KACvBtR,KAAKsR,YAAc,GAAIpL,GAGlBc,GAAAzG,UAAAmR,qBAAP,WAEC1R,KAAKmH,qBAAuB,KAE5B,IAAInH,KAAK2R,gBAAkB,KAC1B3R,KAAK2R,eAAiB,GAAIvL,GAGpBY,GAAAzG,UAAA+X,cAAR,SAAsBuD,GAGrB7b,KAAKiH,cAAc0S,KAAKkC,GAGjB7U,GAAAzG,UAAAkN,eAAR,WAECzN,KAAKwN,eAAiB,KAEtB,IAAIsO,GAA2B9b,KAAKyH,UAAU4N,WAC9C,IAAID,EAEJA,GAAM0G,EAAS,EAEf,IAAI9b,KAAKoI,YAAcgN,EAAI3J,GAAKzL,KAAKqI,YAAc+M,EAAIzJ,GAAK3L,KAAKsI,YAAc8M,EAAIvJ,EAAG,CACrF7L,KAAKoI,WAAagN,EAAI3J,CACtBzL,MAAKqI,WAAa+M,EAAIzJ,CACtB3L,MAAKsI,WAAa8M,EAAIvJ,CAEtB7L,MAAK4N,mBAAmB,OAGzBwH,EAAM0G,EAAS,EAEf,IAAI9b,KAAKyI,QAAU2M,EAAI3J,GAAKzL,KAAK0I,QAAU0M,EAAIzJ,GAAK3L,KAAK2I,QAAUyM,EAAIvJ,EAAG,CACzE7L,KAAKyI,OAAS2M,EAAI3J,CAClBzL,MAAK0I,OAAS0M,EAAIzJ,CAClB3L,MAAK2I,OAASyM,EAAIvJ,CAElB7L,MAAKgO,eAAe,OAGrBoH,EAAM0G,EAAS,EAEf9b,MAAK6N,OAAS,IACd7N,MAAKiM,QAAU,IACfjM,MAAKuL,OAAS,IAEd,IAAIvL,KAAK4I,SAAWwM,EAAI3J,GAAKzL,KAAK6I,SAAWuM,EAAIzJ,GAAK3L,KAAK8I,SAAWsM,EAAIvJ,EAAG,CAC5E7L,KAAK4I,QAAUwM,EAAI3J,CACnBzL,MAAK6I,QAAUuM,EAAIzJ,CACnB3L,MAAK8I,QAAUsM,EAAIvJ,CAEnB7L,MAAKwb,gBAAgB,QAIfxU,GAAAzG,UAAAuN,WAAR,SAAmBxC,GAElB,GAAItL,KAAKiP,QAAU3D,EAClB,MAEDtL,MAAK4I,QAAU0C,CAEftL,MAAKwb,kBAGExU,GAAAzG,UAAA2L,WAAR,SAAmBZ,GAElB,GAAItL,KAAKgM,QAAUV,EAClB,MAEDtL,MAAK6I,QAAUyC,CAEftL,MAAKwb,kBAGExU,GAAAzG,UAAAiL,WAAR,SAAmBF,GAElB,GAAItL,KAAKqL,QAAUC,EAClB,MAEDtL,MAAK8I,QAAUwC,CAEftL,MAAKwb,kBAGCxU,GAAAzG,UAAAya,oBAAP,WAEChb,KAAKkI,uBAA0BlI,KAAa,SAAGA,KAAKmM,SAAS4P,eAAiB/b,KAAKmM,SAASjE,uBAAyB,IAGrH,IAAIlI,KAAKkI,wBAA0BlI,KAAKmM,WAAanM,KAAKoN,kBACzDpN,KAAKoN,kBAAqBpN,KAAKmM,SAASiB,iBAEzCpN,MAAKsO,yBAA2B5H,EAAuBqU,cAGhD/T,GAAAzG,UAAA6Z,eAAR,WAECpa,KAAK8H,qBAAwB9H,KAAa,SAAGA,KAAK4H,qBAAuB5H,KAAKmM,SAASgO,cAAgBna,KAAK4H,mBAE5G5H,MAAKsO,yBAA2B5H,EAAuBkI,QAGhD5H,GAAAzG,UAAAga,cAAR,WAECva,KAAK+H,iBAAoB/H,KAAKmM,UAAYnM,KAAKmM,SAASkO,qBAAuB,EAAIra,KAAKmM,SAASkO,mBAAqBra,KAAK6H,eAE3H7H,MAAKsO,yBAA2B5H,EAAuB4T,QAGhDtT,GAAAzG,UAAAka,aAAR,WAECza,KAAK0a,gBAAmB1a,KAAKmM,UAAYnM,KAAKmM,SAASqO,kBAAqBxa,KAAK6O,gBAAkB,KAAO7O,KAAKmM,SAASqO,kBAAkBwB,QAAQhc,KAAK6O,iBAAmB7O,KAAKmM,SAASqO,kBAAkBwB,SAAYhc,KAAK6O,gBAAkB,MAAQ7O,KAAK6O,gBAAkB,IAE5Q7O,MAAKgI,kBAAkBzI,OAAS,CAEhC,IAAIS,KAAK0a,iBAAmB1a,KAAK0a,gBAAgBnb,OAAQ,CACxD,GAAI0c,GAAmBjc,KAAK0a,gBAAgBnb,MAC5C,IAAI2c,EACJ,IAAIC,EACJ,IAAIC,EACJ,KAAK,GAAIpd,GAAW,EAAGA,EAAIid,EAAWjd,IAAK,CAC1Cmd,EAAmBnc,KAAK0a,gBAAgB1b,EACxCkd,GAAcC,EAAiB5c,MAC/B6c,GAAmB,GAAI9Z,MACvB,KAAK,GAAI+Z,GAAW,EAAGA,EAAIH,EAAaG,IACvCD,EAAiBzC,KAAKwC,EAAiBE,GAAGxY,GAE3C7D,MAAKgI,kBAAkB2R,KAAKyC,IAI9Bpc,KAAKsO,yBAA2B5H,EAAuBqI,MAGhD/H,GAAAzG,UAAAsa,sBAAR,WAEC,GAAI7a,KAAK4J,wBAA0B5J,KAAKmM,SAAU,CACjDnM,KAAKmI,yBAAyBmE,SAAStM,KAAKmM,SAASyO,2BACrD,IAAI5a,KAAK6K,wBACR7K,KAAKmI,yBAAyBiR,QAAQpZ,KAAK6K,6BACtC,CACN,GAAI7K,KAAK6K,wBACR7K,KAAKmI,yBAAyBmE,SAAStM,KAAK6K,6BAE5C7K,MAAKmI,yBAAyB+N,QAGhClW,KAAKsO,yBAA2B5H,EAAuBkE,gBAGjD5D,GAAAzG,UAAAmM,gBAAP,WAEC,GAAI1M,KAAK8O,SACR9O,KAAKwQ,aAAe,KAErBxQ,MAAK2K,kCAAkCjE,EAAuB4T,SAGxDtT,GAAAzG,UAAAqY,iBAAP,WAEC,GAAI5Z,EAEJ,KAAKA,EAAIgB,KAAK2J,aAAapK,OAAS,EAAGP,GAAK,EAAGA,IAC9CgB,KAAK2J,aAAa3K,GAAGiC,SAEtB,KAAKjC,EAAIgB,KAAK0J,cAAcnK,OAAS,EAAGP,GAAK,EAAGA,IAC/CgB,KAAK0J,cAAc1K,GAAGiC,UAEzB,OAAA+F,IA/lF4BxG,EAimFLf,GAAAJ,QAAd2H,ILhPNsV,2BAA2Blb,UAAUmb,sCAAsCnb,UAAUob,kCAAkCpb,UAAUqb,gCAAgCrb,UAAUsb,qCAAqCtb,UAAUub,6BAA6Bvb,UAAUwb,8BAA8Bxb,UAAUyb,gCAAgCzb,UAAUD,oCAAoCC,UAAUC,wCAAwC,wCAAwCyb,iDAAiD,iDAAiDC,0CAA0C,0CAA0CC,oCAAoC,oCAAoCC,uCAAuC,uCAAuCC,+CAA+C,+CAA+CC,6CAA6C,+CAA+CC,oCAAoC,SAAS7e,EAAQkB,EAAOJ,GACthC,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GM7hFtB,IAAOG,GAASjC,EAAc,oCAG9B,IAAO8e,GAAa9e,EAAa,0CN4iFjC,IM5hFM+e,GAAQ,SAAA5c,GAASX,EAAjBud,EAAQ5c,EAsBb,SAtBK4c,KAwBJ5c,EAAApB,KAAAU,KAEAA,MAAKud,eAAiB,GAAIjb,OApB3B3B,OAAAC,eAAW0c,EAAA/c,UAAA,aNgiFJM,IMhiFP,WAEC,MAAOyc,GAASpc,WNiiFVH,WAAY,KACZC,aAAc,MM5hFrBL,QAAAC,eAAW0c,EAAA/c,UAAA,iBNkiFJM,IMliFP,WAEC,MAAOb,MAAKud,gBNmiFNxc,WAAY,KACZC,aAAc,MMvhFdsc,GAAA/c,UAAAqE,oBAAP,SAA2BC,GAE1B,GAAIoG,GAAajL,KAAKud,eAAehe,MACrC,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,IAAOjM,EACjCgB,KAAKud,eAAeve,GAAG4F,oBAAoBC,GAOtCyY,GAAA/c,UAAAid,eAAP,SAAsB7X,GAErB3F,KAAKud,eAAe5D,KAAKhU,EAEzBA,GAAY8X,eAAiBzd,IAE7B,IAAIA,KAAKmX,iBAAiBkG,EAAcK,oBACvC1d,KAAKkN,cAAc,GAAImQ,GAAcA,EAAcK,mBAAoB/X,GAExE3F,MAAK2d,kBAAkBhY,GAOjB2X,GAAA/c,UAAAqd,kBAAP,SAAyBjY,GAExB3F,KAAKud,eAAexD,OAAO/Z,KAAKud,eAAezD,QAAQnU,GAAc,EAErEA,GAAY8X,eAAiB,IAE7B,IAAIzd,KAAKmX,iBAAiBkG,EAAcQ,sBACvC7d,KAAKkN,cAAc,GAAImQ,GAAcA,EAAcQ,qBAAsBlY,GAE1E3F,MAAK2d,kBAAkBhY,GAOjB2X,GAAA/c,UAAA0D,MAAP,WAEC,GAAIA,GAAiB,GAAIqZ,EACzB,IAAIrS,GAAajL,KAAKud,eAAehe,MAErC,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,IAAOjM,EACjCiF,EAAMuZ,eAAexd,KAAKud,eAAeve,GAAGiF,QAE7C,OAAOA,GAODqZ,GAAA/c,UAAAmE,MAAP,SAAaA,GAEZ,GAAIoZ,GAAqB9d,KAAKud,eAAehe,MAC7C,KAAK,GAAIP,GAAW,EAAGA,EAAI8e,IAAe9e,EACzCgB,KAAKud,eAAeve,GAAG0F,MAAMA,GAMxB4Y,GAAA/c,UAAAU,QAAP,WAEC,GAAI6c,GAAqB9d,KAAKud,eAAehe,MAE7C,KAAK,GAAIP,GAAW,EAAGA,EAAI8e,IAAe9e,EAAG,CAC5C,GAAI+e,GAA0B/d,KAAKud,eAAe,EAClDvd,MAAK4d,kBAAkBG,EACvBA,GAAQ9c,WASHqc,GAAA/c,UAAA+D,QAAP,SAAeC,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAEjC,GAAIsZ,GAAqB9d,KAAKud,eAAehe,MAE7C,KAAK,GAAIP,GAAW,EAAGA,EAAI8e,IAAe9e,EACzCgB,KAAKud,eAAeve,GAAGsF,QAAQC,EAAQC,GAGlC8Y,GAAA/c,UAAAod,kBAAP,SAAyBI,GAExB,GAAI/d,KAAKmX,iBAAiBkG,EAAcW,gBACvChe,KAAKkN,cAAc,GAAImQ,GAAcA,EAAcW,eAAgBD,IA1HvDT,GAAApc,UAAmB,kBA4HlC,OAAAoc,IA9HuB9c,EAgILf,GAAAJ,QAATie,INqgFNnc,oCAAoCC,UAAU6c,0CAA0C,4CAA4CnB,kDAAkD,SAASve,EAAQkB,EAAOJ,GAIjN,GO3pFMqH,GAAsB,WAA5B,QAAMA,MAKSA,EAAAqU,cAAuB,CAKvBrU,GAAAkI,QAAiB,CAKjBlI,GAAA4T,QAAiB,CAKjB5T,GAAAqI,MAAe,CAKfrI,GAAAkE,gBAAyB,EAKzBlE,GAAA6H,gBAAyB,EAKzB7H,GAAAuR,IAAa,EAC5B,OAAAvR,KAEAjH,GAAgCJ,QAAvBqH,OPwpFHwX,2CAA2C,SAAS3f,EAAQkB,EAAOJ,SAEnE8e,wCAAwC,SAAS5f,EAAQkB,EAAOJ,SAEhE+e,4CAA4C,SAAS7f,EAAQkB,EAAOJ,SAEpEgf,yCAAyC,SAAS9f,EAAQkB,EAAOJ,SAEjEif,oCAAoC,SAAS/f,EAAQkB,EAAOJ,SAE5Dkf,qCAAqC,SAAShgB,EAAQkB,EAAOJ,GACnE,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GQ/sFtB,IAAOme,GAAmBjgB,EAAY,6CAEtC,IAAOkgB,GAAsBlgB,EAAW,uDAGxC,IAAOmgB,GAAUngB,EAAc,uCAG/B,IAAMogB,GAAS,SAAAje,GAASX,EAAlB4e,EAASje,EA6Bd,SA7BKie,KA+BJje,EAAApB,KAAAU,KA3BOA,MAAA4e,OAAgB,QAChB5e,MAAA6e,QAAiB,CACjB7e,MAAA8e,QAAiB,CACjB9e,MAAA+e,QAAiB,CAEjB/e,MAAAgf,cAAuB,QACvBhf,MAAAif,SAAkB,CACnBjf,MAAAkf,WAAoB,CACpBlf,MAAAmf,WAAoB,CACpBnf,MAAAof,WAAoB,CAEnBpf,MAAAqf,UAAmB,CACpBrf,MAAAsf,YAAqB,CACrBtf,MAAAuf,YAAqB,CACrBvf,MAAAwf,YAAqB,CAEpBxf,MAAAyf,SAAkB,CACnBzf,MAAA0f,WAAoB,CACpB1f,MAAA2f,WAAoB,CACpB3f,MAAA4f,WAAoB,CAEnB5f,MAAA6f,cAAwB,MAShClf,OAAAC,eAAW+d,EAAApe,UAAA,gBRksFJM,IQlsFP,WAEC,MAAOb,MAAK6f,eRmsFNhd,IQhsFP,SAAwBC,GAEvB,GAAI9C,KAAK6f,eAAiB/c,EACzB,MAED9C,MAAK6f,cAAgB/c,CAErB,IAAIA,EAAO,CACV,GAAI9C,KAAK8f,eAAiB,KACzB9f,KAAK8f,cAAgB9f,KAAK+f,qBAE3B/f,MAAK8f,cAAcE,MAAQhgB,SACrB,CACNA,KAAK8f,cAAc7e,SACnBjB,MAAK8f,cAAgB,KAGtB9f,KAAKkN,cAAc,GAAIwR,GAAWA,EAAWuB,uBR+rFvClf,WAAY,KACZC,aAAc,MQ7rFd2d,GAAApe,UAAAwf,oBAAP,WAEC,KAAM,IAAIvB,GAGX7d,QAAAC,eAAW+d,EAAApe,UAAA,YR8rFJM,IQ9rFP,WAEC,MAAOb,MAAKqf,WR+rFNxc,IQ5rFP,SAAoBC,GAEnB,GAAIA,EAAQ,EACXA,EAAQ,CAET9C,MAAKqf,UAAYvc,CACjB9C,MAAKkgB,kBR4rFCnf,WAAY,KACZC,aAAc,MQ1rFrBL,QAAAC,eAAW+d,EAAApe,UAAA,WR6rFJM,IQ7rFP,WAEC,MAAOb,MAAKyf,UR8rFN5c,IQ3rFP,SAAmBC,GAElB,GAAIA,EAAQ,EACXA,EAAQ,CAET9C,MAAKyf,SAAW3c,CAChB9C,MAAKmgB,iBR2rFCpf,WAAY,KACZC,aAAc,MQzrFrBL,QAAAC,eAAW+d,EAAApe,UAAA,SR4rFJM,IQ5rFP,WAEC,MAAOb,MAAK4e,QR6rFN/b,IQ1rFP,SAAiBC,GAEhB9C,KAAK4e,OAAS9b,CACd9C,MAAK6e,SAAY7e,KAAK4e,QAAU,GAAM,KAAM,GAC5C5e,MAAK8e,SAAY9e,KAAK4e,QAAU,EAAK,KAAM,GAC3C5e,MAAK+e,SAAW/e,KAAK4e,OAAS,KAAM,GAEpC5e,MAAKmgB,eACLngB,MAAKkgB,kBR0rFCnf,WAAY,KACZC,aAAc,MQxrFrBL,QAAAC,eAAW+d,EAAApe,UAAA,WR2rFJM,IQ3rFP,WAEC,MAAOb,MAAKif,UR4rFNpc,IQzrFP,SAAmBC,GAElB,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET9C,MAAKif,SAAWnc,CAChB9C,MAAKogB,iBRyrFCrf,WAAY,KACZC,aAAc,MQvrFrBL,QAAAC,eAAW+d,EAAApe,UAAA,gBR0rFJM,IQ1rFP,WAEC,MAAOb,MAAKgf,eR2rFNnc,IQxrFP,SAAwBC,GAEvB9C,KAAKgf,cAAgBlc,CACrB9C,MAAKogB,iBRyrFCrf,WAAY,KACZC,aAAc,MQvrFb2d,GAAApe,UAAA6f,cAAR,WAECpgB,KAAKkf,YAAelf,KAAKgf,eAAiB,GAAM,KAAM,IAAKhf,KAAKif,QAChEjf,MAAKmf,YAAenf,KAAKgf,eAAiB,EAAK,KAAM,IAAKhf,KAAKif,QAC/Djf,MAAKof,YAAcpf,KAAKgf,cAAgB,KAAM,IAAKhf,KAAKif,SAGlDN,GAAApe,UAAA8f,2BAAP,SAAkCC,EAAgBlK,EAAelT,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEhE,KAAM,IAAIsb,GAIX7d,QAAAC,eAAW+d,EAAApe,UAAA,aRurFJM,IQvrFP,WAEC,MAAO8d,GAAUzd,WRwrFXH,WAAY,KACZC,aAAc,MQtrFb2d,GAAApe,UAAA2f,eAAR,WAEClgB,KAAKsf,YAActf,KAAK6e,QAAQ7e,KAAKqf,SACrCrf,MAAKuf,YAAcvf,KAAK8e,QAAQ9e,KAAKqf,SACrCrf,MAAKwf,YAAcxf,KAAK+e,QAAQ/e,KAAKqf,UAG9BV,GAAApe,UAAA4f,cAAR,WAECngB,KAAK0f,WAAa1f,KAAK6e,QAAQ7e,KAAKyf,QACpCzf,MAAK2f,WAAa3f,KAAK8e,QAAQ9e,KAAKyf,QACpCzf,MAAK4f,WAAa5f,KAAK+e,QAAQ/e,KAAKyf,SAGrC9e,QAAAC,eAAW+d,EAAApe,UAAA,gBRqrFJM,IQrrFP,WAEC,MAAOb,MAAK8f,eRsrFNjd,IQnrFP,SAAwBC,GAEvB9C,KAAK8f,cAAgBhd,CACrB9C,MAAK8f,cAAcE,MAAQhgB,MRorFrBe,WAAY,KACZC,aAAc,MQl2FP2d,GAAAzd,UAAmB,eA+KlC,OAAAyd,IAjLwBF,EAmLLhf,GAAAJ,QAAVsf,IRwrFN4B,6CAA6Cnf,UAAUof,uDAAuD,uDAAuDC,uCAAuC,yCAAyCC,2CAA2C,SAASniB,EAAQkB,EAAOJ,GAC3T,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GSx3FtB,IAAOsgB,GAAcpiB,EAAc,4CACnC,IAAOqiB,GAAeriB,EAAc,6CAEpC,IAAOsiB,GAAgBtiB,EAAc,8CAKrC,IAAOqD,GAAerD,EAAc,0CAEpC,IAAOsD,GAAgBtD,EAAc,4CTw3FrC,ISj3FMuiB,GAAe,SAAApgB,GAASX,EAAxB+gB,EAAepgB,EAyDpB,SAzDKogB,GAyDO/e,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEXrB,EAAApB,KAAAU,KAAM+B,EAvDC/B,MAAAgC,aAAsB,CAyD7BhC,MAAKwC,WAAa,GAAIme,GAAeI,aAAc,EAAGhf,GA/CvDpB,OAAAC,eAAWkgB,EAAAvgB,UAAA,aTm3FJM,ISn3FP,WAEC,MAAOigB,GAAgB5f,WTo3FjBH,WAAY,KACZC,aAAc,MS/2FrBL,QAAAC,eAAWkgB,EAAAvgB,UAAA,aTq3FJM,ISr3FP,WAEC,MAAOb,MAAKwC,YTs3FNzB,WAAY,KACZC,aAAc,MSj3FrBL,QAAAC,eAAWkgB,EAAAvgB,UAAA,aTu3FJM,ISv3FP,WAEC,MAAOb,MAAKghB,YTw3FNjgB,WAAY,KACZC,aAAc,MSn3FrBL,QAAAC,eAAWkgB,EAAAvgB,UAAA,UTy3FJM,ISz3FP,WAEC,IAAKb,KAAKihB,QACTjhB,KAAKkhB,UAAUlhB,KAAKihB,QAErB,OAAOjhB,MAAKihB,STy3FNlgB,WAAY,KACZC,aAAc,MSp3FrBL,QAAAC,eAAWkgB,EAAAvgB,UAAA,eT03FJM,IS13FP,WAEC,MAAOb,MAAKgC,cT23FNjB,WAAY,KACZC,aAAc,MS/2Fd8f,GAAAvgB,UAAA0C,aAAP,SAAoBC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,KAGnB,MAAOA,GAGD4d,GAAAvgB,UAAA6C,gBAAP,SAAuBC,EAAiBH,GAAA,GAAAA,QAAA,GAAoB,CAApBA,EAAA,KAGvC,MAAOA,GASD4d,GAAAvgB,UAAA+C,aAAP,SAAoBC,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/B,GAAID,YAAkBod,GAAgB,CACrC3gB,KAAKyD,sBAAsBzD,KAAKwC,WAChCxC,MAAKwC,WAA8Be,MAC7B,IAAIA,EAAQ,CAClB,GAAIvE,GAAW,CACf,IAAIqd,GAAW,CACf,IAAIxC,GAAe,CACnB,IAAIlV,GAAyB,GAAIoc,cAAaxd,EAAOhE,OAAO,EAC5D,IAAI4E,GAAsB,GAAIgd,aAAY5d,EAAOhE,OAEjD,OAAOP,EAAIuE,EAAOhE,OAAQ,CACzB,GAAIsa,EAAM,EAAI,EAAG,CAChBlV,EAAUkV,GAAStW,EAAOvE,EAAI,EAC9B2F,GAAUkV,EAAQ,GAAKtW,EAAOvE,EAAI,EAClC2F,GAAUkV,EAAQ,GAAKtW,EAAOvE,EAAI,EAClC2F,GAAUkV,EAAQ,GAAKtW,EAAOvE,EAC9B2F,GAAUkV,EAAQ,GAAKtW,EAAOvE,EAAI,EAClC2F,GAAUkV,EAAQ,GAAKtW,EAAOvE,EAAI,OAC5B,CACN2F,EAAUkV,GAAStW,EAAOvE,EAC1B2F,GAAUkV,EAAQ,GAAKtW,EAAOvE,EAAI,EAClC2F,GAAUkV,EAAQ,GAAKtW,EAAOvE,EAAI,EAClC2F,GAAUkV,EAAQ,GAAKtW,EAAOvE,EAAI,EAClC2F,GAAUkV,EAAQ,GAAKtW,EAAOvE,EAAI,EAClC2F,GAAUkV,EAAQ,GAAKtW,EAAOvE,EAAI,GAGnC6a,GAAS,CAET,MAAMwC,GAAK,EAAG,CACb,GAAIxd,GAAWgb,EAAM,EAAI,CACzB1V,GAAQtB,KAAKhE,EAAGA,EAAI,EAAGA,EAAI,EAAGA,EAAI,EAAGA,EAAI,EAAGA,EAAI,GAAIG,EACpDqd,GAAI,CACJrd,IAAK,GAIPgB,KAAKwC,WAAWK,IAAI8B,EAAWnB,EAAO,EAEtCxD,MAAKoE,WAAWD,EAASX,OACnB,CACNxD,KAAKyD,sBAAsBzD,KAAKwC,WAChCxC,MAAKwC,WAAa,GAAIme,GAAeI,aAAc,EAAG/gB,KAAKyC,qBAG5DzC,KAAKgC,aAAehC,KAAKwC,WAAWI,KAEpC5C,MAAK2D,mBAEL3D,MAAK0D,qBAAqB1D,KAAKwC,WAE/BxC,MAAK4D,eAAe5D,KAAKwC,WAAWqB,IAAM,MASpCid,GAAAvgB,UAAA6gB,aAAP,SAAoB7d,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/B,GAAID,YAAkBsd,GAAkB,CACvC7gB,KAAKghB,WAAgCzd,MAC/B,IAAIA,EAAQ,CAClB,IAAKvD,KAAKghB,WACThhB,KAAKghB,WAAa,GAAIH,GAAiB7gB,KAAKyC,oBAE7C,IAAIzD,GAAW,CACf,IAAIqd,GAAW,CACf,IAAIxC,GAAe,CACnB,IAAIwH,GAAyB,GAAIN,cAAaxd,EAAOhE,OAAO,EAE5D,OAAOP,EAAIuE,EAAOhE,OAAQ,CACzB8hB,EAAUxH,GAAUvC,KAAKgK,MAAM,GAAIzH,EAAQ,IAAO,GAAKtW,EAAOvE,GAAKuE,EAAOvE,EAE1E,MAAMqd,GAAK,EAAG,CACbA,EAAI,CACJrd,KAGD6a,IAGD7Z,KAAKghB,WAAWne,IAAIwe,EAAW7d,EAAO,OAChC,IAAIxD,KAAKghB,WAAY,CAC3BhhB,KAAKghB,WAAW/f,SAChBjB,MAAKghB,WAAa,KAGnBhhB,KAAK0D,qBAAqB1D,KAAKghB,WAE/BhhB,MAAK4D,eAAe5D,KAAKghB,WAAWnd,IAAM,MAUpCid,GAAAvgB,UAAA2gB,UAAP,SAAiB3d,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE5B,GAAID,EAAQ,CACX,GAAIA,GAAUvD,KAAKihB,QAClB,MAED,IAAI1d,YAAkBqd,GAAiB,CACtC5gB,KAAKyD,sBAAsBzD,KAAKihB,QAChCjhB,MAAKihB,QAA4B1d,MAC3B,CACN,IAAKvD,KAAKihB,QACTjhB,KAAKihB,QAAU,GAAIL,GAAgB5gB,KAAKyC,oBAGzC,IAAIzD,GAAW,CACf,IAAIqd,GAAW,CACf,IAAIxC,GAAe,CACnB,IAAI0H,GAAoB,GAAIC,YAAWje,EAAOhE,OAAO,EAErD,OAAOP,EAAIuE,EAAOhE,OAAQ,CACzB,GAAIsa,EAAM,EAAI,EAAG,CAChB0H,EAAO1H,GAAStW,EAAOvE,EAAI,EAC3BuiB,GAAO1H,EAAQ,GAAKtW,EAAOvE,EAAI,EAC/BuiB,GAAO1H,EAAQ,GAAKtW,EAAOvE,EAAI,EAC/BuiB,GAAO1H,EAAQ,GAAKtW,EAAOvE,EAAI,OACzB,CACNuiB,EAAO1H,GAAStW,EAAOvE,EACvBuiB,GAAO1H,EAAQ,GAAKtW,EAAOvE,EAAI,EAC/BuiB,GAAO1H,EAAQ,GAAKtW,EAAOvE,EAAI,EAC/BuiB,GAAO1H,EAAQ,GAAKtW,EAAOvE,EAAI,GAIhC,KAAMqd,GAAK,EAAG,CACbA,EAAI,CACJrd,IAAK,EAGN6a,GAAS,EAGV7Z,KAAKihB,QAAQpe,IAAIU,EAAQC,EAAO,QAE3B,CAENxD,KAAKihB,QAAUpf,EAAiB4f,eAAezhB,KAAKgE,UAAWhE,KAAKihB,QAASjhB,KAAKyC,oBAAqBzC,KAAKgC,cAG7GhC,KAAK0D,qBAAqB1D,KAAKihB,QAE/BjhB,MAAK4D,eAAe5D,KAAKihB,QAAQpd,IAAM,MAMjCid,GAAAvgB,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAO3B,KAAAU,KAEbA,MAAKwC,WAAa,IAClBxC,MAAKghB,WAAa,IAClBhhB,MAAKihB,QAAU,KAOTH,GAAAvgB,UAAA0D,MAAP,WAEC,GAAIA,GAAwB,GAAI6c,GAAgB9gB,KAAKyC,oBAAqBzC,KAAKyC,oBAAoBwB,QAAU,KAE7GA,GAAMG,WAAWpE,KAAKgE,UAAUC,QAEhCA,GAAMX,aAAatD,KAAKwC,WAAWyB,QACnCA,GAAMmd,aAAaphB,KAAKghB,WAAW/c,QACnCA,GAAMid,UAAUlhB,KAAKihB,QAAQhd,QAE7B,OAAOA,GAGD6c,GAAAvgB,UAAAuE,gBAAP,SAAuBC,EAAkCC,EAAuBC,EAAuCC,GAEtH,MAAOH,GAAgB2c,kBAAkB1hB,KAAMgF,EAAUC,EAAoBC,GA5QhE4b,GAAA5f,UAAmB,yBA8QlC,OAAA4f,IAhR8Blf,EAkR9BnC,GAAyBJ,QAAhByhB,ITi0FNa,4CAA4CvgB,UAAUwgB,6CAA6CxgB,UAAUygB,8CAA8CzgB,UAAUkE,0CAA0C,0CAA0CC,4CAA4C,8CAA8Cuc,uCAAuC,SAASvjB,EAAQkB,EAAOJ,GACrZ,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GUxmGtB,IAAOygB,GAAeviB,EAAa,0CAEnC,IAAOkH,GAAWlH,EAAc,sCVmnGhC,IUrmGMwjB,GAAW,SAAArhB,GAASX,EAApBgiB,EAAWrhB,EA8BhB,SA9BKqhB,GA8BOpc,EAA6BC,EAAiBZ,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAEzDtE,EAAApB,KAAAU,KAEAA,MAAK6F,aAAeD,CACpB5F,MAAK8F,aAAeH,CACpB3F,MAAKgF,SAAWA,EAzBjBrE,OAAAC,eAAWmhB,EAAAxhB,UAAA,aV6mGJM,IU7mGP,WAEC,MAAOkhB,GAAY7gB,WV8mGbH,WAAY,KACZC,aAAc,MUzmGrBL,QAAAC,eAAWmhB,EAAAxhB,UAAA,eV+mGJM,IU/mGP,WAEC,MAAOb,MAAK8F,cVgnGN/E,WAAY,KACZC,aAAc,MU5lGd+gB,GAAAxhB,UAAAU,QAAP,WAECjB,KAAKgF,SAAW,IAEhBtE,GAAAH,UAAMU,QAAO3B,KAAAU,MA5CA+hB,GAAA7gB,UAAmB,qBAEnB6gB,GAAAhc,WAAyB+a,CA4CxC,OAAAiB,IAhD0Btc,EAkDLhG,GAAAJ,QAAZ0iB,IVmmGNrB,0CAA0C,0CAA0C1a,sCAAsC,wCAAwCgc,sCAAsC,SAASzjB,EAAQkB,EAAOJ,GACnO,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GW5qGtB,IAAO4hB,GAAe1jB,EAAa,yCXgxGnC,IWzqGM2jB,GAAU,SAAAxhB,GAASX,EAAnBmiB,EAAUxhB,EAAhB,SAAMwhB,KAAmBxhB,EAAAyhB,MAAAniB,KAAAoiB,WAyBxBzhB,OAAAC,eAAWshB,EAAA3hB,UAAA,SXsqGJM,IWtqGP,WAEC,MAAOb,MAAKqiB,QXuqGNthB,WAAY,KACZC,aAAc,MWjqGrBL,QAAAC,eAAWshB,EAAA3hB,UAAA,eXwqGJM,IWxqGP,WAEC,MAAOb,MAAKsiB,cXyqGNvhB,WAAY,KACZC,aAAc,MW9pGrBL,QAAAC,eAAWshB,EAAA3hB,UAAA,cX0qGJM,IW1qGP,WAEC,MAAOb,MAAKuiB,aX2qGNxhB,WAAY,KACZC,aAAc,MWzpGrBL,QAAAC,eAAWshB,EAAA3hB,UAAA,WX4qGJM,IW5qGP,WAEC,MAAOb,MAAKwiB,UX6qGNzhB,WAAY,KACZC,aAAc,MWhqGrBL,QAAAC,eAAWshB,EAAA3hB,UAAA,eX8qGJM,IW9qGP,WAEC,MAAOb,MAAKyiB,cX+qGN1hB,WAAY,KACZC,aAAc,MW3pGrBL,QAAAC,eAAWshB,EAAA3hB,UAAA,UXgrGJM,IWhrGP,WAEC,MAAOb,MAAK0iB,SXirGN3hB,WAAY,KACZC,aAAc,MWjqGrBL,QAAAC,eAAWshB,EAAA3hB,UAAA,OXkrGJM,IWlrGP,WAEC,MAAOb,MAAK2iB,MXmrGN5hB,WAAY,KACZC,aAAc,MWlrGtB,OAAAkhB,IAnIyBD,EAqILxiB,GAAAJ,QAAX6iB,IXsrGNU,yCAAyCxhB,YAAY2b,2CAA2C,SAASxe,EAAQkB,EAAOJ,GYl6G3H,GAAMuH,GAAe,WAArB,QAAMA,MAKSA,EAAAsD,QAAiB,SAKjBtD,GAAAyP,aAAsB,aAKtBzP,GAAAic,gBAAyB,gBACxC,OAAAjc,KAEAnH,GAAyBJ,QAAhBuH,OZo6GHtB,2CAA2C,SAAS/G,EAAQkB,EAAOJ,GACzE,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,Gax7GtB,IAAOyiB,GAAgBvkB,EAAc,8CACrC,IAAOigB,GAAmBjgB,EAAa,6CAMvC,IAAOiC,GAASjC,EAAe,oCAG/B,IAAOwkB,GAAgBxkB,EAAc,6Cbu7GrC,Ia96GMqD,GAAe,SAAAlB,GAASX,EAAxB6B,EAAelB,EA4CpB,SA5CKkB,GA4COG,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEXrB,EAAApB,KAAAU,KA5COA,MAAAgjB,eAAuC,GAAI1gB,MAI3CtC,MAAAijB,aAAsB,CAMvBjjB,MAAA4D,eAAwB,GAAIjD,OAC5BX,MAAAkjB,iBAA0B,GAAIviB,OAmCpCX,MAAKyC,oBAAsBV,EAjC5BpB,OAAAC,eAAWgB,EAAArB,UAAA,sBb86GJM,Ia96GP,WAEC,MAAOb,MAAKyC,qBb+6GN1B,WAAY,KACZC,aAAc,Ma16GrBL,QAAAC,eAAWgB,EAAArB,UAAA,Wbg7GJM,Iah7GP,WAEC,MAAOb,MAAKgE,Wbi7GNjD,WAAY,KACZC,aAAc,Ma56GrBL,QAAAC,eAAWgB,EAAArB,UAAA,ebk7GJM,Ial7GP,WAEC,MAAOb,MAAKijB,cbm7GNliB,WAAY,KACZC,aAAc,Maj7GrBL,QAAAC,eAAWgB,EAAArB,UAAA,ebo7GJM,Iap7GP,WAEC,KAAM,IAAI2d,Ibq7GJzd,WAAY,KACZC,aAAc,Mar6GdY,GAAArB,UAAA4iB,WAAP,WAEC,GAAIlY,GAAajL,KAAKgjB,eAAezjB,MACrC,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,EAAKjM,IAC/BgB,KAAKgjB,eAAehkB,GAAGmkB,aAMlBvhB,GAAArB,UAAAU,QAAP,WAEC,MAAOjB,KAAKgjB,eAAezjB,OAC1BS,KAAKgjB,eAAe,GAAG/hB,SAExBjB,MAAKgE,UAAU/C,SACfjB,MAAKgE,UAAY,KAWXpC,GAAArB,UAAA6D,WAAP,SAAkBb,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE7B,GAAID,YAAkBuf,GAAkB,CACvC,GAAI9iB,KAAKgE,UACRhE,KAAKojB,sBAENpjB,MAAKgE,UAA+BT,MAC9B,IAAIA,EAAQ,CAClB,IAAKvD,KAAKgE,UACThE,KAAKgE,UAAY,GAAI8e,EAEtB9iB,MAAKgE,UAAUnB,IAAIU,EAAQC,OACrB,IAAIxD,KAAKgE,UAAW,CAC1BhE,KAAKgE,UAAU/C,SACfjB,MAAKgE,UAAY,IAEjBhE,MAAKojB,uBAGN,GAAIpjB,KAAKgE,UAAW,CACnBhE,KAAKijB,aAAejjB,KAAKgE,UAAUpB,KAEnC5C,MAAKqjB,0BACC,CACNrjB,KAAKijB,aAAe,GAOfrhB,GAAArB,UAAAoD,kBAAP,WAEC,GAAI3D,KAAKyd,eACRzd,KAAKyd,eAAeE,kBAAkB3d,MAcjC4B,GAAArB,UAAA0D,MAAP,WAEC,KAAM,IAAIua,GAGJ5c,GAAArB,UAAAqE,oBAAP,SAA2BC,IASpBjD,GAAArB,UAAAmE,MAAP,SAAaA,IAKN9C,GAAArB,UAAA+D,QAAP,SAAeC,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,GAK3B5C,GAAArB,UAAA0C,aAAP,SAAoBC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,KAEnB,KAAM,IAAIsb,GAGJ5c,GAAArB,UAAA6C,gBAAP,SAAuBC,EAAiBH,GAAA,GAAAA,QAAA,GAAoB,CAApBA,EAAA,KAEvC,KAAM,IAAIsb,GAGJ5c,GAAArB,UAAA4T,aAAP,SAAoB1I,EAAUE,EAAUE,EAAU6G,GAEjD,KAAM,IAAI8L,GAGH5c,GAAArB,UAAA8iB,oBAAR,WAEC,IAAKrjB,KAAKsjB,gBACTtjB,KAAKsjB,gBAAkB,GAAIP,GAAiBA,EAAiBQ,gBAAiBvjB,KAAKgE,UAEpFhE,MAAKkN,cAAclN,KAAKsjB,iBAGjB1hB,GAAArB,UAAA6iB,qBAAR,WAECpjB,KAAKkN,cAAc,GAAI6V,GAAiBA,EAAiBS,iBAAkBxjB,KAAKgE,YAG1EpC,GAAArB,UAAAmD,qBAAP,SAA4B+f,GAE3B,IAAKA,GAAkBzjB,KAAK4D,eAAe6f,EAAe5f,IACzD,MAED7D,MAAK4D,eAAe6f,EAAe5f,IAAM,IAEzC,KAAK7D,KAAKkjB,iBAAiBO,EAAe5f,IACzC7D,KAAKkjB,iBAAiBO,EAAe5f,IAAM,GAAIkf,GAAiBA,EAAiBW,iBAAkBD,EAEpGzjB,MAAKkN,cAAclN,KAAKkjB,iBAAiBO,EAAe5f,KAIlDjC,GAAArB,UAAAkD,sBAAP,SAA6BggB,GAE5B,IAAKA,EACJ,MAEDA,GAAexiB,SAEfjB,MAAKkN,cAAc,GAAI6V,GAAiBA,EAAiBY,kBAAmBF,GAE5EzjB,MAAK4D,eAAe6f,EAAe5f,IAAM,IACzC7D,MAAKkjB,iBAAiBO,EAAe5f,IAAM,KAGrCjC,GAAArB,UAAAqjB,mBAAP,SAA0BC,GAEzB7jB,KAAKgjB,eAAerJ,KAAKkK,EAEzB,OAAOA,GAGDjiB,GAAArB,UAAAujB,sBAAP,SAA6BD,GAE5B7jB,KAAKgjB,eAAejJ,OAAO/Z,KAAKgjB,eAAelJ,QAAQ+J,GAAgB,EAEvE,OAAOA,GAGDjiB,GAAArB,UAAAuE,gBAAP,SAAuBC,EAAkCC,EAAuBC,EAAuCC,GAEtH,KAAM,IAAIsZ,GAEZ,OAAA5c,IAnO8BpB,EAqO9Bf,GAAyBJ,QAAhBuC,Ib+2GNmiB,8CAA8C3iB,UAAUmf,6CAA6Cnf,UAAUD,oCAAoCC,UAAU4iB,6CAA6C,+CAA+Che,uCAAuC,SAASzH,EAAQkB,EAAOJ,GAC3T,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,Gc3mHtB,IAAOG,GAASjC,EAAe,oCdunH/B,IctmHMkH,GAAW,SAAA/E,GAASX,EAApB0F,EAAW/E,EA4EhB,SA5EK+E,KA8EJ/E,EAAApB,KAAAU,KAzEMA,MAAAikB,QAAiB,CAGhBjkB,MAAAkkB,aAAkC,GAAI5hB,OAY9C3B,OAAAC,eAAW6E,EAAAlF,UAAA,YdsmHJM,IctmHP,WAEC,MAAOb,MAAK6F,aAAase,UdumHnBpjB,WAAY,KACZC,aAAc,MclmHrBL,QAAAC,eAAW6E,EAAAlF,UAAA,YdwmHJM,IcxmHP,WAEC,MAAOb,MAAKokB,WAAapkB,KAAK6F,aAAab,UdymHrCnC,IctmHP,SAAoBC,GAEnB,GAAI9C,KAAKgF,SACRhF,KAAKgF,SAASqf,aAAarkB,KAE5BA,MAAKokB,UAAYthB,CAEjB,IAAI9C,KAAKgF,SACRhF,KAAKgF,SAASsf,UAAUtkB,OdqmHnBe,WAAY,KACZC,aAAc,MchmHrBL,QAAAC,eAAW6E,EAAAlF,UAAA,kBdsmHJM,IctmHP,WAEC,MAAOb,MAAK6F,aAAa0G,gBdumHnBxL,WAAY,KACZC,aAAc,MclmHrBL,QAAAC,eAAW6E,EAAAlF,UAAA,cdwmHJM,IcxmHP,WAEC,MAAOb,MAAK6F,cdymHN9E,WAAY,KACZC,aAAc,McpmHrBL,QAAAC,eAAW6E,EAAAlF,UAAA,ed0mHJM,Ic1mHP,WAEC,MAAOb,MAAKukB,cAAgBvkB,KAAK6F,aAAa2e,ad2mHxC3hB,IcxmHP,SAAuBC,GAEtB9C,KAAKukB,aAAezhB,GdymHd/B,WAAY,KACZC,aAAc,Mc5lHdyE,GAAAlF,UAAAU,QAAP,WAECjB,KAAKgF,SAAW,KAQVS,GAAAlF,UAAA4V,wBAAP,SAA+BC,GAE9B,MAAOpW,MAAK6F,aAAasQ,wBAAwBC,GAG3C3Q,GAAAlF,UAAAkZ,gBAAP,SAAuBC,GAEtB1Z,KAAKkkB,aAAavK,KAAKD,EAEvB,OAAOA,GAIDjU,GAAAlF,UAAAqZ,mBAAP,SAA0BF,GAEzB,GAAIG,GAAe7Z,KAAKkkB,aAAapK,QAAQJ,EAE7C1Z,MAAKkkB,aAAanK,OAAOF,EAAO,EAEhC,OAAOH,GAGDjU,GAAAlF,UAAAkkB,+BAAP,WAEC,GAAIxZ,GAAajL,KAAKkkB,aAAa3kB,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,EAAKjM,IAC/BgB,KAAKkkB,aAAallB,GAAG0lB,qBAGhBjf,GAAAlF,UAAAokB,sBAAP,WAEC,MAAO3kB,MAAKokB,UAGN3e,GAAAlF,UAAAqY,iBAAP,WAEC,IAAK,GAAI5Z,GAAWgB,KAAKkkB,aAAa3kB,OAAS,EAAGP,GAAK,EAAGA,IACzDgB,KAAKkkB,aAAallB,GAAGiC,UAExB,OAAAwE,IArI0BjF,EAuI1Bf,GAAqBJ,QAAZoG,IdklHNtE,oCAAoCC,YAAYwjB,oCAAoC,SAASrmB,EAAQkB,EAAOJ,Ge9uH/G,GAAOqH,GAAsBnI,EAAa,iDAK1C,IAAO4H,GAAc5H,EAAe,sCAGpC,IAAOsmB,GAAkBtmB,EAAW,iDAGpC,IAAMumB,GAAQ,WA2Cb,QA3CKA,KAyCE9kB,KAAA+kB,aAAoB,CAI1B/kB,MAAKglB,mBAELhlB,MAAKilB,uBACLjlB,MAAKklB,UACLllB,MAAKmlB,gBACLnlB,MAAKolB,4BAGCN,EAAAvkB,UAAA8kB,KAAP,WAEC,GAAIrlB,KAAKslB,uBAAyB,MAAQtlB,KAAKulB,cAAgB,MAAQvlB,KAAKwlB,oBAAsB,KACjG,MAEDxlB,MAAKylB,uBACLzlB,MAAK0lB,2BACL,IAAIC,GAAY,CAChB,IAAIC,GAAK,CACT,IAAIC,GAAM,CACV,IAAIC,GAAe,CACnB,IAAIC,GAAuB,CAC3B,KAAIH,EAAK,EAAGA,EAAK5lB,KAAK+kB,aAAca,IAAK,CACxC,GAAII,GAAShmB,KAAKwlB,mBAAmB,EAErC,IAAGxlB,KAAKulB,aAAaK,GAAM,EAC1BG,EAAuBD,CAExB9lB,MAAKylB,qBAAqBK,GAAgBH,CAC1C3lB,MAAK0lB,yBAAyBI,KAAkBC,CAEhD,KAAIF,EAAM,EAAGA,EAAMG,EAAUH,IAC5B7lB,KAAKglB,iBAAiBW,KAAeC,GAIjCd,GAAAvkB,UAAA0lB,gBAAP,SAAuBC,GAEtB,GAAGlmB,KAAKmlB,cAAce,IAAiB,KACtC,MAAO,EAER,UAAWlmB,MAAKmlB,cAAce,IAAmB,SAChD,MAAOlmB,MAAKmlB,cAAce,OACvB,CACH,KAAM,IAAIhnB,OAAM,oDAGjB,MAAO,GAED4lB,GAAAvkB,UAAA4lB,gBAAP,SAAuBrjB,EAAcojB,GAEpClmB,KAAKmlB,cAAce,GAAkBpjB,EAG9BgiB,GAAAvkB,UAAA6lB,aAAR,SAAqBC,EAAcC,EAAgBC,GAClD,GAAIzM,GAAUuM,EAAIG,UAAUD,GAAY,GAAGE,OAAOH,EAClD,OAAQxM,IAAW,EAAMA,GAAWyM,GAAY,GAAMzM,EAIhDgL,GAAAvkB,UAAAmmB,4BAAP,SAAmCC,EAAqBC,EAAqBC,GAAA,GAAAA,QAAA,GAAyB,CAAzBA,EAAA,MAE5E,GAAG7mB,KAAKmlB,cAAcyB,IAAe,KAAK,CACzC,GAAG5mB,KAAKolB,yBAAyBwB,IAAe,KAAK,CACpD5mB,KAAKmlB,cAAcyB,GAAgBD,EAAU/V,QAAQkW,WAAW9mB,KAAKmlB,cAAcyB,GACnF5mB,MAAKolB,yBAAyBwB,GAAc,KAE7C,GAAGC,EACFhC,EAAmBkC,oBAAoBJ,EAAW3mB,KAAKmlB,cAAcyB,QAErE/B,GAAmBmC,0BAA0BL,EAAW3mB,KAAKmlB,cAAcyB,KAK9EjmB,QAAAC,eAAWkkB,EAAAvkB,UAAA,af6qHJM,Ie7qHP,WAEC,MAAOb,MAAKglB,iBAAiBzlB,Qf8qHvBwB,WAAY,KACZC,aAAc,Me3qHd8jB,GAAAvkB,UAAA0mB,2BAAP,SAAkCpjB,GAEjC,MAAO7D,MAAKilB,qBAAqBphB,GAG3BihB,GAAAvkB,UAAA2mB,8BAAP,SAAqCC,GAEpC,MAAOnnB,MAAKglB,iBAAiBmC,GAGvBrC,GAAAvkB,UAAA6mB,0BAAP,SAAiCvjB,GAEhC,GAAIwjB,GAAyBrnB,KAAKilB,qBAAqBphB,GAAII,OAC3DojB,GAAW9W,KAAK,EAChB,OAAO8W,GAGDvC,GAAAvkB,UAAA+mB,uBAAP,SAA8B/mB,GAE7B,GAAIsD,GAAK7D,KAAKilB,qBAAqB1lB,MACnCS,MAAKilB,qBAAqBphB,GAAMtD,EAG1BukB,GAAAvkB,UAAAgnB,YAAP,SAAmBZ,EAAqBa,GAEvC,GAAIC,GAAyBznB,KAAKklB,QAAQsC,EAC1C,IAAGC,GAAiB,EACnBd,EAAUe,kBAAkB1nB,KAAKylB,qBAAqBgC,GAIjD3C,GAAAvkB,UAAAonB,UAAP,SAAiBhB,EAAqB7jB,EAAc8kB,GAAA,GAAAA,QAAA,GAA2B,CAA3BA,EAAA,MAEnD,GAAIC,GAAoBlB,EAAUe,iBAElC,IAAIG,GAAc/kB,EACjB,MAED,IAAIglB,GAA8BnB,EAAUoB,wBAC5C,IAAIC,GAA6BhoB,KAAKglB,iBAAiBliB,EAEvD,IAAImlB,GAAoBjoB,KAAKylB,qBAAqBuC,EAElD,IAAIF,EAAuB,GAAKE,EAAqB,CACpDrB,EAAUuB,sBAAsBplB,EAChC9C,MAAKmoB,mBAAmBxB,GAAYiB,EAAa,KACjD,QAID,GAAIE,GAAwBE,EAG3B,MAED,IAAII,GAAyBpoB,KAAK0lB,yBAAyBsC,Ef6pHrD,IezpHFK,GAAwBL,EAAsBF,CAClD,IAAIQ,GAAoBF,EAAkBN,Cf2pHpC,IexpHFS,GAA6BH,CAEjC,IAAIC,IAAiBC,EACpBC,EAAsBT,EAAuB,CAE9C,IAAI9oB,EACJ,IAAIwpB,EACJ,IAAIC,EAEJ,IAAIH,EACH,IAAKtpB,EAAI2nB,EAAUzK,YAAc,EAAGld,GAAK,EAAGA,IAC3C2nB,EAAU+B,cAAc1pB,EAG1B,KAAKqpB,EACJ1B,EAAUgC,iBfspHL,IenpHFC,GAA0BjC,EAAUkC,oBfqpHlC,IelpHFC,KACJ,IAAIC,GAAa,CACjB,IAAIC,EACJ,IAAIzD,EACJ,IAAI0D,EACJ,IAAIC,EACJ,KAAKV,EAAID,EAAqBC,GAAKR,EAAqBQ,IAAK,CAC5DQ,EAAoBhpB,KAAKslB,sBAAsBkD,EAC/CjD,GAAevlB,KAAKulB,aAAaiD,EAEjC,IAAIjD,EAAe,EAAG,CAErB0D,EAAcjpB,KAAKmpB,qBAAqBH,EACxCE,GAAYD,EAAcjpB,KAAKopB,sBAAsBJ,IACrD,KAAKhqB,EAAIiqB,EAAajqB,EAAIkqB,EAAWlqB,UAC7B4pB,GAAiB5oB,KAAKqpB,oBAAoBrqB,GAAK,OAGxD,GAAIumB,EAAe,EAAG,CACrB0D,EAAcjpB,KAAKmpB,qBAAqBH,EACxCE,GAAYD,EAAcjpB,KAAKopB,sBAAsBJ,IAGrD,KAAKhqB,EAAIkqB,EAAY,EAAGlqB,GAAKiqB,EAAajqB,IACzC4pB,EAAiB5oB,KAAKspB,iBAAiBtqB,EAAE,EAAI,GAAK,OAASA,EAG7D,GAAIumB,EAAe,EAClBuD,EAAeC,KAAgBC,EAQjC,IAAKhqB,EAAI2nB,EAAUzK,YAAc,EAAGld,GAAK,EAAGA,IAAK,CAChDypB,EAAQ9B,EAAU4C,UAAUvqB,EAC5B,IAAI4pB,EAAiBH,EAAMjhB,WAAaihB,EAAMlhB,WAAY,CACzDof,EAAU+B,cAAc1pB,OAClB,KAAKqpB,EAAc,CACzB,GAAGI,EAAM7X,QAAS,CACjB,IAAK6X,EAAM7X,QAAQ4Y,oBAAqB,CACvC,GAAIf,EAAM9X,WAAY,CACrB8X,EAAM9X,WAAWrG,UACjBme,GAAMhd,EAAIgd,EAAM9X,WAAWzB,QAAQ,GACnCuZ,GAAM9c,EAAI8c,EAAM9X,WAAWzB,QAAQ,GACnCuZ,GAAMjb,eAAiB,IACvBib,GAAM9d,kCAAkCjE,EAAuB6H,iBAEhE,GAAIka,EAAM1d,iBAAkB,CAC3B0d,EAAM1d,iBAAiBmL,OACvBuS,GAAM9d,kCAAkCjE,EAAuBkE,iBAGhE6d,EAAM/X,MAAQ,IACd+X,GAAM3Z,SAAW,MAElB,IAAK2Z,EAAM7X,QAAQ6Y,uBAAwB,CAC1ChB,EAAMxS,QAAU,QAMpB,IAAK2R,GAAeK,GAAcnlB,EACjC9C,KAAK0mB,4BAA4BC,EAAWqB,EAAqB,KAIlE,KAAK,GAAI0B,KAAOd,GAAkB,CACjCH,EAAQ9B,EAAUS,0BAA0BpnB,KAAKspB,iBAAiBV,EAAiBc,GAAK,GACxF,IAAIjB,EAAMlhB,aAAe,EAAG,CAC3BkhB,EAAMlhB,WAAaqhB,EAAiBc,EACpC/C,GAAUgD,gBAAgBlB,EAAOmB,OAAOF,KfwoHpC,GeloHFV,EACJ,IAAI/d,GAAa6d,EAAevpB,MAChC,KAAKipB,EAAI,EAAGA,EAAIvd,EAAKud,IAAK,CACzBQ,EAAoBF,EAAeN,EACnCxoB,MAAK6pB,cAAclD,EAAW3mB,KAAKmpB,qBAAqBH,GAAoBhpB,KAAKopB,sBAAsBJ,IAGxGrC,EAAUoB,yBAA2BC,EAI/BlD,GAAAvkB,UAAA4nB,mBAAP,SAA0BxB,EAAqBmD,EAA0BjD,GAA1B,GAAAiD,QAAA,GAAwB,CAAxBA,EAAA,KAA0B,GAAAjD,QAAA,GAA2B,CAA3BA,EAAA,MAExE,GAAIgB,GAAoBlB,EAAUe,iBAClC,IAAIqC,GAAmCpD,EAAUoB,wBACjD,IAAIiC,GAA2BhqB,KAAKglB,iBAAiB6C,EAErD,IAAGiC,GAAe9pB,KAAKylB,qBAAqBuE,IAAsBnC,EACjE7nB,KAAK0mB,4BAA4BC,EAAWqD,EAAmBnD,EAEhE,IAAGkD,GAA6BC,EAAmB,CAClDrD,EAAUoB,yBAA2BiC,CAErC,IAAIhB,GAAoBhpB,KAAKslB,sBAAsB0E,EACnD,IAAIzE,GAAevlB,KAAKulB,aAAayE,EAErC,IAAGzE,EAAe,EAAG,CACpB,IAAK,GAAIvmB,GAAW2nB,EAAUzK,YAAc,EAAGld,GAAK,EAAGA,IACtD2nB,EAAU+B,cAAc1pB,OACnB,IAAIumB,EAAe,EAAG,CAC5BvlB,KAAKiqB,wBAAwBtD,EAAW3mB,KAAKmpB,qBAAqBH,GAAoBhpB,KAAKopB,sBAAsBJ,MAGlH,GAAGzD,EAAe,EACjBvlB,KAAKkqB,qBAAqBvD,EAAW3mB,KAAKmpB,qBAAqBH,GAAoBhpB,KAAKopB,sBAAsBJ,KAE/G,IAAGzD,EAAe,EACjBvlB,KAAK6pB,cAAclD,EAAW3mB,KAAKmpB,qBAAqBH,GAAoBhpB,KAAKopB,sBAAsBJ,OAMnGlE,GAAAvkB,UAAA0pB,wBAAP,SAA+BE,EAA2BlB,EAAoBhe,GAE7E,IAAI,GAAIjM,GAAW,EAAGA,EAAIiM,EAAKjM,IAC9BmrB,EAAgBC,mBAAmBpqB,KAAKqpB,oBAAoBJ,EAAcjqB,GAAK,OAK1E8lB,GAAAvkB,UAAA2pB,qBAAP,SAA4BC,EAA2BlB,EAAoBhe,GfwnHpE,GepnHFof,EACJ,IAAInB,GAAmBD,EAAche,CACrC,KAAK,GAAIjM,GAAWkqB,EAAY,EAAGlqB,GAAKiqB,EAAajqB,IAAK,CACzDqrB,EAAMrrB,EAAE,CACR,IAAIkE,GAAuBinB,EAAgB/C,0BAA0BpnB,KAAKspB,iBAAiBe,GAC3FnnB,GAAOqE,WAAavI,CACpBmrB,GAAgBR,gBAAgBzmB,EAAQlD,KAAKspB,iBAAiBe,EAAM,GAAK,QAIpEvF,GAAAvkB,UAAAspB,cAAP,SAAqBM,EAA2BlB,EAAoBhe,GAEnE,GAAIqf,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIzB,GAAmBD,EAAche,CACrC,KAAI,GAAIjM,GAAWiqB,EAAajqB,EAAIkqB,EAAWlqB,IAAK,CACnD,GAAIkE,GAAuBinB,EAAgBS,oBAAoB5qB,KAAK6qB,oBAAoB7rB,GACxF,IAAIkE,GAAU,KAAM,CACnBynB,EAAO,IAEP,IAAIznB,EAAO0N,SAAW1N,EAAO0N,QAAQ4Y,oBACpCmB,EAAO,KACRL,GAAkBtqB,KAAK8qB,kCAAkC9rB,EACzDurB,GAAYvqB,KAAK+qB,iCAAiC/rB,EAClDwrB,GAAkBF,EAAkBC,CACpC,KAAI,GAAIpqB,GAAWmqB,EAAiBnqB,EAAIqqB,EAAiBrqB,IAAK,CAC7DuqB,EAAa1qB,KAAKgrB,qBAAqB7qB,EACvCsqB,GAAoBzqB,KAAKirB,sBAAsB9qB,EAC/C,QAAOuqB,GACN,IAAK,GAEJ,KAED,KAAK,GACJ,GAAIC,EAAM,CACTF,GAAqB,CACrB,IAAIS,GAAsBhoB,EAAOyN,UACjCua,GAAWhc,QAAQ,GAAKlP,KAAKmrB,8BAA8BV,IAC3DS,GAAWhc,QAAQ,GAAKlP,KAAKmrB,8BAA8BV,IAC3DS,GAAWhc,QAAQ,GAAKlP,KAAKmrB,8BAA8BV,IAC3DS,GAAWhc,QAAQ,GAAKlP,KAAKmrB,8BAA8BV,IAC3DS,GAAWhc,QAAQ,IAAMlP,KAAKmrB,8BAA8BV,IAC5DS,GAAWhc,QAAQ,IAAMlP,KAAKmrB,8BAA8BV,EAE5DvnB,GAAOuI,EAAIyf,EAAWhc,QAAQ,GAC9BhM,GAAOyI,EAAIuf,EAAWhc,QAAQ,GAE9BhM,GAAOsK,eAAiB,IAExBtK,GAAOyH,kCAAkCjE,EAAuB6H,iBAGjE,KAED,KAAK,GACJ,GAAIoc,EAAM,CACTF,GAAqB,CACrB,IAAIW,GAAwBloB,EAAO6H,mBAAqB7H,EAAO6H,iBAAmB,GAAI5E,GACtFilB,GAAOC,cAAgBrrB,KAAKsrB,yBAAyBb,IACrDW,GAAOG,gBAAkBvrB,KAAKsrB,yBAAyBb,IACvDW,GAAOI,eAAiBxrB,KAAKsrB,yBAAyBb,IACtDW,GAAOtgB,gBAAkB9K,KAAKsrB,yBAAyBb,IACvDW,GAAOK,UAAYzrB,KAAKsrB,yBAAyBb,IACjDW,GAAOM,YAAc1rB,KAAKsrB,yBAAyBb,IACnDW,GAAOO,WAAa3rB,KAAKsrB,yBAAyBb,IAClDW,GAAOQ,YAAc5rB,KAAKsrB,yBAAyBb,EAEnDvnB,GAAOyH,kCAAkCjE,EAAuBkE,iBAGjE,KAED,KAAK,Gf4mHiB,GevmHjBihB,EACJ,IAAInb,GAA6B,GAAIpO,MACrC,IAAIwpB,GAAkB9rB,KAAK+rB,sBAAsBtB,IAIjD,KAAI,GAAIvV,GAAW,EAAGA,EAAI4W,EAAU5W,IACnC,GAAI2W,EAAO1B,EAAgBS,oBAAoB5qB,KAAK+rB,sBAAsBtB,MACzE/Z,EAAMiJ,KAAKkS,EAEb3oB,GAAOwN,MAAQA,CAEf,MAED,KAAK,GACJxN,EAAOqN,KAAOvQ,KAAKgsB,0BAA0BvB,EAC7CN,GAAgBvZ,QAAQqb,qBAAqB/oB,EAE7C,MAED,KAAK,GACJA,EAAOqN,KAAOvQ,KAAKgsB,0BAA0BvB,EAEjCvnB,GAAQgpB,oBACpB/B,GAAgBvZ,QAAQqb,qBAAqB/oB,EAE7C,MAED,KAAK,GACJ,IAAKA,EAAO0N,UAAY1N,EAAO0N,QAAQ6Y,uBACtCvmB,EAAO+S,QAAUkW,QAAQ1B,EAE1B,MAED,KAAK,IACJ,GAAIE,EAAM,CACTF,GAAqB,CACrB,IAAIS,GAAsBhoB,EAAOyN,UACjCua,GAAWhc,QAAQ,GAAKlP,KAAKosB,oCAAoC3B,IACjES,GAAWhc,QAAQ,GAAKlP,KAAKosB,oCAAoC3B,IACjES,GAAWhc,QAAQ,GAAKlP,KAAKosB,oCAAoC3B,IACjES,GAAWhc,QAAQ,GAAKlP,KAAKosB,oCAAoC3B,EACjEvnB,GAAOsK,eAAiB,IAExBtK,GAAOyH,kCAAkCjE,EAAuB6H,iBAGjE,KAED,KAAK,IACJ,GAAIoc,EAAM,CACTF,GAAqB,CACrBvnB,GAAOuI,EAAIzL,KAAKqsB,8BAA8B5B,IAC9CvnB,GAAOyI,EAAI3L,KAAKqsB,8BAA8B5B,GAE/C,KAED,KAAK,KACJvnB,EAAO4L,SAAW,IAClB;KAED,KAAK,KACJ5L,EAAOwN,MAAQ,IACf,MAED,SACC,UAOP,OAAAoU,KAEArlB,GAAkBJ,QAATylB,IfslHNvI,sCAAsCnb,UAAU0b,iDAAiD,iDAAiDwP,iDAAiD,mDAAmDC,sCAAsC,SAAShuB,EAAQkB,EAAOJ,GAIvT,GgBrlIMmtB,GAAU,WAQf,QARKA,GAQO/gB,EAAUE,EAAU9H,GAE/B7D,KAAKyL,EAAIA,CACTzL,MAAK2L,EAAIA,CACT3L,MAAK6D,GAAKA,EAEZ,MAAA2oB,KAEoB/sB,GAAAJ,QAAXmtB,OhB+kIHxP,qCAAqC,SAASze,EAAQkB,EAAOJ,GiBhmInE,GAAOiH,GAAQ/H,EAAe,gCAC9B,IAAOgI,GAAahI,EAAa,qCAEjC,IAAOkI,GAAQlI,EAAe,gCjBupI9B,IiB5lIMsI,GAAS,WAkNd,QAlNKA,GAkNO4lB,GA5MLzsB,KAAA0sB,UAAqB,GAAIjmB,EA8M/BzG,MAAK2sB,eAAiBF,EAzMvB9rB,OAAAC,eAAWiG,EAAAtG,UAAA,cjB0lIJM,IiB1lIP,WAEC,GAAI+rB,GAAoBrmB,EAAcsmB,WAAW7sB,KAAK2sB,eAAehc,WACrEic,GAASE,QAET,OAAOF,IjB0lID7rB,WAAY,KACZC,aAAc,MiBllIrBL,QAAAC,eAAWiG,EAAAtG,UAAA,kBjB2lIJM,IiB3lIP,WAEC,MAAOb,MAAK2sB,eAAe5hB,kBjB4lIrBlI,IiBzlIP,SAA0ByI,GAEzBtL,KAAK2sB,eAAe5hB,iBAAmBO,GjB0lIjCvK,WAAY,KACZC,aAAc,MiBjlIrBL,QAAAC,eAAWiG,EAAAtG,UAAA,8BjB2lIJM,IiB3lIP,WAEC,MAAOb,MAAK+sB,6BjB4lINhsB,WAAY,KACZC,aAAc,MiB/kIrBL,QAAAC,eAAWiG,EAAAtG,UAAA,sBjB6lIJM,IiB7lIP,WAEC,MAAOb,MAAKgtB,qBjB8lINjsB,WAAY,KACZC,aAAc,MiBzlIrBL,QAAAC,eAAWiG,EAAAtG,UAAA,cjB+lIJM,IiB/lIP,WAEC,GAAI+rB,GAAoBrmB,EAAc0mB,MAAMjtB,KAAK2sB,eAAehc,WAChEic,GAASE,QAET,OAAOF,IjB+lID7rB,WAAY,KACZC,aAAc,MiB1lIrBL,QAAAC,eAAWiG,EAAAtG,UAAA,iBjBgmIJM,IiBhmIP,WAEC,MAAO0F,GAAcsmB,WAAW7sB,KAAK2sB,eAAehc,ajBimI9C5P,WAAY,KACZC,aAAc,MiB5lIrBL,QAAAC,eAAWiG,EAAAtG,UAAA,cjBkmIJM,IiBlmIP,WAEC,GAAI+rB,GAAoBrmB,EAAc2mB,SAASltB,KAAK2sB,eAAehc,WACnEic,GAASE,QAET,OAAOF,IjBkmID7rB,WAAY,KACZC,aAAc,MiBtkIrBL,QAAAC,eAAWiG,EAAAtG,UAAA,YjBqlIJM,IiBrlIP,WAEC,MAAOb,MAAK2sB,eAAehc,YjBslIrB9N,IiBnlIP,SAAoByI,GAEnBtL,KAAK2sB,eAAehc,WAAarF,GjBolI3BvK,WAAY,KACZC,aAAc,MiBnkIrBL,QAAAC,eAAWiG,EAAAtG,UAAA,ejB0kIJM,IiB1kIP,WAEC,MAAOb,MAAKmtB,cjB2kINpsB,WAAY,KACZC,aAAc,MiBtkIrBL,QAAAC,eAAWiG,EAAAtG,UAAA,YjB4kIJM,IiB5kIP,WAEC,MAAOb,MAAK2sB,eAAehc,WAAWsB,UjB6kIhCpP,IiB1kIP,SAAoBC,GAEnB9C,KAAK2sB,eAAelhB,EAAI3I,EAAM2I,CAC9BzL,MAAK2sB,eAAehhB,EAAI7I,EAAM6I,CAC9B3L,MAAK2sB,eAAe9gB,EAAI/I,EAAM+I,GjB2kIxB9K,WAAY,KACZC,aAAc,MiBtkIrBL,QAAAC,eAAWiG,EAAAtG,UAAA,ejB4kIJM,IiB5kIP,WAEC,MAAO0F,GAAc2mB,SAASltB,KAAK2sB,eAAehc,ajB6kI5C5P,WAAY,KACZC,aAAc,MiBxkIrBL,QAAAC,eAAWiG,EAAAtG,UAAA,YjB8kIJM,IiB9kIP,WAEC,MAAO,IAAI4F,GAASzG,KAAK2sB,eAAejhB,UAAW1L,KAAK2sB,eAAe/gB,UAAW5L,KAAK2sB,eAAe7gB,YjB+kIhGjJ,IiB5kIP,SAAoBC,GAEnB9C,KAAK2sB,eAAejhB,UAAY5I,EAAM2I,CACtCzL,MAAK2sB,eAAe/gB,UAAY9I,EAAM6I,CACtC3L,MAAK2sB,eAAe7gB,UAAYhJ,EAAM+I,GjB6kIhC9K,WAAY,KACZC,aAAc,MiBxkIrBL,QAAAC,eAAWiG,EAAAtG,UAAA,SjB8kIJM,IiB9kIP,WAEC,MAAO,IAAI4F,GAASzG,KAAK2sB,eAAe1d,OAAQjP,KAAK2sB,eAAe3gB,OAAQhM,KAAK2sB,eAAethB,SjB+kI1FxI,IiB5kIP,SAAiBC,GAEhB9C,KAAK2sB,eAAe1d,OAASnM,EAAM2I,CACnCzL,MAAK2sB,eAAe3gB,OAASlJ,EAAM6I,CACnC3L,MAAK2sB,eAAethB,OAASvI,EAAM+I,GjB6kI7B9K,WAAY,KACZC,aAAc,MiBxkIrBL,QAAAC,eAAWiG,EAAAtG,UAAA,YjB8kIJM,IiB9kIP,WAEC,MAAO0F,GAAc0mB,MAAMjtB,KAAK2sB,eAAehc,ajB+kIzC5P,WAAY,KACZC,aAAc,MiBtjId6F,GAAAtG,UAAA6sB,oBAAP,SAA2BC,GAE1B,MAAO,IAAI/mB,GASLO,GAAAtG,UAAA+sB,YAAP,SAAmBjW,GAElBrX,KAAK2sB,eAAenV,eAAe/Q,EAASkQ,OAAQU,GAQ9CxQ,GAAAtG,UAAAgtB,aAAP,SAAoBlW,GAEnBrX,KAAK2sB,eAAenV,eAAe/Q,EAASkQ,QAASU,GAS/CxQ,GAAAtG,UAAAitB,SAAP,SAAgBnW,GAEfrX,KAAK2sB,eAAenV,eAAe/Q,EAASsP,QAASsB,GAQ/CxQ,GAAAtG,UAAAktB,UAAP,SAAiBpW,GAEhBrX,KAAK2sB,eAAenV,eAAe/Q,EAASsP,OAAQsB,GAQ9CxQ,GAAAtG,UAAAmtB,OAAP,SAAcrW,GAEbrX,KAAK2sB,eAAenV,eAAe/Q,EAASoO,OAAQwC,GAQ9CxQ,GAAAtG,UAAAotB,SAAP,SAAgBtW,GAEfrX,KAAK2sB,eAAenV,eAAe/Q,EAASoO,QAASwC,GAEvD,OAAAxQ,KAEmBpH,GAAAJ,QAAVwH,IjB6jIN4V,gCAAgCrb,UAAUsb,qCAAqCtb,UAAUyb,gCAAgCzb,YAAYwsB,+CAA+C,SAASrvB,EAAQkB,EAAOJ,GAC/M,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkB96ItB,IAAOsgB,GAAcpiB,EAAc,4CAEnC,IAAOmD,GAAgBnD,EAAc,8CACrC,IAAOoD,GAAgBpD,EAAc,8CAQrC,IAAOqD,GAAerD,EAAc,0CAEpC,IAAOsD,GAAgBtD,EAAc,4ClB26IrC,IkBp6IMsvB,GAAmB,SAAAntB,GAASX,EAA5B8tB,EAAmBntB,EAkOxB,SAlOKmtB,GAkOO9rB,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEXrB,EAAApB,KAAAU,KAAM+B,EAhOC/B,MAAAgC,aAAsB,CACtBhC,MAAA8tB,kBAA4B,IAC5B9tB,MAAA+tB,mBAA6B,IAe7B/tB,MAAAguB,mBAA6B,IAC7BhuB,MAAAiuB,oBAA8B,IAC9BjuB,MAAAkC,eAAyB,KA+MhClC,MAAKwC,WAAaxC,KAAKyC,oBAAwCzC,KAAKyC,oBAAoBC,QAAQ,IAAM,GAAIhB,GAAiB1B,KAAKyC,qBAAuB,GAAIf,EAE3J1B,MAAKgC,aAAehC,KAAKwC,WAAWI,MA5MrCjC,OAAAC,eAAWitB,EAAAttB,UAAA,alB05IJM,IkB15IP,WAEC,MAAOgtB,GAAoB3sB,WlB25IrBH,WAAY,KACZC,aAAc,MkBx5IrBL,QAAAC,eAAWitB,EAAAttB,UAAA,elB25IJM,IkB35IP,WAEC,MAAOb,MAAKgC,clB45INjB,WAAY,KACZC,aAAc,MkBr5IrBL,QAAAC,eAAWitB,EAAAttB,UAAA,uBlB65IJM,IkB75IP,WAEC,MAAOb,MAAKkuB,sBlB85INrrB,IkB35IP,SAA+BC,GAE9B,GAAI9C,KAAKkuB,sBAAwBprB,EAChC,MAED9C,MAAKkuB,qBAAuBprB,GlB25ItB/B,WAAY,KACZC,aAAc,MkBt5IrBL,QAAAC,eAAWitB,EAAAttB,UAAA,mBlB45IJM,IkB55IP,WAEC,MAAOb,MAAKmuB,kBlB65INtrB,IkB15IP,SAA2BC,GAE1B,GAAI9C,KAAKmuB,kBAAoBrrB,EAC5B,MAED9C,MAAKmuB,iBAAmBrrB,CAExB,IAAI9C,KAAKouB,cACRpuB,KAAKouB,cAAcC,WAAaruB,KAAKmuB,gBAEtC,IAAInuB,KAAKsuB,cACRtuB,KAAKsuB,cAAcD,WAAaruB,KAAKmuB,kBlBw5IhCptB,WAAY,KACZC,aAAc,MkBj5IrBL,QAAAC,eAAWitB,EAAAttB,UAAA,iBlBy5IJM,IkBz5IP,WAEC,MAAOb,MAAKkC,gBlB05INW,IkBv5IP,SAAyBC,GAExB,GAAI9C,KAAKkC,gBAAkBY,EAC1B,MAED9C,MAAKkC,eAAiBY,GlBu5IhB/B,WAAY,KACZC,aAAc,MkBj5IrBL,QAAAC,eAAWitB,EAAAttB,UAAA,qBlBw5IJM,IkBx5IP,WAEC,MAAOb,MAAKguB,oBlBy5INnrB,IkBt5IP,SAA6BC,GAE5B,GAAI9C,KAAKguB,oBAAsBlrB,EAC9B,MAED9C,MAAKguB,mBAAqBlrB,GlBs5IpB/B,WAAY,KACZC,aAAc,MkBh5IrBL,QAAAC,eAAWitB,EAAAttB,UAAA,sBlBu5IJM,IkBv5IP,WAEC,MAAOb,MAAKiuB,qBlBw5INprB,IkBr5IP,SAA8BC,GAE7B,GAAI9C,KAAKiuB,qBAAuBnrB,EAC/B,MAED9C,MAAKiuB,oBAAsBnrB,GlBq5IrB/B,WAAY,KACZC,aAAc,MkBh5IrBL,QAAAC,eAAWitB,EAAAttB,UAAA,alBs5IJM,IkBt5IP,WAEC,MAAOb,MAAKwC,YlBu5INzB,WAAY,KACZC,aAAc,MkBl5IrBL,QAAAC,eAAWitB,EAAAttB,UAAA,WlBw5IJM,IkBx5IP,WAEC,IAAKb,KAAKuuB,UAAYvuB,KAAK4D,eAAe5D,KAAKuuB,SAAS1qB,IACvD7D,KAAKwuB,WAAWxuB,KAAKuuB,SAEtB,OAAOvuB,MAAKuuB,UlBw5INxtB,WAAY,KACZC,aAAc,MkBn5IrBL,QAAAC,eAAWitB,EAAAttB,UAAA,YlBy5IJM,IkBz5IP,WAEC,IAAKb,KAAKyuB,WAAazuB,KAAK4D,eAAe5D,KAAKyuB,UAAU5qB,IACzD7D,KAAK0uB,YAAY1uB,KAAKyuB,UAEvB,OAAOzuB,MAAKyuB,WlBy5IN1tB,WAAY,KACZC,aAAc,MkBp5IrBL,QAAAC,eAAWitB,EAAAttB,UAAA,elB05IJM,IkB15IP,WAEC,GAAIb,KAAK8tB,kBACR9tB,KAAK2uB,mBAEN,OAAO3uB,MAAK4uB,clB05IN7tB,WAAY,KACZC,aAAc,MkBr5IrBL,QAAAC,eAAWitB,EAAAttB,UAAA,gBlB25IJM,IkB35IP,WAEC,GAAIb,KAAK+tB,mBACR/tB,KAAK6uB,oBAEN,OAAO7uB,MAAK8uB,elB25IN/tB,WAAY,KACZC,aAAc,MkBt5IrBL,QAAAC,eAAWitB,EAAAttB,UAAA,OlB45IJM,IkB55IP,WAEC,IAAKb,KAAKgD,MAAQhD,KAAK4D,eAAe5D,KAAKgD,KAAKa,IAC/C7D,KAAK+C,OAAO/C,KAAKgD,KAElB,OAAOhD,MAAKgD,MlB45INjC,WAAY,KACZC,aAAc,MkBv5IrBL,QAAAC,eAAWitB,EAAAttB,UAAA,gBlB65IJM,IkB75IP,WAEC,MAAOb,MAAK+uB,elB85INhuB,WAAY,KACZC,aAAc,MkBz5IrBL,QAAAC,eAAWitB,EAAAttB,UAAA,gBlB+5IJM,IkB/5IP,WAEC,MAAOb,MAAKouB,elBg6INrtB,WAAY,KACZC,aAAc,MkB35IrBL,QAAAC,eAAWitB,EAAAttB,UAAA,gBlBi6IJM,IkBj6IP,WAEC,MAAOb,MAAKsuB,elBk6INvtB,WAAY,KACZC,aAAc,MkBh6IrBL,QAAAC,eAAWitB,EAAAttB,UAAA,wBlBm6IJM,IkBn6IP,WAEC,MAAOb,MAAKgvB,uBlBo6INjuB,WAAY,KACZC,aAAc,MkBt5Id6sB,GAAAttB,UAAA0C,aAAP,SAAoBC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,KAEnB,MAAOrB,GAAiBotB,6BAA6BjvB,KAAKwC,WAAYU,EAAQlD,KAAKgC,cAG7E6rB,GAAAttB,UAAA6C,gBAAP,SAAuBC,EAAiBH,GAAA,GAAAA,QAAA,GAAoB,CAApBA,EAAA,KAEvC,MAAOrB,GAAiBqtB,gCAAgClvB,KAAKwC,WAAYa,EAAQH,EAAQlD,KAAKgC,cAGxF6rB,GAAAttB,UAAA4T,aAAP,SAAoB1I,EAAUE,EAAUE,GAEvC,MAAO,MASDgiB,GAAAttB,UAAA+C,aAAP,SAAoBC,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/B,GAAID,GAAUvD,KAAKwC,WAClB,MAED,IAAIe,YAAkB7B,GAAkB,CACvC1B,KAAKyD,sBAAsBzD,KAAKwC,WAChCxC,MAAKwC,WAAgCe,MAC/B,IAAIA,EAAQ,CAClBvD,KAAKwC,WAAWK,IAAIU,EAAQC,OACtB,CACNxD,KAAKyD,sBAAsBzD,KAAKwC,WAChCxC,MAAKwC,WAAa,GAAId,GAAiB1B,KAAKyC,qBAG7CzC,KAAKgC,aAAehC,KAAKwC,WAAWI,KAEpC,IAAI5C,KAAKguB,mBACRhuB,KAAK0D,qBAAqB1D,KAAKuuB,SAEhC,IAAIvuB,KAAKiuB,oBACRjuB,KAAK0D,qBAAqB1D,KAAKyuB,UAEhC,IAAIzuB,KAAKkC,eACRlC,KAAK0D,qBAAqB1D,KAAKgD,KAEhChD,MAAK2D,mBAEL3D,MAAK0D,qBAAqB1D,KAAKwC,WAE/BxC,MAAK4D,eAAe5D,KAAKwC,WAAWqB,IAAM,MASpCgqB,GAAAttB,UAAAiuB,WAAP,SAAkBjrB,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE7B,IAAKxD,KAAKguB,mBAAoB,CAC7B,GAAIzqB,GAAUvD,KAAKuuB,SAClB,MAED,IAAIhrB,YAAkB7B,GAAkB,CACvC1B,KAAKyD,sBAAsBzD,KAAKuuB,SAChCvuB,MAAKuuB,SAA8BhrB,MAC7B,IAAIA,EAAQ,CAClB,IAAKvD,KAAKuuB,SACTvuB,KAAKuuB,SAAW,GAAI7sB,GAAiB1B,KAAKyC,oBAE3CzC,MAAKuuB,SAAS1rB,IAAIU,EAAQC,OACpB,IAAIxD,KAAKuuB,SAAU,CACzBvuB,KAAKyD,sBAAsBzD,KAAKuuB,SAChCvuB,MAAKuuB,SAAW,IAChB,aAEK,CACN,GAAIvuB,KAAK8tB,kBACR9tB,KAAK2uB,mBAEN3uB,MAAKuuB,SAAW1sB,EAAiBstB,gBAAgBnvB,KAAKgE,UAAWhE,KAAK4uB,aAAc5uB,KAAKuuB,SAAUvuB,KAAKyC,qBAGzGzC,KAAK0D,qBAAqB1D,KAAKuuB,SAE/BvuB,MAAK4D,eAAe5D,KAAKuuB,SAAS1qB,IAAM,MASlCgqB,GAAAttB,UAAAmuB,YAAP,SAAmBnrB,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE9B,IAAKxD,KAAKiuB,oBAAqB,CAC9B,GAAI1qB,GAAUvD,KAAKyuB,UAClB,MAED,IAAIlrB,YAAkB7B,GAAkB,CACvC1B,KAAKyD,sBAAsBzD,KAAKyuB,UAChCzuB,MAAKyuB,UAA+BlrB,MAC9B,IAAIA,EAAQ,CAClB,IAAKvD,KAAKyuB,UACTzuB,KAAKyuB,UAAY,GAAI/sB,GAAiB1B,KAAKyC,oBAE5CzC,MAAKyuB,UAAU5rB,IAAIU,EAAQC,OACrB,IAAIxD,KAAKyuB,UAAW,CAC1BzuB,KAAKyD,sBAAsBzD,KAAKyuB,UAChCzuB,MAAKyuB,UAAY,IACjB,aAEK,CACN,GAAIzuB,KAAK+tB,mBACR/tB,KAAK6uB,oBAEN,IAAI7uB,KAAK8tB,kBACR9tB,KAAK2uB,mBAEN3uB,MAAKyuB,UAAY5sB,EAAiButB,iBAAiBpvB,KAAKgE,UAAWhE,KAAK8uB,cAAe9uB,KAAK4uB,aAAc5uB,KAAKyuB,UAAWzuB,KAAKyC,qBAGhIzC,KAAK0D,qBAAqB1D,KAAKyuB,UAE/BzuB,MAAK4D,eAAe5D,KAAKyuB,UAAU5qB,IAAM,MASnCgqB,GAAAttB,UAAAwC,OAAP,SAAcQ,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEzB,IAAKxD,KAAKkC,eAAgB,CACzB,GAAIqB,GAAUvD,KAAKgD,KAClB,MAED,IAAIO,YAAkB5B,GAAkB,CACvC3B,KAAKyD,sBAAsBzD,KAAKgD,KAChChD,MAAKgD,KAA0BO,MACzB,IAAIA,EAAQ,CAClB,IAAKvD,KAAKgD,KACThD,KAAKgD,KAAO,GAAIrB,GAAiB3B,KAAKyC,oBAEvCzC,MAAKgD,KAAKH,IAAIU,EAAQC,OAChB,IAAIxD,KAAKgD,KAAM,CACrBhD,KAAKyD,sBAAsBzD,KAAKgD,KAChChD,MAAKgD,KAAO,IACZ,aAEK,CACNhD,KAAKgD,KAAOnB,EAAiBkC,YAAY/D,KAAKgE,UAAWhE,KAAKgD,KAAMhD,KAAKyC,oBAAqBzC,KAAKgC,cAGpG,GAAIhC,KAAKiuB,oBACRjuB,KAAK0D,qBAAqB1D,KAAKyuB,UAEhCzuB,MAAK0D,qBAAqB1D,KAAKgD,KAE/BhD,MAAK4D,eAAe5D,KAAKgD,KAAKa,IAAM,MAS9BgqB,GAAAttB,UAAA8uB,gBAAP,SAAuB9rB,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAElC,GAAID,GAAUvD,KAAK+uB,cAClB,MAED,IAAIxrB,YAAkB5B,GAAkB,CACvC3B,KAAKyD,sBAAsBzD,KAAK+uB,cAChC/uB,MAAK+uB,cAAmCxrB,MAClC,IAAIA,EAAQ,CAClB,IAAKvD,KAAK+uB,cACT/uB,KAAK+uB,cAAgB,GAAIptB,GAAiB3B,KAAKyC,oBAEhDzC,MAAK+uB,cAAclsB,IAAIU,EAAQC,OACzB,IAAIxD,KAAK+uB,cAAe,CAC9B/uB,KAAKyD,sBAAsBzD,KAAK+uB,cAChC/uB,MAAK+uB,cAAgB,IACrB,QAGD/uB,KAAK0D,qBAAqB1D,KAAK+uB,cAE/B/uB,MAAK4D,eAAe5D,KAAK+uB,cAAclrB,IAAM,MASvCgqB,GAAAttB,UAAA+uB,gBAAP,SAAuB/rB,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAElC,GAAID,GAAUvD,KAAKouB,cAClB,MAED,IAAI7qB,YAAkBod,GAAgB,CACrC3gB,KAAKyD,sBAAsBzD,KAAKouB,cAChCpuB,MAAKouB,cAAiC7qB,MAChC,IAAIA,EAAQ,CAClB,IAAKvD,KAAKouB,cACTpuB,KAAKouB,cAAgB,GAAIzN,GAAeI,aAAc/gB,KAAKmuB,iBAAkBnuB,KAAKyC,oBAEnF,IAAIzC,KAAKkuB,qBAAsB,CAC9B,GAAIlvB,GAAW,CACf,IAAIuwB,EACJ,IAAIC,GAAkB,CACtB,IAAIC,GAAa,GAAI9uB,OAErBX,MAAKgvB,sBAAwB,GAAI1sB,MAEjC,OAAOtD,EAAIuE,EAAOhE,OAAQ,CACzBgwB,EAAWhsB,EAAOvE,EAGlB,IAAIywB,EAAIF,IAAanuB,UAAW,CAC/BquB,EAAIF,GAAYC,CAChBxvB,MAAKgvB,sBAAsBQ,KAAcD,EAI1ChsB,EAAOvE,KAAOywB,EAAIF,IAIpBvvB,KAAKouB,cAAcvrB,IAAIU,EAAQC,OAEzB,IAAIxD,KAAKouB,cAAe,CAC9BpuB,KAAKyD,sBAAsBzD,KAAKouB,cAChCpuB,MAAKouB,cAAgB,IACrB,QAGDpuB,KAAK0D,qBAAqB1D,KAAKouB,cAE/BpuB,MAAK4D,eAAe5D,KAAKouB,cAAcvqB,IAAM,MASvCgqB,GAAAttB,UAAAmvB,gBAAP,SAAuBnsB,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAElC,GAAID,GAAUvD,KAAKsuB,cAClB,MAED,IAAI/qB,YAAkBod,GAAgB,CACrC3gB,KAAKyD,sBAAsBzD,KAAKsuB,cAChCtuB,MAAKsuB,cAAiC/qB,MAChC,IAAIA,EAAQ,CAClB,IAAKvD,KAAKsuB,cACTtuB,KAAKsuB,cAAgB,GAAI3N,GAAeI,aAAc/gB,KAAKmuB,iBAAkBnuB,KAAKyC,oBAEnFzC,MAAKsuB,cAAczrB,IAAIU,EAAQC,OAEzB,IAAIxD,KAAKsuB,cAAe,CAC9BtuB,KAAKyD,sBAAsBzD,KAAKsuB,cAChCtuB,MAAKsuB,cAAgB,IACrB,QAGDtuB,KAAK0D,qBAAqB1D,KAAKsuB,cAE/BtuB,MAAK4D,eAAe5D,KAAKsuB,cAAczqB,IAAM,MAMvCgqB,GAAAttB,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAO3B,KAAAU,KAEbA,MAAKwC,WAAWvB,SAChBjB,MAAKwC,WAAa,IAElB,IAAIxC,KAAKuuB,SAAU,CAClBvuB,KAAKuuB,SAASttB,SACdjB,MAAKuuB,SAAW,KAGjB,GAAIvuB,KAAKyuB,UAAW,CACnBzuB,KAAKyuB,UAAUxtB,SACfjB,MAAKyuB,UAAY,KAGlB,GAAIzuB,KAAKgD,KAAM,CACdhD,KAAKgD,KAAK/B,SACVjB,MAAKgD,KAAO,KAGb,GAAIhD,KAAK+uB,cAAe,CACvB/uB,KAAK+uB,cAAc9tB,SACnBjB,MAAK+uB,cAAgB,KAGtB,GAAI/uB,KAAKouB,cAAe,CACvBpuB,KAAKouB,cAAcntB,SACnBjB,MAAKouB,cAAgB,KAGtB,GAAIpuB,KAAKsuB,cAAe,CACvBtuB,KAAKsuB,cAAcrtB,SACnBjB,MAAKsuB,cAAgB,KAGtB,GAAItuB,KAAK4uB,aAAc,CACtB5uB,KAAK4uB,aAAa3tB,SAClBjB,MAAK4uB,aAAe,KAGrB,GAAI5uB,KAAK8uB,cAAe,CACvB9uB,KAAK8uB,cAAc7tB,SACnBjB,MAAK8uB,cAAgB,MAYhBjB,GAAAttB,UAAA6D,WAAP,SAAkBb,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE7B9C,EAAAH,UAAM6D,WAAU9E,KAAAU,KAACuD,EAAQC,EAEzBxD,MAAK8tB,kBAAoB,IACzB9tB,MAAK+tB,mBAAqB,IAE1B,IAAI/tB,KAAKguB,mBACRhuB,KAAK0D,qBAAqB1D,KAAKuuB,SAEhC,IAAIvuB,KAAKiuB,oBACRjuB,KAAK0D,qBAAqB1D,KAAKyuB,UAEhC,IAAIzuB,KAAKkC,eACRlC,KAAK0D,qBAAqB1D,KAAKgD,MAO1B6qB,GAAAttB,UAAA0D,MAAP,WAEC,GAAIA,GAA4B,GAAI4pB,GAAoB7tB,KAAKyC,oBAAqBzC,KAAKyC,oBAAoBwB,QAAU,KAGrHA,GAAM0rB,kBAAoB,KAC1B1rB,GAAM2rB,mBAAqB,KAC3B3rB,GAAMC,cAAgB,KAEtB,IAAIlE,KAAKmE,QACRF,EAAMG,WAAWpE,KAAKmE,QAAQF,QAE/B,IAAIjE,KAAK6vB,QACR5rB,EAAMuqB,WAAWxuB,KAAK6vB,QAAQ5rB,QAE/B,IAAIjE,KAAKqE,IACRJ,EAAMlB,OAAO/C,KAAKqE,IAAIJ,QAEvB,IAAIjE,KAAK8vB,SACR7rB,EAAMyqB,YAAY1uB,KAAK8vB,SAAS7rB,QAEjC,IAAIjE,KAAK+vB,aACR9rB,EAAMorB,gBAAgBrvB,KAAK+vB,aAAa9rB,QAEzCA,GAAM+rB,gBAAkBhwB,KAAKmuB,gBAE7B,IAAInuB,KAAKiwB,aACRhsB,EAAMqrB,gBAAgBtvB,KAAKiwB,aAAahsB,QAEzC,IAAIjE,KAAKkwB,aACRjsB,EAAMyrB,gBAAgB1vB,KAAKkwB,aAAajsB,QAGzCA,GAAM0rB,kBAAoB3vB,KAAKguB,kBAC/B/pB,GAAM2rB,mBAAqB5vB,KAAKiuB,mBAChChqB,GAAMC,cAAgBlE,KAAKkC,cAE3B,OAAO+B,GAGD4pB,GAAAttB,UAAA+D,QAAP,SAAeC,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAEjC3C,EAAiB4C,SAASF,EAAQC,EAAQxE,KAAKqE,IAAKrE,KAAKqE,IAAIzB,OAOvDirB,GAAAttB,UAAAmE,MAAP,SAAaA,GAEZ7C,EAAiB6C,MAAMA,EAAO1E,KAAK2E,UAAW3E,KAAKgC,cAG7C6rB,GAAAttB,UAAAqE,oBAAP,SAA2BC,GAE1BhD,EAAiB+C,oBAAoBC,EAAW7E,KAAK2E,UAAW3E,KAAK6vB,QAAS7vB,KAAK8vB,SAAU9vB,KAAKgC,cAM3F6rB,GAAAttB,UAAAsuB,mBAAR,WAEC7uB,KAAK8uB,cAAgBjtB,EAAiBsuB,qBAAqBnwB,KAAKgE,UAAWhE,KAAKwC,WAAYxC,KAAKqE,IAAKrE,KAAK8uB,cAAe9uB,KAAKgE,UAAUpB,MAEzI5C,MAAK+tB,mBAAqB,MAMnBF,GAAAttB,UAAAouB,kBAAR,WAEC3uB,KAAK4uB,aAAe/sB,EAAiBuuB,oBAAoBpwB,KAAKgE,UAAWhE,KAAKwC,WAAYxC,KAAK4uB,aAAc5uB,KAAKgE,UAAUpB,MAE5H5C,MAAK8tB,kBAAoB,MAGnBD,GAAAttB,UAAAuE,gBAAP,SAAuBC,EAAkCC,EAAuBC,EAAuCC,GAEtH,MAAOH,GAAgBsrB,sBAAsBrwB,KAAMgF,EAAUC,EAAoBC,GApqBpE2oB,GAAA3sB,UAAmB,6BAsqBlC,OAAA2sB,IAxqBkCjsB,EA0qBLnC,GAAAJ,QAApBwuB,IlB4xINlM,4CAA4CvgB,UAAUgE,8CAA8ChE,UAAUiE,8CAA8CjE,UAAUkE,0CAA0C,0CAA0CC,4CAA4C,8CAA8C+qB,2CAA2C,SAAS/xB,EAAQkB,EAAOJ,GAC1Z,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmB99JtB,IAAOwtB,GAAmBtvB,EAAY,8CAEtC,IAAOkH,GAAWlH,EAAc,sCnBy+JhC,ImB39JMgyB,GAAe,SAAA7vB,GAASX,EAAxBwwB,EAAe7vB,EA8BpB,SA9BK6vB,GA8BO5qB,EAAiCC,EAAiBZ,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAE7DtE,EAAApB,KAAAU,KAEAA,MAAK6F,aAAeD,CACpB5F,MAAK8F,aAAeH,CACpB3F,MAAKgF,SAAWA,EAzBjBrE,OAAAC,eAAW2vB,EAAAhwB,UAAA,anBm+JJM,ImBn+JP,WAEC,MAAO0vB,GAAgBrvB,WnBo+JjBH,WAAY,KACZC,aAAc,MmB/9JrBL,QAAAC,eAAW2vB,EAAAhwB,UAAA,enBq+JJM,ImBr+JP,WAEC,MAAOb,MAAK8F,cnBs+JN/E,WAAY,KACZC,aAAc,MmBl9JduvB,GAAAhwB,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAO3B,KAAAU,MA1CAuwB,GAAArvB,UAAmB,yBAEnBqvB,GAAAxqB,WAAyB8nB,CA0CxC,OAAA0C,IA9C8B9qB,EAgD9BhG,GAAyBJ,QAAhBkxB,InB09JNvqB,sCAAsC,sCAAsC4nB,8CAA8C,gDAAgD4C,oDAAoD,SAASjyB,EAAQkB,EAAOJ,GACzP,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoB/hKtB,IAAOowB,GAAmBlyB,EAAa,2CAIvC,IAAOmyB,GAAkBnyB,EAAa,+CAGtC,IAAOoyB,GAAmBpyB,EAAa,iDpBiiKvC,IoB1hKMqyB,GAAsB,SAAAlwB,GAASX,EAA/B6wB,EAAsBlwB,EAoB3B,SApBKkwB,GAoBOtQ,GAEX5f,EAAApB,KAAAU,KAAMsgB,EAnBCtgB,MAAA+I,GAAY,CACZ/I,MAAAgJ,GAAY,CACZhJ,MAAAiJ,GAAY,CACZjJ,MAAA6N,OAAgB,CAChB7N,MAAAiM,QAAiB,CACjBjM,MAAAuL,OAAgB,CAChBvL,MAAA6wB,SAAkB,CAClB7wB,MAAA8wB,SAAkB,CAClB9wB,MAAA+wB,SAAkB,CAClB/wB,MAAAgxB,cAAuB,CACvBhxB,MAAAixB,cAAuB,CACvBjxB,MAAAkxB,cAAuB,EAcxBN,EAAArwB,UAAA4wB,QAAP,WAECnxB,KAAK+I,GAAK/I,KAAKgJ,GAAKhJ,KAAKiJ,GAAK,CAC9BjJ,MAAK6N,OAAS7N,KAAKiM,QAAUjM,KAAKuL,OAAS,CAC3CvL,MAAK6wB,SAAW7wB,KAAK8wB,SAAW9wB,KAAK+wB,SAAW,CAChD/wB,MAAKgxB,cAAgBhxB,KAAKixB,cAAgBjxB,KAAKkxB,cAAgB,EAMzDN,GAAArwB,UAAA6wB,YAAP,SAAmBC,EAAuBC,GAEzC,GAAGtxB,KAAKuxB,cACPvxB,KAAKwxB,UAEN,KAAK,GAAIxyB,GAAW,EAAGA,EAAIsyB,IAAatyB,EAAG,CAE1C,GAAIyyB,GAAgBJ,EAAOryB,EAC3B,IAAID,GAAW0yB,EAAM1yB,CACrB,IAAImB,GAAWuxB,EAAMvxB,CACrB,IAAIwxB,GAAWD,EAAMC,CACrB,IAAIC,GAAwB5yB,EAAI,GAAIiB,KAAKgxB,cAAgBhxB,KAAKgxB,aAC9D,IAAIY,GAAwB1xB,EAAI,GAAIF,KAAKixB,cAAgBjxB,KAAKixB,aAC9D,IAAIY,GAAwBH,EAAI,GAAI1xB,KAAKkxB,cAAgBlxB,KAAKkxB,aAC9D,IAAIY,GAAkB/yB,GAAGiB,KAAK6wB,SAAWc,GAAkBzxB,GAAGF,KAAK8wB,SAAWc,GAAkBF,GAAG1xB,KAAK+wB,SAAWc,GAAkBJ,EAAMxxB,CAE3I,IAAI6xB,EAAW,EACd,MAAO,OAGT,MAAO,MAGDlB,GAAArwB,UAAAwxB,gBAAP,SAAuB9f,EAAmB+f,EAAoBC,GAE7D,GAAGjyB,KAAKuxB,cACPvxB,KAAKwxB,UAEN,OAAOxxB,MAAKkyB,KAAKH,gBAAgB9f,EAAU+f,EAAWC,GAKhDrB,GAAArwB,UAAA4xB,gBAAP,SAAuBV,GAEtB,GAAI1yB,GAAW0yB,EAAM1yB,CACrB,IAAImB,GAAWuxB,EAAMvxB,CACrB,IAAIwxB,GAAWD,EAAMC,CACrB,IAAIU,GAAwBrzB,EAAEiB,KAAK6wB,SAAW3wB,EAAEF,KAAK8wB,SAAWY,EAAE1xB,KAAK+wB,SAAWU,EAAMxxB,CAExF,IAAIlB,EAAI,EACPA,GAAKA,CAEN,IAAImB,EAAI,EACPA,GAAKA,CAEN,IAAIwxB,EAAI,EACPA,GAAKA,CAEN,IAAIW,GAAqBtzB,EAAEiB,KAAKgxB,cAAgB9wB,EAAEF,KAAKixB,cAAgBS,EAAE1xB,KAAKkxB,aAE9E,OAAOkB,GAAiBC,EAAa5B,EAAoB6B,MAAQF,GAAkBC,EAAa5B,EAAoB8B,KAAO9B,EAAoB+B,UAGzI5B,GAAArwB,UAAAixB,SAAP,WAEC9wB,EAAAH,UAAMixB,SAAQlyB,KAAAU,KAEdA,MAAKkyB,KAAOlyB,KAAKyyB,SAAStnB,QAC1B,IAAIunB,GAAkB1yB,KAAKyyB,SAASlmB,cACpC,IAAIomB,GAAY3yB,KAAKkyB,KAAKljB,MAAM,CAChC,IAAI4jB,GAAY5yB,KAAKkyB,KAAKnmB,OAAO,CACjC,IAAI8mB,GAAY7yB,KAAKkyB,KAAK9mB,MAAM,CAChC,IAAI0nB,GAAY9yB,KAAKkyB,KAAKzmB,EAAIknB,CAC9B,IAAII,GAAY/yB,KAAKkyB,KAAKvmB,EAAIinB,CAC9B,IAAII,GAAYhzB,KAAKkyB,KAAKrmB,EAAIgnB,CAC9B,IAAIje,GAAmB8d,EAAOxjB,OAE9B,IAAI+jB,GAAare,EAAI,GAAIse,EAAate,EAAI,GAAIue,EAAave,EAAI,GAAIwe,EAAaxe,EAAI,GACpF,IAAIye,GAAaze,EAAI,GAAI0e,EAAa1e,EAAI,GAAI2e,EAAa3e,EAAI,GAAI4e,EAAa5e,EAAI,GACpF,IAAI6e,GAAa7e,EAAI,GAAI8e,EAAa9e,EAAI,GAAI+e,EAAa/e,EAAI,IAAKgf,EAAahf,EAAI,GAErF5U,MAAK6wB,SAAWiC,EAAGG,EAAMF,EAAGG,EAAMF,EAAGG,EAAMC,CAC3CpzB,MAAK8wB,SAAWgC,EAAGO,EAAMN,EAAGO,EAAMN,EAAGO,EAAMC,CAC3CxzB,MAAK+wB,SAAW+B,EAAGW,EAAMV,EAAGW,EAAMV,EAAGW,EAAMC,CAE3C5zB,MAAKgxB,cAAgB1Z,KAAKuc,IAAIlB,EAAGM,EAAML,EAAGM,EAAML,EAAGM,EACnDnzB,MAAKixB,cAAgB3Z,KAAKuc,IAAIlB,EAAGU,EAAMT,EAAGU,EAAMT,EAAGU,EACnDvzB,MAAKkxB,cAAgB5Z,KAAKuc,IAAIlB,EAAGc,EAAMb,EAAGc,EAAMb,EAAGc,EAEnD,IAAI3zB,KAAK8zB,QAAS,CACjB9zB,KAAK8zB,QAAQ9kB,MAAQhP,KAAKkyB,KAAKljB,KAC/BhP,MAAK8zB,QAAQ/nB,OAAS/L,KAAKkyB,KAAKnmB,MAChC/L,MAAK8zB,QAAQ1oB,MAAQpL,KAAKkyB,KAAK9mB,KAC/BpL,MAAK+zB,kBAAkBlvB,UAAUmvB,SAAWtB,EAG7C1yB,KAAK6N,OAAS7N,KAAKgxB,cAAc,CACjChxB,MAAKiM,QAAUjM,KAAKixB,cAAc,CAClCjxB,MAAKuL,OAASvL,KAAKkxB,cAAc,CAEjClxB,MAAK+I,GAAK/I,KAAK6wB,SAAW7wB,KAAKgxB,aAC/BhxB,MAAKgJ,GAAKhJ,KAAK8wB,SAAW9wB,KAAKixB,aAC/BjxB,MAAKiJ,GAAKjJ,KAAK+wB,SAAW/wB,KAAKkxB,cAGzBN,GAAArwB,UAAA0zB,wBAAP,WAECj0B,KAAK8zB,QAAU,GAAInD,EACnB3wB,MAAK8zB,QAAQI,aAAe,iBAE5B,OAAcl0B,MAAK8zB,QAAQK,eAE7B,OAAAvD,IA9IqCF,EAgJrCjxB,GAAgCJ,QAAvBuxB,IpBw/JNwD,2CAA2ChzB,UAAUizB,+CAA+C,+CAA+CC,iDAAiD,mDAAmDC,4CAA4C,SAASh2B,EAAQkB,EAAOJ,GAC9T,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqB5pKtB,IAAOowB,GAAmBlyB,EAAa,2CAKvC,IAAOmyB,GAAkBnyB,EAAa,+CAGtC,IAAOi2B,GAAqBj2B,EAAY,mDAExC,IAAMk2B,GAAc,SAAA/zB,GAASX,EAAvB00B,EAAc/zB,EASnB,SATK+zB,GASOnU,GAEX5f,EAAApB,KAAAU,KAAMsgB,EARCtgB,MAAA00B,QAAiB,CACjB10B,MAAA6wB,SAAkB,CAClB7wB,MAAA8wB,SAAkB,CAClB9wB,MAAA+wB,SAAkB,EAQnB0D,EAAAl0B,UAAA4wB,QAAP,WAECnxB,KAAK6wB,SAAW7wB,KAAK8wB,SAAW9wB,KAAK+wB,SAAW,CAChD/wB,MAAK00B,QAAU,EAGTD,GAAAl0B,UAAA6wB,YAAP,SAAmBC,EAAuBC,GAEzC,GAAGtxB,KAAKuxB,cACPvxB,KAAKwxB,UAEN,KAAK,GAAIxyB,GAAW,EAAGA,EAAIsyB,IAAatyB,EAAG,CAC1C,GAAIyyB,GAAgBJ,EAAOryB,EAC3B,IAAI2yB,GAAwBF,EAAM1yB,EAAI,GAAIiB,KAAK00B,QAAU10B,KAAK00B,OAC9D,IAAI9C,GAAwBH,EAAMvxB,EAAI,GAAIF,KAAK00B,QAAU10B,KAAK00B,OAC9D,IAAI7C,GAAwBJ,EAAMC,EAAI,GAAI1xB,KAAK00B,QAAU10B,KAAK00B,OAC9D,IAAI5C,GAAkBL,EAAM1yB,GAAIiB,KAAK6wB,SAAWc,GAAmBF,EAAMvxB,GAAIF,KAAK8wB,SAAWc,GAAkBH,EAAMC,GAAI1xB,KAAK+wB,SAAWc,GAAmBJ,EAAMxxB,CAClK,IAAI6xB,EAAW,EAAG,CACjB,MAAO,QAGT,MAAO,MAGD2C,GAAAl0B,UAAAwxB,gBAAP,SAAuB9f,EAAmB+f,EAAoBC,GAE7D,GAAGjyB,KAAKuxB,cACPvxB,KAAKwxB,UAEN,OAAOxxB,MAAK20B,QAAQ5C,gBAAgB9f,EAAU+f,EAAWC,GAInDwC,GAAAl0B,UAAA4xB,gBAAP,SAAuBV,GAEtB,GAAI1yB,GAAW0yB,EAAM1yB,CACrB,IAAImB,GAAWuxB,EAAMvxB,CACrB,IAAIwxB,GAAWD,EAAMC,CACrB,IAAIkD,GAAY71B,EAAEiB,KAAK6wB,SAAW3wB,EAAEF,KAAK8wB,SAAWY,EAAE1xB,KAAK+wB,SAAWU,EAAMxxB,CAE5E,IAAIlB,EAAI,EACPA,GAAKA,CAEN,IAAImB,EAAI,EACPA,GAAKA,CAEN,IAAIwxB,EAAI,EACPA,GAAKA,CAEN,IAAImD,IAAa91B,EAAImB,EAAIwxB,GAAG1xB,KAAK00B,OAEjC,OAAOE,GAAKC,EAAIpE,EAAoB6B,MAAQsC,GAAMC,EAAIpE,EAAoB8B,KAAO9B,EAAoB+B,UAG/FiC,GAAAl0B,UAAAixB,SAAP,WAEC9wB,EAAAH,UAAMixB,SAAQlyB,KAAAU,KAEdA,MAAK20B,QAAU30B,KAAKyyB,SAAShhB,WAC7B,IAAIihB,GAAkB1yB,KAAKyyB,SAASlmB,cAEpC,IAAIumB,GAAY9yB,KAAK20B,QAAQlpB,CAC7B,IAAIsnB,GAAY/yB,KAAK20B,QAAQhpB,CAC7B,IAAIqnB,GAAYhzB,KAAK20B,QAAQ9oB,CAC7B,IAAIlN,GAAWqB,KAAK20B,QAAQG,MAE5B,IAAIlgB,GAAmB8d,EAAOxjB,OAE9B,IAAI+jB,GAAare,EAAI,GAAIse,EAAate,EAAI,GAAIue,EAAave,EAAI,GAAIwe,EAAaxe,EAAI,GACpF,IAAIye,GAAaze,EAAI,GAAI0e,EAAa1e,EAAI,GAAI2e,EAAa3e,EAAI,GAAI4e,EAAa5e,EAAI,GACpF,IAAI6e,GAAa7e,EAAI,GAAI8e,EAAa9e,EAAI,GAAI+e,EAAa/e,EAAI,IAAKgf,EAAahf,EAAI,GAErF5U,MAAK6wB,SAAWiC,EAAGG,EAAMF,EAAGG,EAAMF,EAAGG,EAAMC,CAC3CpzB,MAAK8wB,SAAWgC,EAAGO,EAAMN,EAAGO,EAAMN,EAAGO,EAAMC,CAC3CxzB,MAAK+wB,SAAW+B,EAAGW,EAAMV,EAAGW,EAAMV,EAAGW,EAAMC,CAE3C,IAAImB,GAAY9B,EAAMC,EAAMC,CAC5B,IAAI6B,GAAY3B,EAAMC,EAAMC,CAC5B,IAAI0B,GAAYxB,EAAMC,EAAMC,CAC5B3zB,MAAK00B,QAAU/1B,EAAE2Y,KAAKC,MAAMwd,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,GAAI,EAEnD,IAAIj1B,KAAK8zB,QAAS,CACjB9zB,KAAK8zB,QAAQgB,OAASn2B,CACtBqB,MAAK+zB,kBAAkBtoB,EAAIqnB,CAC3B9yB,MAAK+zB,kBAAkBpoB,EAAIonB,CAC3B/yB,MAAK+zB,kBAAkBloB,EAAImnB,CAC3BhzB,MAAK+zB,kBAAkBlvB,UAAUmvB,SAAWtB,GAIvC+B,GAAAl0B,UAAA0zB,wBAAP,WAECj0B,KAAK8zB,QAAU,GAAIU,EACnBx0B,MAAK8zB,QAAQI,aAAe,iBAE5B,OAAcl0B,MAAK8zB,QAAQK,eAE7B,OAAAM,IA/G6B/D,EAiH7BjxB,GAAwBJ,QAAfo1B,IrB0nKNL,2CAA2ChzB,UAAUizB,+CAA+C,+CAA+Ca,mDAAmD,qDAAqDb,gDAAgD,SAAS91B,EAAQkB,EAAOJ,GsBlvKtU,GAAOmf,GAAmBjgB,EAAa,6CAKvC,IAAMmyB,GAAkB,WAMvB,QANKA,GAMOpQ,GAFLtgB,KAAAuxB,cAAwB,IAI9BvxB,MAAKyyB,SAAWnS,EAGjB3f,OAAAC,eAAW8vB,EAAAnwB,UAAA,mBtB0uKJM,IsB1uKP,WAEC,GAAIb,KAAK+zB,mBAAqB,KAAM,CACnC/zB,KAAK+zB,kBAAoB/zB,KAAKi0B,yBAE9Bj0B,MAAKwxB,WAGN,MAAOxxB,MAAK+zB,mBtByuKNhzB,WAAY,KACZC,aAAc,MsBvuKd0vB,GAAAnwB,UAAA4wB,QAAP,WAEC,KAAM,IAAI3S,GAGJkS,GAAAnwB,UAAA6wB,YAAP,SAAmBC,EAAuBC,GAEzC,KAAM,IAAI9S,GAGJkS,GAAAnwB,UAAA0D,MAAP,WAEC,KAAM,IAAIua,GAGJkS,GAAAnwB,UAAAwxB,gBAAP,SAAuB9f,EAAmB+f,EAAoBC,GAE7D,OAAQ,EAGFvB,GAAAnwB,UAAA4xB,gBAAP,SAAuBV,GAEtB,KAAM,IAAIjT,GAGJkS,GAAAnwB,UAAAixB,SAAP,WAECxxB,KAAKuxB,cAAgB,MAGfb,GAAAnwB,UAAA4iB,WAAP,WAECnjB,KAAKuxB,cAAgB,KAGfb,GAAAnwB,UAAA0zB,wBAAP,WAEC,KAAM,IAAIzV,GAEZ,OAAAkS,KAEAjxB,GAA4BJ,QAAnBqxB,ItB4tKNnQ,6CAA6Cnf,YAAY6b,wCAAwC,SAAS1e,EAAQkB,EAAOJ,GAI5H,GuBryKMsH,GAAU,WAAhB,QAAMA,MAKSA,EAAAwuB,OAAgB,QAKhBxuB,GAAA8D,iBAA0B,gBAK1B9D,GAAAyuB,KAAc,MAC7B,OAAAzuB,KAEAlH,GAAoBJ,QAAXsH,OvBsyKH0uB,wCAAwC,SAAS92B,EAAQkB,EAAOJ,GACtE,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwBh0KtB,IAAOowB,GAAmBlyB,EAAa,2CAGvC,IAAOmyB,GAAkBnyB,EAAa,+CAGtC,IAAM+2B,GAAU,SAAA50B,GAASX,EAAnBu1B,EAAU50B,EAIf,SAJK40B,GAIOC,GAAA,GAAAA,QAAA,GAAuB,CAAvBA,EAAA,KAEX70B,EAAApB,KAAAU,KAAM,KAENA,MAAKw1B,UAAYD,EAIXD,EAAA/0B,UAAA0D,MAAP,WAEC,MAAO,IAAIqxB,GAAWt1B,KAAKw1B,WAIrBF,GAAA/0B,UAAA6wB,YAAP,SAAmBC,EAAuBC,GAEzC,MAAOtxB,MAAKw1B,UAGNF,GAAA/0B,UAAA4xB,gBAAP,SAAuBV,GAEtB,MAAOhB,GAAoB+B,UAE7B,OAAA8C,IA3ByB5E,EA6BzBjxB,GAAoBJ,QAAXi2B,IxBuzKNlB,2CAA2ChzB,UAAUizB,+CAA+C,iDAAiD7T,wDAAwD,SAASjiB,EAAQkB,EAAOJ,GACxO,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyB51KtB,IAAOo1B,GAAal3B,EAAc,uCAClC,IAAOW,GAAKX,EAAgB,+BAC5B,IAAOm3B,GAAUn3B,EAAe,oCAChC,IAAOo3B,GAAUp3B,EAAe,mCAEhC,IAAOyI,GAAazI,EAAc,wCAClC,IAAOmI,GAAsBnI,EAAY,iDzBm3KzC,IyBv1KMkgB,GAAsB,SAAA/d,GAASX,EAA/B0e,EAAsB/d,EA2F3B,SA3FK+d,KA6FJ/d,EAAApB,KAAAU,KAzFOA,MAAA41B,gBAAuC,GAAItzB,MAC3CtC,MAAA61B,eAAyB,IACzB71B,MAAA81B,gBACA91B,MAAA+1B,kBAA2B,CAE5B/1B,MAAAupB,UAAiC,GAAIjnB,MAsF3CtC,MAAKsH,cAAgB,KAjFtB3G,OAAAC,eAAW6d,EAAAle,UAAA,azBk2KJM,IyBl2KP,WAEC,MAAO4d,GAAuBvd,WzBm2KxBH,WAAY,KACZC,aAAc,MyB50KrBL,QAAAC,eAAW6d,EAAAle,UAAA,iBzBo2KJM,IyBp2KP,WAEC,GAAIb,KAAKsO,wBAA0B5H,EAAuBqU,cACzD/a,KAAKgb,qBAEN,OAAOhb,MAAK61B,gBzBo2KNhzB,IyBj2KP,SAAyBC,GAExB,GAAI9C,KAAK61B,gBAAkB/yB,EAC1B,MAED9C,MAAK61B,eAAiB/yB,CAEtB9C,MAAK2K,kCAAkCjE,EAAuBqU,gBzBg2KxDha,WAAY,KACZC,aAAc,MyB31KrBL,QAAAC,eAAW6d,EAAAle,UAAA,ezBi2KJM,IyBj2KP,WAEC,MAAOb,MAAKupB,UAAUhqB,QzBk2KhBwB,WAAY,KACZC,aAAc,MyBlyKdyd,GAAAle,UAAAy1B,SAAP,SAAgBvN,GAEf,MAAOzoB,MAAKi2B,WAAWxN,EAAOzoB,KAAKupB,UAAUhqB,QAGvCkf,GAAAle,UAAAopB,gBAAP,SAAuBlB,EAAqBrd,EAAc8qB,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEzD,GAAIzN,GAAS,KACZ,KAAM,IAAIvpB,GAAM,kCAGjB,IAAIupB,EAAMtc,SACTsc,EAAMtc,SAASgqB,sBAAsB1N,EAAMtc,SAASC,cAAcqc,GAGnE,IAAI5O,GAAQ7Z,KAAKo2B,sBAAsBhrB,EAEvC,IAAIyO,IAAU,EAAG,CAChB,GAAIqc,EAAS,CACZl2B,KAAK0oB,cAAc7O,OACb,CAEN7Z,KAAK2pB,gBAAgB3pB,KAAKupB,UAAU1P,GAAQzO,EAAQ,EAAG,QAIzD,GAAIpL,KAAK+1B,kBAAoB3qB,EAAQ,EACpCpL,KAAK+1B,kBAAoB3qB,EAAQ,CAElCpL,MAAK81B,cAAc1qB,GAASqd,CAC5BzoB,MAAKupB,UAAU5P,KAAK8O,EAEpBA,GAAMjhB,SAAW4D,CAEjBqd,GAAMzQ,WAAWhY,KAEjBA,MAAKgL,oBAEL,OAAOyd,GAgCDhK,GAAAle,UAAA01B,WAAP,SAAkBxN,EAAqB5O,GAEtC,MAAO7Z,MAAK2pB,gBAAgBlB,EAAQ5O,EAAQ7Z,KAAKupB,UAAUhqB,OAASS,KAAKupB,UAAU1P,GAAOrS,SAAWxH,KAAKq2B,sBAAuB,OAG3H5X,GAAAle,UAAA+1B,YAAP,WAAmB,GAAAC,KzBszKZ,KyBtzKY,GAAAC,GAAA,EAAAA,EAAApU,UAAA7iB,OAAAi3B,IAAkC,CAAlCD,EAAAC,EAAA,GAAApU,UAAAoU,GAElB,GAAIvrB,GAAasrB,EAAWh3B,MAC5B,KAAK,GAAIP,GAAW,EAAGA,EAAKiM,EAAKjM,IAChCgB,KAAKg2B,SAASO,EAAWv3B,IAMpByf,GAAAle,UAAA0D,MAAP,WAEC,GAAIkM,GAAqC,GAAIsO,EAE7Cze,MAAKoQ,OAAOD,EAEZ,OAAOA,GAGDsO,GAAAle,UAAA6P,OAAP,SAAcD,GAEbzP,EAAAH,UAAM6P,OAAM9Q,KAAAU,KAACmQ,EAEbA,GAAY4L,cAAgB/b,KAAK61B,cAEjC,IAAI5qB,GAAajL,KAAKupB,UAAUhqB,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,IAAOjM,EACjCmR,EAAY6lB,SAASh2B,KAAKupB,UAAUvqB,GAAGiF,SAelCwa,GAAAle,UAAAk2B,SAAP,SAAgBhO,GAEf,MAAOzoB,MAAKupB,UAAUzP,QAAQ2O,IAAU,EAMlChK,GAAAle,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAO3B,KAAAU,KAEb,KAAK,GAAIhB,GAAWgB,KAAKupB,UAAUhqB,OAAS,EAAGP,GAAK,EAAGA,IACtDgB,KAAKupB,UAAUvqB,GAAGiC,UAGbwd,GAAAle,UAAAm2B,gBAAP,SAAuBtrB,GAEtB,MAAOpL,MAAK81B,cAAc1qB,GAYpBqT,GAAAle,UAAAo2B,WAAP,SAAkB9c,GAEjB,GAAI4O,GAAsBzoB,KAAKupB,UAAU1P,EAEzC,IAAI4O,GAAS,KACZ,KAAM,IAAIiN,GAAW,uDAEtB,OAAOjN,GAiBDhK,GAAAle,UAAAq2B,eAAP,SAAsBrmB,GAErB,GAAItF,GAAajL,KAAKupB,UAAUhqB,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,IAAOjM,EACjC,GAAIgB,KAAKupB,UAAUvqB,GAAGuR,MAAQA,EAC7B,MAAOvQ,MAAKupB,UAAUvqB,EAExB,OAAO,MAWDyf,GAAAle,UAAA6L,cAAP,SAAqBqc,GAEpB,GAAIoO,GAAoB72B,KAAKupB,UAAUzP,QAAQ2O,EAE/C,IAAIoO,IAAe,EAClB,KAAM,IAAIpB,GAAc,+CAEzB,OAAOoB,GAGDpY,GAAAle,UAAA81B,oBAAP,WAEC,GAAIr2B,KAAK82B,uBACR92B,KAAK+2B,yBAEN,OAAO/2B,MAAK+1B,kBAsBNtX,GAAAle,UAAAy2B,qBAAP,SAA4BnlB,GAE3B,MAAO,IAAIvP,OAsBLmc,GAAAle,UAAAuQ,YAAP,SAAmB2X,GAElB,GAAIA,GAAS,KACZ,KAAM,IAAIvpB,GAAM,iCAEjBc,MAAK0oB,cAAc1oB,KAAKoM,cAAcqc,GAEtC,OAAOA,GAGDhK,GAAAle,UAAA6pB,mBAAP,SAA0Bhf,GAEzB,MAAOpL,MAAK0oB,cAAc1oB,KAAKo2B,sBAAsBhrB,IAyB/CqT,GAAAle,UAAAmoB,cAAP,SAAqB7O,GAEpB,GAAI4O,GAAsBzoB,KAAKm2B,sBAAsBtc,EAErD4O,GAAMzQ,WAAW,KAEjBhY,MAAKgL,oBAEL,OAAOyd,GAmBDhK,GAAAle,UAAA02B,eAAP,SAAsBC,EAA+BC,GAA/B,GAAAD,QAAA,GAA6B,CAA7BA,EAAA,EAA+B,GAAAC,QAAA,GAAoC,CAApCA,EAAA,WAEpD,GAAID,EAAa,EAChB,KAAM,IAAIxB,GAAW,+CAEtB,IAAIyB,EAAWn3B,KAAKupB,UAAUhqB,OAC7B,KAAM,IAAIm2B,GAAW,6CAEtB,KAAI,GAAI12B,GAAoBk4B,EAAYl4B,EAAIm4B,EAAUn4B,IACrDgB,KAAK8Q,YAAY9Q,KAAKupB,UAAUvqB,IA+B3Byf,GAAAle,UAAA62B,cAAP,SAAqB3O,EAAqB5O,IAenC4E,GAAAle,UAAA82B,aAAP,SAAoBC,EAAsBC,GAEzCv3B,KAAKw3B,eAAex3B,KAAKoM,cAAckrB,GAASt3B,KAAKoM,cAAcmrB,IAY7D9Y,GAAAle,UAAAi3B,eAAP,SAAsBC,EAAeC,GAEpC,GAAItsB,GAAepL,KAAKupB,UAAUmO,GAAQlwB,QAC1C,IAAIihB,GAAsBzoB,KAAKupB,UAAUkO,EAEzCz3B,MAAK2pB,gBAAgB3pB,KAAKupB,UAAUmO,GAAS13B,KAAKupB,UAAUkO,GAAQjwB,SACpExH,MAAK2pB,gBAAgBlB,EAAOrd,GAStBqT,GAAAle,UAAA8Q,kBAAP,WAEC3Q,EAAAH,UAAM8Q,kBAAiB/R,KAAAU,KAEvB,IAAI0S,EACJ,IAAIwJ,GAAqBlc,KAAKupB,UAAUhqB,MAExC,IAAI2c,EAAc,EAAG,CAEpB,GAAIyZ,EAAWgC,KAAM,CACpB,GAAIC,GAAQD,KAAKE,WAAaF,KAAKG,SACnC,IAAIC,GAAOH,EAAMI,SAAWJ,EAAMK,KAClC,IAAIC,GAAQN,EAAMO,UAAYP,EAAMQ,MACpC,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EAEJ,KAAK,GAAIx5B,GAAW,EAAGA,EAAIkd,IAAeld,EAAG,CAC5C0T,EAAM1S,KAAKupB,UAAUvqB,GAAGmM,OAAOnL,KAE/B,IAAIhB,GAAK,EAAG,CACXq5B,EAAON,EAAKrlB,EAAIxD,QAAS,EACzBopB,GAAOV,EAAMa,IAAIV,EAAKrlB,EAAIxD,QAAS,GAAImpB,OACjC,CACNE,EAAOR,EAAKrlB,EAAIxD,QAAS,EACzBspB,GAAOZ,EAAMa,IAAIV,EAAKrlB,EAAIxD,QAAS,GAAIqpB,EACvCF,GAAOT,EAAMc,IAAIH,EAAMF,EACvBC,GAAOV,EAAMe,IAAIH,EAAMF,IAIzBJ,EAAMl4B,KAAKsR,YAAYpC,QAAS,EAAG0oB,EAAMgB,IAAIN,EAAMJ,EAAMl4B,KAAKsR,YAAYpC,QAAS,EAAGmpB,SAChF,CACN,GAAIK,EACJ,IAAIC,EACJ,IAAIE,GAAaC,EAAaC,CAC9B,IAAIC,GAAaC,EAAaC,CAE9B,KAAK,GAAIl6B,GAAW,EAAGA,EAAIkd,IAAeld,EAAG,CAC5C0T,EAAM1S,KAAKupB,UAAUvqB,GAAGmM,OAAOnL,KAE/B,IAAIhB,GAAK,EAAG,CACXg6B,EAAOtmB,EAAI1D,OAAS6pB,EAAOnmB,EAAIjH,EAC/BwtB,GAAOvmB,EAAI3G,QAAU+sB,EAAOpmB,EAAI/G,EAChCutB,GAAOxmB,EAAItH,OAAS2tB,EAAOrmB,EAAI7G,OACzB,CACN8sB,EAAMjmB,EAAI1D,OAAS0pB,EAAMhmB,EAAIjH,EAC7B,IAAIitB,EAAMG,EACTA,EAAOH,CACR,IAAIC,EAAMK,EACTA,EAAOL,CAERA,GAAMjmB,EAAI3G,QAAU2sB,EAAMhmB,EAAI/G,EAC9B,IAAI+sB,EAAMI,EACTA,EAAOJ,CACR,IAAIC,EAAMM,EACTA,EAAON,CAERA,GAAMjmB,EAAItH,OAASstB,EAAMhmB,EAAI7G,EAC7B,IAAI6sB,EAAMK,EACTA,EAAOL,CACR,IAAIC,EAAMO,EACTA,EAAOP,GAIV34B,KAAKsR,YAAYtC,MAAQgqB,GAAQh5B,KAAKsR,YAAY7F,EAAIotB,EACtD74B,MAAKsR,YAAYvF,OAASktB,GAAQj5B,KAAKsR,YAAY3F,EAAImtB,EACvD94B,MAAKsR,YAAYlG,MAAQ8tB,GAAQl5B,KAAKsR,YAAYzF,EAAIktB,QAEjD,CACN/4B,KAAKsR,YAAY6nB,YAOZ1a,GAAAle,UAAAoK,kCAAP,SAAyCyuB,GAExC,GAAI14B,EAAAH,UAAMoK,kCAAiCrL,KAAAU,KAACo5B,GAC3C,MAAO,KAER,IAAInuB,GAAajL,KAAKupB,UAAUhqB,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,IAAOjM,EACjCgB,KAAKupB,UAAUvqB,GAAG2L,kCAAkCyuB,EAErD,OAAO,OAOD3a,GAAAle,UAAAwM,WAAP,SAAkBjK,EAAauN,GAE9B3P,EAAAH,UAAMwM,WAAUzN,KAAAU,KAAC8C,EAAOuN,EAExB,IAAIpF,GAAajL,KAAKupB,UAAUhqB,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,IAAOjM,EACjCgB,KAAKupB,UAAUvqB,GAAG+N,WAAWjK,EAAOuN,GAQ/BoO,GAAAle,UAAA41B,sBAAP,SAA6Btc,GAE5B,GAAI4O,GAAsBzoB,KAAKupB,UAAUxP,OAAOF,EAAO,GAAG,EAG1D,IAAI7Z,KAAK+1B,mBAAqBtN,EAAMjhB,SAAW,EAC9CxH,KAAK82B,uBAAyB,WAExB92B,MAAK81B,cAAcrN,EAAMjhB,SAEhCihB,GAAMjhB,UAAY,KAElB,OAAOihB,GAGAhK,GAAAle,UAAA61B,sBAAR,SAA8BhrB,GAE7B,IAAKpL,KAAK81B,cAAc1qB,GACvB,OAAQ,CAET,OAAOpL,MAAKupB,UAAUzP,QAAQ9Z,KAAK81B,cAAc1qB,IAG1CqT,GAAAle,UAAAw2B,wBAAR,WAEC/2B,KAAK82B,uBAAyB,KAE9B92B,MAAK+1B,kBAAoB,CACzB,IAAI9qB,GAAajL,KAAKupB,UAAUhqB,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,EAAKjM,IAC/B,GAAIgB,KAAK+1B,kBAAoB/1B,KAAKupB,UAAUvqB,GAAGwI,SAC9CxH,KAAK+1B,kBAAoB/1B,KAAKupB,UAAUvqB,GAAGwI,QAE7CxH,MAAK+1B,mBAAqB,EAmBpBtX,GAAAle,UAAA4T,aAAP,SAAoB1I,EAAUE,EAAUyI,EAA2BilB,GAA3B,GAAAjlB,QAAA,GAAyB,CAAzBA,EAAA,MAA2B,GAAAilB,QAAA,GAAyB,CAAzBA,EAAA,MAElE,GAAGr5B,KAAK+H,oBAAsB,IAAMsxB,EACnC,MAED,KAAIr5B,KAAK8H,qBACR,MAED,IAAI4I,GAA6B1Q,KAAK0Q,KAEtC,IAAIA,EAAO,CACV,GAAIob,GAAkBpb,EAAMnR,MAC5B,IAAI+5B,GAAkB,KACtB,KAAK,GAAIt6B,GAAW,EAAGA,EAAI8sB,EAAU9sB,IAAK,CACzC,GAAI0R,EAAM1R,GAAGmV,aAAa1I,EAAGE,EAAGyI,EAAW,MAAO,CACjDklB,EAAU,IACV,QAIF,IAAKA,EACJ,MAAO,OAGT,MAAOt5B,MAAKu5B,sBAAsB9tB,EAAGE,EAAGyI,EAAWilB,GAG7C5a,GAAAle,UAAAi5B,mBAAP,SAA0BC,GAEzBz5B,KAAK41B,gBAAgBjc,KAAK8f,EAE1B,OAAOA,GAIDhb,GAAAle,UAAAm5B,sBAAP,SAA6BD,GAE5Bz5B,KAAK41B,gBAAgB7b,OAAO/Z,KAAK41B,gBAAgB9b,QAAQ2f,GAAgB,EAEzE,OAAOA,GAGDhb,GAAAle,UAAAg5B,sBAAP,SAA6B9tB,EAAUE,EAAUyI,EAAmBilB,GAEnE,GAAInd,GAAqBlc,KAAKkc,WAC9B,KAAI,GAAIld,GAAW,EAAGA,EAAIkd,EAAald,IACtC,GAAGgB,KAAKupB,UAAUvqB,GAAGmV,aAAa1I,EAAEE,EAAGyI,EAAWilB,GACjD,MAAO,KAET,OAAO,OAGD5a,GAAAle,UAAAmM,gBAAP,WAEC,GAAI1M,KAAK8O,SACR9O,KAAK+b,cAAgB,KAEtBrb,GAAAH,UAAMmM,gBAAepN,KAAAU,MAGfye,GAAAle,UAAAqY,iBAAP,WAEClY,EAAAH,UAAMqY,iBAAgBtZ,KAAAU,KAEtB,IAAIhB,EAEJ,KAAKA,EAAIgB,KAAKupB,UAAUhqB,OAAS,EAAGP,GAAK,EAAGA,IAC3CgB,KAAKupB,UAAUvqB,GAAG4Z,kBAEnB,KAAK5Z,EAAIgB,KAAK41B,gBAAgBr2B,OAAS,EAAGP,GAAK,EAAGA,IACjDgB,KAAK41B,gBAAgB52B,GAAGiC,UAnvBZwd,GAAAvd,UAAmB,gCAqvBlC,OAAAud,IAvvBqCzX,EAyvBrCvH,GAAgCJ,QAAvBof,IzBktKNkb,uCAAuCv4B,UAAUw4B,+BAA+Bx4B,UAAUy4B,oCAAoCz4B,UAAU04B,mCAAmC14B,UAAU6E,wCAAwC,wCAAwC6W,iDAAiD,mDAAmDid,wCAAwC,SAASx7B,EAAQkB,EAAOJ,GAC5a,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL;CACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0Br/LtB,IAAO25B,GAAkBz7B,EAAa,6CACtC,IAAO07B,GAAa17B,EAAc,wCAGlC,IAAO27B,GAAU37B,EAAe,oCAEhC,IAAO47B,GAAY57B,EAAe,sCAClC,IAAO67B,GAAW77B,EAAe,qCACjC,IAAO87B,GAAW97B,EAAe,qCAGjC,IAAOkgB,GAAsBlgB,EAAY,uD1BkjMzC,I0B/+LM+7B,GAAM,SAAA55B,GAASX,EAAfu6B,EAAM55B,EA2HX,SA3HK45B,GA2HOC,EAAgCC,GA3H7C,GAAAC,GAAAz6B,IA2Ha,IAAAu6B,QAAA,GAA8B,CAA9BA,EAAA,KAAgC,GAAAC,QAAA,GAA4B,CAA5BA,EAAA,KAE3C95B,EAAApB,KAAAU,KAEAA,MAAK06B,aAAeH,CACpBv6B,MAAK26B,YAAcH,CAEnBx6B,MAAK46B,4BAA8B,SAAC/e,GAAsB,MAAA4e,GAAKI,mBAAmBhf,GAClF7b,MAAK86B,yBAA2B,SAACjf,GAAqB,MAAA4e,GAAKM,gBAAgBlf,GAC3E7b,MAAKg7B,4BAA8B,SAACnf,GAAqB,MAAA4e,GAAKQ,mBAAmBpf,GACjF7b,MAAKk7B,qBAAuB,SAACrf,GAAuB,MAAA4e,GAAKU,YAAYtf,GACrE7b,MAAKo7B,sBAAwB,SAACvf,GAAsB,MAAA4e,GAAKY,aAAaxf,IArFvElb,OAAAC,eAAW05B,EAAA/5B,UAAA,W1B+gMJM,I0B/gMP,WAEC,MAAOb,MAAKwiB,U1BghMNzhB,WAAY,KACZC,aAAc,M0B9/LrBL,QAAAC,eAAW05B,EAAA/5B,UAAA,qB1BihMJM,I0BjhMP,WAEC,MAAOb,MAAKs7B,oB1BkhMNv6B,WAAY,KACZC,aAAc,M0B78Lds5B,GAAA/5B,UAAAg7B,MAAP,WAEC,IAAKv7B,KAAKw7B,eACT,MAED,IAAIx7B,KAAK06B,aAAc,CACtB,GAAIe,EACJA,GAAMzB,EAAmB0B,YAAY17B,KAAK26B,YAC1Cc,GAAIE,qBAAqB37B,KAAKw7B,gBAG/Bx7B,KAAK47B,wBA0KCtB,GAAA/5B,UAAAw3B,KAAP,SAAY8D,EAAoBC,EAA8BC,EAAkBC,GAAhD,GAAAF,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,KAE/Eh8B,KAAKi8B,oBAAoBlE,KAAK8D,EAASC,EAASC,EAAIC,GAyF9C1B,GAAA/5B,UAAA27B,SAAP,SAAgBC,EAAUL,EAA8BC,EAAkBC,GAAhD,GAAAF,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,KAEzEh8B,KAAKi8B,oBAAoBC,SAASC,EAAM,GAAIL,EAASC,EAAIC,GAGlD1B,GAAA/5B,UAAA07B,kBAAR,WAEC,GAAIj8B,KAAK06B,aAAc,CACtB,GAAIe,GAAyBzB,EAAmB0B,YAAY17B,KAAK26B,YACjE36B,MAAKw7B,eAAiBC,EAAIW,uBACpB,CACNp8B,KAAKw7B,eAAiB,GAAIvB,GAG3Bj6B,KAAKw7B,eAAepsB,iBAAiBgrB,EAAYiC,kBAAmBr8B,KAAK46B,4BACzE56B,MAAKw7B,eAAepsB,iBAAiB8qB,EAAWoC,mBAAoBt8B,KAAKg7B,4BACzEh7B,MAAKw7B,eAAepsB,iBAAiB8qB,EAAWqC,eAAgBv8B,KAAK86B,yBAGrE96B,MAAKw7B,eAAegB,kBAAkBx8B,KAAKk7B,qBAC3Cl7B,MAAKw7B,eAAeiB,uBAAuBz8B,KAAKo7B,sBAEhD,OAAOp7B,MAAKw7B,eAGLlB,GAAA/5B,UAAAq7B,sBAAR,WAAA,GAAAnB,GAAAz6B,IAGCA,MAAK08B,sBAAwB18B,KAAKw7B,qBAC3Bx7B,MAAKw7B,cACZx7B,MAAKw7B,eAAiB,IACtBx7B,MAAK28B,cAAgBC,WAAW,WAAOnC,EAAKoC,mBAAoB,KA0B1DvC,GAAA/5B,UAAAu8B,OAAP,YAccxC,GAAAyC,aAAd,SAA2BC,GAE1B/C,EAAc8C,aAAaC,GAYd1C,GAAA2C,cAAd,SAA4BC,GAE3BjD,EAAcgD,cAAcC,GAGrB5C,GAAA/5B,UAAAs8B,gBAAR,WAGC78B,KAAK08B,sBAAsBxlB,oBAAoBkjB,EAAYiC,kBAAmBr8B,KAAK46B,4BACnF56B,MAAK08B,sBAAsBxlB,oBAAoBgjB,EAAWoC,mBAAoBt8B,KAAKg7B,4BACnFh7B,MAAK08B,sBAAsBxlB,oBAAoBgjB,EAAWqC,eAAgBv8B,KAAK86B,yBAE/E,KAAK96B,KAAK06B,aACT16B,KAAK08B,sBAAsBS,aAErBn9B,MAAK08B,qBACZ18B,MAAK08B,sBAAwB,IAE7BU,cAAap9B,KAAK28B,cAClB38B,MAAK28B,cAAgB,KAGdrC,GAAA/5B,UAAAw6B,gBAAR,SAAwBlf,GAEvB7b,KAAKkN,cAAc2O,GAMZye,GAAA/5B,UAAA46B,YAAR,SAAoBtf,GAEnB,GAAI7b,KAAKmX,iBAAiBgjB,EAAakD,UAAW,CACjDr9B,KAAKkN,cAAc2O,EACnB,OAAO,UACD,CACN,MAAO,QAODye,GAAA/5B,UAAA86B,aAAR,SAAqBxf,GAEpB,GAAI7b,KAAKmX,iBAAiBkjB,EAAYiD,aAAc,CACnDt9B,KAAKkN,cAAc2O,EACnB,OAAO,UACD,CACN,MAAO,QAIDye,GAAA/5B,UAAA06B,mBAAR,SAA2Bpf,GAE1B7b,KAAKkN,cAAc2O,GAMZye,GAAA/5B,UAAAs6B,mBAAR,SAA2Bhf,GAE1B7b,KAAKwiB,SAA2B3G,EAAM0hB,OAEtC,IAAIv9B,KAAKwiB,SACRxiB,KAAKg2B,SAASh2B,KAAKwiB,SAEpBxiB,MAAKkN,cAAc2O,EAEnB7b,MAAK47B,wBAEP,OAAAtB,IA3jBqB7b,EA6jBrBhf,GAAgBJ,QAAPi7B,I1B47LNkD,oCAAoCp8B,UAAUq8B,sCAAsCr8B,UAAUs8B,qCAAqCt8B,UAAUu8B,qCAAqCv8B,UAAUw8B,6CAA6Cx8B,UAAUy8B,wCAAwCz8B,UAAUof,uDAAuD,yDAAyDsd,uCAAuC,SAASv/B,EAAQkB,EAAOJ,GACvd,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2B3kNtB,IAAOoe,GAAsBlgB,EAAY,uDAEzC,IAAOw/B,GAAcx/B,EAAc,8CAInC,IAAMy/B,GAAK,SAAAt9B,GAASX,EAAdi+B,EAAKt9B,EAOV,SAPKs9B,GAOO3tB,GAAA,GAAAA,QAAA,GAA8B,CAA9BA,EAAA,KAEX3P,EAAApB,KAAAU,KAPOA,MAAAi+B,oBAA2C,GAAI37B,MAC/CtC,MAAAk+B,YAAmC,GAAI57B,MAExCtC,MAAAm+B,iBAAmB,CAMzBn+B,MAAKqQ,UAAYA,GAAa,GAAI0tB,EAElC/9B,MAAKmZ,SAAW,IAChBnZ,MAAKgN,QAAUhN,KAGTg+B,EAAAz9B,UAAA69B,mBAAP,SAA0BC,GAEzB,GAAIr/B,GAAW,CACf,IAAIiM,GAAajL,KAAKk+B,YAAY3+B,MAElC8+B,GAAU7lB,MAAQxY,IAElBA,MAAKm+B,kBAEL,OAAOn/B,EAAIiM,EACVjL,KAAKk+B,YAAYl/B,KAAKs/B,SAASD,GAM1BL,GAAAz9B,UAAAsY,oBAAP,SAA2BxI,GAE1BrQ,KAAKi+B,oBAAoBtkB,KAAKtJ,EAG9B,IAAIrQ,KAAKk+B,YAAYpkB,QAAQzJ,KAAe,EAC3CrQ,KAAKk+B,YAAYvkB,KAAKtJ,GAMjB2tB,GAAAz9B,UAAAmY,sBAAP,SAA6BrI,GAE5BrQ,KAAKi+B,oBAAoBlkB,OAAO/Z,KAAKi+B,oBAAoBnkB,QAAQzJ,GAAY,EAG7E,IAAIrQ,KAAKi+B,oBAAoBnkB,QAAQzJ,KAAe,EACnDrQ,KAAKk+B,YAAYnkB,OAAO/Z,KAAKk+B,YAAYpkB,QAAQzJ,GAAY,GAEhE,OAAA2tB,IArDoBvf,EAuDpBhf,GAAeJ,QAAN2+B,I3B4jNNxd,uDAAuD,uDAAuD+d,8CAA8C,gDAAgDC,sCAAsC,SAASjgC,EAAQkB,EAAOJ,G4BtnN7Q,GAAOo/B,GAAQlgC,EAAgB,iCAI/B,IAAOiuB,GAAUjuB,EAAe,qCAChC,IAAOy/B,GAAKz/B,EAAgB,sCAG5B,IAAOmgC,GAAangC,EAAc,wCAElC,IAAOogC,GAAMpgC,EAAgB,qCAC7B,IAAOqgC,GAAWrgC,EAAe,wCACjC,IAAOwI,GAAkBxI,EAAa,+CACtC,IAAOsgC,GAAatgC,EAAc,0CAClC,IAAOugC,GAAYvgC,EAAe,2CAElC,IAAMwgC,GAAI,WA2DT,QA3DKA,GA2DO7jB,EAAoB1C,EAAoBpC,GA3DrD,GAAAqkB,GAAAz6B,IA2DiC,IAAAwY,QAAA,GAAkB,CAAlBA,EAAA,KAAoB,GAAApC,QAAA,GAAoB,CAApBA,EAAA,KAlC5CpW,KAAA6N,OAAgB,CAChB7N,MAAAiM,QAAiB,CAEjBjM,MAAAg/B,MAAe,CACfh/B,MAAAi/B,WAAoB,CACpBj/B,MAAAk/B,iBAA0B,CAC1Bl/B,MAAAm/B,iBAA0B,CAE1Bn/B,MAAAo/B,eAAyB,IACzBp/B,MAAAq/B,cAAwB,IAOxBr/B,MAAAs/B,aAAuB,GAAIZ,EAM5B1+B,MAAAu/B,cAAkC,GAAIj9B,MAc5CtC,MAAKw/B,4BAA8B,SAAC3jB,GAA6B,MAAA4e,GAAKgF,oBAAoB5jB,GAC1F7b,MAAK0/B,6BAA+B,SAAC7jB,GAAsB,MAAA4e,GAAKkF,qBAAqB9jB,GACrF7b,MAAK4/B,2BAA6B,SAAC/jB,GAAwB,MAAA4e,GAAKoF,mBAAmBhkB,GACnF7b,MAAK8/B,0BAA4B,SAACjkB,GAAwB,MAAA4e,GAAKsF,kBAAkBlkB,GAEjF7b,MAAKwY,MAAQA,GAAS,GAAIwlB,EAC1Bh+B,MAAKoW,OAASA,GAAU,GAAIuoB,EAC5B3+B,MAAKkb,SAAWA,CAGhB8kB,UAASC,KAAKC,MAAMC,OAAS,KAE7BngC,MAAKogC,aAAeJ,SAASK,cAAc,MAC3CrgC,MAAKogC,aAAaF,MAAMjuB,SAAW,UAEnC+tB,UAASC,KAAKK,YAAYtgC,KAAKogC,aAE/BpgC,MAAKugC,cAAgBzB,EAAapD,aAClC17B,MAAKugC,cAAcC,aAAaxgC,MAQjCW,OAAAC,eAAWm+B,EAAAx+B,UAAA,U5BokNJM,I4BpkNP,WAEC,MAAOb,MAAKygC,U5BqkNN1/B,WAAY,KACZC,aAAc,M4BnkNrBL,QAAAC,eAAWm+B,EAAAx+B,UAAA,U5BskNJM,I4BtkNP,WAEC,MAAOb,MAAK0gC,U5BukNN3/B,WAAY,KACZC,aAAc,M4BrkNrBL,QAAAC,eAAIm+B,EAAAx+B,UAAA,e5BwkNGM,I4BxkNP,WAEC,MAAOb,MAAKu/B,e5BykNNx+B,WAAY,KACZC,aAAc,M4BvkNd+9B,GAAAx+B,UAAAogC,eAAP,SAAsBlU,GAErB,MAAOA,GAAcjb,sBAAsBpD,gBAAgBpO,KAAK4gC,UAAU5gC,KAAKygC,SAAUzgC,KAAK0gC,SAAU,MAAOj1B,EAGzGszB,GAAAx+B,UAAAsgC,eAAP,SAAsBpU,GAErB,MAAOA,GAAcjb,sBAAsBpD,gBAAgBpO,KAAK4gC,UAAU5gC,KAAKygC,SAAUzgC,KAAK0gC,SAAU,MAAO/0B,EAGzGozB,GAAAx+B,UAAAugC,oBAAP,SAA2BrU,GAE1B,GAAIsU,EACJ,IAAIC,GAAqC,GAAI1+B,MAE7C,IAAI2I,GAAajL,KAAKu/B,cAAchgC,MACpC,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,EAAKjM,IAAK,CACpC+hC,EAAgBtU,EAAcjb,sBAAsBpD,gBAAgBpO,KAAK4gC,UAAU5gC,KAAKu/B,cAAcvgC,GAAGyM,EAAGzL,KAAKu/B,cAAcvgC,GAAG2M,EAAG,KACrIq1B,GAAiBrnB,KAAK,GAAI6S,GAAWuU,EAAct1B,EAAGs1B,EAAcp1B,EAAG3L,KAAKu/B,cAAcvgC,GAAG6E,KAG9F,MAAOm9B,GAMRrgC,QAAAC,eAAWm+B,EAAAx+B,UAAA,e5BkkNJM,I4BlkNP,WAEC,MAAOb,MAAKogC,c5BmkNNr/B,WAAY,KACZC,aAAc,M4B/jNrBL,QAAAC,eAAWm+B,EAAAx+B,UAAA,Y5BqkNJM,I4BrkNP,WAEC,MAAOb,MAAKihC,Y5BskNNp+B,I4BnkNP,SAAoBC,GAEnB,GAAI9C,KAAKihC,YAAcn+B,EACtB,MAED,IAAI9C,KAAKihC,WAAY,CACpBjhC,KAAKihC,WAAWhgC,SAChBjB,MAAKihC,WAAW/pB,oBAAoB2nB,EAAcqC,iBAAkBlhC,KAAK4/B,2BACzE5/B,MAAKihC,WAAW/pB,oBAAoB2nB,EAAcsC,gBAAiBnhC,KAAK8/B,2BAGzE9/B,KAAKihC,WAAan+B,CAElB9C,MAAKihC,WAAW7xB,iBAAiByvB,EAAcqC,iBAAkBlhC,KAAK4/B,2BACtE5/B,MAAKihC,WAAW7xB,iBAAiByvB,EAAcsC,gBAAiBnhC,KAAK8/B,0BAGrE9/B,MAAKohC,kBAAoBphC,KAAKihC,WAAWI,yBAEzC,IAAIrhC,KAAKshC,SACRthC,KAAKohC,kBAAkBhrB,OAASpW,KAAKshC,QAGtCthC,MAAKihC,WAAWM,eAAkBvhC,KAAKk/B,kBAAoB,GAAM,KAAM,GACvEl/B,MAAKihC,WAAWO,eAAkBxhC,KAAKk/B,kBAAoB,EAAK,KAAM,GACtEl/B,MAAKihC,WAAWQ,eAAiBzhC,KAAKk/B,iBAAmB,KAAM,GAC/Dl/B,MAAKihC,WAAWS,kBAAoB1hC,KAAKm/B,gBACzCn/B,MAAKihC,WAAWjyB,MAAQhP,KAAK6N,MAC7B7N,MAAKihC,WAAWl1B,OAAS/L,KAAKiM,OAC9BjM,MAAKihC,WAAWU,aAAe3hC,KAAK4hC,e5B8jN9B7gC,WAAY,KACZC,aAAc,M4BzjNrBL,QAAAC,eAAWm+B,EAAAx+B,UAAA,gB5B+jNJM,I4B/jNP,WAEC,MAAOb,MAAK4hC,e5BgkNN/+B,I4B7jNP,SAAwBC,GAEvB,GAAI9C,KAAK4hC,eAAiB9+B,EACzB,MAED9C,MAAK4hC,cAAgB9+B,CAErB,IAAI9C,KAAKihC,WACRjhC,KAAKihC,WAAWU,aAAe3hC,KAAK4hC,e5B4jN/B7gC,WAAY,KACZC,aAAc,M4BvjNrBL,QAAAC,eAAWm+B,EAAAx+B,UAAA,mB5B6jNJM,I4B7jNP,WAEC,MAAOb,MAAKk/B,kB5B8jNNr8B,I4B3jNP,SAA2BC,GAE1B,GAAI9C,KAAKk/B,kBAAoBp8B,EAC5B,MAED9C,MAAKk/B,iBAAmBp8B,CAExB9C,MAAKihC,WAAWM,eAAkBz+B,GAAS,GAAM,KAAM,GACvD9C,MAAKihC,WAAWO,eAAkB1+B,GAAS,EAAK,KAAM,GACtD9C,MAAKihC,WAAWQ,eAAiB3+B,EAAQ,KAAM,K5B0jNzC/B,WAAY,KACZC,aAAc,M4BpjNrBL,QAAAC,eAAWm+B,EAAAx+B,UAAA,mB5B2jNJM,I4B3jNP,WAEC,MAAOb,MAAKm/B,kB5BgkNNt8B,I4BzjNP,SAA2BC,GAE1B,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAI9C,KAAKm/B,kBAAoBr8B,EAC5B,MAED9C,MAAKihC,WAAWS,kBAAoB1hC,KAAKm/B,iBAAmBr8B,G5BwjNtD/B,WAAY,KACZC,aAAc,M4BljNrBL,QAAAC,eAAWm+B,EAAAx+B,UAAA,U5ByjNJM,I4BzjNP,WAEC,MAAOb,MAAKshC,U5B6jNNz+B,I4BvjNP,SAAkBC,GAEjB,GAAI9C,KAAKshC,UAAYx+B,EACpB,MAED,IAAI9C,KAAKshC,SACRthC,KAAKshC,SAASpqB,oBAAoB0nB,EAAYiD,mBAAoB7hC,KAAK0/B,6BAExE1/B,MAAKshC,SAAWx+B,CAEhB,IAAI9C,KAAKohC,kBACRphC,KAAKohC,kBAAkBhrB,OAASpW,KAAKshC,QAEtC,IAAIthC,KAAKgN,QACRhN,KAAKgN,QAAQqD,UAAUyI,iBAAiB9Y,KAAKshC,SAE9CthC,MAAKshC,SAASlyB,iBAAiBwvB,EAAYiD,mBAAoB7hC,KAAK0/B,6BACpE1/B,MAAKq/B,cAAgB,IACrBr/B,MAAKo/B,eAAiB,M5BmjNhBr+B,WAAY,KACZC,aAAc,M4B7iNrBL,QAAAC,eAAWm+B,EAAAx+B,UAAA,S5BojNJM,I4BpjNP,WAEC,MAAOb,MAAKgN,S5BwjNNnK,I4BljNP,SAAiBC,GAEhB,GAAI9C,KAAKgN,SAAWlK,EACnB,MAED,IAAI9C,KAAKgN,QACRhN,KAAKgN,QAAQkK,oBAAoBnQ,EAAmBoG,kBAAmBnN,KAAKw/B,4BAE7Ex/B,MAAKgN,QAAUlK,CAEf9C,MAAKgN,QAAQoC,iBAAiBrI,EAAmBoG,kBAAmBnN,KAAKw/B,4BAEzE,IAAIx/B,KAAKshC,SACRthC,KAAKgN,QAAQqD,UAAUyI,iBAAiB9Y,KAAKshC,W5B+iNxCvgC,WAAY,KACZC,aAAc,M4BziNrBL,QAAAC,eAAWm+B,EAAAx+B,UAAA,a5BgjNJM,I4BhjNP,WAEC,MAAOb,MAAKi/B,Y5BijNNl+B,WAAY,KACZC,aAAc,M4B5iNrBL,QAAAC,eAAWm+B,EAAAx+B,UAAA,S5BkjNJM,I4BljNP,WAEC,MAAOb,MAAK6N,Q5BmjNNhL,I4BhjNP,SAAiBC,GAEhB,GAAI9C,KAAK6N,QAAU/K,EAClB,MAED9C,MAAK6N,OAAS/K,CACd9C,MAAK8hC,aAAe9hC,KAAK6N,OAAO7N,KAAKiM,OACrCjM,MAAKshC,SAASS,WAAWC,cAAgBhiC,KAAK8hC,YAC9C9hC,MAAKihC,WAAWjyB,MAAQlM,CACxB9C,MAAKogC,aAAaF,MAAMlxB,MAAQlM,EAAQ,M5BgjNlC/B,WAAY,KACZC,aAAc,M4B3iNrBL,QAAAC,eAAWm+B,EAAAx+B,UAAA,U5BijNJM,I4BjjNP,WAEC,MAAOb,MAAKiM,S5BkjNNpJ,I4B/iNP,SAAkBC,GAEjB,GAAI9C,KAAKiM,SAAWnJ,EACnB,MAED9C,MAAKiM,QAAUnJ,CACf9C,MAAK8hC,aAAe9hC,KAAK6N,OAAO7N,KAAKiM,OACrCjM,MAAKshC,SAASS,WAAWC,cAAgBhiC,KAAK8hC,YAC9C9hC,MAAKihC,WAAWl1B,OAASjJ,CACzB9C,MAAKogC,aAAaF,MAAMn0B,OAASjJ,EAAQ,M5B+iNnC/B,WAAY,KACZC,aAAc,M4B1iNrBL,QAAAC,eAAWm+B,EAAAx+B,UAAA,e5BgjNJM,I4BhjNP,WAEC,MAAOb,MAAKs/B,c5BijNNz8B,I4B9iNP,SAAuBC,GAEtB,GAAI9C,KAAKs/B,cAAgBx8B,EACxB,MAED,IAAIA,GAAS,KACZ9C,KAAKs/B,aAAe,GAAIZ,OAExB1+B,MAAKs/B,aAAex8B,G5B8iNf/B,WAAY,KACZC,aAAc,M4BziNrBL,QAAAC,eAAWm+B,EAAAx+B,UAAA,K5B+iNJM,I4B/iNP,WAEC,MAAOb,MAAKihC,WAAWx1B,G5BgjNjB5I,I4B7iNP,SAAaC,GAEZ,GAAI9C,KAAKihC,WAAWx1B,GAAK3I,EACxB,MAED9C,MAAKihC,WAAWx1B,GAAK3I,CACrB9C,MAAKogC,aAAaF,MAAMvtB,KAAO7P,EAAQ,M5B6iNjC/B,WAAY,KACZC,aAAc,M4BxiNrBL,QAAAC,eAAWm+B,EAAAx+B,UAAA,K5B8iNJM,I4B9iNP,WAEC,MAAOb,MAAKihC,WAAWt1B,G5B+iNjB9I,I4B5iNP,SAAaC,GAEZ,GAAI9C,KAAKihC,WAAWt1B,GAAK7I,EACxB,MAED9C,MAAKihC,WAAWt1B,GAAK7I,CACrB9C,MAAKogC,aAAaF,MAAMttB,IAAM9P,EAAQ,M5B4iNhC/B,WAAY,KACZC,aAAc,M4BviNrBL,QAAAC,eAAWm+B,EAAAx+B,UAAA,W5B6iNJM,I4B7iNP,WAEC,MAAQb,MAAKogC,aAAaF,MAAM+B,YAAc,W5B8iNxCp/B,I4B3iNP,SAAmBC,GAElB9C,KAAKogC,aAAaF,MAAM+B,WAAan/B,EAAO,UAAY,U5B6iNlD/B,WAAY,KACZC,aAAc,M4BtiNrBL,QAAAC,eAAWm+B,EAAAx+B,UAAA,sB5B6iNJM,I4B7iNP,WAEC,MAAO,I5B+iNDE,WAAY,KACZC,aAAc,M4BziNd+9B,GAAAx+B,UAAA2hC,OAAP,WAECliC,KAAKmiC,aAGLniC,MAAKshC,SAASS,WAAWC,cAAgBhiC,KAAK8hC,YAE9C,IAAI9hC,KAAKq/B,cAAe,CACvBr/B,KAAKq/B,cAAgB,KACrBr/B,MAAKshC,SAASS,WAAWK,oBAAoBpiC,KAAKihC,WAAWoB,YAAY52B,EAAGzL,KAAKihC,WAAWoB,YAAY12B,EAAG3L,KAAKihC,WAAWoB,YAAYrzB,MAAOhP,KAAKihC,WAAWoB,YAAYt2B,QAG3K,GAAI/L,KAAKo/B,eAAgB,CACxBp/B,KAAKo/B,eAAiB,KACtBp/B,MAAKshC,SAASS,WAAWO,iBAAiBtiC,KAAKihC,WAAWsB,SAAS92B,EAAGzL,KAAKihC,WAAWsB,SAAS52B,EAAG3L,KAAKihC,WAAWsB,SAASvzB,MAAOhP,KAAKihC,WAAWsB,SAASx2B,QAI5J,IAAK/L,KAAK4hC,cAAe,CACxB,GAAI5hC,KAAKwiC,gBAAkBxiC,KAAKogC,cAAgBpgC,KAAKugC,cAAckC,cAAgBziC,KAAKugC,cAAcmC,cACrG1iC,KAAKugC,cAAcoC,kBAAoB3iC,KAAK4iC,YAAYC,iBAAiB7iC,KAAKygC,SAAUzgC,KAAK0gC,SAAU1gC,KAExGA,MAAKugC,cAAcuC,gBAAgB9iC,KAAKwiC,gBAMzCxiC,KAAKohC,kBAAkBlrB,OAGvBlW,MAAKgN,QAAQoxB,mBAAmBp+B,KAAKohC,kBAGrCphC,MAAKihC,WAAWiB,OAAOliC,KAAKohC,mBAMtBrC,GAAAx+B,UAAA4hC,YAAP,WAEC,GAAIY,GAActE,GAElB,IAAIz+B,KAAKg/B,OAAS,EACjBh/B,KAAKg/B,MAAQ+D,CAEd/iC,MAAKi/B,WAAa8D,EAAO/iC,KAAKg/B,KAC9Bh/B,MAAKg/B,MAAQ+D,EAMPhE,GAAAx+B,UAAAU,QAAP,WAECjB,KAAKihC,WAAWhgC,SAGhBjB,MAAKugC,cAAcyC,eAAehjC,KAKlCA,MAAKugC,cAAgB,IAGrBvgC,MAAKihC,WAAa,IAClBjhC,MAAKohC,kBAAoB,KAM1BzgC,QAAAC,eAAWm+B,EAAAx+B,UAAA,oB5B0hNJM,I4B1hNP,WAEC,MAAOb,MAAKohC,mB5B2hNNrgC,WAAY,KACZC,aAAc,M4BphNb+9B,GAAAx+B,UAAAk/B,oBAAR,SAA4B5jB,GAE3B,GAAI7b,KAAKshC,SACRthC,KAAKgN,QAAQqD,UAAUyI,iBAAiB9Y,KAAKshC,UAMvCvC,GAAAx+B,UAAAo/B,qBAAR,SAA6B9jB,GAE5B7b,KAAKq/B,cAAgB,IACrBr/B,MAAKo/B,eAAiB,KAMfL,GAAAx+B,UAAAs/B,mBAAR,SAA2BhkB,GAE1B7b,KAAKo/B,eAAiB,KAMfL,GAAAx+B,UAAAw/B,kBAAR,SAA0BlkB,GAEzB7b,KAAKq/B,cAAgB,KAGfN,GAAAx+B,UAAA0iC,QAAP,SAAeC,GAEd,GAAIC,GAAanjC,KAAKshC,SAAS2B,QAAQC,EACvCC,GAAE13B,EAAI03B,EAAE13B,EAAEzL,KAAKihC,WAAWsB,SAASvzB,MAAM,EAAIhP,KAAK6N,OAAO7N,KAAKshC,SAASS,WAAWqB,OAClFD,GAAEx3B,EAAIw3B,EAAEx3B,EAAE3L,KAAKihC,WAAWsB,SAASx2B,OAAO,EAAI/L,KAAKiM,QAAQjM,KAAKshC,SAASS,WAAWsB,OAEpF,OAAOF,GAGDpE,GAAAx+B,UAAAqgC,UAAP,SAAiB0C,EAAWC,EAAWC,GAEtC,MAAOxjC,MAAKshC,SAASV,UAAU,GAAG0C,EAAKtjC,KAAK6N,OAAO7N,KAAKshC,SAASS,WAAWqB,SAASpjC,KAAKihC,WAAWsB,SAASvzB,MAAO,GAAGu0B,EAAKvjC,KAAKiM,QAAQjM,KAAKshC,SAASS,WAAWsB,SAASrjC,KAAKihC,WAAWsB,SAASx2B,OAAQy3B,GAIvMzE,GAAAx+B,UAAAkjC,OAAP,SAAcH,EAAWC,EAAWC,GAEnC,MAAOxjC,MAAKshC,SAASmC,QAAQH,EAAG,EAAItjC,KAAK6N,QAAQ7N,KAAK6N,QAAS01B,EAAG,EAAIvjC,KAAKiM,SAASjM,KAAKiM,QAASu3B,GAiC5FzE,GAAAx+B,UAAAmjC,eAAP,WAEC,IAAK1jC,KAAK4hC,cAAe,CACxB,GAAI5hC,KAAKogC,cAAgBpgC,KAAKugC,cAAckC,YAC3CziC,KAAKugC,cAAcoC,kBAAoB3iC,KAAK4iC,YAAYC,iBAAiB7iC,KAAKygC,SAAUzgC,KAAK0gC,SAAU1gC,UAClG,CACN,GAAI2jC,GAAqC3jC,KAAK4iC,YAAYC,iBAAiB7iC,KAAKygC,SAAUzgC,KAAK0gC,SAAU1gC,KAEzG,IAAIA,KAAK4jC,aAAe5jC,KAAKugC,cAAcoC,mBAAqB,MAAQgB,EAAgBE,iBAAmB7jC,KAAKugC,cAAcoC,kBAAkBkB,iBAC/I7jC,KAAKugC,cAAcoC,kBAAoBgB,GAG3C,OAAA5E,KAEAt/B,GAAcJ,QAAL0/B,I5B2/MN+E,iCAAiC1iC,UAAUmrB,qCAAqC,qCAAqCuR,sCAAsC,sCAAsCiG,qCAAqC,qCAAqCC,wCAAwC,wCAAwC9mB,+CAA+C,+CAA+C+mB,0CAA0C,0CAA0CC,2CAA2C,2CAA2CC,wCAAwC,0CAA0CC,iDAAiD,SAAS7lC,EAAQkB,EAAOJ,G6B9mOjwB,GAAOmf,GAAmBjgB,EAAY,6CAItC,IAAM8lC,GAAc,WAMnB,QANKA,GAMOC,GAAA,GAAAA,QAAA,GAAiC,CAAjCA,EAAA,KAHLtkC,KAAAukC,aAAuB,IAK7BvkC,MAAKskC,aAAeA,EAGdD,EAAA9jC,UAAAikC,cAAP,WAEC,GAAIxkC,KAAKykC,eACRzkC,KAAKykC,eAAepsB,sBAGtB1X,QAAAC,eAAWyjC,EAAA9jC,UAAA,gB7BsmOJM,I6BtmOP,WAEC,MAAOb,MAAKykC,gB7BumON5hC,I6BpmOP,SAAwByI,GAEvB,GAAItL,KAAKykC,gBAAkBn5B,EAC1B,MAED,IAAItL,KAAKykC,gBAAkBzkC,KAAKukC,aAC/BvkC,KAAKykC,eAAexrB,aAAe,IAEpCjZ,MAAKykC,eAAiBn5B,CAEtB,IAAItL,KAAKykC,gBAAkBzkC,KAAKukC,aAC/BvkC,KAAKykC,eAAexrB,aAAejZ,IAEpCA,MAAKwkC,iB7BimOCzjC,WAAY,KACZC,aAAc,M6B/lOrBL,QAAAC,eAAWyjC,EAAA9jC,UAAA,c7BkmOJM,I6BlmOP,WAEC,MAAOb,MAAKukC,c7BmmON1hC,I6BhmOP,SAAsByI,GAErB,GAAItL,KAAKukC,cAAgBj5B,EACxB,MAEDtL,MAAKukC,aAAej5B,CAEpB,IAAItL,KAAKykC,eAAgB,CACxB,GAAIzkC,KAAKukC,aACRvkC,KAAKykC,eAAexrB,aAAejZ,SAEnCA,MAAKykC,eAAexrB,aAAe,O7BgmO/BlY,WAAY,KACZC,aAAc,M6B7lOdqjC,GAAA9jC,UAAA2Z,OAAP,SAAcwqB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,KAAM,IAAIlmB,GAGJ6lB,GAAA9jC,UAAA2Y,iBAAP,WAEC,GAAIlZ,KAAK2kC,mBAAqB3kC,KAAKukC,aAAc,CAChDvkC,KAAK2kC,kBAAoB,KACzB3kC,MAAKwkC,iBAGR,OAAAH,KAEA5kC,GAAwBJ,QAAfglC,I7B+lON9jB,6CAA6Cnf,YAAYwjC,wDAAwD,SAASrmC,EAAQkB,EAAOJ,GAC5I,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8BhrOtB,IAAOgG,GAAU9H,EAAc,kCAE/B,IAAO8lC,GAAc9lC,EAAa,gD9BurOlC,I8B/qOMsmC,GAAqB,SAAAnkC,GAASX,EAA9B8kC,EAAqBnkC,EA6I1B,SA7IKmkC,GA6IOP,EAAmCQ,EAAqBC,EAAuBC,EAA2BC,EAA0BC,EAAkBC,GAAtJ,GAAAb,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAQ,QAAA,GAAmB,CAAnBA,EAAA,EAAqB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAyB,CAAzBA,GAAuB,GAAI,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,GAA0B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAC,QAAA,GAA4B,CAA5BA,EAAA,MAEjKzkC,EAAApB,KAAAU,KAAMskC,EA7IAtkC,MAAAolC,kBAA2B,CAC1BplC,MAAAqlC,mBAA4B,EAE5BrlC,MAAAslC,UAAmB,CACnBtlC,MAAAulC,WAAoB,EACpBvlC,MAAAwlC,eAAwB,EACxBxlC,MAAAylC,cAAuB,EACvBzlC,MAAA0lC,OAAgB,CAChB1lC,MAAA2lC,eAAwB,CACxB3lC,MAAA4lC,iBAA0B,CAC1B5lC,MAAA6lC,cAAwB,KAEzB7lC,MAAA8lC,IAAc,KAmIpB9lC,MAAK8kC,SAAWA,CAChB9kC,MAAK+kC,UAAYA,CACjB/kC,MAAKglC,aAAeA,CACpBhlC,MAAKilC,aAAeA,CACpBjlC,MAAKklC,MAAQA,CACbllC,MAAKmlC,aAAeA,CAGpBnlC,MAAKolC,kBAAoBplC,KAAKslC,SAC9BtlC,MAAKqlC,mBAAqBrlC,KAAKulC,WAlIhC5kC,OAAAC,eAAWikC,EAAAtkC,UAAA,S9BmsOJM,I8BnsOP,WAEC,MAAOb,MAAK0lC,Q9BosON7iC,I8BjsOP,SAAiByI,GAEhBA,EAAOA,EAAM,EAAI,EAAIA,CAErB,IAAItL,KAAK0lC,QAAUp6B,EAClB,MAEDtL,MAAK0lC,OAASp6B,CAEdtL,MAAKwkC,iB9B+rOCzjC,WAAY,KACZC,aAAc,M8B1rOrBL,QAAAC,eAAWikC,EAAAtkC,UAAA,Y9BgsOJM,I8BhsOP,WAEC,MAAOb,MAAKslC,W9BisONziC,I8B9rOP,SAAoByI,GAEnB,GAAItL,KAAKslC,WAAah6B,EACrB,MAEDtL,MAAKslC,UAAYh6B,CAEjBtL,MAAKwkC,iB9B6rOCzjC,WAAY,KACZC,aAAc,M8BxrOrBL,QAAAC,eAAWikC,EAAAtkC,UAAA,a9B8rOJM,I8B9rOP,WAEC,MAAOb,MAAKulC,Y9B+rON1iC,I8B5rOP,SAAqByI,GAEpBA,EAAMgM,KAAKqhB,IAAI34B,KAAKwlC,cAAeluB,KAAKohB,IAAI14B,KAAKylC,cAAen6B,GAEhE,IAAItL,KAAKulC,YAAcj6B,EACtB,MAEDtL,MAAKulC,WAAaj6B,CAElBtL,MAAKwkC,iB9B0rOCzjC,WAAY,KACZC,aAAc,M8BnrOrBL,QAAAC,eAAWikC,EAAAtkC,UAAA,gB9B2rOJM,I8B3rOP,WAEC,MAAOb,MAAKwlC,e9B4rON3iC,I8BzrOP,SAAwByI,GAEvB,GAAItL,KAAKwlC,eAAiBl6B,EACzB,MAEDtL,MAAKwlC,cAAgBl6B,CAErBtL,MAAK+kC,UAAYztB,KAAKqhB,IAAI34B,KAAKwlC,cAAeluB,KAAKohB,IAAI14B,KAAKylC,cAAezlC,KAAKulC,c9BwrO1ExkC,WAAY,KACZC,aAAc,M8BjrOrBL,QAAAC,eAAWikC,EAAAtkC,UAAA,gB9ByrOJM,I8BzrOP,WAEC,MAAOb,MAAKylC,e9B0rON5iC,I8BvrOP,SAAwByI,GAEvB,GAAItL,KAAKylC,eAAiBn6B,EACzB,MAEDtL,MAAKylC,cAAgBn6B,CAErBtL,MAAK+kC,UAAYztB,KAAKqhB,IAAI34B,KAAKwlC,cAAeluB,KAAKohB,IAAI14B,KAAKylC,cAAezlC,KAAKulC,c9BsrO1ExkC,WAAY,KACZC,aAAc,M8BhrOrBL,QAAAC,eAAWikC,EAAAtkC,UAAA,gB9BsrOJM,I8BtrOP,WAEC,MAAOb,MAAK6lC,e9BurONhjC,I8BprOP,SAAwByI,GAEvB,GAAItL,KAAK6lC,eAAiBv6B,EACzB,MAEDtL,MAAK6lC,cAAgBv6B,CAErBtL,MAAKwkC,iB9BmrOCzjC,WAAY,KACZC,aAAc,M8BnpOd6jC,GAAAtkC,UAAA2Z,OAAP,SAAcwqB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,GAAI1kC,KAAKulC,YAAcvlC,KAAKqlC,oBAAsBrlC,KAAKslC,WAAatlC,KAAKolC,kBAAmB,CAE3FplC,KAAK2kC,kBAAoB,IAEzB,IAAI3kC,KAAK6lC,cAAe,CACvB,GAAI7lC,KAAKslC,UAAY,EAAG,CACvBtlC,KAAKolC,mBAAqBplC,KAAKslC,UAAU,IAAM,IAAMtlC,KAAKslC,SAC1DtlC,MAAKslC,UAAYtlC,KAAKslC,UAAU,IAAM,QAChC,CACNtlC,KAAKolC,mBAAqBplC,KAAKslC,UAAU,IAAMtlC,KAAKslC,SACpDtlC,MAAKslC,UAAYtlC,KAAKslC,UAAU,IAGjC,MAAOtlC,KAAKslC,UAAYtlC,KAAKolC,mBAAqB,IACjDplC,KAAKolC,mBAAqB,GAE3B,OAAOplC,KAAKslC,UAAYtlC,KAAKolC,kBAAoB,IAChDplC,KAAKolC,mBAAqB,IAG5B,GAAIV,EAAa,CAChB1kC,KAAKqlC,qBAAuBrlC,KAAKulC,WAAavlC,KAAKqlC,qBAAqBrlC,KAAKklC,MAAQ,EACrFllC,MAAKolC,oBAAsBplC,KAAKslC,UAAYtlC,KAAKolC,oBAAoBplC,KAAKklC,MAAQ,OAC5E,CACNllC,KAAKqlC,mBAAqBrlC,KAAKulC,UAC/BvlC,MAAKolC,kBAAoBplC,KAAKslC,UAI/B,GAAKhuB,KAAKuc,IAAI7zB,KAAK+kC,UAAY/kC,KAAKqlC,oBAAsB,KAAU/tB,KAAKuc,IAAI7zB,KAAKslC,UAAYtlC,KAAKolC,mBAAqB,IAAO,CAC9HplC,KAAKqlC,mBAAqBrlC,KAAKulC,UAC/BvlC,MAAKolC,kBAAoBplC,KAAKslC,WAIhCtlC,KAAKskC,aAAa54B,UAAY1L,KAAKqlC,kBACnCrlC,MAAKskC,aAAa14B,UAAY5L,KAAKolC,iBAEnC,IAAIplC,KAAK2lC,eAAgB,CACxB,GAAI3lC,KAAK8lC,IAAK,CACb9lC,KAAKskC,aAAaz/B,UAAUyoB,YAAYttB,KAAK2lC,oBACvC,CACN3lC,KAAKskC,aAAa74B,GAAKzL,KAAK2lC,eAAeruB,KAAKyuB,IAAI/lC,KAAKslC,UAAUj/B,EAAWsH,mBAC9E3N,MAAKskC,aAAaz4B,GAAK7L,KAAK2lC,eAAeruB,KAAK0uB,IAAIhmC,KAAKslC,UAAUj/B,EAAWsH,oBAE/E3N,KAAK2lC,eAAiB,EAGvB,GAAI3lC,KAAK4lC,iBAAkB,CAC1B5lC,KAAKskC,aAAaz/B,UAAU4oB,UAAUztB,KAAK4lC,iBAC3C5lC,MAAK4lC,iBAAmB,GAKnBf,GAAAtkC,UAAA0lC,cAAP,SAAqB36B,GAEpB,GAAIA,GAAO,EACV,MAEDtL,MAAK2lC,gBAAkBr6B,CAEvBtL,MAAKwkC,gBAGCK,GAAAtkC,UAAA2lC,gBAAP,SAAuB56B,GAEtB,GAAIA,GAAO,EACV,MAEDtL,MAAK4lC,kBAAoBt6B,CAEzBtL,MAAKwkC,gBAGP,OAAAK,IArPoCR,EAuPpC5kC,GAA+BJ,QAAtBwlC,I9BkpONroB,kCAAkCpb,UAAUgjC,gDAAgD,kDAAkD+B,mDAAmD,SAAS5nC,EAAQkB,EAAOJ,GAC5N,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+Bv5OtB,IAAO+lC,GAAe7nC,EAAa,iD/Bg6OnC,I+Bx5OM8nC,GAAgB,SAAA3lC,GAASX,EAAzBsmC,EAAgB3lC,EAErB,SAFK2lC,GAEO/B,EAAmCgC,EAAmCvB,EAAuB1tB,GAA7F,GAAAitB,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAgC,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAvB,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAA1tB,QAAA,GAAqB,CAArBA,EAAA,IAExG3W,EAAApB,KAAAU,KAAMskC,EAAcgC,EAAc,EAAGvB,EAAW1tB,GAG1CgvB,EAAA9lC,UAAA2Z,OAAP,SAAcwqB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,IAAK1kC,KAAKsmC,aACT,MAEDtmC,MAAK8kC,SAAW9kC,KAAKumC,eAAe36B,UAAY,GAChDlL,GAAAH,UAAM2Z,OAAM5a,KAAAU,MAEd,OAAAqmC,IAf+BD,EAiB/B3mC,GAA0BJ,QAAjBgnC,I/B25ONG,iDAAiD,mDAAmDA,kDAAkD,SAASjoC,EAAQkB,EAAOJ,GACjL,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgC17OtB,IAAOgG,GAAU9H,EAAc,kCAC/B,IAAOkI,GAAQlI,EAAe,gCAG9B,IAAOkoC,GAAgBloC,EAAa,kDhCg8OpC,IgCz7OM6nC,GAAe,SAAA1lC,GAASX,EAAxBqmC,EAAe1lC,EA6NpB,SA7NK0lC,GA6NO9B,EAAmCgC,EAAmCxB,EAAqBC,EAAuB1tB,EAAwB2tB,EAA2BC,EAA0ByB,EAA2BC,EAA2BzB,EAAkB0B,EAAoBzB,GAA3R,GAAAb,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAgC,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAxB,QAAA,GAAmB,CAAnBA,EAAA,EAAqB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAA1tB,QAAA,GAAsB,CAAtBA,EAAA,IAAwB,GAAA2tB,QAAA,GAAyB,CAAzBA,GAAuB,GAAI,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,GAA0B,GAAAyB,QAAA,GAAyB,CAAzBA,EAAA,KAA2B,GAAAC,QAAA,GAAyB,CAAzBA,EAAA,KAA2B,GAAAzB,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAA0B,QAAA,GAAkB,CAAlBA,EAAA,EAAoB,GAAAzB,QAAA,GAA4B,CAA5BA,EAAA,MAEtSzkC,EAAApB,KAAAU,KAAMskC,EAAcgC,EA7NdtmC,MAAAolC,kBAA2B,CAC3BplC,MAAAqlC,mBAA4B,EAE3BrlC,MAAAslC,UAAmB,CACnBtlC,MAAAulC,WAAoB,EACpBvlC,MAAA6mC,UAAmB,GACnB7mC,MAAA8mC,cAAuBC,QACvB/mC,MAAAgnC,aAAsBD,QACtB/mC,MAAAwlC,eAAwB,EACxBxlC,MAAAylC,cAAuB,EACvBzlC,MAAA0lC,OAAgB,CAChB1lC,MAAAinC,SAAkB,CAClBjnC,MAAA6lC,cAAwB,KACxB7lC,MAAAknC,QAAmB,GAAIzgC,EAkN9BzG,MAAKqX,SAAWA,CAChBrX,MAAK8kC,SAAWA,CAChB9kC,MAAK+kC,UAAYA,CACjB/kC,MAAK0mC,YAAgBA,GAAe,KAAQA,GAAeK,QAC3D/mC,MAAK2mC,YAAgBA,GAAe,KAAQA,EAAcI,QAC1D/mC,MAAKglC,aAAeA,CACpBhlC,MAAKilC,aAAeA,CACpBjlC,MAAKklC,MAAQA,CACbllC,MAAK4mC,QAAUA,CACf5mC,MAAKmlC,aAAeA,CAGpBnlC,MAAKolC,kBAAoBplC,KAAKslC,SAC9BtlC,MAAKqlC,mBAAqBrlC,KAAKulC,WArNhC5kC,OAAAC,eAAWwlC,EAAA7lC,UAAA,ShCu9OJM,IgCv9OP,WAEC,MAAOb,MAAK0lC,QhCw9ON7iC,IgCr9OP,SAAiByI,GAEhBA,EAAOA,EAAM,EAAI,EAAIA,CAErB,IAAItL,KAAK0lC,QAAUp6B,EAClB,MAEDtL,MAAK0lC,OAASp6B,CAEdtL,MAAKwkC,iBhCm9OCzjC,WAAY,KACZC,aAAc,MgC98OrBL,QAAAC,eAAWwlC,EAAA7lC,UAAA,YhCo9OJM,IgCp9OP,WAEC,MAAOb,MAAKslC,WhCq9ONziC,IgCl9OP,SAAoByI,GAEnBA,EAAMgM,KAAKqhB,IAAI34B,KAAK8mC,aAAcxvB,KAAKohB,IAAI14B,KAAKgnC,aAAc17B,GAE9D,IAAItL,KAAKslC,WAAah6B,EACrB,MAEDtL,MAAKslC,UAAYh6B,CAEjBtL,MAAKwkC,iBhCg9OCzjC,WAAY,KACZC,aAAc,MgC38OrBL,QAAAC,eAAWwlC,EAAA7lC,UAAA,ahCi9OJM,IgCj9OP,WAEC,MAAOb,MAAKulC,YhCk9ON1iC,IgC/8OP,SAAqByI,GAEpBA,EAAMgM,KAAKqhB,IAAI34B,KAAKwlC,cAAeluB,KAAKohB,IAAI14B,KAAKylC,cAAen6B,GAEhE,IAAItL,KAAKulC,YAAcj6B,EACtB,MAEDtL,MAAKulC,WAAaj6B,CAElBtL,MAAKwkC,iBhC68OCzjC,WAAY,KACZC,aAAc,MgCx8OrBL,QAAAC,eAAWwlC,EAAA7lC,UAAA,YhC88OJM,IgC98OP,WAEC,MAAOb,MAAK6mC,WhC+8ONhkC,IgC58OP,SAAoByI,GAEnB,GAAItL,KAAK6mC,WAAav7B,EACrB,MAEDtL,MAAK6mC,UAAYv7B,CAEjBtL,MAAKwkC,iBhC28OCzjC,WAAY,KACZC,aAAc,MgCp8OrBL,QAAAC,eAAWwlC,EAAA7lC,UAAA,ehC48OJM,IgC58OP,WAEC,MAAOb,MAAK8mC,chC68ONjkC,IgC18OP,SAAuByI,GAEtB,GAAItL,KAAK8mC,cAAgBx7B,EACxB,MAEDtL,MAAK8mC,aAAex7B,CAEpBtL,MAAK8kC,SAAWxtB,KAAKqhB,IAAI34B,KAAK8mC,aAAcxvB,KAAKohB,IAAI14B,KAAKgnC,aAAchnC,KAAKslC,ahCy8OvEvkC,WAAY,KACZC,aAAc,MgCl8OrBL,QAAAC,eAAWwlC,EAAA7lC,UAAA,ehC08OJM,IgC18OP,WAEC,MAAOb,MAAKgnC,chC28ONnkC,IgCx8OP,SAAuByI,GAEtB,GAAItL,KAAKgnC,cAAgB17B,EACxB,MAEDtL,MAAKgnC,aAAe17B,CAEpBtL,MAAK8kC,SAAWxtB,KAAKqhB,IAAI34B,KAAK8mC,aAAcxvB,KAAKohB,IAAI14B,KAAKgnC,aAAchnC,KAAKslC,ahCu8OvEvkC,WAAY,KACZC,aAAc,MgCh8OrBL,QAAAC,eAAWwlC,EAAA7lC,UAAA,gBhCw8OJM,IgCx8OP,WAEC,MAAOb,MAAKwlC,ehCy8ON3iC,IgCt8OP,SAAwByI,GAEvB,GAAItL,KAAKwlC,eAAiBl6B,EACzB,MAEDtL,MAAKwlC,cAAgBl6B,CAErBtL,MAAK+kC,UAAYztB,KAAKqhB,IAAI34B,KAAKwlC,cAAeluB,KAAKohB,IAAI14B,KAAKylC,cAAezlC,KAAKulC,chCq8O1ExkC,WAAY,KACZC,aAAc,MgC97OrBL,QAAAC,eAAWwlC,EAAA7lC,UAAA,gBhCs8OJM,IgCt8OP,WAEC,MAAOb,MAAKylC,ehCu8ON5iC,IgCp8OP,SAAwByI,GAEvB,GAAItL,KAAKylC,eAAiBn6B,EACzB,MAEDtL,MAAKylC,cAAgBn6B,CAErBtL,MAAK+kC,UAAYztB,KAAKqhB,IAAI34B,KAAKwlC,cAAeluB,KAAKohB,IAAI14B,KAAKylC,cAAezlC,KAAKulC,chCm8O1ExkC,WAAY,KACZC,aAAc,MgC57OrBL,QAAAC,eAAWwlC,EAAA7lC,UAAA,WhCo8OJM,IgCp8OP,WAEC,MAAOb,MAAKinC,UhCq8ONpkC,IgCl8OP,SAAmByI,GAElB,GAAItL,KAAKinC,UAAY37B,EACpB,MAEDtL,MAAKinC,SAAW37B,CAEhBtL,MAAKwkC,iBhCi8OCzjC,WAAY,KACZC,aAAc,MgC57OrBL,QAAAC,eAAWwlC,EAAA7lC,UAAA,gBhCk8OJM,IgCl8OP,WAEC,MAAOb,MAAK6lC,ehCm8ONhjC,IgCh8OP,SAAwByI,GAEvB,GAAItL,KAAK6lC,eAAiBv6B,EACzB,MAEDtL,MAAK6lC,cAAgBv6B,CAErBtL,MAAKwkC,iBhC+7OCzjC,WAAY,KACZC,aAAc,MgC35OdolC,GAAA7lC,UAAA2Z,OAAP,SAAcwqB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,GAAI1kC,KAAKulC,YAAcvlC,KAAKqlC,oBAAsBrlC,KAAKslC,WAAatlC,KAAKolC,kBAAmB,CAE3FplC,KAAK2kC,kBAAoB,IAEzB,IAAI3kC,KAAK6lC,cAAe,CACvB,GAAI7lC,KAAKslC,UAAY,EAAG,CACvBtlC,KAAKolC,mBAAqBplC,KAAKslC,UAAU,IAAM,IAAMtlC,KAAKslC,SAC1DtlC,MAAKslC,UAAYtlC,KAAKslC,UAAU,IAAM,QAChC,CACNtlC,KAAKolC,mBAAqBplC,KAAKslC,UAAU,IAAMtlC,KAAKslC,SACpDtlC,MAAKslC,UAAYtlC,KAAKslC,UAAU,IAGjC,MAAOtlC,KAAKslC,UAAYtlC,KAAKolC,mBAAqB,IACjDplC,KAAKolC,mBAAqB,GAE3B,OAAOplC,KAAKslC,UAAYtlC,KAAKolC,kBAAoB,IAChDplC,KAAKolC,mBAAqB,IAG5B,GAAIV,EAAa,CAChB1kC,KAAKqlC,qBAAuBrlC,KAAKulC,WAAavlC,KAAKqlC,qBAAqBrlC,KAAKklC,MAAQ,EACrFllC,MAAKolC,oBAAsBplC,KAAKslC,UAAYtlC,KAAKolC,oBAAoBplC,KAAKklC,MAAQ,OAC5E,CACNllC,KAAKolC,kBAAoBplC,KAAKslC,SAC9BtlC,MAAKqlC,mBAAqBrlC,KAAKulC,WAIhC,GAAKjuB,KAAKuc,IAAI7zB,KAAK+kC,UAAY/kC,KAAKqlC,oBAAsB,KAAU/tB,KAAKuc,IAAI7zB,KAAKslC,UAAYtlC,KAAKolC,mBAAqB,IAAO,CAC9HplC,KAAKqlC,mBAAqBrlC,KAAKulC,UAC/BvlC,MAAKolC,kBAAoBplC,KAAKslC,WAIhC,GAAIvzB,GAAgB/R,KAAiB,aAAGA,KAAKsmC,aAAazhC,UAAUoN,SAAYjS,KAAmB,eAAGA,KAAKmnC,eAAiBnnC,KAAKonC,QACjIpnC,MAAKskC,aAAa74B,EAAIsG,EAAItG,EAAIzL,KAAKqX,SAASC,KAAKyuB,IAAI/lC,KAAKolC,kBAAkB/+B,EAAWsH,oBAAoB2J,KAAK0uB,IAAIhmC,KAAKqlC,mBAAmBh/B,EAAWsH,mBACvJ3N,MAAKskC,aAAa34B,EAAIoG,EAAIpG,EAAI3L,KAAKqX,SAASC,KAAKyuB,IAAI/lC,KAAKqlC,mBAAmBh/B,EAAWsH,oBAAoB3N,KAAK4mC,OACjH5mC,MAAKskC,aAAaz4B,EAAIkG,EAAIlG,EAAI7L,KAAKqX,SAASC,KAAK0uB,IAAIhmC,KAAKolC,kBAAkB/+B,EAAWsH,oBAAoB2J,KAAK0uB,IAAIhmC,KAAKqlC,mBAAmBh/B,EAAWsH,mBAEvJ3N,MAAKknC,QAAQz7B,GAAK6L,KAAKyuB,IAAI/lC,KAAKolC,kBAAkB/+B,EAAWsH,oBAAoB2J,KAAKyuB,IAAI/lC,KAAKqlC,mBAAmBh/B,EAAWsH,mBAC7H3N,MAAKknC,QAAQv7B,EAAI2L,KAAK0uB,IAAIhmC,KAAKqlC,mBAAmBh/B,EAAWsH,mBAC7D3N,MAAKknC,QAAQr7B,GAAKyL,KAAK0uB,IAAIhmC,KAAKolC,kBAAkB/+B,EAAWsH,oBAAoB2J,KAAKyuB,IAAI/lC,KAAKqlC,mBAAmBh/B,EAAWsH,mBAE7H,IAAI3N,KAAKykC,eAAgB,CACxB,GAAIzkC,KAAKqnC,iBACRrnC,KAAKykC,eAAelwB,OAAOvU,KAAKqnC,iBAAkBrnC,KAAKknC,aACnD,IAAIlnC,KAAKumC,eACbvmC,KAAKykC,eAAelwB,OAAOvU,KAAKumC,eAAe/tB,MAAOxY,KAAKumC,eAAehwB,cAAgBvW,KAAKumC,eAAe1hC,UAAUoN,SAAUjS,KAAKknC,UAG3I,OAAAd,IAjT8BK,EAmTLhnC,GAAAJ,QAAhB+mC,IhCm6ON5pB,kCAAkCpb,UAAUyb,gCAAgCzb,UAAUkmC,kDAAkD,oDAAoDA,mDAAmD,SAAS/oC,EAAQkB,EAAOJ,GAC1Q,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiCtuPtB,IAAOoG,GAAQlI,EAAe,gCAG9B,IAAO8lC,GAAc9lC,EAAa,gDAClC,IAAOwI,GAAkBxI,EAAY,+CAErC,IAAMkoC,GAAgB,SAAA/lC,GAASX,EAAzB0mC,EAAgB/lC,EAQrB,SARK+lC,GAQOnC,EAAmCgC,GARhD,GAAA7L,GAAAz6B,IAQa,IAAAskC,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAgC,QAAA,GAAiC,CAAjCA,EAAA,KAE9C5lC,EAAApB,KAAAU,KAAMskC,EANAtkC,MAAAonC,SAAoB,GAAI3gC,GAAS,EAAK,EAAK,EAQjDzG,MAAKunC,+BAAiC,SAAC1rB,GAA6B,MAAA4e,GAAK+M,sBAAsB3rB,GAE/F,IAAIyqB,EACHtmC,KAAKsmC,aAAeA,MAEpBtmC,MAAKmnC,eAAiB,GAAI1gC,GAG5B9F,OAAAC,eAAW6lC,EAAAlmC,UAAA,kBjCguPJM,IiChuPP,WAEC,MAAOb,MAAKqnC,kBjCiuPNxkC,IiC9tPP,SAA0ByI,GAEzB,GAAItL,KAAKumC,eAAgB,CACxBvmC,KAAKumC,eAAervB,oBAAoBnQ,EAAmBkJ,uBAAwBjQ,KAAKunC,+BACxFvnC,MAAKumC,eAAiB,KAGvBvmC,KAAKqnC,iBAAmB/7B,CACxBtL,MAAKwkC,iBjC8tPCzjC,WAAY,KACZC,aAAc,MiC5tPrBL,QAAAC,eAAW6lC,EAAAlmC,UAAA,gBjC+tPJM,IiC/tPP,WAEC,MAAOb,MAAKumC,gBjCguPN1jC,IiC7tPP,SAAwByI,GAEvB,GAAItL,KAAKqnC,iBACRrnC,KAAKqnC,iBAAmB,IAEzB,IAAIrnC,KAAKumC,gBAAkBj7B,EAC1B,MAED,IAAItL,KAAKumC,eACRvmC,KAAKumC,eAAervB,oBAAoBnQ,EAAmBkJ,uBAAwBjQ,KAAKunC,+BAEzFvnC,MAAKumC,eAAiBj7B,CAEtB,IAAItL,KAAKumC,eACRvmC,KAAKumC,eAAen3B,iBAAiBrI,EAAmBkJ,uBAAwBjQ,KAAKunC,+BAEtFvnC,MAAKwkC,iBjCytPCzjC,WAAY,KACZC,aAAc,MiCttPdylC,GAAAlmC,UAAA2Z,OAAP,SAAcwqB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,GAAI1kC,KAAKykC,eAAgB,CACxB,GAAIzkC,KAAKqnC,iBACRrnC,KAAKykC,eAAelwB,OAAOvU,KAAKqnC,sBAC5B,IAAIrnC,KAAKumC,eACbvmC,KAAKykC,eAAelwB,OAAOvU,KAAKumC,eAAe/tB,MAAOxY,KAAKumC,eAAehwB,cAAgBvW,KAAKumC,eAAe1hC,UAAUoN,WAInHw0B,GAAAlmC,UAAAinC,sBAAR,SAA8B3rB,GAE7B7b,KAAKwkC,gBAEP,OAAAiC,IA3E+BpC,EA6E/B5kC,GAA0BJ,QAAjBonC,IjCytPN5pB,gCAAgCzb,UAAUgjC,gDAAgD,gDAAgDlnB,+CAA+C,iDAAiDuqB,mDAAmD,SAASlpC,EAAQkB,EAAOJ,GACxT,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkCjzPtB,IAAOoG,GAAQlI,EAAe,gCAG9B,IAAOkoC,GAAgBloC,EAAa,kDlCuzPpC,IkChzPMmpC,GAAgB,SAAAhnC,GAASX,EAAzB2nC,EAAgBhnC,EA+BrB,SA/BKgnC,GA+BOpD,EAAmCgC,EAAmCqB,EAAsBC,EAAkBC,GAA9G,GAAAvD,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAgC,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAqB,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,GAAkB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,EAEzHnnC,EAAApB,KAAAU,KAAMskC,EAAcgC,EAJdtmC,MAAA8nC,eAA0B,GAAIrhC,GAAS,EAAG,KAAM,IAMtDzG,MAAK2nC,UAAYA,CACjB3nC,MAAK6nC,QAAUA,CACf7nC,MAAK4nC,KAAOA,CAEZ5nC,MAAK+nC,UAAY,GAAIthC,EACrBzG,MAAKgoC,IAAM,GAAIvhC,EACfzG,MAAKioC,SAAW,GAAIxhC,EACpBzG,MAAKkoC,OAAS,GAAIzhC,EAClBzG,MAAKmoC,cAAgB,GAAI1hC,EACzBzG,MAAKooC,iBAAmB,GAAI3hC,GAItBihC,EAAAnnC,UAAA2Z,OAAP,SAAcwqB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,GAAI2D,EAEJ,KAAKroC,KAAKumC,iBAAmBvmC,KAAKykC,eACjC,MAEDzkC,MAAK2kC,kBAAoB,IAEzB0D,GAAOroC,KAAKumC,eAAe1hC,UAAUmvB,SAASsU,qBAAqBtoC,KAAK8nC,eACxE9nC,MAAKooC,iBAAiB38B,EAAIzL,KAAKumC,eAAe96B,EAAI48B,EAAK58B,CACvDzL,MAAKooC,iBAAiBz8B,EAAI3L,KAAKumC,eAAe56B,EAAI08B,EAAK18B,CACvD3L,MAAKooC,iBAAiBv8B,EAAI7L,KAAKumC,eAAe16B,EAAIw8B,EAAKx8B,CAEvD7L,MAAKioC,SAAWjoC,KAAKykC,eAAe5/B,UAAUoN,SAASwmB,IAAIz4B,KAAKooC,iBAChEpoC,MAAKioC,SAASM,SAASvoC,KAAK2nC,UAE5B3nC,MAAKgoC,IAAI17B,SAAStM,KAAK+nC,UACvB/nC,MAAKgoC,IAAIO,QAAQvoC,KAAK6nC,QAEtB7nC,MAAKkoC,OAAOz8B,EAAIzL,KAAKioC,SAASx8B,EAAIzL,KAAKgoC,IAAIv8B,CAC3CzL;KAAKkoC,OAAOv8B,EAAI3L,KAAKioC,SAASt8B,EAAI3L,KAAKgoC,IAAIr8B,CAC3C3L,MAAKkoC,OAAOr8B,EAAI7L,KAAKioC,SAASp8B,EAAI7L,KAAKgoC,IAAIn8B,CAE3C7L,MAAKmoC,cAAc77B,SAAStM,KAAKkoC,OACjCloC,MAAKmoC,cAAcI,QAAQ,EAAEvoC,KAAK4nC,KAElC5nC,MAAK+nC,UAAUS,YAAYxoC,KAAKmoC,cAEhCnoC,MAAKykC,eAAe5/B,UAAUoN,SAAWjS,KAAKykC,eAAe5/B,UAAUoN,SAASwmB,IAAIz4B,KAAK+nC,UAEzFrnC,GAAAH,UAAM2Z,OAAM5a,KAAAU,MAEd,OAAA0nC,IAjF+BjB,EAmF/BhnC,GAA0BJ,QAAjBqoC,IlC+wPN7qB,gCAAgCzb,UAAUkmC,kDAAkD,oDAAoDmB,qCAAqC,SAASlqC,EAAQkB,EAAOJ,GAQhN,GmC72PMqpC,GAAS,WAAf,QAAMA,MAMSA,EAAAC,MAAe,OAMfD,GAAAE,KAAc,MAMdF,GAAAG,OAAgB,QAC/B,OAAAH,KAEAjpC,GAAmBJ,QAAVqpC,OnC82PHI,wCAAwC,SAASvqC,EAAQkB,EAAOJ,GAOtE,GoC34PM0pC,GAAY,WAAlB,QAAMA,MAKSA,EAAAC,OAAgB,QAKhBD,GAAAE,OAAgB,QAC/B,OAAAF,KAEAtpC,GAAsBJ,QAAb0pC,OpC64PHG,+CAA+C,SAAS3qC,EAAQkB,EAAOJ,GAW7E,GqCj6PM8pC,GAAmB,WAAzB,QAAMA,MAESA,EAAAC,SAAkB,SAClBD,GAAAE,SAAkB,SACjC,OAAAF,KAE6B1pC,GAAAJ,QAApB8pC,OrCo6PHG,oCAAoC,SAAS/qC,EAAQkB,EAAOJ,GAelE,GsCx6PMkqC,GAAQ,WAAd,QAAMA,MAuCEA,EAAAhpC,UAAAipC,gBAAP,SAAuBC,EAAsB/W,EAAsBgX,EAAuBC,GAA7C,GAAAjX,QAAA,GAAoB,CAApBA,EAAA,KAAsB,GAAAgX,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,OAmBnFJ,GAAAhpC,UAAAqpC,UAAP,SAAiBC,EAAsBC,GAAA,GAAAA,QAAA,GAAgB,CAAhBA,EAAA,GAwFhCP,GAAAhpC,UAAAwpC,kBAAP,SAAyB16B,EAAmBkS,EAA8ByoB,EAAsBC,EAA8BvX,EAAsBwX,EAA6BC,EAAoCC,GAAvF,GAAA1X,QAAA,GAAoB,CAApBA,EAAA,KAAsB,GAAAwX,QAAA,GAA2B,CAA3BA,EAAA,MAA6B,GAAAC,QAAA,GAAkC,CAAlCA,EAAA,MAAoC,GAAAC,QAAA,GAA0B,CAA1BA,EAAA,GAiE9Mb,GAAAhpC,UAAA2V,MAAP,YAYOqzB,GAAAhpC,UAAA+L,SAAP,SAAgB+9B,IAuDTd,GAAAhpC,UAAA+pC,aAAP,SAAoBC,EAAkBC,EAAkBC,EAAkBC,EAAkBC,EAAgBC,IAmCrGrB,GAAAhpC,UAAAsqC,QAAP,SAAeC,EAAiBC,EAAiBJ,EAAgBC,IAoB1DrB,GAAAhpC,UAAAyqC,WAAP,SAAkBv/B,EAAUE,EAAUmpB,IAqB/ByU,GAAAhpC,UAAA0qC,YAAP,SAAmBx/B,EAAUE,EAAUqD,EAAcjD,IAiB9Cw9B,GAAAhpC,UAAA2qC,iBAAP,SAAwBC,IAkDjB5B,GAAAhpC,UAAA6qC,SAAP,SAAgBC,EAAgClP,EAAoBmP,IAsB7D/B,GAAAhpC,UAAAgrC,SAAP,SAAgB9/B,EAAUE,EAAUqD,EAAcjD,IA+B3Cw9B,GAAAhpC,UAAAirC,cAAP,SAAqB//B,EAAUE,EAAUqD,EAAcjD,EAAe0/B,EAAqBC,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAAC,KAyBpFpC,GAAAhpC,UAAAqrC,cAAP,SAAqBC,EAAwB1nC,EAAsC2nC,EAA8BC,GAApE,GAAA5nC,QAAA,GAAoC,CAApCA,EAAA,KAAsC,GAAA2nC,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAC,QAAA,GAA8B,CAA9BA,EAAA,MAgB1GxC,GAAAhpC,UAAAyrC,QAAP,YAkCOzC,GAAAhpC,UAAA0rC,gBAAP,SAAuBxC,EAAsB/W,EAAsBgX,EAAuBC,GAA7C,GAAAjX,QAAA,GAAoB,CAApBA,EAAA,KAAsB,GAAAgX,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,OA2EnFJ,GAAAhpC,UAAA2rC,kBAAP,SAAyB78B,EAAmBkS,EAA8ByoB,EAAsBC,EAAsBvX,EAAsBwX,EAAkCC,EAAgDC,GAAxG,GAAA1X,QAAA,GAAoB,CAApBA,EAAA,KAAsB,GAAAwX,QAAA,GAAgC,CAAhCA,EAAA,KAAkC,GAAAC,QAAA,GAA8C,CAA9CA,EAAA,KAAgD,GAAAC,QAAA,GAA0B,CAA1BA,EAAA,GAgLvNb,GAAAhpC,UAAA4rC,UAAP,SAAiB9qB,EAAsBwoB,EAA0BC,EAAkBsC,EAA8BC,EAAgCC,EAAuBC,EAA0BC,GAAjL,GAAAnrB,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAwoB,QAAA,GAAwB,CAAxBA,EAAA,EAA0B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAsC,QAAA,GAA4B,CAA5BA,EAAA,MAA8B,GAAAC,QAAA,GAA8B,CAA9BA,EAAA,KAAgC,GAAAC,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,KAA0B,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAqB3LjD,GAAAhpC,UAAAksC,OAAP,SAAchhC,EAAUE,IAejB49B,GAAAhpC,UAAAgV,OAAP,SAAc9J,EAAUE,IAIzB,OAAA49B,KAEA9pC,GAAkBJ,QAATkqC,OtCw4PHmD,yCAAyC,SAASnuC,EAAQkB,EAAOJ,SAEjEstC,+CAA+C,SAASpuC,EAAQkB,EAAOJ,GAQ7E,GuChvRMutC,GAAmB,WAAzB,QAAMA,MAeSA,EAAAC,WAAoB,WAcpBD,GAAAE,IAAa,KAC5B,OAAAF,KAEAntC,GAA6BJ,QAApButC,OvCivRHG,sCAAsC,SAASxuC,EAAQkB,EAAOJ,GASpE,GwCzxRM2tC,GAAU,WAAhB,QAAMA,MAMSA,EAAAC,MAAe,OAMfD,GAAAE,MAAe,OAMfF,GAAArE,MAAe,OAC9B,OAAAqE,KAEAvtC,GAAoBJ,QAAX2tC,OxC0xRHG,yCAAyC,SAAS5uC,EAAQkB,EAAOJ,GAKvE,GyCxzRM+tC,GAAa,WAAnB,QAAMA,MAWSA,EAAAC,WAAoB,YAMpBD,GAAAxE,KAAc,MAOdwE,GAAAE,OAAgB,QAWhBF,GAAAG,SAAkB,UACjC,OAAAH,KAEuB3tC,GAAAJ,QAAd+tC,OzCwzRHI,yCAAyC,SAASjvC,EAAQkB,EAAOJ,GAMvE,G0Cn2RMouC,GAAa,WAAnB,QAAMA,MAOSA,EAAAC,OAAgB,QAWhBD,GAAAE,KAAc,MAMdF,GAAAG,MAAe,OAC9B,OAAAH,KAEuBhuC,GAAAJ,QAAdouC,O1Co2RHI,wCAAwC,SAAStvC,EAAQkB,EAAOJ,GAStE,G2Cr4RMyuC,GAAY,WAAlB,QAAMA,MAKSA,EAAAC,IAAa,KAKbD,GAAAE,QAAiB,SAKjBF,GAAAG,OAAgB,QAC/B,OAAAH,KAEAruC,GAAsBJ,QAAbyuC,O3Cs4RHI,2CAA2C,SAAS3vC,EAAQkB,EAAOJ,GAsBzE,G4Cj6RM8uC,GAAe,WAArB,QAAMA,MAKSA,EAAAC,SAAkB,UAKlBD,GAAAvF,KAAc,MAMduF,GAAAE,SAAkB,UACjC,OAAAF,KAEA1uC,GAAyBJ,QAAhB8uC,O5Ck6RHG,yCAAyC,SAAS/vC,EAAQkB,EAAOJ,GACvE,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6C78RtB,IAAOkuC,GAAShwC,EAAe,iCAE/B,IAAO4H,GAAc5H,EAAc,sCAInC,IAAOyI,GAAazI,EAAc,wCAElC,IAAOoI,GAAUpI,EAAe,uCAEhC,IAAOiwC,GAAajwC,EAAc,0C7C4+RlC,I6Ct8RMkwC,GAAS,SAAA/tC,GAASX,EAAlB0uC,EAAS/tC,EA+Ld,SA/LK+tC,GA+LOzpC,EAAuB0pC,EAA+BC,GA/LnE,GAAAlU,GAAAz6B,IA+LoC,IAAA0uC,QAAA,GAA6B,CAA7BA,EAAA,OAA+B,GAAAC,QAAA,GAAyB,CAAzBA,EAAA,MAEjEjuC,EAAApB,KAAAU,KAEAA,MAAKqH,WAAa,IAElBrH,MAAK4uC,sBAAwB,SAAC/yB,GAAwB,MAAA4e,GAAKoU,cAAchzB,GAEzE7b,MAAKgF,SAAWA,CAEhBhF,MAAK8uC,gBAAkB9pC,EAASgK,KAChChP,MAAK+uC,iBAAmB/pC,EAAS+G,MAEjC/L,MAAKgvC,eAAiBhvC,KAAKokB,UAAU6qB,WAAa,GAAIV,GAAU,EAAG,EAAGvuC,KAAK8uC,gBAAiB9uC,KAAK+uC,iBAGjG/uC,MAAKwK,YAAc7D,EAAW8D,gBAE9BzK,MAAK8uC,gBAAkB9pC,EAASgK,MA9LjCrO,OAAAC,eAAW6tC,EAAAluC,UAAA,Y7Cw8RJM,I6Cx8RP,WAEC,MAAOb,MAAKkvC,W7Cy8RNnuC,WAAY,KACZC,aAAc,M6Cp8RrBL,QAAAC,eAAW6tC,EAAAluC,UAAA,a7C08RJM,I6C18RP,WAEC,MAAO4tC,GAAUvtC,W7C28RXH,WAAY,KACZC,aAAc,M6Cj8RrBL,QAAAC,eAAW6tC,EAAAluC,UAAA,iB7Cu8RJM,I6Cv8RP,WAEC,MAAOb,MAAKgvC,gB7Cw8RNjuC,WAAY,KACZC,aAAc,M6Cn8RrBL,QAAAC,eAAW6tC,EAAAluC,UAAA,mB7Cy8RJM,I6Cz8RP,WAEC,MAAOb,MAAK+uC,kB7C08RNhuC,WAAY,KACZC,aAAc,M6Cr8RrBL,QAAAC,eAAW6tC,EAAAluC,UAAA,kB7C28RJM,I6C38RP,WAEC,MAAOb,MAAK8uC,iB7C48RN/tC,WAAY,KACZC,aAAc,M6Cv8RrBL,QAAAC,eAAW6tC,EAAAluC,UAAA,Y7C68RJM,I6C78RP,WAEC,MAAOb,MAAKokB,W7C88RNvhB,I6C38RP,SAAoBC,GAEnB,GAAIA,GAAS9C,KAAKokB,UACjB,MAED,IAAIpkB,KAAKokB,UAAW,CACnBpkB,KAAKokB,UAAUC,aAAarkB,KAC5BA,MAAKokB,UAAUlN,oBAAoBs3B,EAAcW,aAAcnvC,KAAK4uC,uBAIrE5uC,KAAKokB,UAAYthB,CAEjB,IAAI9C,KAAKokB,UAAW,CACnBpkB,KAAKokB,UAAUE,UAAUtkB,KACzBA,MAAKokB,UAAUhV,iBAAiBo/B,EAAcW,aAAcnvC,KAAK4uC,yB7Cy8R5D7tC,WAAY,KACZC,aAAc,M6C16RrBL,QAAAC,eAAW6tC,EAAAluC,UAAA,e7Cg7RJM,I6Ch7RP,WAEC,MAAOb,MAAKukB,c7Ci7RN1hB,I6C96RP,SAAuBC,GAEtB9C,KAAKukB,aAAezhB,G7C+6Rd/B,WAAY,KACZC,aAAc,M6C36RrBL,QAAAC,eAAW6tC,EAAAluC,UAAA,kB7Ci7RJM,I6Cj7RP,WAGC,MAAOb,MAAKovC,iB7Ck7RNvsC,I6C/6RP,SAA0BC,GAGzB9C,KAAK6E,UAAUgM,eAAiB/N,CAEhC9C,MAAKqvC,wB7Cg7RCtuC,WAAY,KACZC,aAAc,M6C76RrBL,QAAAC,eAAW6tC,EAAAluC,UAAA,wB7Cg7RJM,I6Ch7RP,WAEC,MAAOb,MAAKsvC,uB7Ci7RNzsC,I6C96RP,SAAgCC,GAG/B9C,KAAKsvC,sBAAwBxsC,CAC7B9C,MAAKqvC,wB7C+6RCtuC,WAAY,KACZC,aAAc,M6C76RbytC,GAAAluC,UAAA8uC,qBAAR,WAECrvC,KAAKovC,gBAAgB,GAAIjpC,EACzB,IAAKnG,KAA0B,uBAAIA,KAAK6E,UAAwB,eAAE,CAEjE7E,KAAKovC,gBAAgBtkC,gBAAoB9K,KAAK6E,UAAUgM,eAAe/F,gBAAkB9K,KAAKsvC,sBAAsBxkC,eACpH9K,MAAKovC,gBAAgB/jB,cAAoBrrB,KAAK6E,UAAUgM,eAAewa,cAAgBrrB,KAAKsvC,sBAAsBjkB,aAClHrrB,MAAKovC,gBAAgB5jB,eAAoBxrB,KAAK6E,UAAUgM,eAAe2a,eAAiBxrB,KAAKsvC,sBAAsB9jB,cACnHxrB,MAAKovC,gBAAgB7jB,gBAAoBvrB,KAAK6E,UAAUgM,eAAe0a,gBAAkBvrB,KAAKsvC,sBAAsB/jB,eACpHvrB,MAAKovC,gBAAgBxjB,YAAoB5rB,KAAK6E,UAAUgM,eAAe+a,YAAc5rB,KAAKsvC,sBAAsB1jB,WAChH5rB,MAAKovC,gBAAgB3jB,UAAoBzrB,KAAK6E,UAAUgM,eAAe4a,UAAYzrB,KAAKsvC,sBAAsB7jB,SAC9GzrB,MAAKovC,gBAAgBzjB,WAAoB3rB,KAAK6E,UAAUgM,eAAe8a,WAAa3rB,KAAKsvC,sBAAsB3jB,UAC/G3rB,MAAKovC,gBAAgB1jB,YAAoB1rB,KAAK6E,UAAUgM,eAAe6a,YAAc1rB,KAAKsvC,sBAAsB5jB,gBAE5G,IAAI1rB,KAAK6E,UAAUgM,eAAe,CACtC7Q,KAAKovC,gBAAgBtkC,gBAAoB9K,KAAK6E,UAAUgM,eAAe/F,eACvE9K,MAAKovC,gBAAgB/jB,cAAoBrrB,KAAK6E,UAAUgM,eAAewa,aACvErrB,MAAKovC,gBAAgB5jB,eAAoBxrB,KAAK6E,UAAUgM,eAAe2a,cACvExrB,MAAKovC,gBAAgB7jB,gBAAoBvrB,KAAK6E,UAAUgM,eAAe0a,eACvEvrB,MAAKovC,gBAAgBxjB,YAAoB5rB,KAAK6E,UAAUgM,eAAe+a,WACvE5rB,MAAKovC,gBAAgB3jB,UAAoBzrB,KAAK6E,UAAUgM,eAAe4a,SACvEzrB,MAAKovC,gBAAgBzjB,WAAoB3rB,KAAK6E,UAAUgM,eAAe8a,UACvE3rB,MAAKovC,gBAAgB1jB,YAAoB1rB,KAAK6E,UAAUgM,eAAe6a,gBAEnE,IAAI1rB,KAAKsvC,sBAAsB,CACnCtvC,KAAKovC,gBAAgBtkC,gBAAoB9K,KAAKsvC,sBAAsBxkC,eACpE9K,MAAKovC,gBAAgB/jB,cAAoBrrB,KAAKsvC,sBAAsBjkB,aACpErrB,MAAKovC,gBAAgB5jB,eAAoBxrB,KAAKsvC,sBAAsB9jB,cACpExrB,MAAKovC,gBAAgB7jB,gBAAoBvrB,KAAKsvC,sBAAsB/jB,eACpEvrB,MAAKovC,gBAAgBxjB,YAAoB5rB,KAAKsvC,sBAAsB1jB,WACpE5rB,MAAKovC,gBAAgB3jB,UAAoBzrB,KAAKsvC,sBAAsB7jB,SACpEzrB,MAAKovC,gBAAgBzjB,WAAoB3rB,KAAKsvC,sBAAsB3jB,UACpE3rB,MAAKovC,gBAAgB1jB,YAAoB1rB,KAAKsvC,sBAAsB5jB,aA4B/D+iB,GAAAluC,UAAA8Q,kBAAP,WAEC3Q,EAAAH,UAAM8Q,kBAAiB/R,KAAAU,KAEvBA,MAAKsR,YAAYtC,MAAQhP,KAAKgvC,eAAehgC,KAC7ChP,MAAKsR,YAAYvF,OAAS/L,KAAKgvC,eAAejjC,OAGxC0iC,GAAAluC,UAAA0D,MAAP,WAEC,GAAIA,GAAkB,GAAIwqC,GAAUzuC,KAAKgF,SACzC,OAAOf,GAWDwqC,GAAAluC,UAAAuE,gBAAP,SAAuBI,EAAkC8U,GAExD,MAAOha,MAAKoN,kBAAkBmiC,uBAAuBvvC,KAAMA,KAAKgF,SAAUhF,KAAK+X,qBAAsB7S,GAM9FupC,GAAAluC,UAAAsuC,cAAR,SAAsBhzB,GAErB7b,KAAK8uC,gBAAkB9uC,KAAKokB,UAAUpV,KACtChP,MAAK+uC,iBAAmB/uC,KAAKokB,UAAUrY,MAEvC/L,MAAKgvC,eAAiBhvC,KAAKokB,UAAU6qB,WAAa,GAAIV,GAAU,EAAG,EAAGvuC,KAAK8uC,gBAAiB9uC,KAAK+uC,iBAEjG/uC,MAAKgL,oBAEL,IAAIC,GAAajL,KAAK0J,cAAcnK,MACpC,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,EAAKjM,IAC/BgB,KAAK0J,cAAc1K,GAAG0lB,qBAGjB+pB,GAAAluC,UAAA0a,eAAP,SAAsBC,GAKrB,GAAIlb,KAAKmR,eACRnR,KAAKmR,eAAeC,YAErB8J,GAASs0B,uBAAuBxvC,MAzQnByuC,GAAAvtC,UAAmB,mBA2QlC,OAAAutC,IA7QwBznC,EA+QxBvH,GAAmBJ,QAAVovC,I7C84RNlyB,sCAAsCnb,UAAUquC,iCAAiCruC,UAAU6E,wCAAwC,wCAAwCgX,uCAAuC,uCAAuCyyB,0CAA0C,4CAA4C3L,sCAAsC,SAASxlC,EAAQkB,EAAOJ,GAChZ,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8CptStB,IAAOiG,GAAQ/H,EAAgB,gCAC/B,IAAOoxC,GAAOpxC,EAAgB,+BAE9B,IAAOqxC,GAAerxC,EAAc,yCAEpC,IAAOsxC,GAAqBtxC,EAAY,oDAExC,IAAOmI,GAAsBnI,EAAY,iDAEzC,IAAOoI,GAAUpI,EAAe,uCAChC,IAAOkgB,GAAsBlgB,EAAY,uDAEzC,IAAOqgC,GAAWrgC,EAAe,wCAGjC,IAAMogC,GAAM,SAAAj+B,GAASX,EAAf4+B,EAAMj+B,EAWX,SAXKi+B,GAWOoD,GAXb,GAAAtH,GAAAz6B,IAWa,IAAA+hC,QAAA,GAA6B,CAA7BA,EAAA,KAEXrhC,EAAApB,KAAAU,KATOA,MAAA8vC,gBAA2B,GAAIxpC,EAC/BtG,MAAA+vC,qBAA+B,IAG/B/vC,MAAAgwC,oBAA8B,IAOrChwC,MAAKqH,WAAa,IAElBrH,MAAKiwC,mCAAqC,SAACp0B,GAA0B,MAAA4e,GAAKyV,0BAA0Br0B,GAEpG7b,MAAKmwC,YAAcpO,GAAc,GAAI8N,EACrC7vC,MAAKmwC,YAAY/gC,iBAAiBwgC,EAAgBQ,eAAgBpwC,KAAKiwC,mCAEvEjwC,MAAKqwC,iBAEL,KAAK,GAAIrxC,GAAW,EAAGA,EAAI,IAAKA,EAC/BgB,KAAKqwC,eAAerxC,GAAK,GAAI2wC,EAE9B3vC,MAAK6L,GAAK,GAGV7L,MAAKwK,YAAc7D,EAAWyuB,KAI/Bz0B,OAAAC,eAAW+9B,EAAAp+B,UAAA,a9CmsSJM,I8CnsSP,WAEC,MAAO89B,GAAOz9B,W9CosSRH,WAAY,KACZC,aAAc,M8ClsSb29B,GAAAp+B,UAAA2vC,0BAAR,SAAkCr0B,GAEjC7b,KAAK+vC,qBAAuB,IAC5B/vC,MAAKgwC,oBAAsB,IAC3BhwC,MAAKkN,cAAc2O,GAGpBlb,QAAAC,eAAW+9B,EAAAp+B,UAAA,iB9CmsSJM,I8CnsSP,WAEC,GAAIb,KAAKgwC,oBACRhwC,KAAKswC,eAEN,OAAOtwC,MAAKqwC,gB9CmsSNtvC,WAAY,KACZC,aAAc,M8CjsSb29B,GAAAp+B,UAAA+vC,cAAR,WAEC,GAAIvxC,GAAUmB,EAAUwxB,C9CosSlB,I8ClsSF6e,GAAYC,EAAYC,EAAYC,CACxC,IAAIC,GAAYC,EAAYC,EAAYC,CACxC,IAAIC,GAAYC,EAAYC,EAAYC,CACxC,IAAIC,GAAYC,EAAYC,EAAYC,CACxC,IAAInxC,EACJ,IAAIyU,GAAmB5U,KAAKuxC,eAAeriC,OAC3C,IAAIsiC,EAEJjB,GAAM37B,EAAI,EACV47B,GAAM57B,EAAI,EACV67B,GAAM77B,EAAI,EACV87B,GAAM97B,EAAI,GACV+7B,GAAM/7B,EAAI,EACVg8B,GAAMh8B,EAAI,EACVi8B,GAAMj8B,EAAI,EACVk8B,GAAMl8B,EAAI,GACVm8B,GAAMn8B,EAAI,EACVo8B,GAAMp8B,EAAI,EACVq8B,GAAMr8B,EAAI,GACVs8B,GAAMt8B,EAAI,GACVu8B,GAAMv8B,EAAI,EACVw8B,GAAMx8B,EAAI,EACVy8B,GAAMz8B,EAAI,GACV08B,GAAM18B,EAAI,GAGVzU,GAAIH,KAAKqwC,eAAe,EACxBtxC,GAAIoyC,EAAMZ,CACVrwC,GAAIkxC,EAAMZ,CACV9e,GAAI2f,EAAMZ,CACVe,GAAS,EAAEl6B,KAAKC,KAAKxY,EAAEA,EAAImB,EAAEA,EAAIwxB,EAAEA,EACnCvxB,GAAEpB,EAAIA,EAAEyyC,CACRrxC,GAAED,EAAIA,EAAEsxC,CACRrxC,GAAEuxB,EAAIA,EAAE8f,CACRrxC,GAAEF,IAAMqxC,EAAMZ,GAAKc,CAGnBrxC,GAAIH,KAAKqwC,eAAe,EACxBtxC,GAAIoyC,EAAMZ,CACVrwC,GAAIkxC,EAAMZ,CACV9e,GAAI2f,EAAMZ,CACVe,GAAS,EAAEl6B,KAAKC,KAAKxY,EAAEA,EAAImB,EAAEA,EAAIwxB,EAAEA,EACnCvxB,GAAEpB,EAAIA,EAAEyyC,CACRrxC,GAAED,EAAIA,EAAEsxC,CACRrxC,GAAEuxB,EAAIA,EAAE8f,CACRrxC,GAAEF,GAAKywC,EAAMY,GAAKE,CAGlBrxC,GAAIH,KAAKqwC,eAAe,EACxBtxC,GAAIoyC,EAAMR,CACVzwC,GAAIkxC,EAAMR,CACVlf,GAAI2f,EAAMR,CACVW,GAAS,EAAEl6B,KAAKC,KAAKxY,EAAEA,EAAImB,EAAEA,EAAIwxB,EAAEA,EACnCvxB,GAAEpB,EAAIA,EAAEyyC,CACRrxC,GAAED,EAAIA,EAAEsxC,CACRrxC,GAAEuxB,EAAIA,EAAE8f,CACRrxC,GAAEF,IAAMqxC,EAAMR,GAAKU,CAGnBrxC,GAAIH,KAAKqwC,eAAe,EACxBtxC,GAAIoyC,EAAMR,CACVzwC,GAAIkxC,EAAMR,CACVlf,GAAI2f,EAAMR,CACVW,GAAS,EAAEl6B,KAAKC,KAAKxY,EAAEA,EAAImB,EAAEA,EAAIwxB,EAAEA,EACnCvxB,GAAEpB,EAAIA,EAAEyyC,CACRrxC,GAAED,EAAIA,EAAEsxC,CACRrxC,GAAEuxB,EAAIA,EAAE8f,CACRrxC,GAAEF,GAAK6wC,EAAMQ,GAAKE,CAGlBrxC,GAAIH,KAAKqwC,eAAe,EACxBtxC,GAAIgyC,CACJ7wC,GAAI8wC,CACJtf,GAAIuf,CACJO,GAAS,EAAEl6B,KAAKC,KAAKxY,EAAEA,EAAImB,EAAEA,EAAIwxB,EAAEA,EACnCvxB,GAAEpB,EAAIA,EAAEyyC,CACRrxC,GAAED,EAAIA,EAAEsxC,CACRrxC,GAAEuxB,EAAIA,EAAE8f,CACRrxC,GAAEF,GAAKixC,EAAIM,CAGXrxC,GAAIH,KAAKqwC,eAAe,EACxBtxC,GAAIoyC,EAAMJ,CACV7wC,GAAIkxC,EAAMJ,CACVtf,GAAI2f,EAAMJ,CACVO,GAAS,EAAEl6B,KAAKC,KAAKxY,EAAEA,EAAImB,EAAEA,EAAIwxB,EAAEA,EACnCvxB,GAAEpB,EAAIA,EAAEyyC,CACRrxC,GAAED,EAAIA,EAAEsxC,CACRrxC,GAAEuxB,EAAIA,EAAE8f,CACRrxC,GAAEF,GAAKixC,EAAMI,GAAKE,CAElBxxC,MAAKgwC,oBAAsB,MAIrBrR,GAAAp+B,UAAAoK,kCAAP,SAAyCyuB,GAExC,GAAI14B,EAAAH,UAAMoK,kCAAiCrL,KAAAU,KAACo5B,GAC3C,MAAO,KAER,IAAIp5B,KAAKsO,wBAA0B5H,EAAuB6H,gBAAiB,CAC1EvO,KAAK+vC,qBAAuB,IAC5B/vC,MAAKgwC,oBAAsB,KAG5B,MAAO,OAMRrvC,QAAAC,eAAW+9B,EAAAp+B,UAAA,c9CqrSJM,I8CrrSP,WAEC,MAAOb,MAAKmwC,a9CsrSNttC,I8CnrSP,SAAsBC,GAErB,GAAI9C,KAAKmwC,aAAertC,EACvB,MAED,KAAKA,EACJ,KAAM,IAAI5D,OAAM,6BAEjBc,MAAKmwC,YAAYj5B,oBAAoB04B,EAAgBQ,eAAgBpwC,KAAKiwC,mCAC1EjwC,MAAKmwC,YAAcrtC,CACnB9C,MAAKmwC,YAAY/gC,iBAAiBwgC,EAAgBQ,eAAgBpwC,KAAKiwC,mCACvEjwC,MAAKkN,cAAc,GAAI0xB,GAAYA,EAAYiD,mBAAoB7hC,Q9CkrS7De,WAAY,KACZC,aAAc,M8C7qSrBL,QAAAC,eAAW+9B,EAAAp+B,UAAA,kB9CmrSJM,I8CnrSP,WAEC,GAAIb,KAAK+vC,qBAAsB,CAC9B/vC,KAAK8vC,gBAAgBxjC,SAAStM,KAAKwR,sBACnCxR,MAAK8vC,gBAAgB2B,OAAOzxC,KAAKmwC,YAAYzd,OAC7C1yB,MAAK+vC,qBAAuB,MAG7B,MAAO/vC,MAAK8vC,iB9CmrSN/uC,WAAY,KACZC,aAAc,M8CzqSd29B,GAAAp+B,UAAAkjC,OAAP,SAAciO,EAAWC,EAAWnO,GAEnC,MAAOxjC,MAAKuM,eAAe+7B,qBAAqBtoC,KAAKmwC,YAAYvP,UAAU8Q,EAAIC,EAAInO,IAS7E7E,GAAAp+B,UAAA0iC,QAAP,SAAeC,GAEd,MAAOljC,MAAKmwC,YAAYlN,QAAQjjC,KAAKwR,sBAAsBpD,gBAAgB80B,IAWrEvE,GAAAp+B,UAAAqgC,UAAP,SAAiB8Q,EAAWC,EAAWnO,GAEtC,MAAOxjC,MAAKuM,eAAe6B,gBAAgBpO,KAAKmwC,YAAYvP,UAAU8Q,EAAIC,EAAInO,IAGxE7E,GAAAp+B,UAAA0a,eAAP,SAAsBC,GAKrB,GAAIlb,KAAKmR,eACRnR,KAAKmR,eAAeC,aAnPRutB,GAAAz9B,UAAmB,gBAuPlC,OAAAy9B,IAzPqBlgB,EA2PrBhf,GAAgBJ,QAAPs/B,I9C8qSNiT,yCAAyCxwC,UAAUqb,gCAAgCrb,UAAUywC,+BAA+BzwC,UAAU0wC,oDAAoD1wC,UAAU0b,iDAAiD,iDAAiDG,uCAAuC,uCAAuCuD,uDAAuD,uDAAuDwjB,wCAAwC,0CAA0C+N,gDAAgD,SAASxzC,EAAQkB,EAAOJ,GAC/nB,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+C77StB,IAAOkG,GAAahI,EAAc,qCAClC,IAAO+H,GAAQ/H,EAAgB,gCAC/B,IAAOkI,GAAQlI,EAAgB,gCAE/B,IAAOogB,GAASpgB,EAAe,oCAC/B,IAAOmI,GAAsBnI,EAAY,iDACzC,IAAOoI,GAAUpI,EAAe,uCAGhC,IAAOyzC,GAAuBzzC,EAAY,qEAE1C,IAAM0zC,GAAgB,SAAAvxC,GAASX,EAAzBkyC,EAAgBvxC,EAQrB,SARKuxC,GAQOC,EAAiBC,EAAkBC,GAAnC,GAAAF,QAAA,GAAe,CAAfA,EAAA,EAAiB,GAAAC,QAAA,GAAgB,CAAhBA,GAAe,EAAG,GAAAC,QAAA,GAAe,CAAfA,EAAA,EAE9C1xC,EAAApB,KAAAU,KALOA,MAAAqyC,aAA6B,GAAI/vC,OAAc,GAOtDtC,MAAKqH,WAAa,IAElBrH,MAAKgyB,UAAY,GAAIvrB,GAASyrC,EAAMC,EAAMC,EAE1CpyC,MAAKsyC,gBAAkB,GAAI7rC,EAG3BzG,MAAKwK,YAAc7D,EAAWyuB,KAG/Bz0B,OAAAC,eAAWqxC,EAAA1xC,UAAA,kB/Co7SJM,I+Cp7SP,WAEC,GAAIb,KAAKsO,wBAA0B5H,EAAuB6H,gBACzDvO,KAAKwO,uBAEN,OAAOxO,MAAKsyC,iB/Co7SNvxC,WAAY,KACZC,aAAc,M+Cl7SrBL,QAAAC,eAAWqxC,EAAA1xC,UAAA,a/Cq7SJM,I+Cr7SP,WAEC,MAAOb,MAAKuyC,Y/Cs7SN1vC,I+Cn7SP,SAAqBC,GAEpB9C,KAAKuyC,WAAazvC,CAElB,KAAK9C,KAAKwyC,WACTxyC,KAAKwyC,WAAa,GAAI/rC,EAEvBzG,MAAKwyC,WAAW/mC,EAAIzL,KAAKyL,EAAIzL,KAAKuyC,WAAW9mC,CAC7CzL,MAAKwyC,WAAW7mC,EAAI3L,KAAK2L,EAAI3L,KAAKuyC,WAAW5mC,CAC7C3L,MAAKwyC,WAAW3mC,EAAI7L,KAAK6L,EAAI7L,KAAKuyC,WAAW1mC,CAE7C7L,MAAKuU,OAAOvU,KAAKwyC,a/Ci7SXzxC,WAAY,KACZC,aAAc,M+C96SdixC,GAAA1xC,UAAAiO,sBAAP,WAEC9N,EAAAH,UAAMiO,sBAAqBlP,KAAAU,KAE3BA,MAAKuM,eAAe8B,aAAa,EAAGrO,KAAKsyC,gBAEzCtyC,MAAKsyC,gBAAgBx9B,YAIfm9B,GAAA1xC,UAAAwf,oBAAP,WAEC,MAAO,IAAIiyB,GAILC,GAAA1xC,UAAA8f,2BAAP,SAAkCC,EAAgBlK,EAAelT,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEhE,GAAI0R,GAAmBrO,EAAc0O,kBACrC,IAAIC,GAAa,GAAI5O,EAErB4O,GAAE5I,SAASgU,EAAOnK,wBAAwBC,GAC1ClB,GAAEu8B,OAAOzxC,KAAKwR,sBAEd,KAAKxR,KAAKyyC,gBACTzyC,KAAKyyC,kBAENv9B,GAAEw9B,iBAAiB1yC,KAAKqyC,aAAcryC,KAAKyyC,gBAE3C,IAAIE,GAAc5L,SAAU6L,GAAe7L,QAC3C,IAAI8L,GAAc9L,SAAU+L,GAAe/L,QAC3C,IAAIgM,GAAchM,SAAUiM,GAAejM,QAC3C,IAAI9mC,EACJ,KAAK,GAAIjB,GAAW,EAAGA,EAAI,IAAK,CAC/BiB,EAAID,KAAKyyC,gBAAgBzzC,IAEzB,IAAIiB,EAAI0yC,EACPA,EAAO1yC,CAER,IAAIA,EAAI2yC,EACPA,EAAO3yC,CAERA,GAAID,KAAKyyC,gBAAgBzzC,IAEzB,IAAIiB,EAAI4yC,EACPA,EAAO5yC,CAER,IAAIA,EAAI6yC,EACPA,EAAO7yC,CAERA,GAAID,KAAKyyC,gBAAgBzzC,IAEzB,IAAIiB,EAAI8yC,EACPA,EAAO9yC,CAER,IAAIA,EAAI+yC,EACPA,EAAO/yC,EAGT,GAAIgzC,GAAmB,GAAGL,EAAOD,EACjC,IAAIO,GAAmB,GAAGJ,EAAOD,EACjC,IAAIM,GAAmB,GAAGH,EAAOD,EACjCn+B,GAAI,GAAK,EAAEq+B,CACXr+B,GAAI,GAAK,EAAEs+B,CACXt+B,GAAI,IAAMu+B,CACVv+B,GAAI,MAAQg+B,EAAOD,GAAMM,CACzBr+B,GAAI,MAAQk+B,EAAOD,GAAMK,CACzBt+B,GAAI,KAAOm+B,EAAKI,CAChBv+B,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,CAClFA,GAAI,IAAM,CAEV,KAAK1R,EACJA,EAAS,GAAIoD,EAEdpD,GAAOiS,gBAAgBP,EACvB1R,GAAOkW,QAAQlE,EAEf,OAAOhS,GAQD+uC,GAAA1xC,UAAA8Q,kBAAP,WAEC3Q,EAAAH,UAAM8Q,kBAAiB/R,KAAAU,K/C25SjB,I+Cx5SF64B,GAAc74B,KAAKsR,YAAY7F,CACnC,IAAIqtB,GAAc94B,KAAKsR,YAAY3F,EAAI3L,KAAKsR,YAAYvF,MACxD,IAAIgtB,GAAc/4B,KAAKsR,YAAYzF,CACnC,IAAImtB,GAAch5B,KAAKsR,YAAY7F,EAAIzL,KAAKsR,YAAYtC,KACxD,IAAIiqB,GAAcj5B,KAAKsR,YAAY3F,CACnC,IAAIutB,GAAcl5B,KAAKsR,YAAYzF,EAAI7L,KAAKsR,YAAYlG,KAExDpL,MAAKqyC,aAAa,GAAKxZ,CACvB74B,MAAKqyC,aAAa,GAAKvZ,CACvB94B,MAAKqyC,aAAa,GAAKtZ,CACvB/4B,MAAKqyC,aAAa,GAAKrZ,CACvBh5B,MAAKqyC,aAAa,GAAKvZ,CACvB94B,MAAKqyC,aAAa,GAAKtZ,CACvB/4B,MAAKqyC,aAAa,GAAKxZ,CACvB74B,MAAKqyC,aAAa,GAAKpZ,CACvBj5B,MAAKqyC,aAAa,GAAKtZ,CACvB/4B,MAAKqyC,aAAa,GAAKrZ,CACvBh5B,MAAKqyC,aAAa,IAAMpZ,CACxBj5B,MAAKqyC,aAAa,IAAMtZ,CACxB/4B,MAAKqyC,aAAa,IAAMxZ,CACxB74B,MAAKqyC,aAAa,IAAMvZ,CACxB94B,MAAKqyC,aAAa,IAAMnZ,CACxBl5B,MAAKqyC,aAAa,IAAMrZ,CACxBh5B,MAAKqyC,aAAa,IAAMvZ,CACxB94B,MAAKqyC,aAAa,IAAMnZ,CACxBl5B,MAAKqyC,aAAa,IAAMxZ,CACxB74B,MAAKqyC,aAAa,IAAMpZ,CACxBj5B,MAAKqyC,aAAa,IAAMnZ,CACxBl5B,MAAKqyC,aAAa,IAAMrZ,CACxBh5B,MAAKqyC,aAAa,IAAMpZ,CACxBj5B,MAAKqyC,aAAa,IAAMnZ,EAE1B,OAAA+Y,IA5K+BtzB,EA8KLlf,GAAAJ,QAAjB4yC,I/Cy5SNx1B,gCAAgCrb,UAAUsb,qCAAqCtb,UAAUyb,gCAAgCzb,UAAU0b,iDAAiD,iDAAiDyB,oCAAoC,oCAAoCtB,uCAAuC,uCAAuCm2B,qEAAqE,uEAAuEC,uCAAuC,SAAS90C,EAAQkB,EAAOJ,SAEnkBi0C,0CAA0C,SAAS/0C,EAAQkB,EAAOJ,GACxE,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgDtlTtB,IAAOnB,GAAKX,EAAgB,+BAE5B,IAAOogB,GAASpgB,EAAe,oCAC/B,IAAOoI,GAAUpI,EAAe,uCAIhC,IAAMg1C,GAAU,SAAA7yC,GAASX,EAAnBwzC,EAAU7yC,EAKf,SALK6yC,GAKOC,EAAsBC,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAEjC/yC,EAAApB,KAAAU,KAEAA,MAAKqH,WAAa,IAElBrH,MAAK0zC,YAAcF,CACnBxzC,MAAK2zC,aAAeF,CAGpBzzC,MAAKwK,YAAc7D,EAAWyuB,KAG/Bz0B,OAAAC,eAAW2yC,EAAAhzC,UAAA,chD8kTJM,IgD9kTP,WAEC,MAAOb,MAAK0zC,ahD+kTN7wC,IgD5kTP,SAAsBC,GAErB9C,KAAK0zC,YAAc5wC,GhD6kTb/B,WAAY,KACZC,aAAc,MgD3kTrBL,QAAAC,eAAW2yC,EAAAhzC,UAAA,ehD8kTJM,IgD9kTP,WAEC,MAAOb,MAAK2zC,chD+kTN9wC,IgD5kTP,SAAuBC,GAEtB9C,KAAK2zC,aAAe7wC,GhD6kTd/B,WAAY,KACZC,aAAc,MgD1kTduyC,GAAAhzC,UAAA8f,2BAAP,SAAkCC,EAAgBlK,EAAelT,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEhE,KAAM,IAAIhE,GAAM,wEAElB,OAAAq0C,IA3CyB50B,EA6CzBlf,GAAoBJ,QAAXk0C,IhD+kTN3Z,+BAA+Bx4B,UAAUmd,oCAAoC,oCAAoCtB,uCAAuC,yCAAyC22B,2CAA2C,SAASr1C,EAAQkB,EAAOJ,GACvQ,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiDpoTtB,IAAO2G,GAAazI,EAAc,wCAElC,IAAOoI,GAAUpI,EAAe,uCjDyoThC,IiDjoTMs1C,GAAW,SAAAnzC,GAASX,EAApB8zC,EAAWnzC,EAsIhB,SAtIKmzC,GAsIO7uC,EAAuB8uC,EAAwBC,EAAsB1yB,GAAA,GAAAA,QAAA,GAAoB,CAApBA,EAAA,EAEhF3gB,EAAApB,KAAAU,KAEAA,MAAKqH,WAAa,IAElBrH,MAAKgF,SAAWA,CAEhBhF,MAAKg0C,eAAiBF,CACtB9zC,MAAKi0C,aAAeF,CACpB/zC,MAAKk0C,eAAiB7yB,EAAU,EAGhCrhB,MAAKwK,YAAc7D,EAAW8D,iBAnI/B9J,OAAAC,eAAWizC,EAAAtzC,UAAA,YjDyoTJM,IiDzoTP,WAEC,MAAOb,MAAKkvC,WjD0oTNnuC,WAAY,KACZC,aAAc,MiDroTrBL,QAAAC,eAAWizC,EAAAtzC,UAAA,ajD2oTJM,IiD3oTP,WAEC,MAAOgzC,GAAY3yC,WjD4oTbH,WAAY,KACZC,aAAc,MiDvoTrBL,QAAAC,eAAWizC,EAAAtzC,UAAA,gBjD6oTJM,IiD7oTP,WAEC,MAAOb,MAAKg0C,gBjD8oTNjzC,WAAY,KACZC,aAAc,MiD5oTrBL,QAAAC,eAAWizC,EAAAtzC,UAAA,iBjD+oTJsC,IiD/oTP,SAAyBC,GAExB,GAAI9C,KAAKg0C,gBAAkBlxC,EAC1B,MAED9C,MAAKg0C,eAAiBlxC,CAEtB9C,MAAKm0C,0BjD8oTCpzC,WAAY,KACZC,aAAc,MiDzoTrBL,QAAAC,eAAWizC,EAAAtzC,UAAA,ejD+oTJM,IiD/oTP,WAEC,MAAOb,MAAKi0C,cjDgpTNpxC,IiD7oTP,SAAuBC,GAEtB,GAAI9C,KAAKi0C,cAAgBnxC,EACxB,MAED9C,MAAKi0C,aAAenxC,CAEpB9C,MAAKm0C,0BjD4oTCpzC,WAAY,KACZC,aAAc,MiDvoTrBL,QAAAC,eAAWizC,EAAAtzC,UAAA,YjD6oTJM,IiD7oTP,WAEC,MAAOb,MAAKokB,WjD8oTNvhB,IiD3oTP,SAAoBC,GAEnB,GAAI9C,KAAKgF,SACRhF,KAAKgF,SAASqf,aAAarkB,KAE5BA,MAAKokB,UAAYthB,CAEjB,IAAI9C,KAAKgF,SACRhF,KAAKgF,SAASsf,UAAUtkB,OjD0oTnBe,WAAY,KACZC,aAAc,MiDroTrBL,QAAAC,eAAWizC,EAAAtzC,UAAA,ajD2oTJM,IiD3oTP,WAEC,MAAOb,MAAKk0C,eAAe,GjD4oTrBrxC,IiDzoTP,SAAqBC,GAEpB,GAAI9C,KAAKk0C,gBAAkBpxC,EAC1B,MAED9C,MAAKk0C,eAAiBpxC,EAAM,EAE5B9C,MAAKm0C,0BjDwoTCpzC,WAAY,KACZC,aAAc,MiDnoTrBL,QAAAC,eAAWizC,EAAAtzC,UAAA,ejDyoTJM,IiDzoTP,WAEC,MAAOb,MAAKukB,cjD0oTN1hB,IiDvoTP,SAAuBC,GAEtB9C,KAAKukB,aAAezhB,GjDwoTd/B,WAAY,KACZC,aAAc,MiDpoTrBL,QAAAC,eAAWizC,EAAAtzC,UAAA,kBjD0oTJM,IiD1oTP,WAEC,MAAOb,MAAKovC,iBjD2oTNvsC,IiDxoTP,SAA0BC,GAEzB9C,KAAKovC,gBAAkBtsC,GjDyoTjB/B,WAAY,KACZC,aAAc,MiDhnTd6yC,GAAAtzC,UAAAU,QAAP,WAECjB,KAAKg0C,eAAiB,IACtBh0C,MAAKi0C,aAAe,KAMdJ,GAAAtzC,UAAA8Q,kBAAP,WAEC3Q,EAAAH,UAAM8Q,kBAAiB/R,KAAAU,KAEvBA,MAAKsR,YAAY7F,EAAI6L,KAAKohB,IAAI14B,KAAKg0C,eAAevoC,EAAGzL,KAAKi0C,aAAaxoC,EACvEzL,MAAKsR,YAAY3F,EAAI2L,KAAKohB,IAAI14B,KAAKg0C,eAAeroC,EAAG3L,KAAKi0C,aAAatoC,EACvE3L,MAAKsR,YAAYzF,EAAIyL,KAAKohB,IAAI14B,KAAKg0C,eAAenoC,EAAG7L,KAAKi0C,aAAapoC,EACvE7L,MAAKsR,YAAYtC,MAAQsI,KAAKuc,IAAI7zB,KAAKg0C,eAAevoC,EAAIzL,KAAKi0C,aAAaxoC,EAC5EzL,MAAKsR,YAAYvF,OAASuL,KAAKuc,IAAI7zB,KAAKg0C,eAAeroC,EAAI3L,KAAKi0C,aAAatoC,EAC7E3L,MAAKsR,YAAYlG,MAAQkM,KAAKuc,IAAI7zB,KAAKg0C,eAAenoC,EAAI7L,KAAKi0C,aAAapoC,GAGtEgoC,GAAAtzC,UAAAmR,qBAAP,WAEChR,EAAAH,UAAMmR,qBAAoBpS,KAAAU,KAE1BA,MAAKqR,mBAEL,IAAI+iC,IAAoBp0C,KAAKi0C,aAAaxoC,EAAIzL,KAAKg0C,eAAevoC,GAAG,CACrE,IAAI4oC,IAAqBr0C,KAAKi0C,aAAatoC,EAAI3L,KAAKg0C,eAAeroC,GAAG,CACtE,IAAI2oC,IAAoBt0C,KAAKi0C,aAAapoC,EAAI7L,KAAKg0C,eAAenoC,GAAG,CACrE7L,MAAK2R,eAAelG,EAAIzL,KAAKg0C,eAAevoC,EAAI2oC,CAChDp0C,MAAK2R,eAAehG,EAAI3L,KAAKg0C,eAAeroC,EAAI0oC,CAChDr0C,MAAK2R,eAAe9F,EAAI7L,KAAKg0C,eAAenoC,EAAIyoC,CAChDt0C,MAAK2R,eAAemjB,OAASxd,KAAKC,KAAK68B,EAAUA,EAAYC,EAAWA,EAAaC,EAAUA,GAMxFT,GAAAtzC,UAAA4zC,uBAAR,WAEC,GAAIlpC,GAAajL,KAAK0J,cAAcnK,MACpC,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,EAAKjM,IAC/BgB,KAAK0J,cAAc1K,GAAG0lB,qBAGjBmvB,GAAAtzC,UAAA0a,eAAP,SAAsBC,GAKrB,GAAIlb,KAAKmR,eACRnR,KAAKmR,eAAeC,YAErB8J,GAASs0B,uBAAuBxvC,MA1MnB6zC,GAAA3yC,UAAmB,qBA4MlC,OAAA2yC,IA9M0B7sC,EAgNLvH,GAAAJ,QAAZw0C,IjDwmTN5tC,wCAAwC,wCAAwCgX,uCAAuC,yCAAyCs3B,oCAAoC,SAASh2C,EAAQkB,EAAOJ,GAC/N,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkD30TtB,IAAOmG,GAAKjI,EAAgB,6BAC5B,IAAOkI,GAAQlI,EAAgB,gCAO/B,IAAO+e,GAAQ/e,EAAgB,mCAG/B,IAAO8e,GAAa9e,EAAc,0CAClC,IAAOkgB,GAAsBlgB,EAAY,uDACzC,IAAOi2C,GAAWj2C,EAAe,sCAGjC,IAAOsD,GAAgBtD,EAAc,4ClDy0TrC,IkDl0TMk2C,GAAI,SAAA/zC,GAASX,EAAb00C,EAAI/zC,EAgMT,SAhMK+zC,GAgMOC,EAAmB1vC,GAhMhC,GAAAy1B,GAAAz6B,IAgMgC,IAAAgF,QAAA,GAA4B,CAA5BA,EAAA,KAE9BtE,EAAApB,KAAAU,KAvLOA,MAAA6f,cAAwB,IACxB7f,MAAA20C,wBAAkC,IAOlC30C,MAAA40C,WAAmB,GAAIpuC,EAiL9BxG,MAAKqH,WAAa,IAElBrH,MAAK60C,WAAa,GAAIvyC,MAEtBtC,MAAK80C,iCAAmC,SAACj5B,GAAwB,MAAA4e,GAAKsa,wBAAwBl5B,GAC9F7b,MAAKg1C,4BAA8B,SAACn5B,GAAwB,MAAA4e,GAAKwa,mBAAmBp5B,GACpF7b,MAAKk1C,8BAAgC,SAACr5B,GAAwB,MAAA4e,GAAK0a,qBAAqBt5B,GAGxF7b,MAAK00C,SAAWA,GAAY,GAAIp3B,EAEhCtd,MAAKgF,SAAWA,EAxLjBrE,OAAAC,eAAW6zC,EAAAl0C,UAAA,YlDw0TJM,IkDx0TP,WAEC,MAAOb,MAAKkvC,WlDy0TNrsC,IkDt0TP,SAAoBC,GAEnB,GAAI9C,KAAKkvC,UACRlvC,KAAKkvC,UAAUkG,YAAYp1C,KAE5BA,MAAKkvC,UAAYpsC,CAEjB,IAAImI,GAAajL,KAAK60C,WAAWt1C,MACjC,IAAI81C,EAEJ,KAAK,GAAIr2C,GAAW,EAAGA,EAAIiM,IAAOjM,EAAG,CACpCq2C,EAAUr1C,KAAK60C,WAAW71C,EAG1B,IAAIq2C,EAAQrwC,SAAU,CACrBqwC,EAAQrwC,SAASqf,aAAagxB,EAC9BA,GAAQrwC,SAASsf,UAAU+wB,GAI5BA,EAAQ5wB,iCAGT,GAAIzkB,KAAKkvC,UACRlvC,KAAKkvC,UAAUoG,SAASt1C,OlDi0TnBe,WAAY,KACZC,aAAc,MkD5zTrBL,QAAAC,eAAW6zC,EAAAl0C,UAAA,alDk0TJM,IkDl0TP,WAEC,MAAO4zC,GAAKvzC,WlDm0TNH,WAAY,KACZC,aAAc,MkD9zTrBL,QAAAC,eAAW6zC,EAAAl0C,UAAA,gBlDo0TJM,IkDp0TP,WAEC,MAAOb,MAAK6f,elDq0TNhd,IkDl0TP,SAAwBC,GAEvB9C,KAAK6f,cAAgB/c,GlDm0Tf/B,WAAY,KACZC,aAAc,MkD9zTrBL,QAAAC,eAAW6zC,EAAAl0C,UAAA,YlDo0TJM,IkDp0TP,WAEC,GAAIb,KAAKmR,eACRnR,KAAKmR,eAAeC,YAErB,OAAOpR,MAAKu1C,WlDo0TN1yC,IkDj0TP,SAAoBC,GAEnB,GAAI9D,EAEJ,IAAIgB,KAAKu1C,UAAW,CACnBv1C,KAAKu1C,UAAUr+B,oBAAoBmG,EAAcW,eAAgBhe,KAAK80C,iCACtE90C,MAAKu1C,UAAUr+B,oBAAoBmG,EAAcK,mBAAoB1d,KAAKg1C,4BAC1Eh1C,MAAKu1C,UAAUr+B,oBAAoBmG,EAAcQ,qBAAsB7d,KAAKk1C,8BAE5E,KAAKl2C,EAAI,EAAGA,EAAIgB,KAAK60C,WAAWt1C,SAAUP,EACzCgB,KAAK60C,WAAW71C,GAAGiC,SAEpBjB,MAAK60C,WAAWt1C,OAAS,EAG1BS,KAAKu1C,UAAYzyC,CAEjB,IAAI9C,KAAKu1C,UAAW,CAEnBv1C,KAAKu1C,UAAUnmC,iBAAiBiO,EAAcW,eAAgBhe,KAAK80C,iCACnE90C,MAAKu1C,UAAUnmC,iBAAiBiO,EAAcK,mBAAoB1d,KAAKg1C,4BACvEh1C,MAAKu1C,UAAUnmC,iBAAiBiO,EAAcQ,qBAAsB7d,KAAKk1C,8BAEzE,IAAIM,GAAkCx1C,KAAKu1C,UAAUE,aAErD,KAAKz2C,EAAI,EAAGA,EAAIw2C,EAASj2C,SAAUP,EAClCgB,KAAK01C,WAAWF,EAASx2C,MlD2zTrB+B,WAAY,KACZC,aAAc,MkDrzTrBL,QAAAC,eAAW6zC,EAAAl0C,UAAA,YlD2zTJM,IkD3zTP,WAEC,MAAOb,MAAKokB,WlD4zTNvhB,IkDzzTP,SAAoBC,GAEnB,GAAIA,GAAS9C,KAAKokB,UACjB,MAED,IAAIplB,EACJ,IAAIiM,GAAajL,KAAK60C,WAAWt1C,MACjC,IAAI81C,EAEJ,KAAKr2C,EAAI,EAAGA,EAAIiM,EAAKjM,IACpB,GAAIgB,KAAKokB,YAAcixB,EAAUr1C,KAAK60C,WAAW71C,IAAIgG,UAAYhF,KAAKokB,UACrEpkB,KAAKokB,UAAUC,aAAagxB,EAE9Br1C,MAAKokB,UAAYthB,CAEjB,KAAK9D,EAAI,EAAGA,EAAIiM,EAAKjM,IACpB,GAAIgB,KAAKokB,YAAcixB,EAAUr1C,KAAK60C,WAAW71C,IAAIgG,UAAYhF,KAAKokB,UACrEpkB,KAAKokB,UAAUE,UAAU+wB,IlDszTrBt0C,WAAY,KACZC,aAAc,MkDjzTrBL,QAAAC,eAAW6zC,EAAAl0C,UAAA,0BlDuzTJM,IkDvzTP,WAEC,MAAOb,MAAK20C,yBlDwzTN9xC,IkDrzTP,SAAkCC,GAEjC9C,KAAK20C,wBAA0B7xC,GlDszTzB/B,WAAY,KACZC,aAAc,MkDhzTrBL,QAAAC,eAAW6zC,EAAAl0C,UAAA,alDuzTJM,IkDvzTP,WAKC,GAAIb,KAAKmR,eACRnR,KAAKmR,eAAeC,YAErB,OAAOpR,MAAK60C,YlDuzTN9zC,WAAY,KACZC,aAAc,MkDlzTrBL,QAAAC,eAAW6zC,EAAAl0C,UAAA,elDwzTJM,IkDxzTP,WAEC,MAAOb,MAAKukB,clDyzTN1hB,IkDtzTP,SAAuBC,GAEtB9C,KAAKukB,aAAezhB,GlDuzTd/B,WAAY,KACZC,aAAc,MkD1xTdyzC,GAAAl0C,UAAAo1C,oBAAP,WAEC31C,KAAK00C,SAAS9vC,oBAAoB5E,KAAK2Q,WACvC3Q,MAAK2Q,WAAWrG,WAMVmqC,GAAAl0C,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAO3B,KAAAU,KAEbA,MAAKgF,SAAW,IAChBhF,MAAK00C,SAAW,IAEhB,IAAI10C,KAAKkvC,UACRlvC,KAAKkvC,UAAUjuC,UAmBVwzC,GAAAl0C,UAAA0D,MAAP,WAEC,GAAIkM,GAAmB,GAAIskC,GAAKz0C,KAAKu1C,UAAWv1C,KAAKokB,UAErDpkB,MAAKoQ,OAAOD,EAEZ,OAAOA,GAGDskC,GAAAl0C,UAAA6P,OAAP,SAAcD,GAEbzP,EAAAH,UAAM6P,OAAM9Q,KAAAU,KAACmQ,EAEbA,GAAYukC,SAAW10C,KAAKu1C,SAC5BplC,GAAYnL,SAAWhF,KAAKokB,SAC5BjU,GAAYnG,aAAehK,KAAK6f,aAChC1P,GAAYylC,uBAAyB51C,KAAK20C,uBAEpC,IAAI1pC,GAAajL,KAAK60C,WAAWt1C,MACjC,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,IAAOjM,EACvCmR,EAAY0kC,WAAW71C,GAAGgG,SAAWhF,KAAK60C,WAAW71C,GAAG2lB,uBAEnD,IAAI3kB,KAAKkvC,UACd/+B,EAAYgU,SAAWnkB,KAAKkvC,UAAUjrC,QASjCwwC,GAAAl0C,UAAAs1C,0BAAP,SAAiClwC,GAEhC,MAAO3F,MAAK60C,WAAW70C,KAAKu1C,UAAUE,cAAc37B,QAAQnU,IAQtD8uC,GAAAl0C,UAAA8Q,kBAAP,WAEC3Q,EAAAH,UAAM8Q,kBAAiB/R,KAAAU,KAEvB,IAAIw1C,GAAkCx1C,KAAKu1C,UAAUE,aACrD,IAAIxqC,GAAauqC,EAASj2C,MAC1B,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,EAAKjM,IAC/BgB,KAAKsR,YAAckkC,EAASx2C,GAAGiE,aAAajD,KAAKsR,aAI5CmjC,GAAAl0C,UAAAmR,qBAAP,WAEChR,EAAAH,UAAMmR,qBAAoBpS,KAAAU,KAE1B,IAAI0S,GAAU1S,KAAKmL,QAEnB,KAAKnL,KAAK81C,QACT91C,KAAK81C,QAAU,GAAIrvC,EAEpBzG,MAAK81C,QAAQrqC,EAAIiH,EAAIjH,EAAIiH,EAAI1D,MAAM,CACnChP,MAAK81C,QAAQnqC,EAAI+G,EAAI/G,EAAI+G,EAAI3G,OAAO,CACpC/L,MAAK81C,QAAQjqC,EAAI6G,EAAI7G,EAAI6G,EAAItH,MAAM,CAEnC,IAAIoqC,GAAkCx1C,KAAKu1C,UAAUE,aACrD,IAAIxqC,GAAauqC,EAASj2C,MAC1B,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,EAAKjM,IAC/BgB,KAAK2R,eAAiB6jC,EAASx2C,GAAGoE,gBAAgBpD,KAAK81C,QAAS91C,KAAK2R,gBAQ/D8iC,GAAAl0C,UAAAw0C,wBAAR,SAAgCl5B,GAE/B7b,KAAKgL,qBAQEypC,GAAAl0C,UAAA00C,mBAAR,SAA2Bp5B,GAE1B7b,KAAK01C,WAAW75B,EAAMlW,aAQf8uC,GAAAl0C,UAAA40C,qBAAR,SAA6Bt5B,GAE5B,GAAIw5B,EACJ,IAAIt3B,GAA0BlC,EAAMlW,WACpC,IAAIsF,GAAajL,KAAK60C,WAAWt1C,MACjC,IAAIP,EAMJ,KAAKA,EAAI,EAAGA,EAAIiM,IAAOjM,EAAG,CAEzBq2C,EAAUr1C,KAAK60C,WAAW71C,EAE1B,IAAIq2C,EAAQ1vC,aAAeoY,EAAS,CACnCs3B,EAAQp0C,SAERjB,MAAK60C,WAAW96B,OAAO/a,EAAG,EAE1B,UAIAiM,CACF,MAAOjM,EAAIiM,IAAOjM,EACjBgB,KAAK60C,WAAW71C,GAAGilB,QAAUjlB,EAQvBy1C,GAAAl0C,UAAAm1C,WAAR,SAAmB/vC,GAElB,GAAIowC,GAA6BvB,EAAYwB,SAASrwC,EAEtD,IAAI0vC,GAAmB,GAAIU,GAAapwC,EAAa3F,KAAM,KAC3D,IAAIiL,GAAajL,KAAK60C,WAAWt1C,MAEjC81C,GAAQpxB,QAAUhZ,CAElBjL,MAAK60C,WAAW5pC,GAAOoqC,CAEvBr1C,MAAKgL,qBAYCypC,GAAAl0C,UAAAuE,gBAAP,SAAuBI,EAAkC8U,GAExDha,KAAK+X,qBAAqBk+B,gBAAkB,IAE5C,IAAIZ,EAEJ,IAAIpqC,GAAajL,KAAKk2C,UAAU32C,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,IAAOjM,EAAG,CACpCq2C,EAAUr1C,KAAKk2C,UAAUl3C,EAEzB,IAAIq2C,EAAQ1vC,YAAYb,gBAAgB9E,KAAKoN,kBAAmBioC,EAAQrwC,SAAUhF,KAAK+X,qBAAsB7S,GAA4B,CACxIA,EAA4BlF,KAAK+X,qBAAqB8rB,gBAEtD7jC,MAAK+X,qBAAqBk+B,gBAAkBZ,CAE5C,KAAKr7B,EACJ,MAAO,OAIV,MAAOha,MAAK+X,qBAAqBk+B,iBAAmB,KAS9CxB,GAAAl0C,UAAA0a,eAAP,SAAsBC,GAKrB,GAAIlb,KAAKmR,eACRnR,KAAKmR,eAAeC,YAErB,IAAInG,GAAsBjL,KAAK60C,WAAWt1C,MAC1C,KAAK,GAAIP,GAAoB,EAAGA,EAAIiM,EAAKjM,IACxCkc,EAASs0B,uBAAuBxvC,KAAK60C,WAAW71C,IAG3Cy1C,GAAAl0C,UAAA41C,iCAAP,WAEC,GAAIlrC,GAAajL,KAAK60C,WAAWt1C,MACjC,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,IAAOjM,EACjCgB,KAAK60C,WAAW71C,GAAGylB,iCAIdgwB,GAAAl0C,UAAAg5B,sBAAP,SAA6B9tB,EAAUE,EAAUyI,EAAmBilB,GAEnE,GAAGr5B,KAAKu1C,WAAav1C,KAAKu1C,UAAUE,cAAcl2C,OAAQ,CACzDS,KAAK40C,WAAW9iC,MAAMrG,EAAEE,EACxB,IAAIyqC,GAAcp2C,KAAK4R,cAAc5R,KAAK40C,WAAY50C,KAAK40C,WAC3D,IAAIliC,EAGJ,MAAKA,EAAM1S,KAAKmL,UAAUsrB,SAAS2f,EAAM3qC,EAAG2qC,EAAMzqC,EAAG,GACpD,MAAO,MAGR,KAAKyI,EACJ,MAAO,KlD+tTC,IkD5tTLqhC,GAAuCz1C,KAAKu1C,UAAUE,aAC1D,IAAIY,GAA4BZ,EAAcl2C,MAC9C,KAAI,GAAIP,GAAW,EAAGA,EAAIq3C,EAAoBr3C,IAC7C,GAAI6C,EAAiBy0C,qBAAqBF,EAAM3qC,EAAG2qC,EAAMzqC,EAAG,EAAG+G,EAAwB+iC,EAAcz2C,IACpG,MAAO,MAGV,MAAO0B,GAAAH,UAAMg5B,sBAAqBj6B,KAAAU,KAACyL,EAAGE,EAAGyI,EAAWilB,GAG9Cob,GAAAl0C,UAAAqY,iBAAP,WAEClY,EAAAH,UAAMqY,iBAAgBtZ,KAAAU,KAEtB,IAAIiL,GAAajL,KAAK60C,WAAWt1C,MACjC,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,EAAKjM,IAC/BgB,KAAK60C,WAAW71C,GAAG4Z,mBAneP67B,GAAAvzC,UAAmB,cAqelC,OAAAuzC,IAvemBh2B,EAyeLhf,GAAAJ,QAALo1C,IlD2tTN93B,6BAA6Bvb,UAAUyb,gCAAgCzb,UAAUgc,mCAAmC,mCAAmCoD,uDAAuD,uDAAuDvC,0CAA0C,0CAA0Cs4B,sCAAsC,sCAAsChxC,4CAA4C,8CAA8CixC,yCAAyC,SAASj4C,EAAQkB,EAAOJ,GACnkB,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmDnuUtB,IAAOo2C,GAAKl4C,EAAW,+BAIvB,IAAOkgB,GAAsBlgB,EAAW,uDAIxC,IAAOm4C,GAASn4C,EAAW,wCAE3B,IAAOo4C,GAAUp4C,EAAyB,uCAG1C,IAAOumB,GAAQvmB,EAA2B,mCAC1C,IAAOsmB,GAAkBtmB,EAAiB,iDAE1C,IAAMq4C,GAAS,SAAAl2C,GAASX,EAAlB62C,EAASl2C,EAwCX,SAxCEk2C,GAwCUC,GAxChB,GAAApc,GAAAz6B,IAwCgB,IAAA62C,QAAA,GAAwB,CAAxBA,EAAA,KAERn2C,EAAApB,KAAAU,KApCIA,MAAA82C,UAAoB,KAMpB92C,MAAAg/B,MAAe,CACfh/B,MAAA+2C,oBAA6B,CAE7B/2C,MAAAg3C,WAAqB,IAKrBh3C,MAAAi3C,QAAkB,IAElBj3C,MAAAk3C,sBACAl3C,MAAAm3C,oBACAn3C,MAAAo3C,oBAuEDp3C,MAAAq3C,KAAe,IAgBfr3C,MAAA+nB,0BAAmC,CAnEtC/nB,MAAKs3C,YAAc,GAAIb,GAAMA,EAAMc,YAEnCv3C,MAAKw3C,sBAAwB,IAE7Bx3C,MAAKy3C,aAAe,SAAC57B,GAAqB,MAAA4e,GAAK/S,kBAAoB,EACnE1nB,MAAK03C,YAAc,SAAC77B,GAAqB,MAAA4e,GAAK/S,kBAAoB,EAClE1nB,MAAK23C,aAAe,SAAC97B,GAAqB,MAAA4e,GAAK/S,kBAAoB,EACnE1nB,MAAK43C,WAAa,SAAC/7B,GAAqB,MAAA4e,GAAK/S,kBAAoB+S,EAAK/S,mBAAqB,EAAG,EAAI;CAElG1nB,MAAK63C,UAAYhB,GAAY,GAAI/xB,GAvBxCnkB,OAAAC,eAAWg2C,EAAAr2C,UAAA,WnDguUJM,ImDhuUP,WAEC,MAA2Bb,MAAK0K,UnDiuU1B7H,ImD9tUP,SAAmBC,GAElB9C,KAAK0K,SAAW5H,GnD+tUV/B,WAAY,KACZC,aAAc,MmD5sUX41C,GAAAr2C,UAAAu3C,iBAAP,WAEI,GAAG93C,KAAK62C,SAAU,CACd,IAAK,GAAIntB,KAAO1pB,MAAKk3C,oBAAqB,CACtC,GAAIl3C,KAAKk3C,oBAAoBxtB,IAAQ,KAAM,CACvC,GAAI1pB,KAAKk3C,oBAAoBxtB,GAAKquB,QAAQrB,GAAY,CACtC12C,KAAKk3C,oBAAoBxtB,GAAMsuB,KAAmBh4C,KAAK62C,SAAS5vB,2BAA2ByC,GAAMsuB,SAE5G,IAAIh4C,KAAKk3C,oBAAoBxtB,GAAKquB,QAAQnB,GAAY,CAC3C52C,KAAKk3C,oBAAoBxtB,GAAMouB,uBAO/Dn3C,QAAAC,eAAWg2C,EAAAr2C,UAAA,UnD6sUPM,ImD7sUJ,WAEI,MAAOb,MAAKi3C,SnD8sUZp0C,ImD5sUJ,SAAkBC,GAEd9C,KAAKi3C,QAAUn0C,GnD6sUf/B,WAAY,KACZC,aAAc,MmD3sUlBL,QAAAC,eAAWg2C,EAAAr2C,UAAA,YnD8sUPM,ImD9sUJ,WAEI,MAAOb,MAAK63C,WnD+sUZh1C,ImD5sUJ,SAAoBC,GAEhB9C,KAAK63C,UAAY/0C,GnD6sUjB/B,WAAY,KACZC,aAAc,MmDtsUlBL,QAAAC,eAAWg2C,EAAAr2C,UAAA,anDysUPM,ImDzsUJ,WAEI,MAAOb,MAAK63C,UAAUI,WnD0sUtBl3C,WAAY,KACZC,aAAc,MmDxsUX41C,GAAAr2C,UAAAgnB,YAAP,SAAmBC,GAGfxnB,KAAK63C,UAAUtwB,YAAYvnB,KAAMwnB,GAQ9BovB,GAAAr2C,UAAA23C,WAAP,WAEIl4C,KAAKm4C,aAAe,KAEpB,IAAI1vB,EACJ,KAAK,GAAIzpB,GAAWgB,KAAKkc,YAAc,EAAGld,GAAK,EAAGA,IAAK,CACnDypB,EAAQzoB,KAAKupB,UAAUvqB,EACvB,IAAGypB,EAAMsvB,QAAQnB,GACAnuB,EAAOyvB,cAGzBtB,GAAAr2C,UAAAyV,MAAP,WAEItV,EAAAH,UAAMyV,MAAK1W,KAAAU,KAGXA,MAAKg/B,MAAQ,CAEb,IAAGh/B,KAAK4Q,QACJ5Q,KAAK4Q,QAAQwnC,gBAEjBp4C,MAAKg3C,WAAa,IAElBh3C,MAAK+2C,oBAAsB,CAC3B/2C,MAAK+nB,0BAA4B,CACjC,KAAK,GAAI/oB,GAAWgB,KAAKkc,YAAc,EAAGld,GAAK,EAAGA,IAC9CgB,KAAK0oB,cAAc1pB,EAEvBgB,MAAKm4C,aAAe,IAEpB,IAAIn4C,KAAK63C,UAAUI,UAAW,CAC1Bj4C,KAAK+2C,mBAAqB,CAC1B/2C,MAAK63C,UAAU1vB,mBAAmBnoB,KAAM,KAAM,OAK/C42C,GAAAr2C,UAAAooB,gBAAP,WAEI3oB,KAAKm3C,qBAMFP,GAAAr2C,UAAA2nB,sBAAP,SAA6BplB,GACzB9C,KAAKm4C,aAAe,IACpBn4C,MAAK+2C,mBAAqBj0C,EAK9BnC,QAAAC,eAAWg2C,EAAAr2C,UAAA,qBnDurUPM,ImDvrUJ,WAEI,MAAOb,MAAK+2C,oBnDwrUZl0C,ImDrrUJ,SAA6BC,GAEzB,GAAI9C,KAAK+2C,oBAAsBj0C,EAC3B,MAEJ,IAAG9C,KAAK63C,UAAUI,UAAW,CACzBn1C,EAAQwU,KAAKgK,MAAMxe,EAEnB,IAAI8kB,GAAsB,KAE1B,IAAI9kB,EAAQ,EAAG,CACXA,EAAQ,MACL,IAAIA,GAAS9C,KAAK63C,UAAUI,UAAW,CAC1Cn1C,EAAQ9C,KAAK63C,UAAUI,UAAY,CACnCrwB,GAAY,KAIhB5nB,KAAKm4C,aAAe,IAGpBn4C,MAAK63C,UAAUlwB,UAAU3nB,KAAM8C,EAAO8kB,GAG1C5nB,KAAK+2C,mBAAqBj0C,GnDirU1B/B,WAAY,KACZC,aAAc,MmD/qUX41C,GAAAr2C,UAAA2rB,mBAAP,WAEIlsB,KAAK82C,UAAY,IAEjB92C,MAAKm9B,MAELn9B,MAAKoP,iBAAiBunC,EAAW0B,WAAYr4C,KAAKy3C,aAClDz3C,MAAKoP,iBAAiBunC,EAAW2B,UAAWt4C,KAAK03C,YACjD13C,MAAKoP,iBAAiBunC,EAAW4B,WAAYv4C,KAAK23C,aAClD33C,MAAKoP,iBAAiBunC,EAAW6B,SAAUx4C,KAAK43C,YAG7ChB,GAAAr2C,UAAAk4C,sBAAP,WAEIz4C,KAAKkX,oBAAoBy/B,EAAW0B,WAAYr4C,KAAKy3C,aACrDz3C,MAAKkX,oBAAoBy/B,EAAW2B,UAAWt4C,KAAK03C,YACpD13C,MAAKkX,oBAAoBy/B,EAAW4B,WAAYv4C,KAAK23C,aACrD33C,MAAKkX,oBAAoBy/B,EAAW6B,SAAUx4C,KAAK43C,YAIhDhB,GAAAr2C,UAAAqqB,oBAAP,SAA2B8tB,GAEvB,MAAO14C,MAAKo3C,kBAAkBsB,GAG3B9B,GAAAr2C,UAAAsoB,mBAAP,WAEI,MAAO7oB,MAAKm3C,kBAGTP,GAAAr2C,UAAAopB,gBAAP,SAAuBlB,EAAqBrd,EAAc8qB,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAGtDzN,EAAM+uB,sBAAwB,IAE9B/uB,GAAMzS,OAENtV,GAAAH,UAAMopB,gBAAerqB,KAAAU,KAACyoB,EAAOrd,EAAO8qB,EAEpCl2B,MAAKm3C,kBAAkB/rC,GAASqd,EAAMlhB,UAEtCvH,MAAKo3C,kBAAkB3uB,EAAMlhB,YAAckhB,CAE3C,OAAOA,GAGJmuB,GAAAr2C,UAAA41B,sBAAP,SAA6Btc,GAEzB,GAAI4O,GAAsBzoB,KAAKupB,UAAU1P,EAGzC,IAAI7Z,KAAKm3C,kBAAkB1uB,EAAMjhB,WAAaihB,EAAMlhB,iBACzCvH,MAAKm3C,kBAAkB1uB,EAAMjhB,gBAEjCxH,MAAKo3C,kBAAkB3uB,EAAMlhB,WAEpCkhB,GAAMlhB,YAAc,CAEpB,IAAGkhB,EAAM7X,QACL6X,EAAM7X,QAAQwnC,gBAElBp4C,MAAK4Q,QAAQ+nC,uBAAuBlwB,EAEpC,OAAO/nB,GAAAH,UAAM41B,sBAAqB72B,KAAAU,KAAC6Z,GAGvClZ,QAAAC,eAAWg2C,EAAAr2C,UAAA,anDypUPM,ImDzpUJ,WAEI,MAAO+1C,GAAU11C,WnD0pUjBH,WAAY,KACZC,aAAc,MmDrpUX41C,GAAAr2C,UAAAq4C,KAAP,WAEI54C,KAAKg3C,WAAa,KAMfJ,GAAAr2C,UAAA2Z,OAAP,WAEIla,KAAK64C,cAGLh0B,GAAmBi0B,eAGnB94C,MAAKkN,cAAclN,KAAKs3C,YAGxBzyB,GAAmBi0B,eAGnBj0B,GAAmBk0B,mBAGnBl0B,GAAmBi0B,eAEnB94C,MAAKk4C,aAGFtB,GAAAr2C,UAAA6mB,0BAAP,SAAiCvjB,GAE7B,IAAK7D,KAAKk3C,oBAAoBrzC,GAC1B7D,KAAKk3C,oBAAoBrzC,GAAM7D,KAAK63C,UAAUzwB,0BAA0BvjB,EAE5E,OAAO7D,MAAKk3C,oBAAoBrzC,GAO7B+yC,GAAAr2C,UAAA48B,KAAP,WAEIn9B,KAAKg3C,WAAa,MAGfJ,GAAAr2C,UAAA0D,MAAP,WAEI,GAAIkM,GAAwB,GAAIymC,GAAU52C,KAAK63C,UAE/C73C,MAAKoQ,OAAOD,EAEZ,OAAOA,GAGJymC,GAAAr2C,UAAA6P,OAAP,SAAcD,GAEVzP,EAAAH,UAAM6P,OAAM9Q,KAAAU,KAACmQ,EAEbA,GAAY0mC,SAAW72C,KAAK63C,SAC5B1nC,GAAYknC,KAAOr3C,KAAKq3C,KAGrBT,GAAAr2C,UAAAs4C,aAAP,SAAoBG,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,MAEhB,GAAIf,GAAmBj4C,KAAK63C,UAAUI,SACtC,IAAGA,EAAW,CACV,IAAMj4C,KAAKg3C,aAAeh3C,KAAKm4C,cAAiBn4C,KAAK+2C,qBAAuB,KAAO/2C,KAAK+2C,oBAAsBkB,EAAY,GAAKj4C,KAAKq3C,MAAO,CACvIr3C,KAAK+2C,oBACL,IAAI/2C,KAAK+2C,oBAAsBkB,EAAW,CACtCj4C,KAAK0nB,kBAAoB,MACtB,CACH1nB,KAAK63C,UAAU1vB,mBAAmBnoB,OAI1C,IAAKg5C,EAAc,CACf,GAAI/tC,GAAajL,KAAKkc,WACtB,IAAIuM,EACJ,KAAK,GAAIzpB,GAAW,EAAGA,EAAKiM,IAAOjM,EAAG,CAClCypB,EAAQzoB,KAAKupB,UAAUvqB,EAEvB,IAAIypB,EAAMsvB,QAAQnB,GACDnuB,EAAOowB,iBAKpC74C,KAAKm4C,aAAe,MAIxBvB,GAAAr2C,UAAA04C,aAAA,SAAa7tC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAETpL,KAAKk5C,mBAAmB9tC,EAAOpL,KAE/B,IAAIiL,GAAMjL,KAAKkc,WACf,IAAIuM,EACJ,KAAK,GAAIzpB,GAAW,EAAGA,EAAIiM,EAAKjM,IAAK,CACjCypB,EAAQzoB,KAAKupB,UAAUvqB,EAEvB,IAAIypB,EAAMsvB,QAAQnB,GACDnuB,EAAOwwB,aAAa7tC,EAAQ,OAEzCpL,MAAKk5C,mBAAmB9tC,EAAQ,EAAGqd,IAI/CmuB,GAAAr2C,UAAA24C,mBAAA,SAAmB9tC,EAAclI,GAE7B,GAAImjB,GAAM,EACV,KAAK,GAAIrnB,GAAI,EAAGA,EAAIoM,IAASpM,EACzBqnB,GAAO,IAEXA,IAAO,IAAMnjB,EAAOqN,KAAO,MAAQrN,EAAOW,EAC1Cs1C,SAAQC,IAAI/yB,GAGTuwB,GAAAr2C,UAAAqY,iBAAP,WAGI,IAAK,GAAI8Q,KAAO1pB,MAAKk3C,oBAAqB,CACtC,GAAImC,GAAyBr5C,KAAKk3C,oBAAoBxtB,EAGtD,IAAI2vB,EAAS9oC,MAAQ,GAAI,CACrB8oC,EAASp4C,gBACFjB,MAAKk3C,oBAAoBxtB,OAC7B,CACH2vB,EAASzgC,oBAIjBlY,EAAAH,UAAMqY,iBAAgBtZ,KAAAU,MApZZ42C,GAAA11C,UAAmB,mBAsZrC,OAAA01C,IAxZwBn4B,EAyZLhf,GAAAJ,QAAVu3C,InD2nUN0C,+BAA+Bl4C,UAAUwjB,mCAAmC,mCAAmCpE,uDAAuD,uDAAuD+4B,wCAAwC,wCAAwCC,uCAAuC,uCAAuCltB,iDAAiD,mDAAmDmtB,0CAA0C,SAASl7C,EAAQkB,EAAOJ,GACpiB,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoDxiVtB,IAAOiG,GAAQ/H,EAAgB,gCAC/B,IAAOgI,GAAahI,EAAc,qCAClC,IAAOkI,GAAQlI,EAAgB,gCAE/B,IAAOogB,GAASpgB,EAAe,oCAC/B,IAAOoI,GAAUpI,EAAe,uCAGhC,IAAOm7C,GAAmBn7C,EAAa,iEAEvC,IAAMo7C,GAAU,SAAAj5C,GAASX,EAAnB45C,EAAUj5C,EAMf,SANKi5C,KAQJj5C,EAAApB,KAAAU,KANMA,MAAA45C,SAAkB,GAClB55C,MAAA65C,UAAmB,GAOzB75C,MAAKqH,WAAa,IAElBrH,MAAK85C,gBAAkB,GAAG95C,KAAK65C,UAAU75C,KAAK65C,UAAY75C,KAAK45C,SAAS55C,KAAK45C,SAG7E55C,MAAKwK,YAAc7D,EAAWwuB,OAGxBwkB,EAAAp5C,UAAAwf,oBAAP,WAEC,MAAO,IAAI25B,GAGZ/4C,QAAAC,eAAW+4C,EAAAp5C,UAAA,UpD8hVJM,IoD9hVP,WAEC,MAAOb,MAAK45C,UpD+hVN/2C,IoD5hVP,SAAkBC,GAEjB9C,KAAK45C,SAAW92C,CAEhB,IAAI9C,KAAK45C,SAAW,EAAG,CACtB55C,KAAK45C,SAAW,MACV,IAAI55C,KAAK45C,SAAW55C,KAAK65C,UAAW,CAC1C75C,KAAK65C,UAAY75C,KAAK45C,QACtB55C,MAAKgL,qBAENhL,KAAK85C,gBAAkB,GAAI95C,KAAK65C,UAAU75C,KAAK65C,UAAY75C,KAAK45C,SAAS55C,KAAK45C,WpD6hVxE74C,WAAY,KACZC,aAAc,MoD3hVd24C,GAAAp5C,UAAAw5C,eAAP,WAEC,MAAO/5C,MAAK85C,gBAGbn5C,QAAAC,eAAW+4C,EAAAp5C,UAAA,WpD4hVJM,IoD5hVP,WAEC,MAAOb,MAAK65C,WpD6hVNh3C,IoD1hVP,SAAmBC,GAElB9C,KAAK65C,UAAY/2C,CAEjB,IAAI9C,KAAK65C,UAAY,EACpB75C,KAAK65C,UAAY,CAElB,IAAI75C,KAAK65C,UAAY75C,KAAK45C,SACzB55C,KAAK45C,SAAW55C,KAAK65C,SAEtB75C,MAAK85C,gBAAkB,GAAI95C,KAAK65C,UAAU75C,KAAK65C,UAAY75C,KAAK45C,SAAS55C,KAAK45C,SAC9E55C,MAAKgL,sBpDwhVCjK,WAAY,KACZC,aAAc,MoDthVd24C,GAAAp5C,UAAAmR,qBAAP,WAEChR,EAAAH,UAAMmR,qBAAoBpS,KAAAU,KAE1BA,MAAK2R,eAAemjB,OAAS90B,KAAK65C,UAG5BF,GAAAp5C,UAAA8f,2BAAP,SAAkCC,EAAgBlK,EAAelT,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEhE,GAAI0R,GAAmBrO,EAAc0O,kBACrC,IAAIC,GAAa,GAAI5O,EAGrB4O,GAAE5I,SAASgU,EAAOnK,wBAAwBC,GAC1ClB,GAAEu8B,OAAOzxC,KAAKmM,SAASqF,sBACvBxR,MAAKuU,OAAOW,EAAEjD,SAEdiD,GAAE5I,SAASgU,EAAOnK,wBAAwBC,GAC1ClB,GAAEu8B,OAAOzxC,KAAKwR,sBAEd,IAAIkB,GAAU4N,EAAOnV,QACrB,IAAI6uC,GAAc9kC,EAAEozB,qBAAqB,GAAI7hC,GAASiM,EAAIC,KAAMD,EAAIG,OAAQH,EAAIunC,OAChF,IAAIC,GAAchlC,EAAEozB,qBAAqB,GAAI7hC,GAASiM,EAAIwB,MAAOxB,EAAIE,IAAKF,EAAIynC,MAC9E,IAAIC,GAAYJ,EAAGvuC,EAAEuuC,EAAGvuC,EAAIuuC,EAAGruC,EAAEquC,EAAGruC,EAAIquC,EAAGnuC,EAAEmuC,EAAGnuC,CAChD,IAAIwuC,GAAYH,EAAGzuC,EAAEyuC,EAAGzuC,EAAIyuC,EAAGvuC,EAAEuuC,EAAGvuC,EAAIuuC,EAAGruC,EAAEquC,EAAGruC,CAChD,IAAI5L,GAAWqX,KAAKC,KAAK6iC,EAAKC,EAAID,EAAKC,EACvC,IAAItH,EACJ,IAAIC,EAEJ,IAAInnC,GAAWqJ,EAAEhG,QAAQ,GACzB6jC,GAAOlnC,EAAI5L,CACX+yC,GAAOnnC,EAAI5L,CAEX2U,GAAI,GAAKA,EAAI,GAAKm+B,EAAK9yC,CACvB2U,GAAI,IAAMo+B,GAAMA,EAAOD,EACvBn+B,GAAI,IAAM,CACVA,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAAM,CACtGA,GAAI,KAAOm+B,EAAKn+B,EAAI,GAEpB,KAAK1R,EACJA,EAAS,GAAIoD,EAEdpD,GAAOiS,gBAAgBP,EACvB1R,GAAOkW,QAAQlE,EAEf,OAAOhS,GAET,OAAAy2C,IAhHyBh7B,EAkHLlf,GAAAJ,QAAXs6C,IpD+gVNl9B,gCAAgCrb,UAAUsb,qCAAqCtb,UAAUyb,gCAAgCzb,UAAUmd,oCAAoC,oCAAoCtB,uCAAuC,uCAAuCq9B,iEAAiE,mEAAmEC,qCAAqC,SAASh8C,EAAQkB,EAAOJ,GAC7d,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqDjpVtB,IAAO2G,GAAazI,EAAc,wCrDkqVlC,IqDjpVMi8C,GAAK,SAAA95C,GAASX,EAAdy6C,EAAK95C,EAgBV,SAhBK85C,KAkBJ95C,EAAApB,KAAAU,MAVDW,OAAAC,eAAI45C,EAAAj6C,UAAA,YrDspVGM,IqDtpVP,WAEC,MAAOb,MAAKy6C,WrDupVN15C,WAAY,KACZC,aAAc,MqD7oVdw5C,GAAAj6C,UAAA0D,MAAP,WAEC,GAAIA,GAAc,GAAIu2C,EACtBv2C,GAAMoJ,MAAQrN,KAAKqN,KACnBpJ,GAAM0M,WAAa3Q,KAAK2Q,UACxB1M,GAAMsM,KAAOA,IACbtM,GAAM6K,SAAW9O,KAAK8O,QACtB7K,GAAMyM,MAAQ1Q,KAAK0Q,MAAO1Q,KAAK0Q,MAAMsL,SAAW,IAChD/X,GAAMw2C,UAAYz6C,KAAKy6C,SACvB,OAAOx2C,GAET,OAAAu2C,IAhCoBxzC,EAkCLvH,GAAAJ,QAANm7C,IrDgpVNv0C,wCAAwC,0CAA0Cy0C,sCAAsC,SAASn8C,EAAQkB,EAAOJ,GACnJ,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsDxsVtB,IAAOs6C,GAASp8C,EAAe,iCAO/B,IAAOyI,GAAazI,EAAc,wCAGlC,IAAOoI,GAAUpI,EAAe,uCtDwsVhC,IsD3rVMq8C,GAAM,SAAAl6C,GAASX,EAAf66C,EAAMl6C,EA4MX,SA5MKk6C,GA4MOC,GAAA,GAAAA,QAAA,GAAgC,CAAhCA,EAAA,KAEXn6C,EAAApB,KAAAU,KAzMMA,MAAA86C,iBAA0B,CAG1B96C,MAAA+6C,YAAqBJ,EAAUrN,MAC9BttC,MAAAg7C,SAA0B,GAAI14C,MAC9BtC,MAAAkkB,aAAkC,GAAI5hB,MAItCtC,MAAAi7C,QAAkB,KAClBj7C,MAAAk7C,QAAkB,IAiMzBl7C,MAAKqH,WAAa,IAClBrH,MAAKm7C,QAAU,GAAI74C,OAAwBtC,KAE3CA,MAAK66C,QAAUA,CAGf76C,MAAKwK,YAAc7D,EAAWyuB,KA9L/Bz0B,OAAAC,eAAWg6C,EAAAr6C,UAAA,kBtD+rVJM,IsD/rVP,WAEC,MAAOb,MAAK86C,kBtDgsVNj4C,IsD7rVP,SAA0BC,GAEzB,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAI9C,KAAK86C,kBAAoBh4C,EAC5B,MAED9C,MAAK86C,iBAAmBh4C,CAExB9C,MAAKo7C,uBtD2rVCr6C,WAAY,KACZC,aAAc,MsDtrVrBL,QAAAC,eAAWg6C,EAAAr6C,UAAA,UtD4rVJM,IsD5rVP,WAEC,MAAOb,MAAKi7C,StD6rVNp4C,IsD1rVP,SAAkBC,GAEjB,GAAI9C,KAAKi7C,SAAWn4C,EACnB,MAED9C,MAAKi7C,QAAUn4C,CAEf9C,MAAKo7C,uBtDyrVCr6C,WAAY,KACZC,aAAc,MsDprVrBL,QAAAC,eAAWg6C,EAAAr6C,UAAA,UtD0rVJM,IsD1rVP,WAEC,MAAOb,MAAKk7C,StD2rVNr4C,IsDxrVP,SAAkBC,GAEjB,GAAI9C,KAAKk7C,SAAWp4C,EACnB,MAED9C,MAAKk7C,QAAUp4C,CAEf9C,MAAKo7C,uBtDurVCr6C,WAAY,KACZC,aAAc,MsD/qVrBL,QAAAC,eAAWg6C,EAAAr6C,UAAA,etDwrVJM,IsDxrVP,WAEC,MAAOb,MAAKq7C,etDyrVNt6C,WAAY,KACZC,aAAc,MsDprVrBL,QAAAC,eAAWg6C,EAAAr6C,UAAA,gBtD0rVJM,IsD1rVP,WAEC,MAAOb,MAAKs7C,etD2rVNv6C,WAAY,KACZC,aAAc,MsD/qVrBL,QAAAC,eAAWg6C,EAAAr6C,UAAA,atD4rVJM,IsD5rVP,WAEC,MAAOb,MAAK+6C,atD6rVNl4C,IsD1rVP,SAAqBC,GAEpB,GAAI9C,KAAK+6C,aAAej4C,EACvB,MAED9C,MAAK+6C,YAAcj4C,CAEnB9C,MAAKu7C,sBtDyrVCx6C,WAAY,KACZC,aAAc,MsDvrVd45C,GAAAr6C,UAAAg7C,mBAAP,WAEC,GAAItwC,GAAajL,KAAKg7C,SAASz7C,MAC/B,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,EAAKjM,IAC/BgB,KAAKg7C,SAASh8C,GAAGw8C,mBAQZZ,GAAAr6C,UAAA66C,oBAAP,WAEC,GAAInwC,GAAajL,KAAKg7C,SAASz7C,MAC/B,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,EAAKjM,IAC/BgB,KAAKg7C,SAASh8C,GAAGy8C,mBAQnB96C,QAAAC,eAAWg6C,EAAAr6C,UAAA,WtDsrVJM,IsDtrVP,WAEC,MAAOb,MAAKm7C,StDurVNp6C,WAAY,KACZC,aAAc,MsDrrVrBL,QAAAC,eAAWg6C,EAAAr6C,UAAA,YtDwrVJM,IsDxrVP,WAEC,MAAOb,MAAKkvC,WtDyrVNnuC,WAAY,KACZC,aAAc,MsDprVrBL,QAAAC,eAAWg6C,EAAAr6C,UAAA,etD0rVJM,IsD1rVP,WAEC,MAAOb,MAAKukB,ctD2rVN1hB,IsDxrVP,SAAuBC,GAEtB9C,KAAKukB,aAAezhB,GtDyrVd/B,WAAY,KACZC,aAAc,MsDrrVrBL,QAAAC,eAAWg6C,EAAAr6C,UAAA,kBtD2rVJM,IsD3rVP,WAEC,MAAOb,MAAKovC,iBtD4rVNvsC,IsDzrVP,SAA0BC,GAEzB9C,KAAKovC,gBAAkBtsC,GtD0rVjB/B,WAAY,KACZC,aAAc,MsDtrVrBL,QAAAC,eAAWg6C,EAAAr6C,UAAA,WtD4rVJM,IsD5rVP,WAEC,MAAOb,MAAK07C,UtD6rVN74C,IsD1rVP,SAAmBC,GAGlB,GAAIA,GAAS9C,KAAK07C,SACjB17C,KAAKu7C,oBAENv7C,MAAK07C,SAAW54C,GtD0rVV/B,WAAY,KACZC,aAAc,MsDtqVrBL,QAAAC,eAAWg6C,EAAAr6C,UAAA,atDyqVJM,IsDzqVP,WAEC,MAAO+5C,GAAO15C,WtD0qVRH,WAAY,KACZC,aAAc,MsDxqVrBL,QAAAC,eAAWg6C,EAAAr6C,UAAA,gBtD2qVJM,IsD3qVP,WAEC,MAAO,QtD4qVDE,WAAY,KACZC,aAAc,MsDtqVd45C,GAAAr6C,UAAAU,QAAP,WAEC,GAAIjC,EACJ,IAAIiM,EAEJA,GAAMjL,KAAKg7C,SAASz7C,MACpB,KAAKP,EAAI,EAAGA,EAAIiM,EAAKjM,IACpBgB,KAAKg7C,SAASh8C,GAAGiC,SAElBjB,MAAKg7C,SAAW,GAAI14C,MAEpB,IAAI2I,GAAajL,KAAKkkB,aAAa3kB,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,EAAKjM,IAC/BgB,KAAKkkB,aAAallB,GAAGiC,SAEtBjB,MAAKkkB,aAAe,GAAI5hB,OAGlBs4C,GAAAr6C,UAAA0a,eAAP,SAAsBC,IAKf0/B,GAAAr6C,UAAAo7C,YAAP,SAAmBzZ,GAElBliC,KAAKg7C,SAASrhC,KAAKuoB,EAEnB,OAAOA,GAGD0Y,GAAAr6C,UAAAq7C,eAAP,SAAsB1Z,GAErBliC,KAAKg7C,SAASjhC,OAAO/Z,KAAKg7C,SAASlhC,QAAQooB,GAAS,EAEpD,OAAOA,GAGD0Y,GAAAr6C,UAAAkZ,gBAAP,SAAuBC,GAEtB1Z,KAAKkkB,aAAavK,KAAKD,EAEvB,OAAOA,GAIDkhC,GAAAr6C,UAAAqZ,mBAAP,SAA0BF,GAEzB,GAAIG,GAAe7Z,KAAKkkB,aAAapK,QAAQJ,EAE7C1Z,MAAKkkB,aAAanK,OAAOF,EAAO,EAEhC,OAAOH,GAxRMkhC,GAAA15C,UAAmB,gBA0RlC,OAAA05C,IA5RqB5zC,EA8RLvH,GAAAJ,QAAPu7C,ItD0pVNiB,iCAAiCz6C,UAAU6E,wCAAwC,wCAAwCgX,uCAAuC,yCAAyCs8B,yCAAyC,SAASh7C,EAAQkB,EAAOJ,GAC/Q,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuDn9VtB,IAAOsgB,GAAcpiB,EAAc,4CAEnC,IAAOoD,GAAgBpD,EAAc,8CAErC,IAAO4H,GAAc5H,EAAc,sCAGnC,IAAOmI,GAAsBnI,EAAY,iDAKzC,IAAOu9C,GAAav9C,EAAc,wCAIlC,IAAOk2C,GAAIl2C,EAAiB,mCAC5B,IAAO+e,GAAQ/e,EAAgB,mCAE/B,IAAOuD,GAAgBvD,EAAc,2CvDyhWrC,IuDr8VMm4C,GAAS,SAAAh2C,GAASX,EAAlB22C,EAASh2C,EAuoBd,SAvoBKg2C,KAyoBJh2C,EAAApB,KAAAU,KAAM,GAAIsd,GA7nBHtd,MAAA+7C,MAAe,EA8nBtB/7C,MAAKqP,KAAOysC,EAAcE,OAviB3Br7C,OAAAC,eAAW81C,EAAAn2C,UAAA,avDs3VJM,IuDt3VP,WAEC,MAAO61C,GAAUx1C,WvDu3VXH,WAAY,KACZC,aAAc,MuDv0VrBL,QAAAC,eAAW81C,EAAAn2C,UAAA,iBvDm1VJM,IuDn1VP,WAEC,MAAOb,MAAKi8C,gBvDo1VNl7C,WAAY,KACZC,aAAc,MuDz0VrBL,QAAAC,eAAW81C,EAAAn2C,UAAA,cvDq1VJM,IuDr1VP,WAEC,MAAOb,MAAKk8C,avDs1VNn7C,WAAY,KACZC,aAAc,MuD3uVrBL,QAAAC,eAAW81C,EAAAn2C,UAAA,UvDkvVJM,IuDlvVP,WAEC,MAAOb,MAAKm8C,SvDmvVNp7C,WAAY,KACZC,aAAc,MuDnuVd01C,GAAAn2C,UAAA67C,WAAP,WAEC,MAAOp8C,MAAKq8C,YAMN3F,GAAAn2C,UAAA+7C,WAAP,WAEC,MAAOt8C,MAAKu8C,YA+Bb57C,QAAAC,eAAW81C,EAAAn2C,UAAA,YvD8sVJM,IuD9sVP,WAEC,MAAOb,MAAKw8C,WvD+sVNz7C,WAAY,KACZC,aAAc,MuDjmVrBL,QAAAC,eAAW81C,EAAAn2C,UAAA,uBvD0mVJM,IuD1mVP,WAEC,MAAOb,MAAKy8C,sBvD2mVN17C,WAAY,KACZC,aAAc,MuDnmVrBL,QAAAC,eAAW81C,EAAAn2C,UAAA,qBvD4mVJM,IuD5mVP,WAEC,MAAOb,MAAK08C,oBvD6mVN37C,WAAY,KACZC,aAAc,MuDnkVrBL,QAAAC,eAAW81C,EAAAn2C,UAAA,QvD8kVJM,IuD9kVP,WAEC,MAAOb,MAAK+7C,OvD+kVNl5C,IuD5kVP,SAAgBC,GAEfA,EAAMA,EAAM65C,UACZ,IAAI38C,KAAK+7C,OAASj5C,EACjB,MAED9C,MAAK+7C,MAAQj5C,CACb9C,MAAK48C,evD4kVC77C,WAAY,KACZC,aAAc,MuD3kVrBL,QAAAC,eAAW81C,EAAAn2C,UAAA,cvD8kVJM,IuD9kVP,WAEC,MAAOb,MAAK68C,avD+kVNh6C,IuD5kVP,SAAsBC,GAErB,GAAI9C,KAAK68C,aAAe/5C,EACvB,MACD9C,MAAK68C,YAAc/5C,CACnB9C,MAAK48C,evD6kVC77C,WAAY,KACZC,aAAc,MuDhkVrBL,QAAAC,eAAW81C,EAAAn2C,UAAA,avDmkVJM,IuDnkVP,WAEC,MAAOb,MAAK88C,YvDokVNj6C,IuDjkVP,SAAqBC,GAEpB9C,KAAK88C,WAAah6C,CAClBq2C,SAAQC,IAAI,eAAet2C,EAC3B,KAAI9C,KAAK+K,iBACR/K,KAAK+K,iBAAmB,GAAI5E,EAE7BnG,MAAK+K,iBAAiB8+B,MAAQ/mC,CAC9B9C,MAAK2K,kCAAkCjE,EAAuBkE,kBvDikVxD7J,WAAY,KACZC,aAAc,MuDvjVrBL,QAAAC,eAAW81C,EAAAn2C,UAAA,uBvDkkVJM,IuDlkVP,WAEC,MAAOb,MAAK+8C,sBvDmkVNh8C,WAAY,KACZC,aAAc,MuD9jVrBL,QAAAC,eAAW81C,EAAAn2C,UAAA,avDokVJM,IuDpkVP,WAEC,MAAOb,MAAKg9C,YvDqkVNn6C,IuDlkVP,SAAqBC,GAEpB9C,KAAKg9C,WAAal6C,GvDmkVZ/B,WAAY,KACZC,aAAc,MuD9jVrBL,QAAAC,eAAW81C,EAAAn2C,UAAA,cvDokVJM,IuDpkVP,WAEC,MAAOb,MAAKi9C,avDqkVNp6C,IuDlkVP,SAAsBC,GAErB9C,KAAKi9C,YAAcn6C,GvDmkVb/B,WAAY,KACZC,aAAc,MuDrgVd01C,GAAAn2C,UAAAq8C,YAAP,WAGC,GAAG58C,KAAK68C,aAAa,KACpB,MAGD,KAAK,GAAI79C,GAASgB,KAAK00C,SAASe,cAAcl2C,OAAO,EAAGP,GAAG,EAAGA,IAC7DgB,KAAK00C,SAAS92B,kBAAkB5d,KAAK00C,SAASe,cAAcz2C,GAE7D,IAAGgB,KAAK+7C,OAAO,GACd,MAED,IAAIlQ,GAAyB,GAAIvpC,MAGjC,IAAI46C,GAAkBl9C,KAAK68C,YAAYM,KAAKn9C,KAAK68C,YAAYO,WAAWC,kBACxE,IAAIC,GAA4Bt9C,KAAK68C,YAAYO,WAAWG,QAC5D,IAAIC,GAA4Bx9C,KAAK68C,YAAYO,WAAWK,QAC5D,IAAIC,GAAgBF,CACpB,IAAIG,GAA+B,IACnC,IAAIthC,GAAW,CACf,IAAImM,GAAW,CACf,IAAIo1B,GAAkB59C,KAAK68C,YAAYO,WAAWS,uBAAyBX,CAC3E,IAAIY,GAA0B99C,KAAKg4C,KAAK2E,WAAWoB,MAAM,MACzD,IAAIC,KACJ,IAAIC,KACJ,IAAIC,KACJ,KAAK,GAAIC,GAAK,EAAGA,EAAKL,EAAUv+C,OAAQ4+C,IAAM,CAE7CH,EAAkBrkC,QAClBskC,GAAuBtkC,QACvBukC,GAAkBvkC,KAAK,EAGvB,IAAIykC,GAAsBN,EAAUK,GAAIJ,MAAM,IAC9C,KAAK,GAAI/+C,GAAI,EAAGA,EAAIo/C,EAAM7+C,OAAQP,IAAK,CACtC,GAAIq/C,GAAoB,CACxB,IAAIC,KACJ,IAAIC,KACJ,IAAIC,GAAe,CACnB,KAAK,GAAIC,GAAI,EAAGA,EAAIL,EAAMp/C,GAAGO,OAAQk/C,IAAK,CACzCvB,EAAal9C,KAAK68C,YAAYM,KAAOn9C,KAAK68C,YAAYO,WAAWC,kBACjE,IAAIqB,GAAoD1+C,KAAK68C,YAAYO,WAAWuB,oBAAoBP,EAAMp/C,GAAG4/C,WAAWH,GAAG9B,WAC/H,IAAI+B,GAAa,KAAM,CACtB,GAAI1+C,KAAK68C,YAAYgC,oBAAqB,CACzC3B,EAAal9C,KAAK68C,YAAYM,KAAOn9C,KAAK68C,YAAYgC,oBAAoBxB,kBAC1EqB,GAAY1+C,KAAK68C,YAAYgC,oBAAoBF,oBAAoBP,EAAMp/C,GAAG4/C,WAAWH,GAAG9B,aAG9F,GAAI+B,GAAa,KAAM,CACtB,GAAII,GAAgCJ,EAAUK,OAC9C,IAAID,GAAgB,KAAM,CvDigVJ,GuD//UjBE,GAAuB,CAC3B,IAAIrB,GAAa,KAAM,CACtB,IAAK,GAAIn1B,GAAW,EAAGA,EAAIm1B,EAAUsB,iBAAiB1/C,OAAQipB,IAAK,CAClE,GAAIm1B,EAAUsB,iBAAiBz2B,IAAM41B,EAAMp/C,GAAG4/C,WAAWH,GAAI,CAC5DO,EAAgBrB,EAAUuB,cAAc12B,EACxC,SAIH61B,IAAgBK,EAAUS,WAAaH,GAAiB9B,EAAcl9C,KAAK68C,YAAYuC,kBAEnF,CAEJf,GAAcT,OAGX,CAGJS,GAAcT,EAEfW,EAAiBC,GAAStB,CAC1BoB,GAAWE,KAAWE,EAGvB,GAAKR,EAAkBA,EAAkB3+C,OAAS,GAAK8+C,GAAer+C,KAAKq/C,UAAW,CAErF,IAAK,GAAIC,GAAY,EAAGA,EAAKf,EAAiBh/C,OAAQ+/C,IAAM,CAC3DtB,EAAkBA,EAAkBz+C,OAAS,GAAGoa,KAAK2kC,EAAWgB,GAChErB,GAAuBA,EAAuB1+C,OAAS,GAAGoa,KAAK4kC,EAAiBe,IAEjFpB,EAAkBA,EAAkB3+C,OAAS,IAAM8+C,MAE/C,CAIJL,EAAkBrkC,QAClBskC,GAAuBtkC,QACvBukC,GAAkBvkC,KAAK,EACvB,KAAK,GAAI2lC,GAAY,EAAGA,EAAKf,EAAiBh/C,OAAQ+/C,IAAM,CAC3DtB,EAAkBA,EAAkBz+C,OAAS,GAAGoa,KAAK2kC,EAAWgB,GAChErB,GAAuBA,EAAuB1+C,OAAS,GAAGoa,KAAK4kC,EAAiBe,IAEjFpB,EAAkBA,EAAkB3+C,OAAS,GAAK8+C,EAGnD,GAAIr/C,EAAKo/C,EAAM7+C,OAAS,EAAI,CAC3B,GAAK2+C,EAAkBA,EAAkB3+C,OAAS,GAAKq+C,GAAqB59C,KAAKq/C,UAAW,CAC3FrB,EAAkBA,EAAkBz+C,OAAS,GAAGoa,KAAK,KACrDskC,GAAuBA,EAAuB1+C,OAAS,GAAGoa,KAAKujC,EAC/DgB,GAAkBA,EAAkB3+C,OAAS,IAAMq+C,MAE/C,CACJI,EAAkBrkC,MAAM,MACxBskC,GAAuBtkC,MAAMujC,GAC7BgB,GAAkBvkC,KAAKikC,MAM3B,IAAK,GAAI5+C,GAAI,EAAGA,EAAIg/C,EAAkBz+C,OAAQP,IAAK,CAElD,GAAIugD,GAAgBjC,CACpB,IAAGt9C,KAAK68C,YAAY2C,OAAO,SAAS,CACnCD,GAAUv/C,KAAKg9C,WAAWkB,EAAkBl/C,IAAI,MAE5C,IAAGgB,KAAK68C,YAAY2C,OAAO,QAAQ,CACvCD,EAAUv/C,KAAKg9C,WAAWkB,EAAkBl/C,GAAIs+C,EAIjD,IAAK,GAAI7+C,GAAI,EAAGA,EAAIu/C,EAAkBh/C,GAAGO,OAAQd,IAAK,CACrD,GAAIigD,GAA+BV,EAAkBh/C,GAAGP,EACxDy+C,GAAae,EAAuBj/C,GAAGP,EACvC,IAAIigD,GAAa,KAAM,CACtB,GAAII,GAAgCJ,EAAUK,OAC9C,IAAID,GAAgB,KAAM,CACzB,GAAIW,GAA0BX,EAAan6C,UAAU9D,IAAIi+C,EAAaY,YACtE,IAAIC,GAA0Bb,EAAac,OAAO/+C,IAAIi+C,EAAaY,YACnE,KAAK,GAAIvc,GAAW,EAAGA,EAAI2b,EAAaY,YAAavc,IAAK,CACzD0I,EAASxvB,KAAQojC,EAAWtc,EAAI,GAAK+Z,EAAcqC,CACnD1T,GAASxvB,KAAQojC,EAAWtc,EAAI,EAAI,GAAK+Z,EAAcQ,CACvD7R,GAASxvB,KAAOojC,EAAWtc,EAAI,EAAI,EACnC0I,GAASxvB,KAAOsjC,EAAWxc,EAAI,EAC/B0I,GAASxvB,KAAOsjC,EAAWxc,EAAI,EAAI,EACnC0I,GAASxvB,KAAOrc,KAAK68C,YAAYgD,UAAU,EAC3ChU,GAASxvB,KAAOrc,KAAK68C,YAAYgD,UAAU,GvD2/U1B,GuDx/Udb,GAAuB,CAC3B,IAAIrB,GAAa,KAAM,CACtB,IAAK,GAAIn1B,GAAW,EAAGA,EAAIm1B,EAAUsB,iBAAiB1/C,OAAQipB,IAAK,CAClE,GAAIm1B,EAAUsB,iBAAiBz2B,IAAMxoB,KAAK+7C,MAAM6C,WAAW5/C,GAAI,CAC9DggD,EAAgBrB,EAAUuB,cAAc12B,EACxC,SAIH+2B,IAAcb,EAAUS,WAAaH,GAAiB9B,EAAcl9C,KAAK68C,YAAYuC,kBAEjF,CAEJG,GAAU3B,OAGR,CACH2B,GAAU3B,GAGZF,GAAW19C,KAAK68C,YAAYO,WAAWC,mBAAqBH,EAG7D,GAAIz5B,GAAgC,GAAI9C,GAAeI,aAAc,EACrE0C,GAAe5gB,IAAIgpC,EACnB,IAAIiU,GAAoCr8B,EAAes8B,MACvDt8B,GAAexiB,SACf,IAAI++C,GAAkC,GAAIl+C,GAAiBg+C,EAC3DE,GAAej9C,OAAO,GAAIpB,GAAiBm+C,GAC3C9/C,MAAK00C,SAASl3B,eAAewiC,EAC7BhgD,MAAKk2C,UAAU,GAAGlxC,SAAShF,KAAK68C,YAAY73C,SAWtC0xC,GAAAn2C,UAAA0/C,WAAP,SAAkBC,GACjBlgD,KAAK+7C,OAAOmE,EAONxJ,GAAAn2C,UAAA4/C,eAAP,YAcOzJ,GAAAn2C,UAAA6/C,kBAAP,SAAyBC,GAExB,MAAOrgD,MAAKsgD,gBAaN5J,GAAAn2C,UAAAggD,oBAAP,SAA2B90C,EAAUE,GAEpC,MAAO3L,MAAKwgD,kBAcN9J,GAAAn2C,UAAAkgD,wBAAP,SAA+BJ,GAE9B,MAAOrgD,MAAK0gD,sBAuBNhK,GAAAn2C,UAAAogD,kBAAP,SAAyB98C,GAExB,MAAO7D,MAAK4gD,gBAaNlK,GAAAn2C,UAAAsgD,oBAAP,SAA2Bp1C,EAAUE,GAEpC,MAAO3L,MAAK8gD,kBAaNpK,GAAAn2C,UAAAwgD,mBAAP,SAA0BV,GAEzB,MAAOrgD,MAAKghD,iBAUNtK,GAAAn2C,UAAA0gD,cAAP,SAAqBC,GAEpB,MAAOlhD,MAAKmhD,YAUNzK,GAAAn2C,UAAA6gD,eAAP,SAAsBF,GAErB,MAAOlhD,MAAKqhD,aAYN3K,GAAAn2C,UAAA+gD,cAAP,SAAqBJ,GAEpB,MAAOlhD,MAAKuhD,YAYN7K,GAAAn2C,UAAAihD,YAAP,SAAmBN,GAElB,MAAOlhD,MAAKyhD,UAeN/K,GAAAn2C,UAAAmhD,mBAAP,SAA0BrB,GAEzB,MAAOrgD,MAAK2hD,iBAqBNjL,GAAAn2C,UAAAqhD,cAAP,SAAqB1qB,EAAgCC,GAAhC,GAAAD,QAAA,GAA8B,CAA9BA,GAA6B,EAAG,GAAAC,QAAA,GAA4B,CAA5BA,GAA2B,EAE/E,MAAOn3B,MAAK68C,YAoBNnG,GAAAn2C,UAAAshD,oBAAP,SAA2B/+C,IAuBpB4zC,GAAAn2C,UAAAuhD,YAAP,SAAmB5qB,EAA2BC,EAAyB+oB,IAkBhExJ,GAAAn2C,UAAAwhD,aAAP,SAAoB7qB,EAA2BC,IAkDxCuf,GAAAn2C,UAAAyhD,cAAP,SAAqBC,EAAmB/qB,EAAgCC,GAAhC,GAAAD,QAAA,GAA8B,CAA9BA,GAA6B,EAAG,GAAAC,QAAA,GAA4B,CAA5BA,GAA2B,GAkCrFuf,GAAAwL,iBAAd,SAA+BC,EAAiBC,GAE/C,MAAO,OAGE1L,GAAAn2C,UAAA0D,MAAP,WAEF,GAAIkM,GAAwB,GAAIumC,EAEhC12C,MAAKoQ,OAAOD,EAEZ,OAAOA,GAIDumC,GAAAn2C,UAAA6P,OAAP,SAAcD,GAEbzP,EAAAH,UAAM6P,OAAM9Q,KAAAU,KAACmQ,EAGbA,GAAYukC,SAAS,GAAIp3B,EAEzBnN,GAAYkvC,UAAYr/C,KAAKg9C,UAC7B7sC,GAAYkyC,WAAariD,KAAKi9C,WAC9B9sC,GAAYmyC,WAAatiD,KAAK68C,WAE9B1sC,GAAY6nC,KAAOh4C,KAAK+7C,MA7rCXrF,GAAAx1C,UAAmB,mBA+rClC,OAAAw1C,IAjsCwBjC,EAmsCxBh1C,GAAmBJ,QAAVq3C,IvD68UN/0B,4CAA4CvgB,UAAUgE,8CAA8ChE,UAAUmb,sCAAsCnb,UAAUK,2CAA2C,2CAA2C2b,mCAAmC,mCAAmCN,iDAAiD,iDAAiDy3B,mCAAmC,mCAAmCgO,wCAAwC,0CAA0CC,uCAAuC,SAASjkD,EAAQkB,EAAOJ,GACtnB,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwD7vXtB,IAAOnB,GAAKX,EAAe,+BAE3B,IAAMkkD,GAAS,SAAA/hD,GAASX,EAAlB0iD,EAAS/hD,EAEd,SAFK+hD,GAEOC,GAEXhiD,EAAApB,KAAAU,KAAM0iD,GAER,MAAAD,IANwBvjD,EAQLO,GAAAJ,QAAVojD,IxD+vXN7oB,+BAA+Bx4B,YAAY4iC,yCAAyC,SAASzlC,EAAQkB,EAAOJ,GAC/G,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyD9wXtB,IAAOo2C,GAAKl4C,EAAe,+BzDoxX3B,IyD7wXMqgC,GAAW,SAAAl+B,GAASX,EAApB6+B,EAAWl+B,EAMhB,SANKk+B,GAMOvvB,EAAa+G,GAExB1V,EAAApB,KAAAU,KAAMqP,EAENrP,MAAK2iD,QAAUvsC,EAGhBzV,OAAAC,eAAWg+B,EAAAr+B,UAAA,UzDuwXJM,IyDvwXP,WAEC,MAAOb,MAAK2iD,SzDwwXN5hD,WAAY,KACZC,aAAc,MyDtxXP49B,GAAAiD,mBAA4B,mBAe3C,OAAAjD,IAjB0B6X,EAmBLh3C,GAAAJ,QAAZu/B,IzD4wXN0a,+BAA+Bl4C,YAAY8b,gDAAgD,SAAS3e,EAAQkB,EAAOJ,GACtH,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0D3yXtB,IAAOo2C,GAAKl4C,EAAe,+BAI3B,IAAMwI,GAAkB,SAAArG,GAASX,EAA3BgH,EAAkBrG,EAiBvB,SAjBKqG,GAiBOsI,EAAauzC,GAExBliD,EAAApB,KAAAU,KAAMqP,EACNrP,MAAK4iD,OAASA,EAlBD77C,EAAA87C,kBAA2B,kBAC3B97C,GAAAkJ,uBAAgC,uBAChClJ,GAAAgJ,cAAuB,cACvBhJ,GAAAwI,iBAA0B,iBAC1BxI,GAAA0I,iBAA0B,iBAC1B1I,GAAA4I,aAAsB,aACtB5I,GAAA8I,cAAuB,cAKvB9I,GAAAoG,kBAA2B,kBAS1C,OAAApG,IAtBiC0vC,EAwBjCh3C,GAA4BJ,QAAnB0H,I1DuyXNuyC,+BAA+Bl4C,YAAY6c,2CAA2C,SAAS1f,EAAQkB,EAAOJ,GACjH,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2Dx0XtB,IAAOo2C,GAAKl4C,EAAe,+B3Di1X3B,I2Dt0XM8e,GAAa,SAAA3c,GAASX,EAAtBsd,EAAa3c,EAwBlB,SAxBK2c,GAwBOhO,EAAa1J,GAAA,GAAAA,QAAA,GAAkC,CAAlCA,EAAA,KAExBjF,EAAApB,KAAAU,KAAMqP,EAENrP,MAAK8F,aAAeH,EAMrBhF,OAAAC,eAAWyc,EAAA9c,UAAA,e3DozXJM,I2DpzXP,WAEC,MAAOb,MAAK8F,c3DqzXN/E,WAAY,KACZC,aAAc,M2D/yXdqc,GAAA9c,UAAA0D,MAAP,WAEC,MAAO,IAAIoZ,GAAcrd,KAAKqP,KAAMrP,KAAK8F,cAxC5BuX,GAAAK,mBAA4B,kBAK5BL,GAAAQ,qBAA8B,oBAK9BR,GAAAW,eAAwB,eAgCvC,OAAAX,IA/C4Bo5B,EAiDLh3C,GAAAJ,QAAdge,I3Dk0XNi8B,+BAA+Bl4C,YAAYqf,wCAAwC,SAASliB,EAAQkB,EAAOJ,GAC9G,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4Dn4XtB,IAAOo2C,GAAKl4C,EAAe,+BAE3B,IAAMmgB,GAAU,SAAAhe,GAASX,EAAnB2e,EAAUhe,EAKf,SALKge,GAKOrP,GAEX3O,EAAApB,KAAAU,KAAMqP,GAIAqP,EAAAne,UAAA0D,MAAP,WAEC,MAAO,IAAIya,GAAW1e,KAAKqP,MAVdqP,GAAAuB,oBAA6B,mBAY5C,OAAAvB,IAfyB+3B,EAiBzBh3C,GAAoBJ,QAAXqf,I5Di4XN46B,+BAA+Bl4C,YAAYsuC,2CAA2C,SAASnxC,EAAQkB,EAAOJ,GACjH,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6Dz5XtB,IAAOo2C,GAAKl4C,EAAe,+BAE3B,IAAMiwC,GAAa,SAAA9tC,GAASX,EAAtByuC,EAAa9tC,EAIlB,SAJK8tC,GAIOn/B,GAEX3O,EAAApB,KAAAU,KAAMqP,GAJOm/B,EAAAW,aAAsB,aAMrC,OAAAX,IAR4BiI,EAU5Bh3C,GAAuBJ,QAAdmvC,I7D05XN8K,+BAA+Bl4C,YAAYo4C,wCAAwC,SAASj7C,EAAQkB,EAAOJ,GAC9G,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8Dz6XtB,IAAOo2C,GAAKl4C,EAAe,+B9Dg7X3B,I8Dr6XMo4C,GAAU,SAAAj2C,GAASX,EAAnB42C,EAAUj2C,EAuIf,SAvIKi2C,GAuIOtnC,GAEX3O,EAAApB,KAAAU,KAAMqP,EAtIArP,MAAA8iD,qBAA+B,KA4ItCniD,OAAAC,eAAW+1C,EAAAp2C,UAAA,W9DqyXJM,I8DryXP,WAEC,GAAIkiD,GAAqB/iD,KAAK8iD,oBAC9B9iD,MAAK8iD,qBAAuB,IAG5B,OAAOC,I9DqyXDhiD,WAAY,KACZC,aAAc,M8DhyXd21C,GAAAp2C,UAAAyiD,gBAAP,WAEChjD,KAAK8iD,qBAAuB,KAE5B,IAAI9iD,KAAKijD,cACRjjD,KAAKijD,cAAcD,kBAMdrM,GAAAp2C,UAAA2iD,yBAAP,WAECljD,KAAK8iD,qBAAuB,KAE5B,IAAI9iD,KAAKijD,cACRjjD,KAAKijD,cAAcC,2BAMdvM,GAAAp2C,UAAA0D,MAAP,WAEC,GAAIk/C,GAAoB,GAAIxM,GAAW32C,KAAKqP,KAO5C8zC,GAAOC,QAAUpjD,KAAKojD,OACtBD,GAAOE,QAAUrjD,KAAKqjD,OAEtBF,GAAOG,KAAOtjD,KAAKsjD,IACnBH,GAAOP,OAAS5iD,KAAK4iD,MACrBO,GAAOlN,gBAAkBj2C,KAAKi2C,eAC9BkN,GAAOn+C,SAAWhF,KAAKgF,QACvBm+C,GAAOI,GAAKvjD,KAAKujD,EACjBJ,GAAOpiB,cAAgB/gC,KAAK+gC,aAC5BoiB,GAAOK,YAAcxjD,KAAKwjD,WAC1BL,GAAOtpC,MAAQ7Z,KAAK6Z,KACpBspC,GAAOM,iBAAmBzjD,KAAKyjD,gBAC/BN,GAAOO,MAAQ1jD,KAAK0jD,KAEpBP,GAAOQ,QAAU3jD,KAAK2jD,OACtBR,GAAOS,SAAW5jD,KAAK4jD,QAEvBT,GAAOF,cAAgBjjD,IACvBmjD,GAAOL,qBAAuB9iD,KAAK8iD,oBAEnC,OAAOK,GAMRxiD,QAAAC,eAAW+1C,EAAAp2C,UAAA,iB9DwxXJM,I8DxxXP,WAEC,MAAOb,MAAK4iD,OAAOr2C,eAAe6B,gBAAgBpO,KAAK+gC,gB9DyxXjDhgC,WAAY,KACZC,aAAc,M8DpxXrBL,QAAAC,eAAW+1C,EAAAp2C,UAAA,e9D0xXJM,I8D1xXP,WAEC,GAAIgjD,GAAuB7jD,KAAK4iD,OAAOr2C,eAAe+7B,qBAAqBtoC,KAAKwjD,YAChFK,GAAY/uC,WAEZ,OAAO+uC,I9D0xXD9iD,WAAY,KACZC,aAAc,M8Dn/XP21C,GAAA0B,WAAoB,aAKpB1B,GAAA2B,UAAmB,YAKnB3B,GAAA6B,SAAkB,WAKlB7B,GAAA4B,WAAoB,aAKpB5B,GAAAmN,WAAoB,aAepBnN,GAAAoN,MAAe,SAKfpN,GAAAqN,aAAsB,eAKtBrN,GAAAsN,YAAqB,cA6KpC,OAAAtN,IAnOyBF,EAqOzBh3C,GAAoBJ,QAAXs3C,I9Dq0XN2C,+BAA+Bl4C,YAAY8iD,kDAAkD,SAAS3lD,EAAQkB,EAAOJ,GACxH,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+D5jYtB,IAAOo2C,GAAKl4C,EAAgB,+B/DqkY5B,I+D3jYM4lD,GAAoB,SAAAzjD,GAASX,EAA7BokD,EAAoBzjD,EAczB,SAdKyjD,GAcO90C,EAAa+0C,GAExB1jD,EAAApB,KAAAU,KAAMqP,EAENrP,MAAKqkD,aAAeD,EAMrBzjD,OAAAC,eAAWujD,EAAA5jD,UAAA,e/DkjYJM,I+DljYP,WAEC,MAAOb,MAAKqkD,c/DmjYNtjD,WAAY,KACZC,aAAc,M+D5iYdmjD,GAAA5jD,UAAA0D,MAAP,WAEC,MAAO,IAAIkgD,GAAqBnkD,KAAKqP,KAAMrP,KAAKqkD,cA/BnCF,GAAAG,qBAA8B,oBAiC7C,OAAAH,IAtCmC1N,EAwCLh3C,GAAAJ,QAArB8kD,I/DwjYN7K,+BAA+Bl4C,YAAY6iC,2CAA2C,SAAS1lC,EAAQkB,EAAOJ,GACjH,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgE/mYtB,IAAOo2C,GAAKl4C,EAAe,+BAE3B,IAAMsgC,GAAa,SAAAn+B,GAASX,EAAtB8+B,EAAan+B,EAKlB,SALKm+B,GAKOxvB,GAEX3O,EAAApB,KAAAU,KAAMqP,GALOwvB,EAAAqC,iBAA0B,iBAC1BrC,GAAAsC,gBAAyB,gBAMxC,OAAAtC,IAT4B4X,EAW5Bh3C,GAAuBJ,QAAdw/B,IhEgnYNya,+BAA+Bl4C,YAAYmjD,yCAAyC,SAAShmD,EAAQkB,EAAOJ,GAC/G,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiEloYtB,IAAOo2C,GAAKl4C,EAAe,+BAE3B,IAAMimD,GAAW,SAAA9jD,GAASX,EAApBykD,EAAW9jD,EAOhB,SAPK8jD,GAOOn1C,EAAao1C,EAAwBC,GAAxB,GAAAD,QAAA,GAAsB,CAAtBA,EAAA9Y,IAAwB,GAAA+Y,QAAA,GAAqB,CAArBA,EAAA/Y,IAEhDjrC,EAAApB,KAAAU,KAAMqP,EAENrP,MAAK2kD,WAAaF,CAClBzkD,MAAK4kD,UAAYF,EAGlB/jD,OAAAC,eAAW4jD,EAAAjkD,UAAA,ajE8nYJM,IiE9nYP,WAEC,MAAOb,MAAK2kD,YjE+nYN5jD,WAAY,KACZC,aAAc,MiE7nYrBL,QAAAC,eAAW4jD,EAAAjkD,UAAA,YjEgoYJM,IiEhoYP,WAEC,MAAOb,MAAK4kD,WjEioYN7jD,WAAY,KACZC,aAAc,MiEtpYPwjD,GAAAK,OAAgB,QAsB/B,OAAAL,IAxB0B/N,EA0B1Bh3C,GAAqBJ,QAAZmlD,IjEqoYNlL,+BAA+Bl4C,YAAY4iB,8CAA8C,SAASzlB,EAAQkB,EAAOJ,GACpH,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkErqYtB,IAAOo2C,GAAKl4C,EAAe,+BlE8qY3B,IkEtqYMwkB,GAAgB,SAAAriB,GAASX,EAAzBgjB,EAAgBriB,EA8BrB,SA9BKqiB,GA8BO1T,EAAaoU,GAExB/iB,EAAApB,KAAAU,KAAMqP,EAENrP,MAAK8kD,gBAAkBrhC,EAMxB9iB,OAAAC,eAAWmiB,EAAAxiB,UAAA,kBlE6oYJM,IkE7oYP,WAEC,MAAOb,MAAK8kD,iBlE8oYN/jD,WAAY,KACZC,aAAc,MkEvoYd+hB,GAAAxiB,UAAA0D,MAAP,WAEC,MAAO,IAAI8e,GAAiB/iB,KAAKqP,KAAMrP,KAAK8kD,iBA/C/B/hC,GAAAQ,gBAAyB,gBAKzBR,GAAAS,iBAA0B,iBAK1BT,GAAAW,iBAA0B,iBAK1BX,GAAAY,kBAA2B,kBAkC1C,OAAAZ,IAtD+B0zB,EAwDLh3C,GAAAJ,QAAjB0jB,IlE+pYNu2B,+BAA+Bl4C,YAAY2jD,wCAAwC,SAASxmD,EAAQkB,EAAOJ,GAC9G,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmEnuYtB,IAAOo2C,GAAKl4C,EAAe,+BAO3B,IAAMymD,GAAU,SAAAtkD,GAASX,EAAnBilD,EAAUtkD,EA4Gf,SA5GKskD,GA4GO31C,GAEX3O,EAAApB,KAAAU,KAAMqP,EA3GArP,MAAA8iD,qBAA+B,KAiHtCniD,OAAAC,eAAWokD,EAAAzkD,UAAA,WnE0nYJM,ImE1nYP,WAEC,GAAIkiD,GAAqB/iD,KAAK8iD,oBAC9B9iD,MAAK8iD,qBAAuB,IAG5B,OAAOC,InE0nYDhiD,WAAY,KACZC,aAAc,MmErnYdgkD,GAAAzkD,UAAAyiD,gBAAP,WAEChjD,KAAK8iD,qBAAuB,KAE5B,IAAI9iD,KAAKijD,cACRjjD,KAAKijD,cAAcD,kBAMdgC,GAAAzkD,UAAA2iD,yBAAP,WAECljD,KAAK8iD,qBAAuB,KAE5B,IAAI9iD,KAAKijD,cACRjjD,KAAKijD,cAAcC,2BAMd8B,GAAAzkD,UAAA0D,MAAP,WAEC,GAAIk/C,GAAoB,GAAI6B,GAAWhlD,KAAKqP,KAO5C8zC,GAAOC,QAAUpjD,KAAKojD,OACtBD,GAAOE,QAAUrjD,KAAKqjD,OAEtBF,GAAOG,KAAOtjD,KAAKsjD,IACnBH,GAAOP,OAAS5iD,KAAK4iD,MACrBO,GAAOlN,gBAAkBj2C,KAAKi2C,eAC9BkN,GAAOn+C,SAAWhF,KAAKgF,QACvBm+C,GAAOI,GAAKvjD,KAAKujD,EACjBJ,GAAOpiB,cAAgB/gC,KAAK+gC,aAC5BoiB,GAAOK,YAAcxjD,KAAKwjD,WAC1BL,GAAOtpC,MAAQ7Z,KAAK6Z,KACpBspC,GAAOM,iBAAmBzjD,KAAKyjD,gBAE/BN,GAAOQ,QAAU3jD,KAAK2jD,OACtBR,GAAOS,SAAW5jD,KAAK4jD,QAEvBT,GAAOF,cAAgBjjD,IAEvB,OAAOmjD,GAMRxiD,QAAAC,eAAWokD,EAAAzkD,UAAA,iBnE6mYJM,ImE7mYP,WAEC,MAAOb,MAAK4iD,OAAOr2C,eAAe6B,gBAAgBpO,KAAK+gC,gBnE8mYjDhgC,WAAY,KACZC,aAAc,MmEzmYrBL,QAAAC,eAAWokD,EAAAzkD,UAAA,enE+mYJM,ImE/mYP,WAEC,GAAIgjD,GAAuB7jD,KAAK4iD,OAAOr2C,eAAe+7B,qBAAqBtoC,KAAKwjD,YAChFK,GAAY/uC,WAEZ,OAAO+uC,InE+mYD9iD,WAAY,KACZC,aAAc,MmE3yYPgkD,GAAAC,UAAmB,YAKnBD,GAAAE,YAAqB,cAKrBF,GAAAG,WAAoB,aAKpBH,GAAAI,UAAmB,YAKnBJ,GAAAK,WAAoB,aAyKnC,OAAAL,IAtMyBvO,EAwMzBh3C,GAAoBJ,QAAX2lD,InEsoYN1L,+BAA+Bl4C,YAAYkkD,2DAA2D,SAAS/mD,EAAQkB,EAAOJ,SAE3HkmD,sDAAsD,SAAShnD,EAAQkB,EAAOJ,GoEz1YpF,GAAOmmD,GAAajnD,EAAc,qCAClC,IAAOknD,GAAelnD,EAAc,uCAGpC,IAAOwjB,GAAWxjB,EAAe,sCACjC,IAAOq8C,GAAMr8C,EAAgB,qCAE7B,IAAOmnD,GAAannD,EAAc,6CAClC,IAAOonD,GAAepnD,EAAc,8CACpC,IAAOqnD,GAAiBrnD,EAAa,gDAGrC,IAAMsnD,GAAsB,WAA5B,QAAMA,MAUSA,EAAAC,mBAAd,SAAiC7P,GAAA,GAAAA,QAAA,GAAuC,CAAvCA,EAAA,KAEhC,GAAIA,GAAmB,MAAQA,EAAgB8B,QAAQh2B,GAAc,CACpE,IAAK8jC,EAAuBE,sBAC3BF,EAAuBG,4BAExB,OAAOH,GAAuBE,sBAG/B,GAAI9P,GAAmB,MAAQA,EAAgB8B,QAAQ6C,GAAS,CAC/D,IAAKiL,EAAuBI,4BAC3BJ,EAAuBK,kCAExB,OAAOL,GAAuBI,4BAG/B,IAAKJ,EAAuBM,wBAC3BN,EAAuBO,8BAExB,OAAOP,GAAuBM,wBAGjBN,GAAAQ,kBAAd,SAAgCpQ,GAAA,GAAAA,QAAA,GAAuC,CAAvCA,EAAA,KAE/B,GAAIA,GAAmB,MAAQA,EAAgB8B,QAAQ6C,GAAS,CAC/D,IAAKiL,EAAuBS,oBAC3BT,EAAuBU,0BAExB,OAAOV,GAAuBS,oBAG/B,IAAKT,EAAuBW,gBAC3BX,EAAuBY,sBAExB,OAAOZ,GAAuBW,gBAGhBX,GAAAY,qBAAf,WAEC,IAAKZ,EAAuBa,sBAC3Bb,EAAuBc,8BAExBd;EAAuBW,gBAAkB,GAAIb,GAAgBE,EAAuBa,sBACpFb,GAAuBW,gBAAgBj2C,KAAO,iBAGhCs1C,GAAAU,yBAAf,WAEC,IAAKV,EAAuBe,wBAC3Bf,EAAuBgB,gCAExBhB,GAAuBS,oBAAsB,GAAIV,GAAkBC,EAAuBe,wBAC1Ff,GAAuBS,oBAAoB/1C,KAAO,qBAGpCs1C,GAAAgB,+BAAf,WAEC,IAAKhB,EAAuBa,sBAC3Bb,EAAuBc,8BAExB,IAAIzmD,GAAI,GAAIulD,GAAgBI,EAAuBa,sBAAsB13C,MAEzE,KAAK,GAAIhQ,GAAW,EAAGA,EAAI,EAAGA,IAC7BkB,EAAE4mD,KAAK9nD,EAAG6mD,EAAuBa,sBAElCb,GAAuBe,wBAA0B1mD,EAGnC2lD,GAAAc,6BAAf,WAEC,GAAIzmD,GAAkB,GAAIslD,GAAc,EAAG,EAAG,MAAO,EpE0zY/C,IoEvzYFxmD,GAAUqd,CACd,KAAKrd,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACvB,IAAKqd,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACvB,GAAKA,EAAI,EAAMrd,EAAI,EAAI,CACtBkB,EAAE6mD,SAAS/nD,EAAGqd,EAAG,YAKpBwpC,EAAuBa,sBAAwBxmD,EAGjC2lD,GAAAO,6BAAf,WAEC,IAAKP,EAAuBW,gBAC3BX,EAAuBY,sBAExBZ,GAAuBM,wBAA0B,GAAIT,GAAcG,EAAuBW,gBAC1FX,GAAuBM,wBAAwBa,OAAS,KACxDnB,GAAuBM,wBAAwBxc,OAAS,KACxDkc,GAAuBM,wBAAwB51C,KAAO,yBAGxCs1C,GAAAK,iCAAf,WAEC,IAAKL,EAAuBS,oBAC3BT,EAAuBU,0BAExBV,GAAuBI,4BAA8B,GAAIP,GAAcG,EAAuBS,oBAC9FT,GAAuBI,4BAA4Be,OAAS,KAC5DnB,GAAuBI,4BAA4Btc,OAAS,KAC5Dkc,GAAuBI,4BAA4B11C,KAAO,6BAG5Cs1C,GAAAG,2BAAf,WAECH,EAAuBE,sBAAwB,GAAIL,EACnDG,GAAuBE,sBAAsBx1C,KAAO,uBAEtD,OAAAs1C,KAEApmD,GAAgCJ,QAAvBwmD,IpEgzYNoB,qCAAqC7lD,UAAU8lD,uCAAuC9lD,UAAU0gB,sCAAsC,sCAAsC44B,qCAAqC,qCAAqCyM,6CAA6C,6CAA6CC,8CAA8C,8CAA8CC,gDAAgD,kDAAkD/6B,kDAAkD,SAAS/tB,EAAQkB,EAAOJ,GqEt7Y3lB,GAAMwlB,GAAkB,WAAxB,QAAMA,MAaSA,EAAAyiC,YAAd,SAA0BC,GAEzBvnD,KAAKwnD,aACLxnD,MAAKynD,kBAAkBznD,KAAKwnD,aAAaD,CACzC,OAAOvnD,MAAKwnD,YAGC3iC,GAAA6iC,cAAd,SAA4B7jD,SAEpB7D,MAAKynD,kBAAkB5jD,GAGjBghB,GAAAk0B,kBAAd,WAEC,IAAI,GAAIrvB,KAAO1pB,MAAKynD,kBAAkB,CACrCznD,KAAKynD,kBAAkB/9B,GAAKpqB,QAIhBulB,GAAAkC,oBAAd,SAAkC4gC,EAAcC,GrEy6YzC,GqEt6YF5oD,GAAEgB,KAAK6nD,kBAAkBtoD,MAC7B,OAAMP,IAAI,CACTgB,KAAK8nD,YAAYnuC,KAAK3Z,KAAK6nD,kBAAkB7oD,GAC7CgB,MAAK+nD,gBAAgBpuC,KAAK3Z,KAAKgoD,sBAAsBhpD,IAEtDgB,KAAK6nD,oBACL7nD,MAAKgoD,wBACLhoD,MAAK8nD,YAAYnuC,KAAKguC,EACtB3nD,MAAK+nD,gBAAgBpuC,KAAKiuC,GAGb/iC,GAAAmC,0BAAd,SAAwC2gC,EAAcC,GAErD5nD,KAAK6nD,kBAAkBluC,KAAKguC,EAC5B3nD,MAAKgoD,sBAAsBruC,KAAKiuC,GAGnB/iC,GAAAi0B,cAAd,WAEC,GAAG94C,KAAK8nD,YAAYvoD,QAAQ,GAAKS,KAAK6nD,kBAAkBtoD,QAAQ,EAC/D,MAED,IAAIP,GAAEgB,KAAK6nD,kBAAkBtoD,MAC7B,OAAMP,IAAI,CACTgB,KAAK8nD,YAAYnuC,KAAK3Z,KAAK6nD,kBAAkB7oD,GAC7CgB,MAAK+nD,gBAAgBpuC,KAAK3Z,KAAKgoD,sBAAsBhpD,IAEtDgB,KAAK6nD,oBACL7nD,MAAKgoD,wBAEL,IAAIL,EACJ,KAAK3oD,EAAI,EAAGA,EAAGgB,KAAK8nD,YAAYvoD,OAAQP,IAAK,CAE5C2oD,EAAG3nD,KAAK8nD,YAAY9oD,EACpB,IAAG2oD,EAAGnvC,OAAO,KAAM,CAClB,GAAIyvC,GAASN,EAAG/2C,QAAU+2C,EAAG/2C,QAAU+2C,CAEtC3nD,MAAK+nD,gBAAgB/oD,GAAGM,KAAK2oD,IAUhCjoD,KAAK8nD,cACL9nD,MAAK+nD,mBAhFSljC,GAAAijC,cACAjjC,GAAAkjC,kBAGAljC,GAAAgjC,oBACAhjC,GAAAmjC,wBAEAnjC,GAAA4iC,kBAA2B,GAAI9mD,OAE/BkkB,GAAA2iC,YAAmB,CAyEnC,OAAA3iC,KACAplB,GAA4BJ,QAAnBwlB,OrEq6YHqf,4CAA4C,SAAS3lC,EAAQkB,EAAOJ,GsE7/Y1E,GAAOoH,GAAQlI,EAAgB,gCAG/B,IAAOiuB,GAAUjuB,EAAe,qCAGhC,IAAO2pD,GAAc3pD,EAAc,uCACnC,IAAOsmB,GAAkBtmB,EAAa,iDtE+/YtC,IsEz/YMugC,GAAY,WAqCjB,QArCKA,KAAN,GAAArE,GAAAz6B,IAISA,MAAAmoD,YAA0B,GAAI7lD,MAM9BtC,MAAAooD,YAAuB,GAAI3hD,EAE3BzG,MAAAiH,cAAsC,GAAI3E,MAI1CtC,MAAAqoD,SAA0B,GAAIH,GAAeA,EAAe1P,SAC5Dx4C,MAAAsoD,YAA6B,GAAIJ,GAAeA,EAAenE,MAC/D/jD,MAAAuoD,UAA2B,GAAIL,GAAeA,EAAe5P,UAC7Dt4C,MAAAwoD,WAA4B,GAAIN,GAAeA,EAAe3P,WAC9Dv4C,MAAAyoD,WAA4B,GAAIP,GAAeA,EAAepE,WAC9D9jD,MAAA0oD,WAA4B,GAAIR,GAAeA,EAAe7P,WAC9Dr4C,MAAA2oD,YAA6B,GAAIT,GAAeA,EAAejE,YAC/DjkD,MAAA4oD,kBAAmC,GAAIV,GAAeA,EAAelE,aAgB5EhkD,MAAK6oD,gBAAkB,SAAChtC,GAAqB,MAAA4e,GAAKquB,QAAQjtC,GAC1D7b,MAAK+oD,sBAAwB,SAACltC,GAAqB,MAAA4e,GAAKuuB,cAAcntC,GACtE7b,MAAKipD,oBAAsB,SAACptC,GAAqB,MAAA4e,GAAKyuB,YAAYrtC,GAClE7b,MAAKmpD,oBAAsB,SAACttC,GAAqB,MAAA4e,GAAK2uB,YAAYvtC,GAClE7b,MAAKqpD,kBAAoB,SAACxtC,GAAqB,MAAA4e,GAAK6uB,UAAUztC,GAC9D7b,MAAKupD,qBAAuB,SAAC1tC,GAAqB,MAAA4e,GAAK+uB,aAAa3tC,GACpE7b,MAAKypD,oBAAsB,SAAC5tC,GAAqB,MAAA4e,GAAKivB,YAAY7tC,GAClE7b,MAAK2pD,mBAAqB,SAAC9tC,GAAqB,MAAA4e,GAAKmvB,WAAW/tC,IAGnDijB,EAAApD,YAAd,WAEC,GAAI17B,KAAK6pD,UACR,MAAO7pD,MAAK6pD,SAEb,OAAQ7pD,MAAK6pD,UAAY,GAAI/qB,GAGvBA,GAAAv+B,UAAAuiC,gBAAP,SAAuBN,GAGtB,GAAIxiC,KAAK2iC,mBAAqB3iC,KAAK8pD,yBAA0B,CAC5D,GAAI9pD,KAAK8pD,yBACR9pD,KAAKsY,cAActY,KAAKuoD,UAAWvoD,KAAK+pD,gBAAiB/pD,KAAK8pD,yBAE/D,IAAI9pD,KAAK2iC,kBACR3iC,KAAKsY,cAActY,KAAK0oD,WAAY1oD,KAAK+pD,iBAI1C,GAAIvnB,GAAkBxiC,KAAK2iC,kBAC3B3iC,KAAKsY,cAAetY,KAAKyoD,WAAYzoD,KAAK+pD,gBAE3C,IAAIluC,EACJ,IAAImuC,EtE69YE,IsE19YF/+C,GAAajL,KAAKiH,cAAc1H,MACpC,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,IAAOjM,EAAG,CACpC6c,EAAQ7b,KAAKiH,cAAcjI,EAC3BgrD,GAAanuC,EAAM+mC,MAGnB,OAAOoH,EAAY,CAClB,GAAIA,EAAWlvC,mBACdkvC,EAAW98C,cAAc2O,EAE1BmuC,GAAaA,EAAWC,OAIzBplC,EAAmBi0B,gBAKpB94C,KAAKiH,cAAc1H,OAAS,CAE5BS,MAAK8pD,yBAA2B9pD,KAAK2iC,iBAErC3iC,MAAK0iC,cAAgB,MAmBf5D,GAAAv+B,UAAAigC,aAAP,SAAoB8iB,GAEnBA,EAAK4G,YAAY96C,iBAAiB,QAASpP,KAAK6oD,gBAChDvF,GAAK4G,YAAY96C,iBAAiB,WAAYpP,KAAK+oD,sBACnDzF,GAAK4G,YAAY96C,iBAAiB,aAAcpP,KAAKipD,oBACrD3F,GAAK4G,YAAY96C,iBAAiB,YAAapP,KAAKipD,oBACpD3F,GAAK4G,YAAY96C,iBAAiB,YAAapP,KAAKmpD,oBACpD7F,GAAK4G,YAAY96C,iBAAiB,YAAapP,KAAKmpD,oBACpD7F,GAAK4G,YAAY96C,iBAAiB,UAAWpP,KAAKqpD,kBAClD/F,GAAK4G,YAAY96C,iBAAiB,WAAYpP,KAAKqpD,kBACnD/F,GAAK4G,YAAY96C,iBAAiB,aAAcpP,KAAKupD,qBACrDjG,GAAK4G,YAAY96C,iBAAiB,YAAapP,KAAKypD,oBACpDnG,GAAK4G,YAAY96C,iBAAiB,WAAYpP,KAAK2pD,mBAEnD3pD,MAAKmoD,YAAYxuC,KAAK2pC,GAGhBxkB,GAAAv+B,UAAAyiC,eAAP,SAAsBsgB,GAErBA,EAAK4G,YAAYhzC,oBAAoB,QAASlX,KAAK6oD,gBACnDvF,GAAK4G,YAAYhzC,oBAAoB,WAAYlX,KAAK+oD,sBACtDzF,GAAK4G,YAAYhzC,oBAAoB,aAAclX,KAAKipD,oBACxD3F,GAAK4G,YAAYhzC,oBAAoB,YAAalX,KAAKipD,oBACvD3F,GAAK4G,YAAYhzC,oBAAoB,YAAalX,KAAKmpD,oBACvD7F,GAAK4G,YAAYhzC,oBAAoB,YAAalX,KAAKmpD,oBACvD7F,GAAK4G,YAAYhzC,oBAAoB,WAAYlX,KAAKqpD,kBACtD/F,GAAK4G,YAAYhzC,oBAAoB,UAAWlX,KAAKqpD,kBACrD/F,GAAK4G,YAAYhzC,oBAAoB,aAAclX,KAAKupD,qBACxDjG,GAAK4G,YAAYhzC,oBAAoB,YAAalX,KAAKypD,oBACvDnG,GAAK4G,YAAYhzC,oBAAoB,WAAYlX,KAAK2pD,mBAEtD3pD,MAAKmoD,YAAYgC,MAAMnqD,KAAKmoD,YAAYruC,QAAQwpC,GAAO,GAOhDxkB,GAAAv+B,UAAA+X,cAAR,SAAsBuD,EAAsBuuC,EAAaC,GAAA,GAAAA,QAAA,GAAkC,CAAlCA,EAAA,KAGxD,GAAID,EAAa,CAChBvuC,EAAM8nC,QAAUyG,EAAYzG,OAC5B9nC,GAAMyuC,OAASF,EAAYE,MAC3BzuC,GAAM+nC,SAAWwG,EAAYxG,QAC7B/nC,GAAMunC,QAAWgH,EAAYG,SAAW,KAAOH,EAAYG,QAAUH,EAAYI,eAAe,GAAGD,OACnG1uC,GAAMwnC,QAAW+G,EAAYK,SAAW,KAAOL,EAAYK,QAAUL,EAAYI,eAAe,GAAGC,QAGpG,GAAIJ,GAAY,KACfA,EAAWrqD,KAAK2iC,iBAGjB,IAAI0nB,EAAU,CAEbxuC,EAAM+mC,OAASyH,EAAS59B,aACxB5Q,GAAMo6B,gBAAkBoU,EAASpU,eAEjCp6B,GAAM0nC,GAAK8G,EAAS9G,EAEpB1nC,GAAMklB,cAAgBspB,EAAStpB,cAAespB,EAAStpB,cAAc98B,QAAU,IAE/E4X,GAAM2nC,YAAc6G,EAAS7G,YAAa6G,EAAS7G,YAAYv/C,QAAU,IAEzE4X,GAAMhC,MAAQwwC,EAASxwC,UACjB,CAENgC,EAAM0nC,GAAK,IACX1nC,GAAM+mC,OAAS,IACf/mC,GAAMklB,cAAgB/gC,KAAKooD,WAC3BvsC,GAAM2nC,YAAcxjD,KAAKooD,WACzBvsC,GAAMhC,MAAQ,CACdgC,GAAM4nC,iBAAmB,EAI1BzjD,KAAKiH,cAAc0S,KAAKkC,GAOjBijB,GAAAv+B,UAAA6oD,YAAR,SAAoBvtC,GAEnBA,EAAM6uC,gBAEN1qD,MAAK2qD,gBAAgB9uC,EAErB,IAAI7b,KAAK2iC,kBACR3iC,KAAKsY,cAActY,KAAKyoD,WAAYzoD,KAAK+pD,gBAAkBluC,GAGrDijB,GAAAv+B,UAAAqpD,WAAR,SAAmB/tC,GAElB7b,KAAKyiC,YAAc,IAEnBziC,MAAK2qD,gBAAgB9uC,EAErB,IAAI7b,KAAK2iC,kBACR3iC,KAAKsY,cAActY,KAAKuoD,UAAW1sC,GAG7BijB,GAAAv+B,UAAAmpD,YAAR,SAAoB7tC,GAEnB7b,KAAKyiC,YAA+B5mB,EAAM3Y,MAE1ClD,MAAK2qD,gBAAgB9uC,EAErB,IAAI7b,KAAK2iC,kBACR3iC,KAAKsY,cAAetY,KAAK0oD,WAAY7sC,GAG/BijB,GAAAv+B,UAAAuoD,QAAR,SAAgBjtC,GAEf7b,KAAK2qD,gBAAgB9uC,EAErB,IAAI7b,KAAK2iC,kBACR3iC,KAAKsY,cAActY,KAAKsoD,YAAazsC,GAG/BijB,GAAAv+B,UAAAyoD,cAAR,SAAsBntC,GAErB7b,KAAK2qD,gBAAgB9uC,EAErB,IAAI7b,KAAK2iC,kBACR3iC,KAAKsY,cAActY,KAAK4oD,kBAAmB/sC,GAGrCijB,GAAAv+B,UAAA2oD,YAAR,SAAoBrtC,GAEnBA,EAAM6uC,gBAEN1qD,MAAKyiC,YAA+B5mB,EAAM3Y,MAE1ClD,MAAK2qD,gBAAgB9uC,EAErB,IAAI7b,KAAK2iC,kBACR3iC,KAAKsY,cAActY,KAAKwoD,WAAY3sC,GAG9BijB,GAAAv+B,UAAA+oD,UAAR,SAAkBztC,GAEjBA,EAAM6uC,gBAEN1qD,MAAK2qD,gBAAgB9uC,EAErB,IAAI7b,KAAK2iC,kBACR3iC,KAAKsY,cAActY,KAAKqoD,SAAWxsC,GAG7BijB,GAAAv+B,UAAAipD,aAAR,SAAqB3tC,GAEpB7b,KAAK2qD,gBAAgB9uC,EAErB,IAAI7b,KAAK2iC,kBACR3iC,KAAKsY,cAActY,KAAK2oD,YAAa9sC,GAI/BijB,GAAAv+B,UAAAoqD,gBAAR,SAAwB9uC,GAEvB,GAAI7b,KAAK0iC,cACR,MAED,IAAI4gB,EACJ,IAAIsH,EACJ,IAAIC,GAAiBhvC,EAAM0uC,SAAW,KAAO1uC,EAAM0uC,QAAU1uC,EAAM2uC,eAAe,GAAGD,OACrF,IAAIO,GAAiBjvC,EAAM4uC,SAAW,KAAO5uC,EAAM4uC,QAAU5uC,EAAM2uC,eAAe,GAAGC,OACrF,IAAIx/C,GAAajL,KAAKmoD,YAAY5oD,MAClC,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,EAAKjM,IAAK,CACpCskD,EAAOtjD,KAAKmoD,YAAYnpD,EACxBskD,GAAK/jB,cAAchgC,OAAS,CAC5BqrD,GAAStH,EAAK4G,YAAYa,uBAE1B,IAAIlvC,EAAMmvC,QAAS,CAClB,GAAIC,EACJ,IAAIhgD,GAAa4Q,EAAMmvC,QAAQzrD,MAC/B,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,EAAKjM,IAAK,CACpCisD,EAAQpvC,EAAMmvC,QAAQhsD,EACtBskD,GAAK/jB,cAAc5lB,KAAK,GAAI6S,GAAWy+B,EAAMV,QAAUK,EAAOj4C,KAAMs4C,EAAMR,QAAUG,EAAOh4C,IAAKq4C,EAAMC,cAIxG,GAAIL,EAASD,EAAOj4C,MAAQk4C,EAASD,EAAO12C,OAAS42C,EAASF,EAAOh4C,KAAOk4C,EAASF,EAAO/3C,OAAQ,CACnGywC,EAAK7iB,SAAW,IAChB6iB,GAAK5iB,SAAW,SACV,CACN4iB,EAAK7iB,SAAWoqB,EAASD,EAAOj4C,IAChC2wC,GAAK5iB,SAAWoqB,EAASF,EAAOh4C,GAEhC0wC,GAAK5f,gBAEL,IAAI4f,EAAK1f,aAAe5jC,KAAK2iC,kBAC5B,OAIH3iC,KAAK0iC,cAAgB,KAEvB,OAAA5D,KAEAr/B,GAAsBJ,QAAby/B,ItEk6YNjiB,gCAAgCzb,UAAUmrB,qCAAqC,qCAAqCitB,uCAAuC,uCAAuCltB,iDAAiD,mDAAmD6+B,4CAA4C,SAAS5sD,EAAQkB,EAAOJ,GuE/uZ7W,GAAOoH,GAAQlI,EAAgB,gCAK/B,IAAO6sD,GAAc7sD,EAAc,uCAEnC,IAAM8sD,GAAY,WA6BjB,QA7BKA,KAAN,GAAA5wB,GAAAz6B,IAISA,MAAAsrD,aAAuB,IACvBtrD,MAAAooD,YAAuB,GAAI3hD,EAO3BzG,MAAAiH,cAAsC,GAAI3E,MAO1CtC,MAAAurD,UAA2B,GAAIH,GAAeA,EAAehG,UAC7DplD,MAAAwrD,YAA6B,GAAIJ,GAAeA,EAAelG,YAC/DllD,MAAAyrD,WAA4B,GAAIL,GAAeA,EAAejG,WAC9DnlD,MAAA0rD,UAA2B,GAAIN,GAAeA,EAAenG,UAC7DjlD,MAAA2rD,WAA4B,GAAIP,GAAeA,EAAe/F,WAQrErlD,MAAK4rD,aAAe,GAAItpD,MACxBtC,MAAK6rD,kBAAoB,GAAIlrD,OAC7B0qD,GAAaS,6BAA+B,GAAInrD,OAChD0qD,GAAaU,oCAAsC,GAAIprD,OAEvDX,MAAKgsD,qBAAuB,SAACnwC,GAAqB,MAAA4e,GAAKwxB,aAAapwC,GACpE7b,MAAKksD,oBAAsB,SAACrwC,GAAqB,MAAA4e,GAAK0xB,YAAYtwC,GAClE7b,MAAKosD,mBAAqB,SAACvwC,GAAqB,MAAA4e,GAAK4xB,WAAWxwC,IAGnDwvC,EAAA3vB,YAAd,WAEC,GAAI17B,KAAK6pD,UACR,MAAO7pD,MAAK6pD,SAEb,OAAQ7pD,MAAK6pD,UAAY,GAAIwB,GAOvBA,GAAA9qD,UAAAmjC,eAAP,SAAsB4oB,IAWfjB,GAAA9qD,UAAAgsD,gBAAP,SAAuBD,GAEtB,GAAIttD,EACJ,KAAKA,EAAI,EAAGA,EAAIgB,KAAKwsD,kBAAmBxtD,EAAG,CAC1CgB,KAAKysD,YAAczsD,KAAK4rD,aAAa5sD,EAErCgB,MAAK2iC,kBAAoB0oB,EAAaS,6BAA8B9rD,KAAKysD,YAAY5oD,GACrF7D,MAAK8pD,yBAA2BuB,EAAaU,oCAAqC/rD,KAAKysD,YAAY5oD,GACnG,IAAI7D,KAAK2iC,mBAAqB3iC,KAAK8pD,yBAA0B,CAC5D,GAAI9pD,KAAK8pD,yBACR9pD,KAAKsY,cAActY,KAAKurD,UAAWvrD,KAAK0sD,gBAAiB1sD,KAAK8pD,yBAA0B9pD,KAAKysD,YAC9F,IAAIzsD,KAAK2iC,kBACR3iC,KAAKsY,cAActY,KAAK2rD,WAAY3rD,KAAK0sD,gBAAiB1sD,KAAK2iC,kBAAmB3iC,KAAKysD,aAGzF,GAAIH,GAAkBtsD,KAAK2iC,kBAC1B3iC,KAAKsY,cAActY,KAAKyrD,WAAYzrD,KAAK0sD,gBAAiB1sD,KAAK2iC,kBAAmB3iC,KAAKysD,aAGzF,GAAI5wC,EACJ,IAAImuC,EvE+sZE,IuE5sZF/+C,GAAajL,KAAKiH,cAAc1H,MACpC,KAAKP,EAAI,EAAGA,EAAIiM,IAAOjM,EAAG,CAEzB6c,EAAQ7b,KAAKiH,cAAcjI,EAC3BgrD,GAAanuC,EAAM+mC,MAEnB,OAAOoH,IAAeA,EAAWlvC,mBAChCkvC,EAAaA,EAAWC,MAEzB,IAAID,EACHA,EAAW98C,cAAc2O,GAE3B7b,KAAKiH,cAAc1H,OAAS,CAE5BS,MAAKsrD,aAAe,KAEpB,KAAKtsD,EAAI,EAAGA,EAAIgB,KAAKwsD,kBAAmBxtD,EAAG,CAC1CgB,KAAKysD,YAAczsD,KAAK4rD,aAAc5sD,EACtCqsD,GAAaU,oCAAqC/rD,KAAKysD,YAAY5oD,IAAOwnD,EAAaS,6BAA8B9rD,KAAKysD,YAAY5oD,KAIjIwnD,GAAA9qD,UAAAigC,aAAP,SAAoB8iB,GAEnBA,EAAK4G,YAAY96C,iBAAiB,aAAcpP,KAAKgsD,qBACrD1I,GAAK4G,YAAY96C,iBAAiB,YAAapP,KAAKksD,oBACpD5I,GAAK4G,YAAY96C,iBAAiB,WAAYpP,KAAKosD,oBAG7Cf,GAAA9qD,UAAAyiC,eAAP,SAAsBsgB,GAErBA,EAAK4G,YAAYhzC,oBAAoB,aAAclX,KAAKgsD,qBACxD1I,GAAK4G,YAAYhzC,oBAAoB,YAAalX,KAAKksD,oBACvD5I,GAAK4G,YAAYhzC,oBAAoB,WAAYlX,KAAKosD,oBAO/Cf,GAAA9qD,UAAA+X,cAAR,SAAsBuD,EAAsBuuC,EAAwBC,EAA6BY,GAGhGpvC,EAAM8nC,QAAUyG,EAAYzG,OAC5B9nC,GAAMyuC,OAASF,EAAYE,MAC3BzuC,GAAM+nC,SAAWwG,EAAYxG,QAC7B/nC,GAAMunC,QAAU6H,EAAMx/C,CACtBoQ,GAAMwnC,QAAU4H,EAAMt/C,CACtBkQ,GAAM8wC,aAAe1B,EAAMpnD,EAG3B,IAAIwmD,EAAU,CAEbxuC,EAAM+mC,OAASyH,EAAS59B,aACxB5Q,GAAMo6B,gBAAkBoU,EAASpU,eAEjCp6B,GAAM0nC,GAAK8G,EAAS9G,EAEpB1nC,GAAMklB,cAAgBspB,EAAStpB,cAAespB,EAAStpB,cAAc98B,QAAU,IAE/E4X,GAAM2nC,YAAc6G,EAAS7G,YAAa6G,EAAS7G,YAAYv/C,QAAU,IAEzE4X,GAAMhC,MAAQwwC,EAASxwC,KAEvBgC,GAAM4nC,iBAAmB4G,EAASxwC,UAE5B,CAENgC,EAAM0nC,GAAK,IACX1nC,GAAM+mC,OAAS,IACf/mC,GAAMklB,cAAgB/gC,KAAKooD,WAC3BvsC,GAAM2nC,YAAcxjD,KAAKooD,WACzBvsC,GAAMhC,MAAQ,CACdgC,GAAM4nC,iBAAmB,EAI1BzjD,KAAKiH,cAAc0S,KAAKkC,GAOjBwvC,GAAA9qD,UAAA0rD,aAAR,SAAqBpwC,GAGpB,GAAIovC,GAAmB,GAAIz+B,EAI3BxsB,MAAKwsD,iBACLxsD,MAAK4rD,aAAajyC,KAAKsxC,EACvBjrD,MAAK6rD,kBAAmBZ,EAAMpnD,IAAOonD,CAIrCjrD,MAAK2iC,kBAAoB0oB,EAAaS,6BAA8Bb,EAAMpnD,GAC1E,IAAI7D,KAAK2iC,kBACR3iC,KAAKsY,cAActY,KAAKwrD,YAAa3vC,EAAO7b,KAAK2iC,kBAAmBsoB,EAErEjrD,MAAKsrD,aAAe,KAGbD,GAAA9qD,UAAA4rD,YAAR,SAAoBtwC,IAkBZwvC,GAAA9qD,UAAA8rD,WAAR,SAAmBxwC,IAiBpB,OAAAwvC,KAKA,IAAM7+B,GAAU,WAAhB,QAAMA,MAKN,MAAAA,KA2E+G/sB,GAAAJ,QAlFtGgsD,IvEwrZNxuC,gCAAgCzb,UAAU2jD,uCAAuC,yCAAyCoC,8CAA8C,SAAS5oD,EAAQkB,EAAOJ,GACnM,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwEz6ZtB,IAAOusD,GAAOruD,EAAgB,+BAE9B,IAAOsuD,GAAYtuD,EAAe,4CAElC,IAAOonD,GAAepnD,EAAc,8CACpC,IAAOuuD,GAAWvuD,EAAe,0CxE86ZjC,IwEx6ZMmnD,GAAa,SAAAhlD,GAASX,EAAtB2lD,EAAahlD,EAyBlB,SAzBKglD,GAyBOqH,EAAyBC,EAAwBtjB,EAAwBsd,GAAzE,GAAA+F,QAAA,GAAuB,CAAvBA,EAAA,KAAyB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,KAAwB,GAAAtjB,QAAA,GAAsB,CAAtBA,EAAA,MAAwB,GAAAsd,QAAA,GAAsB,CAAtBA,EAAA,MAEpFtmD,EAAApB,KAAAU,KAvBUA,MAAAitD,eAAyB,KAyBnC,IAAIF,YAAwBH,GAC3BG,EAAe,GAAIpH,GAAgBoH,EAEpC,IAAIA,YAAwBD,GAAa,CACxC9sD,KAAKktD,QAAwBH,CAE7B/sD,MAAK2pC,OAAUqjB,GAAe,KAAO,KAAO,KAC5ChtD,MAAK0pC,OAASA,CACd1pC,MAAKgnD,OAASA,MACR,CACNhnD,KAAK6pC,MAAQkjB,EAAcnjC,OAAOmjC,GAAgB,QAClD/sD,MAAK8pC,MAASkjB,GAAe,KAAO,EAAIpjC,OAAOojC,IA/BjDrsD,OAAAC,eAAW8kD,EAAAnlD,UAAA,axEy7ZJM,IwEz7ZP,WAEC,MAAO6kD,GAAcxkD,WxE07ZfH,WAAY,KACZC,aAAc,MwEx5ZlBL,QAAAC,eAAW8kD,EAAAnlD,UAAA,iBxE85ZPM,IwE95ZJ,WAEI,MAAOb,MAAKitD,gBxE+5ZZpqD,IwE75ZJ,SAAyBC,GAErB,GAAI9C,KAAKitD,gBAAkBnqD,EACvB,MACJ9C,MAAKitD,eAAiBnqD,CACtB9C,MAAKu7C,sBxE85ZLx6C,WAAY,KACZC,aAAc,MwEp9ZP0kD,GAAAxkD,UAAmB,2BAuDlC,OAAAwkD,IAzD4BmH,EA2D5BptD,GAAuBJ,QAAdqmD,IxEk6ZNyH,+BAA+B/rD,UAAUgsD,4CAA4C,4CAA4ChG,8CAA8C,8CAA8CiG,0CAA0C,4CAA4CC,6CAA6C,SAAS/uD,EAAQkB,EAAOJ,GAY3X,GyEz+ZMkuD,GAAY,WAAlB,QAAMA,MAMSA,EAAAC,OAAgB,CAMhBD,GAAAE,OAAgB,CAMhBF,GAAAt1C,IAAa,CAC5B,OAAAs1C,KAEA9tD,GAAsBJ,QAAbkuD,OzE0+ZHH,6CAA6C,SAAS7uD,EAAQkB,EAAOJ,GAC3E,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0E/gatB,IAAOs6C,GAASp8C,EAAe,iCAC/B,IAAO4H,GAAc5H,EAAc,sCAInC,IAAOk4C,GAAKl4C,EAAgB,+BAE5B,IAAOiC,GAASjC,EAAe,oCAQ/B,IAAOiwC,GAAajwC,EAAc,0CAClC,IAAO4lD,GAAoB5lD,EAAa,iDAGxC,IAAOonD,GAAepnD,EAAc,8C1EghapC,I0ElgaMsuD,GAAY,SAAAnsD,GAASX,EAArB8sD,EAAYnsD,EAqEjB,SArEKmsD,KAAN,GAAApyB,GAAAz6B,IAuEEU,GAAApB,KAAAU,KApEOA,MAAA0tD,oBAA8B,KAE9B1tD,MAAA2tD,eAAyB,KACzB3tD,MAAA4tD,OAAgB,CAGhB5tD,MAAAg7C,SAA0B,GAAI14C,MAE/BtC,MAAA86C,iBAA0B,CAC1B96C,MAAA6tD,aAAuB,KACtB7tD,MAAA8tD,oBAA8B,IAC9B9tD,MAAA+tD,sBAA+B,CAC/B/tD,MAAAguD,qBAA8B,CAsB/BhuD,MAAAiuD,aAAsB,CAEtBjuD,MAAAkuD,sBAA+B,CAE9BluD,MAAAmuD,WAAqB,KAUtBnuD,MAAA+6C,YAAqBJ,EAAUrN,MAE9BttC,MAAAi7C,QAAkB,IAClBj7C,MAAAk7C,QAAkB,IAClBl7C,MAAAouD,QAAkB,KAClBpuD,MAAA4e,OAAgB,QAKjB5e,MAAAquD,SAAkB,CAClBruD,MAAAsuD,QAAiB,CAWvBtuD,MAAKiuD,aAAerkC,OAAO5pB,KAAK6D,GAEhC7D,MAAKm7C,QAAU,GAAI74C,MAEnBtC,MAAKuuD,uBAAyB,SAAC1yC,GAAgB,MAAA4e,GAAK+zB,eAAe3yC,GAEnE7b,MAAKyuD,mBAAqB,MAM3B9tD,OAAAC,eAAWisD,EAAAtsD,UAAA,S1Es9ZJM,I0Et9ZP,WAEC,MAAOb,MAAK4tD,Q1Eu9ZN/qD,I0Ep9ZP,SAAiBC,GAEhB,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAI9C,KAAK4tD,QAAU9qD,EAClB,MAED9C,MAAK4tD,OAAS9qD,CAEd,IAAI9C,KAAKovC,iBAAmB,KAC3BpvC,KAAKovC,gBAAkB,GAAIjpC,EAE5BnG,MAAKovC,gBAAgBtkC,gBAAkBhI,CAEvC9C,MAAKu7C,sB1Eg9ZCx6C,WAAY,KACZC,aAAc,M0E38ZrBL,QAAAC,eAAWisD,EAAAtsD,UAAA,kB1Ei9ZJM,I0Ej9ZP,WAEC,MAAOb,MAAKovC,iB1Ek9ZNvsC,I0E/8ZP,SAA0BC,GAEzB9C,KAAKovC,gBAAkBtsC,CAEvB9C,MAAKu7C,sB1E+8ZCx6C,WAAY,KACZC,aAAc,M0Ez8ZrBL,QAAAC,eAAWisD,EAAAtsD,UAAA,iB1Eg9ZJM,I0Eh9ZP,WAEC,MAAOb,MAAK2tD,gB1Ei9ZN9qD,I0E98ZP,SAAyBC,GAExB,GAAI9C,KAAK2tD,gBAAkB7qD,EAC1B,MAED9C,MAAK2tD,eAAiB7qD,CAEtB9C,MAAKu7C,sB1E68ZCx6C,WAAY,KACZC,aAAc,M0E38ZrBL,QAAAC,eAAWisD,EAAAtsD,UAAA,a1E88ZJM,I0E98ZP,WAEC,MAAOb,MAAK0uD,Y1E+8ZN3tD,WAAY,KACZC,aAAc,M0E18ZrBL,QAAAC,eAAWisD,EAAAtsD,UAAA,U1Eg9ZJM,I0Eh9ZP,WAEC,MAAOb,MAAKquD,U1Ei9ZNttD,WAAY,KACZC,aAAc,M0E58ZrBL,QAAAC,eAAWisD,EAAAtsD,UAAA,gB1Ek9ZJM,I0El9ZP,WAEC,MAAOb,MAAKs7C,e1Em9ZNv6C,WAAY,KACZC,aAAc,M0E18ZrBL,QAAAC,eAAWisD,EAAAtsD,UAAA,e1Em9ZJM,I0En9ZP,WAEC,MAAOb,MAAKq7C,e1Eo9ZNx4C,I0Ej9ZP,SAAuBC,GAEtB,GAAI9C,KAAKq7C,eAAiBv4C,EACzB,MAED,IAAI9C,KAAKq7C,cACRr7C,KAAKq7C,cAAcnkC,oBAAoBu/B,EAAMkY,OAAQ3uD,KAAKuuD,uBAE3DvuD,MAAKq7C,cAAgBv4C,CAErB,IAAI9C,KAAKq7C,cACRr7C,KAAKq7C,cAAcjsC,iBAAiBqnC,EAAMkY,OAAQ3uD,KAAKuuD,uBAExDvuD,MAAKu7C,sB1E88ZCx6C,WAAY,KACZC,aAAc,M0Ez8ZrBL,QAAAC,eAAWisD,EAAAtsD,UAAA,U1E+8ZJM,I0E/8ZP,WAEC,MAAOb,MAAKi7C,S1Eg9ZNp4C,I0E78ZP,SAAkBC,GAEjB,GAAI9C,KAAKi7C,SAAWn4C,EACnB,MAED9C,MAAKi7C,QAAUn4C,CAEf9C,MAAK4uD,sB1E48ZC7tD,WAAY,KACZC,aAAc,M0Ev8ZrBL,QAAAC,eAAWisD,EAAAtsD,UAAA,U1E68ZJM,I0E78ZP,WAEC,MAAOb,MAAKk7C,S1E88ZNr4C,I0E38ZP,SAAkBC,GAEjB,GAAI9C,KAAKk7C,SAAWp4C,EACnB,MAED9C,MAAKk7C,QAAUp4C,CAEf9C,MAAK4uD,sB1E08ZC7tD,WAAY,KACZC,aAAc,M0Ep8ZrBL,QAAAC,eAAWisD,EAAAtsD,UAAA,U1E28ZJM,I0E38ZP,WAEC,MAAOb,MAAKouD,S1E48ZNvrD,I0Ez8ZP,SAAkBC,GAEjB,GAAI9C,KAAKouD,SAAWtrD,EACnB,MAED9C,MAAKouD,QAAUtrD,CAEf9C,MAAK4uD,sB1Ew8ZC7tD,WAAY,KACZC,aAAc,M0En8ZrBL,QAAAC,eAAWisD,EAAAtsD,UAAA,S1Ey8ZJM,I0Ez8ZP,WAEC,MAAOb,MAAK4e,Q1E08ZN/b,I0Ev8ZP,SAAiBC,GAEhB,GAAI9C,KAAK4e,QAAU9b,EAClB,MAED9C,MAAK4e,OAAS9b,CAEd9C,MAAK4uD,sB1Es8ZC7tD,WAAY,KACZC,aAAc,M0Ej8ZrBL,QAAAC,eAAWisD,EAAAtsD,UAAA,W1Eu8ZJM,I0Ev8ZP,WAEC,MAAOb,MAAK6uD,W1Ew8ZNhsD,I0Er8ZP,SAAmBC,GAElB,GAAI9C,KAAK6uD,WAAa/rD,EACrB,MAED9C,MAAK6uD,UAAY/rD,CAEjB9C,MAAK4uD,oBAEL,IAAI5uD,KAAK6uD,UAAU9W,QAAQ4N,GAAkB,CAC5C,GAAImJ,GAAoD9uD,KAAK6uD,SAC7D7uD,MAAK0uD,WAAaI,EAAgBC,UAAU9f,SAE5CjvC,MAAKquD,SAAWS,EAAgBC,UAAUC,KAAKjjD,MAC/C/L,MAAKsuD,QAAUQ,EAAgBC,UAAUC,KAAKhgD,UACxC,CACNhP,KAAK0uD,WAAa,IAClB1uD,MAAKquD,SAAW,CAChBruD,MAAKsuD,QAAU,EAIhBtuD,KAAKivD,uB1Ei8ZCluD,WAAY,KACZC,aAAc,M0E57ZrBL,QAAAC,eAAWisD,EAAAtsD,UAAA,c1Ek8ZJM,I0El8ZP,WAEC,MAAOb,MAAK6tD,c1Em8ZNhrD,I0Eh8ZP,SAAsBC,GAErB,GAAI9C,KAAK6tD,cAAgB/qD,EACxB,MAED9C,MAAK6tD,aAAe/qD,CAEpB9C,MAAK4uD,sB1E+7ZC7tD,WAAY,KACZC,aAAc,M0E17ZrBL,QAAAC,eAAWisD,EAAAtsD,UAAA,qB1Eg8ZJM,I0Eh8ZP,WAEC,MAAOb,MAAK0tD,qB1Ei8ZN7qD,I0E97ZP,SAA6BC,GAE5B,GAAI9C,KAAK0tD,qBAAuB5qD,EAC/B,MACD9C,MAAK0tD,oBAAsB5qD,CAC3B9C,MAAK4uD,sB1E+7ZC7tD,WAAY,KACZC,aAAc,M0Ez7ZrBL,QAAAC,eAAWisD,EAAAtsD,UAAA,sB1Eg8ZJM,I0Eh8ZP,WAEC,MAAOb,MAAK8tD,qB1Ei8ZNjrD,I0E97ZP,SAA8BC,GAE7B,GAAI9C,KAAK8tD,qBAAuBhrD,EAC/B,MAED9C,MAAK8tD,oBAAsBhrD,CAE3B9C,MAAK4uD,sB1E67ZC7tD,WAAY,KACZC,aAAc,M0Er7ZrBL,QAAAC,eAAWisD,EAAAtsD,UAAA,uB1E87ZJM,I0E97ZP,WAEC,MAAOb,MAAKguD,sB1E+7ZNnrD,I0E57ZP,SAA+BC,GAE9B,GAAI9C,KAAKguD,sBAAwBlrD,EAChC,MAED9C,MAAKguD,qBAAuBlrD,CAE5B9C,MAAK4uD,sB1E27ZC7tD,WAAY,KACZC,aAAc,M0En7ZrBL,QAAAC,eAAWisD,EAAAtsD,UAAA,wB1E47ZJM,I0E57ZP,WAEC,MAAOb,MAAK+tD,uB1E67ZNlrD,I0E17ZP,SAAgCC,GAE/B,GAAI9C,KAAK+tD,uBAAyBjrD,EACjC,MAED9C,MAAK+tD,sBAAwBjrD,CAE7B9C,MAAK4uD,sB1Ey7ZC7tD,WAAY,KACZC,aAAc,M0En7Zd6rD,GAAAtsD,UAAAU,QAAP,WAEC,GAAIjC,EACJ,IAAIiM,EAEJA,GAAMjL,KAAKg7C,SAASz7C,MACpB,KAAKP,EAAI,EAAGA,EAAIiM,EAAKjM,IACpBgB,KAAKg7C,SAASh8C,GAAGiC,SAElBjB,MAAKg7C,SAAW,GAAI14C,OAMrB3B,QAAAC,eAAWisD,EAAAtsD,UAAA,a1Es7ZJM,I0Et7ZP,WAEC,MAAOb,MAAKmuD,Y1Eu7ZNtrD,I0Ep7ZP,SAAqBC,GAEpB,GAAI9C,KAAKmuD,WAAarrD,EACrB,MAED9C,MAAKmuD,WAAarrD,CAElB9C,MAAK4uD,sB1Em7ZC7tD,WAAY,KACZC,aAAc,M0Ev6ZrBL,QAAAC,eAAWisD,EAAAtsD,UAAA,a1Eo7ZJM,I0Ep7ZP,WAEC,MAAOb,MAAK+6C,a1Eq7ZNl4C,I0El7ZP,SAAqBC,GAEpB,GAAI9C,KAAK+6C,aAAej4C,EACvB,MAED9C,MAAK+6C,YAAcj4C,CAEnB9C,MAAKu7C,sB1Ei7ZCx6C,WAAY,KACZC,aAAc,M0E16ZrBL,QAAAC,eAAWisD,EAAAtsD,UAAA,sB1Ek7ZJM,I0El7ZP,WAEC,MAAOb,MAAKkvD,qB1Em7ZNrsD,I0Eh7ZP,SAA8BC,GAE7B,GAAI9C,KAAKkvD,qBAAuBpsD,EAC/B,MAED9C,MAAKkvD,oBAAsBpsD,CAE3B9C,MAAK4uD,sB1E+6ZC7tD,WAAY,KACZC,aAAc,M0Ex6ZrBL,QAAAC,eAAWisD,EAAAtsD,UAAA,kB1Eg7ZJM,I0Eh7ZP,WAEC,MAAOb,MAAK86C,kB1Ei7ZNj4C,I0E96ZP,SAA0BC,GAEzB,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAI9C,KAAK86C,kBAAoBh4C,EAC5B,MAED9C,MAAK86C,iBAAmBh4C,CAExB9C,MAAK4uD,sB1E46ZC7tD,WAAY,KACZC,aAAc,M0Ev6ZrBL,QAAAC,eAAWisD,EAAAtsD,UAAA,S1E66ZJM,I0E76ZP,WAEC,MAAOb,MAAKsuD,S1E86ZNvtD,WAAY,KACZC,aAAc,M0Eh6Zd6rD,GAAAtsD,UAAA+jB,UAAP,SAAiB6qC,GAEhBnvD,KAAKm7C,QAAQxhC,KAAKw1C,EAElB,IAAIC,EACJ,IAAIjrC,GAAiCgrC,EAAMhrC,QAE3C,IAAIA,EACHirC,EAA+BjrC,EAASirC,YAEzC,IAAID,EAAMhrC,SAAU,CACnB,GAAInkB,KAAKs7C,eAAiB8T,GAAgBpvD,KAAKs7C,cAAe,CAC7D,KAAM,IAAIp8C,OAAM,iGACV,CACN,GAAIc,KAAKs7C,eAAiB8T,EAAc,CAEvCpvD,KAAKs7C,cAAgB8T,CAErBpvD,MAAKqvD,wBAKRF,EAAMjiD,cAAc,GAAIi3C,GAAqBA,EAAqBG,qBAAsBtkD,OASlF6sD,GAAAtsD,UAAA8jB,aAAP,SAAoB8qC,GAEnBnvD,KAAKm7C,QAAQphC,OAAO/Z,KAAKm7C,QAAQrhC,QAAQq1C,GAAQ,EAEjD,IAAInvD,KAAKm7C,QAAQ57C,QAAU,EAAG,CAC7BS,KAAKs7C,cAAgB,IAErBt7C,MAAKqvD,sBAGNF,EAAMjiD,cAAc,GAAIi3C,GAAqBA,EAAqBG,qBAAsBtkD,OAQzFW,QAAAC,eAAWisD,EAAAtsD,UAAA,W1Em6ZJM,I0En6ZP,WAEC,MAAOb,MAAKm7C,S1Eo6ZNp6C,WAAY,KACZC,aAAc,M0E75Zd6rD,GAAAtsD,UAAAquD,mBAAP,WAEC,GAAI3jD,GAAajL,KAAKg7C,SAASz7C,MAC/B,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,EAAKjM,IAC/BgB,KAAKg7C,SAASh8C,GAAGy8C,mBAGXoR,GAAAtsD,UAAA8uD,oBAAR,WAEC,GAAIpkD,GAAajL,KAAKg7C,SAASz7C,MAC/B,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,EAAKjM,IAC/BgB,KAAKg7C,SAASh8C,GAAGqwD,sBAGZxC,GAAAtsD,UAAAg7C,mBAAP,WAEC,GAAItwC,GAAajL,KAAKg7C,SAASz7C,MAC/B,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,EAAKjM,IAC/BgB,KAAKg7C,SAASh8C,GAAGw8C,mBAMXqR,GAAAtsD,UAAAiuD,eAAR,SAAuB3yC,GAEtB7b,KAAKu7C,qBAGCsR,GAAAtsD,UAAA0uD,oBAAP,WAEC,IAAKjvD,KAAKsvD,aACTtvD,KAAKsvD,aAAe,GAAI9gB,GAAcA,EAAcW,aAErDnvC,MAAKkN,cAAclN,KAAKsvD,cAGlBzC,GAAAtsD,UAAAo7C,YAAP,SAAmBzZ,GAElBliC,KAAKg7C,SAASrhC,KAAKuoB,EAEnB,OAAOA,GAGD2qB,GAAAtsD,UAAAq7C,eAAP,SAAsB1Z,GAErBliC,KAAKg7C,SAASjhC,OAAO/Z,KAAKg7C,SAASlhC,QAAQooB,GAAS,EAEpD,OAAOA,GAET,OAAA2qB,IApnB2BrsD,EAsnBLf,GAAAJ,QAAbwtD,I1Es5ZNhR,iCAAiCz6C,UAAUk4C,+BAA+Bl4C,UAAUmb,sCAAsCnb,UAAUD,oCAAoCC,UAAUsuC,0CAA0C,0CAA0CwU,iDAAiD,iDAAiDkD,8CAA8C,gDAAgDmI,6DAA6D,SAAShxD,EAAQkB,EAAOJ,GAC9hB,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2EjjbtB,IAAOG,GAASjC,EAAe,oC3E2jb/B,I2E1ibMixD,GAAe,SAAA9uD,GAASX,EAAxByvD,EAAe9uD,EAqBpB,SArBK8uD,KAuBJ9uD,EAAApB,KAAAU,KAnBMA,MAAAyvD,iBAA0B,CAC1BzvD,MAAA0vD,uBAAgC,CAChC1vD,MAAA2vD,wBAAiC,CACjC3vD,MAAA4vD,8BAAuC,CACvC5vD,MAAA6vD,iBAA0B,EAqB1BL,EAAAjvD,UAAAU,QAAP,YAOAN,QAAAC,eAAW4uD,EAAAjvD,UAAA,a3E4hbJM,I2E5hbP,WAEC,MAAO2uD,GAAgBtuD,W3E6hbjBH,WAAY,KACZC,aAAc,M2ExhbrBL,QAAAC,eAAW4uD,EAAAjvD,UAAA,wB3E8hbJM,I2E9hbP,WAEC,MAAOb,MAAK0vD,wB3E+hbN3uD,WAAY,KACZC,aAAc,M2E1hbrBL,QAAAC,eAAW4uD,EAAAjvD,UAAA,kB3EgibJM,I2EhibP,WAEC,MAAOb,MAAKyvD,kB3EiibN1uD,WAAY,KACZC,aAAc,M2E5hbrBL,QAAAC,eAAW4uD,EAAAjvD,UAAA,+B3EkibJM,I2ElibP,WAEC,MAAOb,MAAK4vD,+B3EmibN7uD,WAAY,KACZC,aAAc,M2E9hbrBL,QAAAC,eAAW4uD,EAAAjvD,UAAA,yB3EoibJM,I2EpibP,WAEC,MAAOb,MAAK2vD,yB3EqibN5uD,WAAY,KACZC,aAAc,M2EhibrBL,QAAAC,eAAW4uD,EAAAjvD,UAAA,kB3EsibJM,I2EtibP,WAEC,MAAOb,MAAK6vD,kB3EuibN9uD,WAAY,KACZC,aAAc,M2ElibrBL,QAAAC,eAAW4uD,EAAAjvD,UAAA,e3EwibJM,I2ExibP,WAEC,MAAOb,MAAK8vD,e3EyibN/uD,WAAY,KACZC,aAAc,M2EpibrBL,QAAAC,eAAW4uD,EAAAjvD,UAAA,qB3E0ibJM,I2E1ibP,WAEC,MAAOb,MAAK+vD,qB3E2ibNhvD,WAAY,KACZC,aAAc,M2EtibrBL,QAAAC,eAAW4uD,EAAAjvD,UAAA,sB3E4ibJM,I2E5ibP,WAEC,MAAOb,MAAKgwD,sB3E6ibNjvD,WAAY,KACZC,aAAc,M2ExibrBL,QAAAC,eAAW4uD,EAAAjvD,UAAA,4B3E8ibJM,I2E9ibP,WAEC,MAAOb,MAAKiwD,4B3E+ibNlvD,WAAY,KACZC,aAAc,M2E1ibrBL,QAAAC,eAAW4uD,EAAAjvD,UAAA,e3EgjbJM,I2EhjbP,WAEC,MAAOb,MAAKkwD,e3EijbNnvD,WAAY,KACZC,aAAc,M2E5ibrBL,QAAAC,eAAW4uD,EAAAjvD,UAAA,qB3EkjbJM,I2EljbP,WAEC,MAAOb,MAAKmwD,qB3EmjbNpvD,WAAY,KACZC,aAAc,M2E9ibrBL,QAAAC,eAAW4uD,EAAAjvD,UAAA,mB3EojbJM,I2EpjbP,WAEC,MAAOb,MAAKowD,mB3EqjbNrvD,WAAY,KACZC,aAAc,M2EhjbdwuD,GAAAjvD,UAAA8vD,cAAP,SAAqB32C,GAEpB1Z,KAAKswD,mBAAmB52C,GAOjB81C,GAAAjvD,UAAA+vD,mBAAR,SAA2B52C,G3EqjbpB,G2EljbF62C,GAAqB72C,EAAW82C,aAAaj6C,aACjD,IAAIk6C,EAEJ,IAAI17B,GAAYw7B,EAAU9kD,EAAGupB,EAAYu7B,EAAU5kD,EAAGspB,EAAYs7B,EAAU1kD,CAC5E,IAAI2J,GAAWC,EAAWC,CAC1B,IAAI+oC,GAAUiS,EAAe,CAC7B,IAAI1xD,EAGJ,KAAKA,EAAI,EAAGA,EAAIgB,KAAK6vD,mBAAoB7wD,EAAG,CAE3CyxD,EAAWzwD,KAAKkwD,cAAclxD,GAAGuX,aACjCf,GAAKuf,EAAK07B,EAAShlD,CACnBgK,GAAKuf,EAAKy7B,EAAS9kD,CACnB+J,GAAKuf,EAAKw7B,EAAS5kD,CAEnB4yC,GAAIjpC,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,CAGvB+oC,GAAIA,EAAI,KAAQ,EAAEA,EAAI,GACtBz+C,MAAKmwD,oBAAoBnxD,GAAKy/C,CAC9BiS,IAASjS,EAIViS,EAAQ,EAAEA,CAEV,KAAK1xD,EAAI,EAAGA,EAAIgB,KAAK6vD,mBAAoB7wD,EACxCgB,KAAKmwD,oBAAoBnxD,IAAM0xD,EAlLnBlB,GAAAtuD,UAAmB,qBAoLlC,OAAAsuD,IAtL8BhvD,EAwL9Bf,GAAyBJ,QAAhBmwD,I3E8ibNruD,oCAAoCC,YAAYuvD,+DAA+D,SAASpyD,EAAQkB,EAAOJ,GAC1I,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4E7vbtB,IAAOo2C,GAAKl4C,EAAgB,+BAG5B,IAAO0zC,GAAgB1zC,EAAc,+CACrC,IAAOg1C,GAAUh1C,EAAe,yCAChC,IAAOo7C,GAAUp7C,EAAe,yCAChC,IAAOmgB,GAAUngB,EAAe,uCAChC,IAAOixD,GAAejxD,EAAc,4D5EmwbpC,I4E5vbMqyD,GAAiB,SAAAlwD,GAASX,EAA1B6wD,EAAiBlwD,EAStB,SATKkwD,GASOC,GATb,GAAAp2B,GAAAz6B,IAWEU,GAAApB,KAAAU,KAEAA,MAAK8wD,4BAA8B,SAACj1C,GAAqB,MAAA4e,GAAKs2B,mBAAmBl1C,GAEjF7b,MAAK6wD,OAASA,EAMflwD,OAAAC,eAAWgwD,EAAArwD,UAAA,U5EuvbJM,I4EvvbP,WAEC,MAAOb,MAAKgxD,S5EwvbNnuD,I4ErvbP,SAAkBC,GAEjB,GAAImuD,GAAwB,CAC5B,IAAIC,GAA8B,CAClC,IAAIC,GAA+B,CACnC,IAAIC,GAAqC,CACzC,IAAIC,GAAwB,CAC5B,IAAIrxC,EAEJ,IAAIhgB,KAAKgxD,QACRhxD,KAAKsxD,gBAENtxD,MAAKgxD,QAAUluD,CACf9C,MAAKowD,kBAAoBttD,CACzB9C,MAAK8vD,cAAgB,GAAIxtD,MACzBtC,MAAKgwD,qBAAuB,GAAI1tD,MAChCtC,MAAK+vD,oBAAsB,GAAIztD,MAC/BtC,MAAKiwD,2BAA6B,GAAI3tD,MACtCtC,MAAKkwD,cAAgB,GAAI5tD,MAEzB,IAAI2I,GAAanI,EAAMvD,MAEvB,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,IAAOjM,EAAG,CACpCghB,EAAQld,EAAM9D,EACdghB,GAAM5Q,iBAAiBsP,EAAWuB,oBAAqBjgB,KAAK8wD,4BAE5D,IAAI9wC,YAAiB25B,GAAY,CAChC,GAAI35B,EAAMhW,aACThK,KAAKgwD,qBAAqBmB,KAAwCnxC,MAElEhgB,MAAK8vD,cAAcmB,KAAiCjxC,MAE/C,IAAIA,YAAiBiyB,GAAkB,CAC7C,GAAIjyB,EAAMhW,aACThK,KAAKiwD,2BAA2BmB,KAAoDpxC,MAEpFhgB,MAAK+vD,oBAAoBmB,KAA6ClxC,MAEjE,IAAIA,YAAiBuzB,GAAY,CACvCvzC,KAAKkwD,cAAcmB,KAAiCrxC,GAItD,GAAIhgB,KAAK0vD,wBAA0BwB,GAAwBlxD,KAAKyvD,kBAAoBwB,GAAkBjxD,KAAK6vD,kBAAoBwB,GAAkBrxD,KAAK2vD,yBAA2BwB,GAAyBnxD,KAAK4vD,+BAAiCwB,EAC/O,MAEDpxD,MAAK0vD,uBAAyBwB,CAC9BlxD,MAAK4vD,8BAAgCwB,CACrCpxD,MAAKyvD,iBAAmBwB,CACxBjxD,MAAK2vD,wBAA0BwB,CAC/BnxD,MAAK6vD,iBAAmBwB,CAGxBrxD,MAAKmwD,oBAAsB,GAAI7tD,OAAcgV,KAAKi6C,KAAKF,EAAe,GAAG,EAGzErxD,MAAKkN,cAAc,GAAIupC,GAAMA,EAAMkY,U5E6ub7B5tD,WAAY,KACZC,aAAc,M4Evubb4vD,GAAArwD,UAAA+wD,eAAR,WAEC,GAAIrmD,GAAajL,KAAKgxD,QAAQzxD,MAC9B,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,IAAOjM,EACjCgB,KAAKgxD,QAAQhyD,GAAGkY,oBAAoBwH,EAAWuB,oBAAqBjgB,KAAK8wD,6BAMnEF,GAAArwD,UAAAwwD,mBAAR,SAA2Bl1C,GAK1B,GAAImE,GAA8BnE,EAAM3Y,MAExC,IAAI8c,YAAiB25B,GACpB35C,KAAKwxD,mBAAgCxxC,OACjC,IAAIA,YAAiBiyB,GACzBjyC,KAAKyxD,yBAA4CzxC,EAElDhgB,MAAKkN,cAAc,GAAIupC,GAAMA,EAAMkY,SAM5BiC,GAAArwD,UAAAkxD,yBAAR,SAAiCzxC,GAEhC,GAAI0xC,GAAyC1xC,CAE7C,IAAIA,EAAMhW,aAAc,GACrBhK,KAAK0vD,yBACL1vD,KAAK4vD,6BAGP5vD,MAAK+vD,oBAAoBh2C,OAAO/Z,KAAK+vD,oBAAoBj2C,QAAQ43C,GAAK,EACtE1xD,MAAKiwD,2BAA2Bt2C,KAAKqG,OAE/B,GACJhgB,KAAK0vD,yBACL1vD,KAAK4vD,6BAEP5vD,MAAKiwD,2BAA2Bl2C,OAAO/Z,KAAKiwD,2BAA2Bn2C,QAAQ43C,GAAK,EACpF1xD,MAAK+vD,oBAAoBp2C,KAAKqG,IAOxB4wC,GAAArwD,UAAAixD,mBAAR,SAA2BxxC,GAE1B,GAAI2xC,GAA6B3xC,CAEjC,IAAIA,EAAMhW,aAAc,GACrBhK,KAAKyvD,mBACLzvD,KAAK2vD,uBACP3vD,MAAK8vD,cAAc/1C,OAAO/Z,KAAK8vD,cAAch2C,QAAQ63C,GAAK,EAC1D3xD,MAAKgwD,qBAAqBr2C,KAAKqG,OACzB,GACJhgB,KAAKyvD,mBACLzvD,KAAK2vD,uBAEP3vD,MAAKgwD,qBAAqBj2C,OAAO/Z,KAAKgwD,qBAAqBl2C,QAAQ63C,GAAK,EACxE3xD,MAAK8vD,cAAcn2C,KAAKqG,IAG3B,OAAA4wC,IA9JgCpB,EAgKL/vD,GAAAJ,QAAlBuxD,I5E+tbNtX,+BAA+Bl4C,UAAU2wC,+CAA+C,+CAA+CuB,yCAAyC,yCAAyCmG,yCAAyC,yCAAyCh5B,uCAAuC,uCAAuC8uC,4DAA4D,8DAA8DqC,kEAAkE,SAASrzD,EAAQkB,EAAOJ,GAChlB,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6Ej5btB,IAAOkG,GAAahI,EAAc,qCAClC,IAAOgwC,GAAShwC,EAAe,iCAC/B,IAAOk4C,GAAKl4C,EAAgB,+BAC5B,IAAO0jB,GAAe1jB,EAAc,yCAEpC,IAAOszD,GAAoBtzD,EAAa,mDAKxC,IAAOogC,GAAMpgC,EAAgB,qCAC7B,IAAOyzC,GAAuBzzC,EAAY,qEAG1C,IAAMuzD,GAAmB,SAAApxD,GAASX,EAA5B+xD,EAAmBpxD,EAgBxB,SAhBKoxD,GAgBOC,GAAA,GAAAA,QAAA,GAA+B,CAA/BA,EAAA,EAEXrxD,EAAApB,KAAAU,KAfOA,MAAAgyD,sBAAgC,IAiBvC,IAAID,EAAc,GAAKA,EAAc,EACpC,KAAM,IAAI7yD,OAAM,iDAEjBc,MAAKiyD,aAAeF,CACpB/xD,MAAKkyD,kBAAoB,GAAIjwC,GAAgBjiB,KAC7CA,MAAKqlB,OAGCysC,EAAAvxD,UAAA4xD,cAAP,SAAqBt4C,GAEpB,MAAO7Z,MAAKoyD,aAAav4C,GAGnBi4C,GAAAvxD,UAAA8xD,cAAP,SAAqBx4C,EAAuB/W,GAE3C,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAI+W,GAAS7Z,KAAKiyD,aACjB,KAAM,IAAI/yD,OAAM,qDAEjBc,MAAKoyD,aAAav4C,GAAS/W,EAGrBgvD,GAAAvxD,UAAA+xD,oBAAP,SAA2BjiD,GAE1B,MAAOrQ,MAAKuyD,cAAcliD,GAAWkhC,eAG9BugB,GAAAvxD,UAAA8kB,KAAR,WAECrlB,KAAKoyD,aAAe,GAAI9vD,OAActC,KAAKiyD,aAC3CjyD,MAAKwyD,oBAAsB,GAAIlwD,OAActC,KAAKiyD,aAElD,IAAIrzD,GAAW,CACf,KAAK,GAAII,GAAmBgB,KAAKiyD,aAAe,EAAGjzD,GAAK,IAAKA,EAAG,CAC/DgB,KAAKoyD,aAAapzD,GAAKJ,CACvBA,IAAK,GAGNoB,KAAKyyD,aAAenwD,OAAe,EAAG,GAAI,EAAG,EAC7CtC,MAAK0yD,aAAepwD,MAAc,EAAG,GAAI,GAAI,EAC7CtC,MAAK2yD,eAAiB,GAAIrwD,OAAiB,EAC3CtC,MAAK4yD,aAAe,GAAItwD,MACxBtC,MAAKuyD,cAAgB,GAAIjwD,MAEzB,KAAKtD,EAAI,EAAGA,EAAIgB,KAAKiyD,eAAgBjzD,EAAG,CACvCgB,KAAK4yD,aAAa5zD,GAAK,GAAI6yD,EAC3B7xD,MAAKuyD,cAAcvzD,GAAK,GAAI2/B,GAAO3+B,KAAK4yD,aAAa5zD,KAIhD8yD,GAAAvxD,UAAAsyD,kBAAP,SAAyB/vD,GAExBpC,EAAAH,UAAMsyD,kBAAiBvzD,KAAAU,KAAC8C,EAExB9C,MAAK8yD,yBAGEhB,GAAAvxD,UAAAuyD,uBAAR,WAEC9yD,KAAKgyD,sBAAwB,KAG9BrxD,QAAAC,eAAWkxD,EAAAvxD,UAAA,e7E22bJM,I6E32bP,WAEC,MAAOb,MAAKiyD,c7E42bNpvD,I6Ez2bP,SAAuBC,GAEtB,GAAIA,GAAS9C,KAAKiyD,aACjB,MAED;GAAInvD,EAAQ,GAAKA,EAAQ,EACxB,KAAM,IAAI5D,OAAM,iDAEjBc,MAAKiyD,aAAenvD,CACpB9C,MAAK8yD,wBACL9yD,MAAKqlB,MACLrlB,MAAKkN,cAAc,GAAIupC,GAAMA,EAAMkY,U7Ew2b7B5tD,WAAY,KACZC,aAAc,M6Et2bd8wD,GAAAvxD,UAAAwyD,cAAP,SAAqB7vD,EAAwBsV,EAAa0C,GAEzD,GAAIlb,KAAKgyD,sBACRhyD,KAAKgzD,oBAENhzD,MAAKizD,kBAAkBC,WAAalzD,KAAKmzD,YACzCnzD,MAAKizD,kBAAkB78C,OAASpW,KAAKozD,oBACrCpzD,MAAKizD,kBAAkB/8C,OACvBsC,GAAM4lB,mBAAmBp+B,KAAKizD,kBAE9B/3C,GAASm4C,iBAAiBrzD,KAAKizD,kBAAmB/vD,EAAO6rD,UAAUuE,QAAStzD,KAAKiyD,aAAcjyD,KAAK2yD,eAAgB3yD,KAAKuyD,eAGlHT,GAAAvxD,UAAAyyD,mBAAR,WAEC,GAAIO,GAAcvzD,KAAKwzD,eAAe,EAEtCxzD,MAAK2yD,eAAe,GAAK,GAAIpkB,GAAU,EAAG,EAAGglB,EAAMA,EACnDvzD,MAAK2yD,eAAe,GAAK,GAAIpkB,GAAUglB,EAAM,EAAGA,EAAMA,EACtDvzD,MAAK2yD,eAAe,GAAK,GAAIpkB,GAAU,EAAGglB,EAAMA,EAAMA,EACtDvzD,MAAK2yD,eAAe,GAAK,GAAIpkB,GAAUglB,EAAMA,EAAMA,EAAMA,EAEzDvzD,MAAKgyD,sBAAwB,MAGvBF,GAAAvxD,UAAAkzD,uBAAP,SAA8BC,GAE7B,GAAIhhC,EACJ,IAAIqP,GAAyB2xB,EAAW3xB,UACxC,IAAI4xB,GAAwB5xB,EAAW6xB,IACvC,IAAIC,GAAyB9xB,EAAW+xB,IAAMH,CAE9C3zD,MAAK+zD,oCAAoCL,EAAYA,EAAW3xB,WAAWiyB,eAAgBh0D,KAAKi0D,SAChGj0D,MAAKi0D,SAAS1pD,YAAY,IAAK,IAAK,EACpCvK,MAAKk0D,yBAAyBxhC,OAAS1yB,KAAKi0D,QAC5Cj0D,MAAKm0D,kBAAkBT,EAEvB,KAAK,GAAI10D,GAAmB,EAAGA,EAAIgB,KAAKiyD,eAAgBjzD,EAAG,CAC1D0zB,EAAS1yB,KAAK4yD,aAAa5zD,GAAG0zB,MAE9B1yB,MAAKwyD,oBAAoBxzD,GAAK20D,EAAiB3zD,KAAKoyD,aAAapzD,GAAG60D,CACpE7zD,MAAKuyD,cAAcvzD,GAAG6F,UAAUmvB,SAAWh0B,KAAKozD,qBAAqBvuD,UAAUmvB,QAE/Eh0B,MAAKo0D,0BAA0B1hC,EAAQ1yB,KAAKoyD,aAAapzD,GAAIgB,KAAKyyD,aAAazzD,GAAIgB,KAAK0yD,aAAa1zD,GAErGgB,MAAK4yD,aAAa5zD,GAAG0zB,OAASA,GAIxBo/B,GAAAvxD,UAAA6zD,0BAAR,SAAkC1hC,EAAiB2hC,EAAmBC,EAAmBC,GAExF,GAAI3/C,GAAmBrO,EAAc0O,kBACrC,IAAIu/C,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWC,CAC1B,IAAIh8B,GAAcjP,OAAOkrC,kBAAmBh8B,EAAclP,OAAOkrC,kBAAmB/7B,CACpF,IAAIC,GAAcpP,OAAOmrC,kBAAmB97B,EAAcrP,OAAOmrC,kBAAmB77B,EAActP,OAAOmrC,iBACzG,IAAI/1D,GAAoB,CAExB,OAAOA,EAAI,GAAI,CACdw1D,EAAKx0D,KAAKg1D,eAAeh2D,EACzBy1D,GAAKz0D,KAAKg1D,eAAeh2D,EAAI,EAC7B01D,GAAK10D,KAAKg1D,eAAeh2D,EAAI,EAC7B21D,GAAKH,GAAMx0D,KAAKg1D,eAAeh2D,EAAI,IAAMw1D,GAAIH,CAC7CO,GAAKH,GAAMz0D,KAAKg1D,eAAeh2D,EAAI,IAAMy1D,GAAIJ,CAC7CQ,GAAKH,GAAM10D,KAAKg1D,eAAeh2D,EAAI,IAAM01D,GAAIL,CAC7C,IAAIG,EAAK37B,EACRA,EAAO27B,CACR,IAAIA,EAAKx7B,EACRA,EAAOw7B,CACR,IAAIC,EAAK37B,EACRA,EAAO27B,CACR,IAAIA,EAAKx7B,EACRA,EAAOw7B,CACR,IAAIC,EAAKx7B,EACRA,EAAOw7B,CACR,IAAIC,EAAK97B,EACRA,EAAO87B,CACR,IAAIA,EAAK37B,EACRA,EAAO27B,CACR,IAAIC,EAAK97B,EACRA,EAAO87B,CACR,IAAIA,EAAK37B,EACRA,EAAO27B,CACR,IAAIC,EAAK37B,EACRA,EAAO27B,CACR71D,IAAK,EAGN+5B,EAAO,CAEP,IAAI0lB,GAAYzlB,EAAOH,CACvB,IAAIo8B,GAAYh8B,EAAOH,CACvB,IAAI74B,GAAW,GAAGi5B,EAAOH,EAEzB,IAAIF,EAAO,EACVA,GAAQ74B,KAAKk1D,MACd,IAAIp8B,EAAO,EACVA,GAAQ94B,KAAKk1D,MACdr8B,GAAOvhB,KAAKgK,MAAMuX,EAAK74B,KAAKk1D,QAAQl1D,KAAKk1D,MACzCp8B,GAAOxhB,KAAKgK,MAAMwX,EAAK94B,KAAKk1D,QAAQl1D,KAAKk1D,MAEzC,IAAIC,GAAe,EAAEn1D,KAAKk1D,MAC1BzW,GAAInnC,KAAKgK,MAAMm9B,EAAE0W,EAAQ,GAAGA,CAC5BF,GAAI39C,KAAKgK,MAAM2zC,EAAEE,EAAQ,GAAGA,CAE5Bn8B,GAAOH,EAAO4lB,CACdxlB,GAAOH,EAAOm8B,CAEdxW,GAAI,EAAEA,CACNwW,GAAI,EAAEA,CAENrgD,GAAI,GAAK,EAAE6pC,CACX7pC,GAAI,GAAK,EAAEqgD,CACXrgD,GAAI,IAAM3U,CACV2U,GAAI,MAAQokB,EAAOH,GAAM4lB,CACzB7pC,GAAI,MAAQqkB,EAAOH,GAAMm8B,CACzBrgD,GAAI,KAAOmkB,EAAK94B,CAChB2U,GAAI,IAAM,CACVA,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,CAElF8d,GAAOvd,gBAAgBP,EACvB8d,GAAOnoB,YAAY,IAAK,IAAK,EAC7BmoB,GAAO1Z,kBAAkBs7C,EAAYC,EAAY,EACjD7hC,GAAOnoB,YAAY,GAAI,GAAI,GAGrBunD,GAAAvxD,UAAA6O,iBAAP,SAAwBC,EAAaC,GAEpCtP,KAAKkyD,kBAAkB9iD,iBAAiBC,EAAMC,GAGxCwiD,GAAAvxD,UAAA2W,oBAAP,SAA2B7H,EAAaC,GAEvCtP,KAAKkyD,kBAAkBh7C,oBAAoB7H,EAAMC,GAG3CwiD,GAAAvxD,UAAA2M,cAAP,SAAqB2O,GAEpB,MAAO7b,MAAKkyD,kBAAkBhlD,cAAc2O,GAGtCi2C,GAAAvxD,UAAA4W,iBAAP,SAAwB9H,GAEvB,MAAOrP,MAAKkyD,kBAAkB/6C,iBAAiB9H,GAGhD1O,QAAAC,eAAIkxD,EAAAvxD,UAAA,wB7Eu0bGM,I6Ev0bP,WAEC,MAAOb,MAAKwyD,qB7Ew0bNzxD,WAAY,KACZC,aAAc,M6Ev0btB,OAAA8wD,IA/PkC9f,EAiQlCvyC,GAA6BJ,QAApByyD,I7E20bNxY,+BAA+Bl4C,UAAUwhB,yCAAyCxhB,UAAUsb,qCAAqCtb,UAAUquC,iCAAiCruC,UAAUg0D,mDAAmDh0D,UAAU2iC,qCAAqC,qCAAqCqP,qEAAqE,uEAAuEkH,kEAAkE,SAAS/7C,EAAQkB,EAAOJ,GACtiB,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8EhmctB,IAAOg1D,GAAS92D,EAAe,iCAM/B,IAAOogC,GAAMpgC,EAAgB,qCAE7B,IAAO+2D,GAAgB/2D,EAAc,8DAErC,IAAOqnD,GAAiBrnD,EAAa,gDAErC,IAAMm7C,GAAmB,SAAAh5C,GAASX,EAA5B25C,EAAmBh5C,EAMxB,SANKg5C,KAQJh5C,EAAApB,KAAAU,KAEAA,MAAKwzD,eAAiB,GACtBxzD,MAAKu1D,aAAe,GAAIjzD,MACxBtC,MAAKw1D,cAGE9b,EAAAn5C,UAAAi1D,YAAR,WAECx1D,KAAKuyD,cAAgB,GAAIjwD,MACzBtC,MAAKy1D,aAAe,GAAInzD,MAGxBtC,MAAK01D,UAAU,EAAG,GAAI,EACtB11D,MAAK01D,UAAU,GAAI,GAAI,EACvB11D,MAAK01D,WAAW,GAAI,EAAG,EACvB11D,MAAK01D,UAAU,GAAI,EAAG,EACtB11D,MAAK01D,UAAU,EAAG,EAAG,EACrB11D,MAAK01D,UAAU,EAAG,IAAK,GAGhBhc,GAAAn5C,UAAAm1D,UAAR,SAAkBhqD,EAAkBE,EAAkBE,GAErD,GAAI6pD,GAAa,GAAIh3B,EACrBg3B,GAAIjqD,UAAYA,CAChBiqD,GAAI/pD,UAAYA,CAChB+pD,GAAI7pD,UAAYA,CAChB6pD,GAAI5zB,WAAW6xB,KAAO,GAEtB,IAAI7xB,GAA2D4zB,EAAI5zB,UACnEA,GAAW6zB,YAAc,EACzB51D,MAAKy1D,aAAa97C,KAAKooB,EACvB4zB,GAAI5zB,WAAWC,cAAgB,CAC/BhiC,MAAKuyD,cAAc54C,KAAKg8C,GAIlBjc,GAAAn5C,UAAAs1D,oBAAP,WAEE,MAAO,IAAIjQ,GAAkB,GAAIyP,GAAUr1D,KAAKwzD,iBAI3C9Z,GAAAn5C,UAAAkzD,uBAAP,SAA8BC,GAE7B,GAAI1zC,GAAgChgB,KAAY,OAChD,IAAI81D,GAAqB91C,EAAM65B,SAC/B,IAAI9nC,GAAe/R,KAAK+1D,QAAQx/C,aAGhC,KAAK,GAAIvX,GAAW,EAAGA,EAAI,IAAKA,EAAG,CAClCgB,KAAKy1D,aAAaz2D,GAAG80D,IAAMgC,CAC3B91D,MAAKuyD,cAAcvzD,GAAG6F,UAAUoN,SAAWF,CAC3C/R,MAAKu1D,aAAav2D,GAAK,MAKlB06C,GAAAn5C,UAAAwyD,cAAP,SAAqB7vD,EAA0BsV,EAAa0C,GAE3D,IAAK,GAAIlc,GAAW,EAAGA,EAAI,IAAKA,EAAG,CAClC,GAAIgB,KAAKu1D,aAAav2D,GAAI,CACzBgB,KAAKizD,kBAAkB78C,OAASpW,KAAKuyD,cAAcvzD,EACnDgB,MAAKizD,kBAAkB/8C,OACvBsC,GAAM4lB,mBAAmBp+B,KAAKizD,kBAC9B/3C,GAAS86C,SAASh2D,KAAKizD,kBAAmB/vD,EAAO+yD,YAAYC,UAAW,KAAMl3D,KAIlF,OAAA06C,IA7EkC4b,EA+ElC71D,GAA6BJ,QAApBq6C,I9EwkcNyc,iCAAiC/0D,UAAU2iC,qCAAqC,qCAAqCqyB,8DAA8D,8DAA8D/O,gDAAgD,kDAAkDjU,sEAAsE,SAAS70C,EAAQkB,EAAOJ,GACpb,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+ExqctB,IAAOusD,GAAOruD,EAAgB,+BAC9B,IAAO+H,GAAQ/H,EAAgB,gCAC/B,IAAOgI,GAAahI,EAAc,qCAGlC,IAAOszD,GAAoBtzD,EAAa,mDAIxC,IAAOogC,GAAMpgC,EAAgB,qCAE7B,IAAO+2D,GAAgB/2D,EAAc,8DACrC,IAAOonD,GAAepnD,EAAc,8CAEpC,IAAMyzC,GAAuB,SAAAtxC,GAASX,EAAhCiyC,EAAuBtxC,EAc5B,SAdKsxC,KAgBJtxC,EAAApB,KAAAU,KAXMA,MAAAq2D,cAAuB,GAGvBr2D,MAAAk1D,OAAgB,EAUtBl1D,MAAKmzD,eACLnzD,MAAKk0D,yBAA2B,GAAIrC,EACpC7xD,MAAKozD,qBAAuB,GAAIz0B,GAAO3+B,KAAKk0D,yBAC5Cl0D,MAAKg1D,iBACLh1D,MAAKi0D,SAAW,GAAI3tD,GAGrB3F,OAAAC,eAAWoxC,EAAAzxC,UAAA,Q/EupcJM,I+EvpcP,WAEC,MAAOb,MAAKk1D,Q/EwpcNryD,I+ErpcP,SAAgBC,GAEf9C,KAAKk1D,OAASpyD,G/EspcR/B,WAAY,KACZC,aAAc,M+EppcrBL,QAAAC,eAAWoxC,EAAAzxC,UAAA,e/EupcJM,I+EvpcP,WAEC,MAAOb,MAAKq2D,e/EwpcNxzD,I+ErpcP,SAAuBC,GAEtB9C,KAAKq2D,cAAgBvzD,G/Espcf/B,WAAY,KACZC,aAAc,M+EnpcrBL,QAAAC,eAAWoxC,EAAAzxC,UAAA,oB/EupcJM,I+EvpcP,WAEC,MAAOb,MAAKozD,qBAAqB7hB,gB/Ewpc3BxwC,WAAY,KACZC,aAAc,M+ErpcrBL,QAAAC,eAAWoxC,EAAAzxC,UAAA,S/EypcJM,I+EzpcP,WAEC,MAAOb,MAAKs2D,OAASt2D,KAAKu2D,Q/E0pcpBx1D,WAAY,KACZC,aAAc,M+ExpcdgxC,GAAAzxC,UAAAi2D,aAAP,SAAoBC,GAEnB,GAAIz2D,KAAK02D,WAAaD,EACrB,MAED/1D,GAAAH,UAAMi2D,aAAYl3D,KAAAU,KAACy2D,EAEnB,IAAIz2D,KAAK02D,UAAW,CACnB12D,KAAK22D,kBAAoB,IACzB32D,MAAKwzD,eAAiBiD,EAASznD,UACzB,CACNhP,KAAK22D,kBAAoB,OAIpB3kB,GAAAzxC,UAAAs1D,oBAAP,WAEC,MAAO,IAAIlQ,GAAgB,GAAIiH,GAAQ5sD,KAAKwzD,eAAgBxzD,KAAKwzD,iBAI3DxhB,GAAAzxC,UAAAwyD,cAAP,SAAqB7vD,EAAwBsV,EAAa0C,GAEzDlb,KAAKizD,kBAAkB78C,OAASpW,KAAKozD,oBACrCpzD,MAAKizD,kBAAkBC,WAAalzD,KAAKmzD,YACzCnzD,MAAKizD,kBAAkB/8C,OACvBsC,GAAM4lB,mBAAmBp+B,KAAKizD,kBAC9B/3C,GAAS86C,SAASh2D,KAAKizD,kBAAmB/vD,EAAO6rD,UAAUuE,SAIrDthB,GAAAzxC,UAAA4zD,kBAAP,SAAyBT,GAExB,GAAIkD,GAAoC52D,KAAKozD,qBAAqByD,aAClE,IAAIC,GAAmCpD,EAAWmD,aAClD72D,MAAKmzD,aAAa5zD,OAAS,CAE3BS,MAAKmzD,aAAa,GAAKyD,EAAmB,EAC1C52D,MAAKmzD,aAAa,GAAKyD,EAAmB,EAC1C52D,MAAKmzD,aAAa,GAAKyD,EAAmB,EAC1C52D,MAAKmzD,aAAa,GAAKyD,EAAmB,EAE1C,IAAI52C,GAA4ChgB,KAAK+1D,OACrD,IAAIgB,GAAe/2C,EAAMg3C,cACzB,IAAIC,GAAcF,EAAItrD,CACtB,IAAIyrD,GAAcH,EAAIprD,CACtB,IAAIwrD,GAAcJ,EAAIlrD,CACtB,IAAIwQ,GAAW,CACf,KAAK,GAAIrd,GAAW,EAAGA,EAAI,IAAKA,EAAG,CAClC,GAAIyyB,GAAgBqlC,EAAkB93D,EACtC,IAAIyyB,EAAM1yB,EAAEk4D,EAAOxlC,EAAMvxB,EAAEg3D,EAAOzlC,EAAMC,EAAEylC,EAAO,EAChDn3D,KAAKmzD,aAAa92C,KAAOoV,GAKrBugB,GAAAzxC,UAAAkzD,uBAAP,SAA8BC,GAE7B1zD,KAAK+zD,oCAAoCL,EAAYA,EAAW3xB,WAAWiyB,eAAgBh0D,KAAKi0D,SAChGj0D,MAAKk0D,yBAAyBxhC,OAAS1yB,KAAKi0D,QAC5Cj0D,MAAKm0D,kBAAkBT,GAGjB1hB,GAAAzxC,UAAAwzD,oCAAP,SAA2CL,EAAmB0D,EAAuB1kC,GAEpF,GAAI9d,GAAmBrO,EAAc0O,kBACrC,IAAI8hD,EACJ,IAAItrD,GAAUE,EAAUE,CACxB,IAAIgtB,GAAaC,CACjB,IAAIE,GAAaC,CACjB,IAAIj6B,EAEJ,IAAIghB,GAA4ChgB,KAAK+1D,OACrDgB,GAAM/2C,EAAMg3C,cACZh3D,MAAKozD,qBAAqBvuD,UAAUmvB,SAAWh0B,KAAK+1D,QAAQxpD,cAC5Dd,GAAI6L,KAAKgK,OAAOoyC,EAAWjoD,EAAIsrD,EAAItrD,EAAEzL,KAAKq2D,eAAer2D,KAAKk1D,QAAQl1D,KAAKk1D,MAC3EvpD,GAAI2L,KAAKgK,OAAOoyC,EAAW/nD,EAAIorD,EAAIprD,EAAE3L,KAAKq2D,eAAer2D,KAAKk1D,QAAQl1D,KAAKk1D,MAC3ErpD,GAAIyL,KAAKgK,OAAOoyC,EAAW7nD,EAAIkrD,EAAIlrD,EAAE7L,KAAKq2D,eAAer2D,KAAKk1D,QAAQl1D,KAAKk1D,MAC3El1D,MAAKozD,qBAAqB3nD,EAAIA,CAC9BzL,MAAKozD,qBAAqBznD,EAAIA,CAC9B3L,MAAKozD,qBAAqBvnD,EAAIA,CAE9B7L,MAAKi0D,SAAS3nD,SAAStM,KAAKozD,qBAAqB5hD,sBACjDxR,MAAKi0D,SAAS76C,QAAQs6C,EAAWnnD,eACjCvM,MAAKi0D,SAASvhB,iBAAiB0kB,EAASp3D,KAAKg1D,eAE7Cn8B,GAAOG,EAAOh5B,KAAKg1D,eAAe,EAClCl8B,GAAOG,EAAOj5B,KAAKg1D,eAAe,EAClCh1D,MAAKs2D,OAASt2D,KAAKg1D,eAAe,EAElCh2D,GAAI,CACJ,OAAOA,EAAI,GAAI,CACdyM,EAAIzL,KAAKg1D,eAAeh2D,EACxB2M,GAAI3L,KAAKg1D,eAAeh2D,EAAI,EAC5B6M,GAAI7L,KAAKg1D,eAAeh2D,EAAI,EAC5B,IAAIyM,EAAIotB,EACPA,EAAOptB,CACR,IAAIA,EAAIutB,EACPA,EAAOvtB,CACR,IAAIE,EAAImtB,EACPA,EAAOntB,CACR,IAAIA,EAAIstB,EACPA,EAAOttB,CACR,IAAIE,EAAI7L,KAAKs2D,OACZt2D,KAAKs2D,OAASzqD,CACf7M,IAAK,EAGNgB,KAAKu2D,OAAS,CAEd,IAAI9X,GAAWzlB,EAAOH,CACtB,IAAIo8B,GAAWh8B,EAAOH,CACtB,IAAI74B,GAAW,GAAGD,KAAKs2D,OAASt2D,KAAKu2D,OAErC,IAAI19B,EAAO,EACVA,GAAQ74B,KAAKk1D,MAEd,IAAIp8B,EAAO,EACVA,GAAQ94B,KAAKk1D,MAEdr8B,GAAOvhB,KAAKgK,MAAMuX,EAAK74B,KAAKk1D,QAAQl1D,KAAKk1D,MACzCp8B,GAAOxhB,KAAKgK,MAAMwX,EAAK94B,KAAKk1D,QAAQl1D,KAAKk1D,MAEzC,IAAIC,GAAe,EAAEn1D,KAAKk1D,MAC1BzW,GAAInnC,KAAKgK,MAAMm9B,EAAE0W,EAAQ,GAAGA,CAC5BF,GAAI39C,KAAKgK,MAAM2zC,EAAEE,EAAQ,GAAGA,CAE5Bn8B,GAAOH,EAAO4lB,CACdxlB,GAAOH,EAAOm8B,CAEdxW,GAAI,EAAEA,CACNwW,GAAI,EAAEA,CAENrgD,GAAI,GAAK,EAAE6pC,CACX7pC,GAAI,GAAK,EAAEqgD,CACXrgD,GAAI,IAAM3U,CACV2U,GAAI,MAAQokB,EAAOH,GAAM4lB,CACzB7pC,GAAI,MAAQqkB,EAAOH,GAAMm8B,CACzBrgD,GAAI,KAAO5U,KAAKu2D,OAAOt2D,CACvB2U,GAAI,IAAM,CACVA,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,CAElF8d,GAAOvd,gBAAgBP,GAEzB,OAAAo9B,IAzMsCsjB,EA2MtC71D,GAAiCJ,QAAxB2yC,I/EgocNmb,+BAA+B/rD,UAAUqb,gCAAgCrb,UAAUsb,qCAAqCtb,UAAUg0D,mDAAmDh0D,UAAU2iC,qCAAqC,qCAAqCqyB,8DAA8D,8DAA8DhP,8CAA8C,gDAAgDiQ,0EAA0E,SAAS94D,EAAQkB,EAAOJ,GACxkB,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgF71ctB,IAAO2xC,GAAuBzzC,EAAY,qEAE1C,IAAM+4D,GAA2B,SAAA52D,GAASX,EAApCu3D,EAA2B52D,EAIhC,SAJK42D,GAIOC,GAAA,GAAAA,QAAA,GAAyB,CAAzBA,EAAA,GAEX72D,EAAApB,KAAAU,KAEAA,MAAKu3D,cAAgBA,EAMtB52D,OAAAC,eAAW02D,EAAA/2D,UAAA,iBhF21cJM,IgF31cP,WAEC,MAAOb,MAAKw3D,gBhF41cN30D,IgFz1cP,SAAyBC,GAExB,GAAIA,EAAQ,EACXA,EAAQ,MAAQ,IAAIA,EAAQ,EAC5BA,EAAQ,CAET9C,MAAKw3D,eAAiB10D,GhF01chB/B,WAAY,KACZC,aAAc,MgFx1cds2D,GAAA/2D,UAAAkzD,uBAAP,SAA8BC,GAE7B,GAAI0D,GAAwB1D,EAAW3xB,WAAWiyB,cAElD,KAAK,GAAIh1D,GAAmB,EAAGA,EAAI,KAAMA,EAAG,CAC3C,GAAImkC,GAAWi0B,EAAQp4D,EACvBgB,MAAKg1D,eAAeh2D,GAAKmkC,CACzBnjC,MAAKg1D,eAAeh2D,EAAI,IAAMmkC,GAAKi0B,EAAQp4D,EAAI,IAAMmkC,GAAGnjC,KAAKw3D,eAG9Dx3D,KAAK+zD,oCAAoCL,EAAY1zD,KAAKg1D,eAAgBh1D,KAAKi0D,SAC/Ej0D,MAAKk0D,yBAAyBxhC,OAAS1yB,KAAKi0D,SAE9C,OAAAqD,IAzC0CtlB,EA2CLvyC,GAAAJ,QAA5Bi4D,IhFy1cNlkB,qEAAqE,uEAAuEgjB,+DAA+D,SAAS73D,EAAQkB,EAAOJ,GiFv4ctO,GAAOmf,GAAmBjgB,EAAa,6CAMvC,IAAOk5D,GAAqBl5D,EAAY,oDAIxC,IAAM+2D,GAAgB,WAYrB,QAZKA,KAMEt1D,KAAAwzD,eAAwB,IAGvBxzD,MAAA03D,mBAA6B,IAKpC13D,MAAKizD,kBAAoBjzD,KAAK23D,yBAGxBrC,EAAA/0D,UAAAo3D,uBAAP,WAEC,MAAO,IAAIF,GAGZ92D,QAAAC,eAAW00D,EAAA/0D,UAAA,qBjFo3cJM,IiFp3cP,WAEC,MAAOb,MAAK03D,oBjFq3cN70D,IiFl3cP,SAA6BC,GAE5B9C,KAAK03D,mBAAqB50D,GjFm3cpB/B,WAAY,KACZC,aAAc,MiFj3cds0D,GAAA/0D,UAAAq3D,cAAP,WAEC53D,KAAK63D,iBAAmB,KAGlBvC,GAAA/0D,UAAAi2D,aAAP,SAAoBC,GAEnB,GAAIz2D,KAAK02D,YAAc12D,KAAK22D,kBAC3B32D,KAAK02D,UAAUz1D,SAEhBjB,MAAK02D,UAAYD,EAGlB91D,QAAAC,eAAW00D,EAAA/0D,UAAA,SjF+2cJM,IiF/2cP,WAEC,MAAOb,MAAK+1D,SjFg3cNlzD,IiF72cP,SAAiBC,GAEhB9C,KAAK+1D,QAAUjzD,GjF82cT/B,WAAY,KACZC,aAAc,MiF52crBL,QAAAC,eAAW00D,EAAA/0D,UAAA,YjF+2cJM,IiF/2cP,WAEC,IAAKb,KAAK02D,UACT12D,KAAK02D,UAAY12D,KAAK61D,qBAEvB,OAAO71D,MAAK02D,WjF+2cN31D,WAAY,KACZC,aAAc,MiF72crBL,QAAAC,eAAW00D,EAAA/0D,UAAA,gBjFg3cJM,IiFh3cP,WAEC,MAAOb,MAAKwzD,gBjFi3cN3wD,IiF92cP,SAAwBC,GAEvB,GAAIA,GAAS9C,KAAKwzD,eACjB,MAEDxzD,MAAK6yD,kBAAkB/vD,IjF82cjB/B,WAAY,KACZC,aAAc,MiF52cds0D,GAAA/0D,UAAAU,QAAP,WAECjB,KAAKizD,kBAAoB,IAEzB,IAAIjzD,KAAK02D,YAAc12D,KAAK22D,kBAC3B32D,KAAK02D,UAAUz1D,SAEhBjB,MAAK02D,UAAY,KAGXpB,GAAA/0D,UAAAs1D,oBAAP,WAEC,KAAM,IAAIr3C,GAGJ82C,GAAA/0D,UAAAu3D,gBAAP,SAAuBC,EAAiC78C,GAEvDlb,KAAK63D,iBAAmB,KAExB73D,MAAKyzD,uBAAuBsE,EAAgB3hD,OAE5C,KAAKpW,KAAK02D,UACT12D,KAAK02D,UAAY12D,KAAK61D,qBAEvB71D,MAAK+yD,cAAc/yD,KAAK02D,UAAWqB,EAAgBv/C,MAAO0C,GAGpDo6C,GAAA/0D,UAAAkzD,uBAAP,SAA8BC,GAE7B,KAAM,IAAIl1C,GAGJ82C,GAAA/0D,UAAAwyD,cAAP,SAAqB7vD,EAAoBsV,EAAa0C,GAErD,KAAM,IAAIsD,GAGJ82C,GAAA/0D,UAAAsyD,kBAAP,SAAyB/vD,GAExB9C,KAAKwzD,eAAiB1wD,CAEtB,IAAI9C,KAAK22D,kBAAmB,CAC3B,KAAMz3D,OAAM,2DACN,IAAIc,KAAK02D,UAAW,CAC1B12D,KAAK02D,UAAUz1D,SACfjB,MAAK02D,UAAY,MAGpB,OAAApB,KAEA71D,GAA0BJ,QAAjBi2D,IjFg2cN/0C,6CAA6Cnf,UAAU42D,oDAAoD,sDAAsDz5B,+CAA+C,SAAShgC,EAAQkB,EAAOJ,GAC3O,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkF3+ctB,IAAO43D,GAAQ15D,EAAgB,wCAC/B,IAAO25D,GAAa35D,EAAc,6ClFi/clC,IkF3+cMw/B,GAAc,SAAAr9B,GAASX,EAAvBg+B,EAAcr9B,EAEnB,SAFKq9B,KAIJr9B,EAAApB,KAAAU,KAEAA,MAAKm4D,UAAY,GAAIF,GAEvB,MAAAl6B,IAR6Bm6B,EAULz4D,GAAAJ,QAAf0+B,IlF2+cNq6B,wCAAwC,wCAAwCC,6CAA6C,+CAA+CC,2CAA2C,SAAS/5D,EAAQkB,EAAOJ,GAClP,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmFjgdtB,IAAOk4D,GAAUh6D,EAAe,0CnFugdhC,ImF9/cMi6D,GAAU,SAAA93D,GAASX,EAAnBy4D,EAAU93D,EAEf,SAFK83D,GAEOC,EAAqBriD,EAAe/F,GAE/C3P,EAAApB,KAAAU,KAAMy4D,EAAMriD,EAAQ/F,GAMdmoD,EAAAj4D,UAAAm4D,gBAAP,SAAuBr6B,IAIxB,OAAAm6B,IAdyBD,EAgBzB94D,GAAoBJ,QAAXm5D,InF6/cNG,0CAA0C,4CAA4CC,8CAA8C,SAASr6D,EAAQkB,EAAOJ,GAC/J,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoFthdtB,IAAO43D,GAAQ15D,EAAW,wCpF4hd1B,IoFnhdMs6D,GAAa,SAAAn4D,GAASX,EAAtB84D,EAAan4D,EAef,SAfEm4D,GAeUJ,EAAwBK,EAAkCzoD,GAElE3P,EAAApB,KAAAU,KAfGA,MAAA+4D,gBAA0B,IAOzB/4D,MAAAg5D,aAA6B,GAAI12D,MACjCtC,MAAAi5D,YAA2B,GAAI32D,MAC/BtC,MAAAk5D,eAAwB,CAQ5Bl5D,MAAKm5D,MAAQV,CACbz4D,MAAKo5D,WAAaN,CAClB94D,MAAKq5D,WAAahpD,EAGtB1P,OAAAC,eAAWi4D,EAAAt4D,UAAA,iBpFwgdPM,IoFxgdJ,WAEI,MAAOb,MAAKo5D,YpFygdZr4D,WAAY,KACZC,aAAc,MoFngdX63D,GAAAt4D,UAAAm4D,gBAAP,SAAuBr6B,GAGnB,GAAIr+B,KAAKs5D,aAAe,EACpB,MAEJ,IAAIt5D,KAAKu5D,aACLv5D,KAAKu5D,aAAab,gBAAgBr6B,EAEtC,IAAIr/B,EACJ,KAAKA,EAAI,EAAGA,EAAIgB,KAAKk5D,eAAgBl6D,IACjCgB,KAAKi5D,YAAYj6D,GAAG05D,gBAAgBr6B,EAExC,KAAKr/B,EAAI,EAAGA,EAAIgB,KAAKw5D,gBAAiBx6D,IAClCgB,KAAKy5D,aAAaz6D,GAAG05D,gBAAgBr6B,GAQtCw6B,GAAAt4D,UAAAm5D,SAAP,SAAgBC,GAEZA,EAAK1P,OAASjqD,IAEd,KAAK25D,EAAKZ,iBAAmBY,EAAKltC,cAAcmtC,YAAa,CACzD55D,KAAKu5D,aAAeI,MACjB,IAAIA,EAAKltC,cAAc3d,SAAU,CACpC9O,KAAKi5D,YAAYt/C,KAAKggD,EACtB35D,MAAKk5D,eAAiBl5D,KAAKi5D,YAAY15D,WACpC,CACH,GAAI6L,GAAeuuD,EAAKltC,cAAcjlB,QACtC,IAAIyD,GAAajL,KAAKg5D,aAAaz5D,MACnC,IAAIsa,GAAe5O,CAEnB,OAAO4O,IACH,GAAI7Z,KAAKg5D,aAAan/C,GAASzO,EAC3B,KAERyO,IAEA,IAAIA,EAAQ5O,EAAK,CACbjL,KAAKy5D,aAAa1/C,OAAOF,EAAO,EAAG8/C,EACnC35D,MAAKg5D,aAAaj/C,OAAOF,EAAO,EAAGzO,OAChC,CACHpL,KAAKy5D,aAAa9/C,KAAKggD,EACvB35D,MAAKg5D,aAAar/C,KAAKvO,GAE3BpL,KAAKw5D,gBAAkBx5D,KAAKg5D,aAAaz5D,OAG7Co6D,EAAKE,6BAA6B75D,KAAK85D,qBAEvC,IAAIR,GAAqBK,EAAKL,WAC9BK,GAAO35D,IAEP,GAAG,CACC25D,EAAKL,aAAeA,SACdK,EAAoBA,EAAK1P,SAAW,MAG3C4O,GAAAt4D,UAAAU,QAAP,WAEIP,EAAAH,UAAMU,QAAO3B,KAAAU,KAEbA,MAAKg5D,aAAe,IACpBh5D,MAAKi5D,YAAc,IAEnBj5D,MAAKm5D,MAAMY,YAAY/5D,KAAKo5D,WAC5Bp5D,MAAKq5D,WAAWW,cAAch6D,KAE9BA,MAAKm5D,MAAQ,IACbn5D,MAAKo5D,WAAa,IAClBp5D,MAAKq5D,WAAa,KAQfR,GAAAt4D,UAAA05D,YAAP,SAAmBN,GAEf,IAAKA,EAAKZ,iBAAmBY,EAAKltC,cAAcmtC,YAAa,CACzD55D,KAAKu5D,aAAe,SACjB,IAAII,EAAKltC,cAAc3d,SAAU,CACpC9O,KAAKi5D,YAAYl/C,OAAO/Z,KAAKi5D,YAAYn/C,QAAQ6/C,GAAO,EACxD35D,MAAKk5D,eAAiBl5D,KAAKi5D,YAAY15D,WACpC,CACH,GAAIsa,GAAe7Z,KAAKy5D,aAAa3/C,QAAQ6/C,EAE7C35D,MAAKy5D,aAAa1/C,OAAOF,EAAO,EAChC7Z,MAAKg5D,aAAaj/C,OAAOF,EAAO,EAEhC7Z,MAAKw5D,gBAAkBx5D,KAAKg5D,aAAaz5D,OAG7Co6D,EAAKE,6BAA6B,MAElC,IAAIP,GAAqBK,EAAKL,WAC9BK,GAAO35D,IAEP,GAAG,CACC25D,EAAKL,aAAeA,SACdK,EAA4BA,EAAK1P,SAAW,MAE9D,OAAA4O,IA5I4BZ,EA6I5Bx4D,GAAuBJ,QAAdw5D,IpFw/cNT,wCAAwC,0CAA0C8B,qDAAqD,SAAS37D,EAAQkB,EAAOJ,GAClK,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqFxpdtB,IAAOk4D,GAAUh6D,EAAe,0CAGhC,IAAO0zC,GAAgB1zC,EAAc,+CrF4pdrC,IqFtpdM47D,GAAoB,SAAAz5D,GAASX,EAA7Bo6D,EAAoBz5D,EAUzB,SAVKy5D,GAUO1B,EAAqB2B,EAAmC/pD,GAEnE3P,EAAApB,KAAAU,KAAMy4D,EAAM2B,EAAkB/pD,EAE9BrQ,MAAKq6D,kBAAoBD,EAMnBD,EAAA55D,UAAAm4D,gBAAP,SAAuBr6B,GAEtB,GAAIA,EAAUi8B,UAAUt6D,MACvBq+B,EAAUk8B,sBAAsBv6D,KAAKq6D,mBAOhCF,GAAA55D,UAAAi6D,gBAAP,WAEC,MAAO,OA9BML,GAAAp0D,WAAyBksC,CAgCxC,OAAAkoB,IAlCmC5B,EAoCnC94D,GAA8BJ,QAArB86D,IrF+odNpoB,+CAA+C,+CAA+C4mB,0CAA0C,4CAA4CA,2CAA2C,SAASp6D,EAAQkB,EAAOJ,GAC1P,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsFhsdtB,IAAOoG,GAAQlI,EAAgB,gCAG/B,IAAOqyB,GAAsBryB,EAAY,mDACzC,IAAOk2B,GAAcl2B,EAAc,2CAEnC,IAAOoI,GAAUpI,EAAe,uCAChC,IAAO+2B,GAAU/2B,EAAe,uCAEhC,IAAO05D,GAAQ15D,EAAgB,wCtFksd/B,IsFvrdMg6D,GAAU,SAAA73D,GAASX,EAAnBw4D,EAAU73D,EAUf,SAVK63D,GAUOE,EAAqBn4C,EAAsBjQ,GAEtD3P,EAAApB,KAAAU,KAVMA,MAAA+4D,gBAA0B,KAYhC/4D,MAAKm5D,MAAQV,CACbz4D,MAAKy6D,QAAUn6C,CACftgB,MAAKq5D,WAAahpD,CAClBrQ,MAAKs5D,YAAc,CAEnBt5D,MAAKkL,cAELlL,MAAK2O,aAAe3O,KAAKy6D,QAAQ9rD,aAGlChO,OAAAC,eAAW23D,EAAAh4D,UAAA,iBtF4qdJM,IsF5qdP,WAEC,MAAOb,MAAKy6D,StF6qdN15D,WAAY,KACZC,aAAc,MsFvqddu3D,GAAAh4D,UAAAi6D,gBAAP,WAEC,MAAOx6D,MAAKysB,cAAcziB,aASpBuuD,GAAAh4D,UAAA6wB,YAAP,SAAmBC,EAAuBC,GAEzC,IAAKtxB,KAAKy6D,QAAQtgD,cACjB,MAAO,MAER,OAAO,MAODo+C,GAAAh4D,UAAAm4D,gBAAP,SAAuBr6B,GAEtB,GAAIA,EAAUi8B,UAAUt6D,MAAO,CAC9Bq+B,EAAUq8B,YAAsB16D,KAAKy6D,QAErC,IAAIz6D,KAAK26D,wBAA0Bt8B,EAAUu8B,kBAC5Cv8B,EAAUq8B,YAAY16D,KAAK66D,gBAKvBtC,GAAAh4D,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAO3B,KAAAU,KAEbA,MAAKm5D,MAAMY,YAAY/5D,KAAKy6D,SAMtBlC,GAAAh4D,UAAAu6D,kBAAP,SAAyBC,EAAsBC,GAE9C,IAAKh7D,KAAKy6D,QAAQtgD,cACjB,MAAO,MAER,IAAIlV,GAAwCjF,KAAKy6D,QAAQQ,oBACzDh2D,GAAmBi2D,iBAAmBl7D,KAAKy6D,QAAQjpD,sBAAsBpD,gBAAgB2sD,EACzF91D,GAAmBk2D,kBAAoBn7D,KAAKy6D,QAAQjpD,sBAAsB82B,qBAAqB0yB,EAE/F,KAAK/1D,EAAmBu+C,YACvBv+C,EAAmBu+C,YAAc,GAAI/8C,EAEtC,IAAIo9B,GAA0B7jC,KAAKiR,QAAQ8gB,gBAAgB9sB,EAAmBi2D,iBAAkBj2D,EAAmBk2D,kBAAmBl2D,EAAmBu+C,YAEzJ,IAAI3f,EAAmB,EACtB,MAAO,MAER5+B,GAAmB4+B,iBAAmBA,CACtC5+B,GAAmB81D,YAAcA,CACjC91D,GAAmB+1D,aAAeA,CAClC/1D,GAAmBm2D,wBAA0Bv3B,GAAoB,CAEjE,OAAO,MAOD00B,GAAAh4D,UAAA86D,oBAAP,WAEC,MAAOr7D,MAAKiR,QAAQqqD,gBAGd/C,GAAAh4D,UAAA8X,oBAAP,WAECrY,KAAKiR,QAAQkS,aAKPo1C,GAAAh4D,UAAA2K,aAAP,WAEC,GAAIlL,KAAKy6D,QAAQnqD,YAAc3J,EAAW8D,iBACzCzK,KAAKiR,QAAU,GAAI2f,GAAuB5wB,KAAKy6D,aAC3C,IAAIz6D,KAAKy6D,QAAQnqD,YAAc3J,EAAWwuB,OAC9Cn1B,KAAKiR,QAAU,GAAIwjB,GAAez0B,KAAKy6D,aACnC,IAAIz6D,KAAKy6D,QAAQnqD,YAAc3J,EAAWyuB,KAC9Cp1B,KAAKiR,QAAU,GAAIqkB,EAEpBt1B,MAAKu7D,oBAEP,OAAAhD,IAjIyBN,EAmIzBx4D,GAAoBJ,QAAXk5D,ItFopdN17C,gCAAgCzb,UAAUovB,mDAAmD,mDAAmD+D,2CAA2C,2CAA2CtX,uCAAuC,uCAAuCoY,uCAAuC,uCAAuC+iC,wCAAwC,0CAA0CoD,mDAAmD,SAASj9D,EAAQkB,EAAOJ,SAE5hBo8D,sCAAsC,SAASl9D,EAAQkB,EAAOJ,SAE9Dq8D,+CAA+C,SAASn9D,EAAQkB,EAAOJ,GAC7E,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuFrzdtB,IAAOk4D,GAAUh6D,EAAe,0CvF2zdhC,IuFlzdMo9D,GAAc,SAAAj7D,GAASX,EAAvB47D,EAAcj7D,EAUnB,SAVKi7D,GAUOlD,EAAqBmD,EAAuBvrD,GAEvD3P,EAAApB,KAAAU,KAAMy4D,EAAMmD,EAAYvrD,EAExBrQ,MAAK67D,YAAcD,EAMbD,EAAAp7D,UAAAm4D,gBAAP,SAAuBr6B,GAEtB,GAAIA,EAAUi8B,UAAUt6D,MACvBq+B,EAAUy9B,gBAAgB97D,KAAK67D,aAO1BF,GAAAp7D,UAAAi6D,gBAAP,WAEC,MAAO,OA9BMmB,GAAA93D,GAAY,gBAgC3B,OAAA83D,IAlC6BpD,EAoCL94D,GAAAJ,QAAfs8D,IvF2ydNhD,0CAA0C,4CAA4CP,yCAAyC,SAAS75D,EAAQkB,EAAOJ,GwFv1d1J,GAAOmf,GAAmBjgB,EAAa,6CxF41dvC,IwFn1dM05D,GAAQ,WAqDb,QArDKA,KAKEj4D,KAAAy5D,aAA4B,GAAIn3D,MAChCtC,MAAAw5D,gBAAyB,CAMzBx5D,MAAAs5D,YAAqB,EAM5B34D,OAAAC,eAAWq3D,EAAA13D,UAAA,gBxF80dJM,IwF90dP,WAEC,MAAOb,MAAK+7D,uBxF+0dNl5D,IwF50dP,SAAwBC,GAEvB,GAAI9C,KAAK+7D,uBAAyBj5D,EACjC,MAED9C,MAAK+7D,sBAAwBj5D,CAE7B9C,MAAK65D,6BAA6B75D,KAAKiqD,OAAQjqD,KAAKiqD,OAAO6P,qBAAuB,QxF20d5E/4D,WAAY,KACZC,aAAc,MwFx0drBL,QAAAC,eAAWq3D,EAAA13D,UAAA,wBxF20dJM,IwF30dP,WAEC,MAAOb,MAAKg8D,uBxF40dNn5D,IwFz0dP,SAAgCC,GAE/B,GAAI9C,KAAKg8D,uBAAyBl5D,EACjC,MAED9C,MAAKg8D,sBAAwBl5D,CAE7B,KAAK,GAAI9D,GAAW,EAAGA,EAAIgB,KAAKw5D,kBAAmBx6D,EAClDgB,KAAKy5D,aAAaz6D,GAAG66D,6BAA6B75D,KAAKg8D,wBxFw0dlDj7D,WAAY,KACZC,aAAc,MwFxzddi3D,GAAA13D,UAAA6wB,YAAP,SAAmBC,EAAuBC,GAEzC,MAAO,MASD2mC,GAAA13D,UAAAu6D,kBAAP,SAAyBC,EAAsBC,GAE9C,MAAO,MAOD/C,GAAA13D,UAAAi6D,gBAAP,WAEC,MAAO,MAGDvC,GAAA13D,UAAAU,QAAP,WAECjB,KAAKiqD,OAAS,IACdjqD,MAAKy5D,aAAe,KAOdxB,GAAA13D,UAAAm4D,gBAAP,SAAuBr6B,GAEtB,GAAIr+B,KAAKs5D,aAAe,IAAMt5D,KAAK26D,uBAClC,MAED,IAAIt8B,EAAUi8B,UAAUt6D,MAAO,CAC9B,IAAK,GAAIhB,GAAW,EAAGA,EAAIgB,KAAKw5D,gBAAiBx6D,IAChDgB,KAAKy5D,aAAaz6D,GAAG05D,gBAAgBr6B,EAEtC,IAAIr+B,KAAK26D,wBAA0Bt8B,EAAUu8B,kBAC5Cv8B,EAAUq8B,YAAY16D,KAAK66D,gBAQvB5C,GAAA13D,UAAA07D,iBAAP,SAAwB59B,GAEvB,GAAIr+B,KAAK66D,eAAiB,KACzB76D,KAAK66D,cAAgB76D,KAAKq7D,qBAE3Bh9B,GAAUq8B,YAAY16D,KAAK66D,eAQrB5C,GAAA13D,UAAAm5D,SAAP,SAAgBC,GAEfA,EAAK1P,OAASjqD,IACdA,MAAKs5D,aAAeK,EAAKL,WACzBt5D,MAAKy5D,aAAcz5D,KAAKw5D,mBAAsBG,CAE9CA,GAAKE,6BAA6B75D,KAAK85D,qBAEvC,IAAIR,GAAqBK,EAAKL,WAC9BK,GAAO35D,IAEP,GAAG,CACF25D,EAAKL,aAAeA,SACXK,EAAOA,EAAK1P,SAAW,MAQ3BgO,GAAA13D,UAAA05D,YAAP,SAAmBN,GAElB,GAAI9/C,GAAe7Z,KAAKy5D,aAAa3/C,QAAQ6/C,EAC7C35D,MAAKy5D,aAAa5/C,GAAS7Z,KAAKy5D,eAAez5D,KAAKw5D,gBACpDx5D,MAAKy5D,aAAayC,KAElBvC,GAAKE,6BAA6B,MAElC,IAAIP,GAAqBK,EAAKL,WAC9BK,GAAO35D,IAEP,GAAG,CACF25D,EAAKL,aAAeA,SACXK,EAAOA,EAAK1P,SAAW,MAG3BgO,GAAA13D,UAAAs5D,6BAAP,SAAoC/2D,GAEnC,GAAI9C,KAAK26D,wBAA0B36D,KAAK+7D,uBAAyBj5D,EAChE,MAED9C,MAAK26D,uBAAyB36D,KAAK+7D,uBAAyBj5D,CAE5D,KAAK,GAAI9D,GAAW,EAAGA,EAAIgB,KAAKw5D,kBAAmBx6D,EAClDgB,KAAKy5D,aAAaz6D,GAAG66D,6BAA6B75D,KAAKg8D,sBAExD,IAAIh8D,KAAK26D,uBAAwB,CAChC36D,KAAK66D,cAAgB76D,KAAKq7D,0BACpB,CAENr7D,KAAK66D,cAAgB,MAKhB5C,GAAA13D,UAAAg7D,kBAAP,WAEC,GAAIv7D,KAAK26D,uBAAwB,CAEhC36D,KAAK66D,cAAgB76D,KAAKq7D,uBAIrBpD,GAAA13D,UAAA86D,oBAAP,WAEC,KAAM,IAAI78C,GAEZ,OAAAy5C,KAEAx4D,GAAkBJ,QAAT44D,IxFkydN13C,6CAA6Cnf,YAAYi3D,8CAA8C,SAAS95D,EAAQkB,EAAOJ,GyFl/dlI,GAAO88D,GAAc59D,EAAc,yCzFu/dnC,IyF/+dM25D,GAAa,WAQlB,QARKA,KAKGl4D,KAAAo8D,aAAuB,KAK9Bp8D,MAAKq8D,gBAAkB,GAAIF,GAAen8D,MAGpCk4D,EAAA33D,UAAA+9B,SAAP,SAAgBD,GAEf,GAAIr+B,KAAKo8D,aACRp8D,KAAKs8D,gBAENt8D,MAAKm4D,UAAUO,gBAAgBr6B,GAGzB65B,GAAA33D,UAAAg8D,eAAP,SAAsB5C,GAErB,GAAIl7D,GAAuBuB,KAAKw8D,YAEhC,OAAO/9D,EAAG,CACT,GAAIk7D,GAAQl7D,EACX,MAEDA,GAAIA,EAAEg+D,kBAGP9C,EAAK8C,kBAAoBz8D,KAAKw8D,YAE9Bx8D,MAAKw8D,aAAe7C,CACpB35D,MAAKo8D,aAAe,KAGdlE,GAAA33D,UAAAy5D,cAAP,SAAqBL,GAEpB,GAAIl7D,EAEJ,IAAIk7D,EAAK1P,OAAQ,CAChB0P,EAAK1P,OAAOgQ,YAAYN,EACxBA,GAAK1P,OAAS,KAIf,GAAI0P,GAAQ35D,KAAKw8D,aAAc,CAC9Bx8D,KAAKw8D,aAAe7C,EAAK8C,sBACnB,CACNh+D,EAAIuB,KAAKw8D,YACT,OAAO/9D,GAAKA,EAAEg+D,mBAAqB9C,EAClCl7D,EAAIA,EAAEg+D,iBAEP,IAAIh+D,EACHA,EAAEg+D,kBAAoB9C,EAAK8C,kBAG7B9C,EAAK8C,kBAAoB,IAEzB,KAAKz8D,KAAKw8D,aACTx8D,KAAKo8D,aAAe,MAQflE,GAAA33D,UAAAm8D,kBAAP,SAAyB/C,GAExB,MAAO35D,MAAKm4D,UAGLD,GAAA33D,UAAA+7D,eAAR,WAEC,GAAI3C,GAA0B35D,KAAKw8D,YACnC,OAAO7C,EAAM,CAEZA,EAAKltC,cAAcxS,kBACnB0/C,GAAOA,EAAK8C,kBAIb9C,EAAO35D,KAAKw8D,YACZ,IAAIG,EACJ,IAAIl+D,EACJuB,MAAKw8D,aAAe,IACpBx8D,MAAKo8D,aAAe,KAEpB,GAAG,CACFO,EAAa38D,KAAK08D,kBAAkB/C,EAEpC,IAAIA,EAAK1P,QAAU0S,EAAY,CAC9B,GAAIhD,EAAK1P,OACR0P,EAAK1P,OAAOgQ,YAAYN,EACzBgD,GAAWjD,SAASC,GAGrBl7D,EAAIk7D,EAAK8C,iBACT9C,GAAK8C,kBAAoB,YAEhB9C,EAAOl7D,IAAM,MAMjBy5D,GAAA33D,UAAAuY,iBAAP,SAAwB2T,GAEvB,GAAIA,EAAcrU,SACjBpY,KAAKu8D,eAAev8D,KAAKq8D,gBAAgBO,QAAQnwC,IAM5CyrC,GAAA33D,UAAAoY,mBAAP,SAA0B8T,GAEzB,GAAIA,EAAcrU,SACjBpY,KAAKg6D,cAAch6D,KAAKq8D,gBAAgBO,QAAQnwC,IAEnD,OAAAyrC,KAEuBz4D,GAAAJ,QAAd64D,IzF68dN2E,yCAAyC,2CAA2CC,+CAA+C,SAASv+D,EAAQkB,EAAOJ,GAC9J,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0FxletB,IAAOk4D,GAAUh6D,EAAe,0C1F8lehC,I0FrleMw+D,GAAc,SAAAr8D,GAASX,EAAvBg9D,EAAcr8D,EAUnB,SAVKq8D,GAUOtE,EAAqBuE,EAAuB3sD,GAEvD3P,EAAApB,KAAAU,KAAMy4D,EAAMuE,EAAY3sD,EAExBrQ,MAAKi9D,YAAcD,EAMbD,EAAAx8D,UAAAm4D,gBAAP,SAAuBr6B,GAEtB,GAAIA,EAAUi8B,UAAUt6D,MACvBq+B,EAAU6+B,gBAAgBl9D,KAAKi9D,aAO1BF,GAAAx8D,UAAAi6D,gBAAP,WAEC,MAAO,OA9BMuC,GAAAl5D,GAAY,gBAgC3B,OAAAk5D,IAlC6BxE,EAoCL94D,GAAAJ,QAAf09D,I1F8keNpE,0CAA0C,4CAA4CwE,oDAAoD,SAAS5+D,EAAQkB,EAAOJ,GACrK,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2F9netB,IAAO63D,GAAa35D,EAAc,6CAClC,IAAO6+D,GAAiB7+D,EAAa,4C3FooerC,I2F7neM8+D,GAAmB,SAAA38D,GAASX,EAA5Bs9D,EAAmB38D,EAIxB,SAJK28D,KAMJ38D,EAAApB,KAAAU,KAEAA,MAAKs9D,mBAAqB,GAAIF,GAAkBp9D,MAG1Cq9D,EAAA98D,UAAA+9B,SAAP,SAAgBD,GAEf39B,EAAAH,UAAM+9B,SAAQh/B,KAAAU,KAACq+B,GASTg/B,GAAA98D,UAAAm8D,kBAAP,SAAyB/C,GAExB,GAAIA,EAAKltC,cAAcpc,WAAarQ,MAAQ25D,EAAKltC,cAActT,SAAU,CACxEnZ,KAAKm4D,UAAYwB,CACjB,OAAO,MAGR,IAAKA,EAAKZ,iBAAmBY,EAAKltC,cAAcmtC,YAC/C,MAAO55D,MAAKs9D,mBAAmBV,QAAiCjD,EAAKltC,cAEtE,OAAOzsB,MAAKs9D,mBAAmBV,QAAQjD,EAAKltC,cAAcw9B,QAMpDoT,GAAA98D,UAAAuY,iBAAP,SAAwB2T,GAEvB/rB,EAAAH,UAAMuY,iBAAgBxZ,KAAAU,KAACysB,EAEvB,IAAIA,EAAcmtC,YACjB55D,KAAKu8D,eAAev8D,KAAKs9D,mBAAmBV,QAAiCnwC,IAMxE4wC,GAAA98D,UAAAoY,mBAAP,SAA0B8T,GAEzB/rB,EAAAH,UAAMoY,mBAAkBrZ,KAAAU,KAACysB,EAEzB,IAAIA,EAAcmtC,YACjB55D,KAAKg6D,cAAch6D,KAAKs9D,mBAAmBV,QAAiCnwC,IAE/E,OAAA4wC,IAxDkCnF,EA0DlCz4D,GAA6BJ,QAApBg+D,I3F8meNhF,6CAA6C,6CAA6CkF,4CAA4C,8CAA8CC,2CAA2C,SAASj/D,EAAQkB,EAAOJ,GAC1P,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4FtretB,IAAOk4D,GAAUh6D,EAAe,0C5F8rehC,I4FnreMk/D,GAAU,SAAA/8D,GAASX,EAAnB09D,EAAU/8D,EAUf,SAVK+8D,GAUOhF,EAAqBiF,EAAertD,GAE/C3P,EAAApB,KAAAU,KAAMy4D,EAAMiF,EAAQrtD,EAEpBrQ,MAAK29D,QAAUD,EAMTD,EAAAl9D,UAAAm4D,gBAAP,SAAuBr6B,GAEtB,GAAIA,EAAUi8B,UAAqBt6D,MAClCq+B,EAAUu/B,YAAY59D,KAAK29D,SAStBF,GAAAl9D,UAAA6wB,YAAP,SAAmBC,EAAuBC,GAEzC,IAAKtxB,KAAK29D,QAAQxjD,YACjB,MAAO,MAGR,OAAO,MApCMsjD,GAAA55D,GAAY,YAsC3B,OAAA45D,IAxCyBlF,EA0CL94D,GAAAJ,QAAXo+D,I5F2qeN9E,0CAA0C,4CAA4CkF,mCAAmC,SAASt/D,EAAQkB,EAAOJ,SAE9Iy+D,4CAA4C,SAASv/D,EAAQkB,EAAOJ,SAEpE0+D,6CAA6C,SAASx/D,EAAQkB,EAAOJ,G6Fxue3E,GAAOoH,GAAQlI,EAAiB,gCAChC,IAAOiI,GAAKjI,EAAiB,6B7Fkve7B,I6F9teMy/D,GAAiB,WAStB,QATKA,GASOC,GAAA,GAAAA,QAAA,GAAoC,CAApCA,EAAA,MAEXj+D,KAAKk+D,sBAAwBD,EAYvBD,EAAAz9D,UAAAgvC,uBAAP,SAA8B4uB,EAAqBn5D,EAAuBC,EAAuCC,GAEhHD,EAAmBgxC,gBAAkB,IAUrC,OAAO,OAYD+nB,GAAAz9D,UAAA8vB,sBAAP,SAA6B+tC,EAAyCp5D,EAAuBC,EAAuCC,GAEnI,GAAI61D,GAAuB91D,EAAmBi2D,gBAC9C,IAAIF,GAAwB/1D,EAAmBk2D,iBAC/C,IAAI18D,EACJ,IAAI4/D,GAAWC,EAAWC,CAC1B,IAAIxpC,GAAWC,EAAWC,CAC1B,IAAIupC,GAAWC,EAAWC,CAC1B,IAAI5rC,GAAWC,EAAWC,CAC1B,IAAI2rC,GAAc7/D,EAAUqkC,EAAUsb,CACtC,IAAInrC,GAAYC,EAAYqrD,CAC5B,IAAIprD,GAAYC,EAAYorD,CAC5B,IAAInrD,GAAYC,EAAYmrD,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAWC,EAAcC,EAAUC,CACvC,IAAIC,GAAaC,EAAaC,EAAaC,EAAYC,CACvD,IAAI17D,GAAsBi6D,EAAoBj6D,QAAQtD,IAAIu9D,EAAoB0B,YAC9E,IAAIC,IAAiC,CACrC,IAAIC,GAAoBh7D,EAASg7D,SAEjC,IAAIr7D,GAAyBy5D,EAAoBz5D,UAAU9D,IAAIu9D,EAAoB1e,YACnF,IAAIugB,GAAgB7B,EAAoBz5D,UAAU0pB,UAClD,IAAIhqB,GAAmB+5D,EAAoB/5D,IAAIxD,IAAIu9D,EAAoB1e,YACvE,IAAIwgB,IAAe9B,EAAoB/5D,IAAIgqB,UAC3C,IAAI8xC,IAAoBh8D,EAAQ5E,MAChC,KAAK,GAAIsa,IAAe,EAAGA,GAAQsmD,GAAYtmD,IAAS,EAAG,CAE1DwkD,EAAKl6D,EAAQ0V,IAAOomD,CACpB3B,GAAKn6D,EAAQ0V,GAAQ,GAAGomD,CACxB1B,GAAKp6D,EAAQ0V,GAAQ,GAAGomD,CAGxB3sD,GAAM3O,EAAU05D,EAChB9qD,GAAM5O,EAAU05D,EAAK,EACrBO,GAAMj6D,EAAU05D,EAAK,EACrB7qD,GAAM7O,EAAU25D,EAChB7qD,GAAM9O,EAAU25D,EAAK,EACrBO,GAAMl6D,EAAU25D,EAAK,EACrB5qD,GAAM/O,EAAU45D,EAChB5qD,GAAMhP,EAAU45D,EAAK,EACrBO,GAAMn6D,EAAU45D,EAAK,EAGrBQ,GAAMvrD,EAAMF,CACZ0rD,GAAMvrD,EAAMF,CACZ0rD,GAAMJ,EAAMD,CACZM,GAAMxrD,EAAMJ,CACZ6rD,GAAMxrD,EAAMJ,CACZ6rD,GAAMN,EAAMF,CACZJ,GAAKQ,EAAII,EAAMH,EAAIE,CACnBV,GAAKQ,EAAIC,EAAMH,EAAIK,CACnBV,GAAKK,EAAII,EAAMH,EAAIE,CACnBG,GAAK,EAAE/nD,KAAKC,KAAKinD,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EACpCF,IAAMa,CACNZ,IAAMY,CACNX,IAAMW,CAGNC,GAAQd,EAAGxD,EAAavvD,EAAIgzD,GAAKzD,EAAarvD,EAAI+yD,EAAG1D,EAAanvD,CAClE,KAAOm0D,GAAaV,EAAQ,GAAWU,GAAaV,GAAS,EAAO,CAEnEC,IAAOf,EAAGlrD,EAAMmrD,EAAGlrD,EAAMmrD,EAAGE,EAC5BY,KAAgBhB,EAAGzD,EAAYtvD,EAAIgzD,EAAG1D,EAAYpvD,EAAI+yD,EAAG3D,EAAYlvD,EAAI0zD,EACzE9gE,GAAI+gE,EAAWF,CAEfxsC,GAAKioC,EAAYtvD,EAAIhN,EAAEu8D,EAAavvD,CACpCsnB,GAAKgoC,EAAYpvD,EAAIlN,EAAEu8D,EAAarvD,CACpCqnB,GAAK+nC,EAAYlvD,EAAIpN,EAAEu8D,EAAanvD,CAEpC4zD,GAAOV,EAAIG,EAAMF,EAAIG,EAAMF,EAAIG,CAC/BM,GAAOX,EAAIA,EAAMC,EAAIA,EAAMC,EAAIA,CAC/BU,GAAOT,EAAIA,EAAMC,EAAIA,EAAMC,EAAIA,CAC/BrqC,GAAKjC,EAAKxf,CACV0hB,GAAKjC,EAAKxf,CACV0hB,GAAKjC,EAAK4rC,CACVgB,GAAM7qC,EAAGgqC,EAAM/pC,EAAGgqC,EAAM/pC,EAAGgqC,CAC3BY,GAAM9qC,EAAGmqC,EAAMlqC,EAAGmqC,EAAMlqC,EAAGmqC,CAC3BT,GAAQ,GAAGe,EAAKC,EAAOF,EAAKA,EAC5Bt8B,GAAIw7B,GAAOgB,EAAKC,EAAMH,EAAKI,EAC3BphB,GAAIkgB,IAAQc,EAAKG,EAAMF,EAAKG,EAC5B,IAAI18B,EAAI,EACP,QACD,IAAIsb,EAAI,EACP,QACD3/C,GAAI,EAAIqkC,EAAIsb,CACZ,MAAO3/C,EAAI,IAAOL,EAAI,GAAKA,EAAIyG,EAA2B,CACzDA,EAA4BzG,CAC5BshE,GAAyBlmD,GAAM,CAC/B5U,GAAmB4+B,iBAAmBplC,CACtCwG,GAAmB87B,cAAgB,GAAIt6B,GAASqsB,EAAIC,EAAIC,EACxD/tB,GAAmBu+C,YAAc,GAAI/8C,GAAS+3D,EAAIC,EAAIC,EACtDz5D,GAAmBs+C,GAAKvjD,KAAKogE,gBAAgBj8D,EAASE,EAAKwV,GAAOspB,EAAGsb,EAAG3/C,EAAGohE,GAC3Ej7D,GAAmB4U,MAAQA,EAI3B,KAAK7Z,KAAKk+D,sBACT,MAAO,QAMX,GAAI6B,GAA0B,EAC7B,MAAO,KAER,OAAO,OAYD/B,GAAAz9D,UAAA4E,mBAAP,SAA0Bk7D,EAAmCr7D,EAAuBC,EAAuCC,GAE1H,GAAI61D,GAAuB91D,EAAmBi2D,gBAC9C,IAAIF,GAAwB/1D,EAAmBk2D,iB7F6sezC,I6FzseF1pC,GAAiB,GAAIhrB,GAAS,EAAE,GAAG,EAAE,EAEzC,IAAI08C,GAAkB,GAAI18C,EAC1B,IAAI4Q,GAAkBoa,EAAMhmB,EAAIsvD,EAAYtvD,EAAIgmB,EAAM9lB,EAAIovD,EAAYpvD,EAAI8lB,EAAM5lB,EAAIkvD,EAAYlvD,EAAI4lB,EAAMgtB,CAC1G0E,GAAO13C,EAAIsvD,EAAYtvD,EAAMgmB,EAAMhmB,EAAE4L,CACrC8rC,GAAOx3C,EAAIovD,EAAYpvD,EAAM8lB,EAAM9lB,EAAE0L,CACrC8rC,GAAOt3C,EAAIkvD,EAAYlvD,EAAM4lB,EAAM5lB,EAAEwL,CACrC,IAAIipD,GAAkB,GAAI75D,GAASgrB,EAAMhmB,EAAEgmB,EAAM9lB,EAAE8lB,EAAM5lB,EACzD,IAAIpN,IAAas8D,EAAYwF,WAAWD,GAAUtF,EAAauF,WAAWD,EAC1EtF,GAAazyB,QAAQ9pC,EACrB,IAAI0B,GAAa46D,EAAYtiC,IAAIuiC,EAEjC,IAAI72D,GAAsBk8D,EAAiBl8D,QAAQtD,IAAIw/D,EAAiBP,YACxE,IAAIU,IAA8B,CAClC,IAAIR,GAAoBh7D,EAASg7D,SAGjC,IAAIr7D,GAAyB07D,EAAiB17D,UAAU9D,IAAIw/D,EAAiB3gB,YAC7E,IAAIugB,GAAgBI,EAAiB17D,UAAU0pB,UAC/C,IAAIuxB,GAAsBygB,EAAiBzgB,OAAO/+C,IAAIw/D,EAAiB3gB,YACvE,IAAI+gB,GAAkBJ,EAAiBzgB,OAAOvxB,UAC9C,IAAIhqB,GAAmBg8D,EAAiBh8D,IAAIxD,IAAIw/D,EAAiB3gB,YACjE,IAAIwgB,GAAeG,EAAiBh8D,IAAIgqB,UACxC,IAAI8xC,GAAoBh8D,EAAQ5E,MAGhC,KAAI,GAAIsa,GAAe,EAAGA,EAAQsmD,EAAYtmD,GAAO,EACrD,CACC,GAAI6mD,GAAav8D,EAAQ0V,EACzB,IAAI8mD,GAAax8D,EAAQ0V,EAAQ,GAAKomD,CACtC,IAAIW,GAAaz8D,EAAQ0V,EAAQ,GAAKomD,CAEtC,IAAIlpD,GAAYpS,EAAU+7D,EAAMT,EAChC,IAAIjpD,GAAYrS,EAAU+7D,EAAMT,EAAS,EACzC,IAAIY,GAAYl8D,EAAUg8D,EAC1B,IAAIG,GAAYn8D,EAAUg8D,EAAM,EAChC,IAAI7tC,GAAYnuB,EAAUi8D,EAC1B,IAAI7tC,GAAYpuB,EAAUi8D,EAAM,EAEhC,IAAIG,GAAgBnhB,EAAO8gB,EAAMD,EACjC,IAAIxpD,GAAYtS,EAAU+7D,EAAMT,EAAS,E7FmsehC,I6F9reLzqD,GAAYuB,EAAK5W,EAAEsL,CACvB,IAAIgK,GAAYuB,EAAK7W,EAAEwL,C7Fgsed,I6F7reL6yD,GAAYsC,EAAK9pD,CACrB,IAAIynD,KAAcoC,EAAK9pD,E7F+red,I6F3reLiqD,GAAcxrD,EAAKgpD,EAAO/oD,EAAKgpD,CAEnC,IAAIuC,EAAM,EACT,QAEDxrD,GAAKqrD,EAAK1gE,EAAEsL,CACZgK,GAAKqrD,EAAK3gE,EAAEwL,CACZ6yD,GAAKzrC,EAAK+tC,CACVrC,KAAO3rC,EAAK+tC,EAEZG,GAAOxrD,EAAKgpD,EAAO/oD,EAAKgpD,CAExB,IAAIuC,EAAM,EACT,QAEDxrD,GAAKsd,EAAK3yB,EAAEsL,CACZgK,GAAKsd,EAAK5yB,EAAEwL,CACZ6yD,GAAKxnD,EAAK+b,CACV0rC,KAAO1nD,EAAK+b,EAEZkuC,GAAOxrD,EAAKgpD,EAAO/oD,EAAKgpD,CAExB,IAAIuC,EAAM,EACT,QAGD,IAAID,GAAU,EAAG,CAEhB,GAAIE,GAAaJ,EAAK9pD,CACtB,IAAImqD,GAAaJ,EAAK9pD,CACtB,IAAImqD,GAAaruC,EAAK/b,CACtB,IAAIqqD,GAAaruC,EAAK/b,CACtB,IAAIqqD,GAAalhE,EAAEsL,EAAIsL,CACvB,IAAIuqD,GAAanhE,EAAEwL,EAAIqL,CAEvB,IAAIuqD,GAAaN,EAAMG,EAAMD,EAAMD,CACnC,IAAI/9B,IAAYk+B,EAAMD,EAAMD,EAAMG,GAAOC,CACzC,IAAI9iB,IAAYwiB,EAAMK,EAAMD,EAAMH,GAAOK,CACzC,IAAIziE,GAAW,EAAIqkC,EAAIsb,CAEvB,IAAI+iB,GAAY,GAAMr+B,EAAIsb,CAC1B,IAAIgjB,GAAYhjB,CAEhB,IAAIx+C,GAAWuhE,EAAKA,EAAKC,CAEzB,IAAKxhE,EAAI,GAAKgX,IAAO,GAAOhX,EAAI,GAAKgX,GAAM,EAC1C,SAIF,GAAII,EAAWnS,EAA2B,CACzCA,EAA4BmS,CAC5BmpD,GAAsB3mD,EAAM,CAC5B5U,GAAmB4+B,iBAAmBxsB,CACtCpS,GAAmB87B,cAAgB5gC,CACnC8E,GAAmBu+C,YAAc,GAAI/8C,GAAS,EAAG,EAAG,EACpDxB,GAAmBs+C,GAAKvjD,KAAKogE,gBAAgBj8D,EAASE,EAAKwV,EAAOspB,EAAGsb,EAAG3/C,EAAGohE,EAC3Ej7D,GAAmB4U,MAAQA,CAI3B,KAAK7Z,KAAKk+D,sBACT,MAAO,OAIV,GAAIsC,GAAuB,EAC1B,MAAO,KAER,OAAO,OAYDxC,GAAAz9D,UAAAmhB,kBAAP,SAAyBggD,EAAiC18D,EAAuBC,EAAuCC,GAEvH,MAAO,OAIA84D,GAAAz9D,UAAA6/D,gBAAR,SAAwBj8D,EAAqBw9D,EAAqBC,EAAsBz+B,EAAUsb,EAAU3/C,EAAUohE,GAErH,GAAI3c,GAAW,GAAI/8C,EACnB,IAAIq7D,GAAgB19D,EAAQy9D,GAAe1B,CAC3C,IAAI4B,GAAe,GAAIr7D,GAASk7D,EAAOE,GAASF,EAAOE,EAAS,GAChEA,GAAS19D,EAAQy9D,EAAgB,GAAG1B,CACpC,IAAI6B,GAAe,GAAIt7D,GAASk7D,EAAOE,GAASF,EAAOE,EAAS,GAChEA,GAAS19D,EAAQy9D,EAAgB,GAAG1B,CACpC,IAAI8B,GAAe,GAAIv7D,GAASk7D,EAAOE,GAASF,EAAOE,EAAS,GAChEte,GAAG93C,EAAI3M,EAAEgjE,EAAIr2D,EAAI03B,EAAE4+B,EAAIt2D,EAAIgzC,EAAEujB,EAAIv2D,CACjC83C,GAAG53C,EAAI7M,EAAEgjE,EAAIn2D,EAAIw3B,EAAE4+B,EAAIp2D,EAAI8yC,EAAEujB,EAAIr2D,CACjC,OAAO43C,GAET,OAAAya,KAEAv+D,GAA2BJ,QAAlB2+D,I7F2qeNrhD,6BAA6Bvb,UAAUyb,gCAAgCzb,YAAY+b,8CAA8C,SAAS5e,EAAQkB,EAAOJ,GAS5J,G8FpgfMyH,GAAkB,WA0EvB,QA1EKA,GA0EO2lB,GAEXzsB,KAAKysB,cAAgBA,EAGvB,MAAA3lB,KAE4BrH,GAAAJ,QAAnByH,O9Fg8eHq9B,yCAAyC,SAAS5lC,EAAQkB,EAAOJ,G+F/hfvE,GAAOoH,GAAQlI,EAAgB,gCAU/B,IAAO0jE,GAAgB1jE,EAAc,+C/F+hfrC,I+FrhfMmgC,GAAa,WAiClB,QAjCKA,GAiCOu/B,GAAA,GAAAA,QAAA,GAAoC,CAApCA,EAAA,MA1BJj+D,KAAAkiE,mBACAliE,MAAAmiE,kBAA4B,IAG5BniE;KAAAoiE,aAAsB,CAwB7BpiE,MAAKqiE,kBAAoB,GAAIJ,EAE7BjiE,MAAKk+D,sBAAwBD,CAC7Bj+D,MAAKsiE,UAAY,GAAIhgE,OArBtB3B,OAAAC,eAAW89B,EAAAn+B,UAAA,oB/FwhfJM,I+FxhfP,WAEC,MAAOb,MAAKmiE,mB/FyhfNt/D,I+FthfP,SAA4BC,GAE3B9C,KAAKmiE,kBAAoBr/D,G/FuhfnB/B,WAAY,KACZC,aAAc,M+Fpgfd09B,GAAAn+B,UAAAsiC,iBAAP,SAAwBp3B,EAAUE,EAAU23C,GAE3CtjD,KAAK+I,GAAK0C,CACVzL,MAAKgJ,GAAK2C,CACV3L,MAAKuiE,MAAQjf,C/F0gfP,I+FvgfFyX,GAAuBzX,EAAK1iB,UAAUn1B,EAAGE,EAAG,EAChD,IAAIqvD,GAAwB1X,EAAK1iB,UAAUn1B,EAAGE,EAAG,GAAGoJ,SAASgmD,EAE7D,OAAO/6D,MAAKwiE,kBAAkBzH,EAAaC,EAAc1X,EAAK9qC,OAMxDkmB,GAAAn+B,UAAAiiE,kBAAP,SAAyBzH,EAAsBC,EAAuBxiD,GAGrExY,KAAKqiE,kBAAkBnsD,OAGvBlW,MAAKqiE,kBAAkBtH,YAAcA,CACrC/6D,MAAKqiE,kBAAkBrH,aAAeA,CAGtCxiD,GAAM4lB,mBAAmBp+B,KAAKqiE,kBAE9BriE,MAAKoiE,aAAe,CACpB,IAAIzI,GAAsB35D,KAAKqiE,kBAAkBI,UACjD,IAAIniD,EAEJ,OAAOq5C,EAAM,CACZ,IAAK35D,KAAK0iE,UAAUpiD,EAASq5C,EAAKr5C,QACjCtgB,KAAKsiE,UAAUtiE,KAAKoiE,gBAAkB9hD,CAEvCq5C,GAAOA,EAAKgJ,KAIb,IAAK3iE,KAAKoiE,aACT,MAAO,KAER,OAAOpiE,MAAK4iE,sBAAsB5iE,KAAKqiE,mBAoBjC3jC,GAAAn+B,UAAAsiE,cAAP,SAAqBC,GAEpB9iE,KAAKkiE,iBAAmBY,EAGjBpkC,GAAAn+B,UAAAmiE,UAAR,SAAkBpiD,GAEjB,GAAItgB,KAAKmiE,oBAAsB7hD,EAAOxF,mBACrC,MAAO,KAER,IAAI7P,GAAajL,KAAKkiE,iBAAiB3iE,MACvC,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,EAAKjM,IAC/B,GAAIgB,KAAKkiE,iBAAiBljE,IAAMshB,EAC/B,MAAO,KAET,OAAO,OAGAoe,GAAAn+B,UAAAwiE,YAAR,SAAoBC,EAAiBC,GAEpC,MAAOD,GAAQ/H,qBAAqBp3B,iBAAmBo/B,EAAQhI,qBAAqBp3B,iBAAkB,GAAK,EAGpGnF,GAAAn+B,UAAAqiE,sBAAR,SAA8BM,GAG7BljE,KAAKsiE,UAAU/iE,OAASS,KAAKoiE,YAG7BpiE,MAAKsiE,UAAYtiE,KAAKsiE,UAAUa,KAAKnjE,KAAK+iE,Y/Fs/epC,I+F/+eF79D,GAAmC0kB,OAAOw5C,SAC9C,IAAIC,EACJ,IAAIp+D,EACJ,IAAIqb,EACJ,IAAIthB,EAEJ,KAAKA,EAAI,EAAGA,EAAIgB,KAAKoiE,eAAgBpjE,EAAG,CACvCshB,EAAStgB,KAAKsiE,UAAUtjE,EACxBiG,GAAqBqb,EAAO26C,oBAC5B,IAAI36C,EAAOvb,gBAAiB,CAE3B,IAAKs+D,GAAmB,MAAQp+D,EAAmB4+B,iBAAmBw/B,EAAgBx/B,mBAAqBvjB,EAAOxb,gBAAgBI,EAA2BlF,KAAKk+D,uBAAwB,CACzLh5D,EAA4BD,EAAmB4+B,gBAC/Cw/B,GAAkBp+D,CAClB,KAAKjF,KAAKk+D,sBAAuB,CAChCl+D,KAAKsjE,oBAAoBr+D,EACzB,OAAOA,SAGH,IAAIo+D,GAAmB,MAAQp+D,EAAmB4+B,iBAAmBw/B,EAAgBx/B,iBAAkB,CAK7G,IAAK5+B,EAAmBm2D,yBAA2Bp7D,KAAKujE,kBAAkBjjD,EAAO9F,mBAAqB,CACrGxa,KAAKsjE,oBAAoBr+D,EACzB,OAAOA,KAKV,MAAOo+D,GAGA3kC,GAAAn+B,UAAAgjE,kBAAR,SAA0B7yD,GAGzB,GAAIA,GAAS,KAAM,CAClB,GAAIuB,GAAoBjS,KAAKuiE,MAAM3hC,UAAU5gC,KAAK+I,GAAI/I,KAAKgJ,GAAI,IAC/D,IAAIiT,GAAmBvL,EAAMnR,MAC7B,IAAIikE,EACJ,IAAItnD,EACJ,IAAIunD,EACJ,KAAK,GAAIzkE,GAAW,EAAGA,EAAIid,EAAWjd,IAAK,CAC1CwkE,EAAW9yD,EAAM1R,EACjBkd,GAAcsnD,EAASjkE,MACvBkkE,GAAW,KACX,KAAK,GAAIpnD,GAAW,EAAGA,EAAIH,EAAaG,IAAK,CAC5C,GAAImnD,EAASnnD,GAAGlI,aAAalC,EAASxG,EAAGwG,EAAStG,EAAG,KAAM,MAAO,CACjE83D,EAAW,IACX,QAIF,IAAKA,EACJ,MAAO,QAIV,MAAO,MAIA/kC,GAAAn+B,UAAA+iE,oBAAR,SAA4Br+D,GAE3B,GAAIy+D,GAA0Bz+D,EAAmB87B,eAAiB,KAAS97B,EAAmB87B,cAAgB,GAAIt6B,GAAcxB,EAAmB87B,aAEnJ,IAAI4iC,GAAkB1+D,EAAmBk2D,iBACzC,IAAIyI,GAAkB3+D,EAAmBi2D,gBACzC,IAAIz8D,GAAWwG,EAAmB4+B,gBAClC6/B,GAAaj4D,EAAIm4D,EAAOn4D,EAAIhN,EAAEklE,EAAOl4D,CACrCi4D,GAAa/3D,EAAIi4D,EAAOj4D,EAAIlN,EAAEklE,EAAOh4D,CACrC+3D,GAAa73D,EAAI+3D,EAAO/3D,EAAIpN,EAAEklE,EAAO93D,EAG/B6yB,GAAAn+B,UAAAU,QAAP,YAID,OAAAy9B,KAEAj/B,GAAuBJ,QAAdq/B,I/Fs+eN7hB,gCAAgCzb,UAAUyiE,+CAA+C,iDAAiDtG,6CAA6C,SAASh/D,EAAQkB,EAAOJ,GgGztflN,GAAOw5D,GAAat6D,EAAc,6ChG8tflC,IgGxtfM6+D,GAAiB,WAYtB,QAZKA,GAYO/sD,GARJrQ,KAAAs9D,mBAA4B,GAAI38D,OAUvCX,MAAKq5D,WAAahpD,EASZ+sD,EAAA78D,UAAAq8D,QAAP,SAAekH,GAEd,MAAQ9jE,MAAKs9D,mBAAmBwG,EAAuBjgE,MAAQ7D,KAAKs9D,mBAAmBwG,EAAuBjgE,IAAMigE,EAAuBtqC,mBAAmB,GAAIq/B,GAAc74D,KAAM8jE,EAAwB9jE,KAAKq5D,cAQ7M+D,GAAA78D,UAAAw5D,YAAP,SAAmB+J,GAElBA,EAAuBpqC,sBAAsB15B,KAAKs9D,mBAAmBwG,EAAuBjgE,WAErF7D,MAAKs9D,mBAAmBwG,EAAuBjgE,IAnCxCu5D,GAAA2G,WAAoB,GAAIpjE,OAqCxC,OAAAy8D,KAE2B39D,GAAAJ,QAAlB+9D,IhGgtfNxE,6CAA6C,+CAA+CoL,8CAA8C,SAASzlE,EAAQkB,EAAOJ,GiGhwfrK,GAAO4kE,GAAc1lE,EAAc,yCjGqwfnC,IiGhwfM2lE,GAAkB,WASvB,QATKA,KAGGlkE,KAAAmkE,OAAgB,CAChBnkE,MAAAokE,UAAmB,CAO1BpkE,MAAKm5D,MAAQ,GAAI72D,OAMX4hE,EAAA3jE,UAAAq8D,QAAP,WAEC,GAAIyH,EACJ,IAAIrkE,KAAKmkE,QAAUnkE,KAAKokE,UAAW,CAClCC,EAAO,GAAIJ,EACXjkE,MAAKm5D,MAAMn5D,KAAKmkE,UAAYE,IAC1BrkE,KAAKokE,cACD,CACNC,EAAOrkE,KAAKm5D,MAAMn5D,KAAKmkE,UAExB,MAAOE,GAMDH,GAAA3jE,UAAA+jE,QAAP,WAECtkE,KAAKmkE,OAAS,EAGRD,GAAA3jE,UAAAU,QAAP,WAECjB,KAAKm5D,MAAM55D,OAAS,EAEtB,OAAA2kE,KAE4BzkE,GAAAJ,QAAnB6kE,IjGyvfNK,yCAAyC,2CAA2CA,0CAA0C,SAAShmE,EAAQkB,EAAOJ,GAIzJ,GkGzyfM4kE,GAAc,WAApB,QAAMA,MAWN,MAAAA,KAEwBxkE,GAAAJ,QAAf4kE,OlGmyfHpH,0CAA0C,SAASt+D,EAAQkB,EAAOJ,GmGjzfxE,GAAOs/B,GAAMpgC,EAAgB,qCAC7B,IAAO0zC,GAAgB1zC,EAAc,+CACrC,IAAOk2C,GAAIl2C,EAAiB,mCAC5B,IAAOq4C,GAASr4C,EAAe,wCAC/B,IAAOkwC,GAASlwC,EAAe,wCAC/B,IAAOs1C,GAAWt1C,EAAe,0CACjC,IAAOm4C,GAASn4C,EAAe,wCAC/B,IAAOo7C,GAAUp7C,EAAe,yCAChC,IAAOg1C,GAAUh1C,EAAe,yCAChC,IAAOq8C,GAAMr8C,EAAgB,qCAC7B,IAAOi6D,GAAUj6D,EAAe,0CAEhC,IAAO47D,GAAoB57D,EAAa,oDACxC,IAAOg6D,GAAUh6D,EAAe,0CAChC,IAAOo9D,GAAcp9D,EAAc,8CACnC,IAAOw+D,GAAcx+D,EAAc,8CACnC,IAAOk/D,GAAUl/D,EAAe,0CnGqzfhC,ImG9yfM49D,GAAc,WAYnB,QAZKA,GAYO9rD,GARJrQ,KAAAq8D,gBAAyB,GAAI17D,OAUpCX,MAAKq5D,WAAahpD,EASZ8rD,EAAA57D,UAAAq8D,QAAP,SAAenwC,GAEd,MAAQzsB,MAAKq8D,gBAAgB5vC,EAAc5oB,MAAQ7D,KAAKq8D,gBAAgB5vC,EAAc5oB,IAAM4oB,EAAc/Q,gBAAgB,IAAKygD,EAAenmB,SAASvpB,IAAgBzsB,KAAMysB,EAAezsB,KAAKq5D,cAQ3L8C,GAAA57D,UAAAw5D,YAAP,SAAmBttC,GAElBA,EAAc7Q,mBAAmB5b,KAAKq8D,gBAAgB5vC,EAAc5oB,WAE7D7D,MAAKq8D,gBAAgB5vC,EAAc5oB,IAO7Bs4D,GAAAqI,cAAd,SAA4BC,EAAkC1+D,GAE7Do2D,EAAe4H,WAAWh+D,EAAW7E,WAAaujE,EAOrCtI,GAAAnmB,SAAd,SAAuBvpB,GAEtB,MAAO0vC,GAAe4H,WAAWt3C,EAAcvrB,WAKjCi7D,GAAAuI,YAAf,WAECvI,EAAeqI,cAAchM,EAAY75B,EACzCw9B,GAAeqI,cAAcrK,EAAsBloB,EACnDkqB,GAAeqI,cAAcjM,EAAY9jB,EACzC0nB,GAAeqI,cAAcjM,EAAY9pB,EACzC0tB,GAAeqI,cAAcjM,EAAY1kB,EACzCsoB,GAAeqI,cAAcjM,EAAY7hB,EACzCylB,GAAeqI,cAAcjM,EAAY3hB,EACzCulB,GAAeqI,cAAc7I,EAAgBpoB,EAC7C4oB,GAAeqI,cAAczH,EAAgBpjB,EAC7CwiB,GAAeqI,cAAc/G,EAAY7iB,GArE3BuhB,GAAA4H,WAAoB,GAAIpjE,OAwDxBw7D,GAAAwI,KAAOxI,EAAeuI,aAetC,OAAAvI,KAEwB18D,GAAAJ,QAAf88D,InG+xfN7tB,wCAAwC,wCAAwCvK,qCAAqC,qCAAqCgO,+CAA+C,+CAA+CuB,yCAAyC,yCAAyCM,0CAA0C,0CAA0CW,mCAAmC,mCAAmCiC,wCAAwC,wCAAwCiD,yCAAyC,yCAAyCiB,qCAAqC,qCAAqCnB,wCAAwC,wCAAwC+e,0CAA0C,0CAA0C4B,oDAAoD,oDAAoDvB,0CAA0C,0CAA0C+C,8CAA8C,8CAA8CoB,8CAA8C,8CAA8CU,0CAA0C,4CAA4CoH,4CAA4C,SAASrmE,EAAQkB,EAAOJ,SAE/3CwlE,uCAAuC,SAAStmE,EAAQkB,EAAOJ,SAE/DylE,mCAAmC,SAASvmE,EAAQkB,EAAOJ,SAE3D0lE,sCAAsC,SAASxmE,EAAQkB,EAAOJ,SAE9Dk3C,uCAAuC,SAASh4C,EAAQkB,EAAOJ,GoGv4frE,GAAO0iB,GAAWxjB,EAAe,sCACjC,IAAOgyB,GAAehyB,EAAc,0CACpC,IAAOmH,GAAYnH,EAAe,uCpG44flC,IoGv4fMi2C,GAAW,WAAjB,QAAMA,MAQSA,EAAAgwB,cAAd,SAA4BQ,GAE3BxwB,EAAYywB,UAAUD,EAAaj/D,WAAW7E,WAAa8jE,EAO9CxwB,GAAAwB,SAAd,SAAuBrwC,GAEtB,MAAO6uC,GAAYywB,UAAUt/D,EAAYzE,WAK3BszC,GAAAkwB,YAAf,WAEClwB,EAAYgwB,cAAcziD,EAC1ByyB,GAAYgwB,cAAcj0C,EAC1BikB,GAAYgwB,cAAc9+D,GA1BZ8uC,GAAAywB,UAAmB,GAAItkE,OAoBvB6zC,GAAAmwB,KAAOnwB,EAAYkwB,aAQnC,OAAAlwB,KAEqB/0C,GAAAJ,QAAZm1C,IpGm4fNhvC,uCAAuC,uCAAuCsc,sCAAsC,sCAAsCwO,0CAA0C,4CAA4C40C,yCAAyC,SAAS3mE,EAAQkB,EAAOJ,GACpT,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqGr7ftB,IAAOG,GAASjC,EAAc,oCAC9B,IAAOigB,GAAmBjgB,EAAY,6CrG27ftC,IqGp7fM4mE,GAAU,SAAAzkE,GAASX,EAAnBolE,EAAUzkE,EASf,SATKykE,KAWJzkE,EAAApB,KAAAU,KATMA,MAAAolE,UAAiC,GAAI9iE,OAerC6iE,EAAA5kE,UAAA4zB,aAAP,WAEC,GAAIyuB,GAAuB5iD,KAAKqlE,gBAEhCrlE,MAAKolE,UAAUzrD,KAAKipC,EAEpB,OAAOA,GAYDuiB,GAAA5kE,UAAA8kE,eAAP,WAEC,KAAM,IAAI7mD,GAGJ2mD,GAAA5kE,UAAA6Q,WAAP,YAID,OAAA+zD,IA5CyB3kE,EA8CzBf,GAAoBJ,QAAX8lE,IrG06fN5kD,6CAA6Cnf,UAAUD,oCAAoCC,YAAYkkE,qDAAqD,SAAS/mE,EAAQkB,EAAOJ,GACvL,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsGh+ftB,IAAOklE,GAAmBhnE,EAAY,iDtGs+ftC,IsGj+fMinE,GAAsB,SAAA9kE,GAASX,EAA/BylE,EAAsB9kE,EA6F3B,SA7FK8kE,GA6FO1wC,EAAoB/oB,EAAqB05D,EAAuBC,EAAuBC,GAAvF,GAAA7wC,QAAA,GAAkB,CAAlBA,EAAA,GAAoB,GAAA/oB,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAA05D,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,KAElGjlE,EAAApB,KAAAU,KAxFOA,MAAAgC,aAAsB,CA0F7BhC,MAAK00B,QAAUI,CACf90B,MAAKiM,QAAUF,CACf/L,MAAK4lE,WAAaH,CAClBzlE,MAAK6lE,WAAcH,EAAU,GAAK,EAAIA,EAAY,EAAIA,CACtD1lE,MAAK8lE,KAAOH,EAzFbhlE,OAAAC,eAAW4kE,EAAAjlE,UAAA,UtGi/fJM,IsGj/fP,WAEC,MAAOb,MAAK00B,StGk/fN7xB,IsG/+fP,SAAkBC,GAEjB9C,KAAK00B,QAAU5xB,CAEf9C,MAAK+lE,wBtG++fChlE,WAAY,KACZC,aAAc,MsG1+frBL,QAAAC,eAAW4kE,EAAAjlE,UAAA,UtGg/fJM,IsGh/fP,WAEC,MAAOb,MAAKiM,StGi/fNpJ,IsG9+fP,SAAkBC,GAEjB9C,KAAKiM,QAAUnJ,CACf9C,MAAK+lE,wBtG++fChlE,WAAY,KACZC,aAAc,MsG1+frBL,QAAAC,eAAW4kE,EAAAjlE,UAAA,atGg/fJM,IsGh/fP,WAEC,MAAOb,MAAK4lE,YtGi/fN/iE,IsG9+fP,SAAqBC,GAEpB9C,KAAK4lE,WAAa9iE,CAElB9C,MAAK+lE,sBACL/lE,MAAKgmE,mBtG8+fCjlE,WAAY,KACZC,aAAc,MsGz+frBL,QAAAC,eAAW4kE,EAAAjlE,UAAA,atG++fJM,IsG/+fP,WAEC,MAAOb,MAAK6lE,YtGg/fNhjE,IsG7+fP,SAAqBC,GAEpB9C,KAAK6lE,WAAc/iE,EAAM,GAAK,EAAIA,EAAQ,EAAIA,CAE9C9C,MAAK+lE,sBACL/lE,MAAKgmE,mBtG6+fCjlE,WAAY,KACZC,aAAc,MsGx+frBL,QAAAC,eAAW4kE,EAAAjlE,UAAA,OtG8+fJM,IsG9+fP,WAEC,MAAOb,MAAK8lE,MtG++fNjjE,IsG5+fP,SAAeC,GAEd9C,KAAK8lE,KAAOhjE,CAEZ9C,MAAK+lE,wBtG4+fChlE,WAAY,KACZC,aAAc,MsGp9fdwkE,GAAAjlE,UAAA0lE,gBAAP,SAAuB/iE,EAAwBgxB,GAE9C,GAAI/vB,EACJ,IAAIQ,EACJ,IAAIkrB,EACJ,IAAIC,EAEJ,IAAI9wB,EACJ,IAAIqd,EACJ,IAAI6pD,GAAkB,CACtB,IAAIrsD,GAAe,CACnB,IAAIssD,EACJ,IAAIC,GAAcC,EAAcC,EAAWC,CAC3C,IAAIpG,GAAoB,CAExB,IAAIjsC,GAAgB,sBAAuB,CAE1C,GAAIsyC,GAA6DtjE,CAGjElD,MAAKgC,cAAgBhC,KAAK6lE,WAAa,IAAI7lE,KAAK4lE,WAAa,EAC7DzF,IAAcngE,KAAK6lE,WAAa,GAAG7lE,KAAK4lE,WAAW,CAGnD,IAAI5lE,KAAKgC,cAAgBwkE,EAAiB9mB,YAAa,CACtDv7C,EAAUqiE,EAAiBriE,QAAQtD,IAAI2lE,EAAiB1G,YACxDn7D,GAAY6hE,EAAiB7hE,UAAU9D,IAAIb,KAAKgC,aAChD6tB,GAAU22C,EAAiB32C,QAAQhvB,IAAIb,KAAKgC,aAC5C8tB,GAAW02C,EAAiB12C,SAASjvB,IAAIb,KAAKgC,kBACxC,CACNmC,EAAU,GAAIgd,aAAYg/C,EAC1Bx7D,GAAY,GAAIoc,cAAa/gB,KAAKgC,aAAa,EAC/C6tB,GAAU,GAAI9O,cAAa/gB,KAAKgC,aAAa,EAC7C8tB,GAAW,GAAI/O,cAAa/gB,KAAKgC,aAAa,EAE9ChC,MAAKgmE,kBAGN,IAAK3pD,EAAI,EAAGA,GAAKrc,KAAK6lE,aAAcxpD,EAAG,CAEtC,GAAIoqD,GAAkBnvD,KAAKovD,GAAGrqD,EAAErc,KAAK6lE,UACrC,IAAIh6D,IAAY7L,KAAK00B,QAAQpd,KAAK0uB,IAAIygC,EACtC,IAAIE,GAAoB3mE,KAAK00B,QAAQpd,KAAKyuB,IAAI0gC,EAE9CN,GAAatsD,CAEb,KAAK7a,EAAI,EAAGA,GAAKgB,KAAK4lE,aAAc5mE,EAAG,CACtC,GAAI4nE,GAAkB,EAAEtvD,KAAKovD,GAAG1nE,EAAEgB,KAAK4lE,UACvC,IAAIn6D,GAAWk7D,EAAWrvD,KAAK0uB,IAAI4gC,EACnC,IAAIpjE,GAAgB6Y,EAAIrc,KAAK6lE,WAAW,EAAG7lE,KAAKiM,QAAQ,GAAKjM,KAAKiM,QAAQ,CAC1E,IAAIN,GAAWg7D,EAAWrvD,KAAKyuB,IAAI6gC,EACnC,IAAIC,GAAiB,EAAEvvD,KAAKC,KAAK9L,EAAEA,EAAIE,EAAEA,EAAIE,EAAEA,EAC/C,IAAIi7D,GAAgBxvD,KAAKC,KAAK5L,EAAEA,EAAIF,EAAEA,EAEtC,IAAIzL,KAAK8lE,KAAM,CACdQ,EAAK,CACLC,GAAKO,EAAS,KAAMr7D,EAAEq7D,EAAS,CAC/BV,IAASv6D,CACTw6D,GAAQ16D,MAEF,CACN26D,EAAKQ,EAAS,KAAMr7D,EAAEq7D,EAAS,CAC/BP,GAAK,CACLH,GAAQz6D,CACR06D,GAAQx6D,EAGT,GAAI7M,GAAKgB,KAAK4lE,WAAY,CAEzBjhE,EAAUkV,GAASlV,EAAUwhE,EAC7BxhE,GAAUkV,EAAQ,GAAKlV,EAAUwhE,EAAa,EAC9CxhE,GAAUkV,EAAQ,GAAKlV,EAAUwhE,EAAa,EAC9Ct2C,GAAQhW,IAAUgW,EAAQs2C,GAAe16D,EAAEo7D,GAAU,EACrDh3C,GAAQhW,EAAQ,IAAMgW,EAAQs2C,EAAa,GAAOC,EAAMS,GAAU,EAClEh3C,GAAQhW,EAAQ,IAAMgW,EAAQs2C,EAAa,GAAME,EAAMQ,GAAU,EACjE/2C,GAASjW,IAAUiW,EAASq2C,IAAeW,EAAS,MAAOn7D,EAAEm7D,EAAS,IAAI,EAC1Eh3C,GAASjW,EAAQ,IAAMiW,EAASq2C,EAAa,GAAKG,GAAI,EACtDx2C,GAASjW,EAAQ,IAAMiW,EAASq2C,EAAa,GAAKI,GAAI,OAEhD,CAEN5hE,EAAUkV,GAASpO,CACnB9G,GAAUkV,EAAQ,GAAM7Z,KAAS,KAAGomE,EAAQ5iE,EAAS4iE,CACrDzhE,GAAUkV,EAAQ,GAAM7Z,KAAS,KAAGqmE,EAAQA,EAAQ7iE,CAEpDqsB,GAAQhW,GAASpO,EAAEo7D,CACnBh3C,GAAQhW,EAAQ,GAAKusD,EAAMS,CAC3Bh3C,GAAQhW,EAAQ,GAAKwsD,EAAMQ,CAE3B/2C,GAASjW,GAASitD,EAAS,MAAOn7D,EAAEm7D,EAAS,CAC7Ch3C,GAASjW,EAAQ,GAAKysD,CACtBx2C,GAASjW,EAAQ,GAAK0sD,EAGvB,GAAIvnE,EAAI,GAAKqd,EAAI,EAAG,CACnB,GAAItd,IAAYiB,KAAK4lE,WAAa,GAAGvpD,EAAIrd,CACzC,IAAIkB,IAAYF,KAAK4lE,WAAa,GAAGvpD,EAAIrd,EAAI,CAC7C,IAAI0yB,IAAY1xB,KAAK4lE,WAAa,IAAIvpD,EAAI,GAAKrd,EAAI,CACnD,IAAIiB,IAAYD,KAAK4lE,WAAa,IAAIvpD,EAAI,GAAKrd,CAE/C,IAAIqd,GAAKrc,KAAK6lE,WAAY,CACzBlhE,EAAUkV,GAASlV,EAAUwhE,EAC7BxhE,GAAUkV,EAAQ,GAAKlV,EAAUwhE,EAAa,EAC9CxhE,GAAUkV,EAAQ,GAAKlV,EAAUwhE,EAAa,EAE9ChiE,GAAQ+hE,KAAcnnE,CACtBoF,GAAQ+hE,KAAcx0C,CACtBvtB,GAAQ+hE,KAAcjmE,MAEhB,IAAIoc,GAAK,EAAG,CAClBlY,EAAQ+hE,KAAcnnE,CACtBoF,GAAQ+hE,KAAchmE,CACtBiE,GAAQ+hE,KAAcx0C,MAEhB,CACNvtB,EAAQ+hE,KAAcnnE,CACtBoF,GAAQ+hE,KAAchmE,CACtBiE,GAAQ+hE,KAAcx0C,CACtBvtB,GAAQ+hE,KAAcnnE,CACtBoF,GAAQ+hE,KAAcx0C,CACtBvtB,GAAQ+hE,KAAcjmE,GAIxB4Z,GAAS,GAKX2sD,EAAiBpiE,WAAWD,EAE5BqiE,GAAiBljE,aAAaqB,EAC9B6hE,GAAiBh4C,WAAWqB,EAC5B22C,GAAiB93C,YAAYoB,OAEvB,IAAIoE,GAAgB,kBAAmB,GAQxCsxC,GAAAjlE,UAAAwmE,WAAP,SAAkB7jE,EAAwBgxB,GAEzC,GAAIl1B,GAAUqd,CACd,IAAIhY,EAGJ,IAAI6vB,GAAgB,sBAAuB,CAE1C,GAAIsyC,GAA6DtjE,CAGjE,IAAIsjE,EAAiBniE,KAAOrE,KAAKgC,cAAgBwkE,EAAiB9mB,YAAa,CAC9Er7C,EAAMmiE,EAAiBniE,IAAIxD,IAAIb,KAAKgC,kBAC9B,CACNqC,EAAM,GAAI0c,cAAa/gB,KAAKgC,aAAa,GtGm8fjC,GsG/7fL6X,GAAe,CAGnB,KAAKwC,EAAI,EAAGA,GAAKrc,KAAK6lE,aAAcxpD,EAAG,CACtC,IAAKrd,EAAI,EAAGA,GAAKgB,KAAK4lE,aAAc5mE,EAAG,CAEtCqF,EAAIwV,KAAa7a,EAAEgB,KAAK4lE,WAAa5lE,KAAKmC,OAC1CkC,GAAIwV,KAAawC,EAAErc,KAAK6lE,WAAa7lE,KAAKoC,SAK5CokE,EAAiBzjE,OAAOsB,OAElB,IAAI6vB,GAAgB,kBAAmB,GAIhD,OAAAsxC,IA9RqCD,EAgSrC9lE,GAAgCJ,QAAvBmmE,ItG67fNwB,iDAAiD,mDAAmDC,kDAAkD,SAAS1oE,EAAQkB,EAAOJ,GACjL,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuG1ugBtB,IAAO6mE,GAAuB3oE,EAAW,qDvGgvgBzC,IuG3ugBM4oE,GAAmB,SAAAzmE,GAASX,EAA5BonE,EAAmBzmE,EA0BxB,SA1BKymE,GA0BOryC,EAAoB/oB,EAAqB05D,EAAuBC,EAAsB0B,EAAuBzB,GAA7G,GAAA7wC,QAAA,GAAkB,CAAlBA,EAAA,GAAoB,GAAA/oB,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAA05D,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAA0B,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAzB,QAAA,GAAkB,CAAlBA,EAAA,KAExHjlE,EAAApB,KAAAU,KAAM,EAAG80B,EAAQ/oB,EAAQ05D,EAAWC,EAAW,MAAO0B,EAAQ,KAAMzB,GAtBrEhlE,OAAAC,eAAWumE,EAAA5mE,UAAA,UvG4vgBJM,IuG5vgBP,WAEC,MAAOb,MAAKqnE,gBvG6vgBNxkE,IuG1vgBP,SAAkBC,GAEjB9C,KAAKqnE,eAAiBvkE,CAEtB9C,MAAK+lE,wBvG0vgBChlE,WAAY,KACZC,aAAc,MuG5ugBtB,OAAAmmE,IA9BkCD,EAgCLznE,GAAAJ,QAApB8nE,IvGgvgBNG,qDAAqD,uDAAuDhzC,kDAAkD,SAAS/1B,EAAQkB,EAAOJ,GACzL,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwGvxgBtB,IAAOklE,GAAmBhnE,EAAY,iDxG6xgBtC,IwGxxgBMoyB,GAAmB,SAAAjwB,GAASX,EAA5B4wB,EAAmBjwB,EAqBxB,SArBKiwB,GAqBO3hB,EAAoBjD,EAAqBX,EAAoBq6D,EAAsBC,EAAsB6B,EAAsBC,GAA/H,GAAAx4D,QAAA,GAAkB,CAAlBA,EAAA,IAAoB,GAAAjD,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAAX,QAAA,GAAkB,CAAlBA,EAAA,IAAoB,GAAAq6D,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAA6B,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,KAE1I9mE,EAAApB,KAAAU,KAEAA,MAAK6N,OAASmB,CACdhP,MAAKiM,QAAUF,CACf/L,MAAKuL,OAASH,CACdpL,MAAK4lE,WAAaH,CAClBzlE,MAAK6lE,WAAaH,CAClB1lE,MAAKynE,WAAaF,CAClBvnE,MAAK0nE,OAASF,EAMf7mE,OAAAC,eAAW+vB,EAAApwB,UAAA,SxGoxgBJM,IwGpxgBP,WAEC,MAAOb,MAAK6N,QxGqxgBNhL,IwGlxgBP,SAAiBC,GAEhB9C,KAAK6N,OAAS/K,CAEd9C,MAAK+lE,wBxGkxgBChlE,WAAY,KACZC,aAAc,MwG7wgBrBL,QAAAC,eAAW+vB,EAAApwB,UAAA,UxGmxgBJM,IwGnxgBP,WAEC,MAAOb,MAAKiM,SxGoxgBNpJ,IwGjxgBP,SAAkBC,GAEjB9C,KAAKiM,QAAUnJ,CAEf9C,MAAK+lE,wBxGixgBChlE,WAAY,KACZC,aAAc,MwG5wgBrBL,QAAAC,eAAW+vB,EAAApwB,UAAA,SxGkxgBJM,IwGlxgBP,WAEC,MAAOb,MAAKuL,QxGmxgBN1I,IwGhxgBP,SAAiBC,GAEhB9C,KAAKuL,OAASzI,CAEd9C,MAAK+lE,wBxGgxgBChlE,WAAY,KACZC,aAAc,MwGtwgBrBL,QAAAC,eAAW+vB,EAAApwB,UAAA,SxGixgBJM,IwGjxgBP,WAEC,MAAOb,MAAK0nE,QxGkxgBN7kE,IwG/wgBP,SAAiBC,GAEhB9C,KAAK0nE,OAAS5kE,CAEd9C,MAAK+lE,wBxG+wgBChlE,WAAY,KACZC,aAAc,MwG1wgBrBL,QAAAC,eAAW+vB,EAAApwB,UAAA,axGgxgBJM,IwGhxgBP,WAEC,MAAOb,MAAK4lE,YxGixgBN/iE,IwG9wgBP,SAAqBC,GAEpB9C,KAAK4lE,WAAa9iE,CAElB9C,MAAK+lE,sBACL/lE,MAAKgmE,mBxG8wgBCjlE,WAAY,KACZC,aAAc,MwGzwgBrBL,QAAAC,eAAW+vB,EAAApwB,UAAA,axG+wgBJM,IwG/wgBP,WAEC,MAAOb,MAAK6lE,YxGgxgBNhjE,IwG7wgBP,SAAqBC,GAEpB9C,KAAK6lE,WAAa/iE,CAElB9C,MAAK+lE,sBACL/lE,MAAKgmE,mBxG6wgBCjlE,WAAY,KACZC,aAAc,MwGxwgBrBL,QAAAC,eAAW+vB,EAAApwB,UAAA,axG8wgBJM,IwG9wgBP,WAEC,MAAOb,MAAKynE,YxG+wgBN5kE,IwG5wgBP,SAAqBC,GAEpB9C,KAAKynE,WAAa3kE,CAElB9C,MAAK+lE,sBACL/lE,MAAKgmE,mBxG4wgBCjlE,WAAY,KACZC,aAAc,MwGvwgBd2vB,GAAApwB,UAAA0lE,gBAAP,SAAuB/iE,EAAwBgxB,GAE9C,GAAI/vB,EACJ,IAAIQ,EACJ,IAAIkrB,EACJ,IAAIC,EAEJ,IAAIquB,GAAWwpB,EAAWC,EAAWC,CACrC,IAAI7oE,GAAUqd,EAAUyrD,EAAa,CAErC,IAAIC,GAAaC,CACjB,IAAIC,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWzzC,CAE1B,IAAI0zC,EACJ,IAAInI,EACJ,IAAIzgB,EAGJuoB,GAAKjoE,KAAK6N,OAAO,CACjBq6D,GAAKloE,KAAKiM,QAAQ,CAClBk8D,GAAKnoE,KAAKuL,OAAO,CAEjB,IAAI2oB,GAAgB,sBAAuB,CAE1C,GAAIsyC,GAA6DtjE,CAEjEw8C,KAAgB1/C,KAAK4lE,WAAa,IAAI5lE,KAAK6lE,WAAa,IAAM7lE,KAAK4lE,WAAa,IAAI5lE,KAAKynE,WAAa,IAAMznE,KAAK6lE,WAAa,IAAI7lE,KAAKynE,WAAa,IAAI,CAExJtH,IAAengE,KAAK4lE,WAAW5lE,KAAK6lE,WAAa7lE,KAAK4lE,WAAW5lE,KAAKynE,WAAaznE,KAAK6lE,WAAW7lE,KAAKynE,YAAY,EAEpH,IAAI/nB,GAAe8mB,EAAiB9mB,aAAe8mB,EAAiBriE,SAAW,KAAM,CACpFA,EAAUqiE,EAAiBriE,QAAQtD,IAAI2lE,EAAiB1G,YACxDn7D,GAAY6hE,EAAiB7hE,UAAU9D,IAAI6+C,EAC3C7vB,GAAU22C,EAAiB32C,QAAQhvB,IAAI6+C,EACvC5vB,GAAW02C,EAAiB12C,SAASjvB,IAAI6+C,OACnC,CACNv7C,EAAU,GAAIgd,aAAYg/C,EAC1Bx7D,GAAY,GAAIoc,cAAa2+B,EAAY,EACzC7vB,GAAU,GAAI9O,cAAa2+B,EAAY,EACvC5vB,GAAW,GAAI/O,cAAa2+B,EAAY,EAExC1/C,MAAKgmE,kBAGN+B,EAAO,CACPC,GAAO,CAGPI,GAAKpoE,KAAK6N,OAAO7N,KAAK4lE,UACtByC,GAAKroE,KAAKiM,QAAQjM,KAAK6lE,UACvBjxC,GAAK50B,KAAKuL,OAAOvL,KAAKynE,UAEtB,KAAKzoE,EAAI,EAAGA,GAAKgB,KAAK4lE,WAAY5mE,IAAK,CACtCspE,GAAaL,EAAKjpE,EAAEopE,CAEpB,KAAK/rD,EAAI,EAAGA,GAAKrc,KAAK6lE,WAAYxpD,IAAK,CAEtC1X,EAAUojE,GAAQO,CAClB3jE,GAAUojE,EAAO,IAAMG,EAAK7rD,EAAEgsD,CAC9B1jE,GAAUojE,EAAO,IAAMI,CACvBt4C,GAAQk4C,GAAQ,CAChBl4C,GAAQk4C,EAAO,GAAK,CACpBl4C,GAAQk4C,EAAO,IAAM,CACrBj4C,GAASi4C,GAAQ,CACjBj4C,GAASi4C,EAAO,GAAK,CACrBj4C,GAASi4C,EAAO,GAAK,CACrBA,IAAQ,CAGRpjE,GAAUojE,GAAQO,CAClB3jE,GAAUojE,EAAO,IAAMG,EAAK7rD,EAAEgsD,CAC9B1jE,GAAUojE,EAAO,GAAKI,CACtBt4C,GAAQk4C,GAAQ,CAChBl4C,GAAQk4C,EAAO,GAAK,CACpBl4C,GAAQk4C,EAAO,GAAK,CACpBj4C,GAASi4C,IAAS,CAClBj4C,GAASi4C,EAAO,GAAK,CACrBj4C,GAASi4C,EAAO,GAAK,CACrBA,IAAQ,CAER,IAAI/oE,GAAKqd,EAAG,CACX8hC,EAAK,IAAIn/C,EAAI,IAAIgB,KAAK6lE,WAAa,IAAMxpD,EAAI,GAC7CsrD,GAAK,GAAG3oE,GAAGgB,KAAK6lE,WAAa,IAAMxpD,EAAI,GACvCurD,GAAKzpB,EAAK,CACV0pB,GAAKF,EAAK,CAEVxjE,GAAQ6jE,KAAU7pB,CAClBh6C,GAAQ6jE,KAAUJ,CAClBzjE,GAAQ6jE,KAAUH,CAClB1jE,GAAQ6jE,KAAU7pB,CAClBh6C,GAAQ6jE,KAAUH,CAClB1jE,GAAQ6jE,KAAUL,CAClBxjE,GAAQ6jE,KAAUL,EAAK,CACvBxjE,GAAQ6jE,KAAUH,EAAK,CACvB1jE,GAAQ6jE,KAAUJ,EAAK,CACvBzjE,GAAQ6jE,KAAUL,EAAK,CACvBxjE,GAAQ6jE,KAAUJ,EAAK,CACvBzjE,GAAQ6jE,KAAU7pB,EAAK,IAK1B2pB,GAAO,GAAG9nE,KAAK4lE,WAAa,IAAI5lE,KAAK6lE,WAAa,EAElD,KAAK7mE,EAAI,EAAGA,GAAKgB,KAAK4lE,WAAY5mE,IAAK,CACtCspE,GAAaL,EAAKjpE,EAAEopE,CAEpB,KAAK/rD,EAAI,EAAGA,GAAKrc,KAAKynE,WAAYprD,IAAK,CAEtC1X,EAAUojE,GAAQO,CAClB3jE,GAAUojE,EAAO,GAAKG,CACtBvjE,GAAUojE,EAAO,IAAMI,EAAK9rD,EAAEuY,CAC9B/E,GAAQk4C,GAAQ,CAChBl4C,GAAQk4C,EAAO,GAAK,CACpBl4C,GAAQk4C,EAAO,GAAK,CACpBj4C,GAASi4C,GAAQ,CACjBj4C,GAASi4C,EAAO,GAAK,CACrBj4C,GAASi4C,EAAO,GAAK,CACrBA,IAAQ,CAGRpjE,GAAUojE,GAAQO,CAClB3jE,GAAUojE,EAAO,IAAMG,CACvBvjE,GAAUojE,EAAO,IAAMI,EAAK9rD,EAAEuY,CAC9B/E,GAAQk4C,GAAQ,CAChBl4C,GAAQk4C,EAAO,IAAM,CACrBl4C,GAAQk4C,EAAO,GAAK,CACpBj4C,GAASi4C,GAAQ,CACjBj4C,GAASi4C,EAAO,GAAK,CACrBj4C,GAASi4C,EAAO,GAAK,CACrBA,IAAQ,CAER,IAAI/oE,GAAKqd,EAAG,CACX8hC,EAAK2pB,EAAM,IAAI9oE,EAAI,IAAIgB,KAAKynE,WAAa,IAAMprD,EAAI,GACnDsrD,GAAKG,EAAM,GAAG9oE,GAAGgB,KAAKynE,WAAa,IAAMprD,EAAI,GAC7CurD,GAAKzpB,EAAK,CACV0pB,GAAKF,EAAK,CAEVxjE,GAAQ6jE,KAAU7pB,CAClBh6C,GAAQ6jE,KAAUJ,CAClBzjE,GAAQ6jE,KAAUH,CAClB1jE,GAAQ6jE,KAAU7pB,CAClBh6C,GAAQ6jE,KAAUH,CAClB1jE,GAAQ6jE,KAAUL,CAClBxjE,GAAQ6jE,KAAUL,EAAK,CACvBxjE,GAAQ6jE,KAAUH,EAAK,CACvB1jE,GAAQ6jE,KAAUJ,EAAK,CACvBzjE,GAAQ6jE,KAAUL,EAAK,CACvBxjE,GAAQ6jE,KAAUJ,EAAK,CACvBzjE,GAAQ6jE,KAAU7pB,EAAK,IAK1B2pB,GAAO,GAAG9nE,KAAK4lE,WAAa,IAAI5lE,KAAKynE,WAAa,EAElD,KAAKzoE,EAAI,EAAGA,GAAKgB,KAAKynE,WAAYzoE,IAAK,CACtCspE,EAAYH,EAAKnpE,EAAE41B,CAEnB,KAAKvY,EAAI,EAAGA,GAAKrc,KAAK6lE,WAAYxpD,IAAK,CAEtC1X,EAAUojE,IAASE,CACnBtjE,GAAUojE,EAAK,IAAMG,EAAK7rD,EAAEgsD,CAC5B1jE,GAAUojE,EAAK,GAAKO,CACpBz4C,GAAQk4C,IAAS,CACjBl4C,GAAQk4C,EAAK,GAAK,CAClBl4C,GAAQk4C,EAAK,GAAK,CAClBj4C,GAASi4C,GAAQ,CACjBj4C,GAASi4C,EAAK,GAAK,CACnBj4C,GAASi4C,EAAK,IAAM,CACpBA,IAAQ,CAGRpjE,GAAUojE,GAAQE,CAClBtjE,GAAUojE,EAAK,IAAMG,EAAK7rD,EAAEgsD,CAC5B1jE,GAAUojE,EAAK,GAAKO,CACpBz4C,GAAQk4C,GAAQ,CAChBl4C,GAAQk4C,EAAK,GAAK,CAClBl4C,GAAQk4C,EAAK,GAAK,CAClBj4C,GAASi4C,GAAQ,CACjBj4C,GAASi4C,EAAK,GAAK,CACnBj4C,GAASi4C,EAAK,GAAK,CACnBA,IAAQ,CAER,IAAI/oE,GAAKqd,EAAG,CACX8hC,EAAK2pB,EAAM,IAAI9oE,EAAI,IAAIgB,KAAK6lE,WAAa,IAAMxpD,EAAI,GACnDsrD,GAAKG,EAAM,GAAG9oE,GAAGgB,KAAK6lE,WAAa,IAAMxpD,EAAI,GAC7CurD,GAAKzpB,EAAK,CACV0pB,GAAKF,EAAK,CAEVxjE,GAAQ6jE,KAAU7pB,CAClBh6C,GAAQ6jE,KAAUJ,CAClBzjE,GAAQ6jE,KAAUH,CAClB1jE,GAAQ6jE,KAAU7pB,CAClBh6C,GAAQ6jE,KAAUH,CAClB1jE,GAAQ6jE,KAAUL,CAClBxjE,GAAQ6jE,KAAUL,EAAK,CACvBxjE,GAAQ6jE,KAAUH,EAAK,CACvB1jE,GAAQ6jE,KAAUJ,EAAK,CACvBzjE,GAAQ6jE,KAAUL,EAAK,CACvBxjE,GAAQ6jE,KAAUJ,EAAK,CACvBzjE,GAAQ6jE,KAAU7pB,EAAK,IAK1BqoB,EAAiBpiE,WAAWD,EAE5BqiE,GAAiBljE,aAAaqB,EAC9B6hE,GAAiBh4C,WAAWqB,EAC5B22C,GAAiB93C,YAAYoB,OAEvB,IAAIoE,GAAgB,kBAAmB,CAC7C,GAAIq0C,GAAiDrlE,CAErD,IAAIslE,GAAqBxoE,KAAK6lE,WAAW,EAAK7lE,KAAK4lE,WAAW,EAAI5lE,KAAKynE,WAAW,CAClF,IAAI9iE,EACJ,IAAI0c,EAEJ1c,GAAY,GAAIoc,cAAaynD,EAAY,EACzCnnD,GAAY,GAAIN,cAAaynD,EAE7BT,GAAO,CAEPC,GAAO,CAGP,KAAKhpE,EAAI,EAAGA,EAAIgB,KAAK6lE,aAAc7mE,EAAG,CACrC2F,EAAUojE,MAAWE,CACrBtjE,GAAUojE,KAAU/oE,EAAEgB,KAAKiM,QAAQjM,KAAK6lE,WAAaqC,CACrDvjE,GAAUojE,MAAWI,CAErBxjE,GAAUojE,KAAUE,CACpBtjE,GAAUojE,KAAU/oE,EAAEgB,KAAKiM,QAAQjM,KAAK6lE,WAAaqC,CACrDvjE,GAAUojE,MAAWI,CAErB9mD,GAAU2mD,KAAU,CAEpBrjE,GAAUojE,MAAWE,CACrBtjE,GAAUojE,KAAUG,EAAKlpE,EAAEgB,KAAKiM,QAAQjM,KAAK6lE,UAC7ClhE,GAAUojE,KAAUI,CAEpBxjE,GAAUojE,KAAUE,CACpBtjE,GAAUojE,KAAUG,EAAKlpE,EAAEgB,KAAKiM,QAAQjM,KAAK6lE,UAC7ClhE,GAAUojE,KAAUI,CAEpB9mD,GAAU2mD,KAAU,EAGrB,IAAKhpE,EAAI,EAAGA,EAAIgB,KAAK4lE,aAAc5mE,EAAG,CACrC2F,EAAUojE,KAAU/oE,EAAEgB,KAAK6N,OAAO7N,KAAK4lE,WAAaqC,CACpDtjE,GAAUojE,MAAWG,CACrBvjE,GAAUojE,MAAWI,CAErBxjE,GAAUojE,KAAU/oE,EAAEgB,KAAK6N,OAAO7N,KAAK4lE,WAAaqC,CACpDtjE,GAAUojE,KAAUG,CACpBvjE,GAAUojE,MAAWI,CAErB9mD,GAAU2mD,KAAU,CAEpBrjE,GAAUojE,KAAUE,EAAKjpE,EAAEgB,KAAK6N,OAAO7N,KAAK4lE,UAC5CjhE,GAAUojE,MAAWG,CACrBvjE,GAAUojE,KAAUI,CAEpBxjE,GAAUojE,KAAUE,EAAKjpE,EAAEgB,KAAK6N,OAAO7N,KAAK4lE,UAC5CjhE,GAAUojE,KAAUG,CACpBvjE,GAAUojE,KAAUI,CAEpB9mD,GAAU2mD,KAAU,EAIrB,IAAKhpE,EAAI,EAAGA,EAAIgB,KAAK6lE,aAAc7mE,EAAG,CACrC2F,EAAUojE,MAAWE,CACrBtjE,GAAUojE,KAAU/oE,EAAEgB,KAAKiM,QAAQjM,KAAK6lE,WAAaqC,CACrDvjE,GAAUojE,MAAWI,CAErBxjE,GAAUojE,MAAWE,CACrBtjE,GAAUojE,KAAU/oE,EAAEgB,KAAKiM,QAAQjM,KAAK6lE,WAAaqC,CACrDvjE,GAAUojE,KAAUI,CAEpB9mD,GAAU2mD,KAAU,CAEpBrjE,GAAUojE,KAAUE,CACpBtjE,GAAUojE,KAAUG,EAAKlpE,EAAEgB,KAAKiM,QAAQjM,KAAK6lE,UAC7ClhE,GAAUojE,MAAWI,CAErBxjE,GAAUojE,KAAUE,CACpBtjE,GAAUojE,KAAUG,EAAKlpE,EAAEgB,KAAKiM,QAAQjM,KAAK6lE,UAC7ClhE,GAAUojE,KAAUI,CAEpB9mD,GAAU2mD,KAAU,EAGrB,IAAKhpE,EAAI,EAAGA,EAAIgB,KAAKynE,aAAczoE,EAAG,CACrC2F,EAAUojE,KAAUE,CACpBtjE,GAAUojE,MAAWG,CACrBvjE,GAAUojE,KAAU/oE,EAAEgB,KAAKuL,OAAOvL,KAAKynE,WAAaU,CAEpDxjE,GAAUojE,KAAUE,CACpBtjE,GAAUojE,KAAUG,CACpBvjE,GAAUojE,KAAU/oE,EAAEgB,KAAKuL,OAAOvL,KAAKynE,WAAaU,CAEpD9mD,GAAU2mD,KAAU,CAEpBrjE,GAAUojE,MAAWE,CACrBtjE,GAAUojE,MAAWG,CACrBvjE,GAAUojE,KAAUI,EAAKnpE,EAAEgB,KAAKuL,OAAOvL,KAAKynE,UAE5C9iE,GAAUojE,MAAWE,CACrBtjE,GAAUojE,KAAUG,CACpBvjE,GAAUojE,KAAUI,EAAKnpE,EAAEgB,KAAKuL,OAAOvL,KAAKynE,UAE5CpmD,GAAU2mD,KAAU,EAKrB,IAAKhpE,EAAI,EAAGA,EAAIgB,KAAKynE,aAAczoE,EAAG,CACrC2F,EAAUojE,MAAWE,CACrBtjE,GAAUojE,MAAWG,CACrBvjE,GAAUojE,KAAUI,EAAKnpE,EAAEgB,KAAKuL,OAAOvL,KAAKynE,UAE5C9iE,GAAUojE,KAAUE,CACpBtjE,GAAUojE,MAAWG,CACrBvjE,GAAUojE,KAAUI,EAAKnpE,EAAEgB,KAAKuL,OAAOvL,KAAKynE,UAE5CpmD,GAAU2mD,KAAU,CAEpBrjE,GAAUojE,MAAWE,CACrBtjE,GAAUojE,KAAUG,CACpBvjE,GAAUojE,KAAU/oE,EAAEgB,KAAKuL,OAAOvL,KAAKynE,WAAaU,CAEpDxjE,GAAUojE,KAAUE,CACpBtjE,GAAUojE,KAAUG,CACpBvjE,GAAUojE,KAAU/oE,EAAEgB,KAAKuL,OAAOvL,KAAKynE,WAAaU,CAEpD9mD,GAAU2mD,KAAU,EAGrB,IAAKhpE,EAAI,EAAGA,EAAIgB,KAAK4lE,aAAc5mE,EAAG,CACrC2F,EAAUojE,KAAUE,EAAKjpE,EAAEgB,KAAK6N,OAAO7N,KAAK4lE,UAC5CjhE,GAAUojE,MAAWG,CACrBvjE,GAAUojE,MAAWI,CAErBxjE,GAAUojE,KAAUE,EAAKjpE,EAAEgB,KAAK6N,OAAO7N,KAAK4lE,UAC5CjhE,GAAUojE,MAAWG,CACrBvjE,GAAUojE,KAAUI,CAEpB9mD,GAAU2mD,KAAU,CAEpBrjE,GAAUojE,KAAU/oE,EAAEgB,KAAK6N,OAAO7N,KAAK4lE,WAAaqC,CACpDtjE,GAAUojE,KAAUG,CACpBvjE,GAAUojE,MAAWI,CAErBxjE,GAAUojE,KAAU/oE,EAAEgB,KAAK6N,OAAO7N,KAAK4lE,WAAaqC,CACpDtjE,GAAUojE,KAAUG,CACpBvjE,GAAUojE,KAAUI,CAEpB9mD,GAAU2mD,KAAU,EAIrBO,EAAajlE,aAAaqB,EAC1B4jE,GAAannD,aAAaC,IAOrBsP,GAAApwB,UAAAwmE,WAAP,SAAkB7jE,EAAwBgxB,GAEzC,GAAIl1B,GAAUqd,EAAUxC,CACxB,IAAIxV,EAEJ,IAAIokE,GAAmBC,CACvB,IAAIC,GAAoBC,CACxB,IAAIC,GAAaC,CACjB,IAAIC,GAAaC,CACjB,IAAIC,GAAWC,CACf,IAAIxpB,EAEJ,IAAIxrB,GAAgB,sBAAuB,CAE1CwrB,IAAgB1/C,KAAK4lE,WAAa,IAAI5lE,KAAK6lE,WAAa,IAAM7lE,KAAK4lE,WAAa,IAAI5lE,KAAKynE,WAAa,IAAMznE,KAAK6lE,WAAa,IAAI7lE,KAAKynE,WAAa,IAAI,CAExJ,IAAIjB,GAA6DtjE,CAEjE,IAAIw8C,GAAe8mB,EAAiB9mB,aAAe8mB,EAAiBniE,KAAO,KAAM,CAChFA,EAAMmiE,EAAiBniE,IAAIxD,IAAI6+C,OACzB,CACNr7C,EAAM,GAAI0c,cAAa2+B,EAAY,GAGpC,GAAI1/C,KAAK0nE,OAAQ,CAChBe,EAAaE,EAAc,EAAE,CAC7BD,GAAaE,EAAc,EAAE,MACvB,CACNH,EAAaC,EAAa,CAC1BC,GAAcC,EAAc,EAe7B/uD,EAAQ,CAGRgvD,GAAO,EAAEF,CACTG,GAAO,EAAEF,CACTG,GAAO,EAAEJ,CACTK,GAAO,EAAEJ,CACTK,GAAKR,EAAWzoE,KAAK4lE,UACrBsD,GAAKR,EAAW1oE,KAAK6lE,UACrB,KAAK7mE,EAAI,EAAGA,GAAKgB,KAAK4lE,WAAY5mE,IAAK,CACtC,IAAKqd,EAAI,EAAGA,GAAKrc,KAAK6lE,WAAYxpD,IAAK,CACtChY,EAAIwV,MAAagvD,EAAO7pE,EAAEiqE,GAAKjpE,KAAKmC,OACpCkC,GAAIwV,MAAaivD,GAAQJ,EAAarsD,EAAE6sD,IAAKlpE,KAAKoC,OAElDiC,GAAIwV,MAAakvD,GAAQN,EAAazpE,EAAEiqE,IAAKjpE,KAAKmC,OAClDkC,GAAIwV,MAAamvD,GAAQN,EAAarsD,EAAE6sD,IAAKlpE,KAAKoC,SAKpDymE,EAAO,EAAEF,CACTG,GAAO,EAAEF,CACTG,GAAO,EAAEJ,CACTK,GAAO,EAAEJ,CACTK,GAAKR,EAAWzoE,KAAK4lE,UACrBsD,GAAKR,EAAW1oE,KAAKynE,UACrB,KAAKzoE,EAAI,EAAGA,GAAKgB,KAAK4lE,WAAY5mE,IAAK,CACtC,IAAKqd,EAAI,EAAGA,GAAKrc,KAAKynE,WAAYprD,IAAK,CACtChY,EAAIwV,MAAagvD,EAAO7pE,EAAEiqE,GAAIjpE,KAAKmC,OACnCkC,GAAIwV,MAAaivD,GAAQJ,EAAarsD,EAAE6sD,IAAKlpE,KAAKoC,OAElDiC,GAAIwV,MAAakvD,EAAO/pE,EAAEiqE,GAAIjpE,KAAKmC,OACnCkC,GAAIwV,MAAamvD,EAAO3sD,EAAE6sD,GAAIlpE,KAAKoC,SAKrCymE,EAAO,EAAEF,CACTG,GAAO,EAAEF,CACTG,GAAO,EAAEJ,CACTK,GAAO,EAAEJ,CACTK,GAAKR,EAAWzoE,KAAKynE,UACrByB,GAAKR,EAAW1oE,KAAK6lE,UACrB,KAAK7mE,EAAI,EAAGA,GAAKgB,KAAKynE,WAAYzoE,IAAK,CACtC,IAAKqd,EAAI,EAAGA,GAAKrc,KAAK6lE,WAAYxpD,IAAK,CACtChY,EAAIwV,MAAagvD,EAAO7pE,EAAEiqE,GAAIjpE,KAAKmC,OACnCkC,GAAIwV,MAAaivD,GAAQJ,EAAarsD,EAAE6sD,IAAKlpE,KAAKoC,OAElDiC,GAAIwV,MAAakvD,GAAQN,EAAazpE,EAAEiqE,IAAKjpE,KAAKmC,OAClDkC,GAAIwV,MAAamvD,GAAQN,EAAarsD,EAAE6sD,IAAKlpE,KAAKoC,SAIpDokE,EAAiBzjE,OAAOsB,OAElB,IAAI6vB,GAAgB,kBAAmB,GAIhD,OAAAvD,IAjnBkC40C,EAmnBlC9lE,GAA6BJ,QAApBsxB,IxGirgBNq2C,iDAAiD,mDAAmDM,sDAAsD,SAAS/oE,EAAQkB,EAAOJ,GACrL,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyG9yhBtB,IAAOklE,GAAmBhnE,EAAY,iDzGozhBtC,IyG/yhBM2oE,GAAuB,SAAAxmE,GAASX,EAAhCmnE,EAAuBxmE,EAyJ5B,SAzJKwmE,GAyJOiC,EAAuBC,EAA0Br9D,EAAqB05D,EAAuBC,EAAsB2D,EAA0BC,EAA6BC,EAA8B5D,GAAxM,GAAAwD,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,GAA0B,GAAAr9D,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAA05D,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAA2D,QAAA,GAAwB,CAAxBA,EAAA,KAA0B,GAAAC,QAAA,GAA2B,CAA3BA,EAAA,KAA6B,GAAAC,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAA5D,QAAA,GAAkB,CAAlBA,EAAA,KAEnNjlE,EAAApB,KAAAU,KA9IOA,MAAAgC,aAAsB,CAgJ7BhC,MAAKwpE,WAAaL,CAClBnpE,MAAKqnE,eAAiB+B,CACtBppE,MAAKiM,QAAUF,CACf/L,MAAKypE,YAAchE,CACnBzlE,MAAK0pE,YAAchE,CACnB1lE,MAAK2pE,WAAaN,CAClBrpE,MAAK4pE,cAAgBN,CACrBtpE,MAAK6pE,eAAiBN,CACtBvpE,MAAK8lE,KAAOH,EAnJbhlE,OAAAC,eAAWsmE,EAAA3mE,UAAA,azGo0hBJM,IyGp0hBP,WAEC,MAAOb,MAAKwpE,YzGq0hBN3mE,IyGl0hBP,SAAqBC,GAEpB9C,KAAKwpE,WAAa1mE,CAClB9C,MAAK+lE,wBzGm0hBChlE,WAAY,KACZC,aAAc,MyG9zhBrBL,QAAAC,eAAWsmE,EAAA3mE,UAAA,gBzGo0hBJM,IyGp0hBP,WAEC,MAAOb,MAAKqnE,gBzGq0hBNxkE,IyGl0hBP,SAAwBC,GAEvB9C,KAAKqnE,eAAiBvkE,CACtB9C,MAAK+lE,wBzGm0hBChlE,WAAY,KACZC,aAAc,MyG9zhBrBL,QAAAC,eAAWsmE,EAAA3mE,UAAA,UzGo0hBJM,IyGp0hBP,WAEC,MAAOb,MAAKiM,SzGq0hBNpJ,IyGl0hBP,SAAkBC,GAEjB9C,KAAKiM,QAAUnJ,CACf9C,MAAK+lE,wBzGm0hBChlE,WAAY,KACZC,aAAc,MyG9zhBrBL,QAAAC,eAAWsmE,EAAA3mE,UAAA,azGo0hBJM,IyGp0hBP,WAEC,MAAOb,MAAKypE,azGq0hBN5mE,IyGl0hBP,SAAqBC,GAEpB9C,KAAK8pE,aAAahnE,IzGm0hBZ/B,WAAY,KACZC,aAAc,MyGj0hBdkmE,GAAA3mE,UAAAupE,aAAP,SAAoBhnE,GAEnB9C,KAAKypE,YAAc3mE,CACnB9C,MAAK+lE,sBACL/lE,MAAKgmE,kBAMNrlE,QAAAC,eAAWsmE,EAAA3mE,UAAA,azGk0hBJM,IyGl0hBP,WAEC,MAAOb,MAAK0pE,azGm0hBN7mE,IyGh0hBP,SAAqBC,GAGpB9C,KAAK+pE,aAAajnE,IzGg0hBZ/B,WAAY,KACZC,aAAc,MyG7zhBdkmE,GAAA3mE,UAAAwpE,aAAP,SAAoBjnE,GAEnB9C,KAAK0pE,YAAc5mE,CACnB9C,MAAK+lE,sBACL/lE,MAAKgmE,kBAONrlE,QAAAC,eAAWsmE,EAAA3mE,UAAA,azG6zhBJM,IyG7zhBP,WAEC,MAAOb,MAAK2pE,YzG8zhBN9mE,IyG3zhBP,SAAqBC,GAEpB9C,KAAK2pE,WAAa7mE,CAClB9C,MAAK+lE,wBzG4zhBChlE,WAAY,KACZC,aAAc,MyGvzhBrBL,QAAAC,eAAWsmE,EAAA3mE,UAAA,gBzG6zhBJM,IyG7zhBP,WAEC,MAAOb,MAAK4pE,ezG8zhBN/mE,IyG3zhBP,SAAwBC,GAEvB9C,KAAK4pE,cAAgB9mE,CACrB9C,MAAK+lE,wBzG4zhBChlE,WAAY,KACZC,aAAc,MyGvzhBrBL,QAAAC,eAAWsmE,EAAA3mE,UAAA,OzG6zhBJM,IyG7zhBP,WAEC,MAAOb,MAAK8lE,MzG8zhBNjjE,IyG3zhBP,SAAeC,GAEd9C,KAAK8lE,KAAOhjE,CACZ9C,MAAK+lE,wBzG4zhBChlE,WAAY,KACZC,aAAc,MyG5xhBdkmE,GAAA3mE,UAAA0lE,gBAAP,SAAuB/iE,EAAwBgxB,GAE9C,GAAI/vB,EACJ,IAAIQ,EACJ,IAAIkrB,EACJ,IAAIC,EAEJ,IAAI9wB,EACJ,IAAIqd,EACJ,IAAI5Q,EACJ,IAAIE,EACJ,IAAIE,EACJ,IAAIk8D,EACJ,IAAIC,EAEJ,IAAIlzC,EACJ,IAAIk1C,EAEJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIhK,GAAoB,CAExB,IAAIiG,EACJ,IAAIC,EACJ,IAAIF,GAAoB,CACxB,IAAIiE,GAAyB,CAC7B,IAAIC,GAA2B,CAE/B,IAAI/D,EACJ,IAAIC,EAGJvmE,MAAKgC,aAAe,CzG4xhBd,IyGzxhBFsoE,GAA8B,EAAEhzD,KAAKovD,GAAG1mE,KAAKypE,WAEjD,IAAIv1C,GAAgB,sBAAuB,CAE1C,GAAIsyC,GAA6DtjE,CAGjE,IAAIlD,KAAK6pE,eAAgB,CACxB7pE,KAAKgC,eAAiBhC,KAAK0pE,YAAc,IAAI1pE,KAAKypE,YAAc,EAChEtJ,IAAcngE,KAAK0pE,YAAY1pE,KAAKypE,YAAY,EAEjD,GAAIzpE,KAAK2pE,WAAY,CACpB3pE,KAAKgC,cAAgB,GAAGhC,KAAKypE,YAAc,EAC3CtJ,IAAcngE,KAAKypE,YAAY,EAEhC,GAAIzpE,KAAK4pE,cAAe,CACvB5pE,KAAKgC,cAAgB,GAAGhC,KAAKypE,YAAc,EAC3CtJ,IAAcngE,KAAKypE,YAAY,EAIhC,GAAIzpE,KAAKgC,cAAgBwkE,EAAiB9mB,YAAa,CACtDv7C,EAAUqiE,EAAiBriE,QAAQtD,IAAI2lE,EAAiB1G,YACxDn7D,GAAY6hE,EAAiB7hE,UAAU9D,IAAIb,KAAKgC,aAChD6tB,GAAU22C,EAAiB32C,QAAQhvB,IAAIb,KAAKgC,aAC5C8tB,GAAW02C,EAAiB12C,SAASjvB,IAAIb,KAAKgC,kBACxC,CACNmC,EAAU,GAAIgd,aAAYg/C,EAC1Bx7D,GAAY,GAAIoc,cAAa/gB,KAAKgC,aAAa,EAC/C6tB,GAAU,GAAI9O,cAAa/gB,KAAKgC,aAAa,EAC7C8tB,GAAW,GAAI/O,cAAa/gB,KAAKgC,aAAa,EAE9ChC,MAAKgmE,kBAGN+B,EAAO,CACPC,GAAO,CAGP,IAAIhoE,KAAK2pE,YAAc3pE,KAAKwpE,WAAa,EAAG,CAE3C39D,GAAK,GAAI7L,KAAKiM,OAGd,IAAIjM,KAAK8lE,KAAM,CACdQ,EAAK,CACLC,GAAK,CACLH,IAASv6D,CACTw6D,GAAQ,MAEF,CACNC,EAAK,CACLC,IAAM,CACNH,GAAQ,CACRC,GAAQx6D,EAGTlH,EAAUojE,GAAQ,CAClBpjE,GAAUojE,EAAO,GAAK3B,CACtBzhE,GAAUojE,EAAO,GAAK1B,CACtBx2C,GAAQk4C,GAAQ,CAChBl4C,GAAQk4C,EAAO,GAAKzB,CACpBz2C,GAAQk4C,EAAO,GAAKxB,CACpBz2C,GAASi4C,GAAQ,CACjBj4C,GAASi4C,EAAO,GAAK,CACrBj4C,GAASi4C,EAAO,GAAK,CACrBA,IAAQ,CAERqC,IAAmB,CAEnB,KAAKprE,EAAI,EAAGA,GAAKgB,KAAKypE,cAAezqE,EAAG,CAGvCgrE,EAAkBhrE,EAAEsrE,CACpB7+D,GAAIzL,KAAKwpE,WAAWlyD,KAAK0uB,IAAIgkC,EAC7Br+D,GAAI3L,KAAKwpE,WAAWlyD,KAAKyuB,IAAIikC,EAE7B,IAAIhqE,KAAK8lE,KAAM,CACdM,GAASv6D,CACTw6D,GAAQ16D,MACF,CACNy6D,EAAQz6D,CACR06D,GAAQx6D,EAGT,GAAI7M,GAAKgB,KAAKypE,YAAa,CAC1B9kE,EAAUojE,GAAQpjE,EAAUwhE,EAAa,EACzCxhE,GAAUojE,EAAO,GAAKpjE,EAAUwhE,EAAa,EAC7CxhE,GAAUojE,EAAO,GAAKpjE,EAAUwhE,EAAa,OAEvC,CACNxhE,EAAUojE,GAAQt8D,CAClB9G,GAAUojE,EAAO,GAAK3B,CACtBzhE,GAAUojE,EAAO,GAAK1B,EAGvBx2C,EAAQk4C,GAAQ,CAChBl4C,GAAQk4C,EAAO,GAAKzB,CACpBz2C,GAAQk4C,EAAO,GAAKxB,CACpBz2C,GAASi4C,GAAQ,CACjBj4C,GAASi4C,EAAO,GAAK,CACrBj4C,GAASi4C,EAAO,GAAK,CACrBA,IAAQ,CAER,IAAI/oE,EAAI,EAAG,CAEVmF,EAAQ6jE,KAAUoC,EAAkB,CACpCjmE,GAAQ6jE,KAAUqC,CAClBlmE,GAAQ6jE,KAAUoC,EAGnBA,GAAmB,GAKrB,GAAIpqE,KAAK4pE,eAAiB5pE,KAAKqnE,eAAiB,EAAG,CAElDx7D,EAAI,GAAI7L,KAAKiM,OAEbk6D,GAAaiE,EAAgB,CAE7BC,GAAoBD,CAGpB,IAAIpqE,KAAK8lE,KAAM,CACdQ,GAAM,CACNC,GAAK,CACLH,IAASv6D,CACTw6D,GAAQ,MACF,CACNC,EAAK,CACLC,GAAK,CACLH,GAAQ,CACRC,GAAQx6D,EAGT,GAAI7M,EAAI,EAAG,CACV2F,EAAUojE,GAAQ,CAClBpjE,GAAUojE,EAAO,GAAK3B,CACtBzhE,GAAUojE,EAAO,GAAK1B,CACtBx2C,GAAQk4C,GAAQ,CAChBl4C,GAAQk4C,EAAO,GAAKzB,CACpBz2C,GAAQk4C,EAAO,GAAKxB,CACpBz2C,GAASi4C,GAAQ,CACjBj4C,GAASi4C,EAAO,GAAK,CACrBj4C,GAASi4C,EAAO,GAAK,CACrBA,IAAQ,EAGTqC,GAAmB,CAEnB,KAAKprE,EAAI,EAAGA,GAAKgB,KAAKypE,cAAezqE,EAAG,CAGvCgrE,EAAkBhrE,EAAEsrE,CACpB7+D,GAAIzL,KAAKqnE,eAAe/vD,KAAK0uB,IAAIgkC,EACjCr+D,GAAI3L,KAAKqnE,eAAe/vD,KAAKyuB,IAAIikC,EAEjC,IAAIhqE,KAAK8lE,KAAM,CACdM,GAASv6D,CACTw6D,GAAQ16D,MACF,CACNy6D,EAAQz6D,CACR06D,GAAQx6D,EAGT,GAAI7M,GAAKgB,KAAKypE,YAAa,CAC1B9kE,EAAUojE,GAAQpjE,EAAUwhE,EAAa,EACzCxhE,GAAUojE,EAAO,GAAKpjE,EAAUwhE,EAAa,EAC7CxhE,GAAUojE,EAAO,GAAKpjE,EAAUwhE,EAAa,OACvC,CACNxhE,EAAUojE,GAAQt8D,CAClB9G,GAAUojE,EAAO,GAAK3B,CACtBzhE,GAAUojE,EAAO,GAAK1B,EAGvBx2C,EAAQk4C,GAAQ,CAChBl4C,GAAQk4C,EAAO,GAAKzB,CACpBz2C,GAAQk4C,EAAO,GAAKxB,CACpBz2C,GAASi4C,GAAQ,CACjBj4C,GAASi4C,EAAO,GAAK,CACrBj4C,GAASi4C,EAAO,GAAK,CACrBA,IAAQ,CAER,IAAI/oE,EAAI,EAAG,CAEVmF,EAAQ6jE,KAAUoC,EAAkB,CACpCjmE,GAAQ6jE,KAAUoC,CAClBjmE,GAAQ6jE,KAAUqC,EAGnBD,GAAmB,GAQrBH,EAAMjqE,KAAKqnE,eAAiBrnE,KAAKwpE,UACjCU,GAAcD,EAAGjqE,KAAKiM,OACtBk+D,GAAeD,GAAe,EAAI,EAAIlqE,KAAKiM,QAAQg+D,CAGnD,IAAIjqE,KAAK6pE,eAAgB,CACxB,GAAI9qE,EACJ,IAAImB,EACJ,IAAIwxB,EACJ,IAAIzxB,EACJ,IAAIsqE,GAAYC,EAAYC,EAAgBC,CAE5C,KAAKruD,EAAI,EAAGA,GAAKrc,KAAK0pE,cAAertD,EAAG,CACvCyY,EAAS90B,KAAKwpE,WAAentD,EAAErc,KAAK0pE,aAAc1pE,KAAKwpE,WAAaxpE,KAAKqnE,eACzEx7D,KAAM7L,KAAKiM,QAAQ,GAAMoQ,EAAErc,KAAK0pE,YAAY1pE,KAAKiM,OAEjDk6D,GAAaiE,EAAgB,CAE7B,KAAKprE,EAAI,EAAGA,GAAKgB,KAAKypE,cAAezqE,EAAG,CAEvCgrE,EAAkBhrE,EAAEsrE,CACpB7+D,GAAIqpB,EAAOxd,KAAK0uB,IAAIgkC,EACpBr+D,GAAImpB,EAAOxd,KAAKyuB,IAAIikC,EACpBO,GAAMJ,EAAY7yD,KAAK0uB,IAAIgkC,EAC3BQ,GAAML,EAAY7yD,KAAKyuB,IAAIikC,EAE3B,IAAIhqE,KAAK8lE,KAAM,CACdQ,EAAK,CACLC,IAAMgE,CACNnE,IAASv6D,CACTw6D,GAAQ16D,CACR8+D,GAAUP,CACVQ,GAAUF,MAEJ,CACNlE,GAAMiE,CACNhE,GAAK,CACLH,GAAQz6D,CACR06D,GAAQx6D,CACR4+D,GAAUD,CACVE,GAAUR,EAGX,GAAIlrE,GAAKgB,KAAKypE,YAAa,CAC1B9kE,EAAUojE,GAAQpjE,EAAUwhE,EAC5BxhE,GAAUojE,EAAO,GAAKpjE,EAAUwhE,EAAa,EAC7CxhE,GAAUojE,EAAO,GAAKpjE,EAAUwhE,EAAa,EAC7Ct2C,GAAQk4C,GAAQwC,CAChB16C,GAAQk4C,EAAO,GAAKmC,CACpBr6C,GAAQk4C,EAAO,GAAKyC,CACpB16C,GAASi4C,GAAQyC,CACjB16C,GAASi4C,EAAO,GAAKzB,CACrBx2C,GAASi4C,EAAO,GAAKxB,MACf,CACN5hE,EAAUojE,GAAQt8D,CAClB9G,GAAUojE,EAAO,GAAK3B,CACtBzhE,GAAUojE,EAAO,GAAK1B,CACtBx2C,GAAQk4C,GAAQwC,CAChB16C,GAAQk4C,EAAO,GAAK0C,CACpB56C,GAAQk4C,EAAO,GAAK2C,CACpB56C,GAASi4C,IAASyC,CAClB16C,GAASi4C,EAAO,GAAKzB,CACrBx2C,GAASi4C,EAAO,GAAKxB,EAEtBwB,GAAQ,CAGR,IAAI/oE,EAAI,GAAKqd,EAAI,EAAG,CACnBtd,EAAIqrE,CACJlqE,GAAIkqE,EAAkB,CACtB14C,GAAIxxB,EAAIF,KAAKypE,YAAc,CAC3BxpE,GAAIlB,EAAIiB,KAAKypE,YAAc,CAE3BtlE,GAAQ6jE,KAAUjpE,CAClBoF,GAAQ6jE,KAAU9nE,CAClBiE,GAAQ6jE,KAAUt2C,CAElBvtB,GAAQ6jE,KAAUjpE,CAClBoF,GAAQ6jE,KAAUt2C,CAClBvtB,GAAQ6jE,KAAU/nE,EAGnBmqE,MAMH5D,EAAiBpiE,WAAWD,EAE5BqiE,GAAiBljE,aAAaqB,EAC9B6hE,GAAiBh4C,WAAWqB,EAC5B22C,GAAiB93C,YAAYoB,OAEvB,IAAIoE,GAAgB,kBAAmB,CAC7C,GAAIq0C,GAAiDrlE,CAErD,IAAIslE,GAAqBxoE,KAAK0pE,YAAY1pE,KAAKypE,YAAY,EAAIzpE,KAAKypE,WACpE,IAAI9kE,GAAyB,GAAIoc,cAAaynD,EAAY,EAC1D,IAAInnD,GAAyB,GAAIN,cAAaynD,EAE9CT,GAAO,CAEPC,GAAO,CACP,IAAItzC,GAAU,EACd,KAAKrY,EAAI,EAAGA,GAAKrc,KAAK0pE,cAAertD,EAAG,CAEvCyY,EAAS90B,KAAKwpE,WAAentD,EAAErc,KAAK0pE,aAAc1pE,KAAKwpE,WAAaxpE,KAAKqnE,eACzEx7D,KAAM7L,KAAKiM,QAAQ,GAAMoQ,EAAErc,KAAK0pE,YAAY1pE,KAAKiM,OAEjD,KAAKjN,EAAI,EAAGA,GAAKgB,KAAKypE,cAAezqE,EAAG,CAEvCgrE,EAAkBhrE,EAAEsrE,CACpB7+D,GAAIqpB,EAAOxd,KAAK0uB,IAAIgkC,EACpBr+D,GAAImpB,EAAOxd,KAAKyuB,IAAIikC,EAEpB,IAAIhqE,KAAK8lE,KAAM,CACdM,GAASv6D,CACTw6D,GAAQ16D,MACF,CACNy6D,EAAQz6D,CACR06D,GAAQx6D,EAGT,GAAI7M,EAAI,EAAG,CAEV2F,EAAUojE,KAAUt8D,CACpB9G,GAAUojE,KAAU3B,CACpBzhE,GAAUojE,KAAU1B,CAEpBhlD,GAAU2mD,KAAU,CAGpB,IAAI3rD,EAAI,EAAG,CACV,GAAIsuD,GAAetuD,GAAK,EAAI,GAAK,GAAGrc,KAAKypE,YAAYzqE,GAAK,GAAGA,GAAK,EAAIgB,KAAKypE,YAAY,EACvF9kE,GAAUojE,GAAQpjE,EAAUojE,KAAS4C,EACrChmE,GAAUojE,GAAQpjE,EAAUojE,KAAS4C,EACrChmE,GAAUojE,GAAQpjE,EAAUojE,KAAS4C,EAErChmE,GAAUojE,KAAUt8D,CACpB9G,GAAUojE,KAAU3B,CACpBzhE,GAAUojE,KAAU1B,CAEpBhlD,GAAU2mD,KAAU,GAMtB,GAAIhpE,EAAIgB,KAAKypE,YAAa,CACzB9kE,EAAUojE,KAAUt8D,CACpB9G,GAAUojE,KAAU3B,CACpBzhE,GAAUojE,KAAU1B,IAMvBkC,EAAajlE,aAAaqB,EAC1B4jE,GAAannD,aAAaC,IAOrB6lD,GAAA3mE,UAAAwmE,WAAP,SAAkB7jE,EAAwBgxB,GAEzC,GAAIl1B,EACJ,IAAIqd,EACJ,IAAI5Q,EACJ,IAAIE,EACJ,IAAIq+D,EACJ,IAAI3lE,EAEJ,IAAI6vB,GAAgB,sBAAuB,CAE1C,GAAIsyC,GAA6DtjE,CAGjE,IAAIsjE,EAAiBniE,KAAOrE,KAAKgC,cAAgBwkE,EAAiB9mB,YAAa,CAC9Er7C,EAAMmiE,EAAiBniE,IAAIxD,IAAIb,KAAKgC,kBAC9B,CACNqC,EAAM,GAAI0c,cAAa/gB,KAAKgC,aAAa,GzGouhBjC,GyGhuhBLsoE,GAA8B,EAAEhzD,KAAKovD,GAAG1mE,KAAKypE,WzGkuhBxC,IyG/thBL5vD,GAAe,CAGnB,IAAI7Z,KAAK2pE,WAAY,CAEpBtlE,EAAIwV,KAAW,GAAI7Z,KAAKmC,OACxBkC,GAAIwV,KAAW,GAAI7Z,KAAKoC,OAExB,KAAKpD,EAAI,EAAGA,GAAKgB,KAAKypE,cAAezqE,EAAG,CAEvCgrE,EAAkBhrE,EAAEsrE,CACpB7+D,GAAI,GAAM,IAAM6L,KAAK0uB,IAAIgkC,EACzBr+D,GAAI,GAAM,GAAI2L,KAAKyuB,IAAIikC,EAEvB3lE,GAAIwV,KAAWpO,EAAEzL,KAAKmC,OACtBkC,GAAIwV,KAAWlO,EAAE3L,KAAKoC,SAKxB,GAAIpC,KAAK4pE,cAAe,CAEvBvlE,EAAIwV,KAAW,GAAI7Z,KAAKmC,OACxBkC,GAAIwV,KAAW,GAAI7Z,KAAKoC,OAExB,KAAKpD,EAAI,EAAGA,GAAKgB,KAAKypE,cAAezqE,EAAG,CAEvCgrE,EAAkBhrE,EAAEsrE,CACpB7+D,GAAI,GAAM,GAAI6L,KAAK0uB,IAAIgkC,EACvBr+D,GAAI,GAAM,GAAI2L,KAAKyuB,IAAIikC,EAEvB3lE,GAAIwV,KAAWpO,EAAEzL,KAAKmC,OACtBkC,GAAIwV,KAAWlO,EAAE3L,KAAKoC,SAKxB,GAAIpC,KAAK6pE,eAAgB,CACxB,IAAKxtD,EAAI,EAAGA,GAAKrc,KAAK0pE,cAAertD,EAAG,CACvC,IAAKrd,EAAI,EAAGA,GAAKgB,KAAKypE,cAAezqE,EAAG,CAEvCqF,EAAIwV,KAAa7a,EAAEgB,KAAKypE,YAAczpE,KAAKmC,OAC3CkC,GAAIwV,KAAawC,EAAErc,KAAK0pE,YAAc1pE,KAAKoC,UAM9CokE,EAAiBzjE,OAAOsB,OAElB,IAAI6vB,GAAgB,kBAAmB,GAIhD,OAAAgzC,IA5oBsC3B,EA8oBL9lE,GAAAJ,QAAxB6nE,IzGothBNF,iDAAiD,mDAAmD4D,mDAAmD,SAASrsE,EAAQkB,EAAOJ,GAClL,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0G52iBtB,IAAOklE,GAAmBhnE,EAAY,iD1Gk3iBtC,I0G72iBMssE,GAAoB,SAAAnqE,GAASX,EAA7B8qE,EAAoBnqE,EAkBzB,SAlBKmqE,GAkBO77D,EAAoBjD,EAAqB05D,EAAsBC,EAAsBC,EAAoBmF,GAAzG,GAAA97D,QAAA,GAAkB,CAAlBA,EAAA,IAAoB,GAAAjD,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAA05D,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,KAAoB,GAAAmF,QAAA,GAA2B,CAA3BA,EAAA,MAGpHpqE,EAAApB,KAAAU,KAEAA,MAAK4lE,WAAaH,CAClBzlE,MAAK6lE,WAAaH,CAClB1lE,MAAK8lE,KAAOH,CACZ3lE,MAAK6N,OAASmB,CACdhP,MAAKiM,QAAUF,CACf/L,MAAK+qE,aAAeD,EAOrBnqE,OAAAC,eAAWiqE,EAAAtqE,UAAA,a1Gw2iBJM,I0Gx2iBP,WAEC,MAAOb,MAAK4lE,Y1Gy2iBN/iE,I0Gt2iBP,SAAqBC,GAGpB9C,KAAK4lE,WAAa9iE,CAElB9C,MAAK+lE,sBACL/lE,MAAKgmE,mB1Gq2iBCjlE,WAAY,KACZC,aAAc,M0G91iBrBL,QAAAC,eAAWiqE,EAAAtqE,UAAA,a1Gq2iBJM,I0Gr2iBP,WAEC,MAAOb,MAAK6lE,Y1Gs2iBNhjE,I0Gn2iBP,SAAqBC,GAGpB9C,KAAK6lE,WAAa/iE,CAElB9C,MAAK+lE,sBACL/lE,MAAKgmE,mB1Gk2iBCjlE,WAAY,KACZC,aAAc,M0G51iBrBL,QAAAC,eAAWiqE,EAAAtqE,UAAA,O1Gk2iBJM,I0Gl2iBP,WAEC,MAAOb,MAAK8lE,M1Gm2iBNjjE,I0Gh2iBP,SAAeC,GAEd9C,KAAK8lE,KAAOhjE,CAEZ9C,MAAK+lE,wB1Gg2iBChlE,WAAY,KACZC,aAAc,M0G31iBrBL,QAAAC,eAAWiqE,EAAAtqE,UAAA,e1Gi2iBJM,I0Gj2iBP,WAEC,MAAOb,MAAK+qE,c1Gk2iBNloE,I0G/1iBP,SAAuBC,GAEtB9C,KAAK+qE,aAAejoE,CAEpB9C,MAAK+lE,wB1G+1iBChlE,WAAY,KACZC,aAAc,M0G11iBrBL,QAAAC,eAAWiqE,EAAAtqE,UAAA,S1Gg2iBJM,I0Gh2iBP,WAEC,MAAOb,MAAK6N,Q1Gi2iBNhL,I0G91iBP,SAAiBC,GAEhB9C,KAAK6N,OAAS/K,CAEd9C,MAAK+lE,wB1G81iBChlE,WAAY,KACZC,aAAc,M0Gz1iBrBL,QAAAC,eAAWiqE,EAAAtqE,UAAA,U1G+1iBJM,I0G/1iBP,WAEC,MAAOb,MAAKiM,S1Gg2iBNpJ,I0G71iBP,SAAkBC,GAEjB9C,KAAKiM,QAAUnJ,CAEf9C,MAAK+lE,wB1G61iBChlE,WAAY,KACZC,aAAc,M0Gx1iBd6pE,GAAAtqE,UAAA0lE,gBAAP,SAAuB/iE,EAAwBgxB,GAE9C,GAAI/vB,EACJ,IAAIsH,GAAUE,CACd,IAAIw0D,EACJ,IAAI6K,EACJ,IAAIC,GAAYjrE,KAAK4lE,WAAa,CAElC,IAAImC,GAAaC,CAEjB,IAAIkD,EACJ,IAAIC,EAEJ,IAAIj3C,GAAgB,sBAAuB,CAE1C,GAAIsyC,GAA6DtjE,CAEjE,IAAIw8C,IAAsB1/C,KAAK6lE,WAAa,GAAGoF,CAC/C,IAAItmE,EACJ,IAAIkrB,EACJ,IAAIC,EAEJ,IAAI9vB,KAAK+qE,aACRrrB,GAAe,CAEhBygB,GAAangE,KAAK6lE,WAAW7lE,KAAK4lE,WAAW,CAE7C,IAAI5lE,KAAK+qE,aACR5K,GAAc,CAEf,IAAIqG,EAAiBriE,SAAW,MAAQg8D,GAAcqG,EAAiBriE,QAAQ5E,OAAQ,CACtF4E,EAAUqiE,EAAiBriE,QAAQtD,IAAI2lE,EAAiB1G,iBAClD,CACN37D,EAAU,GAAIgd,aAAYg/C,EAE1BngE,MAAKgmE,kBAGN,GAAItmB,GAAe8mB,EAAiB9mB,YAAa,CAChD/6C,EAAY6hE,EAAiB7hE,UAAU9D,IAAI6+C,EAC3C7vB,GAAU22C,EAAiB32C,QAAQhvB,IAAI6+C,EACvC5vB,GAAW02C,EAAiB12C,SAASjvB,IAAI6+C,OACnC,CACN/6C,EAAY,GAAIoc,cAAa2+B,EAAY,EACzC7vB,GAAU,GAAI9O,cAAa2+B,EAAY,EACvC5vB,GAAW,GAAI/O,cAAa2+B,EAAY,EAExC1/C,MAAKgmE,kBAGNgC,EAAO,CAEPD,GAAO,CAEP,KAAKoD,EAAK,EAAGA,GAAMnrE,KAAK6lE,aAAcsF,EAAI,CAEzC,IAAKD,EAAK,EAAGA,GAAMlrE,KAAK4lE,aAAcsF,EAAI,CACzCz/D,GAAKy/D,EAAGlrE,KAAK4lE,WAAa,IAAI5lE,KAAK6N,MACnClC,IAAKw/D,EAAGnrE,KAAK6lE,WAAa,IAAI7lE,KAAKiM,OAEnCtH,GAAUojE,GAAQt8D,CAClB,IAAIzL,KAAK8lE,KAAM,CACdnhE,EAAUojE,EAAO,GAAK,CACtBpjE,GAAUojE,EAAO,GAAKp8D,MAChB,CACNhH,EAAUojE,EAAO,GAAKp8D,CACtBhH,GAAUojE,EAAO,GAAK,EAGvBl4C,EAAQk4C,GAAQ,CAEhB,IAAI/nE,KAAK8lE,KAAM,CACdj2C,EAAQk4C,EAAO,GAAK,CACpBl4C,GAAQk4C,EAAO,GAAK,MACd,CACNl4C,EAAQk4C,EAAO,GAAK,CACpBl4C,GAAQk4C,EAAO,IAAM,EAGtBj4C,EAASi4C,GAAQ,CACjBj4C,GAASi4C,EAAO,GAAK,CACrBj4C,GAASi4C,EAAO,GAAK,CAErBA,IAAQ,CAGR,IAAI/nE,KAAK+qE,aAAc,CAEtB,IAAK,GAAI/rE,GAAW+oE,EAAM/oE,EAAI+oE,EAAO,IAAK/oE,EAAG,CAC5C2F,EAAU3F,GAAK2F,EAAU3F,EAAI,EAC7B6wB,GAAQ7wB,IAAM6wB,EAAQ7wB,EAAI,EAC1B8wB,GAAS9wB,IAAM8wB,EAAS9wB,EAAI,GAG7B+oE,GAAQ,EAIT,GAAImD,GAAMlrE,KAAK4lE,YAAcuF,GAAMnrE,KAAK6lE,WAAY,CAEnDmF,EAAOE,EAAKC,EAAGF,CACf,IAAIG,GAAcprE,KAAK+qE,aAAc,EAAI,CAEzC5mE,GAAQ6jE,KAAUgD,EAAKI,CACvBjnE,GAAQ6jE,MAAWgD,EAAOC,GAAIG,CAC9BjnE,GAAQ6jE,MAAWgD,EAAOC,EAAK,GAAGG,CAClCjnE,GAAQ6jE,KAAUgD,EAAKI,CACvBjnE,GAAQ6jE,MAAWgD,EAAOC,EAAK,GAAGG,CAClCjnE,GAAQ6jE,MAAWgD,EAAO,GAAGI,CAE7B,IAAIprE,KAAK+qE,aAAc,CAEtB5mE,EAAQ6jE,MAAWgD,EAAOC,EAAK,GAAGG,EAAO,CACzCjnE,GAAQ6jE,MAAWgD,EAAOC,GAAIG,EAAO,CACrCjnE,GAAQ6jE,KAAUgD,EAAKI,EAAO,CAC9BjnE,GAAQ6jE,MAAWgD,EAAO,GAAGI,EAAO,CACpCjnE,GAAQ6jE,MAAWgD,EAAOC,EAAK,GAAGG,EAAO,CACzCjnE,GAAQ6jE,KAAUgD,EAAKI,EAAO,KAOlC5E,EAAiBpiE,WAAWD,EAE5BqiE,GAAiBljE,aAAaqB,EAC9B6hE,GAAiBh4C,WAAWqB,EAC5B22C,GAAiB93C,YAAYoB,OAEvB,IAAIoE,GAAgB,kBAAmB,CAC7C,GAAIq0C,GAAiDrlE,CAErD,IAAIslE,GAAsBxoE,KAAK6lE,WAAa,EAAKoF,CACjD,IAAItmE,EACJ,IAAI0c,EAEJ,IAAI4mD,GAAYjoE,KAAK6N,OAAO,CAC5B,IAAIq6D,GAAYloE,KAAKiM,QAAQ,CAE7BtH,GAAY,GAAIoc,cAAaynD,EAAY,EACzCnnD,GAAY,GAAIN,cAAaynD,EAE7BR,GAAO,CAEPD,GAAO,CAEP,KAAKoD,EAAK,EAAGA,GAAMnrE,KAAK6lE,aAAcsF,EAAI,CACzCxmE,EAAUojE,MAAWE,CACrBtjE,GAAUojE,KAAU,CACpBpjE,GAAUojE,KAAUoD,EAAGnrE,KAAKiM,QAAUi8D,CAEtCvjE,GAAUojE,KAAUE,CACpBtjE,GAAUojE,KAAU,CACpBpjE,GAAUojE,KAAUoD,EAAGnrE,KAAKiM,QAAUi8D,CAEtC7mD,GAAU2mD,KAAU,EAIrB,IAAKkD,EAAK,EAAGA,GAAMlrE,KAAK4lE,aAAcsF,EAAI,CACzCvmE,EAAUojE,KAAUmD,EAAGlrE,KAAK6N,OAASo6D,CACrCtjE,GAAUojE,KAAU,CACpBpjE,GAAUojE,MAAWG,CAErBvjE,GAAUojE,KAAUmD,EAAGlrE,KAAK6N,OAASo6D,CACrCtjE,GAAUojE,KAAU,CACpBpjE,GAAUojE,KAAUG,CAEpB7mD,GAAU2mD,KAAU,EAIrBO,EAAajlE,aAAaqB,EAC1B4jE,GAAannD,aAAaC,IAOrBwpD,GAAAtqE,UAAAwmE,WAAP,SAAkB7jE,EAAwBgxB,GAEzC,GAAI7vB,EACJ,IAAIq7C,EAEJ,IAAIxrB,GAAgB,sBAAuB,CAE1CwrB,GAAgB1/C,KAAK6lE,WAAa,IAAM7lE,KAAK4lE,WAAa,EAE1D,IAAI5lE,KAAK+qE,aACRrrB,GAAe,CAEhB,IAAI8mB,GAA6DtjE,CAEjE,IAAIsjE,EAAiBniE,KAAOq7C,GAAe8mB,EAAiB9mB,YAAa,CACxEr7C,EAAMmiE,EAAiBniE,IAAIxD,IAAI6+C,OACzB,CACNr7C,EAAM,GAAI0c,cAAa2+B,EAAY,EACnC1/C,MAAK+lE,uBAGN,GAAIlsD,GAAe,CAEnB,KAAK,GAAIsxD,GAAY,EAAGA,GAAMnrE,KAAK6lE,aAAcsF,EAAI,CAEpD,IAAK,GAAID,GAAY,EAAGA,GAAMlrE,KAAK4lE,aAAcsF,EAAI,CACpD7mE,EAAIwV,GAAUqxD,EAAGlrE,KAAK4lE,WAAY5lE,KAAKmC,OACvCkC,GAAIwV,EAAQ,IAAM,EAAIsxD,EAAGnrE,KAAK6lE,YAAY7lE,KAAKoC,OAC/CyX,IAAS,CAET,IAAI7Z,KAAK+qE,aAAc,CACtB1mE,EAAIwV,GAAUqxD,EAAGlrE,KAAK4lE,WAAY5lE,KAAKmC,OACvCkC,GAAIwV,EAAM,IAAM,EAAIsxD,EAAGnrE,KAAK6lE,YAAY7lE,KAAKoC,OAC7CyX,IAAS,IAKZ2sD,EAAiBzjE,OAAOsB,OAGlB,IAAI6vB,GAAgB,kBAAmB,GAIhD,OAAA22C,IAtWmCtF,EAwWnC9lE,GAA8BJ,QAArBwrE,I1GuyiBN7D,iDAAiD,mDAAmDqE,qDAAqD,SAAS9sE,EAAQkB,EAAOJ,GACpL,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD;QAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2G5pjBtB,IAAO6mE,GAAuB3oE,EAAW,qD3GkqjBzC,I2G7pjBM+sE,GAAsB,SAAA5qE,GAASX,EAA/BurE,EAAsB5qE,EAiD3B,SAjDK4qE,GAiDOx2C,EAAqBy2C,EAAmB5F,GAAxC,GAAA7wC,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAAy2C,QAAA,GAAiB,CAAjBA,EAAA,GAAmB,GAAA5F,QAAA,GAAkB,CAAlBA,EAAA,KAEnDjlE,EAAApB,KAAAU,KAAM80B,EAAQ,EAAG,EAAGy2C,EAAO,EAAG,KAAM,MAAO,MAAO5F,GA7CnDhlE,OAAAC,eAAW0qE,EAAA/qE,UAAA,U3GyqjBJM,I2GzqjBP,WAEC,MAAOb,MAAKqnE,gB3G0qjBNxkE,I2GvqjBP,SAAkBC,GAEjB9C,KAAKqnE,eAAiBvkE,CACtB9C,MAAK+lE,wB3GwqjBChlE,WAAY,KACZC,aAAc,M2GnqjBrBL,QAAAC,eAAW0qE,EAAA/qE,UAAA,S3GyqjBJM,I2GzqjBP,WAEC,MAAOb,MAAKypE,a3G0qjBN5mE,I2GvqjBP,SAAiBC,GAEhB9C,KAAK8pE,aAAahnE,I3GwqjBZ/B,WAAY,KACZC,aAAc,M2GnqjBrBL,QAAAC,eAAW0qE,EAAA/qE,UAAA,gB3GyqjBJM,I2GzqjBP,WAEC,MAAOb,MAAK0pE,a3G0qjBN7mE,I2GvqjBP,SAAwBC,GAEvB9C,KAAK+pE,aAAajnE,I3GwqjBZ/B,WAAY,KACZC,aAAc,M2G5pjBtB,OAAAsqE,IArDqCpE,EAuDrCznE,GAAgCJ,QAAvBisE,I3GgqjBNhE,qDAAqD,uDAAuDN,kDAAkD,SAASzoE,EAAQkB,EAAOJ,GACzL,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4GnujBtB,IAAOmrE,GAAgBjtE,EAAa,8CACpC,IAAOigB,GAAmBjgB,EAAY,6CAGtC,IAAO+e,GAAQ/e,EAAe,mCAE9B,IAAOsvB,GAAmBtvB,EAAY,8CACtC,IAAOuiB,GAAeviB,EAAa,0CACnC,IAAOk2C,GAAIl2C,EAAgB,mCAE3B,IAAO4mE,GAAU5mE,EAAc,wC5GqujB/B,I4GhujBMgnE,GAAmB,SAAA7kE,GAASX,EAA5BwlE,EAAmB7kE,EA0GxB,SA1GK6kE,GA0GOvgE,EAA8BkvB,GAA9B,GAAAlvB,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAkvB,QAAA,GAA2C,CAA3CA,EAAA,sBAEzCxzB,EAAApB,KAAAU,KAxGMA,MAAAyrE,WAAqB,IACrBzrE,MAAA0rE,SAAmB,IACnB1rE,MAAAmC,QAAiB,CACjBnC,MAAAoC,QAAiB,CAMhBpC,MAAA2rE,mBAA6B,IAiGpC3rE,MAAKu1C,UAAY,GAAIj4B,EACrBtd,MAAKokB,UAAYpf,CACjBhF,MAAK4rE,cAAgB13C,EA7FtBvzB,OAAAC,eAAW2kE,EAAAhlE,UAAA,a5GqujBJM,I4GrujBP,WAEC,MAAO0kE,GAAoBrkE,W5GsujBrBH,WAAY,KACZC,aAAc,M4GjujBrBL,QAAAC,eAAW2kE,EAAAhlE,UAAA,gB5GuujBJM,I4GvujBP,WAEC,MAAOb,MAAK4rE,e5GwujBN/oE,I4GrujBP,SAAwBC,GAEvB,GAAI9C,KAAK4rE,eAAiB9oE,EACzB,MAED9C,MAAK4rE,cAAgB9oE,CAErB9C,MAAK6rE,0B5GoujBC9qE,WAAY,KACZC,aAAc,M4GlujBrBL,QAAAC,eAAW2kE,EAAAhlE,UAAA,Y5GqujBJM,I4GrujBP,WAECb,KAAKoR,YAEL,OAAOpR,MAAKu1C,W5GqujBNx0C,WAAY,KACZC,aAAc,M4GhujBrBL,QAAAC,eAAW2kE,EAAAhlE,UAAA,Y5GsujBJM,I4GtujBP,WAEC,MAAOb,MAAKokB,W5GuujBNvhB,I4GpujBP,SAAoBC,GAEnB,GAAIA,GAAS9C,KAAKokB,UACjB,MAEDpkB,MAAKokB,UAAYthB,CAEjB,IAAImI,GAAajL,KAAKolE,UAAU7lE,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,EAAKjM,IACvBgB,KAAKolE,UAAUpmE,GAAIgG,SAAWhF,KAAKokB,W5GmujBtCrjB,WAAY,KACZC,aAAc,M4GjujBrBL,QAAAC,eAAW2kE,EAAAhlE,UAAA,U5GoujBJM,I4GpujBP,WAEC,MAAOb,MAAKmC,S5GqujBNU,I4GlujBP,SAAkBC,GAEjB,GAAI9C,KAAKmC,QAAUW,EAClB,MAED9C,MAAKmC,QAAUW,CAEf9C,MAAKgmE,mB5GiujBCjlE,WAAY,KACZC,aAAc,M4G9tjBrBL,QAAAC,eAAW2kE,EAAAhlE,UAAA,U5GiujBJM,I4GjujBP,WAEC,MAAOb,MAAKoC,S5GkujBNS,I4G/tjBP,SAAkBC,GAEjB,GAAI9C,KAAKoC,QAAUU,EAClB,MAED9C,MAAKoC,QAAUU,CAEf9C,MAAKgmE,mB5G8tjBCjlE,WAAY,KACZC,aAAc,M4GzsjBdukE,GAAAhlE,UAAA0lE,gBAAP,SAAuB/iE,EAAwBgxB,GAE9C,KAAM,IAAI1V,GAOJ+mD,GAAAhlE,UAAAwmE,WAAP,SAAkB7jE,EAAwBgxB,GAEzC,KAAM,IAAI1V,GAMJ+mD,GAAAhlE,UAAAsrE,uBAAP,WAEC7rE,KAAK2rE,mBAAqB,IAC1B3rE,MAAKyrE,WAAa,IAClBzrE,MAAK0rE,SAAW,KAMVnG,GAAAhlE,UAAAwlE,qBAAP,WAEC/lE,KAAKyrE,WAAa,KAMZlG,GAAAhlE,UAAAylE,gBAAP,WAEChmE,KAAK0rE,SAAW,KAMTnG,GAAAhlE,UAAAurE,mBAAR,WAGC,GAAI9rE,KAAK8F,aACR9F,KAAKu1C,UAAU33B,kBAAkB5d,KAAK8F,aAEvC,IAAI9F,KAAK4rE,eAAiB,sBAAuB,CAChD,GAAIpF,GAAuC,GAAI34C,GAAoB,GAAI29C,GACvEhF,GAAiB72C,kBAAoB,KACrC62C,GAAiB52C,mBAAqB,KACtC42C,GAAiBtiE,cAAgB,KACjClE,MAAKu1C,UAAU/3B,eAAegpD,EAC9BxmE,MAAK8F,aAAe0gE,MACd,IAAIxmE,KAAK4rE,eAAiB,kBAAmB,CACnD5rE,KAAKu1C,UAAU/3B,eAAexd,KAAK8F,aAAe,GAAIgb,GAAgB,GAAI0qD,KAG3ExrE,KAAK2rE,mBAAqB,MAOnBpG,GAAAhlE,UAAAwrE,eAAR,WAEC/rE,KAAKimE,gBAAgBjmE,KAAK8F,aAAc9F,KAAK4rE,cAE7C5rE,MAAKyrE,WAAa,MAMXlG,GAAAhlE,UAAAyrE,UAAR,WAEChsE,KAAK+mE,WAAW/mE,KAAK8F,aAAc9F,KAAK4rE,cAExC5rE,MAAK0rE,SAAW,MAGVnG,GAAAhlE,UAAA6Q,WAAP,WAEC,GAAIpR,KAAK2rE,mBACR3rE,KAAK8rE,oBAEN,IAAI9rE,KAAKyrE,WACRzrE,KAAK+rE,gBAEN,IAAI/rE,KAAK0rE,SACR1rE,KAAKgsE,YAIAzG,GAAAhlE,UAAA8kE,eAAP,WAEC,GAAI4G,GAAY,GAAIx3B,GAAKz0C,KAAKu1C,UAAWv1C,KAAKokB,UAC9C6nD,GAAK96D,eAAiBnR,IAEtB,OAAOisE,GA3NM1G,GAAArkE,UAAmB,yBAsOlC,OAAAqkE,IAxOkCJ,EA0OL1lE,GAAAJ,QAApBkmE,I5G8qjBN2G,8CAA8C9qE,UAAUmf,6CAA6Cnf,UAAUgc,mCAAmC,mCAAmCsD,0CAA0C,0CAA0CkN,8CAA8C,8CAA8C2mB,mCAAmC,mCAAmC2wB,wCAAwC,0CAA0ChwC,oDAAoD,SAAS32B,EAAQkB,EAAOJ,GAC5kB,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6Gv6jBtB,IAAOklE,GAAmBhnE,EAAY,iD7G66jBtC,I6Gx6jBMi2B,GAAqB,SAAA9zB,GAASX,EAA9By0B,EAAqB9zB,EA6E1B,SA7EK8zB,GA6EOM,EAAoB2wC,EAAuBC,EAAuBC,GAAlE,GAAA7wC,QAAA,GAAkB,CAAlBA,EAAA,GAAoB,GAAA2wC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,KAE7EjlE,EAAApB,KAAAU,KAEAA,MAAK00B,QAAUI,CACf90B,MAAK4lE,WAAaH,CAClBzlE,MAAK6lE,WAAaH,CAClB1lE,MAAK8lE,KAAOH,EA1EbhlE,OAAAC,eAAW4zB,EAAAj0B,UAAA,U7Gu7jBJM,I6Gv7jBP,WAEC,MAAOb,MAAK00B,S7Gw7jBN7xB,I6Gr7jBP,SAAkBC,GAEjB9C,KAAK00B,QAAU5xB,CAEf9C,MAAK+lE,wB7Gq7jBChlE,WAAY,KACZC,aAAc,M6Gh7jBrBL,QAAAC,eAAW4zB,EAAAj0B,UAAA,a7Gs7jBJM,I6Gt7jBP,WAEC,MAAOb,MAAK4lE,Y7Gu7jBN/iE,I6Gp7jBP,SAAqBC,GAEpB9C,KAAK4lE,WAAa9iE,CAElB9C,MAAK+lE,sBACL/lE,MAAKgmE,mB7Go7jBCjlE,WAAY,KACZC,aAAc,M6G/6jBrBL,QAAAC,eAAW4zB,EAAAj0B,UAAA,a7Gq7jBJM,I6Gr7jBP,WAEC,MAAOb,MAAK6lE,Y7Gs7jBNhjE,I6Gn7jBP,SAAqBC,GAEpB9C,KAAK6lE,WAAa/iE,CAElB9C,MAAK+lE,sBACL/lE,MAAKgmE,mB7Gm7jBCjlE,WAAY,KACZC,aAAc,M6G96jBrBL,QAAAC,eAAW4zB,EAAAj0B,UAAA,O7Go7jBJM,I6Gp7jBP,WAEC,MAAOb,MAAK8lE,M7Gq7jBNjjE,I6Gl7jBP,SAAeC,GAEd9C,KAAK8lE,KAAOhjE,CAEZ9C,MAAK+lE,wB7Gk7jBChlE,WAAY,KACZC,aAAc,M6G35jBdwzB,GAAAj0B,UAAA0lE,gBAAP,SAAuB/iE,EAAwBgxB,GAE9C,GAAI/vB,EACJ,IAAIQ,EACJ,IAAIkrB,EACJ,IAAIC,EAEJ,IAAI9wB,EACJ,IAAIqd,EACJ,IAAI0rD,GAAaC,CAEjB,IAAI5B,EACJ,IAAIC,EACJ,IAAI3mB,EAGJ,IAAIxrB,GAAgB,sBAAuB,CAE1C,GAAIsyC,GAA6DtjE,CAEjEw8C,IAAe1/C,KAAK6lE,WAAa,IAAI7lE,KAAK4lE,WAAa,EAEvD,IAAIlmB,GAAe8mB,EAAiB9mB,aAAe8mB,EAAiBriE,SAAW,KAAM,CACpFA,EAAUqiE,EAAiBriE,QAAQtD,IAAI2lE,EAAiB1G,YACxDn7D,GAAY6hE,EAAiB7hE,UAAU9D,IAAI6+C,EAC3C7vB,GAAU22C,EAAiB32C,QAAQhvB,IAAI6+C,EACvC5vB,GAAW02C,EAAiB12C,SAASjvB,IAAI6+C,OACnC,CACNv7C,EAAU,GAAIgd,cAAanhB,KAAK6lE,WAAa,GAAG7lE,KAAK4lE,WAAW,EAChEjhE,GAAY,GAAIoc,cAAa2+B,EAAY,EACzC7vB,GAAU,GAAI9O,cAAa2+B,EAAY,EACvC5vB,GAAW,GAAI/O,cAAa2+B,EAAY,EAExC1/C,MAAKgmE,kBAGN+B,EAAO,CACPC,GAAO,CAEP,IAAI7B,EACJ,IAAIG,EACJ,IAAIC,EAEJ,KAAKlqD,EAAI,EAAGA,GAAKrc,KAAK6lE,aAAcxpD,EAAG,CAEtC8pD,EAAa4B,CAEb,IAAItB,GAAkBnvD,KAAKovD,GAAGrqD,EAAErc,KAAK6lE,UACrC,IAAIh6D,IAAY7L,KAAK00B,QAAQpd,KAAK0uB,IAAIygC,EACtC,IAAIE,GAAoB3mE,KAAK00B,QAAQpd,KAAKyuB,IAAI0gC,EAE9C,KAAKznE,EAAI,EAAGA,GAAKgB,KAAK4lE,aAAc5mE,EAAG,CACtC,GAAI4nE,GAAkB,EAAEtvD,KAAKovD,GAAG1nE,EAAEgB,KAAK4lE,UACvC,IAAIn6D,GAAWk7D,EAAWrvD,KAAK0uB,IAAI4gC,EACnC,IAAIj7D,GAAWg7D,EAAWrvD,KAAKyuB,IAAI6gC,EACnC,IAAIC,GAAiB,EAAEvvD,KAAKC,KAAK9L,EAAEA,EAAIE,EAAEA,EAAIE,EAAEA,EAC/C,IAAIi7D,GAAgBxvD,KAAKC,KAAK5L,EAAEA,EAAIF,EAAEA,EAEtC,IAAIzL,KAAK8lE,KAAM,CAEdQ,EAAK,CACLC,GAAKO,EAAS,KAAMr7D,EAAEq7D,EAAS,CAC/BV,IAASv6D,CACTw6D,GAAQ16D,MAEF,CACN26D,EAAKQ,EAAS,KAAMr7D,EAAEq7D,EAAS,CAC/BP,GAAK,CACLH,GAAQz6D,CACR06D,GAAQx6D,EAGT,GAAI7M,GAAKgB,KAAK4lE,WAAY,CACzBjhE,EAAUojE,GAAQpjE,EAAUwhE,EAC5BxhE,GAAUojE,EAAK,GAAKpjE,EAAUwhE,EAAa,EAC3CxhE,GAAUojE,EAAK,GAAKpjE,EAAUwhE,EAAa,EAC3Ct2C,GAAQk4C,GAAQl4C,EAAQs2C,GAAe16D,EAAEo7D,EAAS,EAClDh3C,GAAQk4C,EAAK,GAAKl4C,EAAQs2C,EAAa,GAAOC,EAAMS,EAAS,EAC7Dh3C,GAAQk4C,EAAK,GAAKl4C,EAAQs2C,EAAa,GAAME,EAAMQ,EAAS,EAC5D/2C,GAASi4C,GAAQjB,EAAS,MAAOn7D,EAAEm7D,EAAS,CAC5Ch3C,GAASi4C,EAAK,GAAKzB,CACnBx2C,GAASi4C,EAAK,GAAKxB,MAEb,CAEN5hE,EAAUojE,GAAQt8D,CAClB9G,GAAUojE,EAAK,GAAK3B,CACpBzhE,GAAUojE,EAAK,GAAK1B,CACpBx2C,GAAQk4C,GAAQt8D,EAAEo7D,CAClBh3C,GAAQk4C,EAAK,GAAK3B,EAAMS,CACxBh3C,GAAQk4C,EAAK,GAAK1B,EAAMQ,CACxB/2C,GAASi4C,GAAQjB,EAAS,MAAOn7D,EAAEm7D,EAAS,CAC5Ch3C,GAASi4C,EAAK,GAAKzB,CACnBx2C,GAASi4C,EAAK,GAAKxB,EAGpB,GAAIvnE,EAAI,GAAKqd,EAAI,EAAG,CAEnB,GAAItd,IAAYiB,KAAK4lE,WAAa,GAAGvpD,EAAIrd,CACzC,IAAIkB,IAAYF,KAAK4lE,WAAa,GAAGvpD,EAAIrd,EAAI,CAC7C,IAAI0yB,IAAY1xB,KAAK4lE,WAAa,IAAIvpD,EAAI,GAAKrd,EAAI,CACnD,IAAIiB,IAAYD,KAAK4lE,WAAa,IAAIvpD,EAAI,GAAKrd,CAE/C,IAAIqd,GAAKrc,KAAK6lE,WAAY,CAEzBlhE,EAAUojE,GAAQpjE,EAAUwhE,EAC5BxhE,GAAUojE,EAAO,GAAKpjE,EAAUwhE,EAAa,EAC7CxhE,GAAUojE,EAAO,GAAKpjE,EAAUwhE,EAAa,EAE7ChiE,GAAQ6jE,KAAUjpE,CAClBoF,GAAQ6jE,KAAUt2C,CAClBvtB,GAAQ6jE,KAAU/nE,MAEZ,IAAIoc,GAAK,EAAG,CAElBlY,EAAQ6jE,KAAUjpE,CAClBoF,GAAQ6jE,KAAU9nE,CAClBiE,GAAQ6jE,KAAUt2C,MAEZ,CACNvtB,EAAQ6jE,KAAUjpE,CAClBoF,GAAQ6jE,KAAU9nE,CAClBiE,GAAQ6jE,KAAUt2C,CAClBvtB,GAAQ6jE,KAAUjpE,CAClBoF,GAAQ6jE,KAAUt2C,CAClBvtB,GAAQ6jE,KAAU/nE,GAIpB8nE,GAAQ,GAIVvB,EAAiBpiE,WAAWD,EAE5BqiE,GAAiBljE,aAAaqB,EAC9B6hE,GAAiBh4C,WAAWqB,EAC5B22C,GAAiB93C,YAAYoB,OAEvB,IAAIoE,GAAgB,kBAAmB,CAE7C,GAAIq0C,GAAiDrlE,CAErD,IAAIslE,GAAqBxoE,KAAK6lE,WAAW7lE,KAAK4lE,WAAW,EAAI5lE,KAAK4lE,UAClE,IAAIjhE,GAAyB,GAAIoc,cAAaynD,EAAY,EAC1D,IAAInnD,GAAyB,GAAIN,cAAaynD,EAE9CT,GAAO,CAEPC,GAAO,CAEP,KAAK3rD,EAAI,EAAGA,GAAKrc,KAAK6lE,aAAcxpD,EAAG,CAEtC,GAAIoqD,GAAkBnvD,KAAKovD,GAAGrqD,EAAErc,KAAK6lE,UACrC,IAAIh6D,IAAY7L,KAAK00B,QAAQpd,KAAK0uB,IAAIygC,EACtC,IAAIE,GAAoB3mE,KAAK00B,QAAQpd,KAAKyuB,IAAI0gC,EAE9C,KAAKznE,EAAI,EAAGA,GAAKgB,KAAK4lE,aAAc5mE,EAAG,CACtC,GAAI4nE,GAAkB,EAAEtvD,KAAKovD,GAAG1nE,EAAEgB,KAAK4lE,UACvC,IAAIn6D,GAAWk7D,EAAWrvD,KAAK0uB,IAAI4gC,EACnC,IAAIj7D,GAAWg7D,EAAWrvD,KAAKyuB,IAAI6gC,EAEnC,IAAI5mE,KAAK8lE,KAAM,CACdM,GAASv6D,CACTw6D,GAAQ16D,MAEF,CACNy6D,EAAQz6D,CACR06D,GAAQx6D,EAGT,GAAI7M,EAAI,EAAG,CAEV2F,EAAUojE,KAAUt8D,CACpB9G,GAAUojE,KAAU3B,CACpBzhE,GAAUojE,KAAU1B,CAEpBhlD,GAAU2mD,KAAU,CAGpB,IAAI3rD,EAAI,EAAG,CACV,GAAIsuD,GAAetuD,GAAK,EAAI,GAAK,GAAGrc,KAAK4lE,WAAW5mE,GAAK,GAAGA,GAAK,EAAIgB,KAAK4lE,WAAW,EACrFjhE,GAAUojE,GAAQpjE,EAAUojE,KAAS4C,EACrChmE,GAAUojE,GAAQpjE,EAAUojE,KAAS4C,EACrChmE,GAAUojE,GAAQpjE,EAAUojE,KAAS4C,EAErChmE,GAAUojE,KAAUt8D,CACpB9G,GAAUojE,KAAU3B,CACpBzhE,GAAUojE,KAAU1B,CAEpBhlD,GAAU2mD,KAAU,GAMtB,GAAIhpE,EAAIgB,KAAK4lE,WAAY,CACxBjhE,EAAUojE,KAAUt8D,CACpB9G,GAAUojE,KAAU3B,CACpBzhE,GAAUojE,KAAU1B,IAMvBkC,EAAajlE,aAAaqB,EAC1B4jE,GAAannD,aAAaC,IAOrBmT,GAAAj0B,UAAAwmE,WAAP,SAAkB7jE,EAAwBgxB,GAEzC,GAAIl1B,GAAUqd,CACd,IAAIqjC,IAAsB1/C,KAAK6lE,WAAa,IAAI7lE,KAAK4lE,WAAa,EAClE,IAAIvhE,EAGJ,IAAI6vB,GAAgB,sBAAuB,CAE1CwrB,GAAe1/C,KAAK6lE,WAAa,IAAI7lE,KAAK4lE,WAAa,EAEvD,IAAIY,GAA6DtjE,CAEjE,IAAIw8C,GAAe8mB,EAAiB9mB,aAAe8mB,EAAiBniE,KAAO,KAAM,CAChFA,EAAMmiE,EAAiBniE,IAAIxD,IAAI6+C,OACzB,CACNr7C,EAAM,GAAI0c,cAAa2+B,EAAY,GAGpC,GAAI7lC,GAAe,CACnB,KAAKwC,EAAI,EAAGA,GAAKrc,KAAK6lE,aAAcxpD,EAAG,CACtC,IAAKrd,EAAI,EAAGA,GAAKgB,KAAK4lE,aAAc5mE,EAAG,CACtCqF,EAAIwV,KAAa7a,EAAEgB,KAAK4lE,WAAa5lE,KAAKmC,OAC1CkC,GAAIwV,KAAawC,EAAErc,KAAK6lE,WAAa7lE,KAAKoC,SAI5CokE,EAAiBzjE,OAAOsB,OAElB,IAAI6vB,GAAgB,kBAAmB,GAIhD,OAAAM,IAhVoC+wC,EAkVpC9lE,GAA+BJ,QAAtBm1B,I7G82jBNwyC,iDAAiD,mDAAmDmF,mDAAmD,SAAS5tE,EAAQkB,EAAOJ,GAClL,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8G3skBtB,IAAOklE,GAAmBhnE,EAAY,iD9GitkBtC,I8G5skBM6tE,GAAoB,SAAA1rE,GAASX,EAA7BqsE,EAAoB1rE,EAyFzB,SAzFK0rE,GAyFOt3C,EAAoBu3C,EAAwBC,EAAuBC,EAAsB5G,GAAzF,GAAA7wC,QAAA,GAAkB,CAAlBA,EAAA,GAAoB,GAAAu3C,QAAA,GAAsB,CAAtBA,EAAA,GAAwB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAA5G,QAAA,GAAkB,CAAlBA,EAAA,KAEpGjlE,EAAApB,KAAAU,KApFOA,MAAAgC,aAAsB,CAsF7BhC,MAAK00B,QAAUI,CACf90B,MAAKwsE,YAAcH,CACnBrsE,MAAKysE,WAAaH,CAClBtsE,MAAK0sE,WAAaH,CAClBvsE,MAAK8lE,KAAOH,EArFbhlE,OAAAC,eAAWwrE,EAAA7rE,UAAA,U9G4tkBJM,I8G5tkBP,WAEC,MAAOb,MAAK00B,S9G6tkBN7xB,I8G1tkBP,SAAkBC,GAEjB9C,KAAK00B,QAAU5xB,CACf9C,MAAK+lE,wB9G2tkBChlE,WAAY,KACZC,aAAc,M8GttkBrBL,QAAAC,eAAWwrE,EAAA7rE,UAAA,c9G4tkBJM,I8G5tkBP,WAEC,MAAOb,MAAKwsE,a9G6tkBN3pE,I8G1tkBP,SAAsBC,GAErB9C,KAAKwsE,YAAc1pE,CACnB9C,MAAK+lE,wB9G2tkBChlE,WAAY,KACZC,aAAc,M8GttkBrBL,QAAAC,eAAWwrE,EAAA7rE,UAAA,a9G4tkBJM,I8G5tkBP,WAEC,MAAOb,MAAKysE,Y9G6tkBN5pE,I8G1tkBP,SAAqBC,GAEpB9C,KAAKysE,WAAa3pE,CAClB9C,MAAK+lE,sBACL/lE,MAAKgmE,mB9G2tkBCjlE,WAAY,KACZC,aAAc,M8GttkBrBL,QAAAC,eAAWwrE,EAAA7rE,UAAA,a9G4tkBJM,I8G5tkBP,WAEC,MAAOb,MAAK0sE,Y9G6tkBN7pE,I8G1tkBP,SAAqBC,GAEpB9C,KAAK0sE,WAAa5pE,CAClB9C,MAAK+lE,sBACL/lE,MAAKgmE,mB9G2tkBCjlE,WAAY,KACZC,aAAc,M8GttkBrBL,QAAAC,eAAWwrE,EAAA7rE,UAAA,O9G4tkBJM,I8G5tkBP,WAEC,MAAOb,MAAK8lE,M9G6tkBNjjE,I8G1tkBP,SAAeC,GAEd9C,KAAK8lE,KAAOhjE,CACZ9C,MAAK+lE,wB9G2tkBChlE,WAAY,KACZC,aAAc,M8GlskBdorE,GAAA7rE,UAAA0lE,gBAAP,SAAuB/iE,EAAwBgxB,GAE9C,GAAI/vB,EACJ,IAAIQ,EACJ,IAAIkrB,EACJ,IAAIC,EAEJ,IAAI9wB,GAAUqd,CACd,IAAI5Q,GAAUE,EAAUE,EAAU2yD,EAAWC,EAAWC,EAAWiO,EAAyBC,CAC5F,IAAI7E,EACJ,IAAIC,EACJ,IAAI7H,GAAoB,CAExB,IAAIjsC,GAAgB,sBAAuB,CAE1C,GAAIsyC,GAA6DtjE,CAGjElD,MAAKgC,cAAgBhC,KAAK0sE,WAAa,IAAI1sE,KAAKysE,WAAa,EAC7DtM,GAAangE,KAAK0sE,WAAW1sE,KAAKysE,WAAW,CAG7C,IAAIzsE,KAAKgC,cAAgBwkE,EAAiB9mB,YAAa,CACtDv7C,EAAUqiE,EAAiBriE,QAAQtD,IAAI2lE,EAAiB1G,YACxDn7D,GAAY6hE,EAAiB7hE,UAAU9D,IAAIb,KAAKgC,aAChD6tB,GAAU22C,EAAiB32C,QAAQhvB,IAAIb,KAAKgC,aAC5C8tB,GAAW02C,EAAiB12C,SAASjvB,IAAIb,KAAKgC,kBACxC,CACNmC,EAAU,GAAIgd,aAAYg/C,EAC1Bx7D,GAAY,GAAIoc,cAAa/gB,KAAKgC,aAAa,EAC/C6tB,GAAU,GAAI9O,cAAa/gB,KAAKgC,aAAa,EAC7C8tB,GAAW,GAAI/O,cAAa/gB,KAAKgC,aAAa,EAE9ChC,MAAKgmE,kBAIN+B,EAAO,CACPC,GAAO,C9GiskBE,I8G9rkBL6E,GAA+B,EAAEv1D,KAAKovD,GAAG1mE,KAAKysE,UAClD,IAAIK,GAA+B,EAAEx1D,KAAKovD,GAAG1mE,KAAK0sE,UAElD,IAAItG,GAAcC,CAClB,IAAIC,GAAWC,EAAWwG,EAAWC,CACrC,IAAI7G,GAAoB,CACxB,IAAIiE,GAAyB,C9G+rkBpB,I8G5rkBLrrE,GAAUmB,EAAUwxB,EAAUzxB,EAAUV,CAE5C,KAAK8c,EAAI,EAAGA,GAAKrc,KAAK0sE,aAAcrwD,EAAG,CAEtC8pD,EAAaiE,EAAgB,CAE7B,KAAKprE,EAAI,EAAGA,GAAKgB,KAAKysE,aAAcztE,EAAG,CAGtC2tE,EAAmB3tE,EAAE6tE,CACrBD,GAAmBvwD,EAAEywD,CAErBvtE,GAAS+X,KAAK0uB,IAAI4mC,EAClBpO,GAAKj/D,EAAO+X,KAAK0uB,IAAI2mC,EACrBlO,GAAKl/D,EAAO+X,KAAKyuB,IAAI4mC,EACrBjO,GAAKpnD,KAAKyuB,IAAI6mC,EAEdnhE,GAAIzL,KAAK00B,QAAQpd,KAAK0uB,IAAI2mC,GAAoB3sE,KAAKwsE,YAAYhO,CAC/D7yD,GAAI3L,KAAK00B,QAAQpd,KAAKyuB,IAAI4mC,GAAoB3sE,KAAKwsE,YAAY/N,CAC/D5yD,GAAKwQ,GAAKrc,KAAK0sE,WAAa,EAAI1sE,KAAKwsE,YAAY9N,CAEjD,IAAI1+D,KAAK8lE,KAAM,CAEdiH,GAAMrO,CACNsO,GAAKvO,CACL6H,GAAK,CACLC,GAAMhnE,EAAQi/D,EAAGj/D,EAASkM,EAAEzL,KAAK00B,OACjC0xC,IAASv6D,CACTw6D,GAAQ16D,MAEF,CACNohE,EAAKtO,CACLuO,GAAKtO,CACL4H,GAAM/mE,EAAQi/D,EAAGj/D,EAASkM,EAAEzL,KAAK00B,OACjC6xC,GAAK,CACLH,GAAQz6D,CACR06D,GAAQx6D,EAGT,GAAI7M,GAAKgB,KAAKysE,WAAY,CACzB9nE,EAAUojE,GAAQt8D,CAClB9G,GAAUojE,EAAO,GAAKpjE,EAAUwhE,EAAa,EAC7CxhE,GAAUojE,EAAO,GAAKpjE,EAAUwhE,EAAa,OACvC,CACNxhE,EAAUojE,GAAQt8D,CAClB9G,GAAUojE,EAAO,GAAK3B,CACtBzhE,GAAUojE,EAAO,GAAK1B,EAGvBx2C,EAAQk4C,GAAQvJ,CAChB3uC,GAAQk4C,EAAO,GAAKgF,CACpBl9C,GAAQk4C,EAAO,GAAKiF,CACpBl9C,GAASi4C,KAAUxoE,EAAQk/D,EAAGl/D,EAASoM,EAAE3L,KAAK00B,QAC9C5E,GAASi4C,EAAO,GAAKzB,CACrBx2C,GAASi4C,EAAO,GAAKxB,CAErBwB,IAAQ,CAGR,IAAI/oE,EAAI,GAAKqd,EAAI,EAAG,CACnBtd,EAAIqrE,CACJlqE,GAAIkqE,EAAkB,CACtB14C,GAAIxxB,EAAIF,KAAKysE,WAAa,CAC1BxsE,GAAIlB,EAAIiB,KAAKysE,WAAa,CAE1BtoE,GAAQ6jE,KAAUjpE,CAClBoF,GAAQ6jE,KAAU9nE,CAClBiE,GAAQ6jE,KAAUt2C,CAElBvtB,GAAQ6jE,KAAUjpE,CAClBoF,GAAQ6jE,KAAUt2C,CAClBvtB,GAAQ6jE,KAAU/nE,EAGnBmqE,KAKF5D,EAAiBpiE,WAAWD,EAE5BqiE,GAAiBljE,aAAaqB,EAC9B6hE,GAAiBh4C,WAAWqB,EAC5B22C,GAAiB93C,YAAYoB,OAEvB,IAAIoE,GAAgB,kBAAmB,GAQxCk4C,GAAA7rE,UAAAwmE,WAAP,SAAkB7jE,EAAwBgxB,GAGzC,GAAIl1B,GAAUqd,CACd,IAAIhY,EAGJ,IAAI6vB,GAAgB,sBAAuB,CAE1C,GAAIsyC,GAA6DtjE,CAGjE,IAAIsjE,EAAiBniE,KAAOrE,KAAKgC,cAAgBwkE,EAAiB9mB,YAAa,CAC9Er7C,EAAMmiE,EAAiBniE,IAAIxD,IAAIb,KAAKgC,kBAC9B,CACNqC,EAAM,GAAI0c,cAAa/gB,KAAKgC,aAAa,G9GwqkBjC,G8GpqkBL6X,GAAe,CAGnB,KAAKwC,EAAI,EAAGA,GAAKrc,KAAK0sE,aAAcrwD,EAAG,CACtC,IAAKrd,EAAI,EAAGA,GAAKgB,KAAKysE,aAAcztE,EAAG,CAEtCqF,EAAIwV,KAAa7a,EAAEgB,KAAKysE,WAAazsE,KAAKmC,OAC1CkC,GAAIwV,KAAawC,EAAErc,KAAK0sE,WAAa1sE,KAAKoC,SAK5CokE,EAAiBzjE,OAAOsB,OAElB,IAAI6vB,GAAgB,kBAAmB,GAIhD,OAAAk4C,IA5RmC7G,EA8RnC9lE,GAA8BJ,QAArB+sE,I9GkqkBNpF,iDAAiD,mDAAmDiG,yCAAyC,SAAS1uE,EAAQkB,EAAOJ,SAElK6tE,+CAA+C,SAAS3uE,EAAQkB,EAAOJ,GAI7E,G+Gz8kBM8tE,GAAmB,WAAzB,QAAMA,MAEEA,EAAA5sE,UAAA6sE,uBAAP,SAA8BC,GAE7B,GAAIC,EACJ,IAAIC,EACJ,IAAIC,EAEJ,KAAKH,IAASA,EAAK1K,KAAM,CACxB,MAAO0K,GAIRG,EAAOH,CACPE,GAAOF,EAAK1K,IAEZ,OAAO4K,EAAM,CACZA,EAAOA,EAAK5K,IACZ,IAAI4K,EAAM,CACTC,EAAOA,EAAK7K,IACZ4K,GAAOA,EAAK5K,MAId2K,EAAQE,EAAK7K,IACb6K,GAAK7K,KAAO,IAGZ0K,GAAOrtE,KAAKotE,uBAAuBC,EACnCC,GAAQttE,KAAKotE,uBAAuBE,E/Gs8kB9B,I+Gn8kBFnqB,EACJ,IAAIsqB,EACJ,IAAIruE,EAEJ,KAAKiuE,EACJ,MAAOC,EACR,KAAKA,EACJ,MAAOD,EAER,OAAOA,GAAQC,EAAO,CACrB,GAAID,EAAKK,OAASJ,EAAMI,OAAQ,CAC/BtuE,EAAIiuE,CACJA,GAAOA,EAAK1K,SACN,CACNvjE,EAAIkuE,CACJA,GAAQA,EAAM3K,KAGf,IAAKxf,EACJA,EAAS/jD,MACTquE,GAAK9K,KAAOvjE,CAEbquE,GAAOruE,EAGR,GAAIiuE,EACHI,EAAK9K,KAAO0K,MAAW,IAAIC,EAC3BG,EAAK9K,KAAO2K,CAEb,OAAOnqB,GAGDgqB,GAAA5sE,UAAAotE,sBAAP,SAA6BN,GAE5B,GAAIC,EACJ,IAAIC,GAAkBC,CAEtB,KAAKH,IAASA,EAAK1K,KAAM,CACxB,MAAO0K,GAIRG,EAAOH,CACPE,GAAOF,EAAK1K,IAEZ,OAAO4K,EAAM,CACZA,EAAOA,EAAK5K,IACZ,IAAI4K,EAAM,CACTC,EAAOA,EAAK7K,IACZ4K,GAAOA,EAAK5K,MAId2K,EAAQE,EAAK7K,IACb6K,GAAK7K,KAAO,IAGZ0K,GAAOrtE,KAAK2tE,sBAAsBN,EAClCC,GAAQttE,KAAK2tE,sBAAsBL,E/G27kB7B,I+Gx7kBFnqB,EACJ,IAAIsqB,EACJ,IAAIruE,EACJ,IAAIwuE,GAAa,CAEjB,KAAKP,EACJ,MAAOC,EACR,KAAKA,EACJ,MAAOD,EAER,OAAOA,GAAQC,GAASD,GAAQ,MAAQC,GAAS,KAAM,C/G07kB7C,G+Gr7kBLO,GAAaR,EAAKS,aACtB,IAAIC,GAAaT,EAAMQ,aAEvB,IAAID,GAAOE,EAAK,CACf,GAAIC,GAAYX,EAAKY,QACrB,IAAIC,GAAYZ,EAAMW,QAEtB,IAAID,GAAME,EAAI,CACb,GAAIb,EAAKK,OAASJ,EAAMI,OACvBE,EAAM,MACNA,IAAO,MACF,IAAII,EAAKE,EAAI,CACnBN,EAAM,MACA,CACNA,GAAO,OAEF,IAAIC,EAAME,EAAK,CACrBH,EAAM,MACA,CACNA,GAAO,EAGR,GAAIA,EAAM,EAAG,CACZxuE,EAAIiuE,CACJA,GAAOA,EAAK1K,SACN,CACNvjE,EAAIkuE,CACJA,GAAQA,EAAM3K,KAGf,IAAKxf,EAAQ,CACZA,EAAS/jD,CACTquE,GAAOruE,MACD,CACNquE,EAAK9K,KAAOvjE,CACZquE,GAAOruE,GAIT,GAAIiuE,EACHI,EAAK9K,KAAO0K,MAAW,IAAIC,EAC3BG,EAAK9K,KAAO2K,CAEb,OAAOnqB,GAET,OAAAgqB,KAEA1tE,GAA6BJ,QAApB8tE,O/Gy7kBHgB,8CAA8C,SAAS5vE,EAAQkB,EAAOJ,GAI5E,GgHxllBM+uE,GAAkB,WAAxB,QAAMA,MAEEA,EAAA7tE,UAAA6sE,uBAAP,SAA8BC,GAE7B,MAAOA,GAGDe,GAAA7tE,UAAAotE,sBAAP,SAA6BN,GAE5B,MAAOA,GAET,OAAAe,KAEA3uE,GAA4BJ,QAAnB+uE,OhHwllBHC,yCAAyC,SAAS9vE,EAAQkB,EAAOJ,GAKvE,GiH5mlBMivE,GAAa,WAAnB,QAAMA,MAWSA,EAAAC,SAAkB,UASlBD,GAAAhhC,OAAgB,QAC/B,OAAAghC,KAEA7uE,GAAuBJ,QAAdivE,OjH8mlBHE,gCAAgC,SAASjwE,EAAQkB,EAAOJ,GAC9D,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkH9olBtB,IAAOG,GAASjC,EAAe,oCAG/B,IAAOkwE,GAASlwE,EAAe,8ClHwplB/B,IkH7olBMmwE,GAAI,SAAAhuE,GAASX,EAAb2uE,EAAIhuE,EAgBT,SAhBKguE,KAkBJhuE,EAAApB,KAAAU,KAdOA,MAAA2uE,aAAgC,GAAIrsE,OAiB5C3B,OAAAC,eAAW8tE,EAAAnuE,UAAA,elHwolBJM,IkHxolBP,WAEC,MAAOb,MAAK2uE,clHyolBN5tE,WAAY,KACZC,aAAc,MkHrolBrBL,QAAAC,eAAW8tE,EAAAnuE,UAAA,alH2olBJM,IkH3olBP,WAEC,MAAO6tE,GAAKxtE,WlH4olBNH,WAAY,KACZC,aAAc,MkHxolBd0tE,GAAAnuE,UAAAU,QAAP,YAOOytE,GAAAnuE,UAAAquE,eAAP,SAAsBC,GAErB,GAAI5jE,GAAajL,KAAK2uE,aAAapvE,MAEnC,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,IAAOjM,EAAG,CACpC,GAAGgB,KAAK2uE,aAAa3vE,GAAGuR,MAAMs+D,EAC7B,MAAO7uE,MAAK2uE,aAAa3vE,GAE3B,GAAI8vE,GAAuB,GAAIL,EAC/BK,GAAWv+D,KAAKs+D,CAChB7uE,MAAK2uE,aAAah1D,KAAKm1D,EACvB,OAAOA,GAnDMJ,GAAAxtE,UAAmB,cAsDlC,OAAAwtE,IAxDmBluE,EA0DLf,GAAAJ,QAALqvE,IlH2olBNvtE,oCAAoCC,UAAU2tE,8CAA8C,gDAAgDC,uCAAuC,SAASzwE,EAAQkB,EAAOJ,GAI9M,GmHptlBM4vE,GAAW,WAAjB,QAAMA,MASSA,EAAArmC,KAAc,MAUdqmC,GAAAC,MAAe,OAUfD,GAAAE,SAAkB,UACjC,OAAAF,KAEAxvE,GAAqBJ,QAAZ4vE,OnHqtlBHG,8CAA8C,SAAS7wE,EAAQkB,EAAOJ,GA2B5E,GoHnvlBMgwE,GAAkB,WAuBvB,QAvBKA,GAuBOtwB,GAPL/+C,KAAAi/C,iBAA+B,GAAI38C,MAInCtC,MAAAk/C,cAA4B,GAAI58C,MAKtCtC,MAAKm/C,WAAW,CAChBn/C,MAAK++C,QAAUA,CACf,IAAI/+C,KAAK++C,SAAW,KAAM,CACzB,GAAIU,GAA0Bz/C,KAAK++C,QAAQp6C,UAAU9D,IAAIb,KAAK++C,QAAQW,YACtE,KAAK,GAAIvc,GAAW,EAAGA,EAAIsc,EAAWlgD,OAAO,EAAG4jC,IAAK,CACpD,GAAGsc,EAAWtc,EAAE,GAAGnjC,KAAKm/C,WACvBn/C,KAAKm/C,WAAWM,EAAWtc,EAAE,KAKlC,MAAAksC,KAE4B5vE,GAAAJ,QAAnBgwE,OpHqulBHN,+CAA+C,SAASxwE,EAAQkB,EAAOJ,GAC7E,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqH/ylBtB,IAAOG,GAASjC,EAAe,oCAM/B,IAAO8wE,GAAkB9wE,EAAa,6CrHszlBtC,IqH3ylBM+wE,GAAmB,SAAA5uE,GAASX,EAA5BuvE,EAAmB5uE,EAmBxB,SAnBK4uE,KAqBJ5uE,EAAApB,KAAAU,KACAA,MAAKuvE,YAAc,GAAIjtE,MACvBtC,MAAKwvE,gBAAkB,GAAI7uE,OAC3BX,MAAKyvE,UAAU,CACfzvE,MAAK0vE,UAAU,EAMTJ,EAAA/uE,UAAAU,QAAP,YAKAN,QAAAC,eAAI0uE,EAAA/uE,UAAA,YrH+xlBGM,IqH/xlBP,WACC,MAAOb,MAAKyvE,WrHiylBN5sE,IqH9xlBP,SAAaC,GACZ9C,KAAKyvE,UAAU3sE,GrHgylBT/B,WAAY,KACZC,aAAc,MqH9xlBrBL,QAAAC,eAAI0uE,EAAA/uE,UAAA,YrHiylBGM,IqHjylBP,WACC,MAAOb,MAAK0vE,WrHmylBN7sE,IqHhylBP,SAAaC,GACZ9C,KAAK0vE,UAAU5sE,GrHkylBT/B,WAAY,KACZC,aAAc,MqHjylBdsuE,GAAA/uE,UAAAovE,eAAP,WAEC,MAAO3vE,MAAKuvE,YAEND,GAAA/uE,UAAA88C,iBAAP,WAEC,MAAOr9C,MAAK4vE,cAENN,GAAA/uE,UAAAsvE,qBAAP,SAA4B/sE,GAE3B9C,KAAK8vE,kBAAkBhtE,EAEjBwsE,GAAA/uE,UAAAs9C,qBAAP,WAEC,MAAO79C,MAAK8vE,kBAENR,GAAA/uE,UAAAwvE,iBAAP,SAAwBC,GAEvBhwE,KAAK4vE,cAAcI,EAKbV,GAAA/uE,UAAAo+C,oBAAP,SAA2BsxB,GAE1B,MAAOjwE,MAAKwvE,gBAAgBS,GAKtBX,GAAA/uE,UAAA2vE,oBAAP,SAA2BD,EAAaE,GAEvC,GAAIC,GAA0C,GAAIf,GAAqCc,EACvFA,GAAO5/D,KAAK0/D,CACZjwE,MAAKuvE,YAAY51D,KAAKy2D,EACtBpwE,MAAKwvE,gBAAgBS,GAAMG,EAG7B,OAAAd,IAzFkC9uE,EA2FlCf,GAA6BJ,QAApBiwE,IrH6xlBNnuE,oCAAoCC,UAAUguE,6CAA6C,+CAA+CiB,6CAA6C,SAAS9xE,EAAQkB,EAAOJ,GAKlN,GsH34lBMixE,GAAiB,WAAvB,QAAMA,MAOSA,EAAAC,OAAgB,QAOhBD,GAAAE,KAAc,MAKdF,GAAA1nC,KAAc,MAOd0nC,GAAAG,MAAe,OAC9B,OAAAH,KAEA7wE,GAA2BJ,QAAlBixE,OtH24lBH/tB,yCAAyC,SAAShkD,EAAQkB,EAAOJ,GAOvE,GuH76lBMy8C,GAAa,WAAnB,QAAMA,MAKSA,EAAA40B,QAAiB,SAKjB50B,GAAA60B,MAAe,OAKf70B,GAAAE,OAAgB,OAC/B,OAAAF,KAEAr8C,GAAuBJ,QAAdy8C,OvH86lBH80B,2CAA2C,SAASryE,EAAQkB,EAAOJ,GAKzE,GwHv8lBMwxE,GAAe,WAArB,QAAMA,KAME7wE,KAAAuwE,OAAgB,QAMhBvwE,MAAA8wE,QAAiB,SAMjB9wE,MAAAwwE,KAAc,MAMdxwE,MAAAywE,MAAe,QACvB,MAAAI,KAEyBpxE,GAAAJ,QAAhBwxE,OxHu8lBHE,sCAAsC,SAASxyE,EAAQkB,EAAOJ,GACpE,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyH3+lBtB,IAAOG,GAASjC,EAAe,oCzHwgmB/B,IyHz+lBMyyE,GAAU,SAAAtwE,GAASX,EAAnBixE,EAAUtwE,EAiPf,SAjPKswE,GAiPOC,EAAiC9zB,EAAkBtT,EAAiCqnC,EAAsBC,EAAwBC,EAA2BC,EAAiBC,EAAyB9xB,EAAuB+xB,EAAuBC,EAAwBC,EAAmBC,GAAhS,GAAAT,QAAA,GAA+B,CAA/BA,EAAA,kBAAiC,GAAA9zB,QAAA,GAAgB,CAAhBA,EAAA,GAAkB,GAAAtT,QAAA,GAA+B,CAA/BA,EAAA,EAAiC,GAAAqnC,QAAA,GAAoB,CAApBA,EAAA,MAAsB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,MAAwB,GAAAC,QAAA,GAAyB,CAAzBA,EAAA,MAA2B,GAAAC,QAAA,GAAe,CAAfA,EAAA,GAAiB,GAAAC,QAAA,GAAuB,CAAvBA,EAAA,GAAyB,GAAA9xB,QAAA,GAAqB,CAArBA,EAAA,OAAuB,GAAA+xB,QAAA,GAAqB,CAArBA,EAAA,EAAuB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,EAAwB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,EAE3ShxE,EAAApB,KAAAU,KAjFMA,MAAA2xE,SAAiC,GAAIrvE,MAkF3CtC,MAAK4xE,UAAYX,CACjBjxE,MAAKm9C,KAAOA,CACZn9C,MAAKkxE,KAAOA,CACZlxE,MAAKmxE,OAASA,CACdnxE,MAAKoxE,UAAYA,CACjBpxE,MAAKqxE,IAAMA,CACXrxE,MAAKsxE,YAAcA,CACnBtxE,MAAKw/C,MAAQA,CACbx/C,MAAKuxE,WAAaA,CAClBvxE,MAAKwxE,YAAcA,CACnBxxE,MAAKyxE,OAASA,CACdzxE,MAAK0xE,QAAUA,EAMhB/wE,OAAAC,eAAWowE,EAAAzwE,UAAA,azHozlBJM,IyHpzlBP,WAEC,MAAOmwE,GAAW9vE,WzHqzlBZH,WAAY,KACZC,aAAc,MyH3jmBPgwE,GAAA9vE,UAAmB,oBAuQlC,OAAA8vE,IAzQyBxwE,EA2QzBf,GAAoBJ,QAAX2xE,IzHyzlBN7vE,oCAAoCC,YAAYywE,+CAA+C,SAAStzE,EAAQkB,EAAOJ,GAM1H,G0HpmmBMyyE,GAAmB,WAAzB,QAAMA,MASSA,EAAAxkC,OAAgB,QAOhBwkC,GAAAC,UAAmB,WAClC,OAAAD,KAEAryE,GAA6BJ,QAApByyE,O1HsmmBHE,2CAA2C,SAASzzE,EAAQkB,EAAOJ,GAOzE,G2H/nmBM4yE,GAAe,WA4DpB,QA5DKA,GA4DOxmE,EAAgBuD,EAAoBjD,EAAqBmmE,EAAqBC,EAAsBT,GAApG,GAAAjmE,QAAA,GAAc,CAAdA,EAAAkgC,IAAgB,GAAA38B,QAAA,GAAkB,CAAlBA,EAAA28B,IAAoB,GAAA5/B,QAAA,GAAmB,CAAnBA,EAAA4/B,IAAqB,GAAAumC,QAAA,GAAmB,CAAnBA,EAAAvmC,IAAqB,GAAAwmC,QAAA,GAAoB,CAApBA,EAAAxmC,IAAsB,GAAA+lC,QAAA,GAAoB,CAApBA,EAAA/lC,KAIjH,MAAAsmC,KAEyBxyE,GAAAJ,QAAhB4yE,O3H4lmBH7qB,+CAA+C,SAAS7oD,EAAQkB,EAAOJ,GAC7E,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4HzqmBrB,IAAO+xE,GAAS7zE,EAAc,iCAC/B,IAAOquD,GAAOruD,EAAe,+BAE7B,IAAOW,GAAKX,EAAe,+BAC3B,IAAO8zE,GAAU9zE,EAAc,mCAE/B,IAAOuuD,GAAWvuD,EAAc,0CAEhC,IAAMonD,GAAe,SAAAjlD,GAASX,EAAxB4lD,EAAejlD,EAyCpB,SAzCKilD,GAyCO2sB,GAEX5xE,EAAApB,KAAAU,KAEA,IAAIsyE,YAAkB1lB,GACrB5sD,KAAK+uD,UAAY,GAAIqjB,GAAUE,OAE/BtyE,MAAK+uD,UAAYujB,EAtCnB3xE,OAAAC,eAAW+kD,EAAAplD,UAAA,a5H4qmBJM,I4H5qmBP,WAEC,MAAO8kD,GAAgBzkD,W5H6qmBjBH,WAAY,KACZC,aAAc,M4HvqmBrBL,QAAAC,eAAW+kD,EAAAplD,UAAA,a5H8qmBJM,I4H9qmBP,WAEC,MAAOb,MAAKuyE,Y5H+qmBN1vE,I4H5qmBP,SAAqBC,GAEpB,GAAI9C,KAAKuyE,YAAczvE,EACtB,MAED,KAAKuvE,EAAWG,eAAe1vE,EAAMwwD,SACpC,KAAM,IAAIp0D,GAAM,oFAEjBc,MAAKuyE,WAAazvE,CAElB9C,MAAKyyE,SAASzyE,KAAKuyE,WAAWvjB,KAAKhgD,MAAOhP,KAAKuyE,WAAWvjB,KAAKjjD,OAE/D/L,MAAK0yE,qB5HyqmBC3xE,WAAY,KACZC,aAAc,M4H5smBP2kD,GAAAzkD,UAAmB,2BAiDlC,OAAAykD,IAnD8BmH,EAqDLrtD,GAAAJ,QAAhBsmD,I5HgqmBNwH,+BAA+B/rD,UAAUuxE,iCAAiCvxE,UAAUw4B,+BAA+Bx4B,UAAUwxE,mCAAmCxxE,UAAUisD,0CAA0C,4CAA4ChG,iDAAiD,SAAS9oD,EAAQkB,EAAOJ,GAC5U,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6HlumBtB,IAAOwyE,GAAWt0E,EAAc,mCAChC,IAAO82D,GAAS92D,EAAc,iCAE9B,IAAOuuD,GAAWvuD,EAAc,0CAGhC,IAAMqnD,GAAiB,SAAAllD,GAASX,EAA1B6lD,EAAiBllD,EAoCtB,SApCKklD,GAoCO0sB,GAEX5xE,EAAApB,KAAAU,KAEA,IAAIsyE,YAAkBjd,GACrBr1D,KAAKi2D,YAAc,GAAI4c,GAAYP,OAEnCtyE,MAAKi2D,YAAcqc,EAjCrB3xE,OAAAC,eAAWglD,EAAArlD,UAAA,a7HqumBJM,I6HrumBP,WAEC,MAAO+kD,GAAkB1kD,W7HsumBnBH,WAAY,KACZC,aAAc,M6HhumBrBL,QAAAC,eAAWglD,EAAArlD,UAAA,e7HuumBJM,I6HvumBP,WAEC,MAAOb,MAAK8yE,c7HwumBNjwE,I6HrumBP,SAAuBC,GAEtB,GAAI9C,KAAK8yE,cAAgBhwE,EACxB,MAED9C,MAAK8yE,aAAehwE,CAEpB9C,MAAK0yE,qB7HoumBC3xE,WAAY,KACZC,aAAc,M6HlwmBP4kD,GAAA1kD,UAAmB,6BA2ClC,OAAA0kD,IA7CgCkH,EA+ChCrtD,GAA2BJ,QAAlBumD,I7H4tmBNuQ,iCAAiC/0D,UAAU2xE,mCAAmC3xE,UAAUisD,0CAA0C,4CAA4CA,2CAA2C,SAAS9uD,EAAQkB,EAAOJ,GACpP,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8HrxmBtB,IAAOG,GAASjC,EAAc,oC9H2xmB9B,I8HpxmBMuuD,GAAW,SAAApsD,GAASX,EAApB+sD,EAAWpsD,EAoBhB,SApBKosD,KAsBJpsD,EAAApB,KAAAU,KApBOA,MAAAgzE,WAA+B,GAAI1wE,MAEpCtC,MAAA6N,OAAgB,CAChB7N,MAAAiM,QAAiB,EAExBtL,OAAAC,eAAIksD,EAAAvsD,UAAA,S9HyxmBGM,I8HzxmBP,WAEC,MAAOb,MAAK6N,Q9H0xmBN9M,WAAY,KACZC,aAAc,M8HxxmBrBL,QAAAC,eAAIksD,EAAAvsD,UAAA,U9H2xmBGM,I8H3xmBP,WAEC,MAAOb,MAAKiM,S9H4xmBNlL,WAAY,KACZC,aAAc,M8H/wmBd8rD,GAAAvsD,UAAAmyE,kBAAP,WAEC,GAAIznE,GAAajL,KAAKgzE,WAAWzzE,MACjC,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,EAAKjM,IAC/BgB,KAAKgzE,WAAWh0E,GAAGmkB,aAOd2pC,GAAAvsD,UAAA0yE,eAAP,WAEC,MAAOjzE,KAAKgzE,WAAWzzE,OACtBS,KAAKgzE,WAAW,GAAG/xE,UAMd6rD,GAAAvsD,UAAAU,QAAP,WAEC,MAAOjB,KAAKgzE,WAAWzzE,OACtBS,KAAKgzE,WAAW,GAAG/xE,UAId6rD,GAAAvsD,UAAA2yE,eAAP,SAAsBC,GAErBnzE,KAAKgzE,WAAWr5D,KAAKw5D,EAErB,OAAOA,GAGDrmB,GAAAvsD,UAAA6yE,kBAAP,SAAyBD,GAExBnzE,KAAKgzE,WAAWj5D,OAAO/Z,KAAKgzE,WAAWl5D,QAAQq5D,GAAY,EAE3D,OAAOA,GAGDrmB,GAAAvsD,UAAAkyE,SAAP,SAAgBzjE,EAAcjD,GAE7B/L,KAAK6N,OAASmB,CACdhP,MAAKiM,QAAUF,EAGjB,OAAA+gD,IA3E0BtsD,EA6E1Bf,GAAqBJ,QAAZytD,I9HuwmBN3rD,oCAAoCC,YAAYiyE,kDAAkD,SAAS90E,EAAQkB,EAAOJ,GAC7H,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+Hj2mBtB,IAAOizE,GAAa/0E,EAAc,4C/Hu2mBlC,I+Hl2mBMg1E,GAAkB,SAAA7yE,GAASX,EAA3BwzE,EAAkB7yE,EAEvB,SAFK6yE,KAIJ7yE,EAAApB,KAAAU,MAEF,MAAAuzE,IANiCD,EAQjC7zE,GAA4BJ,QAAnBk0E,I/Hm2mBNC,4CAA4C,8CAA8CA,6CAA6C,SAASj1E,EAAQkB,EAAOJ,GgI52mBlK,GAAO6kE,GAAkB3lE,EAAa,6ChIi3mBtC,IgIz2mBM+0E,GAAa,WAelB,QAfKA,KASGtzE,KAAAyzE,eAAwB,CACzBzzE,MAAA0zE,cAAuB,CACvB1zE,MAAA2zE,yBAAkC,CAMxC3zE,MAAK4zE,qBAAuB,GAAI1P,GAMjCvjE,OAAAC,eAAW0yE,EAAA/yE,UAAA,UhI61mBJM,IgI71mBP,WAEC,MAAOb,MAAKshC,UhI81mBNz+B,IgI31mBP,SAAkBC,GAEjB9C,KAAKshC,SAAWx+B,CAChB9C,MAAK6zE,YAAc7zE,KAAKshC,SAASu1B,ehI41mB3B91D,WAAY,KACZC,aAAc,MgIv1mBrBL,QAAAC,eAAW0yE,EAAA/yE,UAAA,chI61mBJM,IgI71mBP,WAEC,MAAOb,MAAK8zE,mBhI81mBNjxE,IgI31mBP,SAAsBC,GAErB9C,KAAK8zE,kBAAoBhxE,GhI41mBnB/B,WAAY,KACZC,aAAc,MgIv1mBrBL,QAAAC,eAAW0yE,EAAA/yE,UAAA,chI61mBJM,IgI71mBP,WAEC,MAAOb,MAAK+zE,chI81mBNhzE,WAAY,KACZC,aAAc,MgIz1mBrBL,QAAAC,eAAW0yE,EAAA/yE,UAAA,ehI+1mBJM,IgI/1mBP,WAEC,MAAOb,MAAK0zE,ehIg2mBN3yE,WAAY,KACZC,aAAc,MgI31mBrBL,QAAAC,eAAW0yE,EAAA/yE,UAAA,0BhIi2mBJM,IgIj2mBP,WAEC,MAAOb,MAAK2zE,0BhIk2mBN5yE,WAAY,KACZC,aAAc,MgI71mBdsyE,GAAA/yE,UAAA2V,MAAP,WAEClW,KAAK0zE,cAAgB1zE,KAAK2zE,yBAA2B,CACrD3zE,MAAK6zE,YAAc7zE,KAAK8zE,kBAAmB9zE,KAAK8zE,kBAAsB9zE,KAAKshC,SAAUthC,KAAKshC,SAASu1B,cAAgB,IACnH72D,MAAKyzE,eAAiBzzE,KAAK6zE,YAAa7zE,KAAK6zE,YAAYt0E,OAAS,CAClES,MAAK+zE,aAAe,IACpB/zE,MAAK4zE,qBAAqBtP,UAQpBgP,GAAA/yE,UAAA+5D,UAAP,SAAiBX,GAEhB,GAAIqa,GAAgBh0E,KAAKwY,MAAM2lB,kBAAoBw7B,EAAKx7B,kBAAoBw7B,EAAKvoC,YAAYpxB,KAAK6zE,YAAa7zE,KAAKyzE,eAEpH9Z,GAAKx7B,iBAAmBn+B,KAAKwY,MAAM2lB,gBAEnC,OAAO61C,GAODV,GAAA/yE,UAAAg6D,sBAAP,SAA6Bj6C,IAStBgzD,GAAA/yE,UAAAm6D,YAAP,SAAmBp6C,GAElBtgB,KAAK0zE,eAEL,IAAIpzD,EAAOxF,mBACV9a,KAAK2zE,0BAEN,IAAItP,GAAsBrkE,KAAK4zE,qBAAqBhX,SACpDyH,GAAK/jD,OAASA,CAEd+jD,GAAK1B,KAAO3iE,KAAK+zE,YACjB/zE,MAAK+zE,aAAe1P,EAOdiP,GAAA/yE,UAAAu7D,gBAAP,SAAuBx7C,IAShBgzD,GAAA/yE,UAAA28D,gBAAP,SAAuB58C,IAShBgzD,GAAA/yE,UAAAq9D,YAAP,SAAmBt9C,IAIpB,OAAAgzD,KAEuB7zE,GAAAJ,QAAdi0E,IhIk1mBNtP,6CAA6C,+CAA+CiQ,+CAA+C,SAAS11E,EAAQkB,EAAOJ,GACtK,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiI1/mBtB,IAAOizE,GAAa/0E,EAAc,4CjIggnBlC,IiIt/mBM21E,GAAe,SAAAxzE,GAASX,EAAxBm0E,EAAexzE,EAsDpB,SAtDKwzE,KAwDJxzE,EAAApB,KAAAU,KAhDMA,MAAAm0E,YAAqB,CAEpBn0E,MAAAo0E,sBAA+B,CAC/Bp0E,MAAAq0E,gBAAyB,CACzBr0E,MAAAs0E,gBAAyB,CA8ChCt0E,MAAKu0E,SAAW,GAAIjyE,MACpBtC,MAAKw0E,mBAAqB,GAAIlyE,MAC9BtC,MAAKy0E,aAAe,GAAInyE,MACxBtC,MAAK00E,aAAe,GAAIpyE,MAExBtC,MAAK46D,kBAAoB,KA9C1Bj6D,OAAAC,eAAWszE,EAAA3zE,UAAA,qBjIu/mBJM,IiIv/mBP,WAEC,MAAOb,MAAKw0E,oBjIw/mBNzzE,WAAY,KACZC,aAAc,MiIn/mBrBL,QAAAC,eAAWszE,EAAA3zE,UAAA,ejIy/mBJM,IiIz/mBP,WAEC,MAAOb,MAAK00E,cjI0/mBN3zE,WAAY,KACZC,aAAc,MiIr/mBrBL,QAAAC,eAAWszE,EAAA3zE,UAAA,UjI2/mBJM,IiI3/mBP,WAEC,MAAOb,MAAKu0E,UjI4/mBNxzE,WAAY,KACZC,aAAc,MiIv/mBrBL,QAAAC,eAAWszE,EAAA3zE,UAAA,ejI6/mBJM,IiI7/mBP,WAEC,MAAOb,MAAKy0E,cjI8/mBN1zE,WAAY,KACZC,aAAc,MiIz/mBrBL,QAAAC,eAAWszE,EAAA3zE,UAAA,UjI+/mBJM,IiI//mBP,WAEC,MAAOb,MAAK20E,UjIggnBN5zE,WAAY,KACZC,aAAc,MiI9+mBdkzE,GAAA3zE,UAAAg6D,sBAAP,SAA6Bj6C,GAE5BtgB,KAAKw0E,mBAAoBx0E,KAAKo0E,yBAA+C9zD,EAOvE4zD,GAAA3zE,UAAAu7D,gBAAP,SAAuBx7C,GAEtBtgB,KAAK00E,aAAc10E,KAAKs0E,mBAAmCh0D,EAOrD4zD,GAAA3zE,UAAA28D,gBAAP,SAAuB58C,GAEtBtgB,KAAKy0E,aAAcz0E,KAAKq0E,mBAAmC/zD,EAOrD4zD,GAAA3zE,UAAAq9D,YAAP,SAAmBt9C,GAElBtgB,KAAK20E,SAAoBr0D,EAMnB4zD,GAAA3zE,UAAA2V,MAAP,WAECxV,EAAAH,UAAM2V,MAAK5W,KAAAU,KAEXA,MAAK20E,SAAW,IAEhB,IAAI30E,KAAKm0E,YAAc,EACtBn0E,KAAKu0E,SAASh1E,OAASS,KAAKm0E,YAAc,CAE3C,IAAIn0E,KAAKo0E,sBAAwB,EAChCp0E,KAAKw0E,mBAAmBj1E,OAASS,KAAKo0E,sBAAwB,CAE/D,IAAIp0E,KAAKq0E,gBAAkB,EAC1Br0E,KAAKy0E,aAAal1E,OAASS,KAAKq0E,gBAAkB,CAEnD,IAAIr0E,KAAKs0E,gBAAkB,EAC1Bt0E,KAAK00E,aAAan1E,OAASS,KAAKs0E,gBAAkB,EAErD,OAAAJ,IA3H8BZ,EA6H9B7zE,GAAyBJ,QAAhB60E,IjIw+mBNV,4CAA4C,8CAA8C3P,gDAAgD,SAAStlE,EAAQkB,EAAOJ,GACrK,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkIrnnBtB,IAAOoG,GAAQlI,EAAgB,gCAG/B,IAAO+0E,GAAa/0E,EAAc,4ClI+nnBlC,IkIlnnBM0jE,GAAgB,SAAAvhE,GAASX,EAAzBkiE,EAAgBvhE,EAoCrB,SApCKuhE,KAsCJvhE,EAAApB,KAAAU,KApCOA,MAAA40E,aAAwB,GAAInuE,EAC5BzG,MAAA60E,cAAyB,GAAIpuE,EAE9BzG,MAAAm+B,iBAA0B,EAKjCx9B,OAAAC,eAAWqhE,EAAA1hE,UAAA,elIunnBJM,IkIvnnBP,WAEC,MAAOb,MAAK40E,clIwnnBN/xE,IkIrnnBP,SAAuBC,GAEtB9C,KAAK40E,aAAe9xE,GlIsnnBd/B,WAAY,KACZC,aAAc,MkIjnnBrBL,QAAAC,eAAWqhE,EAAA1hE,UAAA,gBlIunnBJM,IkIvnnBP,WAEC,MAAOb,MAAK60E,elIwnnBNhyE,IkIrnnBP,SAAwBC,GAEvB9C,KAAK60E,cAAgB/xE,GlIsnnBf/B,WAAY,KACZC,aAAc,MkIvmnBdihE,GAAA1hE,UAAA+5D,UAAP,SAAiBX,GAEhB,MAAOA,GAAKmB,kBAAkB96D,KAAK40E,aAAc50E,KAAK60E,eAExD,OAAA5S,IAlD+BqR,EAoD/B7zE,GAA0BJ,QAAjB4iE,IlI+mnBNplD,gCAAgCzb,UAAUoyE,4CAA4C,8CAA8Cxb,qDAAqD,SAASz5D,EAAQkB,EAAOJ,GACpN,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmIvrnBtB,IAAOizE,GAAa/0E,EAAc,4CnI6rnBlC,ImIxrnBMk5D,GAAqB,SAAA/2D,GAASX,EAA9B03D,EAAqB/2D,EAE1B,SAFK+2D,KAIJ/2D,EAAApB,KAAAU,MAMMy3D,EAAAl3D,UAAA+5D,UAAP,SAAiBX,GAEhB,GAAIqa,GAAgBh0E,KAAKwY,MAAM2lB,kBAAoBw7B,EAAKx7B,kBAAoBw7B,EAAKa,iBAEjF,KAAKwZ,EAAO,CACXra,EAAKx7B,iBAAmBn+B,KAAKwY,MAAM2lB,gBAEnC,OAAO,OAGR,MAAOz9B,GAAAH,UAAM+5D,UAASh7D,KAAAU,KAAC25D,GAEzB,OAAAlC,IAtBoC6b,EAwBpC7zE,GAA+BJ,QAAtBo4D,InIornBN+b,4CAA4C,8CAA8CsB,iCAAiC,SAASv2E,EAAQkB,EAAOJ,GoIltnBtJ,GAAOutD,GAAOruD,EAAe,+BAC7B,IAAO6zE,GAAS7zE,EAAc,iCAC9B,IAAOw2E,GAASx2E,EAAc,kCAE9B,IAAOkkD,GAASlkD,EAAc,sCAC9B,IAAOonD,GAAepnD,EAAa,8CpIstnBnC,IoIjtnBMy2E,GAAI,WAAV,QAAMA,MAQSA,EAAAC,OAAd,SAAqB94C,GAEpB,SAAU,IAAU,WACnBA,EAAO,GAAIA,EAEZ,UAAU,IAAU,SACnB,MAAOA,EAER,OAAgBA,GAGH64C,GAAAE,UAAd,SAAwB/4C,GAEvB,SAAU,IAAU,WACnBA,EAAO,GAAIA,EAEZ,IAAIA,YAAgB44C,GACnB,MAAO54C,EAER,OAAmBA,GAcL64C,GAAAG,MAAf,SAAqB9uD,GAEpB,GAAI9mB,GAAwB8mB,EAAI9mB,MAChC,KAAK,GAAIP,GAAmB,EAAGA,EAAIO,IAAUP,EAAG,CAC/C,GAAIgB,KAAKo1E,UAAUt7D,QAAQuM,EAAIgvD,OAAOr2E,MAAQ,EAC7C,MAAO,OAGT,MAAO,MAGMg2E,GAAAM,SAAd,SAAuBn5C,GAEtB,SAAU,IAAU,SACnB,MAAO7kB,MAAKgK,MAAe6a,EAE5B,UAAU,IAAU,SAAU,CAC7B,GAAIA,GAAQ,SACX,MAAO7kB,MAAKgK,MAAMhK,KAAKi+D,SAAS,SAEjC,IAAIv1E,KAAKw1E,aAAe,KAAM,CAC7Bx1E,KAAKw1E,YAAc,GAAI70E,OACvBX,MAAKw1E,YAAY,aAAe,OAChCx1E,MAAKw1E,YAAY,aAAe,MAChCx1E,MAAKw1E,YAAY,kBAAoB,OACrCx1E,MAAKw1E,YAAY,kBAAoB,QACrCx1E,MAAKw1E,YAAY,mBAAqB,OACtCx1E,MAAKw1E,YAAY,aAAe,OAChCx1E,MAAKw1E,YAAY,iBAAmB,OACpCx1E,MAAKw1E,YAAY,gBAAkB,OACnCx1E,MAAKw1E,YAAY,QAAU,GAC3Bx1E,MAAKw1E,YAAY,YAAc,GAC/Bx1E,MAAKw1E,YAAY,cAAgB,GACjCx1E,MAAKw1E,YAAY,QAAU,GAC3Bx1E,MAAKw1E,YAAY,cAAgB,OACjCx1E,MAAKw1E,YAAY,eAAiB,KAClCx1E,MAAKw1E,YAAY,gBAAkB,OACnCx1E,MAAKw1E,YAAY,WAAa,OAC9Bx1E,MAAKw1E,YAAY,aAAe,QAChCx1E,MAAKw1E,YAAY,cAAgB,QACjCx1E,MAAKw1E,YAAY,SAAW,QAC5Bx1E,MAAKw1E,YAAY,aAAe,QAChCx1E,MAAKw1E,YAAY,iBAAmB,QACpCx1E,MAAKw1E,YAAY,mBAAqB,OACtCx1E,MAAKw1E,YAAY,iBAAmB,OACpCx1E,MAAKw1E,YAAY,YAAc,KAC/Bx1E,MAAKw1E,YAAY,QAAU,KAC3Bx1E,MAAKw1E,YAAY,aAAe,OAChCx1E,MAAKw1E,YAAY,iBAAmB,KACpCx1E,MAAKw1E,YAAY,QAAU,KAC3Bx1E,MAAKw1E,YAAY,QAAU,KAC3Bx1E,MAAKw1E,YAAY,aAAe,OAChCx1E,MAAKw1E,YAAY,cAAgB,OACjCx1E,MAAKw1E,YAAY,oBAAsB,OACvCx1E,MAAKw1E,YAAY,gBAAkB,OACnCx1E,MAAKw1E,YAAY,kBAAoB,OACrCx1E,MAAKw1E,YAAY,YAAc,OAC/Bx1E,MAAKw1E,YAAY,aAAe,KAChCx1E,MAAKw1E,YAAY,SAAW,KAC5Bx1E,MAAKw1E,YAAY,eAAiB,OAClCx1E,MAAKw1E,YAAY,aAAe,OAChCx1E,MAAKw1E,YAAY,QAAU,KAC3Bx1E,MAAKw1E,YAAY,cAAgB,OACjCx1E,MAAKw1E,YAAY,aAAe,OAChCx1E,MAAKw1E,YAAY,eAAiB,QAClCx1E,MAAKw1E,YAAY,eAAiB,QAClCx1E,MAAKw1E,YAAY,aAAe,QAChCx1E,MAAKw1E,YAAY,cAAgB,OACjCx1E,MAAKw1E,YAAY,eAAiB,KAClCx1E,MAAKw1E,YAAY,qBAAuB,KACxCx1E,MAAKw1E,YAAY,kBAAoB,OACrCx1E,MAAKw1E,YAAY,aAAe,OAChCx1E,MAAKw1E,YAAY,SAAW,OAC5Bx1E,MAAKw1E,YAAY,aAAe,QAChCx1E,MAAKw1E,YAAY,iBAAmB,QACpCx1E,MAAKw1E,YAAY,aAAe,QAChCx1E,MAAKw1E,YAAY,QAAU,QAC3Bx1E,MAAKw1E,YAAY,UAAY,QAC7Bx1E,MAAKw1E,YAAY,SAAW,QAC5Bx1E,MAAKw1E,YAAY,iBAAmB,QACpCx1E;KAAKw1E,YAAY,kBAAoB,QACrCx1E,MAAKw1E,YAAY,YAAc,QAC/Bx1E,MAAKw1E,YAAY,SAAW,QAC5Bx1E,MAAKw1E,YAAY,eAAiB,QAClCx1E,MAAKw1E,YAAY,aAAe,QAChCx1E,MAAKw1E,YAAY,OAAS,QAC1Bx1E,MAAKw1E,YAAY,aAAe,QAChCx1E,MAAKw1E,YAAY,UAAY,QAC7Bx1E,MAAKw1E,YAAY,eAAiB,OAClCx1E,MAAKw1E,YAAY,aAAe,QAChCx1E,MAAKw1E,YAAY,QAAU,QAC3Bx1E,MAAKw1E,YAAY,cAAgB,QACjCx1E,MAAKw1E,YAAY,WAAa,OAC9Bx1E,MAAKw1E,YAAY,UAAY,OAC7Bx1E,MAAKw1E,YAAY,SAAW,QAC5Bx1E,MAAKw1E,YAAY,aAAe,QAChCx1E,MAAKw1E,YAAY,aAAe,QAChCx1E,MAAKw1E,YAAY,cAAgB,QACjCx1E,MAAKw1E,YAAY,UAAY,QAC7Bx1E,MAAKw1E,YAAY,cAAgB,QACjCx1E,MAAKw1E,YAAY,eAAiB,QAClCx1E,MAAKw1E,YAAY,SAAW,QAC5Bx1E,MAAKw1E,YAAY,UAAY,QAC7Bx1E,MAAKw1E,YAAY,cAAgB,QACjCx1E,MAAKw1E,YAAY,UAAY,QAC7Bx1E,MAAKw1E,YAAY,aAAe,QAChCx1E,MAAKw1E,YAAY,WAAa,QAC9Bx1E,MAAKw1E,YAAY,OAAS,QAC1Bx1E,MAAKw1E,YAAY,YAAc,QAC/Bx1E,MAAKw1E,YAAY,WAAa,QAC9Bx1E,MAAKw1E,YAAY,WAAa,QAC9Bx1E,MAAKw1E,YAAY,WAAa,QAC9Bx1E,MAAKw1E,YAAY,aAAe,QAChCx1E,MAAKw1E,YAAY,QAAU,QAC3Bx1E,MAAKw1E,YAAY,iBAAmB,QACpCx1E,MAAKw1E,YAAY,mBAAqB,QACtCx1E,MAAKw1E,YAAY,UAAY,OAC7Bx1E,MAAKw1E,YAAY,eAAiB,OAClCx1E,MAAKw1E,YAAY,gBAAkB,OACnCx1E,MAAKw1E,YAAY,cAAgB,OACjCx1E,MAAKw1E,YAAY,UAAY,OAC7Bx1E,MAAKw1E,YAAY,cAAgB,OACjCx1E,MAAKw1E,YAAY,cAAgB,QACjCx1E,MAAKw1E,YAAY,gBAAkB,QACnCx1E,MAAKw1E,YAAY,UAAY,QAC7Bx1E,MAAKw1E,YAAY,UAAY,QAC7Bx1E,MAAKw1E,YAAY,QAAU,QAC3Bx1E,MAAKw1E,YAAY,WAAa,QAC9Bx1E,MAAKw1E,YAAY,YAAc,QAC/Bx1E,MAAKw1E,YAAY,cAAgB,QACjCx1E,MAAKw1E,YAAY,aAAe,QAChCx1E,MAAKw1E,YAAY,aAAe,QAChCx1E,MAAKw1E,YAAY,YAAc,QAC/Bx1E,MAAKw1E,YAAY,wBAA0B,QAC3Cx1E,MAAKw1E,YAAY,gBAAkB,QACnCx1E,MAAKw1E,YAAY,YAAc,QAC/Bx1E,MAAKw1E,YAAY,eAAiB,QAClCx1E,MAAKw1E,YAAY,SAAW,QAC5Bx1E,MAAKw1E,YAAY,eAAiB,QAClCx1E,MAAKw1E,YAAY,SAAW,QAC5Bx1E,MAAKw1E,YAAY,WAAa,QAC9Bx1E,MAAKw1E,YAAY,gBAAkB,QACnCx1E,MAAKw1E,YAAY,UAAY,QAC7Bx1E,MAAKw1E,YAAY,aAAe,QAChCx1E,MAAKw1E,YAAY,cAAgB,QACjCx1E,MAAKw1E,YAAY,SAAW,QAC5Bx1E,MAAKw1E,YAAY,YAAc,QAC/Bx1E,MAAKw1E,YAAY,iBAAmB,QACpCx1E,MAAKw1E,YAAY,aAAe,QAChCx1E,MAAKw1E,YAAY,QAAU,QAC3Bx1E,MAAKw1E,YAAY,SAAW,QAC5Bx1E,MAAKw1E,YAAY,cAAgB,QACjCx1E,MAAKw1E,YAAY,aAAe,QAChCx1E,MAAKw1E,YAAY,aAAe,QAChCx1E,MAAKw1E,YAAY,UAAY,QAC7Bx1E,MAAKw1E,YAAY,YAAc,QAC/Bx1E,MAAKw1E,YAAY,QAAU,OAC3Bx1E,MAAKw1E,YAAY,kBAAoB,OACrCx1E,MAAKw1E,YAAY,aAAe,OAChCx1E,MAAKw1E,YAAY,WAAa,OAC9Bx1E,MAAKw1E,YAAY,iBAAmB,OACpCx1E,MAAKw1E,YAAY,SAAW,CAC5Bx1E,MAAKw1E,YAAY,eAAiB,WAGnC,GAAIx1E,KAAKw1E,YAAYr5C,IAAS,KAC7B,MAAOn8B,MAAKw1E,YAAYr5C,EAEzB,IAAeA,EAAM58B,QAAU,GAAMS,KAAKm1E,MAAMh5C,GAC/C,MAAOs5C,UAAS,KAAOt5C,GAGzB,MAAO,MAGM64C,GAAAnrC,MAAd,SAAoB1N,GAEnB,GAAIgnB,GAAyBnjD,KAAKs1E,SAASn5C,EAE3C,IAAIgnB,GAAU,KACb,KAAM,IAAIV,GAAU,wBAA0BtmB,EAE/C,OAAOgnB,GAGM6xB,GAAAU,SAAd,SAAuBnlE,GAEtB,GAAIvQ,KAAK21E,YAAYplE,GACpB,MAAOA,EAER,IAAI4yC,GAAanjD,KAAK41E,SAASrlE,EAE/B,IAAI4yC,GAAU,KACb,MAAOA,EAER,KACCA,EAAS0yB,OAAOtlE,EAChBvQ,MAAK41E,SAASrlE,GAAQ4yC,CACtB,OAAOA,GACN,MAAO3kD,IAGTwB,KAAK21E,YAAYplE,GAAQ,IAEzB,OAAOA,GAGMykE,GAAA1hB,QAAd,SAAsBn3B,GAErB,GAAIA,GAAQ,KACX,MAAO,KAER,UAAU,IAAU,SACnBA,EAAOn8B,KAAK01E,SAASv5C,EAEtB,UAAU,IAAU,WAAY,CAC/B,IACCA,EAAO,GAAIA,GACV,MAAO39B,GACR29B,EAAO,GAAIA,GAAK,EAAG,IAIrB,GAAIA,YAAgBywB,GACnB,MAAOzwB,EAER,IAAIA,YAAgBwpB,GACnBxpB,EAA0BA,EAAM4yB,SAEjC,IAAI5yB,YAAgBi2C,GACnB,MAAoBj2C,GAAMm3B,OAE3B,MAAM,IAAI7Q,GAAU,gCAAkCtmB,GAGzC64C,GAAAc,cAAd,SAA4B35C,GAE3B,GAAIA,GAAQ,KACX,MAAO,KAER,UAAU,IAAU,SACnBA,EAAOn8B,KAAK01E,SAASv5C,EAEtB,UAAU,IAAU,WAAY,CAC/B,IACCA,EAAO,GAAIA,GACV,MAAO39B,GACR29B,EAAO,GAAIA,GAAK,EAAG,IAIrB,GAAIA,YAAgBwpB,GACnB,MAAOxpB,EAER,KACC,GAAI45C,GAAcf,EAAK1hB,QAAQn3B,EAC/B,OAAO,IAAIwpB,GAAgBowB,GAC1B,MAAOv3E,IAGT,KAAM,IAAIikD,GAAU,kCAAoCtmB,GA1S1C64C,GAAAI,UAAmB,wBAEnBJ,GAAAW,YAAqB,GAAIh1E,OACzBq0E,GAAAY,SAAkB,GAAIj1E,OAyStC,OAAAq0E,KAEAv1E,GAAcJ,QAAL21E,IpIyqnBN7nB,+BAA+B/rD,UAAUuxE,iCAAiCvxE,UAAU40E,kCAAkC50E,UAAUohD,sCAAsC,sCAAsC4E,8CAA8C,gDAAgD7hD,6CAA6C,SAAShH,EAAQkB,EAAOJ,GqIp+nBlX,GAAOmsE,GAAgBjtE,EAAa,8CAIpC,IAAOoD,GAAgBpD,EAAa,8CACpC,IAAOmD,GAAgBnD,EAAa,8CACpC,IAAO03E,GAAgB13E,EAAa,8CACpC,IAAOqiB,GAAeriB,EAAa,6CAEnC,IAAOkI,GAAQlI,EAAe,gCAC9B,IAAO2H,GAAG3H,EAAgB,2BAC1B,IAAO6H,GAAM7H,EAAe,8BAC5B,IAAOo3B,GAAUp3B,EAAc,mCAM/B,IAAMsD,GAAgB,WAAtB,QAAMA,MAUSA,EAAAuuB,oBAAd,SAAkC8lD,EAAkCC,EAAqCC,EAAyBxzE,EAAcY,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/I,GAAIW,GAAsB+xE,EAAgBr1E,IAAI+B,EAAOY,EACrD,IAAImB,GAAyBwxE,EAAmBt1E,IAAIs1E,EAAmBvzE,MAEvE,IAAIwzE,GAAU,KACbA,EAAS,GAAIH,GAAiBrzE,EAAQY,OAClC,IAAI4yE,EAAOxzE,MAAQA,EAAQY,EAC/B4yE,EAAOxzE,MAAQA,EAAQY,CAExB,IAAI6yE,GAAkBH,EAAgB7nD,UACtC,IAAIioD,GAAqBH,EAAmB9nD,UAE5C,IAAIkoD,GAA2BH,EAAOv1E,IAAI+B,EAAOY,EAGjDZ,IAASyzE,CAET,IAAIr3E,GAAW,CACf,IAAIqd,GAAW,CACf,IAAIxC,EAEJ,IAAI28D,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWC,CAC1B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIxkD,GAAWC,EAAWC,CAC1B,IAAI/yB,EAEJ,OAAOjB,EAAI4D,EAAO,CACjBiX,EAAQ1V,EAAQnF,KAAKs3E,CACrBE,GAAK7xE,EAAUkV,EACf88D,GAAKhyE,EAAUkV,EAAQ,EACvBi9D,GAAKnyE,EAAUkV,EAAQ,EACvBA,GAAQ1V,EAAQnF,KAAKs3E,CACrBG,GAAK9xE,EAAUkV,EACf+8D,GAAKjyE,EAAUkV,EAAQ,EACvBk9D,GAAKpyE,EAAUkV,EAAQ,EACvBA,GAAQ1V,EAAQnF,KAAKs3E,CACrBI,GAAK/xE,EAAUkV,EACfg9D,GAAKlyE,EAAUkV,EAAQ,EACvBm9D,GAAKryE,EAAUkV,EAAQ,EACvBo9D,GAAMP,EAAKF,CACXU,GAAML,EAAKF,CACXQ,GAAMH,EAAKF,CACXM,GAAMX,EAAKD,CACXa,GAAMT,EAAKD,CACXW,GAAMP,EAAKD,CACXhkD,GAAKqkD,EAAIE,EAAMH,EAAII,CACnBvkD,GAAKkkD,EAAIK,EAAMH,EAAIC,CACnBpkD,GAAKkkD,EAAIE,EAAMH,EAAII,CACnBp3E,GAAIqX,KAAKC,KAAKub,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EAGjCujD,GAAYl6D,KAAOyW,CACnByjD,GAAYl6D,KAAO0W,CACnBwjD,GAAYl6D,KAAO2W,CACnBujD,GAAYl6D,KAAOpc,EAGpBm2E,EAAOvzE,IAAI0zE,EAAa/yE,EAExB,OAAO4yE,GAGMv0E,GAAAstB,gBAAd,SAA8B+mD,EAAkCqB,EAAuCnB,EAAyBr0E,GAE/H,GAAIoC,GAAsB+xE,EAAgBr1E,IAAIq1E,EAAgBtzE,MAC9D,IAAI2zE,GAA2BgB,EAAqB12E,IAAI02E,EAAqB30E,MAE7E,IAAIwzE,GAAU,KACbA,EAAS,GAAI10E,GAAiBK,EAE/B,IAAIs0E,GAAkBH,EAAgB7nD,UACtC,IAAImpD,GAAmBpB,EAAO/nD,UAE9B,IAAIwB,GAAuBumD,EAAOv1E,IAAIu1E,EAAOxzE,MAE7C,IAAI5D,GAAW,CACf,IAAIiM,GAAamrE,EAAOxzE,MAAM40E,CAG9B,OAAOx4E,EAAIiM,EAAK,CACf4kB,EAAQ7wB,KAAO,CACf6wB,GAAQ7wB,KAAO,CACf6wB,GAAQ7wB,KAAO,EAGhBA,EAAI,CACJiM,GAAMirE,EAAgBtzE,MAAMyzE,CAC5B,IAAIx8D,EACJ,IAAI49D,GAAY,CAChB,IAAIC,GAAY,CAChB,IAAIC,GAAY,CAGhB,OAAO34E,EAAIiM,EAAK,CACf4O,EAAQ1V,EAAQnF,KAAKw4E,CACrB3nD,GAAQhW,IAAU08D,EAAYkB,EAC9B5nD,GAAQhW,EAAQ,IAAM08D,EAAYmB,EAClC7nD,GAAQhW,EAAQ,IAAM08D,EAAYoB,EAClC99D,GAAQ1V,EAAQnF,KAAKw4E,CACrB3nD,GAAQhW,IAAU08D,EAAYkB,EAC9B5nD,GAAQhW,EAAQ,IAAM08D,EAAYmB,EAClC7nD,GAAQhW,EAAQ,IAAM08D,EAAYoB,EAClC99D,GAAQ1V,EAAQnF,KAAKw4E,CACrB3nD,GAAQhW,IAAU08D,EAAYkB,EAC9B5nD,GAAQhW,EAAQ,IAAM08D,EAAYmB,EAClC7nD,GAAQhW,EAAQ,IAAM08D,EAAYoB,EAClCF,IAAM,CACNC,IAAM,CACNC,IAAM,EAGP34E,EAAI,CACJiM,GAAMmrE,EAAOxzE,MAAM40E,CACnB,IAAII,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAI73E,EAGJ,OAAOjB,EAAIiM,EAAK,CACf2sE,EAAK/nD,EAAQ7wB,EACb64E,GAAKhoD,EAAQ7wB,EAAI,EACjB84E,GAAKjoD,EAAQ7wB,EAAI,EACjBiB,GAAI,EAAIqX,KAAKC,KAAKqgE,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EAErCjoD,GAAQ7wB,KAAO44E,EAAG33E,CAClB4vB,GAAQ7wB,KAAO64E,EAAG53E,CAClB4vB,GAAQ7wB,KAAO84E,EAAG73E,EAGnBm2E,EAAOvzE,IAAIgtB,EAEX,OAAOumD,GAGMv0E,GAAAsuB,qBAAd,SAAmC+lD,EAAkCC,EAAqC4B,EAA+B3B,EAAyBxzE,EAAcY,EAAmBw0E,GAAnB,GAAAx0E,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAw0E,QAAA,GAA8B,CAA9BA,EAAA,MAElM,GAAI7zE,GAAsB+xE,EAAgBr1E,IAAI+B,EAAOY,EACrD,IAAImB,GAAyBwxE,EAAmBt1E,IAAIs1E,EAAmBvzE,MACvE,IAAIyB,GAAmB0zE,EAAal3E,IAAIk3E,EAAan1E,MAErD,IAAIwzE,GAAU,KACbA,EAAS,GAAI10E,GAAiBkB,EAAQY,OAClC,IAAI4yE,EAAOxzE,MAAQA,EAAQY,EAC/B4yE,EAAOxzE,MAAQA,EAAQY,CAExB,IAAI8yE,GAAqBH,EAAmB9nD,UAC5C,IAAI6xC,GAAe6X,EAAa1pD,UAChC,IAAIgoD,GAAkBH,EAAgB7nD,UAEtC,IAAI4pD,GAA4B7B,EAAOv1E,IAAI+B,EAAOY,EAElD,IAAIxE,GAAW,CACf,IAAIy4B,EACJ,IAAIC,EACJ,IAAIwgD,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,GAAWC,EAAWC,CAC1B,IAAIzB,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIxkD,GAAWC,EAAWC,CAG1BpwB,IAASyzE,CAET,OAAOr3E,EAAI4D,EAAO,CACjB60B,EAAStzB,EAAQnF,EACjB04B,GAASvzB,EAAQnF,EAAI,EACrBk5E,GAAS/zE,EAAQnF,EAAI,EAErBo5E,GAAK/zE,EAAIozB,EAAOyoC,EAAQ,EACxBmY,GAAMh0E,EAAIqzB,EAAOwoC,EAAQ,GAAKkY,CAC9BE,GAAMj0E,EAAI6zE,EAAOhY,EAAQ,GAAKkY,CAE9BD,GAAK1gD,EAAO6+C,CACZkC,GAAK7zE,EAAUwzE,EACfM,GAAK9zE,EAAUwzE,EAAK,EACpBO,GAAK/zE,EAAUwzE,EAAK,EACpBA,GAAKzgD,EAAO4+C,CACZW,GAAMtyE,EAAUwzE,GAAMK,CACtBtB,GAAMvyE,EAAUwzE,EAAK,GAAKM,CAC1BtB,GAAMxyE,EAAUwzE,EAAK,GAAKO,CAC1BP,GAAKD,EAAO5B,CACZc,GAAMzyE,EAAUwzE,GAAMK,CACtBnB,GAAM1yE,EAAUwzE,EAAK,GAAKM,CAC1BnB,GAAM3yE,EAAUwzE,EAAK,GAAKO,CAE1B5lD,GAAKwlD,EAAIrB,EAAMoB,EAAIjB,CACnBrkD,GAAKulD,EAAIpB,EAAMmB,EAAIhB,CACnBrkD,GAAKslD,EAAInB,EAAMkB,EAAIf,CACnBiB,GAAQ,EAAEjhE,KAAKC,KAAKub,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EAEvCilD,GAAaj5E,KAAOu5E,EAAMzlD,CAC1BmlD,GAAaj5E,KAAOu5E,EAAMxlD,CAC1BklD,GAAaj5E,KAAOu5E,EAAMvlD,EAG3BojD,EAAOvzE,IAAIo1E,EAAcz0E,EAEzB,OAAO4yE,GAGMv0E,GAAAutB,iBAAd,SAA+B8mD,EAAkCyC,EAAwCpB,EAAuCnB,EAAyBr0E,GAExK,GAAIoC,GAAsB+xE,EAAgBr1E,IAAIq1E,EAAgBtzE,MAC9D,IAAIq1E,GAA4BU,EAAsB93E,IAAI83E,EAAsB/1E,MAChF,IAAI2zE,GAA2BgB,EAAqB12E,IAAI02E,EAAqB30E,MAE7E,IAAIwzE,GAAU,KACbA,EAAS,GAAI10E,GAAiBK,EAE/B,IAAIs0E,GAAkBH,EAAgB7nD,UACtC,IAAImpD,GAAmBpB,EAAO/nD,UAE9B,IAAIyB,GAAwBsmD,EAAOv1E,IAAIu1E,EAAOxzE,MAE9C,IAAI5D,GAAW,CACf,IAAIiM,GAAamrE,EAAOxzE,MAAM40E,CAG9B,OAAOx4E,EAAIiM,EAAK,CACf6kB,EAAS9wB,KAAO,CAChB8wB,GAAS9wB,KAAO,CAChB8wB,GAAS9wB,KAAO,EAGjB,GAAI45E,EACJ,IAAI/+D,EACJ,IAAI49D,GAAY,CAChB,IAAIC,GAAY,CAChB,IAAIC,GAAY,CAChB,IAAIkB,GAAY,CAEhB75E,GAAI,CACJiM,GAAMirE,EAAgBtzE,MAAMyzE,CAG5B,OAAOr3E,EAAIiM,EAAK,CACf2tE,EAASrC,EAAYsC,EACrBh/D,GAAQ1V,EAAQnF,KAAKw4E,CACrB1nD,GAASjW,MAAYo+D,EAAaR,GAAImB,CACtC9oD,GAASjW,MAAYo+D,EAAaP,GAAIkB,CACtC9oD,GAASjW,IAAUo+D,EAAaN,GAAIiB,CACpC/+D,GAAQ1V,EAAQnF,KAAKw4E,CACrB1nD,GAASjW,MAAYo+D,EAAaR,GAAImB,CACtC9oD,GAASjW,MAAYo+D,EAAaP,GAAIkB,CACtC9oD,GAASjW,IAAUo+D,EAAaN,GAAIiB,CACpC/+D,GAAQ1V,EAAQnF,KAAKw4E,CACrB1nD,GAASjW,MAAYo+D,EAAaR,GAAImB,CACtC9oD,GAASjW,MAAYo+D,EAAaP,GAAIkB,CACtC9oD,GAASjW,IAAUo+D,EAAaN,GAAIiB,CACpCnB,IAAM,CACNC,IAAM,CACNC,IAAM,CACNkB,IAAM,EAGP75E,EAAI,CACJiM,GAAMmrE,EAAOxzE,MAAM40E,CACnB,IAAII,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAI73E,EAGJ,OAAOjB,EAAIiM,EAAK,CACf2sE,EAAK9nD,EAAS9wB,EACd64E,GAAK/nD,EAAS9wB,EAAI,EAClB84E,GAAKhoD,EAAS9wB,EAAI,EAClBiB,GAAI,EAAIqX,KAAKC,KAAKqgE,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EAErChoD,GAAS9wB,KAAO44E,EAAG33E,CACnB6vB,GAAS9wB,KAAO64E,EAAG53E,CACnB6vB,GAAS9wB,KAAO84E,EAAG73E,EAGpBm2E,EAAOvzE,IAAIitB,EAEX,OAAOsmD,GAIMv0E,GAAAkC,YAAd,SAA0BmyE,EAAkCE,EAAyBr0E,EAAqCa,EAAcY,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEvI,GAAI4yE,GAAU,KACbA,EAAS,GAAIz0E,GAAiBI,EAE/B,IAAIy1E,GAAmBpB,EAAO/nD,UAE9B,IAAIhqB,GAAmB+xE,EAAOv1E,IAAI+B,EAAOY,EAEzC,IAAIxE,GAAW,CACf,IAAIqd,GAAW,CACf,IAAIpR,GAAarI,EAAM40E,CAEvB,OAAOx4E,EAAIiM,EAAK,CACf5G,EAAIrF,KAAOqd,EAAE,EACbhY,GAAIrF,KAAO,GAAOqd,EAAI,EAEtB,MAAMA,GAAK,EACVA,EAAI,EAGN+5D,EAAOvzE,IAAIwB,EAAKb,EAEhB,OAAO4yE,GAGMv0E,GAAA4f,eAAd,SAA6By0D,EAAkCE,EAAwBr0E,EAAqCa,EAAcY,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEzI,GAAI4yE,GAAU,KACbA,EAAS,GAAIx1D,GAAgB7e,EAE9B,IAAI8X,GAAe,CACnB,IAAI0H,GAAoB,GAAIC,YAAW5e,EAAM,EAE7C,OAAOiX,EAAQjX,EAAM,EAAG,CACvB,GAAIiX,EAAM,EAAI,EAAG,CAChB0H,EAAO1H,GAAS,GAChB0H,GAAO1H,EAAQ,GAAK,GACpB0H,GAAO1H,EAAQ,GAAK,GACpB0H,GAAO1H,EAAQ,GAAK,QACd,CACN0H,EAAO1H,GAAS,GAChB0H,GAAO1H,EAAQ,GAAK,GACpB0H,GAAO1H,EAAQ,GAAK,GACpB0H,GAAO1H,EAAQ,GAAK,IAGrBA,GAAS,EAGVu8D,EAAOvzE,IAAI0e,EAAQ/d,EAEnB,OAAO4yE,GAGMv0E,GAAA4C,SAAd,SAAuBF,EAAeC,EAAe4xE,EAAyBxzE,EAAcY,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE3F,GAAI4yE,EAAOxzE,MAAQA,EAAQY,EAC1B4yE,EAAOxzE,MAAQA,EAAQY,CAExB,IAAIg0E,GAAmBpB,EAAO/nD,UAE9B,IAAIhqB,GAAmB+xE,EAAOv1E,IAAI+B,EAAOY,EAEzC,IAAIxE,GAAW,CACf,IAAIqd,GAAW,CACf,IAAIpR,GAAarI,EAAM40E,CAEvB,OAAOx4E,EAAIiM,EAAK,CACf5G,EAAIrF,MAAQuF,CACZF,GAAIrF,MAAQwF,EAGb4xE,EAAOvzE,IAAIwB,EAAKb,GAGH3B,GAAA6C,MAAd,SAAoBA,EAAc0xE,EAAyBxzE,EAAcY,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAExE,GAAI4yE,EAAOxzE,MAAQA,EAAQY,EAC1B4yE,EAAOxzE,MAAQA,EAAQY,CAExB,IAAIg0E,GAAmBpB,EAAO/nD,UAE9B,IAAI1pB,GAAyByxE,EAAOv1E,IAAI+B,EAAOY,EAE/C,IAAIxE,GAAW,CACf,IAAIqd,GAAW,CACf,IAAIpR,GAAarI,EAAM40E,CAEvB,OAAOx4E,EAAIiM,EAAK,CACftG,EAAU3F,MAAQ0F,CAClBC,GAAU3F,MAAQ0F,CAClBC,GAAU3F,MAAQ0F,EAGnB0xE,EAAOvzE,IAAI8B,EAAWnB,GAGT3B,GAAA+C,oBAAd,SAAkCC,EAAoBsxE,EAAqC2C,EAAmCC,EAAoCn2E,EAAcY,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/K,GAAImB,GAAyBwxE,EAAmBt1E,IAAI+B,EAAOY,EAC3D,IAAI8yE,GAAqBH,EAAmB9nD,UAE5C,IAAIwB,EACJ,IAAImpD,EAEJ,IAAIF,EAAkB,CACrBjpD,EAAUipD,EAAiBj4E,IAAI+B,EAAOY,EACtCw1E,GAAYF,EAAiBzqD,WAG9B,GAAIyB,EACJ,IAAImpD,EAEJ,IAAIF,EAAmB,CACtBjpD,EAAWipD,EAAkBl4E,IAAI+B,EAAOY,EACxCy1E,GAAaF,EAAkB1qD,WAGhC,GAAIrvB,EACJ,IAAIs/D,EACJ,IAAIC,EACJ,IAAI2a,GAAkB,GAAIzyE,EAC1B,IAAI0yE,EAEJ,IAAIL,GAAoBC,EAAmB,CAC1CI,EAAet0E,EAAUZ,OACzBk1E,GAAa3sE,QACb2sE,GAAaC,YAGd,GAAIC,GAAa,CACjB,IAAIC,GAAa,CACjB,IAAIC,GAAa,CAEjB,KAAKv6E,EAAI,EAAGA,EAAI4D,IAAS5D,EAAG,CAE3Bs/D,EAAK+a,EAAM,CACX9a,GAAK8a,EAAM,CACXH,GAAOztE,EAAI9G,EAAU00E,EACrBH,GAAOvtE,EAAIhH,EAAU25D,EACrB4a,GAAOrtE,EAAIlH,EAAU45D,EACrB2a,GAASr0E,EAAUuJ,gBAAgB8qE,EACnCv0E,GAAU00E,GAAOH,EAAOztE,CACxB9G,GAAU25D,GAAM4a,EAAOvtE,CACvBhH,GAAU45D,GAAM2a,EAAOrtE,CACvBwtE,IAAO/C,CAEP,IAAIzmD,EAAS,CAEZyuC,EAAKgb,EAAM,CACX/a,GAAK+a,EAAM,CACXJ,GAAOztE,EAAIokB,EAAQypD,EACnBJ,GAAOvtE,EAAIkkB,EAAQyuC,EACnB4a,GAAOrtE,EAAIgkB,EAAQ0uC,EACnB2a,GAASC,EAAa7wC,qBAAqB4wC,EAC3CA,GAAOpkE,WACP+a,GAAQypD,GAAOJ,EAAOztE,CACtBokB,GAAQyuC,GAAM4a,EAAOvtE,CACrBkkB,GAAQ0uC,GAAM2a,EAAOrtE,CACrBytE,IAAON,EAGR,GAAIlpD,EAAU,CAEbwuC,EAAKib,EAAM,CACXhb,GAAKgb,EAAM,CACXL,GAAOztE,EAAIqkB,EAASypD,EACpBL,GAAOvtE,EAAImkB,EAASwuC,EACpB4a,GAAOrtE,EAAIikB,EAASyuC,EACpB2a,GAASC,EAAa7wC,qBAAqB4wC,EAC3CA,GAAOpkE,WACPgb,GAASypD,GAAOL,EAAOztE,CACvBqkB,GAASwuC,GAAM4a,EAAOvtE,CACtBmkB,GAASyuC,GAAM2a,EAAOrtE,CACtB0tE,IAAON,GAIT9C,EAAmBtzE,IAAI8B,EAAWnB,EAElC,IAAIs1E,EACHA,EAAiBj2E,IAAIgtB,EAASrsB,EAE/B,IAAIu1E,EACHA,EAAkBl2E,IAAIitB,EAAUtsB,GAKpB3B,GAAA23E,cAAd,SAA4BtD,EAAgCx2B,EAAoB+5B,EAA6BC,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,EAE5G,GAAI35B,GAA0Bm2B,EAAgBn2B,MAC9C,IAAIogB,GAAoB+V,EAAgB32E,MAGxCk6E,GAAcl6E,OAAS,CAGvB,IAAI4gE,EAAat+D,EAAiB83E,eAAiBj6B,EAAc79C,EAAiB+3E,YACjF,MAAO75B,EAER,IAAI/gD,EACJ,IAAImF,GAAoC+xE,EAAgBr1E,IAAIq1E,EAAgBtzE,MAAO82E,EACnF,IAAIG,GAA6B,GAAIv3E,MACrC,IAAIw3E,GAA0Bj4E,EAAiBk4E,UAG/CD,GAAUv6E,OAAS4gE,CACnB,KAAKnhE,EAAI,EAAGA,EAAImhE,EAAYnhE,IAC3B86E,EAAU96E,IAAM,CAEjB,IAAIg7E,EACJ,IAAIC,EACJ,IAAIpgE,GAAe,CACnB,IAAIqgE,GAAsBR,EAAYxD,EAAgB7nD,UAItDrvB,GAAI,CACJ,OAAOA,EAAImhE,EAAa+Z,GAAgBl7E,EAAI,EAAI6C,EAAiB83E,eAAiB9/D,EAAQ,EAAIhY,EAAiB+3E,YAAa,CAC3HI,EAAgB71E,EAAQnF,EAExB,IAAI86E,EAAUE,IAAkB,EAAG,CAClCC,EAAaH,EAAUE,OACjB,CAGNC,EAAapgE,GACbigE,GAAUE,GAAiBC,CAC3BR,GAAcQ,GAAcD,EAK7BH,EAAa76E,KAAOi7E,EAGrBl6B,EAAS,GAAIyrB,GAAiB0K,EAAgB/4B,KAAK+4B,EAAgB7nD,WAAYwrD,EAAat6E,OAAO22E,EAAgB7nD,WAEnH6nD,GAAkBA,EAAgBjyE,MAAM87C,EACxCm2B,GAAgBrzE,IAAIg3E,EAEpB,OAAO95B,GAGMl+C,GAAAs4E,eAAd,SAA6BC,EAA+BX,GAE3D,IAAKA,EAAcl6E,OAClB,MAAO66E,EAER,IAAIC,GAAgBD,EAAaC,MAEjC,IAAIxuC,GAAsBuuC,EAAaE,UAEvC,IAAIC,GAAwB,GAAI/4D,YAAWi4D,EAAcl6E,OAAO86E,EAChE,IAAIJ,EACJ,IAAID,EACJ,IAAIh7E,GAAW,CACf,IAAIqd,GAAW,CACf,IAAIpR,GAAawuE,EAAcl6E,MAC/B,KAAKP,EAAI,EAAGA,EAAIiM,EAAKjM,IAAK,CACzBi7E,EAAaj7E,EAAEq7E,CACfL,GAAgBP,EAAcz6E,GAAGq7E,CAEjC,KAAKh+D,EAAI,EAAGA,EAAIg+D,EAAQh+D,IACvBk+D,EAAWN,EAAa59D,GAAKwvB,EAASmuC,EAAgB39D,GAGxD+9D,EAAe,GAAI5O,GAAiB6O,EAAQpvE,EAC5CmvE,GAAaE,WAAaC,CAE1B,OAAOH,GAKMv4E,GAAAy0C,qBAAd,SAAmC7qC,EAAUE,EAAUE,EAAU2uE,EAAiBna,GAEjF,GAAI8V,GAAsC9V,EAAiB17D,SAC3D,IAAI81E,GAAmCpa,EAAiBzgB,MACxD,IAAIh9C,GAAey9D,EAAiB3gB,WAEpC,IAAIugB,GAAgBkW,EAAmB9nD,UACvC,IAAIoyC,GAAkBga,EAAgBpsD,UAEtC,IAAI1pB,GAAyBwxE,EAAmBt1E,IAAI+B,EACpD,IAAIg9C,GAAsB66B,EAAgB55E,IAAI+B,EAE9C,IAAI89D,EACJ,IAAIC,EACJ,IAAIC,EAEJ,IAAI7pD,EACJ,IAAIC,EACJ,IAAI6pD,EACJ,IAAIC,EACJ,IAAIhuC,EACJ,IAAIC,EAEJ,IAAIlZ,GAAewmD,EAAiB99D,kBACpC,IAAGsX,IAAU,GAAKA,EAAQjX,EAC1B,CACC83E,EACA,CACCha,EAAM7mD,EAAQ,CACd8mD,GAAM9mD,EAAQ,CACd+mD,GAAM/mD,EAAQ,CAEd9C,GAAKpS,EAAU+7D,EAAMT,EACrBjpD,GAAKrS,EAAU+7D,EAAMT,EAAS,EAC9BY,GAAKl8D,EAAUg8D,EAAMV,EACrBa,GAAKn8D,EAAUg8D,EAAMV,EAAS,EAC9BntC,GAAKnuB,EAAUi8D,EAAMX,EACrBltC,GAAKpuB,EAAUi8D,EAAMX,EAAS,ErIq1nBlB,IqIh1nBRzqD,GAAYuB,EAAKtL,CACrB,IAAIgK,GAAYuB,EAAKrL,CrIk1nBT,IqI/0nBR6yD,GAAYsC,EAAK9pD,CACrB,IAAIynD,KAAcoC,EAAK9pD,ErIi1nBX,IqI70nBRiqD,GAAcxrD,EAAKgpD,EAAO/oD,EAAKgpD,CAEnC,IAAIuC,EAAM,EACT,KAAM0Z,EAEPllE,GAAKqrD,EAAKp1D,CACVgK,GAAKqrD,EAAKn1D,CACV6yD,GAAKzrC,EAAK+tC,CACVrC,KAAO3rC,EAAK+tC,EAEZG,GAAOxrD,EAAKgpD,EAAO/oD,EAAKgpD,CAExB,IAAIuC,EAAM,EACT,KAAM0Z,EAEPllE,GAAKsd,EAAKrnB,CACVgK,GAAKsd,EAAKpnB,CACV6yD,GAAKxnD,EAAK+b,CACV0rC,KAAO1nD,EAAK+b,EAEZkuC,GAAOxrD,EAAKgpD,EAAO/oD,EAAKgpD,CAExB,IAAIuC,EAAM,EACT,KAAM0Z,EAEP,IAAI3Z,GAAgBnhB,EAAO8gB,EAAMD,EAGjC,IAAIM,GAAU,EAAG,CAEhB,GAAIE,GAAaJ,EAAK9pD,CACtB,IAAImqD,GAAaJ,EAAK9pD,CACtB,IAAImqD,GAAaruC,EAAK/b,CACtB,IAAIqqD,GAAaruC,EAAK/b,CACtB,IAAIqqD,GAAa51D,EAAIsL,CACrB,IAAIuqD,GAAa31D,EAAIqL,CAErB,IAAIuqD,GAAaN,EAAMG,EAAMD,EAAMD,CACnC,IAAI/9B,IAAYk+B,EAAMD,EAAMD,EAAMG,GAAOC,CACzC,IAAI9iB,IAAYwiB,EAAMK,EAAMD,EAAMH,GAAOK,CrIq0nB1B,IqIj0nBXC,GAAY,GAAMr+B,EAAIsb,CAC1B,IAAIgjB,GAAYhjB,CAEhB,IAAIx+C,GAAWuhE,EAAKA,EAAKC,CAEzB,IAAIxqD,GAAYtS,EAAU+7D,EAAMT,EAAS,EACzC,IAAIhgE,EAAI,GAAKgX,IAAO,EAAG,CACtB,KAAMyjE,OACA,IAAIz6E,EAAI,GAAKgX,GAAM,EAAG,CAC5B,KAAMyjE,IAGR,MAAO,OAOT,GAAI93E,EAAQ,IAAK,CAChB,GAAIP,GAA6Bg+D,EAAiBh+D,KAClD,IAAIs4E,GAAmBt4E,EAAM9C,OAAQ8gE,EAAiBsa,UAAata,EAAiBsa,UAAYrjE,KAAKohB,IAAIphB,KAAKi6C,KAAKj6C,KAAKC,KAAK3U,IAAS,GACtI,IAAIg4E,GAAqBD,EAAUH,EAAYxrE,KAC/C,IAAI6rE,GAAqBF,EAAUH,EAAYzuE,MAC/C,IAAI+uE,GAAcN,EAAY/uE,CAC9B,IAAIsvE,GAAcP,EAAY7uE,CAE9B,KAAKtJ,EAAM9C,OAAQ,CAGlB8C,EAAM9C,OAASo7E,EAAYA,CAE3B,KAAI,GAAInyD,GAAW,EAAGA,EAAI5lB,EAAO4lB,GAAG,EAAG,CACtCk4C,EAAMl4C,EAAI,CACVm4C,GAAMn4C,EAAI,CACVo4C,GAAMp4C,EAAI,CAEVzR,GAAKpS,EAAU+7D,EAAMT,EACrBjpD,GAAKrS,EAAU+7D,EAAMT,EAAS,EAC9BY,GAAKl8D,EAAUg8D,EAAMV,EACrBa,GAAKn8D,EAAUg8D,EAAMV,EAAS,EAC9BntC,GAAKnuB,EAAUi8D,EAAMX,EACrBltC,GAAKpuB,EAAUi8D,EAAMX,EAAS,ErI6znBf,IqI1znBX+a,GAAqB1jE,KAAKgK,OAAOhK,KAAKohB,IAAI3hB,EAAI8pD,EAAI/tC,GAAMgoD,GAAMF,EAClE,IAAIK,GAAqB3jE,KAAKgK,OAAOhK,KAAKohB,IAAI1hB,EAAI8pD,EAAI/tC,GAAMgoD,GAAMF,EAElE,IAAIK,GAAqB5jE,KAAKgK,OAAOhK,KAAKqhB,IAAI5hB,EAAI8pD,EAAI/tC,GAAMgoD,GAAMF,EAClE,IAAIO,GAAqB7jE,KAAKgK,OAAOhK,KAAKqhB,IAAI3hB,EAAI8pD,EAAI/tC,GAAMgoD,GAAMF,EAGlE,KAAK,GAAI77E,GAAWg8E,EAAah8E,GAAKk8E,EAAal8E,IAAK,CACvD,IAAK,GAAIqd,GAAW4+D,EAAa5+D,GAAK8+D,EAAa9+D,IAAK,CACvD,GAAIxC,GAAe7a,EAAIqd,EAAEs+D,CACzB,IAAIS,IAAsB/4E,EAAMwX,KAAWxX,EAAMwX,GAAS,GAAIvX,OAG9D84E,IAAMzhE,KAAK+mD,EAAKC,EAAKC,MAMzB,GAAIya,IAAiB/jE,KAAKgK,OAAO7V,EAAIqvE,GAAMF,EAC3C,IAAIU,IAAiBhkE,KAAKgK,OAAO3V,EAAIovE,GAAMF,EAE3C,IAAKQ,GAAU,GAAKA,GAAUV,GAAaW,GAAU,GAAKA,GAAUX,EACnE,MAAO,MAER,IAAIS,IAAsB/4E,EAAMg5E,GAAUC,GAAQX,EAElD,IAAIS,IAAS,KACZ,MAAO,MAER,IAAIG,IAAmBH,GAAM77E,MAC7B,KAAK,GAAIipB,GAAW,EAAGA,EAAI+yD,GAAW/yD,GAAK,EAAG,CAC7Ck4C,EAAM0a,GAAM5yD,EACZm4C,GAAMya,GAAM5yD,EAAI,EAChBo4C,GAAMwa,GAAM5yD,EAAI,EAEhB,IAAGo4C,GAAO/mD,EAAO,QAEjB9C,GAAKpS,EAAU+7D,EAAMT,EACrBjpD,GAAKrS,EAAU+7D,EAAMT,EAAS,EAC9BY,GAAKl8D,EAAUg8D,EAAMV,EACrBa,GAAKn8D,EAAUg8D,EAAMV,EAAS,EAC9BntC,GAAKnuB,EAAUi8D,EAAMX,EACrBltC,GAAKpuB,EAAUi8D,EAAMX,EAAS,ErIkznBlB,IqI/ynBRzqD,GAAYuB,EAAKtL,CACrB,IAAIgK,GAAYuB,EAAKrL,CrIiznBT,IqI9ynBR6yD,GAAYsC,EAAK9pD,CACrB,IAAIynD,KAAcoC,EAAK9pD,EAEvB,IAAIiqD,GAAcxrD,EAAKgpD,EAAO/oD,EAAKgpD,CAEnC,IAAIuC,EAAM,EACT,QAEDxrD,GAAKqrD,EAAKp1D,CACVgK,GAAKqrD,EAAKn1D,CACV6yD,GAAKzrC,EAAK+tC,CACVrC,KAAO3rC,EAAK+tC,EAEZG,GAAOxrD,EAAKgpD,EAAO/oD,EAAKgpD,CAExB,IAAIuC,EAAM,EACT,QAEDxrD,GAAKsd,EAAKrnB,CACVgK,GAAKsd,EAAKpnB,CACV6yD,GAAKxnD,EAAK+b,CACV0rC,KAAO1nD,EAAK+b,EAEZkuC,GAAOxrD,EAAKgpD,EAAO/oD,EAAKgpD,CAExB,IAAIuC,EAAM,EACT,QAED,IAAID,GAAgBnhB,EAAO8gB,EAAMD,EAGjC,IAAIM,GAAU,EAAG,CAEhB,GAAIE,GAAaJ,EAAK9pD,CACtB,IAAImqD,GAAaJ,EAAK9pD,CACtB,IAAImqD,GAAaruC,EAAK/b,CACtB,IAAIqqD,GAAaruC,EAAK/b,CACtB,IAAIqqD,GAAa51D,EAAIsL,CACrB,IAAIuqD,GAAa31D,EAAIqL,CAErB,IAAIuqD,GAAaN,EAAMG,EAAMD,EAAMD,CACnC,IAAI/9B,IAAYk+B,EAAMD,EAAMD,EAAMG,GAAOC,CACzC,IAAI9iB,IAAYwiB,EAAMK,EAAMD,EAAMH,GAAOK,CrIqynB1B,IqIjynBXC,GAAY,GAAMr+B,EAAIsb,CAC1B,IAAIgjB,GAAYhjB,CAEhB,IAAIx+C,GAAWuhE,EAAKA,EAAKC,CACzB,IAAIxqD,GAAYtS,EAAU+7D,EAAMT,EAAS,EAEzC,IAAIhgE,EAAI,GAAKgX,IAAO,EACnB,aACI,IAAIhX,EAAI,GAAKgX,GAAM,EACvB,SAEFopD,EAAiB99D,mBAAqBq+D,CACtC,OAAO,MAER,MAAO,OAIR,IAAI,GAAIp4C,GAAW,EAAGA,EAAI5lB,EAAO4lB,GAAK,EAAG,CACxCk4C,EAAMl4C,EAAI,CACVm4C,GAAMn4C,EAAI,CACVo4C,GAAMp4C,EAAI,CAEV,IAAGo4C,GAAO/mD,EAAO,QAEjB9C,GAAKpS,EAAU+7D,EAAMT,EACrBjpD,GAAKrS,EAAU+7D,EAAMT,EAAS,EAC9BY,GAAKl8D,EAAUg8D,EAAMV,EACrBa,GAAKn8D,EAAUg8D,EAAMV,EAAS,EAC9BntC,GAAKnuB,EAAUi8D,EAAMX,EACrBltC,GAAKpuB,EAAUi8D,EAAMX,EAAS,ErI+xnBrB,IqI1xnBLzqD,GAAYuB,EAAKtL,CACrB,IAAIgK,GAAYuB,EAAKrL,CrI4xnBZ,IqIzxnBL6yD,GAAYsC,EAAK9pD,CACrB,IAAIynD,KAAcoC,EAAK9pD,ErI2xnBd,IqIvxnBLiqD,GAAcxrD,EAAKgpD,EAAO/oD,EAAKgpD,CAEnC,IAAIuC,EAAM,EACT,QAEDxrD,GAAKqrD,EAAKp1D,CACVgK,GAAKqrD,EAAKn1D,CACV6yD,GAAKzrC,EAAK+tC,CACVrC,KAAO3rC,EAAK+tC,EAEZG,GAAOxrD,EAAKgpD,EAAO/oD,EAAKgpD,CAExB,IAAIuC,EAAM,EACT,QAEDxrD,GAAKsd,EAAKrnB,CACVgK,GAAKsd,EAAKpnB,CACV6yD,GAAKxnD,EAAK+b,CACV0rC,KAAO1nD,EAAK+b,EAEZkuC,GAAOxrD,EAAKgpD,EAAO/oD,EAAKgpD,CAExB,IAAIuC,EAAM,EACT,QAED,IAAID,GAAgBnhB,EAAO8gB,EAAMD,EAGjC,IAAIM,GAAU,EAAG,CAEhB,GAAIE,GAAaJ,EAAK9pD,CACtB,IAAImqD,GAAaJ,EAAK9pD,CACtB,IAAImqD,GAAaruC,EAAK/b,CACtB,IAAIqqD,GAAaruC,EAAK/b,CACtB,IAAIqqD,GAAa51D,EAAIsL,CACrB,IAAIuqD,GAAa31D,EAAIqL,CAErB,IAAIuqD,GAAaN,EAAMG,EAAMD,EAAMD,CACnC,IAAI/9B,IAAYk+B,EAAMD,EAAMD,EAAMG,GAAOC,CACzC,IAAI9iB,IAAYwiB,EAAMK,EAAMD,EAAMH,GAAOK,CrI+wnB7B,IqI3wnBRC,GAAY,GAAMr+B,EAAIsb,CAC1B,IAAIgjB,GAAYhjB,CAEhB,IAAIx+C,GAAWuhE,EAAKA,EAAKC,CAEzB,IAAIxqD,GAAYtS,EAAU+7D,EAAMT,EAAS,EACzC,IAAIhgE,EAAI,GAAKgX,IAAO,EAAG,CACtB,aACM,IAAIhX,EAAI,GAAKgX,GAAM,EAAG,CAC5B,UAGFopD,EAAiB99D,mBAAqBq+D,CACtC,OAAO,MAER,MAAO,OAGM/+D,GAAAsB,0BAAd,SAAwCgzE,EAAqCC,EAAYxzE,EAAcY,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEtG,GAAImB,GAAyBwxE,EAAmBt1E,IAAI+B,EAAOY,EAC3D,IAAIy8D,GAAgBkW,EAAmB9nD,UACvC,IAAImtD,GAAiBvb,EAAO,CAE5B,IAAImW,GAAU,KACbA,EAAS,GAAIlwE,EAEd,IAAIyvB,EAAWgC,KAAM,CACpB,GAAIC,GAAQD,KAAKE,WAAaF,KAAKG,SACnC,IAAI2jD,GAAQ7jD,EAAM8jD,QAAU9jD,EAAM6jD,KAClC,IAAIE,GAAS/jD,EAAMgkD,SAAWhkD,EAAM+jD,MACpC,IAAIx7E,EACJ,IAAIu4B,GAAMd,EAAMikD,QAAQJ,EAAMrF,EAAOlnE,QAAS,GAAI,EAAG,EAAG,EAAG,EAC3D,IAAIypB,GAAMf,EAAMa,IAAIb,EAAMikD,QAAQJ,EAAMrF,EAAOlnE,QAAS,GAAI,EAAG,EAAG,EAAG,GAAIwpB,EAEzE,IAAIztB,GAAatG,EAAUpF,MAC3B,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,EAAKjM,GAAKw8E,EAAS,CAC7Cr7E,EAAKnB,EAAIihE,GAAUh1D,EAAMwwE,EAAM92E,EAAW3F,GAAK44B,EAAMkkD,QAAQL,EAAM92E,EAAW3F,GAAIy8E,EAAM92E,EAAW3F,EAAIihE,GAAS,EAAG,EAAG,EAAG,EACzHvnC,GAAMd,EAAMc,IAAIv4B,EAAGu4B,EACnBC,GAAMf,EAAMe,IAAIx4B,EAAGw4B,GAGpBD,EAAMd,EAAMc,IAAIA,EAAKd,EAAMikD,QAAQnjD,EAAK,EAAG,EAAG,EAAG,GACjDC,GAAMf,EAAMe,IAAIA,EAAKf,EAAMikD,QAAQljD,EAAK,EAAG,EAAG,EAAG,GACjDgjD,GAAOvF,EAAOlnE,QAAS,EAAG0oB,EAAMgB,IAAID,EAAKgjD,EAAOvF,EAAOlnE,QAAS,EAAGwpB,SAC7D,CACN,GAAIG,GAAMC,EAAME,EAAMC,CAEtBD,GAAOo9C,EAAOpnE,OAAS6pB,EAAOu9C,EAAO3qE,EACrCwtB,GAAOm9C,EAAOrqE,QAAU+sB,EAAOs9C,EAAOzqE,EAEtC,IAAIV,GAAatG,EAAUpF,MAC3B,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,EAAKjM,GAAKihE,EAAQ,CAC5C9/D,EAAIwE,EAAU3F,EACd,IAAImB,EAAI04B,EACPA,EAAO14B,MACH,IAAIA,EAAI64B,EACZA,EAAO74B,CAERA,GAAIwE,EAAU3F,EAAI,EAElB,IAAImB,EAAI24B,EACPA,EAAO34B,MACH,IAAIA,EAAI84B,EACZA,EAAO94B,EAGTi2E,EAAOpnE,MAAQgqB,GAAQo9C,EAAO3qE,EAAIotB,EAClCu9C,GAAOrqE,OAASktB,GAAQm9C,EAAOzqE,EAAImtB,GAGpC,MAAOs9C,GAIMv0E,GAAAotB,6BAAd,SAA2CknD,EAAqCC,EAAYxzE,EAAcY,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEzG,GAAImB,GAAyBwxE,EAAmBt1E,IAAI+B,EAAOY,EAC3D,IAAIy8D,GAAgBkW,EAAmB9nD,UAEvC,IAAI+nD,GAAU,KACbA,EAAS,GAAIlwE,EAEd,IAAIyxB,KAAM,CACT,GAAIC,GAAQD,KAAKE,WAAaF,KAAKG,SACnC,IAAIC,GAAOH,EAAMI,SAAWJ,EAAMK,KAClC,IAAIC,GAAQN,EAAMO,UAAYP,EAAMQ,MACpC,IAAIj4B,EACJ,IAAIu4B,GAAMX,EAAKq+C,EAAOlnE,QAAS,EAC/B,IAAIypB,GAAMf,EAAMa,IAAIV,EAAKq+C,EAAOlnE,QAAS,GAAIwpB,EAE7C,IAAIztB,GAAatG,EAAUpF,MAC3B,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,EAAKjM,GAAKihE,EAAQ,CAC5C9/D,EAAI43B,EAAKpzB,EAAW3F,EACpB05B,GAAMd,EAAMc,IAAIv4B,EAAGu4B,EACnBC,GAAMf,EAAMe,IAAIx4B,EAAGw4B,GAGpBT,EAAMk+C,EAAOlnE,QAAS,EAAG0oB,EAAMgB,IAAID,EAAKT,EAAMk+C,EAAOlnE,QAAS,EAAGwpB,SAC3D,CACN,GAAI3mB,EACJ,IAAI8mB,GAAcu9C,EAAO3qE,CACzB,IAAIqtB,GAAcs9C,EAAOzqE,CACzB,IAAIotB,GAAcq9C,EAAOvqE,CACzB,IAAImtB,GAAco9C,EAAOpnE,MAAQ6pB,CACjC,IAAII,GAAcm9C,EAAOrqE,OAAS+sB,CAClC,IAAII,GAAck9C,EAAOhrE,MAAQ2tB,CAEjC,IAAI9tB,GAAatG,EAAUpF,MAC3B,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,EAAKjM,GAAKihE,EAAQ,CAC5CluD,EAAMpN,EAAU3F,EAChB,IAAI+S,EAAM8mB,EACTA,EAAO9mB,MACH,IAAIA,EAAMinB,EACdA,EAAOjnB,CAERA,GAAMpN,EAAU3F,EAAI,EAEpB,IAAI+S,EAAM+mB,EACTA,EAAO/mB,MACH,IAAIA,EAAMknB,EACdA,EAAOlnB,CAERA,GAAMpN,EAAU3F,EAAI,EAEpB,IAAI+S,EAAMgnB,EACTA,EAAOhnB,MACH,IAAIA,EAAMmnB,EACdA,EAAOnnB,EAGTqkE,EAAOpnE,MAAQgqB,GAAQo9C,EAAO3qE,EAAIotB,EAClCu9C,GAAOrqE,OAASktB,GAAQm9C,EAAOzqE,EAAImtB,EACnCs9C,GAAOhrE,MAAQ8tB,GAAQk9C,EAAOvqE,EAAIktB,GAGnC,MAAOq9C,GAGMv0E,GAAAqtB,gCAAd,SAA8CinD,EAAqC9yE,EAAiB+yE,EAAexzE,EAAcY,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEhI,GAAImB,GAAyBwxE,EAAmBt1E,IAAI+B,EAAOY,EAC3D,IAAIy8D,GAAgBkW,EAAmB9nD,UAEvC,IAAI+nD,GAAU,KACbA,EAAS,GAAIhwE,EAEd,IAAI21E,GAA0B,CAC9B,IAAIC,EACJ,IAAIpkD,GAAQD,KAAKE,WAAaF,KAAKG,SACnC,IAAIC,GAAOH,EAAMI,SAAWJ,EAAMqkD,OAClC,IAAI/jD,GAAQN,EAAMO,UAAYP,EAAMskD,QACpC,IAAIxqD,GAAIkG,EAAMv0B,EAAOoI,EAAGpI,EAAOsI,EAAGtI,EAAOwI,EAAG,EAC5C,IAAI5L,EACJ,IAAIk8E,GAAoBt6E,EAAiBu6E,aAEzC,IAAInxE,GAAatG,EAAUpF,MAC3B,KAAK,GAAIP,GAAW,EAAGA,EAAIiM,EAAKjM,GAAKihE,EAAQ,CAC5ChgE,EAAI23B,EAAMgB,IAAIb,EAAKpzB,EAAW3F,GAAI0yB,EAClCwG,GAAMikD,EAAM,EAAGvkD,EAAMykD,IAAIp8E,EAAGA,GAE5B+7E,GAAgBG,EAAK,GAAGA,EAAK,GAAKA,EAAK,GAAGA,EAAK,GAAKA,EAAK,GAAGA,EAAK,EAEjE,IAAIJ,EAAmBC,EACtBD,EAAmBC,EAGrB5F,EAAO3qE,EAAIpI,EAAOoI,CAClB2qE,GAAOzqE,EAAItI,EAAOsI,CAClByqE,GAAOvqE,EAAIxI,EAAOwI,CAClBuqE,GAAOthD,OAASxd,KAAKC,KAAKwkE,EAE1B,OAAO3F,GA7iCOv0E,GAAAu6E,cAA6B,GAAIr7D,cAAa,EAE9Clf,GAAA+3E,YAAqB,KAErB/3E,GAAA83E,cAAuB,QAEvB93E,GAAAk4E,WAA2B,GAAIz3E,MA0iC/C,OAAAT,KAEApC,GAA0BJ,QAAjBwC,IrIivnBNqqE,8CAA8C9qE,UAAUwgB,6CAA6CxgB,UAAUgE,8CAA8ChE,UAAUiE,8CAA8CjE,UAAUk7E,8CAA8Cl7E,UAAUkb,2BAA2Blb,UAAUwb,8BAA8Bxb,UAAUyb,gCAAgCzb,UAAU04B,mCAAmC14B,YAAYm7E,yCAAyC,SAASh+E,EAAQkB,EAAOJ",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.CurveSubGeometry\n */\nclass CurveSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _uvsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _curves:Float2Attributes;\n\tprivate _uvs:Float2Attributes;\n\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\t//used for hittesting geometry\n\tpublic cells:Array<Array<number>> = new Array<Array<number>>();\n\tpublic lastCollisionIndex:number = -1;\n\tpublic divisions:number;\n\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubGeometry.assetType;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis._uvsDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get curves():Float2Attributes\n\t{\n\t\treturn this._curves;\n\t}\n\n\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\treturn SubGeometryUtils.getCurveGeometryBoxBounds(this._positions, target, this._numVertices);\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\t//TODO bounding calculations for triangles\n\t\treturn target;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setCurves(array:Array<number>, offset?:number);\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setCurves(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._curves)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._curves.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._curves);\n\n\t\tthis._verticesDirty[this._curves.id] = false;\n\t}\n\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._curves.dispose();\n\t\tthis._curves = null;\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CurveSubGeometry\n\t{\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.CurveSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.CurveSubMesh\n */\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\n\n\tprivate _subGeometry:CurveSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t */\n\tpublic get subGeometry():CurveSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new CurveSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\n\t * @param material An optional material used to render this CurveSubMesh.\n\t */\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IDisplayObjectAdapter\t\t= require(\"awayjs-display/lib/adapters/IDisplayObjectAdapter\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\n{\n\tpublic _iIsRoot:boolean;\n\tpublic _adapter:IDisplayObjectAdapter;\n\tprivate _queuedEvents:Array<Event> = new Array<Event>();\n\tpublic _elementsDirty:boolean;\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\tpublic _pName:string;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pIsEntity:boolean = false;\n\tpublic _pIsContainer:boolean = false;\n\tpublic _sessionID:number = -1;\n\tpublic _depthID:number = -16384;\n\n\tprivate _explicitPartition:PartitionBase;\n\tpublic _pImplicitPartition:PartitionBase;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _sceneChanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean;\n\tprivate _explicitVisibility:boolean = true;\n\tprivate _explicitMaskId:number = -1;\n\tprivate _explicitMasks:Array<DisplayObject>;\n\tpublic _pImplicitVisibility:boolean = true;\n\tpublic _pImplicitMaskId:number = -1;\n\tpublic _pImplicitMasks:Array<Array<DisplayObject>>;\n\tpublic _pImplicitMaskIds:Array<Array<number>> = new Array<Array<number>>();\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tprivate _explicitColorTransform:ColorTransform;\n\tpublic _pImplicitColorTransform:ColorTransform = new ColorTransform();\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _positionDirty:boolean;\n\tprivate _rotationDirty:boolean;\n\tprivate _skewDirty:boolean;\n\tprivate _scaleDirty:boolean;\n\n\tprivate _positionChanged:DisplayObjectEvent;\n\tprivate _rotationChanged:DisplayObjectEvent;\n\tprivate _skewChanged:DisplayObjectEvent;\n\tprivate _scaleChanged:DisplayObjectEvent;\n\n\tprivate _rotationX:number = 0;\n\tprivate _rotationY:number = 0;\n\tprivate _rotationZ:number = 0;\n\tprivate _eulers:Vector3D = new Vector3D();\n\tprivate _flipY:Matrix3D = new Matrix3D();\n\n\tprivate _listenToPositionChanged:boolean;\n\tprivate _listenToRotationChanged:boolean;\n\tprivate _listenToSkewChanged:boolean;\n\tprivate _listenToScaleChanged:boolean;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tprivate _skewX:number = 0;\n\tprivate _skewY:number = 0;\n\tprivate _skewZ:number = 0;\n\tprivate _scaleX:number = 1;\n\tprivate _scaleY:number = 1;\n\tprivate _scaleZ:number = 1;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _pivot:Vector3D = new Vector3D();\n\tprivate _pivotScale:Vector3D = new Vector3D();\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pivotZero:boolean = true;\n\tprivate _pivotDirty:boolean;\n\tprivate _pos:Vector3D = new Vector3D();\n\tprivate _rot:Vector3D = new Vector3D();\n\tprivate _ske:Vector3D = new Vector3D();\n\tprivate _sca:Vector3D = new Vector3D();\n\tprivate _transformComponents:Array<Vector3D>;\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _boundsType:string;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n    private _inheritColorTransform:boolean = false;\n\tprivate _maskMode:boolean = false;\n\n\tpublic _hierarchicalPropsDirty:number;\n\n\t//temp vector used in global to local\n\tprivate _tempVector3D:Vector3D = new Vector3D();\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IDisplayObjectAdapter\n\t{\n\t\treturn this._adapter;\n\t}\n\n\tpublic set adapter(value:IDisplayObjectAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    public get inheritColorTransform():boolean\n    {\n        return this._inheritColorTransform;\n    }\n\n    public set inheritColorTransform(value:boolean)\n    {\n\t\tif (this._inheritColorTransform == value)\n\t\t\treturn;\n\n        this._inheritColorTransform = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n    }\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic get alpha():number\n    {\n        return this._explicitColorTransform? this._explicitColorTransform.alphaMultiplier : 1;\n    }\n\n    public set alpha(value:number)\n    {\n\t\tif (!this._explicitColorTransform)\n\t\t\tthis._iColorTransform = new ColorTransform();\n\n        this._explicitColorTransform.alphaMultiplier = value;\n    }\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].updateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this.scaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._setScaleZ(val/this.getBox().depth);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tthis._eulers.x = this.rotationX;\n\t\tthis._eulers.y = this.rotationY;\n\t\tthis._eulers.z = this.rotationZ;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis.rotationX = value.x;\n\t\tthis.rotationY = value.y;\n\t\tthis.rotationZ = value.z;\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this.scaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._setScaleY(val/this.getBox().height);\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isContainer()\n\t{\n\t\treturn this._pIsContainer;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\tpublic get maskMode():boolean\n\t{\n\t\treturn this._maskMode;\n\t}\n\n\tpublic set maskMode(value:boolean)\n\t{\n\t\tif (this._maskMode == value)\n\t\t\treturn;\n\n\t\tthis._maskMode = value;\n\n\t\tthis._explicitMaskId = value? this.id : -1;\n\n\t\tthis._updateMaskMode();\n\t}\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic get name() :string\n    {\n        return this._pName;\n    }\n\n    public set name(value : string)\n    {\n        this._pName = value;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():PartitionBase\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:PartitionBase)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._iSetScene(this._pScene, this._pParent? this._pParent._iAssignedPartition : null);\n\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.PARTITION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tif (this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\n\t\t\treturn;\n\n\t\tthis._pivot.x = pivot.x;\n\t\tthis._pivot.y = pivot.y;\n\t\tthis._pivot.z = pivot.z;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleX;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tthis._setScaleX(val);\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleY;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tthis._setScaleY(val);\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleZ;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tthis._setScaleZ(val);\n\t}\n\n\t/**\n\t * Indicates the horizontal skew(angle) of the object as applied from\n\t * the registration point. The default registration point is(0,0).\n\t */\n\tpublic get skewX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewX;\n\t}\n\n\tpublic set skewX(val:number)\n\t{\n\t\tif (this.skewX == val)\n\t\t\treturn;\n\n\t\tthis._skewX = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the vertical skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewY;\n\t}\n\n\tpublic set skewY(val:number)\n\t{\n\t\tif (this.skewY == val)\n\t\t\treturn;\n\n\t\tthis._skewY = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the depth skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewZ;\n\t}\n\n\tpublic set skewZ(val:number)\n\t{\n\t\tif (this.skewZ == val)\n\t\t\treturn;\n\n\t\tthis._skewZ = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.VISIBLE);\n\t}\n\n\tpublic get masks():Array<DisplayObject>\n\t{\n\t\treturn this._explicitMasks;\n\t}\n\n\tpublic set masks(value:Array<DisplayObject>)\n\t{\n\t\tif (this._explicitMasks == value)\n\t\t\treturn;\n\n\t\tthis._explicitMasks = value;\n\n\t\t//make sure maskMode is set to true for all masks\n\t\tif (value != null && value.length) {\n\t\t\tvar len:number = value.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tvalue[i].maskMode = true;\n\t\t}\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASKS);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this.scaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._setScaleX(val/this.getBox().width);\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._x == val)\n\t\t\treturn;\n\n\t\tthis._x = this._matrix3D.rawData[12] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._y == val)\n\t\t\treturn;\n\n\t\tthis._y = this._matrix3D.rawData[13] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._z == val)\n\t\t\treturn;\n\n\t\tthis._z = this._matrix3D.rawData[14] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic zOffset:number = 0;\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n\t\tthis._transformComponents = new Array<Vector3D>(4);\n\n\t\tthis._transformComponents[0] = this._pos;\n\t\tthis._transformComponents[1] = this._rot;\n\t\tthis._transformComponents[2] = this._ske;\n\t\tthis._transformComponents[3] = this._sca;\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform(this);\n\n\t\tthis._matrix3D.identity();\n\n\t\tthis._flipY.appendScale(1, -1, 1);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar newInstance:DisplayObject = new DisplayObject();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObject)\n\t{\n\t\tnewInstance.partition = this._explicitPartition;\n\t\tnewInstance.boundsType = this._boundsType;\n\t\tnewInstance.pivot = this._pivot;\n\t\tnewInstance.name = this._pName;\n\t\tnewInstance.mouseEnabled = this._explicitMouseEnabled;\n\t\tnewInstance.extra = this.extra;\n\t\tnewInstance.maskMode = this._maskMode;\n\n\t\tif (this._explicitMasks)\n\t\t\tnewInstance.masks = this._explicitMasks;\n\n\t\tnewInstance._iMatrix3D = this._iMatrix3D;\n\n\t\tif (this._adapter)\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\n\n\t\tif (this._transform.colorTransform)\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this._pParent)\n\t\t\tthis._pParent.removeChild(this);\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\t//scale updates if absolute dimensions are detected\n\t\t\tif (this._width != null)\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\n\n\t\t\tif (this._height != null)\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\n\n\t\t\tif (this._depth != null)\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\n\t\t}\n\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\n\t\t\treturn this._pBoxBounds;\n\n\t\tif (targetCoordinateSpace == this._pParent)\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\n\t\telse\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid)\n\t\t\tthis._pUpdateSphereBounds();\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\tvar objBox:Box = obj.getBox();\n\t\tif(!objBox) return false;\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\n\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n\n\t\tvar box:Box = this.getBox();\n\t\tif(!box) return false;\n\n\t\t//first check all points against targer box\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\n\n\t\t//now test against obj box\n\t\tvar n0x:number = topRight.y - topLeft.y;\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\n\n\t\tvar n1x:number = bottomRight.y - topRight.y;\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\n\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\n\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\n\n\t\tvar p0x:number = box.left - topLeft.x;\n\t\tvar p0y:number = box.top - topLeft.y;\n\t\tvar p1x:number = box.left - topRight.x;\n\t\tvar p1y:number = box.top - topRight.y;\n\t\tvar p2x:number = box.left - bottomRight.x;\n\t\tvar p2y:number = box.top - bottomRight.y;\n\t\tvar p3x:number = box.left - bottomLeft.x;\n\t\tvar p3y:number = box.top - bottomLeft.y;\n\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.top - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.top - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.top - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.top - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.left - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.left - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.left - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.left - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @param maskFlag Whether to check against the object when it is used as mask\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\n\t{\n\t\treturn false;\n\t}\n\n\tpublic isMask():boolean\n\t{\n\t\treturn this._explicitMaskId == -1;\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Float32Array;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\n\t\t\treturn;\n\n\t\tthis.x = dx;\n\t\tthis.y = dy;\n\t\tthis.z = dz;\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (dx == 0 && dy == 0 && dz == 0)\n\t\t\treturn;\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\tpublic reset():void\n\t{\n\t\tthis.visible = true;\n\n\t\tif(this._iMatrix3D)\n\t\t\tthis._iMatrix3D.identity();\n\n\t\tif(this._iColorTransform)\n\t\t\tthis._iColorTransform.clear();\n\n\t\t//this.name=\"\";\n\t\tthis.masks = null;\n\n\t\tthis.maskMode = false;\n\t}\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[3];\n\t\t\tcomps[0] = this.scenePosition;\n\t\t\tscale.x = this.scaleX;\n\t\t\tscale.y = this.scaleY;\n\t\t\tscale.z = this.scaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.prependRotation(angle, axis);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX += vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY += vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ += vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tthis.rotationX = ax;\n\t\tthis.rotationY = ay;\n\t\tthis.rotationZ = az;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = false;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.x += x*len;\n\t\tthis.y += y*len;\n\t\tthis.z += z*len;\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\n\n\t\tthis.x = this._pos.x;\n\t\tthis.y = this._pos.y;\n\t\tthis.z = this._pos.z;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():PartitionBase\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @internal\n\t */\n\tpublic get _iMatrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._pUpdateMatrix3D();\n\n\t\tif (this._pivotDirty)\n\t\t\tthis._pUpdatePivot();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set _iMatrix3D(val:Matrix3D)\n\t{\n\t\tfor (var i:number = 0; i < 12; i++)\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\n\n\t\tthis.x = val.rawData[12];\n\t\tthis.y = val.rawData[13];\n\t\tthis.z = val.rawData[14];\n\n\t\tthis._elementsDirty = true;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\tpublic get _iColorTransform():ColorTransform\n\t{\n\t\treturn this._explicitColorTransform;\n\t}\n\n\tpublic set _iColorTransform(value:ColorTransform)\n\t{\n\t\tthis._explicitColorTransform = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tthis._pParent = value;\n\n        if (value)\n\t\t\tthis._iSetScene(value._pScene, value._iAssignedPartition);\n\t\telse\n\t\t\tthis._iSetScene(null, null);\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.ALL);\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(propDirty:number):boolean\n\t{\n\t\tvar newPropDirty:number = (this._hierarchicalPropsDirty ^ propDirty) & propDirty;\n\t\tif (!newPropDirty)\n\t\t\treturn true;\n\n\t\tthis._hierarchicalPropsDirty |= propDirty;\n\n\t\tif (newPropDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._inverseSceneTransformDirty = true;\n\t\t\tthis._scenePositionDirty = true;\n\n\t\t\tif (this.isEntity)\n\t\t\t\tthis.invalidatePartition();\n\n\t\t\tif (this._pParent)\n\t\t\t\tthis._pParent._pInvalidateBounds();\n\n\t\t\tif (this._listenToSceneTransformChanged)\n\t\t\t\tthis.queueDispatch(this._sceneTransformChanged || (this._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this)));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _iSetScene(scene:Scene, partition:PartitionBase)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\n\t\t\t//gc associated objects\n\t\t\tthis._clearInterfaces();\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tif (sceneChanged && this._listenToSceneChanged)\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateMatrix3D()\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\tthis._pos.x = this._x;\n\t\tthis._pos.y = this._y;\n\t\tthis._pos.z = this._z;\n\n\t\tthis._rot.x = this._rotationX;\n\t\tthis._rot.y = this._rotationY;\n\t\tthis._rot.z = this._rotationZ;\n\n\t\tthis._ske.x = this._skewX;\n\t\tthis._ske.y = this._skewY;\n\t\tthis._ske.z = this._skewZ;\n\n\t\tthis._sca.x = this._scaleX;\n\t\tthis._sca.y = this._scaleY;\n\t\tthis._sca.z = this._scaleZ;\n\n\t\tthis._matrix3D.recompose(this._transformComponents);\n\n\t\tthis._matrix3DDirty = false;\n\t}\n\n\tpublic _pUpdatePivot()\n\t{\n\t\tif (!this._pivotZero) {\n\t\t\tthis._pivotScale.x = this._pivot.x/this._scaleX;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._scaleY;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._scaleZ;\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\t\tthis._pivotDirty = false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.updateController();\n\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\n\t\t} else {\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\n\t\t}\n\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._skewDirty = false;\n\t\tthis._scaleDirty = false;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.SCENE_TRANSFORM;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._pRenderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\n\n\t\tthis._pRenderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\n\n\t\tthis._queuedEvents.length = 0;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.VISIBLE)\n\t\t\tthis._updateVisible();\n\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMaskId():number\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASK_ID)\n\t\t\tthis._updateMaskId();\n\n\t\treturn this._pImplicitMaskId;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMasks():Array<Array<DisplayObject>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMasks;\n\t}\n\n\tpublic _iMasksConfig():Array<Array<number>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMaskIds;\n\t}\n\n\tpublic _iAssignedColorTransform():ColorTransform\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.COLOR_TRANSFORM)\n\t\t\tthis._updateColorTransform();\n\n\t\treturn this._pImplicitColorTransform;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate invalidateMatrix3D():void\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidatePartition()\n\t{\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].invalidatePartition();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePivot()\n\t{\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\n\n\t\tif (this._pivotDirty)\n\t\t\treturn;\n\n\t\tthis._pivotDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePosition()\n\t{\n\t\tif (this._positionDirty)\n\t\t\treturn;\n\n\t\tthis._positionDirty = true;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\n\t\tif (!this._pivotZero)\n\t\t\tthis.invalidatePivot();\n\n\t\tif (this._listenToPositionChanged)\n\t\t\tthis.queueDispatch(this._positionChanged || (this._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateRotation(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._rotationDirty)\n\t\t\treturn;\n\n\t\tthis._rotationDirty = true;\n\n\t\tif (this._listenToRotationChanged)\n\t\t\tthis.queueDispatch(this._rotationChanged || (this._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateSkew(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._skewDirty)\n\t\t\treturn;\n\n\t\tthis._skewDirty = true;\n\n\t\tif (this._listenToSkewChanged)\n\t\t\tthis.queueDispatch(this._skewChanged || (this._skewChanged = new DisplayObjectEvent(DisplayObjectEvent.SKEW_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateScale(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._scaleDirty)\n\t\t\treturn;\n\n\t\tthis._scaleDirty = true;\n\n\t\tif (this._listenToScaleChanged)\n\t\t\tthis.queueDispatch(this._scaleChanged || (this._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this)));\n\t}\n\n\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.splice(this._entityNodes.indexOf(entityNode), 1);\n\n\t\treturn entityNode;\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n\n\tprivate queueDispatch(event:Event)\n\t{\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\tprivate updateElements()\n\t{\n\t\tthis._elementsDirty = false;\n\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[1];\n\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\n\t\t\tthis._rotationX = vec.x;\n\t\t\tthis._rotationY = vec.y;\n\t\t\tthis._rotationZ = vec.z;\n\n\t\t\tthis.invalidateRotation(false);\n\t\t}\n\n\t\tvec = elements[2];\n\n\t\tif (this._skewX != vec.x || this._skewY != vec.y || this._skewZ != vec.z) {\n\t\t\tthis._skewX = vec.x;\n\t\t\tthis._skewY = vec.y;\n\t\t\tthis._skewZ = vec.z;\n\n\t\t\tthis.invalidateSkew(false);\n\t\t}\n\n\t\tvec = elements[3];\n\n\t\tthis._width = null;\n\t\tthis._height = null;\n\t\tthis._depth = null;\n\n\t\tif (this._scaleX != vec.x || this._scaleY != vec.y || this._scaleZ != vec.z) {\n\t\t\tthis._scaleX = vec.x;\n\t\t\tthis._scaleY = vec.y;\n\t\t\tthis._scaleZ = vec.z;\n\n\t\t\tthis.invalidateScale(false);\n\t\t}\n\t}\n\n\tprivate _setScaleX(val:number)\n\t{\n\t\tif (this.scaleX == val)\n\t\t\treturn;\n\n\t\tthis._scaleX = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleY(val:number)\n\t{\n\t\tif (this.scaleY == val)\n\t\t\treturn;\n\n\t\tthis._scaleY = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleZ(val:number)\n\t{\n\t\tif (this.scaleZ == val)\n\t\t\treturn;\n\n\t\tthis._scaleZ = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tpublic _updateMouseEnabled()\n\t{\n\t\tthis._pImplicitMouseEnabled = (this._pParent)? this._pParent.mouseChildren && this._pParent._pImplicitMouseEnabled : true;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MOUSE_ENABLED;\n\t}\n\n\tprivate _updateVisible()\n\t{\n\t\tthis._pImplicitVisibility = (this._pParent)? this._explicitVisibility && this._pParent._iIsVisible() : this._explicitVisibility;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.VISIBLE;\n\t}\n\n\tprivate _updateMaskId()\n\t{\n\t\tthis._pImplicitMaskId = (this._pParent && this._pParent._iAssignedMaskId() != -1)? this._pParent._iAssignedMaskId() : this._explicitMaskId;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASK_ID;\n\t}\n\n\tprivate _updateMasks()\n\t{\n\t\tthis._pImplicitMasks = (this._pParent && this._pParent._iAssignedMasks())? (this._explicitMasks != null)? this._pParent._iAssignedMasks().concat([this._explicitMasks]) : this._pParent._iAssignedMasks().concat() : (this._explicitMasks != null)? [this._explicitMasks] : null;\n\n\t\tthis._pImplicitMaskIds.length = 0;\n\n\t\tif (this._pImplicitMasks && this._pImplicitMasks.length) {\n\t\t\tvar numLayers:number = this._pImplicitMasks.length;\n\t\t\tvar numChildren:number;\n\t\t\tvar implicitChildren:Array<DisplayObject>;\n\t\t\tvar implicitChildIds:Array<number>;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\timplicitChildren = this._pImplicitMasks[i];\n\t\t\t\tnumChildren = implicitChildren.length;\n\t\t\t\timplicitChildIds = new Array<number>();\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++)\n\t\t\t\t\timplicitChildIds.push(implicitChildren[j].id);\n\n\t\t\t\tthis._pImplicitMaskIds.push(implicitChildIds);\n\t\t\t}\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASKS;\n\t}\n\n\tprivate _updateColorTransform()\n\t{\n\t\tif (this._inheritColorTransform && this._pParent) {\n\t\t\tthis._pImplicitColorTransform.copyFrom(this._pParent._iAssignedColorTransform());\n\t\t\tif (this._explicitColorTransform)\n\t\t\t\tthis._pImplicitColorTransform.prepend(this._explicitColorTransform);\n\t\t} else {\n\t\t\tif (this._explicitColorTransform)\n\t\t\t\tthis._pImplicitColorTransform.copyFrom(this._explicitColorTransform);\n\t\t\telse\n\t\t\t\tthis._pImplicitColorTransform.clear();\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.COLOR_TRANSFORM;\n\t}\n\n\tpublic _updateMaskMode()\n\t{\n\t\tif (this.maskMode)\n\t\t\tthis.mouseEnabled = false;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASK_ID);\n\t}\n\n\tpublic _clearInterfaces()\n\t{\n\t\tvar i:number;\n\n\t\tfor (i = this._entityNodes.length - 1; i >= 0; i--)\n\t\t\tthis._entityNodes[i].dispose();\n\n\t\tfor (i = this._pRenderables.length - 1; i >= 0; i--)\n\t\t\tthis._pRenderables[i].dispose();\n\t}\n}\n\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\n\n/**\n *\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleSubMesh objects.\n *\n *\n *\n * @see away.core.base.SubGeometry\n * @see away.entities.Mesh\n *\n * @class Geometry\n */\nclass Geometry extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Geometry]\";\n\n\tprivate _subGeometries:Array<SubGeometryBase>;\n\n\tpublic get assetType():string\n\t{\n\t\treturn Geometry.assetType;\n\t}\n\n\t/**\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\n\t */\n\tpublic get subGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\t/**\n\t * Creates a new Geometry object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\n\t}\n\n\t/**\n\t * Adds a new TriangleSubGeometry object to the list.\n\t * @param subGeometry The TriangleSubGeometry object to be added.\n\t */\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.push(subGeometry);\n\n\t\tsubGeometry.parentGeometry = this;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Removes a new TriangleSubGeometry object from the list.\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\n\t */\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\n\n\t\tsubGeometry.parentGeometry = null;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Clones the geometry.\n\t * @return An exact duplicate of the current Geometry object.\n\t */\n\tpublic clone():Geometry\n\t{\n\t\tvar clone:Geometry = new Geometry();\n\t\tvar len:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scale(scale);\n\t}\n\n\t/**\n\t * Clears all resources used by the Geometry object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\n\t\t\tthis.removeSubGeometry(subGeom);\n\t\t\tsubGeom.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\n\t{\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\n\t}\n}\n\nexport = Geometry;",
    "/**\n *\n */\nclass HierarchicalProperties\n{\n\t/**\n\t *\n\t */\n\tpublic static MOUSE_ENABLED:number = 1;\n\n\t/**\n\t *\n\t */\n\tpublic static VISIBLE:number = 2;\n\n\t/**\n\t *\n\t */\n\tpublic static MASK_ID:number = 4;\n\n\t/**\n\t *\n\t */\n\tpublic static MASKS:number = 8;\n\n\t/**\n\t *\n\t */\n\tpublic static COLOR_TRANSFORM:number = 16;\n\n\t/**\n\t *\n\t */\n\tpublic static SCENE_TRANSFORM:number = 32;\n\n\t/**\n\t *\n\t */\n\tpublic static ALL:number = 63;\n}\n\nexport = HierarchicalProperties;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tpublic static assetType:string = \"[asset Light]\";\n\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn LightBase.assetType;\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class LineSubGeometry\n */\nclass LineSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\n\tprivate _positions:AttributesView;\n\tprivate _thickness:Float1Attributes;\n\tprivate _colors:Byte4Attributes;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubGeometry.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Float1Attributes\n\t{\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colors():Byte4Attributes\n\t{\n\t\tif (!this._colors)\n\t\t\tthis.setColors(this._colors);\n\n\t\treturn this._colors;\n\t}\n\n\t/**\n\t * The total amount of vertices in the LineSubGeometry.\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\t\t\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\t//TODO bounding calculations for lines\n\t\treturn target;\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\t//TODO bounding calculations for lines\n\t\treturn target;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tif (index/6 & 1) {\n\t\t\t\t\tpositions[index] = values[i + 3];\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\n\t\t\t\t\tpositions[index + 3] = values[i];\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[index] = values[i];\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\n\t\t\t\t}\n\n\t\t\t\tindex += 6;\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tvar o:number = index/6 - 4;\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._positions.set(positions, offset*4);\n\n\t\t\tthis.setIndices(indices, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic setThickness(array:Array<number>, offset?:number);\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\n\tpublic setThickness(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Float1Attributes) {\n\t\t\tthis._thickness = <Float1Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._thickness)\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\n\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis._thickness.set(thickness, offset*4);\n\t\t} else if (this._thickness) {\n\t\t\tthis._thickness.dispose();\n\t\t\tthis._thickness = null;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._thickness);\n\n\t\tthis._verticesDirty[this._thickness.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setColors(array:Array<number>, offset?:number);\n\tpublic setColors(float32Array:Float32Array, offset?:number);\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\n\tpublic setColors(values:any, offset:number = 0)\n\t{\n\t\tif (values) {\n\t\t\tif (values == this._colors)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Byte4Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\n\t\t\t\tthis._colors = <Byte4Attributes> values;\n\t\t\t} else {\n\t\t\t\tif (!this._colors)\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\n\n\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\tvar index:number = 0;\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tif (index/4 & 1) {\n\t\t\t\t\t\tcolors[index] = values[i + 4];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors[index] = values[i];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (++j == 4) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\ti += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\n\t\t\t\tthis._colors.set(values, offset*4);\n\t\t\t}\n\t\t} else {\n\t\t\t//auto-derive colors\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._colors);\n\n\t\tthis._verticesDirty[this._colors.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions = null;\n\t\tthis._thickness = null;\n\t\tthis._colors = null;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineSubGeometry\n\t{\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\t\tclone.setThickness(this._thickness.clone());\n\t\tclone.setColors(this._colors.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.LineSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.LineSubMesh\n */\nclass LineSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\n\n\tprivate _subGeometry:LineSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubMesh.assetType;\n\t}\n\n\t/**\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t */\n\tpublic get subGeometry():LineSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new LineSubMesh object\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\n\t * @param material An optional material used to render this LineSubMesh.\n\t */\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nclass LoaderInfo extends EventDispatcher\n{\n\tprivate _bytes:ByteArray;\n\tprivate _bytesLoaded:number;\n\tprivate _bytesTotal:number;\n\tprivate _content:DisplayObject;\n\tprivate _contentType:string;\n\tprivate _loader:Loader;\n\tprivate _url:string;\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get bytes():ByteArray\n\t{\n\t\treturn this._bytes;\n\t}\n\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic get bytesLoaded():number /*int*/\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic get bytesTotal():number /*int*/\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic get contentType():string\n\t{\n\t\treturn this._contentType;\n\t}\n\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get loader():Loader\n\t{\n\t\treturn this._loader;\n\t}\n\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n}\n\nexport = LoaderInfo;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass SubGeometryBase extends AssetBase\n{\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\n\t\n\tpublic _pIndices:Short3Attributes;\n\n\tprivate _numElements:number = 0;\n\n\tpublic _concatenatedBuffer:AttributesBuffer;\n\n\tprivate _indicesUpdated:SubGeometryEvent;\n\n\tpublic _verticesDirty:Object = new Object();\n\tpublic _verticesUpdated:Object = new Object();\n\n\tpublic get concatenatedBuffer():AttributesBuffer\n\t{\n\t\treturn this._concatenatedBuffer;\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Short3Attributes\n\t{\n\t\treturn this._pIndices;\n\t}\n\n\t/**\n\t * The total amount of triangles in the TriangleSubGeometry.\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._numElements;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper();\n\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic invalidate():void\n\t{\n\t\tvar len:number = this._subGeometryVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._subGeometryVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._subGeometryVO.length)\n\t\t\tthis._subGeometryVO[0].dispose();\n\n\t\tthis._pIndices.dispose();\n\t\tthis._pIndices = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Short3Attributes) {\n\t\t\tif (this._pIndices)\n\t\t\t\tthis.notifyIndicesDispose();\n\n\t\t\tthis._pIndices = <Short3Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._pIndices)\n\t\t\t\tthis._pIndices = new Short3Attributes();\n\n\t\t\tthis._pIndices.set(values, offset);\n\t\t} else if (this._pIndices) {\n\t\t\tthis._pIndices.dispose();\n\t\t\tthis._pIndices = null;\n\n\t\t\tthis.notifyIndicesDispose();\n\t\t}\n\n\t\tif (this._pIndices) {\n\t\t\tthis._numElements = this._pIndices.count;\n\n\t\t\tthis.notifyIndicesUpdate();\n\t\t} else {\n\t\t\tthis._numElements = 0;\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number, box:Box):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate notifyIndicesUpdate()\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\n\n\t\tthis.dispatchEvent(this._indicesUpdated);\n\t}\n\n\tprivate notifyIndicesDispose()\n\t{\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\n\t}\n\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\n\t\t\treturn;\n\n\t\tthis._verticesDirty[attributesView.id] = true;\n\n\t\tif (!this._verticesUpdated[attributesView.id])\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\n\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\n\t}\n\n\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tattributesView.dispose();\n\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\n\n\t\tthis._verticesDirty[attributesView.id] = null;\n\t\tthis._verticesUpdated[attributesView.id] = null;\n\t}\n\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.push(subGeometryVO);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass SubMeshBase extends AssetBase\n{\n\tpublic _pParentMesh:Mesh;\n\tpublic _uvTransform:UVTransform;\n\n\tpublic _iIndex:number = 0;\n\n\tpublic _material:MaterialBase;\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._pParentMesh.animator;\n\t}\n\n\t/**\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this._pParentMesh.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The scene transform object that transforms from model to world space.\n\t */\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\treturn this._pParentMesh.sceneTransform;\n\t}\n\n\t/**\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\n\t */\n\tpublic get parentMesh():Mesh\n\t{\n\t\treturn this._pParentMesh;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Creates a new SubMeshBase object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\t}\n\n\t/**\n\t *\n\t * @param camera\n\t * @returns {away.geom.Matrix3D}\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _iInvalidateRenderableGeometry()\n\t{\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic _clearInterfaces()\n\t{\n\t\tfor (var i:number = this._renderables.length - 1; i >= 0; i--)\n\t\t\tthis._renderables[i].dispose();\n\t}\n}\n\nexport = SubMeshBase;",
    "import HierarchicalProperties\t\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport MovieClip\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport DisplayObject                    = require(\"awayjs-display/lib/base/DisplayObject\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n\nclass Timeline\n{\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\n\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\n\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\n\n\t// synched:\n\tpublic frame_command_indices:ArrayBufferView;\n\tpublic frame_recipe:ArrayBufferView;\n\n\t// synched:\n\tpublic command_index_stream:ArrayBufferView;\n\tpublic command_length_stream:ArrayBufferView;\n\n\tpublic add_child_stream:ArrayBufferView;\n\tpublic remove_child_stream:ArrayBufferView;\n\tpublic update_child_stream:ArrayBufferView;\n\n\tpublic update_child_props_length_stream:ArrayBufferView;\n\tpublic update_child_props_indices_stream:ArrayBufferView;\n\n\tpublic property_index_stream:ArrayBufferView;\n\tpublic property_type_stream:ArrayBufferView;\n\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\n\n\t// propertiy_values_stream:\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_strings:Array<string>;\n\n\tprivate _potentialPrototypes:Array<DisplayObject>;\n\n\tpublic numKeyFrames:number=0;\n\n\tconstructor()\n\t{\n\t\tthis.keyframe_indices=[];\n\n\t\tthis._potentialPrototypes=[];\n\t\tthis._labels={};\n\t\tthis._framescripts={};\n\t\tthis._framescripts_translated={};\n\t}\n\n\tpublic init():void\n\t{\n\t\tif((this.frame_command_indices == null)||(this.frame_recipe == null)||(this.keyframe_durations == null))\n\t\t\treturn;\n\n\t\tthis.keyframe_firstframes = [];\n\t\tthis.keyframe_constructframes = [];\n\t\tvar frame_cnt = 0;\n\t\tvar ic = 0;\n\t\tvar ic2 = 0;\n\t\tvar keyframe_cnt = 0;\n\t\tvar last_construct_frame = 0;\n\t\tfor(ic = 0; ic < this.numKeyFrames; ic++){\n\t\t\tvar duration=this.keyframe_durations[(ic)];\n\n\t\t\tif(this.frame_recipe[ic] & 1)\n\t\t\t\tlast_construct_frame = keyframe_cnt;\n\n\t\t\tthis.keyframe_firstframes[keyframe_cnt] = frame_cnt;\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++] = last_construct_frame;\n\n\t\t\tfor(ic2 = 0; ic2 < duration; ic2++)\n\t\t\t\tthis.keyframe_indices[frame_cnt++] = ic;\n\t\t}\n\t}\n\n\tpublic get_framescript(keyframe_index:number):string\n\t{\n\t\tif(this._framescripts[keyframe_index]==null)\n\t\t\treturn \"\";\n\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\n\t\t\treturn this._framescripts[keyframe_index];\n\t\telse{\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\n\t\t}\n\n\t\treturn \"\";\n\t}\n\tpublic add_framescript(value:string, keyframe_index:number)\n\t{\n\t\tthis._framescripts[keyframe_index] = value;\n\t}\n\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\n\t}\n\n\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number, scriptPass1:Boolean=false) : void\n\t{\n\t\tif(this._framescripts[keyframe_idx]!=null){\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\n\t\t\t}\n\t\t\tif(scriptPass1)\n\t\t\t\tFrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\n\t\t\telse\n\t\t\t\tFrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\n\n\t\t}\n\t}\n\n\tpublic get numFrames():number\n\t{\n\t\treturn this.keyframe_indices.length;\n\t}\n\n\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\n\t{\n\t\treturn this._potentialPrototypes[id];\n\n\t}\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\n\t{\n\t\treturn this.keyframe_indices[frame_index];\n\t}\n\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\n\t{\n\t\tvar this_clone:DisplayObject=this._potentialPrototypes[id].clone();\n\t\tthis_clone.name=\"\";\n\t\treturn this_clone;\n\t}\n\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\n\t{\n\t\tvar id = this._potentialPrototypes.length;\n\t\tthis._potentialPrototypes[id] = prototype;\n\t}\n\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\n\t{\n\t\tvar key_frame_index:number = this._labels[label];\n\t\tif(key_frame_index>=0)\n\t\t\ttarget_mc.currentFrameIndex=this.keyframe_firstframes[key_frame_index];\n\t}\n\n\n\tpublic gotoFrame(target_mc:MovieClip, value:number, skip_script:boolean = false)\n\t{\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\n\t\tif (frameIndex == value) //we are already on exactly this frame.\n\t\t\treturn;\n\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\n\n\t\tvar firstframe:number = this.keyframe_firstframes[target_keyframe_idx];\n\n\t\tif (current_keyframe_idx + 1 == target_keyframe_idx) { // target_keyframe_idx is the next keyframe. we can just use constructnext for this\n\t\t\ttarget_mc.set_currentFrameIndex(value);\n\t\t\tthis.constructNextFrame(target_mc, !skip_script, true);\n\t\t\treturn;\n\t\t}\n\n\n\t\tif (current_keyframe_idx == target_keyframe_idx) // already constructed - exit\n\t\t\t//if (!skip_script && firstframe == value) //frame changed. and firstframe of keyframe. execute framescript if available\n\t\t\t//\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\n\t\t\treturn;\n\n\t\tvar break_frame_idx:number = this.keyframe_constructframes[target_keyframe_idx];\n\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\n\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\n\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\n\t\tvar start_construct_idx:number = break_frame_idx;\n\n\t\tif (jump_forward && !jump_gap) // in case we jump forward, but not jump a gap, we start at current_keyframe_idx +1\n\t\t\tstart_construct_idx = current_keyframe_idx + 1;\n\n\t\tvar i:number;\n\t\tvar k:number;\n\t\tvar child:DisplayObject;\n\n\t\tif (jump_gap) // if we jump a gap forward, we just can remove all childs from mc. all script blockage will be gone\n\t\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\ttarget_mc.removeChildAt(i);\n\n\t\t//if we jump back, we want to reset all objects (but not the timelines of the mcs)\n\t\tif (!jump_forward)\n\t\t\ttarget_mc.resetSessionIDs();\n\n\t\t// in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\n\t\tvar depth_sessionIDs:Object = target_mc.getSessionIDDepths();\n\n\t\t//  step1: only apply add/remove commands into current_childs_dic.\n\t\tvar update_indices:Array<number> = [];// store a list of updatecommand_indices, so we dont have to read frame_recipe again\n\t\tvar update_cnt = 0;\n\t\tvar frame_command_idx:number;\n\t\tvar frame_recipe:number;\n\t\tvar start_index:number;\n\t\tvar end_index:number;\n\t\tfor (k = start_construct_idx; k <= target_keyframe_idx; k++) {\n\t\t\tframe_command_idx = this.frame_command_indices[k];\n\t\t\tframe_recipe = this.frame_recipe[k];\n\n\t\t\tif (frame_recipe & 2) {\n\t\t\t\t// remove childs\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\tfor (i = start_index; i < end_index; i++)\n\t\t\t\t\tdelete depth_sessionIDs[this.remove_child_stream[i] - 16383];\n\t\t\t}\n\n\t\t\tif (frame_recipe & 4) {\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t\t\t// this could be changed in exporter\n\t\t\t\tfor (i = end_index - 1; i >= start_index; i--)\n\t\t\t\t\tdepth_sessionIDs[this.add_child_stream[i*2 + 1] - 16383] = i;\n\t\t\t}\n\n\t\t\tif (frame_recipe & 8)\n\t\t\t\tupdate_indices[update_cnt++] = frame_command_idx;// execute update command later\n\t\t}\n\n\t\t//  step2: construct the final frame\n\n\t\t// check what childs are alive on both frames.\n\t\t// childs that are not alive anymore get removed and unregistered\n\t\t// childs that are alive on both frames have their properties reset if we are jumping back\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\n\t\t\tchild = target_mc._children[i];\n\t\t\tif (depth_sessionIDs[child._depthID] != child._sessionID) {\n\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t} else if (!jump_forward) {\n\t\t\t\tif(child.adapter) {\n\t\t\t\t\tif (!child.adapter.isBlockedByScript()) {\n\t\t\t\t\t\tif (child._iMatrix3D) {\n\t\t\t\t\t\t\tchild._iMatrix3D.identity();\n\t\t\t\t\t\t\tchild.x = child._iMatrix3D.rawData[12];\n\t\t\t\t\t\t\tchild.y = child._iMatrix3D.rawData[13];\n\t\t\t\t\t\t\tchild._elementsDirty = true;\n\t\t\t\t\t\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (child._iColorTransform) {\n\t\t\t\t\t\t\tchild._iColorTransform.clear();\n\t\t\t\t\t\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//this.name=\"\";\n\t\t\t\t\t\tchild.masks = null;\n\t\t\t\t\t\tchild.maskMode = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (!child.adapter.isVisibilityByScript()) {\n\t\t\t\t\t\tchild.visible = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!skip_script && firstframe == value) //frame changed. and firstframe of keyframe. execute framescript if available\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\n\t\t// now we need to addchild the objects that were added before targetframe first\n\t\t// than we can add the script of the targetframe\n\t\t// than we can addchild objects added on targetframe\n\t\tfor (var key in depth_sessionIDs) {\n\t\t\tchild = target_mc.getPotentialChildInstance(this.add_child_stream[depth_sessionIDs[key]*2]);\n\t\t\tif (child._sessionID == -1) {\n\t\t\t\tchild._sessionID = depth_sessionIDs[key];\n\t\t\t\ttarget_mc.addChildAtDepth(child, Number(key));\n\t\t\t}\n\t\t}\n\n\n\t\t//  pass2: apply update commands for objects on stage (only if they are not blocked by script)\n\t\tvar frame_command_idx:number;\n\t\tvar len:number = update_indices.length;\n\t\tfor (k = 0; k < len; k++) {\n\t\t\tframe_command_idx = update_indices[k];\n\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx]);\n\t\t}\n\n\t\ttarget_mc.constructedKeyFrameIndex = target_keyframe_idx;\n\t}\n\n\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean=true, scriptPass1:Boolean = false)\n\t{\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\t\tvar constructed_keyFrameIndex:number = target_mc.constructedKeyFrameIndex;\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\n\n\t\tif(queueScript && this.keyframe_firstframes[new_keyFrameIndex] == frameIndex)\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\n\n\t\tif(constructed_keyFrameIndex != new_keyFrameIndex) {\n\t\t\ttarget_mc.constructedKeyFrameIndex = new_keyFrameIndex;\n\n\t\t\tvar frame_command_idx = this.frame_command_indices[new_keyFrameIndex];\n\t\t\tvar frame_recipe = this.frame_recipe[new_keyFrameIndex];\n\n\t\t\tif(frame_recipe & 1) {\n\t\t\t\tfor (var i:number = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t} else if (frame_recipe & 2) {\n\t\t\t\tthis.remove_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\n\t\t\t}\n\n\t\t\tif(frame_recipe & 4)\n\t\t\t\tthis.add_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\n\n\t\t\tif(frame_recipe & 8)\n\t\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++]);\n\t\t}\n\t}\n\n\n\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\tfor(var i:number = 0; i < len; i++)\n\t\t\tsourceMovieClip.removeChildAtDepth(this.remove_child_stream[start_index + i] - 16383);\n\t}\n\n\n\t// used to add childs when jumping between frames\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t// this could be changed in exporter\n\t\tvar idx:number;\n\t\tvar end_index:number = start_index + len;\n\t\tfor (var i:number = end_index - 1; i >= start_index; i--) {\n\t\t\tidx = i*2;\n\t\t\tvar target:DisplayObject = sourceMovieClip.getPotentialChildInstance(this.add_child_stream[idx]);\n\t\t\ttarget._sessionID = i;\n\t\t\tsourceMovieClip.addChildAtDepth(target, this.add_child_stream[idx + 1] - 16383);\n\t\t}\n\t}\n\n\tpublic update_childs(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\tvar props_start_idx:number;\n\t\tvar props_len:number;\n\t\tvar props_end_index:number;\n\t\tvar value_start_index:number;\n\t\tvar props_type:number;\n\t\tvar doit:boolean;\n\t\tvar end_index:number = start_index + len;\n\t\tfor(var i:number = start_index; i < end_index; i++) {\n\t\t\tvar target:DisplayObject = sourceMovieClip.getChildAtSessionID(this.update_child_stream[i]);\n\t\t\tif (target != null) {\n\t\t\t\tdoit = true;\n\t\t\t\t// check if the child is active + not blocked by script\n\t\t\t\tif (target.adapter && target.adapter.isBlockedByScript())\n\t\t\t\t\tdoit = false;\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[i];\n\t\t\t\tprops_len = this.update_child_props_length_stream[i];\n\t\t\t\tprops_end_index = props_start_idx + props_len;\n\t\t\t\tfor(var p:number = props_start_idx; p < props_end_index; p++) {\n\t\t\t\t\tprops_type = this.property_type_stream[p];\n\t\t\t\t\tvalue_start_index = this.property_index_stream[p];\n\t\t\t\t\tswitch(props_type){\n\t\t\t\t\t\tcase 0:\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 1:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 6;\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D;\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[value_start_index];\n\n\t\t\t\t\t\t\t\ttarget.x = new_matrix.rawData[12];\n\t\t\t\t\t\t\t\ttarget.y = new_matrix.rawData[13];\n\n\t\t\t\t\t\t\t\ttarget._elementsDirty = true;\n\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 2:// colormatrix\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 8;\n\t\t\t\t\t\t\t\tvar new_ct:ColorTransform = target._iColorTransform || (target._iColorTransform = new ColorTransform());\n\t\t\t\t\t\t\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.redOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[value_start_index];\n\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 3: //mask the mc with a list of objects\n\n\t\t\t\t\t\t\t// an object could have multiple groups of masks, in case a graphic clip was merged into the timeline\n\t\t\t\t\t\t\t// this is not implmeented in the runtime yet\n\t\t\t\t\t\t\t// for now, a second mask-groupd would overwrite the first one\n\t\t\t\t\t\t\tvar mask:DisplayObject;\n\t\t\t\t\t\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\n\t\t\t\t\t\t\tvar numMasks:number = this.properties_stream_int[value_start_index++];\n\n\t\t\t\t\t\t\t//mask may not exist if a goto command moves the playhead to a point in the timeline after\n\t\t\t\t\t\t\t//one of the masks in a mask array has already been removed. Therefore a check is needed.\n\t\t\t\t\t\t\tfor(var m:number = 0; m < numMasks; m++)\n\t\t\t\t\t\t\t\tif((mask = sourceMovieClip.getChildAtSessionID(this.properties_stream_int[value_start_index++])))\n\t\t\t\t\t\t\t\t\tmasks.push(mask);\n\n\t\t\t\t\t\t\ttarget.masks = masks;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 4:// instance name movieclip instance\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 5:// instance name button instance\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\n\t\t\t\t\t\t\t// todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\n\t\t\t\t\t\t\t(<MovieClip>target).addButtonListeners();\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 6://visible\n\t\t\t\t\t\t\tif (!target.adapter || !target.adapter.isVisibilityByScript())\n\t\t\t\t\t\t\t\ttarget.visible = Boolean(value_start_index);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 11:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 4;\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D;\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[value_start_index];\n\t\t\t\t\t\t\t\ttarget._elementsDirty = true;\n\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 12:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 2;\n\t\t\t\t\t\t\t\ttarget.x = this.properties_stream_f32_mtx_pos[value_start_index++];\n\t\t\t\t\t\t\t\ttarget.y = this.properties_stream_f32_mtx_pos[value_start_index];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 200:\n\t\t\t\t\t\t\ttarget.maskMode = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 201:\n\t\t\t\t\t\t\ttarget.masks = null;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = Timeline;",
    "/**\n *\n */\nclass TouchPoint\n{\n\tx:number;\n\n\ty:number;\n\n\tid:number;\n\n\tconstructor(x:number, y:number, id:number)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.id = id;\n\t}\n}\n\nexport = TouchPoint;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform\n{\n\tprivate _displayObject:DisplayObject;\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tpublic _position:Vector3D = new Vector3D();\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._displayObject._iColorTransform;\n\t}\n\n\tpublic set colorTransform(val:ColorTransform)\n\t{\n\t\tthis._displayObject._iColorTransform = val;\n\t}\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Stage.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\treturn this._displayObject._iMatrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tthis._displayObject._iMatrix3D = val;\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._displayObject._iMatrix3D.position\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._displayObject.x = value.x;\n\t\tthis._displayObject.y = value.y;\n\t\tthis._displayObject.z = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\n\t}\n\n\tpublic set rotation(value:Vector3D)\n\t{\n\t\tthis._displayObject.rotationX = value.x;\n\t\tthis._displayObject.rotationY = value.y;\n\t\tthis._displayObject.rotationZ = value.z;\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\n\t}\n\n\tpublic set scale(value:Vector3D)\n\t{\n\t\tthis._displayObject.scaleX = value.x;\n\t\tthis._displayObject.scaleY = value.y;\n\t\tthis._displayObject.scaleZ = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t}\n\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis._displayObject = displayObject;\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n}\n\nexport = Transform;\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass TriangleSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _normals:Float3Attributes;\n\tprivate _tangents:Float3Attributes;\n\tprivate _uvs:Float2Attributes;\n\tprivate _secondaryUVs:Float2Attributes;\n\tprivate _jointIndices:AttributesView;\n\tprivate _jointWeights:AttributesView;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _faceNormals:Float4Attributes;\n\tprivate _faceTangents:Float3Attributes;\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubGeometry.assetType;\n\t}\n\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tif (this._jointIndices)\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\n\n\t\tif (this._jointWeights)\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get normals():Float3Attributes\n\t{\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\n\t\t\tthis.setNormals(this._normals);\n\n\t\treturn this._normals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get tangents():Float3Attributes\n\t{\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\n\t\t\tthis.setTangents(this._tangents);\n\n\t\treturn this._tangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Float4Attributes\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Float3Attributes\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get secondaryUVs():Float2Attributes\n\t{\n\t\treturn this._secondaryUVs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():AttributesView\n\t{\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():AttributesView\n\t{\n\t\treturn this._jointWeights;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\treturn SubGeometryUtils.getTriangleGeometryBoxBounds(this._positions, target, this._numVertices);\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\treturn SubGeometryUtils.getTriangleGeometrySphereBounds(this._positions, center, target, this._numVertices);\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setNormals(array:Array<number>, offset?:number);\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setNormals(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif (values == this._normals)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._normals)\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._normals.set(values, offset);\n\t\t\t} else if (this._normals) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tthis._verticesDirty[this._normals.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic setTangents(array:Array<number>, offset?:number);\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setTangents(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif (values == this._tangents)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._tangents)\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._tangents.set(values, offset);\n\t\t\t} else if (this._tangents) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceTangentsDirty)\n\t\t\t\tthis.updateFaceTangents();\n\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis._verticesDirty[this._tangents.id] = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\t/**\n\t * Updates the secondary uvs based on the geometry.\n\t */\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._secondaryUVs)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._secondaryUVs)\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._secondaryUVs.set(values, offset);\n\t\t} else if (this._secondaryUVs) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\n\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic setJointIndices(array:Array<number>, offset?:number);\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\n\tpublic setJointIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointIndices)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointIndices)\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\toldIndex = values[i];\n\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value to dictionary lookup\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._jointIndices.set(values, offset);\n\n\t\t} else if (this._jointIndices) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\n\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic setJointWeights(array:Array<number>, offset?:number);\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\n\tpublic setJointWeights(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointWeights)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointWeights)\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tthis._jointWeights.set(values, offset);\n\n\t\t} else if (this._jointWeights) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\n\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tif (this._normals) {\n\t\t\tthis._normals.dispose();\n\t\t\tthis._normals = null;\n\t\t}\n\n\t\tif (this._tangents) {\n\t\t\tthis._tangents.dispose();\n\t\t\tthis._tangents = null;\n\t\t}\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t\tif (this._secondaryUVs) {\n\t\t\tthis._secondaryUVs.dispose();\n\t\t\tthis._secondaryUVs = null;\n\t\t}\n\n\t\tif (this._jointIndices) {\n\t\t\tthis._jointIndices.dispose();\n\t\t\tthis._jointIndices = null;\n\t\t}\n\n\t\tif (this._jointWeights) {\n\t\t\tthis._jointWeights.dispose();\n\t\t\tthis._jointWeights = null;\n\t\t}\n\n\t\tif (this._faceNormals) {\n\t\t\tthis._faceNormals.dispose();\n\t\t\tthis._faceNormals = null;\n\t\t}\n\n\t\tif (this._faceTangents) {\n\t\t\tthis._faceTangents.dispose();\n\t\t\tthis._faceTangents = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tsuper.setIndices(values, offset);\n\n\t\tthis._faceNormalsDirty = true;\n\t\tthis._faceTangentsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleSubGeometry\n\t{\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveNormals = false;\n\t\tclone.autoDeriveTangents = false;\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.normals)\n\t\t\tclone.setNormals(this.normals.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\tif (this.tangents)\n\t\t\tclone.setTangents(this.tangents.clone());\n\n\t\tif (this.secondaryUVs)\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\n\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\n\n\t\tif (this.jointIndices)\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\n\n\t\tif (this.jointWeights)\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.TriangleSubMesh\n */\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\n\n\tprivate _subGeometry:TriangleSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t */\n\tpublic get subGeometry():TriangleSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new TriangleSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\n\t * @param material An optional material used to render this TriangleSubMesh.\n\t */\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tpublic _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Mesh;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pUpdate();\n\t\t}\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\nimport Extensions\t\t\t\t\t= require(\"awayjs-core/lib/utils/Extensions\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\n\ndeclare var SIMD:any;\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject implements IAsset\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _containerNodes:Array<ContainerNode> = new Array<ContainerNode>();\n\tprivate _mouseChildren:boolean = true;\n\tprivate _depth_childs:Object = {};\n\tprivate _nextHighestDepth:number = 0;\n\tprivate _nextHighestDepthDirty:boolean;\n\tpublic _children:Array<DisplayObject> = new Array<DisplayObject>();\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MOUSE_ENABLED);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsContainer = true;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this.addChildAt(child, this._children.length);\n\t}\n\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\n\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\n\n\n\t\tvar index = this.getDepthIndexInternal(depth);\n\n\t\tif (index != -1) {\n\t\t\tif (replace) {\n\t\t\t\tthis.removeChildAt(index);\n\t\t\t} else {\n\t\t\t\t//move depth of existing child up by 1\n\t\t\t\tthis.addChildAtDepth(this._children[index], depth + 1, false);\n\t\t\t}\n\t\t}\n\n\t\tif (this._nextHighestDepth < depth + 1)\n\t\t\tthis._nextHighestDepth = depth + 1;\n\n\t\tthis._depth_childs[depth] = child;\n\t\tthis._children.push(child);\n\n\t\tchild._depthID = depth;\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\n\t{\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._children[index]._depthID : this.getNextHighestDepth(), false);\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObjectContainer\n\t{\n\t\tvar newInstance:DisplayObjectContainer = new DisplayObjectContainer();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObjectContainer)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.mouseChildren = this._mouseChildren;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance.addChild(this._children[i].clone());\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tfor (var i:number = this._children.length - 1; i >= 0; i--)\n\t\t\tthis._children[i].dispose();\n\t}\n\n\tpublic getChildAtDepth(depth:number):DisplayObject\n\t{\n\t\treturn this._depth_childs[depth];\n\t}\n\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\tpublic getNextHighestDepth()\n\t{\n\t\tif (this._nextHighestDepthDirty)\n\t\t\tthis._updateNextHighestDepth();\n\n\t\treturn this._nextHighestDepth;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildAt(this.getChildIndex(child));\n\n\t\treturn child;\n\t}\n\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\n\t}\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\n\n\t\tchild.iSetParent(null);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number, index2:number)\n\t{\n\t\tvar depth:number = this._children[index2]._depthID;\n\t\tvar child:DisplayObject = this._children[index1];\n\n\t\tthis.addChildAtDepth(this._children[index2], this._children[index1]._depthID);\n\t\tthis.addChildAtDepth(child, depth);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar box:Box;\n\t\tvar numChildren:number = this._children.length;\n\n\t\tif (numChildren > 0) {\n\t\t\t//use SIMD where available\n\t\t\tif (Extensions.SIMD) {\n\t\t\t\tvar f32x4 = SIMD.float32x4 || SIMD.Float32x4;\n\t\t\t\tvar load = f32x4.loadXYZ || f32x4.load3;\n\t\t\t\tvar store = f32x4.storeXYZ || f32x4.store3;\n\t\t\t\tvar minP;\n\t\t\t\tvar maxP;\n\t\t\t\tvar minB;\n\t\t\t\tvar maxB;\n\n\t\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\n\t\t\t\t\tbox = this._children[i].getBox(this);\n\n\t\t\t\t\tif (i == 0) {\n\t\t\t\t\t\tminP = load(box.rawData, 0);\n\t\t\t\t\t\tmaxP = f32x4.add(load(box.rawData, 3), minP);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tminB = load(box.rawData, 0);\n\t\t\t\t\t\tmaxB = f32x4.add(load(box.rawData, 3), minB);\n\t\t\t\t\t\tminP = f32x4.min(minB, minP);\n\t\t\t\t\t\tmaxP = f32x4.max(maxB, maxP);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tstore(this._pBoxBounds.rawData, 3, f32x4.sub(maxP, store(this._pBoxBounds.rawData, 0, minP)));\n\t\t\t} else {\n\t\t\t\tvar min:number;\n\t\t\t\tvar max:number;\n\t\t\t\tvar minX:number, minY:number, minZ:number;\n\t\t\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\n\t\t\t\t\tbox = this._children[i].getBox(this);\n\n\t\t\t\t\tif (i == 0) {\n\t\t\t\t\t\tmaxX = box.width + (minX = box.x);\n\t\t\t\t\t\tmaxY = box.height + (minY = box.y);\n\t\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmax = box.width + (min = box.x);\n\t\t\t\t\t\tif (min < minX)\n\t\t\t\t\t\t\tminX = min;\n\t\t\t\t\t\tif (max > maxX)\n\t\t\t\t\t\t\tmaxX = max;\n\n\t\t\t\t\t\tmax = box.height + (min = box.y);\n\t\t\t\t\t\tif (min < minY)\n\t\t\t\t\t\t\tminY = min;\n\t\t\t\t\t\tif (max > maxY)\n\t\t\t\t\t\t\tmaxY = max;\n\n\t\t\t\t\t\tmax = box.depth + (min = box.z);\n\t\t\t\t\t\tif (min < minZ)\n\t\t\t\t\t\t\tminZ = min;\n\t\t\t\t\t\tif (max > maxZ)\n\t\t\t\t\t\t\tmaxZ = max;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number)\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateHierarchicalProperties(bitFlag);\n\n\t\treturn false;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene, partition:PartitionBase)\n\t{\n\t\tsuper._iSetScene(value, partition);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._iSetScene(value, partition);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tpublic removeChildAtInternal(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\n\n\t\t//update next highest depth\n\t\tif (this._nextHighestDepth == child._depthID + 1)\n\t\t\tthis._nextHighestDepthDirty = true;\n\n\t\tdelete this._depth_childs[child._depthID];\n\n\t\tchild._depthID = -16384;\n\n\t\treturn child;\n\t}\n\n\tprivate getDepthIndexInternal(depth:number /*int*/):number\n\t{\n\t\tif (!this._depth_childs[depth])\n\t\t\treturn -1;\n\n\t\treturn this._children.indexOf(this._depth_childs[depth]);\n\t}\n\n\tprivate _updateNextHighestDepth()\n\t{\n\t\tthis._nextHighestDepthDirty = false;\n\n\t\tthis._nextHighestDepth = 0;\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._nextHighestDepth < this._children[i]._depthID)\n\t\t\t\tthis._nextHighestDepth = this._children[i]._depthID;\n\n\t\tthis._nextHighestDepth += 1;\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\tif(this._pImplicitMaskId !== -1 && !masksFlag)\n\t\t\treturn;\n\n\t\tif(!this._pImplicitVisibility)\n\t\t\treturn;\n\n\t\tvar masks:Array<DisplayObject> = this.masks;\n\n\t\tif (masks) {\n\t\t\tvar numMasks:number = masks.length;\n\t\t\tvar maskHit:boolean = false;\n\t\t\tfor (var i:number = 0; i < numMasks; i++) {\n\t\t\t\tif (masks[i].hitTestPoint(x, y, shapeFlag, true)) {\n\t\t\t\t\tmaskHit = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!maskHit)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn this._hitTestPointInternal(x, y, shapeFlag, masksFlag)\n\t}\n\n\tpublic _iAddContainerNode(containerNode:ContainerNode):ContainerNode\n\t{\n\t\tthis._containerNodes.push(containerNode);\n\n\t\treturn containerNode;\n\t}\n\n\n\tpublic _iRemoveContainerNode(containerNode:ContainerNode):ContainerNode\n\t{\n\t\tthis._containerNodes.splice(this._containerNodes.indexOf(containerNode), 1);\n\n\t\treturn containerNode;\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tvar numChildren:number = this.numChildren;\n\t\tfor(var i:number = 0; i < numChildren; i++)\n\t\t\tif(this._children[i].hitTestPoint(x,y, shapeFlag, masksFlag))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tpublic _updateMaskMode()\n\t{\n\t\tif (this.maskMode)\n\t\t\tthis.mouseChildren = false;\n\n\t\tsuper._updateMaskMode();\n\t}\n\n\tpublic _clearInterfaces()\n\t{\n\t\tsuper._clearInterfaces();\n\n\t\tvar i:number;\n\n\t\tfor (i = this._children.length - 1; i >= 0; i--)\n\t\t\tthis._children[i]._clearInterfaces();\n\n\t\tfor (i = this._containerNodes.length - 1; i >= 0; i--)\n\t\t\tthis._containerNodes[i].dispose();\n\t}\n}\n\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\n\n/**\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the Loader object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The Loader class overrides the following methods that it inherits,\n * because a Loader object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the Loader object's root SWF file), you may want to define a\n * mask for the Loader object, to prevent the loaded content(which is a child\n * of the Loader object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass Loader extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loaderSession:LoaderSession;\n\tprivate _loaderSessionGarbage:LoaderSession;\n\tprivate _gcTimeoutIID:number;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onResourceCompleteDelegate:Function;\n\tprivate _onAssetCompleteDelegate:Function;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\tprivate _content:DisplayObject;\n\tprivate _contentLoaderInfo:LoaderInfo;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\n\t * LoaderInfo objects are shared between the Loader object and the loaded\n\t * content object. The LoaderInfo object supplies loading progress\n\t * information and statistics about the loaded file.\n\t *\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\n\t * LoaderInfo object, even before the content is loaded, so that you can add\n\t * event listeners to the object prior to the load.</p>\n\t *\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n\t */\n\tpublic get contentLoaderInfo():LoaderInfo\n\t{\n\t\treturn this._contentLoaderInfo;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (!this._loaderSession)\n\t\t\treturn;\n\t\t\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\n\t\t}\n\t\t\n\t\tthis._disposeLoaderSession();\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, LoaderSession will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\n\t}\n\n\tprivate _getLoaderSession()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tthis._loaderSession = lib.getLoaderSession();\n\t\t} else {\n\t\t\tthis._loaderSession = new LoaderSession();\n\t\t}\n\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn this._loaderSession;\n\t}\n\n\tprivate _disposeLoaderSession()\n\t{\n\t\t// Add loader to garbage - for a collection sweep and kill\n\t\tthis._loaderSessionGarbage = this._loaderSession;\n\t\tdelete this._loaderSession;\n\t\tthis._loaderSession = null;\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\n\t}\n\t\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tLoaderSession.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoaderSession.enableParsers(parserClasses);\n\t}\n\t\n\tprivate loaderSessionGC():void\n\t{\n\t\t//remove listeners\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\tif (!this._useAssetLib)\n\t\t\tthis._loaderSessionGarbage.stop();\n\n\t\tdelete this._loaderSessionGarbage;\n\t\tthis._loaderSessionGarbage = null;\n\n\t\tclearTimeout(this._gcTimeoutIID);\n\t\tthis._gcTimeoutIID = null;\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:IOErrorEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis._disposeLoaderSession();\n\t}\n}\n\nexport = Loader;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport BasicPartition\t\t\t\t= require(\"awayjs-display/lib/partition/BasicPartition\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\nclass Scene extends DisplayObjectContainer\n{\n\tprivate _expandedPartitions:Array<PartitionBase> = new Array<PartitionBase>();\n\tprivate _partitions:Array<PartitionBase> = new Array<PartitionBase>();\n\n\tpublic _iCollectionMark = 0;\n\n\tconstructor(partition:PartitionBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis.partition = partition || new BasicPartition();\n\n\t\tthis._iIsRoot = true;\n\t\tthis._pScene = this;\n\t}\n\n\tpublic traversePartitions(traverser:CollectorBase)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\tthis._iCollectionMark++;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:CollectorBase;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onPartitionChangedDelegate:(event:DisplayObjectEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\tpublic _pTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onPartitionChangedDelegate = (event:DisplayObjectEvent) => this._onPartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this._onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this._onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this._onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tdocument.body.style.margin = \"0px\";\n\n\t\tthis._htmlElement = document.createElement(\"div\");\n\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\tdocument.body.appendChild(this._htmlElement);\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\tget touchPoints():Array<TouchPoint>\n\t{\n\t\treturn this._pTouchPoints;\n\t}\n\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\n\t}\n\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\n\t}\n\n\tpublic getLocalTouchPoints(displayObject:DisplayObject):Array<TouchPoint>\n\t{\n\t\tvar localPosition:Vector3D;\n\t\tvar localTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t\tvar len:number = this._pTouchPoints.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tlocalPosition = displayObject.inverseSceneTransform.transformVector(this.unproject(this._pTouchPoints[i].x, this._pTouchPoints[i].y, 1000));\n\t\t\tlocalTouchPoints.push(new TouchPoint(localPosition.x, localPosition.y, this._pTouchPoints[i].id));\n\t\t}\n\n\t\treturn localTouchPoints;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tthis._htmlElement.style.width = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tthis._htmlElement.style.height = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tthis._htmlElement.style.left = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tthis._htmlElement.style.top = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():CollectorBase\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate _onPartitionChanged(event:DisplayObjectEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass ControllerBase\n{\n\tpublic _pControllerDirty:boolean;\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject)\n\t\t\tthis._pTargetObject.invalidatePartition();\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val)\n\t\t\treturn;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = null;\n\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = this;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val)\n\t\t\treturn;\n\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pAutoUpdate)\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\telse\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic updateController()\n\t{\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\n\t\t\tthis._pControllerDirty = false;\n\t\t\tthis.pNotifyUpdate();\n\t\t}\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\tthis._pControllerDirty = true;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _billboardRect:Rectangle;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _parentColorTransform:ColorTransform;\n\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\n\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t * The Image2D object being referenced.\n\t */\n\tpublic image2D:Image2D; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get billboardRect():Rectangle\n\t{\n\t\treturn this._billboardRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\t}\n\n\t/**\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\tpublic pixelSnapping:string; //TODO\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\tpublic smoothing:boolean; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\t// outputs the concaneted color-transform\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\t// set this on the inheritet colorTransform\n\t\tthis.transform.colorTransform = value;\n\t\t// new calculate the concaneted transform\n\t\tthis._applyColorTransform();\n\n\t}\n\n\tpublic get parentColorTransform():ColorTransform\n\t{\n\t\treturn this._parentColorTransform;\n\t}\n\n\tpublic set parentColorTransform(value:ColorTransform)\n\t{\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\n\t\tthis._parentColorTransform = value;\n\t\tthis._applyColorTransform();\n\t}\n\n\tprivate _applyColorTransform()\n\t{\n\t\tthis._colorTransform=new ColorTransform();\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\n\t\t}\n\t\telse if (this.transform.colorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\n\t\t}\n\t\telse if (this._parentColorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\n\t\t}\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\n\n\t\tthis.material = material;\n\n\t\tthis._billboardWidth = material.width;\n\t\tthis._billboardHeight = material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\n\t\tthis._billboardWidth = material.width;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Billboard = new Billboard(this.material);\n\t\treturn clone;\n\t}\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onSizeChanged(event:MaterialEvent)\n\t{\n\t\tthis._billboardWidth = this._material.width;\n\t\tthis._billboardHeight = this._material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:Float32Array = this.viewProjection.rawData;\n\t\tvar invLen:number;\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number):boolean\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._viewProjectionDirty = true;\n\t\t\tthis._frustumPlanesDirty = true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//nothing to do here\n\t}\n}\n\nexport = Camera;",
    "import Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tprivate _diffuseMap:ImageCube;\n\tprivate _specularMap:ImageCube;\n\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._diffuseMap = diffuseMap;\n\t\tthis._specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get diffuseMap():ImageCube\n\t{\n\t\treturn this._diffuseMap;\n\t}\n\n\tpublic set diffuseMap(value:ImageCube)\n\t{\n\t\tthis._diffuseMap = value;\n\t}\n\n\tpublic get specularMap():ImageCube\n\t{\n\t\treturn this._specularMap;\n\t}\n\n\tpublic set specularMap(value:ImageCube)\n\t{\n\t\tthis._specularMap = value;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n}\n\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._startPosition = null;\n\t\tthis._endPosition = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRenderableUpdate()\n\t{\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n}\n\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\n\n/**\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\n * of the geometry to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Mesh]\";\n\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _center:Vector3D;\n\tprivate _subMeshes:Array<ISubMesh>;\n\tprivate _geometry:Geometry;\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGeometry:boolean = true;\n\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\n\n\t//temp point used in hit testing\n\tprivate _tempPoint:Point = new Point();\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._animator)\n\t\t\tthis._animator.removeOwner(this);\n\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (subMesh.material) {\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\n\t\t\t}\n\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tthis._animator.addOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Mesh.assetType;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\n\n\t\tthis._material = value;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iAddOwner(subMesh);\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation geometry.\n\t */\n\tpublic get shareAnimationGeometry():boolean\n\t{\n\t\treturn this._shareAnimationGeometry;\n\t}\n\n\tpublic set shareAnimationGeometry(value:boolean)\n\t{\n\t\tthis._shareAnimationGeometry = value;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._subMeshes = new Array<ISubMesh>();\n\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\n\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\n\t\tthis.geometry = geometry || new Geometry();\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\n\t\tthis._iMatrix3D.identity();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.material = null;\n\t\tthis.geometry = null;\n\n\t\tif (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * geometry, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\n\t * </code>\n\t */\n\tpublic clone():Mesh\n\t{\n\t\tvar newInstance:Mesh = new Mesh(this._geometry, this._material);\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:Mesh)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.geometry = this._geometry;\n\t\tnewInstance.material = this._material;\n\t\tnewInstance.castsShadows = this._castsShadows;\n\t\tnewInstance.shareAnimationGeometry = this._shareAnimationGeometry;\n\n        var len:number = this._subMeshes.length;\n        for (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n        if (this._animator)\n\t\t\tnewInstance.animator = this._animator.clone();\n    }\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @returns {SubMeshBase}\n\t */\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\n\t{\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar len:number = subGeoms.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pBoxBounds = subGeoms[i].getBoxBounds(this._pBoxBounds);\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\n\t\tif (!this._center)\n\t\t\tthis._center = new Vector3D();\n\n\t\tthis._center.x = box.x + box.width/2;\n\t\tthis._center.y = box.y + box.height/2;\n\t\tthis._center.z = box.z + box.depth/2;\n\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar len:number = subGeoms.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pSphereBounds = subGeoms[i].getSphereBounds(this._center, this._pSphereBounds);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * Called when a SubGeometry was added to the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryAdded(event:GeometryEvent)\n\t{\n\t\tthis.addSubMesh(event.subGeometry);\n\t}\n\n\t/**\n\t * Called when a SubGeometry was removed from the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\n\t{\n\t\tvar subMesh:ISubMesh;\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar i:number;\n\n\t\t// Important! This has to be done here, and not delayed until the\n\t\t// next render loop, since this may be caused by the geometry being\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry == subGeom) {\n\t\t\t\tsubMesh.dispose();\n\n\t\t\t\tthis._subMeshes.splice(i, 1);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t--len;\n\t\tfor (; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iIndex = i;\n\t}\n\n\t/**\n\t * Adds a SubMeshBase wrapping a SubGeometry.\n\t *\n\t * @param subGeometry\n\t */\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\n\t{\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\n\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\n\t\tvar len:number = this._subMeshes.length;\n\n\t\tsubMesh._iIndex = len;\n\n\t\tthis._subMeshes[len] = subMesh;\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\n\n\t\tvar subMesh:ISubMesh;\n\n\t\tvar len:number = this.subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this.subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\n\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\n\n\t\t\t\tif (!findClosest)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\n\t}\n\n\tpublic _iInvalidateRenderableGeometries()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\n\t}\n\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tif(this._geometry && this._geometry.subGeometries.length) {\n\t\t\tthis._tempPoint.setTo(x,y);\n\t\t\tvar local:Point = this.globalToLocal(this._tempPoint, this._tempPoint);\n\t\t\tvar box:Box;\n\n\t\t\t//early out for box test\n\t\t\tif(!(box = this.getBox()).contains(local.x, local.y, 0))\n\t\t\t\treturn false;\n\n\t\t\t//early out for non-shape tests\n\t\t\tif (!shapeFlag)\n\t\t\t\treturn true;\n\n\t\t\t//ok do the geometry thing\n\t\t\tvar subGeometries:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\t\tvar subGeometriesCount:number = subGeometries.length;\n\t\t\tfor(var i:number = 0; i < subGeometriesCount; i++)\n\t\t\t\tif (SubGeometryUtils.hitTestCurveGeometry(local.x, local.y, 0, box, <CurveSubGeometry> subGeometries[i]))\n\t\t\t\t\treturn true;\n\t\t}\n\n\t\treturn super._hitTestPointInternal(x, y, shapeFlag, masksFlag);\n\t}\n\n\tpublic _clearInterfaces()\n\t{\n\t\tsuper._clearInterfaces();\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._subMeshes[i]._clearInterfaces();\n\t}\n}\n\nexport = Mesh;",
    "import Event = require(\"awayjs-core/lib/events/Event\");\nimport AssetEvent = require(\"awayjs-core/lib/events/AssetEvent\");\nimport ColorTransform = require(\"awayjs-core/lib/geom/ColorTransform\");\nimport IAsset = require(\"awayjs-core/lib/library/IAsset\");\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\nimport Mesh = require(\"awayjs-display/lib/entities/Mesh\");\nimport Billboard = require(\"awayjs-display/lib/entities/Billboard\");\nimport TextField = require(\"awayjs-display/lib/entities/TextField\");\n\nimport MouseEvent               = require(\"awayjs-display/lib/events/MouseEvent\");\n\nimport IMovieClipAdapter\t\t= require(\"awayjs-display/lib/adapters/IMovieClipAdapter\");\nimport Timeline                 = require(\"awayjs-display/lib/base/Timeline\");\nimport FrameScriptManager       = require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\nclass MovieClip extends DisplayObjectContainer\n{\n    public static assetType:string = \"[asset MovieClip]\";\n\n    private _timeline:Timeline;\n\n    private _isButton:boolean = false;\n    private _onMouseOver:(event:MouseEvent) => void;\n    private _onMouseOut:(event:MouseEvent) => void;\n    private _onMouseDown:(event:MouseEvent) => void;\n    private _onMouseUp:(event:MouseEvent) => void;\n\n    private _time:number = 0;// the current time inside the animation\n    private _currentFrameIndex:number = -1;// the current frame\n\n    private _isPlaying:boolean = true;// false if paused or stopped\n\n    // not sure if needed\n    private _enterFrame:Event;\n    private _skipAdvance : boolean;\n    private _isInit:boolean = true;\n\n    private _potentialInstances:Object = {};\n    private _depth_sessionIDs:Object = {};\n    private _sessionID_childs:Object = {};\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IMovieClipAdapter\n\t{\n\t\treturn <IMovieClipAdapter> this._adapter;\n\t}\n\n\tpublic set adapter(value:IMovieClipAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    constructor(timeline:Timeline = null)\n    {\n        super();\n\n        this._enterFrame = new Event(Event.ENTER_FRAME);\n\n        this.inheritColorTransform = true;\n\n        this._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\n        this._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\n        this._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\n        this._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\n\n        this._timeline = timeline || new Timeline();\n    }\n\n\n    public reset_textclones()\n    {\n        if(this.timeline) {\n            for (var key in this._potentialInstances) {\n                if (this._potentialInstances[key] != null) {\n                    if (this._potentialInstances[key].isAsset(TextField)) {\n                        (<TextField>this._potentialInstances[key]).text = (<TextField>this.timeline.getPotentialChildPrototype(key)).text;\n                    }\n                    else if (this._potentialInstances[key].isAsset(MovieClip)) {\n                        (<MovieClip>this._potentialInstances[key]).reset_textclones();\n                    }\n                }\n            }\n        }\n    }\n\n    public get isInit():boolean\n    {\n        return this._isInit;\n    }\n    public set isInit(value:boolean)\n    {\n        this._isInit = value;\n    }\n\n    public get timeline():Timeline\n    {\n        return this._timeline;\n    }\n\n    public set timeline(value:Timeline)\n    {\n        this._timeline = value;\n    }\n\n    /**\n     *\n     */\n    public loop:boolean = true;\n\n    public get numFrames() : number\n    {\n        return this._timeline.numFrames;\n    }\n\n    public jumpToLabel(label:string)\n    {\n        // the timeline.jumpTolabel will set currentFrameIndex\n        this._timeline.jumpToLabel(this, label);\n    }\n\n    /**\n     * the current index of the current active frame\n     */\n    public constructedKeyFrameIndex:number = -1;\n\n    public exit_frame():void\n    {\n        this._skipAdvance = false;\n\n        var child:DisplayObject;\n        for (var i:number = this.numChildren - 1; i >= 0; i--) {\n            child = this._children[i];\n            if(child.isAsset(MovieClip))\n                (<MovieClip> child).exit_frame();\n        }\n    }\n    public reset():void\n    {\n        super.reset();\n\n        // time only is relevant for the root mc, as it is the only one that executes the update function\n        this._time = 0;\n\n        if(this.adapter)\n            this.adapter.freeFromScript();\n\n        this._isPlaying = true;\n\n        this._currentFrameIndex = -1;\n        this.constructedKeyFrameIndex = -1;\n        for (var i:number = this.numChildren - 1; i >= 0; i--)\n            this.removeChildAt(i);\n\n        this._skipAdvance = true;\n\n        if (this._timeline.numFrames) {\n            this._currentFrameIndex = 0;\n            this._timeline.constructNextFrame(this, true, true);\n        }\n    }\n\n\n    public resetSessionIDs()\n    {\n        this._depth_sessionIDs = {};\n    }\n\n    /*\n     * Setting the currentFrameIndex without moving the playhead for this movieclip to the new position\n     */\n    public set_currentFrameIndex(value : number) {\n        this._skipAdvance = true;\n        this._currentFrameIndex = value;\n    }\n    /*\n    * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\n     */\n    public get currentFrameIndex():number\n    {\n        return this._currentFrameIndex;\n    }\n\n    public set currentFrameIndex(value:number)\n    {\n        if (this._currentFrameIndex == value)\n            return;\n\n        if(this._timeline.numFrames) {\n            value = Math.floor(value);\n\n            var skip_script:boolean = false;\n\n            if (value < 0) {\n                value = 0;\n            } else if (value >= this._timeline.numFrames) {\n                value = this._timeline.numFrames - 1;\n                skip_script=true;\n            }\n\n            // on changing currentframe we do not need to set skipadvance. the advanceframe should already be happened...\n            this._skipAdvance = true;\n            //this._time = 0;\n\n            this._timeline.gotoFrame(this, value, skip_script);\n        }\n\n        this._currentFrameIndex = value;\n    }\n\n    public addButtonListeners()\n    {\n        this._isButton = true;\n\n        this.stop();\n\n        this.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n    }\n\n    public removeButtonListeners()\n    {\n        this.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n\n    }\n\n    public getChildAtSessionID(sessionID:number):DisplayObject\n    {\n        return this._sessionID_childs[sessionID];\n    }\n\n    public getSessionIDDepths():Object\n    {\n        return this._depth_sessionIDs;\n    }\n\n    public addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n    {\n        //this should be implemented for all display objects\n        child.inheritColorTransform = true;\n\n        child.reset();// this takes care of transform and visibility\n\n        super.addChildAtDepth(child, depth, replace);\n\n        this._depth_sessionIDs[depth] = child._sessionID;\n\n        this._sessionID_childs[child._sessionID] = child;\n\n        return child;\n    }\n\n    public removeChildAtInternal(index:number /*int*/):DisplayObject\n    {\n        var child:DisplayObject = this._children[index];\n\n        //check to make sure _depth_sessionIDs wasn't modified with a new child\n        if (this._depth_sessionIDs[child._depthID] == child._sessionID)\n            delete this._depth_sessionIDs[child._depthID];\n\n        delete this._sessionID_childs[child._sessionID];\n\n        child._sessionID = -1;\n\n        if(child.adapter)\n            child.adapter.freeFromScript();\n\n        this.adapter.unregisterScriptObject(child);\n\n        return super.removeChildAtInternal(index);\n    }\n\n    public get assetType():string\n    {\n        return MovieClip.assetType;\n    }\n\n    /**\n     * Starts playback of animation from current position\n     */\n    public play()\n    {\n        this._isPlaying = true;\n    }\n\n    /**\n     * should be called right before the call to away3d-render.\n     */\n    public update()\n    {\n        this.advanceFrame();\n\n        // after we advanced the scenegraph, we might have some script that needs executing\n        FrameScriptManager.execute_queue();\n\n        // now we want to execute the onEnter\n        this.dispatchEvent(this._enterFrame);\n\n        // after we executed the onEnter, we might have some script that needs executing\n        FrameScriptManager.execute_queue();\n\n        // now we execute any intervals queued\n        FrameScriptManager.execute_intervals();\n\n        // finally, we execute any scripts that were added from intervals\n        FrameScriptManager.execute_queue();\n\n        this.exit_frame();\n    }\n\n    public getPotentialChildInstance(id:number) : DisplayObject\n    {\n        if (!this._potentialInstances[id])\n            this._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\n\n        return this._potentialInstances[id];\n    }\n\n\n    /**\n     * Stop playback of animation and hold current position\n     */\n    public stop()\n    {\n        this._isPlaying = false;\n    }\n\n    public clone():MovieClip\n    {\n        var newInstance:MovieClip = new MovieClip(this._timeline);\n\n        this.copyTo(newInstance);\n\n        return newInstance;\n    }\n\n    public copyTo(newInstance:MovieClip)\n    {\n        super.copyTo(newInstance);\n\n        newInstance.timeline = this._timeline;\n        newInstance.loop = this.loop;\n    }\n\n    public advanceFrame(skipChildren:boolean = false)\n    {\n        var numFrames:number = this._timeline.numFrames;\n        if(numFrames) {\n            if (((this._isPlaying && !this._skipAdvance) || this._currentFrameIndex == -1) && (this._currentFrameIndex != numFrames - 1 || this.loop)) {\n                this._currentFrameIndex++;\n                if (this._currentFrameIndex == numFrames) { // looping - jump to first frame.\n                    this.currentFrameIndex = 0;\n                } else { // not looping - construct next frame\n                    this._timeline.constructNextFrame(this);\n                }\n            }\n\n            if (!skipChildren) {\n                var len:number = this.numChildren;\n                var child:DisplayObject;\n                for (var i:number = 0; i <  len; ++i) {\n                    child = this._children[i];\n\n                    if (child.isAsset(MovieClip))\n                        (<MovieClip> child).advanceFrame();\n                }\n            }\n        }\n\n        this._skipAdvance = false;\n    }\n\n// DEBUG CODE:\n    logHierarchy(depth: number = 0):void\n    {\n        this.printHierarchyName(depth, this);\n\n        var len = this.numChildren;\n        var child:DisplayObject;\n        for (var i:number = 0; i < len; i++) {\n            child = this._children[i];\n\n            if (child.isAsset(MovieClip))\n                (<MovieClip> child).logHierarchy(depth + 1);\n            else\n                this.printHierarchyName(depth + 1, child);\n        }\n    }\n\n    printHierarchyName(depth:number, target:DisplayObject)\n    {\n        var str = \"\";\n        for (var i = 0; i < depth; ++i)\n            str += \"--\";\n\n        str += \" \" + target.name + \" = \" + target.id;\n        console.log(str);\n    }\n\n    public _clearInterfaces()\n    {\n        //clear out potential instances\n        for (var key in this._potentialInstances) {\n            var instance:DisplayObject = this._potentialInstances[key];\n\n            //only dispose instances that are not used in script ie. do not have an instance name\n            if (instance.name == \"\") {\n                instance.dispose();\n                delete this._potentialInstances[key];\n            } else {\n                instance._clearInterfaces();\n            }\n        }\n\n        super._clearInterfaces();\n    }\n}\nexport = MovieClip;\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n}\n\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Shape = new Shape();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = name;\n\t\tclone.maskMode = this.maskMode;\n\t\tclone.masks = this.masks? this.masks.concat() : null;\n\t\tclone._graphics = this._graphics;\n\t\treturn clone;\n\t}\n}\n\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\n{\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _cubeMap:SingleCubeTexture;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _owners:Array<IRenderableOwner>;\n\tprivate _mipmap:boolean = false;\n\tprivate _smooth:boolean = true;\n\n\tprivate _animator:IAnimator;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pIinvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get cubeMap():SingleCubeTexture\n\t{\n\t\treturn this._cubeMap;\n\t}\n\n\tpublic set cubeMap(value:SingleCubeTexture)\n\t{\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\n\t\tif (value && this._cubeMap)\n\t\t\tthis._pInvalidateRender();\n\n\t\tthis._cubeMap = value;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(cubeMap:SingleCubeTexture = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\t\tthis._owners = new Array<IRenderableOwner>(this);\n\n\t\tthis.cubeMap = cubeMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//skybox do not get collected in the standard entity list\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n}\n\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Mesh\n{\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tvalue=value.toString();\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\t\tthis.reConstruct();\n\t}\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\t\tthis._textFormat = value;\n\t\tthis.reConstruct();\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic _textColor:number /*int*/;\n\n\tpublic get textColor()\n\t{\n\t\treturn this._textColor;\n\t}\n\n\tpublic set textColor(value:number)\n\t{\n\t\tthis._textColor = value;\n\t\tconsole.log(\"textcolor = \"+value);\n\t\tif(!this._iColorTransform)\n\t\t\tthis._iColorTransform = new ColorTransform();\n\n\t\tthis._iColorTransform.color = value;\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\n\tpublic set textWidth(value:number)\n\t{\n\t\tthis._textWidth = value;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\n\tpublic set textHeight(value:number)\n\t{\n\t\tthis._textHeight = value;\n\t}\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(new Geometry());\n\t\tthis.type = TextFieldType.STATIC;\n\t}\n\n\t/**\n\t * Reconstructs the Geometry for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\n\t\tif(this._textFormat==null)\n\t\t\treturn;\n\n\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\n\n\t\tif(this._text==\"\")\n\t\t\treturn;\n\n\t\tvar vertices:Array<number> = new Array<number>();\n\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar additional_margin_x:number= this._textFormat.font_table.offset_x;\n\t\tvar additional_margin_y:number= this._textFormat.font_table.offset_y;\n\t\tvar y_offset:number=additional_margin_y;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar whitespace_width=(this._textFormat.font_table.get_whitespace_width() * char_scale);\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\\\n\");\n\t\tvar final_lines_chars:Array<Array<TesselatedFontChar>> = [];\n\t\tvar final_lines_char_scale:Array<Array<number>> = [];\n\t\tvar final_lines_width:Array<number> = [];\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\n\n\t\t\tfinal_lines_chars.push([]);\n\t\t\tfinal_lines_char_scale.push([]);\n\t\t\tfinal_lines_width.push(0);\n\n\n\t\t\tvar words:Array<string> = textlines[tl].split(\" \");\n\t\t\tfor (var i = 0; i < words.length; i++) {\n\t\t\t\tvar word_width:number = 0;\n\t\t\t\tvar word_chars:Array<TesselatedFontChar> = [];\n\t\t\t\tvar word_chars_scale:Array<number> = [];\n\t\t\t\tvar c_cnt:number = 0;\n\t\t\t\tfor (var w = 0; w < words[i].length; w++) {\n\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.font_table.get_font_em_size();\n\t\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(words[i].charCodeAt(w).toString());\n\t\t\t\t\tif (this_char == null) {\n\t\t\t\t\t\tif (this._textFormat.fallback_font_table) {\n\t\t\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.fallback_font_table.get_font_em_size();\n\t\t\t\t\t\t\tthis_char = this._textFormat.fallback_font_table.get_subgeo_for_char(words[i].charCodeAt(w).toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (this_char != null) {\n\t\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == words[i].charCodeAt(w)) {\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tword_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t\tword_width += whitespace_width;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\t\tword_width += whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t\tword_chars_scale[c_cnt] = char_scale;\n\t\t\t\t\tword_chars[c_cnt++] = this_char;\n\t\t\t\t}\n\n\t\t\t\tif ((final_lines_width[final_lines_width.length - 1] + word_width) <= this.textWidth) {\n\t\t\t\t\t// if line can hold this word without breaking the bounds, we can just add all chars\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += word_width;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// word does not fit\n\t\t\t\t\t// todo respect multiline and autowrapping properties.\n\t\t\t\t\t// right now we just pretend everything has autowrapping and multiline\n\t\t\t\t\tfinal_lines_chars.push([]);\n\t\t\t\t\tfinal_lines_char_scale.push([]);\n\t\t\t\t\tfinal_lines_width.push(0);\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] = word_width;\n\t\t\t\t}\n\n\t\t\t\tif (i < (words.length - 1)) {\n\t\t\t\t\tif ((final_lines_width[final_lines_width.length - 1] + whitespace_width) <= this.textWidth) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(null);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(char_scale);\n\t\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfinal_lines_chars.push([null]);\n\t\t\t\t\t\tfinal_lines_char_scale.push([char_scale]);\n\t\t\t\t\t\tfinal_lines_width.push(whitespace_width);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < final_lines_chars.length; i++) {\n\n\t\t\tvar x_offset:number=additional_margin_x;\n\t\t\tif(this._textFormat.align==\"center\"){\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])/2;\n\t\t\t}\n\t\t\telse if(this._textFormat.align==\"right\"){\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])-additional_margin_x;\n\t\t\t}\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\n\t\t\t//console.log(\"this._width=\"+this._width);\n\t\t\tfor (var t = 0; t < final_lines_chars[i].length; t++) {\n\t\t\t\tvar this_char:TesselatedFontChar = final_lines_chars[i][t];\n\t\t\t\tchar_scale = final_lines_char_scale[i][t];\n\t\t\t\tif (this_char != null) {\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\n\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\n\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\n\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\tx_offset+=whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tx_offset+=whitespace_width;\n\t\t\t\t}\n\t\t\t}\n\t\t\ty_offset+=(this._textFormat.font_table.get_font_em_size() * char_scale);\n\n\t\t}\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(vertices);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\n\t\tthis.subMeshes[0].material=this._textFormat.material;\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n\n    public clone():TextField\n    {\n\t\tvar newInstance:TextField = new TextField();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n    }\n\n\n\tpublic copyTo(newInstance:TextField)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\t// each textfield needs its own geometry.\n\t\tnewInstance.geometry=new Geometry();\n\n\t\tnewInstance.textWidth = this._textWidth;\n\t\tnewInstance.textHeight = this._textHeight;\n\t\tnewInstance.textFormat = this._textFormat;\n\t\t//newInstance.textColor = this._textColor;\n\t\tnewInstance.text = this._text;\n\t}\n}\n\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass CastError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends Event\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n}\n\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass DisplayObjectEvent extends Event\n{\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\n\tpublic static SKEW_CHANGED:string = \"skewChanged\";\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\tpublic object:DisplayObject;\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis.object = object;\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GeometryEvent\n* @see away3d.core.base.Geometry\n*/\nclass GeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\n\n\t/**\n\t *\n\t */\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\n\n\tprivate _subGeometry:SubGeometryBase;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\n\t */\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\n\t */\n\tpublic get subGeometry():SubGeometryBase\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\n\t}\n}\n\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LightEvent extends Event\n{\n\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():Event\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass MaterialEvent extends Event\n{\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableOwnerEvent\n * @see away.core.base.Geometry\n */\nclass RenderableOwnerEvent extends Event\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\n\n\tprivate _renderOwner:IRenderOwner;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderOwner:IRenderOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderOwner = renderOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderOwner():IRenderOwner\n\t{\n\t\treturn this._renderOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\n\t}\n}\n\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass RendererEvent extends Event\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ResizeEvent extends Event\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n}\n\nexport = ResizeEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.SubGeometryEvent\n * @see away.core.base.Geometry\n */\nclass SubGeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a SubGeometry's index data has been updated.\n\t */\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's index data has been disposed.\n\t */\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\n\t\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been updated.\n\t */\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\n\t */\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\n\n\t\n\tprivate _attributesView:AttributesView;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param attributesView An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, attributesView:AttributesView)\n\t{\n\t\tsuper(type);\n\n\t\tthis._attributesView = attributesView;\n\t}\n\n\t/**\n\t * The attributes view of the vertex data.\n\t */\n\tpublic get attributesView():AttributesView\n\t{\n\t\treturn this._attributesView;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\n\t}\n}\n\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nclass TouchEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:TouchEvent;\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\t\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\t\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\t\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\t\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\t\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\t\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\t\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\t\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\t\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\t\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\n\tpublic touchPointID:number;\n\t\n\t/**\n\t * Create a new TouchEvent object.\n\t * @param type The type of the TouchEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\t\t\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\t\n\t/**\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\t\t\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\t\t\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\t\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\t\t\n\t\tresult._iParentEvent = this;\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\t\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\n\tprivate static _defaultTextureMaterial:BasicMaterial;\n\tprivate static _defaultColorMaterial:BasicMaterial;\n\tprivate static _defaultTexture:Single2DTexture;\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\n\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\n\t\t}\n\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\n\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\n\t}\n\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tprivate static createDefaultCubeTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\n\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t}\n\n\tprivate static createCheckeredBitmapImageCube()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\n\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\n\t}\n\n\tprivate static createCheckeredBitmapImage2D()\n\t{\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\tfor (j = 0; j < 8; j++) {\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\n\t}\n\n\tprivate static createDefaultTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\n\t}\n\n\tprivate static createDefaultCubeTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\n\t}\n\n\tprivate static createDefaultColorMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\n\t}\n}\n\nexport = DefaultMaterialManager;",
    "import MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\n\nclass FrameScriptManager\n{\n\t// queues pass1 of scripts.\n\tprivate static _queued_mcs:Array<MovieClip> = [];\n\tprivate static _queued_scripts:Array<Function> = [];\n\n\t// queues pass2 of scripts. this will be inserted in reversed order into pass1 queue right before something should be added to pass1\n\tprivate static _queued_mcs_pass2:Array<MovieClip> = [];\n\tprivate static _queued_scripts_pass2:Array<Function> = [];\n\n\tprivate static _active_intervals:Object = new Object(); // maps id to function\n\n\tprivate static _intervalID:number=0;\n\tpublic static setInterval(func:any):number\n\t{\n\t\tthis._intervalID++;\n\t\tthis._active_intervals[this._intervalID]=func;\n\t\treturn this._intervalID\n\t}\n\n\tpublic static clearInterval(id:number):void\n\t{\n\t\tdelete this._active_intervals[id];\n\t}\n\n\tpublic static execute_intervals():void\n\t{\n\t\tfor(var key in this._active_intervals){\n\t\t\tthis._active_intervals[key].call();\n\t\t}\n\t}\n\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\n\t{\n\t\t// whenever we queue scripts of new objects, we first inject the lists of pass2\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2=[];\n\t\tthis._queued_scripts_pass2=[];\n\t\tthis._queued_mcs.push(mc);\n\t\tthis._queued_scripts.push(script);\n\t}\n\n\tpublic static add_script_to_queue_pass2(mc:MovieClip, script:Function):void\n\t{\n\t\tthis._queued_mcs_pass2.push(mc);\n\t\tthis._queued_scripts_pass2.push(script);\n\t}\n\n\tpublic static execute_queue():void\n\t{\n\t\tif(this._queued_mcs.length==0 && this._queued_mcs_pass2.length==0)\n\t\t\treturn;\n\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2=[];\n\t\tthis._queued_scripts_pass2=[];\n\n\t\tvar mc:MovieClip;\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\n\t\t\t// during the loop we might add more scripts to the queue\n\t\t\tmc=this._queued_mcs[i];\n\t\t\tif(mc.scene!=null) {\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\n\t\t\t//\ttry {\n\t\t\t\t\tthis._queued_scripts[i].call(caller);\n\t\t\t//\t}\n\t\t\t/*\tcatch (err) {\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\n\t\t\t\t\tconsole.log(err.message);\n\t\t\t\t\tthrow err;\n\t\t\t\t}*/\n\t\t\t}\n\t\t}\n\t\t// all scripts executed. clear all\n\t\tthis._queued_mcs=[];\n\t\tthis._queued_scripts=[];\n\t}\n}\nexport = FrameScriptManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\nimport FrameScriptManager\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\t if (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\n\t\t\twhile (dispatcher) {\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\n\t\t\t\t\tdispatcher.dispatchEvent(event);\n\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t}\n\t\t\t// not totally sure, but i think just calling it is easier and cheaper than any options for that\n\t\t\t// if nothing is queued, the function will return directly anyway\n\t\t\tFrameScriptManager.execute_queue();\n\n\t\t}\n\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.push(view);\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = (sourceEvent.clientX != null)? sourceEvent.clientX : sourceEvent.changedTouches[0].clientX;\n\t\t\tevent.screenY = (sourceEvent.clientY != null)? sourceEvent.clientY : sourceEvent.changedTouches[0].clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event)\n\t{\n\t\tif (this._iUpdateDirty)\n\t\t\treturn;\n\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tview._pTouchPoints.length = 0;\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\n\t\t\tif (event.touches) {\n\t\t\t\tvar touch;\n\t\t\t\tvar len:number = event.touches.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\t\ttouch = event.touches[i];\n\t\t\t\t\tview._pTouchPoints.push(new TouchPoint(touch.clientX + bounds.left, touch.clientY + bounds.top, touch.identifier));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\n\nclass TouchManager\n{\n\tprivate static _instance:TouchManager;\n\n\tprivate _updateDirty:boolean = true;\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _numTouchPoints:number;\n\tprivate _touchPoint:TouchPoint;\n\tprivate _iCollidingObject:PickingCollisionVO;\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tpublic static _iCollidingObjectFromTouchId:Object;\n\tpublic static _previousCollidingObjectFromTouchId:Object;\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\n\t\n\tprivate _touchPoints:Array<TouchPoint>;\n\tprivate _touchPointFromId:Object;\n\t\n\tprivate _touchMoveEvent:TouchEvent;\n\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\n\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\n\t\n\tconstructor()\n\t{\n\t\tthis._touchPoints = new Array<TouchPoint>();\n\t\tthis._touchPointFromId = new Object();\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\n\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\n\t}\n\n\tpublic static getInstance():TouchManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new TouchManager());\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Interface.\n\t// ---------------------------------------------------------------------\n\t\n\tpublic updateCollider(forceTouchMove:boolean)\n\t{\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\n\t\t//\t}\n\t\t//}\n\t}\n\t\n\tpublic fireTouchEvents(forceTouchMove:boolean)\n\t{\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[i];\n\t\t\t// If colliding object has changed, queue over/out events.\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\t\tif (this._previousCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n\t\t\t\tif (this._iCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t\t}\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\n\t\t\tif (forceTouchMove && this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t}\n\n\t\tvar event:AwayTouchEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\t\t\t\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._updateDirty = false;\n\t\t\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t}\n\t}\n\t\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\n\t{\n\t\t// 2D properties.\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\tevent.altKey = sourceEvent.altKey;\n\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\tevent.screenX = touch.x;\n\t\tevent.screenY = touch.y;\n\t\tevent.touchPointID = touch.id;\n\t\t\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t\t// SubGeometryIndex.\n\t\t\tevent.subGeometryIndex = collider.index;\n\t\t\t\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\t\t\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Event handlers.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate onTouchBegin(event:TouchEvent)\n\t{\n\t\t\n\t\tvar touch:TouchPoint = new TouchPoint();\n\t\t//touch.id = event.touchPointID;\n\t\t//touch.x = event.stageX;\n\t\t//touch.y = event.stageY;\n\t\tthis._numTouchPoints++;\n\t\tthis._touchPoints.push(touch);\n\t\tthis._touchPointFromId[ touch.id ] = touch;\n\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\n\n\t\tthis._updateDirty = true;\n\t}\n\t\n\tprivate onTouchMove(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t////touch.x = event.stageX;\n\t\t////touch.y = event.stageY;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n\t\n\tprivate onTouchEnd(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._touchPointFromId[ touch.id ] = null;\n\t\t//this._numTouchPoints--;\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n}\n\n\nexport = TouchManager;\n\nclass TouchPoint\n{\n\tpublic id:number;\n\tpublic x:number;\n\tpublic y:number;\n}\n\n\n/**\n * Classes for Touch Interfaces\n */\ninterface TouchEvent extends UIEvent {\n\ttouches: TouchList;\n\ttargetTouches: TouchList;\n\tchangedTouches: TouchList;\n\taltKey: boolean;\n\tmetaKey: boolean;\n\tctrlKey: boolean;\n\tshiftKey: boolean;\n\trotation: number;\n\tscale: number;\n\n\t// for iOS\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\n\n\t// for Android\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\n}\n\ndeclare var TouchEvent: {\n\tprototype: TouchEvent;\n\tnew (): TouchEvent;\n}\n\ninterface TouchList {\n\tlength: number;\n\t[index: number]: Touch;\n\titem: (index: number) => Touch;\n}\n\ninterface Touch {\n\tidentifier: number;\n\ttarget: EventTarget;\n\tscreenX: number;\n\tscreenY: number;\n\tclientX: number;\n\tclientY: number;\n\tpageX: number;\n\tpageY: number;\n}\n\ninterface Window {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface Document {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface HTMLElement {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ndeclare var ontouchstart: (ev: TouchEvent) => any;\ndeclare var ontouchmove: (ev: TouchEvent) => any;\ndeclare var ontouchend: (ev: TouchEvent) => any;\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\n\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\n\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase\n{\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\n\n    private _preserveAlpha:boolean = false;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BasicMaterial.assetType;\n\t}\n\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tif (textureColor instanceof Image2D)\n\t\t\ttextureColor = new Single2DTexture(textureColor);\n\n\t\tif (textureColor instanceof TextureBase) {\n\t\t\tthis.texture = <TextureBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n        this._preserveAlpha = value;\n        this._pInvalidateRender();\n    }\n}\n\nexport = BasicMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends AssetBase implements IRenderOwner\n{\n\tprivate _colorTransform:ColorTransform;\n\tprivate _pUseColorTransform:boolean = false;\n\tprivate _frameRect:Rectangle;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\t\n\tprivate _sizeChanged:MaterialEvent;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\n\t/**\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\n\t *\n\t * @private\n\t */\n\tpublic _iMaterialId:number = 0;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderableOwner>;\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _mipmap:boolean = true;\n\tprivate _smooth:boolean = true;\n\tprivate _repeat:boolean = false;\n\tprivate _color:number = 0xFFFFFF;\n\tpublic _pTexture:TextureBase;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tpublic _pHeight:number = 1;\n\tpublic _pWidth:number = 1;\n\n\tprivate _onLightChangeDelegate:(event:Event) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis._owners = new Array<IRenderableOwner>();\n\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic get frameRect():Rectangle\n\t{\n\t\treturn this._frameRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():TextureBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:TextureBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tthis._pInvalidatePasses();\n\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\n\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\n\t\t} else {\n\t\t\tthis._frameRect = null;\n\t\t\tthis._pHeight = 1;\n\t\t\tthis._pWidth = 1;\n\t\t}\n\n\n\t\tthis._pNotifySizeChanged();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get useColorTransform():boolean\n\t{\n\t\treturn this._pUseColorTransform;\n\t}\n\n\tpublic set useColorTransform(value:boolean)\n\t{\n\t\tif (this._pUseColorTransform == value)\n\t\t\treturn;\n\t\tthis._pUseColorTransform = value;\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderableOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderableOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * Removes an IRenderableOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pInvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateAnimation();\n\t}\n\t\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pNotifySizeChanged()\n\t{\n\t\tif (!this._sizeChanged)\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\n\n\t\tthis.dispatchEvent(this._sizeChanged);\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(renderable:IRenderable)\n\t{\n\t\tthis.updateProbeWeights(renderable);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(renderable:IRenderable)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:Function;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _changeDispatcher:EventDispatcher;\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis._changeDispatcher = new EventDispatcher(this);\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.addEventListener(type, listener);\n\t}\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\n\t}\n\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\treturn this._changeDispatcher.dispatchEvent(event);\n\t}\n\n\tpublic hasEventListener(type:string):boolean\n\t{\n\t\treturn this._changeDispatcher.hasEventListener(type);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():SingleCubeTexture\n\t{\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tsuper.iSetDepthMap(depthMap);\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = depthMap.width;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic pCreateDepthTexture():Single2DTexture\n\t{\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass ShadowMapperBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tpublic _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tpublic _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase)\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\n\n/**\n * @class away.partition.Partition\n */\nclass BasicPartition extends PartitionBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._rootNode = new NodeBase();\n\t}\n}\n\nexport = BasicPartition;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\tconstructor(pool:EntityNodePool, camera:Camera, partition:PartitionBase)\n\t{\n\t\tsuper(pool, camera, partition);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CollectorBase = require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity = require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport PartitionBase\t\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport NodeBase = require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode = require(\"awayjs-display/lib/partition/EntityNode\");\nimport ContainerNodePool = require(\"awayjs-display/lib/pool/ContainerNodePool\");\nimport INode\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\n\n/**\n * Maintains scenegraph heirarchy when collecting nodes\n */\nclass ContainerNode extends NodeBase implements IDisplayObjectNode\n{\n    public isContainerNode:boolean = true;\n\n    public _iUpdateQueueNext:IDisplayObjectNode;\n\n    private _pool:ContainerNodePool;\n    private _container : DisplayObjectContainer;\n    private _partition:PartitionBase;\n    private _childDepths:Array<number> = new Array<number>();\n    private _childMasks:Array<INode> = new Array<INode>();\n    private _numChildMasks:number = 0;\n\n    public _pEntityNode:IDisplayObjectNode;\n\n    constructor(pool:ContainerNodePool, container:DisplayObjectContainer, partition:PartitionBase)\n    {\n        super();\n\n        this._pool = pool;\n        this._container = container;\n        this._partition = partition;\n    }\n\n    public get displayObject():DisplayObject\n    {\n        return this._container;\n    }\n\n    /**\n     *\n     * @param traverser\n     */\n    public acceptTraverser(traverser:CollectorBase)\n    {\n        //containers nodes are for ordering only, no need to check enterNode or debugVisible\n        if (this.numEntities == 0)\n            return;\n\n        if (this._pEntityNode)\n            this._pEntityNode.acceptTraverser(traverser);\n\n        var i:number;\n        for (i = 0; i < this._numChildMasks; i++)\n            this._childMasks[i].acceptTraverser(traverser);\n\n        for (i = 0; i < this._pNumChildNodes; i++)\n            this._pChildNodes[i].acceptTraverser(traverser);\n    }\n\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    public iAddNode(node:IDisplayObjectNode)\n    {\n        node.parent = this;\n\n        if (!node.isContainerNode && node.displayObject.isContainer) {\n            this._pEntityNode = node;\n        } else if (node.displayObject.maskMode) {\n            this._childMasks.push(node);\n            this._numChildMasks = this._childMasks.length;\n        } else {\n            var depth:number = node.displayObject._depthID;\n            var len:number = this._childDepths.length;\n            var index:number = len;\n\n            while (index--)\n                if (this._childDepths[index] < depth)\n                    break;\n\n            index++;\n\n            if (index < len) {\n                this._pChildNodes.splice(index, 0, node);\n                this._childDepths.splice(index, 0, depth);\n            } else {\n                this._pChildNodes.push(node);\n                this._childDepths.push(depth);\n            }\n            this._pNumChildNodes = this._childDepths.length;\n        }\n\n        node._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n        var numEntities:number = node.numEntities;\n        node = this;\n\n        do {\n            node.numEntities += numEntities;\n        } while ((node = <EntityNode> node.parent) != null);\n    }\n\n    public dispose()\n    {\n        super.dispose();\n\n        this._childDepths = null;\n        this._childMasks = null;\n\n        this._pool.disposeItem(this._container);\n        this._partition.iRemoveEntity(this);\n\n        this._pool = null;\n        this._container = null;\n        this._partition = null;\n    }\n\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    public iRemoveNode(node:IDisplayObjectNode)\n    {\n        if (!node.isContainerNode && node.displayObject.isContainer) {\n            this._pEntityNode = null;\n        } else if (node.displayObject.maskMode) {\n            this._childMasks.splice(this._childMasks.indexOf(node), 1);\n            this._numChildMasks = this._childMasks.length;\n        } else {\n            var index:number = this._pChildNodes.indexOf(node);\n\n            this._pChildNodes.splice(index, 1);\n            this._childDepths.splice(index, 1);\n\n            this._pNumChildNodes = this._childDepths.length;\n        }\n\n        node._iUpdateImplicitDebugVisible(false);\n\n        var numEntities:number = node.numEntities;\n        node = this;\n\n        do {\n            node.numEntities -= numEntities;\n        } while ((node = <IDisplayObjectNode> node.parent) != null);\n    }\n}\nexport = ContainerNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\tpublic static assetClass:IAssetClass = DirectionalLight;\n\n\tprivate _directionalLight:DirectionalLight;\n\n\t/**\n\t *\n\t * @param directionalLight\n\t */\n\tconstructor(pool:EntityNodePool, directionalLight:DirectionalLight, partition:PartitionBase)\n\t{\n\t\tsuper(pool, directionalLight, partition);\n\n\t\tthis._directionalLight = directionalLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends NodeBase implements IDisplayObjectNode\n{\n\tpublic isContainerNode:boolean = false;\n\n\tpublic _iUpdateQueueNext:IDisplayObjectNode;\n\tprivate _pool:EntityNodePool;\n\tprivate _entity:DisplayObject;\n\tprivate _partition:PartitionBase;\n\tpublic _bounds:BoundingVolumeBase;\n\n\tconstructor(pool:EntityNodePool, entity:DisplayObject, partition:PartitionBase)\n\t{\n\t\tsuper();\n\n\t\tthis._pool = pool;\n\t\tthis._entity = entity;\n\t\tthis._partition = partition;\n\t\tthis.numEntities = 1;\n\n\t\tthis.updateBounds();\n\n\t\tthis.debugVisible = this._entity.debugVisible;\n\t}\n\n\tpublic get displayObject():DisplayObject\n\t{\n\t\treturn this._entity;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this.displayObject.castsShadows;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this)) {\n\t\t\ttraverser.applyEntity(<IEntity> this._entity);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._pool.disposeItem(this._entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\treturn this._bounds.boundsPrimitive;\n\t}\n\n\tpublic invalidatePartition()\n\t{\n\t\tthis._bounds.invalidate();\n\n\t\t//this._partition.iMarkForUpdate(this);\n\t}\n\n\tpublic updateBounds()\n\t{\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis.updateDebugEntity();\n\t}\n}\n\nexport = EntityNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\tpublic static id:string = \"lightProbeNode\";\n\n\tprivate _lightProbe:LightProbe;\n\n\t/**\n\t *\n\t * @param lightProbe\n\t */\n\tconstructor(pool:EntityNodePool, lightProbe:LightProbe, partition:PartitionBase)\n\t{\n\t\tsuper(pool, lightProbe, partition);\n\n\t\tthis._lightProbe = lightProbe;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase implements INode\n{\n\tprivate _debugChildrenVisible:boolean;\n\tprivate _explicitDebugVisible:boolean;\n\tpublic _pImplicitDebugVisible:boolean;\n\tpublic _pChildNodes:Array<INode> = new Array<INode>();\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic numEntities:number = 0;\n\n\tpublic parent:INode;\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._explicitDebugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (this._explicitDebugVisible == value)\n\t\t\treturn;\n\n\t\tthis._explicitDebugVisible = value;\n\n\t\tthis._iUpdateImplicitDebugVisible(this.parent? this.parent.debugChildrenVisible : false);\n\n\t}\n\n\tpublic get debugChildrenVisible():boolean\n\t{\n\t\treturn this._debugChildrenVisible;\n\t}\n\n\tpublic set debugChildrenVisible(value:boolean)\n\t{\n\t\tif (this._debugChildrenVisible == value)\n\t\t\treturn;\n\n\t\tthis._debugChildrenVisible = value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.parent = null;\n\t\tthis._pChildNodes = null;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (this.numEntities == 0 && !this._pImplicitDebugVisible)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tfor (var i:number = 0; i < this._pNumChildNodes; i++)\n\t\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic applyDebugEntity(traverser:CollectorBase)\n\t{\n\t\tif (this._pDebugEntity == null)\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\n\t\ttraverser.applyEntity(this._pDebugEntity);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:INode)\n\t{\n\t\tnode.parent = this;\n\t\tthis.numEntities += node.numEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities += numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:INode)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tnode._iUpdateImplicitDebugVisible(false);\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities -= numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\tpublic _iUpdateImplicitDebugVisible(value:boolean)\n\t{\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\n\t\t\treturn;\n\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t} else {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = null;\n\t\t}\n\t\t\n\t}\n\n\tpublic updateDebugEntity()\n\t{\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t}\n\t}\n\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = NodeBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\n/**\n * @class away.partition.Partition\n */\nclass PartitionBase\n{\n\tpublic _entityNodePool:EntityNodePool;\n\tpublic _rootNode:INode;\n\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:IDisplayObjectNode;\n\n\tconstructor()\n\t{\n\t\tthis._entityNodePool = new EntityNodePool(this);\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:IDisplayObjectNode)\n\t{\n\t\tvar t:IDisplayObjectNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:IDisplayObjectNode)\n\t{\n\t\tvar t:IDisplayObjectNode;\n\n\t\tif (node.parent) {\n\t\t\tnode.parent.iRemoveNode(node);\n\t\t\tnode.parent = null;\n\t\t}\n\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:INode):INode\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:IDisplayObjectNode = this._updateQueue;\n\t\twhile (node) {\n\t\t\t//required for controllers with autoUpdate set to true and queued events\n\t\t\tnode.displayObject._iInternalUpdate();\n\t\t\tnode = node._iUpdateQueueNext;\n\t\t}\n\n\t\t//reset head\n\t\tnode = this._updateQueue;\n\t\tvar targetNode:INode;\n\t\tvar t:IDisplayObjectNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this.findParentForNode(node);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node.parent)\n\t\t\t\t\tnode.parent.iRemoveNode(node);\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t} while ((node = t) != null);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iRemoveEntity(this._entityNodePool.getItem(displayObject));\n\t}\n}\n\nexport = PartitionBase;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\tpublic static id:string = \"pointLightNode\";\n\n\tprivate _pointLight:PointLight;\n\n\t/**\n\t *\n\t * @param pointLight\n\t */\n\tconstructor(pool:EntityNodePool, pointLight:PointLight, partition:PartitionBase)\n\t{\n\t\tsuper(pool, pointLight, partition);\n\n\t\tthis._pointLight = pointLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._pointLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport ContainerNodePool\t\t\t= require(\"awayjs-display/lib/pool/ContainerNodePool\");\nimport INode\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\n\n/**\n * @class away.partition.Partition\n */\nclass SceneGraphPartition extends PartitionBase\n{\n\tpublic _containerNodePool:ContainerNodePool;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._containerNodePool = new ContainerNodePool(this);\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tsuper.traverse(traverser);\n\t}\n\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:IDisplayObjectNode):INode\n\t{\n\t\tif (node.displayObject.partition == this || node.displayObject._iIsRoot) {\n\t\t\tthis._rootNode = node;\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!node.isContainerNode && node.displayObject.isContainer)\n\t\t\treturn this._containerNodePool.getItem(<DisplayObjectContainer> node.displayObject);\n\n\t\treturn this._containerNodePool.getItem(node.displayObject.parent);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iRegisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iMarkForUpdate(this._containerNodePool.getItem(<DisplayObjectContainer> displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iUnregisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iRemoveEntity(this._containerNodePool.getItem(<DisplayObjectContainer> displayObject));\n\t}\n}\n\nexport = SceneGraphPartition;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\tpublic static id:string = \"skyboxNode\";\n\n\tprivate _skyBox:Skybox;\n\n\t/**\n\t * Creates a new SkyboxNode object.\n\t * @param skyBox The Skybox to be contained in the node.\n\t */\n\tconstructor(pool:EntityNodePool, skyBox:Skybox, partition:PartitionBase)\n\t{\n\t\tsuper(pool, skyBox, partition);\n\n\t\tthis._skyBox = skyBox;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applySkybox(this._skyBox);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._skyBox._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\n\t{\n\t\tpickingCollisionVO.renderableOwner = null;\n\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t//\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\n\t\t//\n\t\t//\treturn true;\n\t\t//}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\ti0 = indices[index]*posDim;\n\t\t\ti1 = indices[index + 1]*posDim;\n\t\t\ti2 = indices[index + 2]*posDim;\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positions[i0];\n\t\t\tp0y = positions[i0 + 1];\n\t\t\tp0z = positions[i0 + 2];\n\t\t\tp1x = positions[i1];\n\t\t\tp1y = positions[i1 + 1];\n\t\t\tp1z = positions[i1 + 2];\n\t\t\tp2x = positions[i2];\n\t\t\tp2y = positions[i2 + 1];\n\t\t\tp2z = positions[i2 + 2];\n\n\t\t\t// evaluate sides and triangle normal\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts0y = p1y - p0y;\n\t\t\ts0z = p1z - p0z;\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\t\t\ts1y = p2y - p0y;\n\t\t\ts1z = p2z - p0z;\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\tnx *= nl;\n\t\t\tny *= nl;\n\t\t\tnz *= nl;\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\n\t\t\t\t\tshortestCollisionDistance = t;\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\t\tpickingCollisionVO.index = index;\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n\t\t//this will only work while all points lie on the x/y plane\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n\n\t\tvar result:Vector3D = new Vector3D();\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n\t\trayDirection.scaleBy(t);\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\n\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\n\t\tvar collisionCurveIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\n\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\n\t\t{\n\t\t\tvar id0:number = indices[index];\n\t\t\tvar id1:number = indices[index + 1] * posDim;\n\t\t\tvar id2:number = indices[index + 2] * posDim;\n\n\t\t\tvar ax:number = positions[id0 * posDim];\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\n\t\t\tvar bx:number = positions[id1];\n\t\t\tvar by:number = positions[id1 + 1];\n\t\t\tvar cx:number = positions[id2];\n\t\t\tvar cy:number = positions[id2 + 1];\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - p.x;\n\t\t\tvar dy:number = ay - p.y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - p.x;\n\t\t\tdy = by - p.y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - p.x;\n\t\t\tdy = cy - p.y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = p.x - ax;\n\t\t\t\tvar v2y:number = p.y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\tvar u:number = 1 - v - w;\n\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\n\t\t\tif (distance < shortestCollisionDistance) {\n\t\t\t\tshortestCollisionDistance = distance;\n\t\t\t\tcollisionCurveIndex = index/3;\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\n\t\t\t\tpickingCollisionVO.localPosition = p;\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\tpickingCollisionVO.index = index;\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (collisionCurveIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn false;\n\t}\n\n\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\n\t{\n\t\tvar uv:Point = new Point();\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\n\t\treturn uv;\n\t}\n}\n\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n//\t\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n}\n\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _x:number;\n\tprivate _y:number;\n\tprivate _view:View;\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredEntities = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _entities:Array<IEntity>;\n\tprivate _numEntities:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._entities = new Array<IEntity>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._view = view;\n\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numEntities = 0;\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\n\t\tvar entity:IEntity;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(entity = node.entity))\n\t\t\t\tthis._entities[this._numEntities++] = entity;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numEntities)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numEntities = 0;\n//\n//\t\t\tvar entity:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\tentity = entities[c];\n//\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredEntities.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._entities.length = this._numEntities;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar entity:IEntity;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numEntities; ++i) {\n\t\t\tentity = this._entities[i];\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\n\t\t\tif (entity.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds && this.getMasksCollision(entity._iAssignedMasks()) ) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate getMasksCollision(masks:Array<Array<DisplayObject>>)\n\t{\n\t\t//horrible hack for 2d masks\n\t\tif (masks != null) {\n\t\t\tvar position:Vector3D = this._view.unproject(this._x, this._y, 1000);\n\t\t\tvar numLayers:number = masks.length;\n\t\t\tvar children:Array<DisplayObject>;\n\t\t\tvar numChildren:number;\n\t\t\tvar layerHit:boolean;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\tchildren = masks[i];\n\t\t\t\tnumChildren = children.length;\n\t\t\t\tlayerHit = false;\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++) {\n\t\t\t\t\tif (children[j].hitTestPoint(position.x, position.y, true, true)) {\n\t\t\t\t\t\tlayerHit = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!layerHit)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;",
    "import DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\n/**\n * @class away.pool.ContainerNodePool\n */\nclass ContainerNodePool\n{\n\tprivate static _classPool:Object = new Object();\n\n\tprivate _containerNodePool:Object = new Object();\n\tprivate _partition:PartitionBase;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(partition:PartitionBase)\n\t{\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(displayObjectContainer:DisplayObjectContainer):ContainerNode\n\t{\n\t\treturn (this._containerNodePool[displayObjectContainer.id] || (this._containerNodePool[displayObjectContainer.id] = displayObjectContainer._iAddContainerNode(new ContainerNode(this, displayObjectContainer, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(displayObjectContainer:DisplayObjectContainer)\n\t{\n\t\tdisplayObjectContainer._iRemoveContainerNode(this._containerNodePool[displayObjectContainer.id]);\n\n\t\tdelete this._containerNodePool[displayObjectContainer.id];\n\t}\n}\n\nexport = ContainerNodePool;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\n\n/**\n * @class away.pool.EntityListItemPool\n */\nclass EntityListItemPool\n{\n\tprivate _pool:Array<EntityListItem>;\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pool = new Array<EntityListItem>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getItem():EntityListItem\n\t{\n\t\tvar item:EntityListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new EntityListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.EntityListItem\n */\nclass EntityListItem\n{\n\t/**\n\t *\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic next:EntityListItem;\n}\n\nexport = EntityListItem;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\nimport TextField\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\n\n/**\n * @class away.pool.EntityNodePool\n */\nclass EntityNodePool\n{\n\tprivate static _classPool:Object = new Object();\n\n\tprivate _entityNodePool:Object = new Object();\n\tprivate _partition:PartitionBase;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(partition:PartitionBase)\n\t{\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(displayObject:DisplayObject):EntityNode\n\t{\n\t\treturn (this._entityNodePool[displayObject.id] || (this._entityNodePool[displayObject.id] = displayObject._iAddEntityNode(new (EntityNodePool.getClass(displayObject))(this, displayObject, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(displayObject:DisplayObject)\n\t{\n\t\tdisplayObject._iRemoveEntityNode(this._entityNodePool[displayObject.id]);\n\n\t\tdelete this._entityNodePool[displayObject.id];\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerClass(entityNodeClass:IEntityNodeClass, assetClass:IAssetClass)\n\t{\n\t\tEntityNodePool._classPool[assetClass.assetType] = entityNodeClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(displayObject:DisplayObject):IEntityNodeClass\n\t{\n\t\treturn EntityNodePool._classPool[displayObject.assetType];\n\t}\n\n\tprivate static main = EntityNodePool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tEntityNodePool.registerClass(CameraNode, Camera);\n\t\tEntityNodePool.registerClass(DirectionalLightNode, DirectionalLight);\n\t\tEntityNodePool.registerClass(EntityNode, Mesh);\n\t\tEntityNodePool.registerClass(EntityNode, Billboard);\n\t\tEntityNodePool.registerClass(EntityNode, LineSegment);\n\t\tEntityNodePool.registerClass(EntityNode, TextField);\n\t\tEntityNodePool.registerClass(EntityNode, MovieClip);\n\t\tEntityNodePool.registerClass(LightProbeNode, LightProbe);\n\t\tEntityNodePool.registerClass(PointLightNode, PointLight);\n\t\tEntityNodePool.registerClass(SkyboxNode, Skybox);\n\t}\n}\n\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\n\n/**\n * @class away.pool.SubMeshPool\n */\nclass SubMeshPool\n{\n\tprivate static classPool:Object = new Object();\n\n\t/**\n\t *\n\t * @param subMeshClass\n\t */\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\n\t{\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\n\t{\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\n\t}\n\n\tprivate static main = SubMeshPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tSubMeshPool.registerClass(LineSubMesh);\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\n\t\tSubMeshPool.registerClass(CurveSubMesh);\n\t}\n}\n\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\t\t\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\t\tvar numIndices:number;\n\t\tvar numVertices:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\t\t\t\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = hw\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:Float32Array;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGeometry() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\t\t\tvar _radius = 50;\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:Float32Array;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar normals:Float32Array;\n\t\t\tvar tangents:Float32Array;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = -hh;\n\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar uvs:Float32Array;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t\tthis._pInvalidateGeometry()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _geomDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\tpublic _scaleU:number = 1;\n\tpublic _scaleV:number = 1;\n\n\tprivate _material:MaterialBase;\n\tprivate _geometry:Geometry;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryType:string;\n\tprivate _geometryTypeDirty:boolean = true;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get geometryType():string\n\t{\n\t\treturn this._geometryType;\n\t}\n\t\n\tpublic set geometryType(value:string)\n\t{\n\t\tif (this._geometryType == value)\n\t\t\treturn;\n\n\t\tthis._geometryType = value;\n\t\t\n\t\tthis.invalidateGeometryType();\n\t}\n\n\tpublic get geometry():Geometry\n\t{\n\t\tthis._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (this._scaleU = value)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (this._scaleV = value)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\n\t{\n\t\tsuper();\n\n\t\tthis._geometry = new Geometry();\n\t\tthis._material = material;\n\t\tthis._geometryType = geometryType;\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\n\t */\n\tpublic invalidateGeometryType()\n\t{\n\t\tthis._geometryTypeDirty = true;\n\t\tthis._geomDirty = true;\n\t\tthis._uvDirty = true;\n\t}\n\t\n\t/**\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidateGeometry()\n\t{\n\t\tthis._geomDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t/**\n\t * Updates the subgeometry when invalid.\n\t */\n\tprivate updateGeometryType()\n\t{\n\t\t//remove any existing sub geometry\n\t\tif (this._subGeometry)\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\n\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\n\t\t\tthis._subGeometry = triangleGeometry;\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\n\t\t}\n\n\t\tthis._geometryTypeDirty = false;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGeometry()\n\t{\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\n\n\t\tthis._geomDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._geometryTypeDirty)\n\t\t\tthis.updateGeometryType();\n\t\t\n\t\tif (this._geomDirty)\n\t\t\tthis.updateGeometry();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable;\n\t\tvar slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable, slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.renderId;\n\t\t\t\tvar mb:number = headB.renderId;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n}\n\nexport = RenderableNullSort;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass Font extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get font_styles():Array<FontTable>\n\t{\n\t\treturn this._font_styles;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport = Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * SubGeometry for this char\n\t */\n\tpublic subgeom:CurveSubGeometry;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(subgeom:CurveSubGeometry)\n\t{\n\t\tthis.char_width=0;\n\t\tthis.subgeom = subgeom;\n\t\tif (this.subgeom != null) {\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\n\t\t\t\tif(positions2[v*3]>this.char_width)\n\t\t\t\t\tthis.char_width=positions2[v*3];\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport = TesselatedFontChar;",
    "\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tpublic _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _whitespace_width:number;\n\tprivate _offset_x:number;\n\tprivate _offset_y:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t\tthis._offset_x=0;\n\t\tthis._offset_y=0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tget offset_x():number {\n\t\treturn this._offset_x;\n\t}\n\n\tset offset_x(value:number){\n\t\tthis._offset_x=value;\n\t}\n\n\tget offset_y():number {\n\t\treturn this._offset_y;\n\t}\n\n\tset offset_y(value:number){\n\t\tthis._offset_y=value;\n\t}\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_whitespace_width(value:number):void\n\t{\n\t\tthis._whitespace_width=value;\n\t}\n\tpublic get_whitespace_width():number\n\t{\n\t\treturn this._whitespace_width\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[char];\n\t}\n\t/**\n\t *\n\t */\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\n\t\tsubgeo.name=char;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\n\t}\n\n}\n\nexport = TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n\n\t/**\n\t * Used to specify an <code>static</code> TextField.\n\t */\n\tpublic static STATIC:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic fallback_font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass Single2DTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\n\n\tprivate _sampler2D:Sampler2D;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Single2DTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get sampler2D():Sampler2D\n\t{\n\t\treturn this._sampler2D;\n\t}\n\n\tpublic set sampler2D(value:Sampler2D)\n\t{\n\t\tif (this._sampler2D == value)\n\t\t\treturn;\n\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis._sampler2D = value;\n\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:Sampler2D);\n\tconstructor(source:Image2D);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof Image2D)\n\t\t\tthis.sampler2D = new Sampler2D(source);\n\t\telse\n\t\t\tthis.sampler2D = source;\n\n\t}\n}\n\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n\nclass SingleCubeTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\n\n\tprivate _samplerCube:SamplerCube;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SingleCubeTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {BitmapData}\n\t */\n\tpublic get samplerCube():SamplerCube\n\t{\n\t\treturn this._samplerCube;\n\t}\n\n\tpublic set samplerCube(value:SamplerCube)\n\t{\n\t\tif (this._samplerCube == value)\n\t\t\treturn;\n\n\t\tthis._samplerCube = value;\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:SamplerCube);\n\tconstructor(source:ImageCube);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof ImageCube)\n\t\t\tthis.samplerCube = new SamplerCube(source);\n\t\telse\n\t\t\tthis.samplerCube = source;\n\t}\n}\n\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\n\n/**\n *\n */\nclass TextureBase extends AssetBase implements IAsset\n{\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\n\n\tpublic _width:number = 1;\n\tpublic _height:number = 1;\n\n\tget width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tget height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tvar len:number = this._textureVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._textureVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateSize():void\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.push(textureVO);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t}\n\n}\n\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.CSSEntityCollector\n */\nclass CSSEntityCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase\n{\n\tpublic scene:Scene;\n\n\tpublic _pEntityHead:EntityListItem;\n\tpublic _pEntityListItemPool:EntityListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tpublic _pNumEntities:number = 0;\n\tpublic _pNumInteractiveEntities:number = 0;\n\n\tpublic isEntityCollector:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get entityHead():EntityListItem\n\t{\n\t\treturn this._pEntityHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numEntities():number\n\t{\n\t\treturn this._pNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numInteractiveEntities():number\n\t{\n\t\treturn this._pNumInteractiveEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pEntityHead = null;\n\t\tthis._pEntityListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._pNumEntities++;\n\n\t\tif (entity._iIsMouseEnabled())\n\t\t\tthis._pNumInteractiveEntities++;\n\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\n\t\titem.entity = entity;\n\n\t\titem.next = this._pEntityHead;\n\t\tthis._pEntityHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\n\t\tthis.isEntityCollector = true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static image2D(data:any):Image2D\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Image2D)\n\t\t\treturn data;\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\n\n\t\tif (data instanceof Sampler2D)\n\t\t\treturn (<Sampler2D> data).image2D;\n\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):Single2DTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\n\t\t\treturn new Single2DTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\n\t}\n}\n\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Extensions\t\t\t\t= require(\"awayjs-core/lib/utils/Extensions\");\n\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\ndeclare var SIMD:any;\n\nclass SubGeometryUtils\n{\n\tprivate static tempFloat32x4:Float32Array = new Float32Array(4);\n\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\t\n\tprivate static _indexSwap:Array<number> = new Array<number>();\n\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float4Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\twhile (i < count) {\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tfaceNormals[j++] = cx;\n\t\t\tfaceNormals[j++] = cy;\n\t\t\tfaceNormals[j++] = cz;\n\t\t\tfaceNormals[j++] = d;\n\t\t}\n\n\t\toutput.set(faceNormals, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar normals:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear normal values\n\t\twhile (i < len) {\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\n\t\t//collect face normals\n\t\twhile (i < len) {\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise normals collections\n\t\twhile (i < len) {\n\t\t\tvx = normals[i];\n\t\t\tvy = normals[i + 1];\n\t\t\tvz = normals[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\tnormals[i++] = vx*d;\n\t\t\tnormals[i++] = vy*d;\n\t\t\tnormals[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(normals);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\t\tvar uvDim:number = uvAttributes.dimensions;\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar vi:number;\n\t\tvar v0:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\twhile (i < count) {\n\t\t\tindex1 = indices[i];\n\t\t\tindex2 = indices[i + 1];\n\t\t\tindex3 = indices[i + 2];\n\n\t\t\tv0 = uvs[index1*uvDim + 1];\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\n\n\t\t\tvi = index1*positionDim;\n\t\t\tx0 = positions[vi];\n\t\t\ty0 = positions[vi + 1];\n\t\t\tz0 = positions[vi + 2];\n\t\t\tvi = index2*positionDim;\n\t\t\tdx1 = positions[vi] - x0;\n\t\t\tdy1 = positions[vi + 1] - y0;\n\t\t\tdz1 = positions[vi + 2] - z0;\n\t\t\tvi = index3*positionDim;\n\t\t\tdx2 = positions[vi] - x0;\n\t\t\tdy2 = positions[vi + 1] - y0;\n\t\t\tdz2 = positions[vi + 2] - z0;\n\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tfaceTangents[i++] = denom*cx;\n\t\t\tfaceTangents[i++] = denom*cy;\n\t\t\tfaceTangents[i++] = denom*cz;\n\t\t}\n\n\t\toutput.set(faceTangents, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar tangents:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear tangent values\n\t\twhile (i < len) {\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t}\n\n\t\tvar weight:number;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\t\tvar f4:number = 3;\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\n\t\t//collect face tangents\n\t\twhile (i < len) {\n\t\t\tweight = faceNormals[f4];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tf1 += 3;\n\t\t\tf2 += 3;\n\t\t\tf3 += 3;\n\t\t\tf4 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise tangents collections\n\t\twhile (i < len) {\n\t\t\tvx = tangents[i];\n\t\t\tvy = tangents[i + 1];\n\t\t\tvz = tangents[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\ttangents[i++] = vx*d;\n\t\t\ttangents[i++] = vy*d;\n\t\t\ttangents[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(tangents);\n\n\t\treturn output;\n\t}\n\n\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] = j*.5;\n\t\t\tuvs[i++] = 1.0 - (j & 1);\n\n\t\t\tif (++j == 3)\n\t\t\t\tj = 0;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\n\n\t\tvar index:number = 0;\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\n\n\t\twhile (index < count*4) {\n\t\t\tif (index/4 & 1) {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t} else {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t}\n\n\t\t\tindex += 4;\n\t\t}\n\n\t\toutput.set(colors, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] *= scaleU;\n\t\t\tuvs[i++] *= scaleV;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\t}\n\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar positions:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t}\n\n\t\toutput.set(positions, offset);\n\t}\n\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar normals:Float32Array;\n\t\tvar normalDim:number;\n\n\t\tif (normalAttributes) {\n\t\t\tnormals = normalAttributes.get(count, offset);\n\t\t\tnormalDim = normalAttributes.dimensions;\n\t\t}\n\n\t\tvar tangents:Float32Array;\n\t\tvar tangentDim:number;\n\n\t\tif (tangentAttributes) {\n\t\t\ttangents = tangentAttributes.get(count, offset);\n\t\t\ttangentDim = tangentAttributes.dimensions;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (normalAttributes || tangentAttributes) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = 0;\n\t\tvar ni0:number = 0;\n\t\tvar ti0:number = 0;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\t// bake position\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += positionDim;\n\n\t\t\tif\t(normals) {\n\t\t\t\t// bake normal\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += normalDim;\n\t\t\t}\n\n\t\t\tif (tangents) {\n\t\t\t\t// bake tangent\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tangentDim;\n\t\t\t}\n\t\t}\n\n\t\tpositionAttributes.set(positions, offset);\n\n\t\tif (normalAttributes)\n\t\t\tnormalAttributes.set(normals, offset);\n\n\t\tif (tangentAttributes)\n\t\t\ttangentAttributes.set(tangents, offset);\n\t}\n\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\n\t{\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\n\t\tvar numIndices:number = indexAttributes.length;\n\t\t\n\t\t//reset mappings\n\t\tindexMappings.length = 0;\n\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\n\t\t\treturn buffer;\n\n\t\tvar i:number;\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\n\t\tvar splitIndices:Array<number> = new Array<number>();\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\n\t\t\n\n\t\tindexSwap.length = numIndices;\n\t\tfor (i = 0; i < numIndices; i++)\n\t\t\tindexSwap[i] = -1;\n\n\t\tvar originalIndex:number;\n\t\tvar splitIndex:number;\n\t\tvar index:number = 0;\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\n\t\t\n\t\t// Loop over all triangles\n\t\t\n\t\ti = 0;\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\n\t\t\toriginalIndex = indices[i];\n\n\t\t\tif (indexSwap[originalIndex] >= 0) {\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\n\t\t\t} else {\n\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t// needs to be copied from the long list.\n\t\t\t\tsplitIndex = index++;\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\n\t\t\t}\n\n\t\t\t// Store new index, which may have come from the swap look-up,\n\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\tsplitIndices[i++] = splitIndex;\n\t\t}\n\t\t\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\n\t\t\n\t\tindexAttributes = indexAttributes.clone(buffer);\n\t\tindexAttributes.set(splitIndices);\n\t\t\n\t\treturn buffer;\n\t}\n\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\n\t{\n\t\tif (!indexMappings.length)\n\t\t\treturn vertexBuffer;\n\n\t\tvar stride:number = vertexBuffer.stride;\n\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\n\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\n\t\tvar splitIndex:number;\n\t\tvar originalIndex:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = indexMappings.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tsplitIndex = i*stride;\n\t\t\toriginalIndex = indexMappings[i]*stride;\n\n\t\t\tfor (j = 0; j < stride; j++)\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\t\t}\n\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\n\t\tvertexBuffer.bufferView = splitVerts;\n\n\t\treturn vertexBuffer;\n\t}\n\n\t//TODO - generate this dyanamically based on num tris\n\n\tpublic static hitTestCurveGeometry(x:number, y:number, z:number, boundingBox:Box, curveSubGeometry:CurveSubGeometry):boolean\n\t{\n\t\tvar positionAttributes:Short3Attributes = curveSubGeometry.positions;\n\t\tvar curveAttributes:Short2Attributes = curveSubGeometry.curves;\n\t\tvar count:number = curveSubGeometry.numVertices;\n\n\t\tvar posDim:number = positionAttributes.dimensions;\n\t\tvar curveDim:number = curveAttributes.dimensions;\n\n\t\tvar positions:Float32Array = positionAttributes.get(count);\n\t\tvar curves:Float32Array = curveAttributes.get(count);\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\tvar index:number = curveSubGeometry.lastCollisionIndex;\n\t\tif(index != -1 && index < count)\n\t\t{\n\t\t\tprecheck:\n\t\t\t{\n\t\t\t\tid0 = index + 2;\n\t\t\t\tid1 = index + 1;\n\t\t\t\tid2 = index + 0;\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\n\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\t\tbreak precheck;;\n\t\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\t\tbreak precheck;;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\n\n\t\t//hard coded min vertex count to bother using a grid for\n\t\tif (count > 150) {\n\t\t\tvar cells:Array<Array<number>> = curveSubGeometry.cells;\n\t\t\tvar divisions:number = cells.length? curveSubGeometry.divisions : (curveSubGeometry.divisions = Math.min(Math.ceil(Math.sqrt(count)), 32));\n\t\t\tvar conversionX:number = divisions/boundingBox.width;\n\t\t\tvar conversionY:number = divisions/boundingBox.height;\n\t\t\tvar minx:number = boundingBox.x;\n\t\t\tvar miny:number = boundingBox.y;\n\n\t\t\tif (!cells.length) { //build grid\n\t\t\t\t\n\t\t\t\t//now we have bounds start creating grid cells and filling\n\t\t\t\tcells.length = divisions * divisions;\n\n\t\t\t\tfor(var k:number = 0; k < count; k+=3) {\n\t\t\t\t\tid0 = k + 2;\n\t\t\t\t\tid1 = k + 1;\n\t\t\t\t\tid2 = k + 0;\n\n\t\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t\t//subtractions to push into positive space\n\t\t\t\t\tvar min_index_x:number = Math.floor((Math.min(ax, bx, cx) - minx)*conversionX);\n\t\t\t\t\tvar min_index_y:number = Math.floor((Math.min(ay, by, cy) - miny)*conversionY);\n\n\t\t\t\t\tvar max_index_x:number = Math.floor((Math.max(ax, bx, cx) - minx)*conversionX);\n\t\t\t\t\tvar max_index_y:number = Math.floor((Math.max(ay, by, cy) - miny)*conversionY);\n\n\n\t\t\t\t\tfor (var i:number = min_index_x; i <= max_index_x; i++) {\n\t\t\t\t\t\tfor (var j:number = min_index_y; j <= max_index_y; j++) {\n\t\t\t\t\t\t\tvar index:number = i + j*divisions;\n\t\t\t\t\t\t\tvar nodes:Array<number> = cells[index] || (cells[index] = new Array<number>());\n\n\t\t\t\t\t\t\t//push in the triangle ids\n\t\t\t\t\t\t\tnodes.push(id0, id1, id2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar index_x:number = Math.floor((x - minx)*conversionX);\n\t\t\tvar index_y:number = Math.floor((y - miny)*conversionY);\n\n\t\t\tif ((index_x < 0 || index_x > divisions || index_y < 0 || index_y > divisions))\n\t\t\t\treturn false;\n\n\t\t\tvar nodes:Array<number> = cells[index_x + index_y*divisions];\n\n\t\t\tif (nodes == null)\n\t\t\t\treturn false;\n\n\t\t\tvar nodeCount:number = nodes.length;\n\t\t\tfor (var k:number = 0; k < nodeCount; k += 3) {\n\t\t\t\tid0 = nodes[k];\n\t\t\t\tid1 = nodes[k + 1];\n\t\t\t\tid2 = nodes[k + 2];\n\n\t\t\t\tif(id2 == index) continue;\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\n\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t\t\tif (d > 0 && az == -1)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\telse if (d < 0 && az == 1)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tcurveSubGeometry.lastCollisionIndex = id2;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t//brute force\n\t\tfor(var k:number = 0; k < count; k += 3) {\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tif(id2 == index) continue;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - x;\n\t\t\tvar dy:number = ay - y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - x;\n\t\t\tdy = by - y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - x;\n\t\t\tdy = cy - y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t//here be dragons\n\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\tvar vv:number = w;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurveSubGeometry.lastCollisionIndex = id2;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic static getCurveGeometryBoxBounds(positionAttributes:Float3Attributes, output:Box, count:number, offset:number = 0):Box\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\t\tvar posDim2:number = posDim*2;\n\n\t\tif (output == null)\n\t\t\toutput = new Box();\n\n\t\tif (Extensions.SIMD) {\n\t\t\tvar f32x4 = SIMD.float32x4 || SIMD.Float32x4;\n\t\t\tvar load2 = f32x4.loadXY || f32x4.load2;\n\t\t\tvar store2 = f32x4.storeXY || f32x4.store2;\n\t\t\tvar p;\n\t\t\tvar min = f32x4.swizzle(load2(output.rawData, 0), 0, 1, 0, 1);\n\t\t\tvar max = f32x4.add(f32x4.swizzle(load2(output.rawData, 3), 0, 1, 0, 1), min);\n\n\t\t\tvar len:number = positions.length;\n\t\t\tfor (var i:number = 0; i < len; i += posDim2) { //double-up the 2d calculations\n\t\t\t\tp = (i + posDim == len)? load2(positions, i) : f32x4.shuffle(load2(positions, i), load2(positions, i + posDim), 0, 1, 4, 5);\n\t\t\t\tmin = f32x4.min(p, min);\n\t\t\t\tmax = f32x4.max(p, max);\n\t\t\t}\n\n\t\t\tmin = f32x4.min(min, f32x4.swizzle(min, 2, 3, 0, 1));\n\t\t\tmax = f32x4.max(max, f32x4.swizzle(max, 2, 3, 0, 1));\n\t\t\tstore2(output.rawData, 3, f32x4.sub(max, store2(output.rawData, 0, min)));\n\t\t} else {\n\t\t\tvar minX, minY, maxX, maxY;\n\n\t\t\tmaxX = output.width + (minX = output.x);\n\t\t\tmaxY = output.height + (minY = output.y);\n\n\t\t\tvar len:number = positions.length;\n\t\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\t\tp = positions[i];\n\t\t\t\tif (p < minX)\n\t\t\t\t\tminX = p;\n\t\t\t\telse if (p > maxX)\n\t\t\t\t\tmaxX = p;\n\n\t\t\t\tp = positions[i + 1];\n\n\t\t\t\tif (p < minY)\n\t\t\t\t\tminY = p;\n\t\t\t\telse if (p > maxY)\n\t\t\t\t\tmaxY = p;\n\t\t\t}\n\n\t\t\toutput.width = maxX - (output.x = minX);\n\t\t\toutput.height = maxY - (output.y = minY);\n\t\t}\n\n\t\treturn output;\n\t}\n\n\n\tpublic static getTriangleGeometryBoxBounds(positionAttributes:Float3Attributes, output:Box, count:number, offset:number = 0):Box\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\n\t\tif (output == null)\n\t\t\toutput = new Box();\n\n\t\tif (SIMD) {\n\t\t\tvar f32x4 = SIMD.float32x4 || SIMD.Float32x4;\n\t\t\tvar load = f32x4.loadXYZ || f32x4.load3;\n\t\t\tvar store = f32x4.storeXYZ || f32x4.store3;\n\t\t\tvar p;\n\t\t\tvar min = load(output.rawData, 0);\n\t\t\tvar max = f32x4.add(load(output.rawData, 3), min);\n\n\t\t\tvar len:number = positions.length;\n\t\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\t\tp = load(positions, i);\n\t\t\t\tmin = f32x4.min(p, min);\n\t\t\t\tmax = f32x4.max(p, max);\n\t\t\t}\n\n\t\t\tstore(output.rawData, 3, f32x4.sub(max, store(output.rawData, 0, min)));\n\t\t} else {\n\t\t\tvar pos:number;\n\t\t\tvar minX:number = output.x;\n\t\t\tvar minY:number = output.y;\n\t\t\tvar minZ:number = output.z;\n\t\t\tvar maxX:number = output.width + minX;\n\t\t\tvar maxY:number = output.height + minY;\n\t\t\tvar maxZ:number = output.depth + minZ;\n\n\t\t\tvar len:number = positions.length;\n\t\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\t\tpos = positions[i];\n\t\t\t\tif (pos < minX)\n\t\t\t\t\tminX = pos;\n\t\t\t\telse if (pos > maxX)\n\t\t\t\t\tmaxX = pos;\n\n\t\t\t\tpos = positions[i + 1];\n\n\t\t\t\tif (pos < minY)\n\t\t\t\t\tminY = pos;\n\t\t\t\telse if (pos > maxY)\n\t\t\t\t\tmaxY = pos;\n\n\t\t\t\tpos = positions[i + 2];\n\n\t\t\t\tif (pos < minZ)\n\t\t\t\t\tminZ = pos;\n\t\t\t\telse if (pos > maxZ)\n\t\t\t\t\tmaxZ = pos;\n\t\t\t}\n\n\t\t\toutput.width = maxX - (output.x = minX);\n\t\t\toutput.height = maxY - (output.y = minY);\n\t\t\toutput.depth = maxZ - (output.z = minZ);\n\t\t}\n\n\t\treturn output;\n\t}\n\n\tpublic static getTriangleGeometrySphereBounds(positionAttributes:Float3Attributes, center:Vector3D, output:Sphere, count:number, offset:number = 0):Sphere\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\n\t\tif (output == null)\n\t\t\toutput = new Sphere();\n\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar f32x4 = SIMD.float32x4 || SIMD.Float32x4;\n\t\tvar load = f32x4.loadXYZ || f32x4.load123;\n\t\tvar store = f32x4.storeXYZ || f32x4.store123;\n\t\tvar c = f32x4(center.x, center.y, center.z, 0.0);\n\t\tvar d;\n\t\tvar temp:Float32Array = SubGeometryUtils.tempFloat32x4;\n\n\t\tvar len:number = positions.length;\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\td = f32x4.sub(load(positions, i), c);\n\t\t\tstore(temp, 0, f32x4.mul(d, d));\n\n\t\t\tradiusSquared = temp[0]*temp[0] + temp[1]*temp[1] + temp[2]*temp[2];\n\n\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t}\n\n\t\toutput.x = center.x;\n\t\toutput.y = center.y;\n\t\toutput.z = center.z;\n\t\toutput.radius = Math.sqrt(maxRadiusSquared);\n\n\t\treturn output;\n\t}\n\n}\n\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}